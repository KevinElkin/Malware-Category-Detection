.class public Lretrofit/MockHttpException;
.super Ljava/lang/RuntimeException;
.source "MockHttpException.java"


# instance fields
.field final code:I

.field final headers:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Lretrofit/client/Header;",
            ">;"
        }
    .end annotation
.end field

.field final reason:Ljava/lang/String;

.field final responseBody:Ljava/lang/Object;


# direct methods
.method public constructor <init>(ILjava/lang/String;Ljava/lang/Object;)V
    .locals 3
    .param p1, "code"    # I
    .param p2, "reason"    # Ljava/lang/String;
    .param p3, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 80
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "HTTP "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    .line 70
    new-instance v0, Ljava/util/ArrayList;

    const/4 v1, 0x2

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v0, p0, Lretrofit/MockHttpException;->headers:Ljava/util/List;

    .line 81
    const/16 v0, 0x12c

    if-lt p1, v0, :cond_0

    const/16 v0, 0x257

    if-le p1, v0, :cond_1

    .line 82
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unsupported HTTP error code: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 84
    :cond_1
    if-eqz p2, :cond_2

    const-string v0, ""

    invoke-virtual {p2}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 85
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Reason must not be blank."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 87
    :cond_3
    iput p1, p0, Lretrofit/MockHttpException;->code:I

    .line 88
    iput-object p2, p0, Lretrofit/MockHttpException;->reason:Ljava/lang/String;

    .line 89
    iput-object p3, p0, Lretrofit/MockHttpException;->responseBody:Ljava/lang/Object;

    .line 90
    return-void
.end method

.method public static newBadRequest(Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 44
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x190

    const-string v2, "Bad Request"

    invoke-direct {v0, v1, v2, p0}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    return-object v0
.end method

.method public static newForbidden(Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 54
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x193

    const-string v2, "Forbidded"

    invoke-direct {v0, v1, v2, p0}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    return-object v0
.end method

.method public static newInternalError(Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 64
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x1f4

    const-string v2, "Internal Server Error"

    invoke-direct {v0, v1, v2, p0}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    return-object v0
.end method

.method public static newMovedPermanentely(Ljava/lang/String;Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "location"    # Ljava/lang/String;
    .param p1, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 26
    if-eqz p0, :cond_0

    const-string v0, ""

    invoke-virtual {p0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 27
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Location must not be blank."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 29
    :cond_1
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x12d

    const-string v2, "Moved Permanently"

    invoke-direct {v0, v1, v2, p1}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    const-string v1, "Location"

    .line 30
    invoke-virtual {v0, v1, p0}, Lretrofit/MockHttpException;->withHeader(Ljava/lang/String;Ljava/lang/String;)Lretrofit/MockHttpException;

    move-result-object v0

    return-object v0
.end method

.method public static newMovedTemporarily(Ljava/lang/String;Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "location"    # Ljava/lang/String;
    .param p1, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 35
    if-eqz p0, :cond_0

    const-string v0, ""

    invoke-virtual {p0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 36
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Location must not be blank."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 38
    :cond_1
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x12e

    const-string v2, "Moved Temporarily"

    invoke-direct {v0, v1, v2, p1}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    const-string v1, "Location"

    .line 39
    invoke-virtual {v0, v1, p0}, Lretrofit/MockHttpException;->withHeader(Ljava/lang/String;Ljava/lang/String;)Lretrofit/MockHttpException;

    move-result-object v0

    return-object v0
.end method

.method public static newNotFound(Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 59
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x194

    const-string v2, "Not Found"

    invoke-direct {v0, v1, v2, p0}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    return-object v0
.end method

.method public static newUnauthorized(Ljava/lang/Object;)Lretrofit/MockHttpException;
    .locals 3
    .param p0, "responseBody"    # Ljava/lang/Object;

    .prologue
    .line 49
    new-instance v0, Lretrofit/MockHttpException;

    const/16 v1, 0x191

    const-string v2, "Unauthorized"

    invoke-direct {v0, v1, v2, p0}, Lretrofit/MockHttpException;-><init>(ILjava/lang/String;Ljava/lang/Object;)V

    return-object v0
.end method


# virtual methods
.method toResponse(Lretrofit/converter/Converter;)Lretrofit/client/Response;
    .locals 7
    .param p1, "converter"    # Lretrofit/converter/Converter;

    .prologue
    .line 105
    new-instance v0, Lretrofit/client/Response;

    const-string v1, ""

    iget v2, p0, Lretrofit/MockHttpException;->code:I

    iget-object v3, p0, Lretrofit/MockHttpException;->reason:Ljava/lang/String;

    iget-object v4, p0, Lretrofit/MockHttpException;->headers:Ljava/util/List;

    new-instance v5, Lretrofit/MockTypedInput;

    iget-object v6, p0, Lretrofit/MockHttpException;->responseBody:Ljava/lang/Object;

    invoke-direct {v5, p1, v6}, Lretrofit/MockTypedInput;-><init>(Lretrofit/converter/Converter;Ljava/lang/Object;)V

    invoke-direct/range {v0 .. v5}, Lretrofit/client/Response;-><init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Lretrofit/mime/TypedInput;)V

    return-object v0
.end method

.method public withHeader(Ljava/lang/String;Ljava/lang/String;)Lretrofit/MockHttpException;
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "value"    # Ljava/lang/String;

    .prologue
    .line 94
    if-eqz p1, :cond_0

    const-string v0, ""

    invoke-virtual {p1}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 95
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Header name must not be blank."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 97
    :cond_1
    if-eqz p2, :cond_2

    const-string v0, ""

    invoke-virtual {p2}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 98
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Header value must not be blank."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 100
    :cond_3
    iget-object v0, p0, Lretrofit/MockHttpException;->headers:Ljava/util/List;

    new-instance v1, Lretrofit/client/Header;

    invoke-direct {v1, p1, p2}, Lretrofit/client/Header;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 101
    return-object p0
.end method
