.class public abstract Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;
.super Lcom/raizlabs/android/dbflow/structure/BaseModel;
.source "BaseSyncableProviderModel.java"

# interfaces
.implements Lcom/raizlabs/android/dbflow/structure/provider/ModelProvider;


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 13
    invoke-direct {p0}, Lcom/raizlabs/android/dbflow/structure/BaseModel;-><init>()V

    return-void
.end method


# virtual methods
.method public delete()V
    .locals 1

    .prologue
    .line 35
    invoke-super {p0}, Lcom/raizlabs/android/dbflow/structure/BaseModel;->delete()V

    .line 36
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getDeleteUri()Landroid/net/Uri;

    move-result-object v0

    invoke-static {v0, p0}, Lcom/raizlabs/android/dbflow/structure/provider/ContentUtils;->delete(Landroid/net/Uri;Lcom/raizlabs/android/dbflow/structure/Model;)I

    .line 37
    return-void
.end method

.method public insert()V
    .locals 1

    .prologue
    .line 18
    invoke-super {p0}, Lcom/raizlabs/android/dbflow/structure/BaseModel;->insert()V

    .line 19
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getInsertUri()Landroid/net/Uri;

    move-result-object v0

    invoke-static {v0, p0}, Lcom/raizlabs/android/dbflow/structure/provider/ContentUtils;->insert(Landroid/net/Uri;Lcom/raizlabs/android/dbflow/structure/Model;)Landroid/net/Uri;

    .line 20
    return-void
.end method

.method public load()V
    .locals 3

    .prologue
    .line 59
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getModelAdapter()Lcom/raizlabs/android/dbflow/structure/ModelAdapter;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/raizlabs/android/dbflow/structure/ModelAdapter;->getPrimaryConditionClause(Lcom/raizlabs/android/dbflow/structure/Model;)Lcom/raizlabs/android/dbflow/sql/language/ConditionGroup;

    move-result-object v0

    const-string v1, ""

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/String;

    invoke-virtual {p0, v0, v1, v2}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->load(Lcom/raizlabs/android/dbflow/sql/language/ConditionGroup;Ljava/lang/String;[Ljava/lang/String;)V

    .line 60
    return-void
.end method

.method public varargs load(Lcom/raizlabs/android/dbflow/sql/language/ConditionGroup;Ljava/lang/String;[Ljava/lang/String;)V
    .locals 3
    .param p1, "whereConditionGroup"    # Lcom/raizlabs/android/dbflow/sql/language/ConditionGroup;
    .param p2, "orderBy"    # Ljava/lang/String;
    .param p3, "columns"    # [Ljava/lang/String;

    .prologue
    .line 49
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getQueryUri()Landroid/net/Uri;

    move-result-object v2

    invoke-static {v1, v2, p1, p2, p3}, Lcom/raizlabs/android/dbflow/structure/provider/ContentUtils;->query(Landroid/content/ContentResolver;Landroid/net/Uri;Lcom/raizlabs/android/dbflow/sql/language/ConditionGroup;Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    .line 50
    .local v0, "cursor":Landroid/database/Cursor;
    if-eqz v0, :cond_0

    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 51
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getModelAdapter()Lcom/raizlabs/android/dbflow/structure/ModelAdapter;

    move-result-object v1

    invoke-virtual {v1, v0, p0}, Lcom/raizlabs/android/dbflow/structure/ModelAdapter;->loadFromCursor(Landroid/database/Cursor;Lcom/raizlabs/android/dbflow/structure/Model;)V

    .line 52
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 54
    :cond_0
    return-void
.end method

.method public save()V
    .locals 1

    .prologue
    .line 24
    invoke-super {p0}, Lcom/raizlabs/android/dbflow/structure/BaseModel;->save()V

    .line 26
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->exists()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 27
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getUpdateUri()Landroid/net/Uri;

    move-result-object v0

    invoke-static {v0, p0}, Lcom/raizlabs/android/dbflow/structure/provider/ContentUtils;->update(Landroid/net/Uri;Lcom/raizlabs/android/dbflow/structure/Model;)I

    .line 31
    :goto_0
    return-void

    .line 29
    :cond_0
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getInsertUri()Landroid/net/Uri;

    move-result-object v0

    invoke-static {v0, p0}, Lcom/raizlabs/android/dbflow/structure/provider/ContentUtils;->insert(Landroid/net/Uri;Lcom/raizlabs/android/dbflow/structure/Model;)Landroid/net/Uri;

    goto :goto_0
.end method

.method public update()V
    .locals 1

    .prologue
    .line 41
    invoke-super {p0}, Lcom/raizlabs/android/dbflow/structure/BaseModel;->update()V

    .line 42
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/provider/BaseSyncableProviderModel;->getUpdateUri()Landroid/net/Uri;

    move-result-object v0

    invoke-static {v0, p0}, Lcom/raizlabs/android/dbflow/structure/provider/ContentUtils;->update(Landroid/net/Uri;Lcom/raizlabs/android/dbflow/structure/Model;)I

    .line 43
    return-void
.end method
