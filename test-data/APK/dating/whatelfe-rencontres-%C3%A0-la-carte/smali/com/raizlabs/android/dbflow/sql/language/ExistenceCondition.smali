.class public Lcom/raizlabs/android/dbflow/sql/language/ExistenceCondition;
.super Ljava/lang/Object;
.source "ExistenceCondition.java"

# interfaces
.implements Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;


# instance fields
.field private innerWhere:Lcom/raizlabs/android/dbflow/sql/language/Where;


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 10
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public appendConditionToQuery(Lcom/raizlabs/android/dbflow/sql/QueryBuilder;)V
    .locals 3
    .param p1, "queryBuilder"    # Lcom/raizlabs/android/dbflow/sql/QueryBuilder;

    .prologue
    .line 16
    const-string v0, "EXISTS"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/raizlabs/android/dbflow/sql/language/ExistenceCondition;->innerWhere:Lcom/raizlabs/android/dbflow/sql/language/Where;

    invoke-virtual {v2}, Lcom/raizlabs/android/dbflow/sql/language/Where;->getQuery()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v0, v1}, Lcom/raizlabs/android/dbflow/sql/QueryBuilder;->appendQualifier(Ljava/lang/String;Ljava/lang/String;)Lcom/raizlabs/android/dbflow/sql/QueryBuilder;

    .line 17
    return-void
.end method

.method public columnName()Ljava/lang/String;
    .locals 2

    .prologue
    .line 21
    new-instance v0, Ljava/lang/RuntimeException;

    const-string v1, "Method not valid for ExistenceCondition"

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public hasSeparator()Z
    .locals 1

    .prologue
    .line 37
    const/4 v0, 0x0

    return v0
.end method

.method public operation()Ljava/lang/String;
    .locals 1

    .prologue
    .line 42
    const-string v0, ""

    return-object v0
.end method

.method public separator(Ljava/lang/String;)Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;
    .locals 2
    .param p1, "separator"    # Ljava/lang/String;

    .prologue
    .line 32
    new-instance v0, Ljava/lang/RuntimeException;

    const-string v1, "Method not valid for ExistenceCondition"

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public separator()Ljava/lang/String;
    .locals 2

    .prologue
    .line 26
    new-instance v0, Ljava/lang/RuntimeException;

    const-string v1, "Method not valid for ExistenceCondition"

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public value()Ljava/lang/Object;
    .locals 1

    .prologue
    .line 47
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/sql/language/ExistenceCondition;->innerWhere:Lcom/raizlabs/android/dbflow/sql/language/Where;

    return-object v0
.end method

.method public where(Lcom/raizlabs/android/dbflow/sql/language/Where;)Lcom/raizlabs/android/dbflow/sql/language/ExistenceCondition;
    .locals 0
    .param p1, "where"    # Lcom/raizlabs/android/dbflow/sql/language/Where;
        .annotation build Landroid/support/annotation/NonNull;
        .end annotation
    .end param

    .prologue
    .line 51
    iput-object p1, p0, Lcom/raizlabs/android/dbflow/sql/language/ExistenceCondition;->innerWhere:Lcom/raizlabs/android/dbflow/sql/language/Where;

    .line 52
    return-object p0
.end method
