.class public Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;
.super Lcom/raizlabs/android/dbflow/structure/database/BaseDatabaseHelper;
.source "DatabaseHelperDelegate.java"


# static fields
.field public static final TEMP_DB_NAME:Ljava/lang/String; = "temp-"


# instance fields
.field private final backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;
    .annotation build Landroid/support/annotation/Nullable;
    .end annotation
.end field

.field private databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;


# direct methods
.method public constructor <init>(Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;)V
    .locals 0
    .param p1, "databaseHelperListener"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;
    .param p2, "databaseDefinition"    # Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;
    .param p3, "backupHelper"    # Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;
        .annotation build Landroid/support/annotation/Nullable;
        .end annotation
    .end param

    .prologue
    .line 38
    invoke-direct {p0, p2}, Lcom/raizlabs/android/dbflow/structure/database/BaseDatabaseHelper;-><init>(Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;)V

    .line 39
    iput-object p1, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    .line 40
    iput-object p3, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    .line 41
    return-void
.end method

.method static synthetic access$000(Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;)Ljava/lang/String;
    .locals 1
    .param p0, "x0"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;

    .prologue
    .line 24
    invoke-direct {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getTempDbFileName()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$100(Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;Ljava/io/File;Ljava/io/InputStream;)V
    .locals 0
    .param p0, "x0"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;
    .param p1, "x1"    # Ljava/io/File;
    .param p2, "x2"    # Ljava/io/InputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 24
    invoke-direct {p0, p1, p2}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->writeDB(Ljava/io/File;Ljava/io/InputStream;)V

    return-void
.end method

.method private getTempDbFileName()Ljava/lang/String;
    .locals 1

    .prologue
    .line 94
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    invoke-static {v0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getTempDbFileName(Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static getTempDbFileName(Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;)Ljava/lang/String;
    .locals 2
    .param p0, "databaseDefinition"    # Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    .prologue
    .line 29
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "temp-"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ".db"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private writeDB(Ljava/io/File;Ljava/io/InputStream;)V
    .locals 4
    .param p1, "dbPath"    # Ljava/io/File;
    .param p2, "existingDB"    # Ljava/io/InputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 209
    new-instance v2, Ljava/io/FileOutputStream;

    invoke-direct {v2, p1}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V

    .line 211
    .local v2, "output":Ljava/io/OutputStream;
    const/16 v3, 0x400

    new-array v0, v3, [B

    .line 214
    .local v0, "buffer":[B
    :goto_0
    invoke-virtual {p2, v0}, Ljava/io/InputStream;->read([B)I

    move-result v1

    .local v1, "length":I
    if-lez v1, :cond_0

    .line 215
    const/4 v3, 0x0

    invoke-virtual {v2, v0, v3, v1}, Ljava/io/OutputStream;->write([BII)V

    goto :goto_0

    .line 218
    :cond_0
    invoke-virtual {v2}, Ljava/io/OutputStream;->flush()V

    .line 219
    invoke-virtual {v2}, Ljava/io/OutputStream;->close()V

    .line 220
    invoke-virtual {p2}, Ljava/io/InputStream;->close()V

    .line 221
    return-void
.end method


# virtual methods
.method public backupDB()V
    .locals 3

    .prologue
    .line 265
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->backupEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->areConsistencyChecksEnabled()Z

    move-result v0

    if-nez v0, :cond_1

    .line 266
    :cond_0
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Backups are not enabled for : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v2

    invoke-virtual {v2}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ". Please consider adding "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "both backupEnabled and consistency checks enabled to the Database annotation"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 270
    :cond_1
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    new-instance v1, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate$1;

    invoke-direct {v1, p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate$1;-><init>(Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;)V

    invoke-virtual {v0, v1}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->beginTransactionAsync(Lcom/raizlabs/android/dbflow/structure/database/transaction/ITransaction;)Lcom/raizlabs/android/dbflow/structure/database/transaction/Transaction$Builder;

    move-result-object v0

    .line 299
    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/structure/database/transaction/Transaction$Builder;->build()Lcom/raizlabs/android/dbflow/structure/database/transaction/Transaction;

    move-result-object v0

    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/structure/database/transaction/Transaction;->execute()V

    .line 301
    return-void
.end method

.method public getWritableDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;
    .locals 1

    .prologue
    .line 304
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getWritableDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    move-result-object v0

    return-object v0
.end method

.method public isDatabaseIntegrityOk()Z
    .locals 1

    .prologue
    .line 144
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getWritableDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->isDatabaseIntegrityOk(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)Z

    move-result v0

    return v0
.end method

.method public isDatabaseIntegrityOk(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)Z
    .locals 6
    .param p1, "databaseWrapper"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    .prologue
    .line 155
    const/4 v0, 0x1

    .line 157
    .local v0, "integrityOk":Z
    const/4 v1, 0x0

    .line 159
    .local v1, "prog":Lcom/raizlabs/android/dbflow/structure/database/DatabaseStatement;
    :try_start_0
    const-string v3, "PRAGMA quick_check(1)"

    invoke-interface {p1, v3}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;->compileStatement(Ljava/lang/String;)Lcom/raizlabs/android/dbflow/structure/database/DatabaseStatement;

    move-result-object v1

    .line 160
    invoke-interface {v1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseStatement;->simpleQueryForString()Ljava/lang/String;

    move-result-object v2

    .line 161
    .local v2, "rslt":Ljava/lang/String;
    const-string v3, "ok"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 163
    sget-object v3, Lcom/raizlabs/android/dbflow/config/FlowLog$Level;->E:Lcom/raizlabs/android/dbflow/config/FlowLog$Level;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "PRAGMA integrity_check on "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v5

    invoke-virtual {v5}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " returned: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/raizlabs/android/dbflow/config/FlowLog;->log(Lcom/raizlabs/android/dbflow/config/FlowLog$Level;Ljava/lang/String;)V

    .line 165
    const/4 v0, 0x0

    .line 167
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v3

    invoke-virtual {v3}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->backupEnabled()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 168
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->restoreBackUp()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 172
    :cond_0
    if-eqz v1, :cond_1

    .line 173
    invoke-interface {v1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseStatement;->close()V

    .line 176
    :cond_1
    return v0

    .line 172
    .end local v2    # "rslt":Ljava/lang/String;
    :catchall_0
    move-exception v3

    if-eqz v1, :cond_2

    .line 173
    invoke-interface {v1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseStatement;->close()V

    :cond_2
    throw v3
.end method

.method public movePrepackagedDB(Ljava/lang/String;Ljava/lang/String;)V
    .locals 6
    .param p1, "databaseName"    # Ljava/lang/String;
    .param p2, "prepackagedName"    # Ljava/lang/String;

    .prologue
    .line 105
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-virtual {v4, p1}, Landroid/content/Context;->getDatabasePath(Ljava/lang/String;)Ljava/io/File;

    move-result-object v0

    .line 108
    .local v0, "dbPath":Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v4

    if-eqz v4, :cond_1

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v4

    invoke-virtual {v4}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->areConsistencyChecksEnabled()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 109
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v4

    invoke-virtual {v4}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->areConsistencyChecksEnabled()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 110
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getWritableDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    move-result-object v4

    invoke-virtual {p0, v4}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->isDatabaseIntegrityOk(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 134
    :cond_0
    :goto_0
    return-void

    .line 115
    :cond_1
    invoke-virtual {v0}, Ljava/io/File;->getParentFile()Ljava/io/File;

    move-result-object v4

    invoke-virtual {v4}, Ljava/io/File;->mkdirs()Z

    .line 120
    :try_start_0
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-direct {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getTempDbFileName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/content/Context;->getDatabasePath(Ljava/lang/String;)Ljava/io/File;

    move-result-object v2

    .line 123
    .local v2, "existingDb":Ljava/io/File;
    invoke-virtual {v2}, Ljava/io/File;->exists()Z

    move-result v4

    if-eqz v4, :cond_3

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v4

    invoke-virtual {v4}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->backupEnabled()Z

    move-result v4

    if-eqz v4, :cond_2

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v4

    invoke-virtual {v4}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->backupEnabled()Z

    move-result v4

    if-eqz v4, :cond_3

    iget-object v4, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    if-eqz v4, :cond_3

    iget-object v4, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    .line 124
    invoke-interface {v4}, Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;->getDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    move-result-object v4

    invoke-virtual {p0, v4}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->isDatabaseIntegrityOk(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 125
    :cond_2
    new-instance v3, Ljava/io/FileInputStream;

    invoke-direct {v3, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    .line 129
    .local v3, "inputStream":Ljava/io/InputStream;
    :goto_1
    invoke-direct {p0, v0, v3}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->writeDB(Ljava/io/File;Ljava/io/InputStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 131
    .end local v2    # "existingDb":Ljava/io/File;
    .end local v3    # "inputStream":Ljava/io/InputStream;
    :catch_0
    move-exception v1

    .line 132
    .local v1, "e":Ljava/io/IOException;
    sget-object v4, Lcom/raizlabs/android/dbflow/config/FlowLog$Level;->W:Lcom/raizlabs/android/dbflow/config/FlowLog$Level;

    const-string v5, "Failed to open file"

    invoke-static {v4, v5, v1}, Lcom/raizlabs/android/dbflow/config/FlowLog;->log(Lcom/raizlabs/android/dbflow/config/FlowLog$Level;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_0

    .line 127
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v2    # "existingDb":Ljava/io/File;
    :cond_3
    :try_start_1
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;

    move-result-object v4

    invoke-virtual {v4, p2}, Landroid/content/res/AssetManager;->open(Ljava/lang/String;)Ljava/io/InputStream;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    move-result-object v3

    .restart local v3    # "inputStream":Ljava/io/InputStream;
    goto :goto_1
.end method

.method public onCreate(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)V
    .locals 1
    .param p1, "db"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    .prologue
    .line 67
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    if-eqz v0, :cond_0

    .line 68
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    invoke-interface {v0, p1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;->onCreate(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)V

    .line 70
    :cond_0
    invoke-super {p0, p1}, Lcom/raizlabs/android/dbflow/structure/database/BaseDatabaseHelper;->onCreate(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)V

    .line 71
    return-void
.end method

.method public onOpen(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)V
    .locals 1
    .param p1, "db"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    .prologue
    .line 83
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    if-eqz v0, :cond_0

    .line 84
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    invoke-interface {v0, p1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;->onOpen(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)V

    .line 86
    :cond_0
    invoke-super {p0, p1}, Lcom/raizlabs/android/dbflow/structure/database/BaseDatabaseHelper;->onOpen(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)V

    .line 87
    return-void
.end method

.method public onUpgrade(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;II)V
    .locals 1
    .param p1, "db"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;
    .param p2, "oldVersion"    # I
    .param p3, "newVersion"    # I

    .prologue
    .line 75
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    if-eqz v0, :cond_0

    .line 76
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    invoke-interface {v0, p1, p2, p3}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;->onUpgrade(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;II)V

    .line 78
    :cond_0
    invoke-super {p0, p1, p2, p3}, Lcom/raizlabs/android/dbflow/structure/database/BaseDatabaseHelper;->onUpgrade(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;II)V

    .line 79
    return-void
.end method

.method public performRestoreFromBackup()V
    .locals 2

    .prologue
    .line 44
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseFileName()Ljava/lang/String;

    move-result-object v0

    .line 45
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v1

    invoke-virtual {v1}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseFileName()Ljava/lang/String;

    move-result-object v1

    .line 44
    invoke-virtual {p0, v0, v1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->movePrepackagedDB(Ljava/lang/String;Ljava/lang/String;)V

    .line 47
    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v0

    invoke-virtual {v0}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->backupEnabled()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 48
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    if-nez v0, :cond_0

    .line 49
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "the passed backup helper was null, even though backup is enabled. Ensure that its passed in."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 52
    :cond_0
    invoke-direct {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getTempDbFileName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v1

    invoke-virtual {v1}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseFileName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->restoreDatabase(Ljava/lang/String;Ljava/lang/String;)V

    .line 53
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    invoke-interface {v0}, Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;->getDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    .line 55
    :cond_1
    return-void
.end method

.method public restoreBackUp()Z
    .locals 7

    .prologue
    .line 184
    const/4 v3, 0x1

    .line 186
    .local v3, "success":Z
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "temp-"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v6

    invoke-virtual {v6}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/content/Context;->getDatabasePath(Ljava/lang/String;)Ljava/io/File;

    move-result-object v1

    .line 187
    .local v1, "db":Ljava/io/File;
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v5

    invoke-virtual {v5}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/content/Context;->getDatabasePath(Ljava/lang/String;)Ljava/io/File;

    move-result-object v0

    .line 188
    .local v0, "corrupt":Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->delete()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 190
    :try_start_0
    new-instance v4, Ljava/io/FileInputStream;

    invoke-direct {v4, v1}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    invoke-direct {p0, v0, v4}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->writeDB(Ljava/io/File;Ljava/io/InputStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 198
    :goto_0
    return v3

    .line 191
    :catch_0
    move-exception v2

    .line 192
    .local v2, "e":Ljava/io/IOException;
    invoke-static {v2}, Lcom/raizlabs/android/dbflow/config/FlowLog;->logError(Ljava/lang/Throwable;)V

    .line 193
    const/4 v3, 0x0

    .line 194
    goto :goto_0

    .line 196
    .end local v2    # "e":Ljava/io/IOException;
    :cond_0
    sget-object v4, Lcom/raizlabs/android/dbflow/config/FlowLog$Level;->E:Lcom/raizlabs/android/dbflow/config/FlowLog$Level;

    const-string v5, "Failed to delete DB"

    invoke-static {v4, v5}, Lcom/raizlabs/android/dbflow/config/FlowLog;->log(Lcom/raizlabs/android/dbflow/config/FlowLog$Level;Ljava/lang/String;)V

    goto :goto_0
.end method

.method public restoreDatabase(Ljava/lang/String;Ljava/lang/String;)V
    .locals 6
    .param p1, "databaseName"    # Ljava/lang/String;
    .param p2, "prepackagedName"    # Ljava/lang/String;

    .prologue
    .line 231
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-virtual {v4, p1}, Landroid/content/Context;->getDatabasePath(Ljava/lang/String;)Ljava/io/File;

    move-result-object v0

    .line 234
    .local v0, "dbPath":Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 257
    :goto_0
    return-void

    .line 239
    :cond_0
    invoke-virtual {v0}, Ljava/io/File;->getParentFile()Ljava/io/File;

    move-result-object v4

    invoke-virtual {v4}, Ljava/io/File;->mkdirs()Z

    .line 244
    :try_start_0
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v5

    invoke-virtual {v5}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->getDatabaseFileName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/content/Context;->getDatabasePath(Ljava/lang/String;)Ljava/io/File;

    move-result-object v2

    .line 247
    .local v2, "existingDb":Ljava/io/File;
    invoke-virtual {v2}, Ljava/io/File;->exists()Z

    move-result v4

    if-eqz v4, :cond_1

    invoke-virtual {p0}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->getDatabaseDefinition()Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;

    move-result-object v4

    invoke-virtual {v4}, Lcom/raizlabs/android/dbflow/config/DatabaseDefinition;->backupEnabled()Z

    move-result v4

    if-eqz v4, :cond_1

    iget-object v4, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    if-eqz v4, :cond_1

    iget-object v4, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->backupHelper:Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;

    .line 248
    invoke-interface {v4}, Lcom/raizlabs/android/dbflow/structure/database/OpenHelper;->getDatabase()Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;

    move-result-object v4

    invoke-virtual {p0, v4}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->isDatabaseIntegrityOk(Lcom/raizlabs/android/dbflow/structure/database/DatabaseWrapper;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 249
    new-instance v3, Ljava/io/FileInputStream;

    invoke-direct {v3, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    .line 253
    .local v3, "inputStream":Ljava/io/InputStream;
    :goto_1
    invoke-direct {p0, v0, v3}, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->writeDB(Ljava/io/File;Ljava/io/InputStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 254
    .end local v2    # "existingDb":Ljava/io/File;
    .end local v3    # "inputStream":Ljava/io/InputStream;
    :catch_0
    move-exception v1

    .line 255
    .local v1, "e":Ljava/io/IOException;
    invoke-static {v1}, Lcom/raizlabs/android/dbflow/config/FlowLog;->logError(Ljava/lang/Throwable;)V

    goto :goto_0

    .line 251
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v2    # "existingDb":Ljava/io/File;
    :cond_1
    :try_start_1
    invoke-static {}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getContext()Landroid/content/Context;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;

    move-result-object v4

    invoke-virtual {v4, p2}, Landroid/content/res/AssetManager;->open(Ljava/lang/String;)Ljava/io/InputStream;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    move-result-object v3

    .restart local v3    # "inputStream":Ljava/io/InputStream;
    goto :goto_1
.end method

.method public setDatabaseHelperListener(Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;)V
    .locals 0
    .param p1, "databaseHelperListener"    # Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    .prologue
    .line 62
    iput-object p1, p0, Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperDelegate;->databaseHelperListener:Lcom/raizlabs/android/dbflow/structure/database/DatabaseHelperListener;

    .line 63
    return-void
.end method
