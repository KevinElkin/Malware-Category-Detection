.class public Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;
.super Landroid/database/ContentObserver;
.source "FlowContentObserver.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;,
        Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;
    }
.end annotation


# static fields
.field private static final REGISTERED_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;

.field private static forceNotify:Z


# instance fields
.field protected isInTransaction:Z

.field private final modelChangeListeners:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set",
            "<",
            "Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;",
            ">;"
        }
    .end annotation
.end field

.field private final notificationUris:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set",
            "<",
            "Landroid/net/Uri;",
            ">;"
        }
    .end annotation
.end field

.field private notifyAllUris:Z

.field private final onTableChangedListeners:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set",
            "<",
            "Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;",
            ">;"
        }
    .end annotation
.end field

.field private final registeredTables:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "Ljava/lang/Class",
            "<+",
            "Lcom/raizlabs/android/dbflow/structure/Model;",
            ">;>;"
        }
    .end annotation
.end field

.field private final tableUris:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set",
            "<",
            "Landroid/net/Uri;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 37
    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    sput-object v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->REGISTERED_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 38
    sput-boolean v1, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->forceNotify:Z

    return-void
.end method

.method public constructor <init>()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 109
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Landroid/database/ContentObserver;-><init>(Landroid/os/Handler;)V

    .line 99
    new-instance v0, Ljava/util/concurrent/CopyOnWriteArraySet;

    invoke-direct {v0}, Ljava/util/concurrent/CopyOnWriteArraySet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->modelChangeListeners:Ljava/util/Set;

    .line 100
    new-instance v0, Ljava/util/concurrent/CopyOnWriteArraySet;

    invoke-direct {v0}, Ljava/util/concurrent/CopyOnWriteArraySet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    .line 101
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    .line 102
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    .line 103
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    .line 105
    iput-boolean v1, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    .line 106
    iput-boolean v1, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notifyAllUris:Z

    .line 110
    return-void
.end method

.method public constructor <init>(Landroid/os/Handler;)V
    .locals 2
    .param p1, "handler"    # Landroid/os/Handler;

    .prologue
    const/4 v1, 0x0

    .line 113
    invoke-direct {p0, p1}, Landroid/database/ContentObserver;-><init>(Landroid/os/Handler;)V

    .line 99
    new-instance v0, Ljava/util/concurrent/CopyOnWriteArraySet;

    invoke-direct {v0}, Ljava/util/concurrent/CopyOnWriteArraySet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->modelChangeListeners:Ljava/util/Set;

    .line 100
    new-instance v0, Ljava/util/concurrent/CopyOnWriteArraySet;

    invoke-direct {v0}, Ljava/util/concurrent/CopyOnWriteArraySet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    .line 101
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    .line 102
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    .line 103
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    .line 105
    iput-boolean v1, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    .line 106
    iput-boolean v1, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notifyAllUris:Z

    .line 114
    return-void
.end method

.method public static clearRegisteredObserverCount()V
    .locals 2

    .prologue
    .line 53
    sget-object v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->REGISTERED_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;->set(I)V

    .line 54
    return-void
.end method

.method private onChange(ZLandroid/net/Uri;Z)V
    .locals 16
    .param p1, "selfChanges"    # Z
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "calledInternally"    # Z
    .annotation build Landroid/annotation/TargetApi;
        value = 0x10
    .end annotation

    .prologue
    .line 238
    invoke-virtual/range {p2 .. p2}, Landroid/net/Uri;->getFragment()Ljava/lang/String;

    move-result-object v4

    .line 239
    .local v4, "fragment":Ljava/lang/String;
    invoke-virtual/range {p2 .. p2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v12

    .line 244
    .local v12, "tableName":Ljava/lang/String;
    invoke-virtual/range {p2 .. p2}, Landroid/net/Uri;->getQueryParameterNames()Ljava/util/Set;

    move-result-object v10

    .line 245
    .local v10, "queryNames":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v10}, Ljava/util/Set;->size()I

    move-result v13

    new-array v3, v13, [Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;

    .line 246
    .local v3, "columnsChanged":[Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;
    invoke-interface {v10}, Ljava/util/Set;->isEmpty()Z

    move-result v13

    if-nez v13, :cond_0

    .line 247
    const/4 v5, 0x0

    .line 248
    .local v5, "index":I
    invoke-interface {v10}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v13

    :goto_0
    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z

    move-result v14

    if-eqz v14, :cond_0

    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    .line 249
    .local v6, "key":Ljava/lang/String;
    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Landroid/net/Uri;->getQueryParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    invoke-static {v14}, Landroid/net/Uri;->decode(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 250
    .local v9, "param":Ljava/lang/String;
    invoke-static {v6}, Landroid/net/Uri;->decode(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 251
    .local v2, "columnName":Ljava/lang/String;
    new-instance v14, Lcom/raizlabs/android/dbflow/sql/language/NameAlias$Builder;

    invoke-direct {v14, v2}, Lcom/raizlabs/android/dbflow/sql/language/NameAlias$Builder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v14}, Lcom/raizlabs/android/dbflow/sql/language/NameAlias$Builder;->build()Lcom/raizlabs/android/dbflow/sql/language/NameAlias;

    move-result-object v14

    invoke-static {v14}, Lcom/raizlabs/android/dbflow/sql/language/Condition;->column(Lcom/raizlabs/android/dbflow/sql/language/NameAlias;)Lcom/raizlabs/android/dbflow/sql/language/Condition;

    move-result-object v14

    .line 252
    invoke-virtual {v14, v9}, Lcom/raizlabs/android/dbflow/sql/language/Condition;->value(Ljava/lang/Object;)Lcom/raizlabs/android/dbflow/sql/language/Condition;

    move-result-object v14

    aput-object v14, v3, v5

    .line 253
    add-int/lit8 v5, v5, 0x1

    .line 254
    goto :goto_0

    .line 257
    .end local v2    # "columnName":Ljava/lang/String;
    .end local v5    # "index":I
    .end local v6    # "key":Ljava/lang/String;
    .end local v9    # "param":Ljava/lang/String;
    :cond_0
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    invoke-interface {v13, v12}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/lang/Class;

    .line 258
    .local v11, "table":Ljava/lang/Class;, "Ljava/lang/Class<+Lcom/raizlabs/android/dbflow/structure/Model;>;"
    invoke-static {v4}, Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;->valueOf(Ljava/lang/String;)Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;

    move-result-object v1

    .line 259
    .local v1, "action":Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;
    move-object/from16 v0, p0

    iget-boolean v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    if-nez v13, :cond_2

    .line 261
    if-eqz v1, :cond_1

    .line 262
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->modelChangeListeners:Ljava/util/Set;

    invoke-interface {v13}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v13

    :goto_1
    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z

    move-result v14

    if-eqz v14, :cond_1

    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;

    .line 263
    .local v7, "modelChangeListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;
    invoke-interface {v7, v11, v1, v3}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;->onModelStateChanged(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;[Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;)V

    goto :goto_1

    .line 267
    .end local v7    # "modelChangeListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;
    :cond_1
    if-nez p3, :cond_4

    .line 268
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    invoke-interface {v13}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v13

    :goto_2
    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z

    move-result v14

    if-eqz v14, :cond_4

    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;

    .line 269
    .local v8, "onTableChangeListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;
    invoke-interface {v8, v11, v1}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;->onTableChanged(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;)V

    goto :goto_2

    .line 274
    .end local v8    # "onTableChangeListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;
    :cond_2
    move-object/from16 v0, p0

    iget-boolean v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notifyAllUris:Z

    if-nez v13, :cond_3

    .line 275
    sget-object v1, Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;->CHANGE:Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;

    .line 276
    invoke-static {v11, v1}, Lcom/raizlabs/android/dbflow/sql/SqlUtils;->getNotificationUri(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;)Landroid/net/Uri;

    move-result-object p2

    .line 278
    :cond_3
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    monitor-enter v14

    .line 280
    :try_start_0
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    move-object/from16 v0, p2

    invoke-interface {v13, v0}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 281
    monitor-exit v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 283
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    monitor-enter v14

    .line 284
    :try_start_1
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    invoke-static {v11, v1}, Lcom/raizlabs/android/dbflow/sql/SqlUtils;->getNotificationUri(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;)Landroid/net/Uri;

    move-result-object v15

    invoke-interface {v13, v15}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 285
    monitor-exit v14
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 287
    :cond_4
    return-void

    .line 281
    :catchall_0
    move-exception v13

    :try_start_2
    monitor-exit v14
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v13

    .line 285
    :catchall_1
    move-exception v13

    :try_start_3
    monitor-exit v14
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v13
.end method

.method public static setShouldForceNotify(Z)V
    .locals 0
    .param p0, "forceNotify"    # Z

    .prologue
    .line 61
    sput-boolean p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->forceNotify:Z

    .line 62
    return-void
.end method

.method public static shouldNotify()Z
    .locals 1

    .prologue
    .line 46
    sget-boolean v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->forceNotify:Z

    if-nez v0, :cond_0

    sget-object v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->REGISTERED_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v0

    if-lez v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method


# virtual methods
.method public addModelChangeListener(Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;)V
    .locals 1
    .param p1, "modelChangeListener"    # Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;

    .prologue
    .line 172
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->modelChangeListeners:Ljava/util/Set;

    invoke-interface {v0, p1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 173
    return-void
.end method

.method public addOnTableChangedListener(Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;)V
    .locals 1
    .param p1, "onTableChangedListener"    # Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;

    .prologue
    .line 185
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    invoke-interface {v0, p1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 186
    return-void
.end method

.method public beginTransaction()V
    .locals 1

    .prologue
    .line 131
    iget-boolean v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    if-nez v0, :cond_0

    .line 132
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    .line 134
    :cond_0
    return-void
.end method

.method public endTransactionAndNotify()V
    .locals 7

    .prologue
    const/4 v4, 0x1

    .line 141
    iget-boolean v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    if-eqz v2, :cond_0

    .line 142
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->isInTransaction:Z

    .line 144
    sget v2, Landroid/os/Build$VERSION;->SDK_INT:I

    const/16 v3, 0x10

    if-ge v2, v3, :cond_1

    .line 145
    invoke-virtual {p0, v4}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onChange(Z)V

    .line 164
    :cond_0
    :goto_0
    return-void

    .line 147
    :cond_1
    iget-object v3, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    monitor-enter v3

    .line 148
    :try_start_0
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_2

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/net/Uri;

    .line 149
    .local v1, "uri":Landroid/net/Uri;
    const/4 v4, 0x1

    const/4 v5, 0x1

    invoke-direct {p0, v4, v1, v5}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onChange(ZLandroid/net/Uri;Z)V

    goto :goto_1

    .line 152
    .end local v1    # "uri":Landroid/net/Uri;
    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 151
    :cond_2
    :try_start_1
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notificationUris:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->clear()V

    .line 152
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 153
    iget-object v3, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    monitor-enter v3

    .line 154
    :try_start_2
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :cond_3
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_4

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/net/Uri;

    .line 155
    .restart local v1    # "uri":Landroid/net/Uri;
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_2
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_3

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;

    .line 156
    .local v0, "onTableChangedListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v2, v6}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Class;

    .line 157
    invoke-virtual {v1}, Landroid/net/Uri;->getFragment()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;->valueOf(Ljava/lang/String;)Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;

    move-result-object v6

    .line 156
    invoke-interface {v0, v2, v6}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;->onTableChanged(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;)V

    goto :goto_2

    .line 161
    .end local v0    # "onTableChangedListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;
    .end local v1    # "uri":Landroid/net/Uri;
    :catchall_1
    move-exception v2

    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2

    .line 160
    :cond_4
    :try_start_3
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->tableUris:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->clear()V

    .line 161
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0
.end method

.method public onChange(Z)V
    .locals 6
    .param p1, "selfChange"    # Z

    .prologue
    const/4 v5, 0x0

    .line 221
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->modelChangeListeners:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;

    .line 222
    .local v0, "modelChangeListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;
    sget-object v3, Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;->CHANGE:Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;

    const/4 v4, 0x0

    new-array v4, v4, [Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;

    invoke-interface {v0, v5, v3, v4}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;->onModelStateChanged(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;[Lcom/raizlabs/android/dbflow/sql/language/SQLCondition;)V

    goto :goto_0

    .line 225
    .end local v0    # "modelChangeListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;
    :cond_0
    iget-object v2, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;

    .line 226
    .local v1, "onTableChangedListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;
    sget-object v3, Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;->CHANGE:Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;

    invoke-interface {v1, v5, v3}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;->onTableChanged(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;)V

    goto :goto_1

    .line 228
    .end local v1    # "onTableChangedListener":Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;
    :cond_1
    return-void
.end method

.method public onChange(ZLandroid/net/Uri;)V
    .locals 1
    .param p1, "selfChange"    # Z
    .param p2, "uri"    # Landroid/net/Uri;
    .annotation build Landroid/annotation/TargetApi;
        value = 0x10
    .end annotation

    .prologue
    .line 233
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onChange(ZLandroid/net/Uri;Z)V

    .line 234
    return-void
.end method

.method public registerForContentChanges(Landroid/content/ContentResolver;Ljava/lang/Class;)V
    .locals 2
    .param p1, "contentResolver"    # Landroid/content/ContentResolver;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ContentResolver;",
            "Ljava/lang/Class",
            "<+",
            "Lcom/raizlabs/android/dbflow/structure/Model;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 203
    .local p2, "table":Ljava/lang/Class;, "Ljava/lang/Class<+Lcom/raizlabs/android/dbflow/structure/Model;>;"
    const/4 v0, 0x0

    invoke-static {p2, v0}, Lcom/raizlabs/android/dbflow/sql/SqlUtils;->getNotificationUri(Ljava/lang/Class;Lcom/raizlabs/android/dbflow/structure/BaseModel$Action;)Landroid/net/Uri;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {p1, v0, v1, p0}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    .line 204
    sget-object v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->REGISTERED_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    .line 205
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    invoke-interface {v0, p2}, Ljava/util/Map;->containsValue(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 206
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    invoke-static {p2}, Lcom/raizlabs/android/dbflow/config/FlowManager;->getTableName(Ljava/lang/Class;)Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1, p2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 208
    :cond_0
    return-void
.end method

.method public registerForContentChanges(Landroid/content/Context;Ljava/lang/Class;)V
    .locals 1
    .param p1, "context"    # Landroid/content/Context;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Context;",
            "Ljava/lang/Class",
            "<+",
            "Lcom/raizlabs/android/dbflow/structure/Model;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 196
    .local p2, "table":Ljava/lang/Class;, "Ljava/lang/Class<+Lcom/raizlabs/android/dbflow/structure/Model;>;"
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    invoke-virtual {p0, v0, p2}, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registerForContentChanges(Landroid/content/ContentResolver;Ljava/lang/Class;)V

    .line 197
    return-void
.end method

.method public removeModelChangeListener(Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;)V
    .locals 1
    .param p1, "modelChangeListener"    # Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnModelStateChangedListener;

    .prologue
    .line 181
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->modelChangeListeners:Ljava/util/Set;

    invoke-interface {v0, p1}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 182
    return-void
.end method

.method public removeTableChangedListener(Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;)V
    .locals 1
    .param p1, "onTableChangedListener"    # Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver$OnTableChangedListener;

    .prologue
    .line 189
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->onTableChangedListeners:Ljava/util/Set;

    invoke-interface {v0, p1}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 190
    return-void
.end method

.method public setNotifyAllUris(Z)V
    .locals 0
    .param p1, "notifyAllUris"    # Z

    .prologue
    .line 123
    iput-boolean p1, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->notifyAllUris:Z

    .line 124
    return-void
.end method

.method public unregisterForContentChanges(Landroid/content/Context;)V
    .locals 1
    .param p1, "context"    # Landroid/content/Context;

    .prologue
    .line 214
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    invoke-virtual {v0, p0}, Landroid/content/ContentResolver;->unregisterContentObserver(Landroid/database/ContentObserver;)V

    .line 215
    sget-object v0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->REGISTERED_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->decrementAndGet()I

    .line 216
    iget-object v0, p0, Lcom/raizlabs/android/dbflow/runtime/FlowContentObserver;->registeredTables:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->clear()V

    .line 217
    return-void
.end method
