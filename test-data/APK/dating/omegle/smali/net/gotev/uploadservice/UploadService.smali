.class public final Lnet/gotev/uploadservice/UploadService;
.super Landroid/app/Service;
.source "UploadService.java"


# static fields
.field private static final ACTION_UPLOAD_SUFFIX:Ljava/lang/String; = ".uploadservice.action.upload"

.field public static BACKOFF_MULTIPLIER:I = 0x2

.field private static final BROADCAST_ACTION_SUFFIX:Ljava/lang/String; = ".uploadservice.broadcast.status"

.field public static BUFFER_SIZE:I = 0x1000

.field public static EXECUTE_IN_FOREGROUND:Z = true

.field public static HTTP_STACK:Lnet/gotev/uploadservice/http/HttpStack; = null

.field public static IDLE_TIMEOUT:I = 0x2710

.field public static INITIAL_RETRY_WAIT_TIME:I = 0x3e8

.field public static KEEP_ALIVE_TIME_IN_SECONDS:I = 0x5

.field public static MAX_RETRY_WAIT_TIME:I = 0x186a0

.field public static NAMESPACE:Ljava/lang/String; = "net.gotev"

.field protected static final PARAM_BROADCAST_DATA:Ljava/lang/String; = "broadcastData"

.field protected static final PARAM_TASK_CLASS:Ljava/lang/String; = "taskClass"

.field protected static final PARAM_TASK_PARAMETERS:Ljava/lang/String; = "taskParameters"

.field protected static final PROGRESS_REPORT_INTERVAL:J = 0xa6L

.field private static final TAG:Ljava/lang/String; = "UploadService"

.field protected static final UPLOAD_NOTIFICATION_BASE_ID:I = 0x4d2

.field public static UPLOAD_POOL_SIZE:I

.field private static volatile foregroundUploadId:Ljava/lang/String;

.field private static final uploadDelegates:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Ljava/lang/ref/WeakReference<",
            "Lnet/gotev/uploadservice/UploadStatusDelegate;",
            ">;>;"
        }
    .end annotation
.end field

.field private static final uploadTasksMap:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lnet/gotev/uploadservice/UploadTask;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field private idleTimer:Ljava/util/Timer;

.field private notificationIncrementalId:I

.field private final uploadTasksQueue:Ljava/util/concurrent/BlockingQueue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/BlockingQueue<",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation
.end field

.field private uploadThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;

.field private wakeLock:Landroid/os/PowerManager$WakeLock;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 44
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Runtime;->availableProcessors()I

    move-result v0

    sput v0, Lnet/gotev/uploadservice/UploadService;->UPLOAD_POOL_SIZE:I

    .line 78
    new-instance v0, Lnet/gotev/uploadservice/http/impl/HurlStack;

    invoke-direct {v0}, Lnet/gotev/uploadservice/http/impl/HurlStack;-><init>()V

    sput-object v0, Lnet/gotev/uploadservice/UploadService;->HTTP_STACK:Lnet/gotev/uploadservice/http/HttpStack;

    .line 130
    new-instance v0, Ljava/util/concurrent/ConcurrentHashMap;

    invoke-direct {v0}, Ljava/util/concurrent/ConcurrentHashMap;-><init>()V

    sput-object v0, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    .line 131
    new-instance v0, Ljava/util/concurrent/ConcurrentHashMap;

    invoke-direct {v0}, Ljava/util/concurrent/ConcurrentHashMap;-><init>()V

    sput-object v0, Lnet/gotev/uploadservice/UploadService;->uploadDelegates:Ljava/util/Map;

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .line 36
    invoke-direct {p0}, Landroid/app/Service;-><init>()V

    const/4 v0, 0x0

    .line 129
    iput v0, p0, Lnet/gotev/uploadservice/UploadService;->notificationIncrementalId:I

    .line 132
    new-instance v0, Ljava/util/concurrent/LinkedBlockingQueue;

    invoke-direct {v0}, Ljava/util/concurrent/LinkedBlockingQueue;-><init>()V

    iput-object v0, p0, Lnet/gotev/uploadservice/UploadService;->uploadTasksQueue:Ljava/util/concurrent/BlockingQueue;

    const/4 v0, 0x0

    .line 135
    iput-object v0, p0, Lnet/gotev/uploadservice/UploadService;->idleTimer:Ljava/util/Timer;

    return-void
.end method

.method static synthetic access$000()Ljava/lang/String;
    .locals 1

    .line 36
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    return-object v0
.end method

.method private clearIdleTimer()V
    .locals 2

    .line 283
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->idleTimer:Ljava/util/Timer;

    if-eqz v0, :cond_0

    .line 284
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    const-string v1, "Clearing idle timer"

    invoke-static {v0, v1}, Lnet/gotev/uploadservice/Logger;->info(Ljava/lang/String;Ljava/lang/String;)V

    .line 285
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->idleTimer:Ljava/util/Timer;

    invoke-virtual {v0}, Ljava/util/Timer;->cancel()V

    const/4 v0, 0x0

    .line 286
    iput-object v0, p0, Lnet/gotev/uploadservice/UploadService;->idleTimer:Ljava/util/Timer;

    :cond_0
    return-void
.end method

.method protected static getActionBroadcast()Ljava/lang/String;
    .locals 2

    .line 142
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    sget-object v1, Lnet/gotev/uploadservice/UploadService;->NAMESPACE:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ".uploadservice.broadcast.status"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method protected static getActionUpload()Ljava/lang/String;
    .locals 2

    .line 138
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    sget-object v1, Lnet/gotev/uploadservice/UploadService;->NAMESPACE:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ".uploadservice.action.upload"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static declared-synchronized getTaskList()Ljava/util/List;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    const-class v0, Lnet/gotev/uploadservice/UploadService;

    monitor-enter v0

    .line 163
    :try_start_0
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 164
    new-instance v1, Ljava/util/ArrayList;

    const/4 v2, 0x1

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    goto :goto_0

    .line 166
    :cond_0
    new-instance v1, Ljava/util/ArrayList;

    sget-object v2, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v2}, Ljava/util/Map;->size()I

    move-result v2

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 167
    sget-object v2, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v2}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 170
    :goto_0
    monitor-exit v0

    return-object v1

    :catchall_0
    move-exception v1

    .line 162
    monitor-exit v0

    throw v1
.end method

.method protected static getUploadStatusDelegate(Ljava/lang/String;)Lnet/gotev/uploadservice/UploadStatusDelegate;
    .locals 4

    .line 428
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->uploadDelegates:Ljava/util/Map;

    invoke-interface {v0, p0}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/ref/WeakReference;

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 433
    :cond_0
    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/gotev/uploadservice/UploadStatusDelegate;

    if-nez v0, :cond_1

    .line 436
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->uploadDelegates:Ljava/util/Map;

    invoke-interface {v1, p0}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 437
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "\n\n\nUpload delegate for upload with Id "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, " is gone!\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "Probably you have set it in an activity and the user navigated away from it\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "before the upload was completed. From now on, the events will be dispatched\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "with broadcast intents. If you see this message, consider switching to the\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "UploadServiceBroadcastReceiver registered globally in your manifest.\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "Read this:\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "https://github.com/gotev/android-upload-service/wiki/Monitoring-upload-status\n"

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Lnet/gotev/uploadservice/Logger;->info(Ljava/lang/String;Ljava/lang/String;)V

    :cond_1
    return-object v0
.end method

.method protected static setUploadStatusDelegate(Ljava/lang/String;Lnet/gotev/uploadservice/UploadStatusDelegate;)V
    .locals 2

    if-nez p1, :cond_0

    return-void

    .line 418
    :cond_0
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->uploadDelegates:Ljava/util/Map;

    new-instance v1, Ljava/lang/ref/WeakReference;

    invoke-direct {v1, p1}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    invoke-interface {v0, p0, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method private shutdownIfThereArentAnyActiveTasks()I
    .locals 4

    .line 291
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 292
    invoke-direct {p0}, Lnet/gotev/uploadservice/UploadService;->clearIdleTimer()V

    .line 294
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Service will be shut down in "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v2, Lnet/gotev/uploadservice/UploadService;->IDLE_TIMEOUT:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, "ms if no new tasks are received"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lnet/gotev/uploadservice/Logger;->info(Ljava/lang/String;Ljava/lang/String;)V

    .line 295
    new-instance v0, Ljava/util/Timer;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    sget-object v2, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "IdleTimer"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/Timer;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lnet/gotev/uploadservice/UploadService;->idleTimer:Ljava/util/Timer;

    .line 296
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->idleTimer:Ljava/util/Timer;

    new-instance v1, Lnet/gotev/uploadservice/UploadService$1;

    invoke-direct {v1, p0}, Lnet/gotev/uploadservice/UploadService$1;-><init>(Lnet/gotev/uploadservice/UploadService;)V

    sget v2, Lnet/gotev/uploadservice/UploadService;->IDLE_TIMEOUT:I

    int-to-long v2, v2

    invoke-virtual {v0, v1, v2, v3}, Ljava/util/Timer;->schedule(Ljava/util/TimerTask;J)V

    const/4 v0, 0x2

    return v0

    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method public static declared-synchronized stop(Landroid/content/Context;)Z
    .locals 2

    const-class v0, Lnet/gotev/uploadservice/UploadService;

    monitor-enter v0

    const/4 v1, 0x0

    .line 196
    :try_start_0
    invoke-static {p0, v1}, Lnet/gotev/uploadservice/UploadService;->stop(Landroid/content/Context;Z)Z

    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return p0

    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method public static declared-synchronized stop(Landroid/content/Context;Z)Z
    .locals 2

    const-class v0, Lnet/gotev/uploadservice/UploadService;

    monitor-enter v0

    if-eqz p1, :cond_0

    .line 207
    :try_start_0
    new-instance p1, Landroid/content/Intent;

    const-class v1, Lnet/gotev/uploadservice/UploadService;

    invoke-direct {p1, p0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    invoke-virtual {p0, p1}, Landroid/content/Context;->stopService(Landroid/content/Intent;)Z

    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return p0

    :catchall_0
    move-exception p0

    goto :goto_1

    .line 209
    :cond_0
    :try_start_1
    sget-object p1, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {p1}, Ljava/util/Map;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_1

    new-instance p1, Landroid/content/Intent;

    const-class v1, Lnet/gotev/uploadservice/UploadService;

    invoke-direct {p1, p0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    invoke-virtual {p0, p1}, Landroid/content/Context;->stopService(Landroid/content/Intent;)Z

    move-result p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz p0, :cond_1

    const/4 p0, 0x1

    goto :goto_0

    :cond_1
    const/4 p0, 0x0

    :goto_0
    monitor-exit v0

    return p0

    .line 205
    :goto_1
    monitor-exit v0

    throw p0
.end method

.method public static declared-synchronized stopAllUploads()V
    .locals 4

    const-class v0, Lnet/gotev/uploadservice/UploadService;

    monitor-enter v0

    .line 177
    :try_start_0
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->isEmpty()Z

    move-result v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v1, :cond_0

    .line 178
    monitor-exit v0

    return-void

    .line 182
    :cond_0
    :try_start_1
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 184
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 185
    sget-object v2, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lnet/gotev/uploadservice/UploadTask;

    .line 186
    invoke-virtual {v2}, Lnet/gotev/uploadservice/UploadTask;->cancel()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 188
    :cond_1
    monitor-exit v0

    return-void

    :catchall_0
    move-exception v1

    .line 176
    monitor-exit v0

    throw v1
.end method

.method public static declared-synchronized stopUpload(Ljava/lang/String;)V
    .locals 2

    const-class v0, Lnet/gotev/uploadservice/UploadService;

    monitor-enter v0

    .line 150
    :try_start_0
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v1, p0}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lnet/gotev/uploadservice/UploadTask;

    if-eqz p0, :cond_0

    .line 152
    invoke-virtual {p0}, Lnet/gotev/uploadservice/UploadTask;->cancel()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 154
    :cond_0
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    .line 149
    monitor-exit v0

    throw p0
.end method


# virtual methods
.method getTask(Landroid/content/Intent;)Lnet/gotev/uploadservice/UploadTask;
    .locals 4

    const-string v0, "taskClass"

    .line 338
    invoke-virtual {p1, v0}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return-object v1

    .line 347
    :cond_0
    :try_start_0
    invoke-static {v0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    .line 349
    const-class v3, Lnet/gotev/uploadservice/UploadTask;

    invoke-virtual {v3, v2}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 350
    const-class v3, Lnet/gotev/uploadservice/UploadTask;

    invoke-virtual {v2}, Ljava/lang/Class;->newInstance()Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v3, v2}, Ljava/lang/Class;->cast(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lnet/gotev/uploadservice/UploadTask;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    .line 351
    :try_start_1
    invoke-virtual {v2, p0, p1}, Lnet/gotev/uploadservice/UploadTask;->init(Lnet/gotev/uploadservice/UploadService;Landroid/content/Intent;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    move-object v1, v2

    goto :goto_0

    :catch_0
    move-exception p1

    move-object v1, v2

    goto :goto_1

    .line 353
    :cond_1
    :try_start_2
    sget-object p1, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " does not extend UploadTask!"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {p1, v2}, Lnet/gotev/uploadservice/Logger;->error(Ljava/lang/String;Ljava/lang/String;)V

    .line 356
    :goto_0
    sget-object p1, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Successfully created new task with class: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Lnet/gotev/uploadservice/Logger;->debug(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    goto :goto_2

    :catch_1
    move-exception p1

    .line 359
    :goto_1
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    const-string v2, "Error while instantiating new task"

    invoke-static {v0, v2, p1}, Lnet/gotev/uploadservice/Logger;->error(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    :goto_2
    return-object v1
.end method

.method protected declared-synchronized holdForegroundNotification(Ljava/lang/String;Landroid/app/Notification;)Z
    .locals 4

    monitor-enter p0

    .line 371
    :try_start_0
    sget-boolean v0, Lnet/gotev/uploadservice/UploadService;->EXECUTE_IN_FOREGROUND:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    monitor-exit p0

    return v1

    .line 373
    :cond_0
    :try_start_1
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->foregroundUploadId:Ljava/lang/String;

    if-nez v0, :cond_1

    .line 374
    sput-object p1, Lnet/gotev/uploadservice/UploadService;->foregroundUploadId:Ljava/lang/String;

    .line 375
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " now holds the foreground notification"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Lnet/gotev/uploadservice/Logger;->debug(Ljava/lang/String;Ljava/lang/String;)V

    .line 378
    :cond_1
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->foregroundUploadId:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_2

    const/16 p1, 0x4d2

    .line 379
    invoke-virtual {p0, p1, p2}, Lnet/gotev/uploadservice/UploadService;->startForeground(ILandroid/app/Notification;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    const/4 p1, 0x1

    .line 380
    monitor-exit p0

    return p1

    .line 383
    :cond_2
    monitor-exit p0

    return v1

    :catchall_0
    move-exception p1

    .line 370
    monitor-exit p0

    throw p1
.end method

.method public onBind(Landroid/content/Intent;)Landroid/os/IBinder;
    .locals 0

    const/4 p1, 0x0

    return-object p1
.end method

.method public onCreate()V
    .locals 8

    .line 214
    invoke-super {p0}, Landroid/app/Service;->onCreate()V

    const-string v0, "power"

    .line 216
    invoke-virtual {p0, v0}, Lnet/gotev/uploadservice/UploadService;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManager;

    .line 217
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    const/4 v2, 0x1

    invoke-virtual {v0, v2, v1}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v0

    iput-object v0, p0, Lnet/gotev/uploadservice/UploadService;->wakeLock:Landroid/os/PowerManager$WakeLock;

    .line 218
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->wakeLock:Landroid/os/PowerManager$WakeLock;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 220
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->wakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v0

    if-nez v0, :cond_0

    .line 221
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->wakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 223
    :cond_0
    sget v0, Lnet/gotev/uploadservice/UploadService;->UPLOAD_POOL_SIZE:I

    if-gtz v0, :cond_1

    .line 224
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Runtime;->availableProcessors()I

    move-result v0

    sput v0, Lnet/gotev/uploadservice/UploadService;->UPLOAD_POOL_SIZE:I

    .line 228
    :cond_1
    new-instance v0, Ljava/util/concurrent/ThreadPoolExecutor;

    sget v2, Lnet/gotev/uploadservice/UploadService;->UPLOAD_POOL_SIZE:I

    sget v3, Lnet/gotev/uploadservice/UploadService;->UPLOAD_POOL_SIZE:I

    sget v1, Lnet/gotev/uploadservice/UploadService;->KEEP_ALIVE_TIME_IN_SECONDS:I

    int-to-long v4, v1

    sget-object v6, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    iget-object v7, p0, Lnet/gotev/uploadservice/UploadService;->uploadTasksQueue:Ljava/util/concurrent/BlockingQueue;

    move-object v1, v0

    invoke-direct/range {v1 .. v7}, Ljava/util/concurrent/ThreadPoolExecutor;-><init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V

    iput-object v0, p0, Lnet/gotev/uploadservice/UploadService;->uploadThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    return-void
.end method

.method public onDestroy()V
    .locals 2

    .line 313
    invoke-super {p0}, Landroid/app/Service;->onDestroy()V

    .line 315
    invoke-static {}, Lnet/gotev/uploadservice/UploadService;->stopAllUploads()V

    .line 316
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->uploadThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {v0}, Ljava/util/concurrent/ThreadPoolExecutor;->shutdown()V

    .line 318
    sget-boolean v0, Lnet/gotev/uploadservice/UploadService;->EXECUTE_IN_FOREGROUND:Z

    if-eqz v0, :cond_0

    .line 319
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    const-string v1, "Stopping foreground execution"

    invoke-static {v0, v1}, Lnet/gotev/uploadservice/Logger;->debug(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v0, 0x1

    .line 320
    invoke-virtual {p0, v0}, Lnet/gotev/uploadservice/UploadService;->stopForeground(Z)V

    .line 323
    :cond_0
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->wakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 324
    iget-object v0, p0, Lnet/gotev/uploadservice/UploadService;->wakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 326
    :cond_1
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->clear()V

    .line 327
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->uploadDelegates:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->clear()V

    .line 329
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    const-string v1, "UploadService destroyed"

    invoke-static {v0, v1}, Lnet/gotev/uploadservice/Logger;->debug(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public onStartCommand(Landroid/content/Intent;II)I
    .locals 6

    if-eqz p1, :cond_5

    .line 243
    invoke-static {}, Lnet/gotev/uploadservice/UploadService;->getActionUpload()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-nez p2, :cond_0

    goto/16 :goto_1

    :cond_0
    const-string p2, "net.gotev"

    .line 247
    sget-object p3, Lnet/gotev/uploadservice/UploadService;->NAMESPACE:Ljava/lang/String;

    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_1

    .line 248
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Hey dude, please set the namespace for your app by following the setup instructions: https://github.com/gotev/android-upload-service/wiki/Setup"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 251
    :cond_1
    sget-object p2, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;

    move-result-object p3

    const-string v0, "Starting service with namespace: %s, upload pool size: %d, %ds idle thread keep alive time. Foreground execution is %s"

    const/4 v1, 0x4

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    sget-object v3, Lnet/gotev/uploadservice/UploadService;->NAMESPACE:Ljava/lang/String;

    aput-object v3, v1, v2

    sget v2, Lnet/gotev/uploadservice/UploadService;->UPLOAD_POOL_SIZE:I

    .line 253
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x1

    aput-object v2, v1, v3

    sget v2, Lnet/gotev/uploadservice/UploadService;->KEEP_ALIVE_TIME_IN_SECONDS:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v4, 0x2

    aput-object v2, v1, v4

    const/4 v2, 0x3

    sget-boolean v5, Lnet/gotev/uploadservice/UploadService;->EXECUTE_IN_FOREGROUND:Z

    if-eqz v5, :cond_2

    const-string v5, "enabled"

    goto :goto_0

    :cond_2
    const-string v5, "disabled"

    :goto_0
    aput-object v5, v1, v2

    .line 251
    invoke-static {p3, v0, v1}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p3

    invoke-static {p2, p3}, Lnet/gotev/uploadservice/Logger;->info(Ljava/lang/String;Ljava/lang/String;)V

    .line 256
    invoke-virtual {p0, p1}, Lnet/gotev/uploadservice/UploadService;->getTask(Landroid/content/Intent;)Lnet/gotev/uploadservice/UploadTask;

    move-result-object p1

    if-nez p1, :cond_3

    .line 259
    invoke-direct {p0}, Lnet/gotev/uploadservice/UploadService;->shutdownIfThereArentAnyActiveTasks()I

    move-result p1

    return p1

    .line 262
    :cond_3
    sget-object p2, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    iget-object p3, p1, Lnet/gotev/uploadservice/UploadTask;->params:Lnet/gotev/uploadservice/UploadTaskParameters;

    iget-object p3, p3, Lnet/gotev/uploadservice/UploadTaskParameters;->id:Ljava/lang/String;

    invoke-interface {p2, p3}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_4

    .line 263
    sget-object p2, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Preventing upload with id: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Lnet/gotev/uploadservice/UploadTask;->params:Lnet/gotev/uploadservice/UploadTaskParameters;

    iget-object p1, p1, Lnet/gotev/uploadservice/UploadTaskParameters;->id:Ljava/lang/String;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " to be uploaded twice! Please check your code and fix it!"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Lnet/gotev/uploadservice/Logger;->error(Ljava/lang/String;Ljava/lang/String;)V

    .line 265
    invoke-direct {p0}, Lnet/gotev/uploadservice/UploadService;->shutdownIfThereArentAnyActiveTasks()I

    move-result p1

    return p1

    .line 268
    :cond_4
    invoke-direct {p0}, Lnet/gotev/uploadservice/UploadService;->clearIdleTimer()V

    .line 272
    iget p2, p0, Lnet/gotev/uploadservice/UploadService;->notificationIncrementalId:I

    add-int/2addr p2, v4

    iput p2, p0, Lnet/gotev/uploadservice/UploadService;->notificationIncrementalId:I

    const-wide/16 p2, 0x0

    .line 273
    invoke-virtual {p1, p2, p3}, Lnet/gotev/uploadservice/UploadTask;->setLastProgressNotificationTime(J)Lnet/gotev/uploadservice/UploadTask;

    move-result-object p2

    const/16 p3, 0x4d2

    iget v0, p0, Lnet/gotev/uploadservice/UploadService;->notificationIncrementalId:I

    add-int/2addr p3, v0

    .line 274
    invoke-virtual {p2, p3}, Lnet/gotev/uploadservice/UploadTask;->setNotificationId(I)Lnet/gotev/uploadservice/UploadTask;

    .line 276
    sget-object p2, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    iget-object p3, p1, Lnet/gotev/uploadservice/UploadTask;->params:Lnet/gotev/uploadservice/UploadTaskParameters;

    iget-object p3, p3, Lnet/gotev/uploadservice/UploadTaskParameters;->id:Ljava/lang/String;

    invoke-interface {p2, p3, p1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 277
    iget-object p2, p0, Lnet/gotev/uploadservice/UploadService;->uploadThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;

    invoke-virtual {p2, p1}, Ljava/util/concurrent/ThreadPoolExecutor;->execute(Ljava/lang/Runnable;)V

    return v3

    .line 244
    :cond_5
    :goto_1
    invoke-direct {p0}, Lnet/gotev/uploadservice/UploadService;->shutdownIfThereArentAnyActiveTasks()I

    move-result p1

    return p1
.end method

.method protected declared-synchronized taskCompleted(Ljava/lang/String;)V
    .locals 2

    monitor-enter p0

    .line 392
    :try_start_0
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/gotev/uploadservice/UploadTask;

    .line 393
    sget-object v1, Lnet/gotev/uploadservice/UploadService;->uploadDelegates:Ljava/util/Map;

    invoke-interface {v1, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 396
    sget-boolean v1, Lnet/gotev/uploadservice/UploadService;->EXECUTE_IN_FOREGROUND:Z

    if-eqz v1, :cond_0

    if-eqz v0, :cond_0

    iget-object v0, v0, Lnet/gotev/uploadservice/UploadTask;->params:Lnet/gotev/uploadservice/UploadTaskParameters;

    iget-object v0, v0, Lnet/gotev/uploadservice/UploadTaskParameters;->id:Ljava/lang/String;

    sget-object v1, Lnet/gotev/uploadservice/UploadService;->foregroundUploadId:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 397
    sget-object v0, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " now un-holded the foreground notification"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Lnet/gotev/uploadservice/Logger;->debug(Ljava/lang/String;Ljava/lang/String;)V

    const/4 p1, 0x0

    .line 398
    sput-object p1, Lnet/gotev/uploadservice/UploadService;->foregroundUploadId:Ljava/lang/String;

    .line 401
    :cond_0
    sget-boolean p1, Lnet/gotev/uploadservice/UploadService;->EXECUTE_IN_FOREGROUND:Z

    if-eqz p1, :cond_1

    sget-object p1, Lnet/gotev/uploadservice/UploadService;->uploadTasksMap:Ljava/util/Map;

    invoke-interface {p1}, Ljava/util/Map;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_1

    .line 402
    sget-object p1, Lnet/gotev/uploadservice/UploadService;->TAG:Ljava/lang/String;

    const-string v0, "All tasks completed, stopping foreground execution"

    invoke-static {p1, v0}, Lnet/gotev/uploadservice/Logger;->debug(Ljava/lang/String;Ljava/lang/String;)V

    const/4 p1, 0x1

    .line 403
    invoke-virtual {p0, p1}, Lnet/gotev/uploadservice/UploadService;->stopForeground(Z)V

    .line 404
    invoke-direct {p0}, Lnet/gotev/uploadservice/UploadService;->shutdownIfThereArentAnyActiveTasks()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 406
    :cond_1
    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    .line 391
    monitor-exit p0

    throw p1
.end method
