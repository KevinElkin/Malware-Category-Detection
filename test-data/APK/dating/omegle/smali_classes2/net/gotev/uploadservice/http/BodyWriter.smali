.class public abstract Lnet/gotev/uploadservice/http/BodyWriter;
.super Ljava/lang/Object;
.source "BodyWriter.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lnet/gotev/uploadservice/http/BodyWriter$OnStreamWriteListener;
    }
.end annotation


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 15
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public abstract flush()V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation
.end method

.method public abstract write([B)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation
.end method

.method public abstract write([BI)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation
.end method

.method public final writeStream(Ljava/io/InputStream;Lnet/gotev/uploadservice/http/BodyWriter$OnStreamWriteListener;)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    if-nez p2, :cond_0

    .line 44
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "listener MUST not be null!"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 46
    :cond_0
    sget v0, Lnet/gotev/uploadservice/UploadService;->BUFFER_SIZE:I

    new-array v0, v0, [B

    .line 50
    :goto_0
    :try_start_0
    invoke-interface {p2}, Lnet/gotev/uploadservice/http/BodyWriter$OnStreamWriteListener;->shouldContinueWriting()Z

    move-result v1

    if-eqz v1, :cond_1

    const/4 v1, 0x0

    array-length v2, v0

    invoke-virtual {p1, v0, v1, v2}, Ljava/io/InputStream;->read([BII)I

    move-result v1

    if-lez v1, :cond_1

    .line 51
    invoke-virtual {p0, v0, v1}, Lnet/gotev/uploadservice/http/BodyWriter;->write([BI)V

    .line 52
    invoke-virtual {p0}, Lnet/gotev/uploadservice/http/BodyWriter;->flush()V

    .line 53
    invoke-interface {p2, v1}, Lnet/gotev/uploadservice/http/BodyWriter$OnStreamWriteListener;->onBytesWritten(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    .line 56
    :cond_1
    invoke-virtual {p1}, Ljava/io/InputStream;->close()V

    return-void

    :catchall_0
    move-exception p2

    invoke-virtual {p1}, Ljava/io/InputStream;->close()V

    throw p2
.end method
