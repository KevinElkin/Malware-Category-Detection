
import src.scrape_apk as scraper
import src.create_matrices as cm
import src.model as model
import json
import os
from random import sample


def get_apk(**kwargs):
    """
    method to unzip apk files downloaded from APKPure.com
    """
    if not os.path.exists(kwargs['outpath']):
            os.mkdir(kwargs['outpath'])
    if kwargs['scrape_data']:
        print('Scraping data')
        scraper.run_scraper(kwargs['categories'], kwargs['number_of_apps_per_cat'],kwargs['outpath'])
    print('Getting API info')
    category_data,apps,apis = cm.get_metadata(kwargs['categories'], kwargs['outpath'],kwargs['re_read'])
    print('Getting malware info')
    category_data,apps,apis, malware = cm.get_malware("/datasets/dsc180a-wi20-public/Malware/amd_data_smali/", kwargs['num_malware_apps'],category_data,apps,apis,kwargs['malware_categories'])
    
    print("Number of apps: ", len(apps))
    print("Number of apis: ", len(apis))
    cm.save_apps_apis(kwargs['outpath'],apps,apis)
    print('Creating kernels')
    kernels = cm.get_kernels(category_data,apps,apis)
    
    print('Training SVM')
    model.run_model(kwargs['outpath'],kernels,malware)

    
    
    
    


if __name__== "__main__":
    #params - number_of_xml_files, number_of_apps_per_category
    cfg = json.load(open('./config/data-params.json'))
    get_apk(**cfg)