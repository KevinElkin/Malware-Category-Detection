{
    "Ljava/lang/String;": [
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->replaceFirst()Ljava/lang/String;",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->compareTo()I",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->matches()Z",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->intern()Ljava/lang/String;",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;"
    ],
    "Ljava/util/concurrent/atomic/AtomicBoolean;": [
        "Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z",
        "Ljava/util/concurrent/atomic/AtomicBoolean;->set()V"
    ],
    "Lcn/jpush/android/c/r;": [
        "Lcn/jpush/android/c/r;->a()V",
        "Lcn/jpush/android/c/r;->a()Z"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->unregisterReceiver()V",
        "Landroid/content/Context;->getFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->registerReceiver()Landroid/content/Intent;",
        "Landroid/content/Context;->getDir()Ljava/io/File;",
        "Landroid/content/Context;->sendBroadcast()V",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->getCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->createPackageContext()Landroid/content/Context;",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I",
        "Landroid/content/Context;->getExternalCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->getFileStreamPath()Ljava/io/File;",
        "Landroid/content/Context;->getDatabasePath()Ljava/io/File;",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/content/Context;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/Context;->stopService()Z",
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->bindService()Z",
        "Landroid/content/Context;->getString()Ljava/lang/String;",
        "Landroid/content/Context;->getClassLoader()Ljava/lang/ClassLoader;",
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->deleteFile()Z",
        "Landroid/content/Context;->getMainLooper()Landroid/os/Looper;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;"
    ],
    "Lcn/jpush/android/c/v;": [
        "Lcn/jpush/android/c/v;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/v;->a()V"
    ],
    "Lcn/jpush/android/a;": [
        "Lcn/jpush/android/a;->a()Landroid/content/pm/ApplicationInfo;",
        "Lcn/jpush/android/a;->a()Z"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;",
        "Landroid/content/pm/PackageManager;->getPermissionInfo()Landroid/content/pm/PermissionInfo;",
        "Landroid/content/pm/PackageManager;->getActivityInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->getInstalledPackages()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->queryBroadcastReceivers()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getLaunchIntentForPackage()Landroid/content/Intent;",
        "Landroid/content/pm/PackageManager;->queryIntentServices()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->getPackageArchiveInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getServiceInfo()Landroid/content/pm/ServiceInfo;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->checkPermission()I",
        "Landroid/content/pm/PackageManager;->setComponentEnabledSetting()V",
        "Landroid/content/pm/PackageManager;->getReceiverInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationLabel()Ljava/lang/CharSequence;",
        "Landroid/content/pm/PackageManager;->getApplicationIcon()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcn/jpush/android/c/a;": [
        "Lcn/jpush/android/c/a;->a()Lorg/json/JSONObject;",
        "Lcn/jpush/android/c/a;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/a;->a()[C",
        "Lcn/jpush/android/c/a;->a()S",
        "Lcn/jpush/android/c/a;->a()Landroid/content/Intent;",
        "Lcn/jpush/android/c/a;->a()V",
        "Lcn/jpush/android/c/a;->a()I",
        "Lcn/jpush/android/c/a;->a()Lorg/json/JSONArray;",
        "Lcn/jpush/android/c/a;->a()Z",
        "Lcn/jpush/android/c/a;->a()J"
    ],
    "Lcn/jpush/android/api/i;": [
        "Lcn/jpush/android/api/i;->a()V",
        "Lcn/jpush/android/api/i;->a()Ljava/lang/String;",
        "Lcn/jpush/android/api/i;->a()Z",
        "Lcn/jpush/android/api/i;->a()Ljava/util/HashMap;"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->finalize()V",
        "Ljava/lang/Object;->hashCode()I"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->toString()Ljava/lang/String;",
        "Landroid/os/Bundle;->remove()V",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->get()Ljava/lang/Object;",
        "Landroid/os/Bundle;->putLong()V",
        "Landroid/os/Bundle;->putBoolean()V",
        "Landroid/os/Bundle;->getLong()J",
        "Landroid/os/Bundle;->getSerializable()Ljava/io/Serializable;",
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->putString()V",
        "Landroid/os/Bundle;->keySet()Ljava/util/Set;",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->putSerializable()V",
        "Landroid/os/Bundle;->getBoolean()Z"
    ],
    "Lcn/jpush/android/c/ac;": [
        "Lcn/jpush/android/c/ac;->a()Z",
        "Lcn/jpush/android/c/ac;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->deleteCharAt()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->delete()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->gc()V",
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->arraycopy()V",
        "Ljava/lang/System;->nanoTime()J",
        "Ljava/lang/System;->setProperty()Ljava/lang/String;",
        "Ljava/lang/System;->exit()V"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getDataDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->canWrite()Z",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->isFile()Z",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->renameTo()Z",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->getCanonicalFile()Ljava/io/File;",
        "Ljava/io/File;->getAbsoluteFile()Ljava/io/File;",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->getCanonicalPath()Ljava/lang/String;",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->deleteOnExit()V",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->getParent()Ljava/lang/String;",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->mkdirs()Z"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;"
    ],
    "[Lcn/jpush/android/c;": [
        "[Lcn/jpush/android/c;->clone()Ljava/lang/Object;"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->sendMessage()Z",
        "Landroid/os/Handler;->removeCallbacksAndMessages()V",
        "Landroid/os/Handler;->removeMessages()V",
        "Landroid/os/Handler;->sendEmptyMessageDelayed()Z",
        "Landroid/os/Handler;->hasMessages()Z",
        "Landroid/os/Handler;->sendEmptyMessage()Z",
        "Landroid/os/Handler;->handleMessage()V",
        "Landroid/os/Handler;->sendMessageDelayed()Z",
        "Landroid/os/Handler;->postDelayed()Z"
    ],
    "Lcn/jpush/android/api/k;": [
        "Lcn/jpush/android/api/k;->a()Landroid/app/Notification;",
        "Lcn/jpush/android/api/k;->a()Ljava/util/HashMap;",
        "Lcn/jpush/android/api/k;->a()Lcn/jpush/android/a/d;",
        "Lcn/jpush/android/api/k;->a()I",
        "Lcn/jpush/android/api/k;->a()V"
    ],
    "Lcn/jpush/android/service/PushService;": [
        "Lcn/jpush/android/service/PushService;->getPackageName()Ljava/lang/String;",
        "Lcn/jpush/android/service/PushService;->a()[B",
        "Lcn/jpush/android/service/PushService;->a()Lcn/jpush/android/b/d;",
        "Lcn/jpush/android/service/PushService;->a()Ljava/lang/String;",
        "Lcn/jpush/android/service/PushService;->getSystemService()Ljava/lang/Object;",
        "Lcn/jpush/android/service/PushService;->a()Lcn/jpush/android/service/j;",
        "Lcn/jpush/android/service/PushService;->openFileOutput()Ljava/io/FileOutputStream;",
        "Lcn/jpush/android/service/PushService;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcn/jpush/android/service/PushService;->sendOrderedBroadcast()V",
        "Lcn/jpush/android/service/PushService;->a()I",
        "Lcn/jpush/android/service/PushService;->a()J",
        "Lcn/jpush/android/service/PushService;->getApplicationContext()Landroid/content/Context;",
        "Lcn/jpush/android/service/PushService;->deleteFile()Z",
        "Lcn/jpush/android/service/PushService;->a()V",
        "Lcn/jpush/android/service/PushService;->a()Z",
        "Lcn/jpush/android/service/PushService;->startService()Landroid/content/ComponentName;",
        "Lcn/jpush/android/service/PushService;->sendBroadcast()V",
        "Lcn/jpush/android/service/PushService;->stopSelf()V"
    ],
    "Lcn/jpush/android/service/j;": [
        "Lcn/jpush/android/service/j;->start()V",
        "Lcn/jpush/android/service/j;->isAlive()Z",
        "Lcn/jpush/android/service/j;->getId()J",
        "Lcn/jpush/android/service/j;->join()V",
        "Lcn/jpush/android/service/j;->a()I"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->intValue()I",
        "Ljava/lang/Integer;->longValue()J",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->byteValue()B"
    ],
    "Lcn/jpush/android/service/ServiceInterface;": [
        "Lcn/jpush/android/service/ServiceInterface;->a()Ljava/lang/String;",
        "Lcn/jpush/android/service/ServiceInterface;->a()Z",
        "Lcn/jpush/android/service/ServiceInterface;->a()V",
        "Lcn/jpush/android/service/ServiceInterface;->a()I",
        "Lcn/jpush/android/service/ServiceInterface;->a()Lcn/jpush/android/api/b;"
    ],
    "Lcn/jpush/android/api/TagAliasCallback;": [
        "Lcn/jpush/android/api/TagAliasCallback;->gotResult()V"
    ],
    "Ljava/util/concurrent/ConcurrentLinkedQueue;": [
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->offer()Z",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->contains()Z",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->size()I",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->remove()Z",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->poll()Ljava/lang/Object;"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->contains()Z",
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->addAll()Z",
        "Ljava/util/ArrayList;->isEmpty()Z",
        "Ljava/util/ArrayList;->remove()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->hasNext()Z",
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->remove()V"
    ],
    "Lcn/jpush/android/service/DownloadService;": [
        "Lcn/jpush/android/service/DownloadService;->getPackageName()Ljava/lang/String;",
        "Lcn/jpush/android/service/DownloadService;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcn/jpush/android/service/DownloadService;->getSystemService()Ljava/lang/Object;",
        "Lcn/jpush/android/service/DownloadService;->a()Landroid/app/NotificationManager;",
        "Lcn/jpush/android/service/DownloadService;->a()V",
        "Lcn/jpush/android/service/DownloadService;->a()Lcn/jpush/android/a/d;",
        "Lcn/jpush/android/service/DownloadService;->a()Landroid/os/Handler;",
        "Lcn/jpush/android/service/DownloadService;->getApplicationContext()Landroid/content/Context;",
        "Lcn/jpush/android/service/DownloadService;->a()Z"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getService()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->reapply()V",
        "Landroid/widget/RemoteViews;->setInt()V",
        "Landroid/widget/RemoteViews;->setTextViewText()V",
        "Landroid/widget/RemoteViews;->setImageViewBitmap()V",
        "Landroid/widget/RemoteViews;->apply()Landroid/view/View;",
        "Landroid/widget/RemoteViews;->setImageViewResource()V",
        "Landroid/widget/RemoteViews;->setProgressBar()V"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->cancel()V",
        "Landroid/app/NotificationManager;->notify()V"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Lcn/jpush/android/a/d;": [
        "Lcn/jpush/android/a/d;->a()V",
        "Lcn/jpush/android/a/d;->a()Ljava/lang/String;",
        "Lcn/jpush/android/a/d;->a()Lcn/jpush/android/a/d;",
        "Lcn/jpush/android/a/d;->a()Z"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->getParcelableExtra()Landroid/os/Parcelable;",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setPackage()Landroid/content/Intent;",
        "Landroid/content/Intent;->getIntExtra()I",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;",
        "Landroid/content/Intent;->setType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->getDataString()Ljava/lang/String;",
        "Landroid/content/Intent;->setClass()Landroid/content/Intent;",
        "Landroid/content/Intent;->createChooser()Landroid/content/Intent;",
        "Landroid/content/Intent;->parseUri()Landroid/content/Intent;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getSerializableExtra()Ljava/io/Serializable;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->getBooleanExtra()Z",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setComponent()Landroid/content/Intent;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->putExtras()Landroid/content/Intent;"
    ],
    "Lcn/jpush/android/service/a;": [
        "Lcn/jpush/android/service/a;->a()V",
        "Lcn/jpush/android/service/a;->a()I",
        "Lcn/jpush/android/service/a;->a()Lcn/jpush/android/service/b;",
        "Lcn/jpush/android/service/a;->a()J",
        "Lcn/jpush/android/service/a;->a()Lorg/apache/http/impl/client/DefaultHttpClient;",
        "Lcn/jpush/android/service/a;->a()Z",
        "Lcn/jpush/android/service/a;->a()Lorg/apache/http/client/methods/HttpGet;"
    ],
    "Landroid/text/TextUtils;": [
        "Landroid/text/TextUtils;->indexOf()I",
        "Landroid/text/TextUtils;->isEmpty()Z"
    ],
    "Lcn/jpush/android/a/c;": [
        "Lcn/jpush/android/a/c;->a()Ljava/lang/String;",
        "Lcn/jpush/android/a/c;->onCreate()V",
        "Lcn/jpush/android/a/c;->a()V",
        "Lcn/jpush/android/a/c;->a()Lcn/jpush/android/a/c;",
        "Lcn/jpush/android/a/c;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Lcn/jpush/android/a/l;": [
        "Lcn/jpush/android/a/l;->a()Z",
        "Lcn/jpush/android/a/l;->a()Lcn/jpush/android/a/a;",
        "Lcn/jpush/android/a/l;->a()Lorg/json/JSONObject;",
        "Lcn/jpush/android/a/l;->a()V"
    ],
    "Landroid/app/IntentService;": [
        "Landroid/app/IntentService;->onDestroy()V",
        "Landroid/app/IntentService;->onCreate()V"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->size()I",
        "Ljava/util/HashMap;->clear()V",
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->putAll()V",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->toString()Ljava/lang/String;",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;"
    ],
    "Lcn/jpush/android/service/f;": [
        "Lcn/jpush/android/service/f;->sendEmptyMessage()Z"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;",
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->getName()Ljava/lang/String;",
        "Ljava/lang/Thread;->getId()J",
        "Ljava/lang/Thread;->getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;",
        "Ljava/lang/Thread;->run()V",
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->setPriority()V",
        "Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;",
        "Ljava/lang/Thread;->setDefaultUncaughtExceptionHandler()V"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONArray;->toString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->optJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONArray;->getInt()I",
        "Lorg/json/JSONArray;->get()Ljava/lang/Object;",
        "Lorg/json/JSONArray;->getString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->optString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->put()Lorg/json/JSONArray;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->get()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->getLong()J",
        "Lorg/json/JSONObject;->has()Z",
        "Lorg/json/JSONObject;->optLong()J",
        "Lorg/json/JSONObject;->isNull()Z",
        "Lorg/json/JSONObject;->getDouble()D",
        "Lorg/json/JSONObject;->optBoolean()Z",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getInt()I",
        "Lorg/json/JSONObject;->optString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->length()I",
        "Lorg/json/JSONObject;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->optJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->optJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getBoolean()Z",
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->keys()Ljava/util/Iterator;",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->optInt()I"
    ],
    "Lcn/jpush/android/service/h;": [
        "Lcn/jpush/android/service/h;->a()Lorg/json/JSONArray;",
        "Lcn/jpush/android/service/h;->a()Ljava/lang/String;",
        "Lcn/jpush/android/service/h;->a()Z",
        "Lcn/jpush/android/service/h;->a()V"
    ],
    "Lcn/jpush/android/c/w;": [
        "Lcn/jpush/android/c/w;->a()V",
        "Lcn/jpush/android/c/w;->a()Ljava/util/ArrayList;",
        "Lcn/jpush/android/c/w;->a()Lorg/json/JSONObject;",
        "Lcn/jpush/android/c/w;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/w;->a()Z"
    ],
    "Lorg/json/JSONException;": [
        "Lorg/json/JSONException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/net/DatagramSocket;": [
        "Ljava/net/DatagramSocket;->isClosed()Z",
        "Ljava/net/DatagramSocket;->close()V",
        "Ljava/net/DatagramSocket;->send()V",
        "Ljava/net/DatagramSocket;->receive()V",
        "Ljava/net/DatagramSocket;->setSoTimeout()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->write()V",
        "Ljava/io/ByteArrayOutputStream;->flush()V",
        "Ljava/io/ByteArrayOutputStream;->reset()V",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B",
        "Ljava/io/ByteArrayOutputStream;->size()I",
        "Ljava/io/ByteArrayOutputStream;->toString()Ljava/lang/String;",
        "Ljava/io/ByteArrayOutputStream;->close()V"
    ],
    "Lcn/jpush/android/c/u;": [
        "Lcn/jpush/android/c/u;->a()I",
        "Lcn/jpush/android/c/u;->a()[B",
        "Lcn/jpush/android/c/u;->a()Ljava/lang/String;"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->getAllByName()[Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;",
        "Ljava/net/InetAddress;->getByName()Ljava/net/InetAddress;"
    ],
    "Lcn/jpush/android/a/n;": [
        "Lcn/jpush/android/a/n;->a()Lcn/jpush/android/a/n;",
        "Lcn/jpush/android/a/n;->onCreate()V",
        "Lcn/jpush/android/a/n;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcn/jpush/android/a/n;->a()Landroid/database/Cursor;",
        "Lcn/jpush/android/a/n;->a()Z"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->setView()V",
        "Landroid/widget/Toast;->cancel()V",
        "Landroid/widget/Toast;->setDuration()V",
        "Landroid/widget/Toast;->getView()Landroid/view/View;",
        "Landroid/widget/Toast;->show()V",
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;",
        "Landroid/widget/Toast;->setGravity()V"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->digest()[B",
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->reset()V"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->byteValue()B",
        "Ljava/lang/Byte;->valueOf()Ljava/lang/Byte;",
        "Ljava/lang/Byte;->parseByte()B"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->parseLong()J",
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->toString()Ljava/lang/String;",
        "Ljava/lang/Long;->longValue()J"
    ],
    "Lcn/jpush/android/service/PushProtocol;": [
        "Lcn/jpush/android/service/PushProtocol;->GetSdkVersion()I",
        "Lcn/jpush/android/service/PushProtocol;->EnChannel()I",
        "Lcn/jpush/android/service/PushProtocol;->RecvPush()I",
        "Lcn/jpush/android/service/PushProtocol;->GetEsg()Ljava/lang/String;",
        "Lcn/jpush/android/service/PushProtocol;->InitConn()I",
        "Lcn/jpush/android/service/PushProtocol;->PushTime()I",
        "Lcn/jpush/android/service/PushProtocol;->TagAlias()I",
        "Lcn/jpush/android/service/PushProtocol;->HbJPush()I",
        "Lcn/jpush/android/service/PushProtocol;->UnChnelId()I",
        "Lcn/jpush/android/service/PushProtocol;->RepPush()I",
        "Lcn/jpush/android/service/PushProtocol;->InitPush()I",
        "Lcn/jpush/android/service/PushProtocol;->LogPush()I",
        "Lcn/jpush/android/service/PushProtocol;->RegPush()I",
        "Lcn/jpush/android/service/PushProtocol;->Close()I",
        "Lcn/jpush/android/service/PushProtocol;->MsgResponse()I",
        "Lcn/jpush/android/service/PushProtocol;->Stop()I"
    ],
    "Lcn/jpush/android/c/z;": [
        "Lcn/jpush/android/c/z;->a()V",
        "Lcn/jpush/android/c/z;->a()I",
        "Lcn/jpush/android/c/z;->a()J",
        "Lcn/jpush/android/c/z;->a()S",
        "Lcn/jpush/android/c/z;->a()Landroid/content/SharedPreferences;",
        "Lcn/jpush/android/c/z;->a()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c/k;": [
        "Lcn/jpush/android/c/k;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/k;->a()Z",
        "Lcn/jpush/android/c/k;->a()V"
    ],
    "Lcn/jpush/android/service/l;": [
        "Lcn/jpush/android/service/l;->a()Ljava/lang/String;",
        "Lcn/jpush/android/service/l;->a()Lorg/json/JSONObject;"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->toString()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V",
        "Ljava/lang/Exception;->getStackTrace()[Ljava/lang/StackTraceElement;"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->getHost()Ljava/lang/String;",
        "Landroid/net/Uri;->encode()Ljava/lang/String;",
        "Landroid/net/Uri;->fromFile()Landroid/net/Uri;",
        "Landroid/net/Uri;->getQuery()Ljava/lang/String;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;",
        "Landroid/net/Uri;->getFragment()Ljava/lang/String;",
        "Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/service/PushReceiver;": [
        "Lcn/jpush/android/service/PushReceiver;->abortBroadcast()V"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->setOrientation()V",
        "Landroid/widget/LinearLayout;->setPadding()V",
        "Landroid/widget/LinearLayout;->removeAllViews()V",
        "Landroid/widget/LinearLayout;->getChildAt()Landroid/view/View;",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->setBackgroundDrawable()V",
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->onLayout()V",
        "Landroid/widget/LinearLayout;->onMeasure()V",
        "Landroid/widget/LinearLayout;->setGravity()V",
        "Landroid/widget/LinearLayout;->removeView()V",
        "Landroid/widget/LinearLayout;->setVisibility()V"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->requestFocus()Z",
        "Landroid/widget/TextView;->setEllipsize()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setCompoundDrawablesWithIntrinsicBounds()V",
        "Landroid/widget/TextView;->setShadowLayer()V",
        "Landroid/widget/TextView;->setGravity()V",
        "Landroid/widget/TextView;->setWidth()V",
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->setMaxEms()V",
        "Landroid/widget/TextView;->setPadding()V",
        "Landroid/widget/TextView;->setBackgroundColor()V",
        "Landroid/widget/TextView;->setCompoundDrawablePadding()V",
        "Landroid/widget/TextView;->setMaxLines()V",
        "Landroid/widget/TextView;->setVisibility()V",
        "Landroid/widget/TextView;->setTextSize()V",
        "Landroid/widget/TextView;->setSingleLine()V"
    ],
    "Landroid/text/SpannableStringBuilder;": [
        "Landroid/text/SpannableStringBuilder;->setSpan()V"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->getTypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnectedOrConnecting()Z",
        "Landroid/net/NetworkInfo;->getSubtypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->getType()I",
        "Landroid/net/NetworkInfo;->isAvailable()Z",
        "Landroid/net/NetworkInfo;->getSubtype()I",
        "Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;",
        "Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/ClassLoader;": [
        "Ljava/lang/ClassLoader;->loadClass()Ljava/lang/Class;"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getDeclaredField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getSimpleName()Ljava/lang/String;",
        "Ljava/lang/Class;->getDeclaredClasses()[Ljava/lang/Class;",
        "Ljava/lang/Class;->getMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->toString()Ljava/lang/String;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->desiredAssertionStatus()Z",
        "Ljava/lang/Class;->getSuperclass()Ljava/lang/Class;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->getCanonicalName()Ljava/lang/String;",
        "Ljava/lang/Class;->isAssignableFrom()Z"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->setAccessible()V",
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;"
    ],
    "Lcn/jpush/android/service/b;": [
        "Lcn/jpush/android/service/b;->sendEmptyMessageDelayed()Z",
        "Lcn/jpush/android/service/b;->removeCallbacksAndMessages()V"
    ],
    "Lcn/jpush/android/service/c;": [
        "Lcn/jpush/android/service/c;->a()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->setRedirectHandler()V",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/HttpResponse;->getFirstHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;",
        "Lorg/apache/http/HttpResponse;->containsHeader()Z",
        "Lorg/apache/http/HttpResponse;->getAllHeaders()[Lorg/apache/http/Header;"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getReasonPhrase()Ljava/lang/String;",
        "Lorg/apache/http/StatusLine;->getStatusCode()I"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->consumeContent()V",
        "Lorg/apache/http/HttpEntity;->isStreaming()Z",
        "Lorg/apache/http/HttpEntity;->getContentLength()J",
        "Lorg/apache/http/HttpEntity;->getContentType()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpEntity;->getContentEncoding()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;"
    ],
    "Ljava/io/BufferedInputStream;": [
        "Ljava/io/BufferedInputStream;->read()I",
        "Ljava/io/BufferedInputStream;->close()V"
    ],
    "Lcn/jpush/android/c/m;": [
        "Lcn/jpush/android/c/m;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/m;->a()Ljava/util/ArrayList;",
        "Lcn/jpush/android/c/m;->a()Z",
        "Lcn/jpush/android/c/m;->a()V"
    ],
    "Ljava/io/BufferedOutputStream;": [
        "Ljava/io/BufferedOutputStream;->close()V",
        "Ljava/io/BufferedOutputStream;->write()V",
        "Ljava/io/BufferedOutputStream;->flush()V"
    ],
    "Lcn/jpush/android/c/g;": [
        "Lcn/jpush/android/c/g;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/g;->a()Z",
        "Lcn/jpush/android/c/g;->a()[B"
    ],
    "Lorg/apache/http/Header;": [
        "Lorg/apache/http/Header;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/Header;->getName()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->setHeader()V",
        "Lorg/apache/http/client/methods/HttpGet;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpGet;->abort()V"
    ],
    "Lorg/apache/http/params/HttpProtocolParams;": [
        "Lorg/apache/http/params/HttpProtocolParams;->setUserAgent()V",
        "Lorg/apache/http/params/HttpProtocolParams;->setContentCharset()V",
        "Lorg/apache/http/params/HttpProtocolParams;->setVersion()V"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setTcpNoDelay()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->close()V",
        "Ljava/io/FileOutputStream;->flush()V",
        "Ljava/io/FileOutputStream;->write()V"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->close()V"
    ],
    "Ljava/util/concurrent/ConcurrentHashMap;": [
        "Ljava/util/concurrent/ConcurrentHashMap;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentHashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentHashMap;->containsKey()Z",
        "Ljava/util/concurrent/ConcurrentHashMap;->put()Ljava/lang/Object;"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->getColumnIndex()I",
        "Landroid/database/Cursor;->getInt()I",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->getBlob()[B",
        "Landroid/database/Cursor;->moveToNext()Z",
        "Landroid/database/Cursor;->isAfterLast()Z",
        "Landroid/database/Cursor;->moveToFirst()Z",
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->getLong()J"
    ],
    "Ljava/util/Calendar;": [
        "Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;",
        "Ljava/util/Calendar;->setTimeInMillis()V",
        "Ljava/util/Calendar;->getTimeZone()Ljava/util/TimeZone;",
        "Ljava/util/Calendar;->getTimeInMillis()J",
        "Ljava/util/Calendar;->add()V",
        "Ljava/util/Calendar;->get()I"
    ],
    "Landroid/app/AlarmManager;": [
        "Landroid/app/AlarmManager;->set()V",
        "Landroid/app/AlarmManager;->setRepeating()V",
        "Landroid/app/AlarmManager;->setInexactRepeating()V",
        "Landroid/app/AlarmManager;->cancel()V"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->isEmpty()Z",
        "Ljava/util/List;->contains()Z",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->set()Ljava/lang/Object;",
        "Ljava/util/List;->addAll()Z"
    ],
    "Lcn/jpush/android/b/d;": [
        "Lcn/jpush/android/b/d;->a()I",
        "Lcn/jpush/android/b/d;->a()Lcn/jpush/android/b/i;",
        "Lcn/jpush/android/b/d;->a()Lorg/json/JSONArray;",
        "Lcn/jpush/android/b/d;->a()Lcn/jpush/android/b/b;",
        "Lcn/jpush/android/b/d;->a()J",
        "Lcn/jpush/android/b/d;->a()Z",
        "Lcn/jpush/android/b/d;->a()Landroid/content/Context;",
        "Lcn/jpush/android/b/d;->a()V",
        "Lcn/jpush/android/b/d;->a()Lcn/jpush/android/b/f;",
        "Lcn/jpush/android/b/d;->a()[I",
        "Lcn/jpush/android/b/d;->a()Landroid/content/BroadcastReceiver;"
    ],
    "Ljava/util/Queue;": [
        "Ljava/util/Queue;->remove()Z",
        "Ljava/util/Queue;->offer()Z",
        "Ljava/util/Queue;->contains()Z",
        "Ljava/util/Queue;->isEmpty()Z",
        "Ljava/util/Queue;->add()Z",
        "Ljava/util/Queue;->size()I",
        "Ljava/util/Queue;->poll()Ljava/lang/Object;",
        "Ljava/util/Queue;->iterator()Ljava/util/Iterator;"
    ],
    "Lcn/jpush/android/c/q;": [
        "Lcn/jpush/android/c/q;->a()[Ljava/lang/String;"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->abs()J",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->sin()D",
        "Ljava/lang/Math;->min()F",
        "Ljava/lang/Math;->ceil()D",
        "Ljava/lang/Math;->round()I",
        "Ljava/lang/Math;->min()J",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->cos()D",
        "Ljava/lang/Math;->atan2()D",
        "Ljava/lang/Math;->max()J",
        "Ljava/lang/Math;->tan()D",
        "Ljava/lang/Math;->round()J"
    ],
    "Lcn/jpush/android/c/j;": [
        "Lcn/jpush/android/c/j;->a()V",
        "Lcn/jpush/android/c/j;->a()Ljava/util/Map;"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getCellLocation()Landroid/telephony/CellLocation;",
        "Landroid/telephony/TelephonyManager;->listen()V",
        "Landroid/telephony/TelephonyManager;->getPhoneType()I",
        "Landroid/telephony/TelephonyManager;->getNetworkOperatorName()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNeighboringCellInfo()Ljava/util/List;",
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkType()I",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c;": [
        "Lcn/jpush/android/c;->ordinal()I"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->remaining()I",
        "Ljava/nio/ByteBuffer;->slice()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->wrap()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->allocateDirect()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->putShort()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->get()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->array()[B",
        "Ljava/nio/ByteBuffer;->asFloatBuffer()Ljava/nio/FloatBuffer;",
        "Ljava/nio/ByteBuffer;->putLong()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->putFloat()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->capacity()I",
        "Ljava/nio/ByteBuffer;->put()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->putInt()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->position()I",
        "Ljava/nio/ByteBuffer;->allocate()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->limit()I",
        "Ljava/nio/ByteBuffer;->get()B",
        "Ljava/nio/ByteBuffer;->getInt()I",
        "Ljava/nio/ByteBuffer;->hasArray()Z",
        "Ljava/nio/ByteBuffer;->arrayOffset()I",
        "Ljava/nio/ByteBuffer;->getShort()S"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->close()V",
        "Ljava/io/FileInputStream;->read()I",
        "Ljava/io/FileInputStream;->available()I",
        "Ljava/io/FileInputStream;->getFD()Ljava/io/FileDescriptor;"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->compareTo()I",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->booleanValue()Z"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->containsKey()Z",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->size()I"
    ],
    "Ljava/net/DatagramPacket;": [
        "Ljava/net/DatagramPacket;->getData()[B",
        "Ljava/net/DatagramPacket;->getLength()I"
    ],
    "Ljava/io/LineNumberReader;": [
        "Ljava/io/LineNumberReader;->readLine()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c/ad;": [
        "Lcn/jpush/android/c/ad;->a()V"
    ],
    "Lcn/jpush/android/a/a;": [
        "Lcn/jpush/android/a/a;->a()Z",
        "Lcn/jpush/android/a/a;->a()V",
        "Lcn/jpush/android/a/a;->a()Lcn/jpush/android/a/d;",
        "Lcn/jpush/android/a/a;->a()Lcn/jpush/android/a/e;"
    ],
    "Landroid/os/Process;": [
        "Landroid/os/Process;->myPid()I"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onDestroy()V",
        "Landroid/app/Service;->onCreate()V"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;",
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;"
    ],
    "Lcn/jpush/android/c/aa;": [
        "Lcn/jpush/android/c/aa;->a()Landroid/content/SharedPreferences;",
        "Lcn/jpush/android/c/aa;->a()J",
        "Lcn/jpush/android/c/aa;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/aa;->a()V",
        "Lcn/jpush/android/c/aa;->a()Lcn/jpush/android/c/aa;"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->contains()Z",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->getAll()Ljava/util/Map;",
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->commit()Z",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->remove()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->clear()Landroid/content/SharedPreferences$Editor;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->fill()V",
        "Ljava/util/Arrays;->asList()Ljava/util/List;",
        "Ljava/util/Arrays;->toString()Ljava/lang/String;",
        "Ljava/util/Arrays;->sort()V",
        "Ljava/util/Arrays;->equals()Z"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;",
        "Ljava/util/regex/Pattern;->split()[Ljava/lang/String;",
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->matches()Z",
        "Ljava/util/regex/Matcher;->find()Z",
        "Ljava/util/regex/Matcher;->group()Ljava/lang/String;"
    ],
    "Landroid/preference/PreferenceManager;": [
        "Landroid/preference/PreferenceManager;->getDefaultSharedPreferences()Landroid/content/SharedPreferences;"
    ],
    "Ljava/util/UUID;": [
        "Ljava/util/UUID;->randomUUID()Ljava/util/UUID;",
        "Ljava/util/UUID;->nameUUIDFromBytes()Ljava/util/UUID;",
        "Ljava/util/UUID;->toString()Ljava/lang/String;"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->a()I"
    ],
    "Lcn/jpush/android/api/c;": [
        "Lcn/jpush/android/api/c;->a()V",
        "Lcn/jpush/android/api/c;->a()Lcn/jpush/android/api/c;",
        "Lcn/jpush/android/api/c;->a()Lorg/json/JSONObject;",
        "Lcn/jpush/android/api/c;->a()Lorg/json/JSONArray;"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->size()I",
        "Ljava/util/Set;->isEmpty()Z",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->remove()Z"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getDimensionPixelSize()I",
        "Landroid/content/res/Resources;->openRawResource()Ljava/io/InputStream;",
        "Landroid/content/res/Resources;->getIdentifier()I",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/res/Resources;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getString()Ljava/lang/String;"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->toString()Ljava/lang/String;",
        "Ljava/util/Locale;->equals()Z"
    ],
    "Ljava/util/TimeZone;": [
        "Ljava/util/TimeZone;->getDefault()Ljava/util/TimeZone;",
        "Ljava/util/TimeZone;->getRawOffset()I"
    ],
    "Ljava/util/zip/Inflater;": [
        "Ljava/util/zip/Inflater;->setInput()V",
        "Ljava/util/zip/Inflater;->inflate()I",
        "Ljava/util/zip/Inflater;->reset()V",
        "Ljava/util/zip/Inflater;->finished()Z",
        "Ljava/util/zip/Inflater;->needsInput()Z",
        "Ljava/util/zip/Inflater;->end()V"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->close()V",
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;"
    ],
    "Ljava/io/InputStreamReader;": [
        "Ljava/io/InputStreamReader;->read()I",
        "Ljava/io/InputStreamReader;->close()V"
    ],
    "Landroid/provider/Settings$System;": [
        "Landroid/provider/Settings$System;->getString()Ljava/lang/String;",
        "Landroid/provider/Settings$System;->putString()Z",
        "Landroid/provider/Settings$System;->getConfiguration()V"
    ],
    "Landroid/content/IntentFilter;": [
        "Landroid/content/IntentFilter;->addCategory()V",
        "Landroid/content/IntentFilter;->addDataScheme()V",
        "Landroid/content/IntentFilter;->addAction()V",
        "Landroid/content/IntentFilter;->setPriority()V"
    ],
    "Lcn/jpush/android/service/m;": [
        "Lcn/jpush/android/service/m;->a()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/service/n;": [
        "Lcn/jpush/android/service/n;->a()V",
        "Lcn/jpush/android/service/n;->a()Lcn/jpush/android/service/n;",
        "Lcn/jpush/android/service/n;->a()Landroid/os/PowerManager$WakeLock;"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->isHeld()Z",
        "Landroid/os/PowerManager$WakeLock;->release()V",
        "Landroid/os/PowerManager$WakeLock;->acquire()V"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->startScan()Z",
        "Landroid/net/wifi/WifiManager;->setWifiEnabled()Z",
        "Landroid/net/wifi/WifiManager;->isWifiEnabled()Z",
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;",
        "Landroid/net/wifi/WifiManager;->getScanResults()Ljava/util/List;"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;",
        "Landroid/net/wifi/WifiInfo;->getRssi()I",
        "Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;",
        "Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->isScreenOn()Z",
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;"
    ],
    "Ljava/security/cert/CertificateFactory;": [
        "Ljava/security/cert/CertificateFactory;->generateCertificate()Ljava/security/cert/Certificate;",
        "Ljava/security/cert/CertificateFactory;->getInstance()Ljava/security/cert/CertificateFactory;"
    ],
    "Landroid/content/pm/Signature;": [
        "Landroid/content/pm/Signature;->toByteArray()[B"
    ],
    "Ljava/security/cert/X509Certificate;": [
        "Ljava/security/cert/X509Certificate;->getSubjectX500Principal()Ljavax/security/auth/x500/X500Principal;"
    ],
    "Ljavax/security/auth/x500/X500Principal;": [
        "Ljavax/security/auth/x500/X500Principal;->equals()Z"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c/b;": [
        "Lcn/jpush/android/c/b;->ordinal()I"
    ],
    "Landroid/content/pm/ApplicationInfo;": [
        "Landroid/content/pm/ApplicationInfo;->loadLabel()Ljava/lang/CharSequence;",
        "Landroid/content/pm/ApplicationInfo;->loadIcon()Landroid/graphics/drawable/Drawable;"
    ],
    "Ljava/util/concurrent/Executors;": [
        "Ljava/util/concurrent/Executors;->newCachedThreadPool()Ljava/util/concurrent/ExecutorService;",
        "Ljava/util/concurrent/Executors;->newSingleThreadExecutor()Ljava/util/concurrent/ExecutorService;"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/util/concurrent/ExecutorService;": [
        "Ljava/util/concurrent/ExecutorService;->awaitTermination()Z",
        "Ljava/util/concurrent/ExecutorService;->shutdown()V",
        "Ljava/util/concurrent/ExecutorService;->isShutdown()Z",
        "Ljava/util/concurrent/ExecutorService;->execute()V"
    ],
    "Ljava/io/Closeable;": [
        "Ljava/io/Closeable;->close()V"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->printStackTrace()V",
        "Ljava/io/FileNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->printStackTrace()V",
        "Ljava/io/IOException;->getMessage()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c/c;": [
        "Lcn/jpush/android/c/c;->a()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c/n;": [
        "Lcn/jpush/android/c/n;->a()Lorg/apache/http/impl/client/DefaultHttpClient;",
        "Lcn/jpush/android/c/n;->a()I",
        "Lcn/jpush/android/c/n;->a()Z",
        "Lcn/jpush/android/c/n;->a()[B",
        "Lcn/jpush/android/c/n;->a()Ljava/lang/String;",
        "Lcn/jpush/android/c/n;->a()V"
    ],
    "Lcn/jpush/android/c/p;": [
        "Lcn/jpush/android/c/p;->a()V"
    ],
    "Lcn/jpush/android/c/e;": [
        "Lcn/jpush/android/c/e;->a()Z"
    ],
    "Landroid/webkit/URLUtil;": [
        "Landroid/webkit/URLUtil;->isHttpUrl()Z"
    ],
    "Lorg/apache/http/params/HttpParams;": [
        "Lorg/apache/http/params/HttpParams;->setParameter()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V",
        "Lorg/apache/http/client/methods/HttpPost;->addHeader()V"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->flush()V",
        "Ljava/io/OutputStream;->write()V",
        "Ljava/io/OutputStream;->close()V"
    ],
    "Lorg/apache/http/entity/AbstractHttpEntity;": [
        "Lorg/apache/http/entity/AbstractHttpEntity;->setContentEncoding()V"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;",
        "Lorg/apache/http/util/EntityUtils;->toByteArray()[B"
    ],
    "[Lcn/jpush/android/c/b;": [
        "[Lcn/jpush/android/c/b;->clone()Ljava/lang/Object;"
    ],
    "Lcn/jpush/android/api/BasicPushNotificationBuilder;": [
        "Lcn/jpush/android/api/BasicPushNotificationBuilder;->a()V",
        "Lcn/jpush/android/api/BasicPushNotificationBuilder;->a()Lcn/jpush/android/api/PushNotificationBuilder;",
        "Lcn/jpush/android/api/BasicPushNotificationBuilder;->toString()Ljava/lang/String;",
        "Lcn/jpush/android/api/BasicPushNotificationBuilder;->a()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/api/n;": [
        "Lcn/jpush/android/api/n;->obtainMessage()Landroid/os/Message;"
    ],
    "Landroid/os/Message;": [
        "Landroid/os/Message;->setData()V",
        "Landroid/os/Message;->obtain()Landroid/os/Message;",
        "Landroid/os/Message;->getData()Landroid/os/Bundle;",
        "Landroid/os/Message;->sendToTarget()V"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeFile()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeResource()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;"
    ],
    "Lcn/jpush/android/api/e;": [
        "Lcn/jpush/android/api/e;->a()V",
        "Lcn/jpush/android/api/e;->a()Lcn/jpush/android/api/e;",
        "Lcn/jpush/android/api/e;->a()Z",
        "Lcn/jpush/android/api/e;->a()Lorg/json/JSONObject;"
    ],
    "Lcn/jpush/android/c/t;": [
        "Lcn/jpush/android/c/t;->a()Z",
        "Lcn/jpush/android/c/t;->a()I"
    ],
    "Lcn/jpush/android/api/JPushInterface;": [
        "Lcn/jpush/android/api/JPushInterface;->a()Lcn/jpush/android/api/PushNotificationBuilder;",
        "Lcn/jpush/android/api/JPushInterface;->a()Z",
        "Lcn/jpush/android/api/JPushInterface;->filterValidTags()Ljava/util/Set;",
        "Lcn/jpush/android/api/JPushInterface;->a()V",
        "Lcn/jpush/android/api/JPushInterface;->setLatestNotifactionNumber()V",
        "Lcn/jpush/android/api/JPushInterface;->reportNotificationOpened()V",
        "Lcn/jpush/android/api/JPushInterface;->onPause()V",
        "Lcn/jpush/android/api/JPushInterface;->onResume()V",
        "Lcn/jpush/android/api/JPushInterface;->setAliasAndTags()V",
        "Lcn/jpush/android/api/JPushInterface;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->toString()Ljava/lang/String;",
        "Ljava/lang/Throwable;->getStackTrace()[Ljava/lang/StackTraceElement;",
        "Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;",
        "Ljava/lang/Throwable;->printStackTrace()V"
    ],
    "Ljava/io/StringWriter;": [
        "Ljava/io/StringWriter;->toString()Ljava/lang/String;",
        "Ljava/io/StringWriter;->write()V"
    ],
    "Ljava/lang/Thread$UncaughtExceptionHandler;": [
        "Ljava/lang/Thread$UncaughtExceptionHandler;->uncaughtException()V"
    ],
    "Landroid/app/ListActivity;": [
        "Landroid/app/ListActivity;->onStop()V",
        "Landroid/app/ListActivity;->onStart()V",
        "Landroid/app/ListActivity;->onResume()V",
        "Landroid/app/ListActivity;->onPause()V"
    ],
    "Lcn/jpush/android/api/CustomPushNotificationBuilder;": [
        "Lcn/jpush/android/api/CustomPushNotificationBuilder;->a()Ljava/lang/String;"
    ],
    "Lcn/jpush/android/c/i;": [
        "Lcn/jpush/android/c/i;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/StackTraceElement;": [
        "Ljava/lang/StackTraceElement;->getFileName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getLineNumber()I",
        "Ljava/lang/StackTraceElement;->toString()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getClassName()Ljava/lang/String;"
    ],
    "Landroid/app/Application;": [
        "Landroid/app/Application;->unregisterActivityLifecycleCallbacks()V",
        "Landroid/app/Application;->registerActivityLifecycleCallbacks()V"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->getApplicationContext()Landroid/content/Context;",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->getPackageName()Ljava/lang/String;",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->getWindow()Landroid/view/Window;",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->onBackPressed()V",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->getExternalCacheDir()Ljava/io/File;",
        "Landroid/app/Activity;->overridePendingTransition()V",
        "Landroid/app/Activity;->getCacheDir()Ljava/io/File;",
        "Landroid/app/Activity;->onCreate()V"
    ],
    "Lcn/jpush/android/api/DefaultPushNotificationBuilder;": [
        "Lcn/jpush/android/api/DefaultPushNotificationBuilder;->a()Landroid/widget/RemoteViews;",
        "Lcn/jpush/android/api/DefaultPushNotificationBuilder;->a()V"
    ],
    "Ljava/util/zip/Adler32;": [
        "Ljava/util/zip/Adler32;->update()V",
        "Ljava/util/zip/Adler32;->getValue()J"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Field;->getBoolean()Z",
        "Ljava/lang/reflect/Field;->setAccessible()V",
        "Ljava/lang/reflect/Field;->set()V",
        "Ljava/lang/reflect/Field;->getInt()I"
    ],
    "Lcn/jpush/android/api/PushNotificationBuilder;": [
        "Lcn/jpush/android/api/PushNotificationBuilder;->a()Ljava/lang/String;",
        "Lcn/jpush/android/api/PushNotificationBuilder;->a()Landroid/app/Notification;"
    ],
    "Landroid/telephony/cdma/CdmaCellLocation;": [
        "Landroid/telephony/cdma/CdmaCellLocation;->getBaseStationLatitude()I",
        "Landroid/telephony/cdma/CdmaCellLocation;->getNetworkId()I",
        "Landroid/telephony/cdma/CdmaCellLocation;->getSystemId()I",
        "Landroid/telephony/cdma/CdmaCellLocation;->getBaseStationLongitude()I",
        "Landroid/telephony/cdma/CdmaCellLocation;->getBaseStationId()I"
    ],
    "Lcn/jpush/android/b/a;": [
        "Lcn/jpush/android/b/a;->a()Lorg/json/JSONArray;",
        "Lcn/jpush/android/b/a;->toString()Ljava/lang/String;",
        "Lcn/jpush/android/b/a;->a()V",
        "Lcn/jpush/android/b/a;->a()I"
    ],
    "Lcn/jpush/android/b/b;": [
        "Lcn/jpush/android/b/b;->a()[I",
        "Lcn/jpush/android/b/b;->a()F",
        "Lcn/jpush/android/b/b;->a()I",
        "Lcn/jpush/android/b/b;->a()Z",
        "Lcn/jpush/android/b/b;->a()Ljava/lang/String;",
        "Lcn/jpush/android/b/b;->a()V",
        "Lcn/jpush/android/b/b;->a()Lorg/json/JSONArray;"
    ],
    "Landroid/telephony/gsm/GsmCellLocation;": [
        "Landroid/telephony/gsm/GsmCellLocation;->getLac()I",
        "Landroid/telephony/gsm/GsmCellLocation;->getCid()I"
    ],
    "Landroid/telephony/NeighboringCellInfo;": [
        "Landroid/telephony/NeighboringCellInfo;->getRssi()I",
        "Landroid/telephony/NeighboringCellInfo;->getCid()I"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->longValue()J",
        "Ljava/lang/Double;->doubleValue()D",
        "Ljava/lang/Double;->toString()Ljava/lang/String;",
        "Ljava/lang/Double;->parseDouble()D",
        "Ljava/lang/Double;->longBitsToDouble()D",
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;",
        "Ljava/lang/Double;->doubleToLongBits()J"
    ],
    "Lcn/jpush/android/b/f;": [
        "Lcn/jpush/android/b/f;->removeMessages()V",
        "Lcn/jpush/android/b/f;->sendEmptyMessageDelayed()Z",
        "Lcn/jpush/android/b/f;->sendEmptyMessage()Z"
    ],
    "Lcn/jpush/android/b/i;": [
        "Lcn/jpush/android/b/i;->a()Z",
        "Lcn/jpush/android/b/i;->a()Ljava/util/List;",
        "Lcn/jpush/android/b/i;->a()Lorg/json/JSONArray;",
        "Lcn/jpush/android/b/i;->a()Landroid/net/wifi/WifiManager;"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getAltitude()D",
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getAccuracy()F",
        "Landroid/location/Location;->getBearing()F",
        "Landroid/location/Location;->getLatitude()D"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->longValue()J",
        "Ljava/lang/Float;->intBitsToFloat()F",
        "Ljava/lang/Float;->parseFloat()F",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;"
    ],
    "Lcn/jpush/android/b/g;": [
        "Lcn/jpush/android/b/g;->a()V",
        "Lcn/jpush/android/b/g;->a()J",
        "Lcn/jpush/android/b/g;->a()Z",
        "Lcn/jpush/android/b/g;->a()Ljava/lang/String;"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;",
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;",
        "Landroid/location/LocationManager;->isProviderEnabled()Z",
        "Landroid/location/LocationManager;->requestLocationUpdates()V"
    ],
    "Landroid/location/Criteria;": [
        "Landroid/location/Criteria;->setCostAllowed()V",
        "Landroid/location/Criteria;->setAccuracy()V",
        "Landroid/location/Criteria;->setAltitudeRequired()V",
        "Landroid/location/Criteria;->setBearingRequired()V",
        "Landroid/location/Criteria;->setPowerRequirement()V"
    ],
    "Landroid/telephony/CellLocation;": [
        "Landroid/telephony/CellLocation;->requestLocationUpdate()V"
    ],
    "Lcn/jpush/android/b/j;": [
        "Lcn/jpush/android/b/j;->a()Lorg/json/JSONObject;"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->getIndeterminateDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/widget/ProgressBar;->setMax()V",
        "Landroid/widget/ProgressBar;->setVisibility()V",
        "Landroid/widget/ProgressBar;->setLayoutParams()V",
        "Landroid/widget/ProgressBar;->setProgress()V",
        "Landroid/widget/ProgressBar;->setIndeterminate()V",
        "Landroid/widget/ProgressBar;->getProgress()I",
        "Landroid/widget/ProgressBar;->getVisibility()I"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->addJavascriptInterface()V",
        "Landroid/webkit/WebView;->setScrollBarStyle()V",
        "Landroid/webkit/WebView;->setScrollbarFadingEnabled()V",
        "Landroid/webkit/WebView;->removeAllViews()V",
        "Landroid/webkit/WebView;->onWindowFocusChanged()V",
        "Landroid/webkit/WebView;->setLayoutParams()V",
        "Landroid/webkit/WebView;->clearCache()V",
        "Landroid/webkit/WebView;->setOnTouchListener()V",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;",
        "Landroid/webkit/WebView;->onAttachedToWindow()V",
        "Landroid/webkit/WebView;->onDetachedFromWindow()V",
        "Landroid/webkit/WebView;->post()Z",
        "Landroid/webkit/WebView;->loadData()V",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->requestFocus()Z",
        "Landroid/webkit/WebView;->setWebChromeClient()V",
        "Landroid/webkit/WebView;->onWindowVisibilityChanged()V",
        "Landroid/webkit/WebView;->getContext()Landroid/content/Context;",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->destroy()V"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setAppCacheMaxSize()V",
        "Landroid/webkit/WebSettings;->setDatabaseEnabled()V",
        "Landroid/webkit/WebSettings;->setUserAgentString()V",
        "Landroid/webkit/WebSettings;->setSupportMultipleWindows()V",
        "Landroid/webkit/WebSettings;->setAppCachePath()V",
        "Landroid/webkit/WebSettings;->setGeolocationDatabasePath()V",
        "Landroid/webkit/WebSettings;->setBuiltInZoomControls()V",
        "Landroid/webkit/WebSettings;->setDefaultTextEncodingName()V",
        "Landroid/webkit/WebSettings;->setCacheMode()V",
        "Landroid/webkit/WebSettings;->setSavePassword()V",
        "Landroid/webkit/WebSettings;->setGeolocationEnabled()V",
        "Landroid/webkit/WebSettings;->setDatabasePath()V",
        "Landroid/webkit/WebSettings;->setAppCacheEnabled()V",
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->getUserAgentString()Ljava/lang/String;",
        "Landroid/webkit/WebSettings;->setJavaScriptCanOpenWindowsAutomatically()V",
        "Landroid/webkit/WebSettings;->setSupportZoom()V",
        "Landroid/webkit/WebSettings;->setUseWideViewPort()V",
        "Landroid/webkit/WebSettings;->setSaveFormData()V",
        "Landroid/webkit/WebSettings;->setAllowFileAccess()V",
        "Landroid/webkit/WebSettings;->setDomStorageEnabled()V"
    ],
    "Lcn/jpush/android/ui/a;": [
        "Lcn/jpush/android/ui/a;->a()Lcn/jpush/android/ui/c;",
        "Lcn/jpush/android/ui/a;->removeAllViews()V",
        "Lcn/jpush/android/ui/a;->addView()V",
        "Lcn/jpush/android/ui/a;->a()V"
    ],
    "Lcn/jpush/android/ui/c;": [
        "Lcn/jpush/android/ui/c;->removeMessages()V",
        "Lcn/jpush/android/ui/c;->sendEmptyMessageDelayed()Z",
        "Lcn/jpush/android/ui/c;->sendEmptyMessage()Z"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setOnClickListener()V",
        "Landroid/widget/ImageView;->setBackgroundColor()V",
        "Landroid/widget/ImageView;->setVisibility()V",
        "Landroid/widget/ImageView;->setImageDrawable()V",
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->setBackgroundDrawable()V",
        "Landroid/widget/ImageView;->setScaleType()V",
        "Landroid/widget/ImageView;->startAnimation()V"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;",
        "Landroid/content/res/AssetManager;->openFd()Landroid/content/res/AssetFileDescriptor;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V"
    ],
    "Lcn/jpush/android/ui/ListViewActivity;": [
        "Lcn/jpush/android/ui/ListViewActivity;->getIntent()Landroid/content/Intent;",
        "Lcn/jpush/android/ui/ListViewActivity;->startActivity()V",
        "Lcn/jpush/android/ui/ListViewActivity;->setContentView()V",
        "Lcn/jpush/android/ui/ListViewActivity;->getApplicationContext()Landroid/content/Context;"
    ],
    "Landroid/widget/GridView;": [
        "Landroid/widget/GridView;->setAdapter()V",
        "Landroid/widget/GridView;->setNumColumns()V",
        "Landroid/widget/GridView;->setOnItemClickListener()V"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Landroid/webkit/WebChromeClient;": [
        "Landroid/webkit/WebChromeClient;->onJsAlert()Z",
        "Landroid/webkit/WebChromeClient;->onJsConfirm()Z",
        "Landroid/webkit/WebChromeClient;->onJsPrompt()Z",
        "Landroid/webkit/WebChromeClient;->onProgressChanged()V",
        "Landroid/webkit/WebChromeClient;->onReceivedTitle()V"
    ],
    "Lcn/jpush/android/ui/h;": [
        "Lcn/jpush/android/ui/h;->getItem()Ljava/lang/Object;"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->isMutable()Z",
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->copy()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getPixels()V",
        "Landroid/graphics/Bitmap;->isRecycled()Z",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->recycle()V",
        "Landroid/graphics/Bitmap;->getConfig()Landroid/graphics/Bitmap$Config;",
        "Landroid/graphics/Bitmap;->compress()Z",
        "Landroid/graphics/Bitmap;->createScaledBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getNinePatchChunk()[B",
        "Landroid/graphics/Bitmap;->getHeight()I"
    ],
    "Landroid/widget/FrameLayout;": [
        "Landroid/widget/FrameLayout;->setBackgroundDrawable()V",
        "Landroid/widget/FrameLayout;->addView()V"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->onLayout()V",
        "Landroid/widget/RelativeLayout;->onRestoreInstanceState()V",
        "Landroid/widget/RelativeLayout;->onDetachedFromWindow()V",
        "Landroid/widget/RelativeLayout;->setBackgroundDrawable()V",
        "Landroid/widget/RelativeLayout;->onMeasure()V",
        "Landroid/widget/RelativeLayout;->setLayoutParams()V",
        "Landroid/widget/RelativeLayout;->onWindowFocusChanged()V",
        "Landroid/widget/RelativeLayout;->setPadding()V",
        "Landroid/widget/RelativeLayout;->getVisibility()I",
        "Landroid/widget/RelativeLayout;->onAttachedToWindow()V",
        "Landroid/widget/RelativeLayout;->addView()V",
        "Landroid/widget/RelativeLayout;->setVisibility()V",
        "Landroid/widget/RelativeLayout;->setBackgroundColor()V"
    ],
    "Lcn/jpush/android/ui/PushActivity;": [
        "Lcn/jpush/android/ui/PushActivity;->setContentView()V",
        "Lcn/jpush/android/ui/PushActivity;->a()Landroid/os/Handler;",
        "Lcn/jpush/android/ui/PushActivity;->requestWindowFeature()Z",
        "Lcn/jpush/android/ui/PushActivity;->a()V",
        "Lcn/jpush/android/ui/PushActivity;->a()Lcn/jpush/android/a/d;",
        "Lcn/jpush/android/ui/PushActivity;->a()Landroid/app/ProgressDialog;",
        "Lcn/jpush/android/ui/PushActivity;->getWindow()Landroid/view/Window;",
        "Lcn/jpush/android/ui/PushActivity;->setRequestedOrientation()V",
        "Lcn/jpush/android/ui/PushActivity;->a()Ljava/lang/String;",
        "Lcn/jpush/android/ui/PushActivity;->getIntent()Landroid/content/Intent;",
        "Lcn/jpush/android/ui/PushActivity;->finish()V",
        "Lcn/jpush/android/ui/PushActivity;->getApplicationContext()Landroid/content/Context;"
    ],
    "Lcn/jpush/android/a/f;": [
        "Lcn/jpush/android/a/f;->a()Landroid/widget/ImageView;",
        "Lcn/jpush/android/a/f;->a()V",
        "Lcn/jpush/android/a/f;->setPadding()V",
        "Lcn/jpush/android/a/f;->addView()V",
        "Lcn/jpush/android/a/f;->a()Landroid/graphics/Bitmap;",
        "Lcn/jpush/android/a/f;->setOrientation()V",
        "Lcn/jpush/android/a/f;->setLayoutParams()V"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->addFlags()V",
        "Landroid/view/Window;->setGravity()V",
        "Landroid/view/Window;->getDecorView()Landroid/view/View;",
        "Landroid/view/Window;->requestFeature()Z",
        "Landroid/view/Window;->clearFlags()V",
        "Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;",
        "Landroid/view/Window;->setFlags()V",
        "Landroid/view/Window;->setAttributes()V"
    ],
    "Landroid/app/ProgressDialog;": [
        "Landroid/app/ProgressDialog;->setIndeterminate()V",
        "Landroid/app/ProgressDialog;->show()Landroid/app/ProgressDialog;",
        "Landroid/app/ProgressDialog;->show()V",
        "Landroid/app/ProgressDialog;->isShowing()Z",
        "Landroid/app/ProgressDialog;->dismiss()V",
        "Landroid/app/ProgressDialog;->setMessage()V"
    ],
    "Lcn/jpush/android/ui/d;": [
        "Lcn/jpush/android/ui/d;->a()Landroid/widget/ProgressBar;"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->onPageStarted()V",
        "Landroid/webkit/WebViewClient;->onPageFinished()V",
        "Landroid/webkit/WebViewClient;->onLoadResource()V",
        "Landroid/webkit/WebViewClient;->onReceivedError()V"
    ],
    "Lcn/jpush/android/ui/k;": [
        "Lcn/jpush/android/ui/k;->sendEmptyMessageDelayed()Z"
    ],
    "Lcn/jpush/android/a/m;": [
        "Lcn/jpush/android/a/m;->start()V"
    ],
    "Landroid/database/sqlite/SQLiteDatabase;": [
        "Landroid/database/sqlite/SQLiteDatabase;->query()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->getVersion()I",
        "Landroid/database/sqlite/SQLiteDatabase;->isReadOnly()Z",
        "Landroid/database/sqlite/SQLiteDatabase;->close()V",
        "Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z",
        "Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V",
        "Landroid/database/sqlite/SQLiteDatabase;->rawQuery()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->delete()I",
        "Landroid/database/sqlite/SQLiteDatabase;->insert()J",
        "Landroid/database/sqlite/SQLiteDatabase;->update()I",
        "Landroid/database/sqlite/SQLiteDatabase;->openOrCreateDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Landroid/database/sqlite/SQLiteDatabase;->execSQL()V",
        "Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V",
        "Landroid/database/sqlite/SQLiteDatabase;->setVersion()V",
        "Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->size()I",
        "Landroid/content/ContentValues;->put()V"
    ],
    "Lcn/jpush/android/a/p;": [
        "Lcn/jpush/android/a/p;->start()V"
    ],
    "Lcn/jpush/android/c/h;": [
        "Lcn/jpush/android/c/h;->a()Ljava/util/ArrayList;",
        "Lcn/jpush/android/c/h;->a()Lorg/json/JSONArray;"
    ],
    "Lcn/jpush/android/a/i;": [
        "Lcn/jpush/android/a/i;->start()V"
    ],
    "Lcn/jpush/android/a/j;": [
        "Lcn/jpush/android/a/j;->start()V"
    ],
    "Lcn/jpush/android/a/o;": [
        "Lcn/jpush/android/a/o;->a()Z"
    ],
    "Lcn/jpush/android/a/h;": [
        "Lcn/jpush/android/a/h;->a()V",
        "Lcn/jpush/android/a/h;->a()Z"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextFloat()F",
        "Ljava/util/Random;->nextBoolean()Z",
        "Ljava/util/Random;->nextBytes()V",
        "Ljava/util/Random;->nextInt()I"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->rgb()I",
        "Landroid/graphics/Color;->argb()I",
        "Landroid/graphics/Color;->parseColor()I",
        "Landroid/graphics/Color;->HSVToColor()I"
    ],
    "Landroid/widget/ScrollView;": [
        "Landroid/widget/ScrollView;->addView()V"
    ],
    "Landroid/widget/LinearLayout$LayoutParams;": [
        "Landroid/widget/LinearLayout$LayoutParams;->setMargins()V"
    ],
    "Landroid/widget/Button;": [
        "Landroid/widget/Button;->setText()V",
        "Landroid/widget/Button;->setVisibility()V",
        "Landroid/widget/Button;->setOnClickListener()V"
    ],
    "Lcn/jpush/android/a/k;": [
        "Lcn/jpush/android/a/k;->a()Lorg/json/JSONObject;"
    ],
    "Lorg/andengine/util/system/SystemUtils;": [
        "Lorg/andengine/util/system/SystemUtils;->getPackageName()Ljava/lang/String;",
        "Lorg/andengine/util/system/SystemUtils;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Lorg/andengine/util/system/SystemUtils;->isAndroidVersionOrLower()Z",
        "Lorg/andengine/util/system/SystemUtils;->readSystemFileAsInt()I",
        "Lorg/andengine/util/system/SystemUtils;->isAndroidVersion()Z",
        "Lorg/andengine/util/system/SystemUtils;->matchSystemFile()Ljava/util/regex/MatchResult;",
        "Lorg/andengine/util/system/SystemUtils;->hasSystemFeature()Z"
    ],
    "Lorg/andengine/AndEngine;": [
        "Lorg/andengine/AndEngine;->checkOpenGLSupport()V",
        "Lorg/andengine/AndEngine;->checkDeviceSupported()V",
        "Lorg/andengine/AndEngine;->checkEGLConfigChooserSupport()V",
        "Lorg/andengine/AndEngine;->checkCodePathSupport()V"
    ],
    "Ljavax/microedition/khronos/egl/EGLContext;": [
        "Ljavax/microedition/khronos/egl/EGLContext;->getEGL()Ljavax/microedition/khronos/egl/EGL;"
    ],
    "Ljavax/microedition/khronos/egl/EGL10;": [
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigAttrib()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglChooseConfig()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetDisplay()Ljavax/microedition/khronos/egl/EGLDisplay;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglInitialize()Z"
    ],
    "Lorg/andengine/opengl/view/ConfigChooser;": [
        "Lorg/andengine/opengl/view/ConfigChooser;->getRedSize()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->getAlphaSize()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->getConfigAttrib()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->getBlueSize()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->chooseConfig()Ljavax/microedition/khronos/egl/EGLConfig;",
        "Lorg/andengine/opengl/view/ConfigChooser;->getGreenSize()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->isCoverageMultiSampling()Z",
        "Lorg/andengine/opengl/view/ConfigChooser;->getDepthSize()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->getEGLConfigCount()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->getStencilSize()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->findEGLConfig()Ljavax/microedition/khronos/egl/EGLConfig;"
    ],
    "Lorg/andengine/audio/IAudioEntity;": [
        "Lorg/andengine/audio/IAudioEntity;->stop()V",
        "Lorg/andengine/audio/IAudioEntity;->onMasterVolumeChanged()V",
        "Lorg/andengine/audio/IAudioEntity;->release()V"
    ],
    "Lorg/andengine/audio/BaseAudioEntity;": [
        "Lorg/andengine/audio/BaseAudioEntity;->play()V",
        "Lorg/andengine/audio/BaseAudioEntity;->setVolume()V",
        "Lorg/andengine/audio/BaseAudioEntity;->stop()V",
        "Lorg/andengine/audio/BaseAudioEntity;->resume()V",
        "Lorg/andengine/audio/BaseAudioEntity;->release()V",
        "Lorg/andengine/audio/BaseAudioEntity;->assertNotReleased()V",
        "Lorg/andengine/audio/BaseAudioEntity;->setLooping()V",
        "Lorg/andengine/audio/BaseAudioEntity;->throwOnReleased()V",
        "Lorg/andengine/audio/BaseAudioEntity;->pause()V",
        "Lorg/andengine/audio/BaseAudioEntity;->getAudioManager()Lorg/andengine/audio/IAudioManager;",
        "Lorg/andengine/audio/BaseAudioEntity;->getMasterVolume()F"
    ],
    "Lorg/andengine/audio/IAudioManager;": [
        "Lorg/andengine/audio/IAudioManager;->getMasterVolume()F"
    ],
    "Lorg/andengine/audio/sound/Sound;": [
        "Lorg/andengine/audio/sound/Sound;->setLoopCount()V",
        "Lorg/andengine/audio/sound/Sound;->setLoaded()V",
        "Lorg/andengine/audio/sound/Sound;->getSoundPool()Landroid/media/SoundPool;",
        "Lorg/andengine/audio/sound/Sound;->setVolume()V",
        "Lorg/andengine/audio/sound/Sound;->getMasterVolume()F",
        "Lorg/andengine/audio/sound/Sound;->getSoundID()I",
        "Lorg/andengine/audio/sound/Sound;->play()V",
        "Lorg/andengine/audio/sound/Sound;->pause()V",
        "Lorg/andengine/audio/sound/Sound;->assertNotReleased()V",
        "Lorg/andengine/audio/sound/Sound;->getAudioManager()Lorg/andengine/audio/sound/SoundManager;"
    ],
    "Lorg/andengine/audio/sound/SoundManager;": [
        "Lorg/andengine/audio/sound/SoundManager;->releaseAll()V",
        "Lorg/andengine/audio/sound/SoundManager;->getSoundPool()Landroid/media/SoundPool;",
        "Lorg/andengine/audio/sound/SoundManager;->remove()Z",
        "Lorg/andengine/audio/sound/SoundManager;->setMasterVolume()V",
        "Lorg/andengine/audio/sound/SoundManager;->add()V"
    ],
    "Landroid/media/SoundPool;": [
        "Landroid/media/SoundPool;->stop()V",
        "Landroid/media/SoundPool;->pause()V",
        "Landroid/media/SoundPool;->setLoop()V",
        "Landroid/media/SoundPool;->setRate()V",
        "Landroid/media/SoundPool;->unload()Z",
        "Landroid/media/SoundPool;->play()I",
        "Landroid/media/SoundPool;->load()I",
        "Landroid/media/SoundPool;->setVolume()V",
        "Landroid/media/SoundPool;->setOnLoadCompleteListener()V",
        "Landroid/media/SoundPool;->resume()V",
        "Landroid/media/SoundPool;->release()V"
    ],
    "Lorg/andengine/audio/sound/SoundFactory;": [
        "Lorg/andengine/audio/sound/SoundFactory;->createSoundFromPath()Lorg/andengine/audio/sound/Sound;",
        "Lorg/andengine/audio/sound/SoundFactory;->createSoundFromAsset()Lorg/andengine/audio/sound/Sound;",
        "Lorg/andengine/audio/sound/SoundFactory;->onCreate()V",
        "Lorg/andengine/audio/sound/SoundFactory;->setAssetBasePath()V"
    ],
    "Lorg/andengine/audio/BaseAudioManager;": [
        "Lorg/andengine/audio/BaseAudioManager;->releaseAll()V",
        "Lorg/andengine/audio/BaseAudioManager;->add()V",
        "Lorg/andengine/audio/BaseAudioManager;->remove()Z"
    ],
    "Landroid/util/SparseArray;": [
        "Landroid/util/SparseArray;->indexOfKey()I",
        "Landroid/util/SparseArray;->valueAt()Ljava/lang/Object;",
        "Landroid/util/SparseArray;->get()Ljava/lang/Object;",
        "Landroid/util/SparseArray;->clear()V",
        "Landroid/util/SparseArray;->remove()V",
        "Landroid/util/SparseArray;->put()V",
        "Landroid/util/SparseArray;->size()I",
        "Landroid/util/SparseArray;->keyAt()I"
    ],
    "Landroid/content/res/AssetFileDescriptor;": [
        "Landroid/content/res/AssetFileDescriptor;->getLength()J",
        "Landroid/content/res/AssetFileDescriptor;->getStartOffset()J",
        "Landroid/content/res/AssetFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->setOnCompletionListener()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->isPlaying()Z",
        "Landroid/media/MediaPlayer;->setVolume()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->create()Landroid/media/MediaPlayer;",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->stop()V",
        "Landroid/media/MediaPlayer;->seekTo()V"
    ],
    "Lorg/andengine/audio/music/MusicManager;": [
        "Lorg/andengine/audio/music/MusicManager;->releaseAll()V",
        "Lorg/andengine/audio/music/MusicManager;->remove()Z",
        "Lorg/andengine/audio/music/MusicManager;->setMasterVolume()V",
        "Lorg/andengine/audio/music/MusicManager;->getMasterVolume()F",
        "Lorg/andengine/audio/music/MusicManager;->add()V"
    ],
    "Lorg/andengine/audio/music/MusicFactory;": [
        "Lorg/andengine/audio/music/MusicFactory;->setAssetBasePath()V",
        "Lorg/andengine/audio/music/MusicFactory;->onCreate()V",
        "Lorg/andengine/audio/music/MusicFactory;->createMusicFromAsset()Lorg/andengine/audio/music/Music;"
    ],
    "Lorg/andengine/audio/music/Music;": [
        "Lorg/andengine/audio/music/Music;->stop()V",
        "Lorg/andengine/audio/music/Music;->pause()V",
        "Lorg/andengine/audio/music/Music;->assertNotReleased()V",
        "Lorg/andengine/audio/music/Music;->seekTo()V",
        "Lorg/andengine/audio/music/Music;->setVolume()V",
        "Lorg/andengine/audio/music/Music;->play()V",
        "Lorg/andengine/audio/music/Music;->setLooping()V",
        "Lorg/andengine/audio/music/Music;->getAudioManager()Lorg/andengine/audio/music/MusicManager;"
    ],
    "Landroid/app/Dialog;": [
        "Landroid/app/Dialog;->getWindow()Landroid/view/Window;"
    ],
    "Lorg/andengine/util/ActivityUtils;": [
        "Lorg/andengine/util/ActivityUtils;->doProgressAsync()V",
        "Lorg/andengine/util/ActivityUtils;->requestFullscreen()V",
        "Lorg/andengine/util/ActivityUtils;->keepScreenOn()V",
        "Lorg/andengine/util/ActivityUtils;->doAsync()V"
    ],
    "Lorg/andengine/util/call/AsyncCallable;": [
        "Lorg/andengine/util/call/AsyncCallable;->call()V"
    ],
    "Lorg/andengine/util/ActivityUtils$1;": [
        "Lorg/andengine/util/ActivityUtils$1;->execute()Landroid/os/AsyncTask;"
    ],
    "Lorg/andengine/util/ActivityUtils$2;": [
        "Lorg/andengine/util/ActivityUtils$2;->execute()Landroid/os/AsyncTask;"
    ],
    "Lorg/andengine/util/TimeUtils;": [
        "Lorg/andengine/util/TimeUtils;->formatSeconds()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/TextUtils;": [
        "Lorg/andengine/util/TextUtils;->countCharacters()I",
        "Lorg/andengine/util/TextUtils;->countOccurrences()I",
        "Lorg/andengine/util/TextUtils;->split()Ljava/util/List;"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->subSequence()Ljava/lang/CharSequence;",
        "Ljava/lang/CharSequence;->toString()Ljava/lang/String;",
        "Ljava/lang/CharSequence;->length()I",
        "Ljava/lang/CharSequence;->charAt()C"
    ],
    "Ljava/lang/Character;": [
        "Ljava/lang/Character;->toLowerCase()C",
        "Ljava/lang/Character;->isWhitespace()Z",
        "Ljava/lang/Character;->toString()Ljava/lang/String;",
        "Ljava/lang/Character;->charValue()C"
    ],
    "Lorg/andengine/util/StreamUtils;": [
        "Lorg/andengine/util/StreamUtils;->readFully()Ljava/lang/String;",
        "Lorg/andengine/util/StreamUtils;->copy()V",
        "Lorg/andengine/util/StreamUtils;->streamToBytes()[B",
        "Lorg/andengine/util/StreamUtils;->streamToBytes()V",
        "Lorg/andengine/util/StreamUtils;->copyAndClose()Z",
        "Lorg/andengine/util/StreamUtils;->flushCloseStream()V",
        "Lorg/andengine/util/StreamUtils;->close()V"
    ],
    "Lorg/andengine/util/FileUtils;": [
        "Lorg/andengine/util/FileUtils;->deleteDirectory()Z",
        "Lorg/andengine/util/FileUtils;->isDirectoryExistingOnExternalStorage()Z",
        "Lorg/andengine/util/FileUtils;->copyToInternalStorage()V",
        "Lorg/andengine/util/FileUtils;->copyToExternalStorage()V",
        "Lorg/andengine/util/FileUtils;->isExternalStorageReadable()Z",
        "Lorg/andengine/util/FileUtils;->getAbsolutePathOnInternalStorage()Ljava/lang/String;",
        "Lorg/andengine/util/FileUtils;->getAbsolutePathOnExternalStorage()Ljava/lang/String;",
        "Lorg/andengine/util/FileUtils;->isExternalStorageWriteable()Z"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;",
        "Landroid/view/LayoutInflater;->from()Landroid/view/LayoutInflater;"
    ],
    "Lorg/andengine/util/BetaUtils;": [
        "Lorg/andengine/util/BetaUtils;->finishWhenExpired()Z"
    ],
    "Lorg/andengine/util/preferences/SimplePreferences;": [
        "Lorg/andengine/util/preferences/SimplePreferences;->getEditorInstance()Landroid/content/SharedPreferences$Editor;",
        "Lorg/andengine/util/preferences/SimplePreferences;->incrementAccessCount()I",
        "Lorg/andengine/util/preferences/SimplePreferences;->getInstance()Landroid/content/SharedPreferences;"
    ],
    "Ljava/util/GregorianCalendar;": [
        "Ljava/util/GregorianCalendar;->after()Z",
        "Ljava/util/GregorianCalendar;->setTimeInMillis()V"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setView()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setNeutralButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setIcon()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setOnCancelListener()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->show()V"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->flush()V"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->read()I"
    ],
    "Lorg/andengine/util/math/MathUtils;": [
        "Lorg/andengine/util/math/MathUtils;->atan2()F",
        "Lorg/andengine/util/math/MathUtils;->degToRad()F",
        "Lorg/andengine/util/math/MathUtils;->radToDeg()F",
        "Lorg/andengine/util/math/MathUtils;->random()I",
        "Lorg/andengine/util/math/MathUtils;->bringToBounds()F",
        "Lorg/andengine/util/math/MathUtils;->arraySumInto()V",
        "Lorg/andengine/util/math/MathUtils;->scaleAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->bringToBounds()I",
        "Lorg/andengine/util/math/MathUtils;->distance()F",
        "Lorg/andengine/util/math/MathUtils;->isPowerOfTwo()Z",
        "Lorg/andengine/util/math/MathUtils;->revertScaleAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->rotateAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->random()F",
        "Lorg/andengine/util/math/MathUtils;->revertRotateAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->nextPowerOfTwo()I",
        "Lorg/andengine/util/math/MathUtils;->arraySum()F",
        "Lorg/andengine/util/math/MathUtils;->randomSign()I"
    ],
    "Lorg/andengine/util/ProbabilityGenerator$Entry;": [
        "Lorg/andengine/util/ProbabilityGenerator$Entry;->getReturnValue()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/ThreadUtils;": [
        "Lorg/andengine/util/ThreadUtils;->dumpCurrentThreadInfo()V"
    ],
    "Lorg/andengine/util/debug/Debug;": [
        "Lorg/andengine/util/debug/Debug;->a()V",
        "Lorg/andengine/util/debug/Debug;->log()V",
        "Lorg/andengine/util/debug/Debug;->$SWITCH_TABLE$org$andengine$util$debug$Debug$DebugLevel()[I"
    ],
    "Ljava/net/ServerSocket;": [
        "Ljava/net/ServerSocket;->close()V",
        "Ljava/net/ServerSocket;->isClosed()Z"
    ],
    "Ljava/net/Socket;": [
        "Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/Socket;->isClosed()Z",
        "Ljava/net/Socket;->close()V"
    ],
    "Lorg/andengine/util/SAXUtils;": [
        "Lorg/andengine/util/SAXUtils;->getIntAttribute()I",
        "Lorg/andengine/util/SAXUtils;->getIntAttributeOrThrow()I",
        "Lorg/andengine/util/SAXUtils;->appendAttribute()V",
        "Lorg/andengine/util/SAXUtils;->getAttributeOrThrow()Ljava/lang/String;",
        "Lorg/andengine/util/SAXUtils;->getBooleanAttributeOrThrow()Z"
    ],
    "Lorg/xml/sax/Attributes;": [
        "Lorg/xml/sax/Attributes;->getValue()Ljava/lang/String;"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->valueOf()Ljava/lang/Short;",
        "Ljava/lang/Short;->shortValue()S",
        "Ljava/lang/Short;->parseShort()S"
    ],
    "Lorg/andengine/util/levelstats/LevelStatsDBConnector;": [
        "Lorg/andengine/util/levelstats/LevelStatsDBConnector;->submitAsync()V"
    ],
    "Landroid/util/FloatMath;": [
        "Landroid/util/FloatMath;->ceil()F",
        "Landroid/util/FloatMath;->sin()F",
        "Landroid/util/FloatMath;->sqrt()F",
        "Landroid/util/FloatMath;->floor()F",
        "Landroid/util/FloatMath;->cos()F"
    ],
    "Lorg/andengine/util/base64/Base64$Coder;": [
        "Lorg/andengine/util/base64/Base64$Coder;->process()Z",
        "Lorg/andengine/util/base64/Base64$Coder;->maxOutputSize()I"
    ],
    "Lorg/andengine/util/base64/Base64InputStream;": [
        "Lorg/andengine/util/base64/Base64InputStream;->refill()V"
    ],
    "Lorg/andengine/util/base64/Base64;": [
        "Lorg/andengine/util/base64/Base64;->decode()[B",
        "Lorg/andengine/util/base64/Base64;->encode()[B"
    ],
    "Lorg/andengine/util/base64/Base64$Decoder;": [
        "Lorg/andengine/util/base64/Base64$Decoder;->process()Z"
    ],
    "Lorg/andengine/util/base64/Base64$Encoder;": [
        "Lorg/andengine/util/base64/Base64$Encoder;->process()Z"
    ],
    "Lorg/andengine/util/color/Color;": [
        "Lorg/andengine/util/color/Color;->equals()Z",
        "Lorg/andengine/util/color/Color;->getABGRPackedFloat()F",
        "Lorg/andengine/util/color/Color;->packABGR()V",
        "Lorg/andengine/util/color/Color;->getRed()F",
        "Lorg/andengine/util/color/Color;->packABGRBlue()V",
        "Lorg/andengine/util/color/Color;->getBlue()F",
        "Lorg/andengine/util/color/Color;->getAlpha()F",
        "Lorg/andengine/util/color/Color;->reset()V",
        "Lorg/andengine/util/color/Color;->getGreen()F",
        "Lorg/andengine/util/color/Color;->getABGRPackedInt()I",
        "Lorg/andengine/util/color/Color;->setAlphaChecking()Z",
        "Lorg/andengine/util/color/Color;->setChecking()Z",
        "Lorg/andengine/util/color/Color;->setBlueChecking()Z",
        "Lorg/andengine/util/color/Color;->setGreenChecking()Z",
        "Lorg/andengine/util/color/Color;->packABGRRed()V",
        "Lorg/andengine/util/color/Color;->getARGBPackedInt()I",
        "Lorg/andengine/util/color/Color;->setRedChecking()Z",
        "Lorg/andengine/util/color/Color;->packABGRGreen()V",
        "Lorg/andengine/util/color/Color;->packABGRAlpha()V",
        "Lorg/andengine/util/color/Color;->set()V"
    ],
    "Lorg/andengine/util/color/ColorUtils;": [
        "Lorg/andengine/util/color/ColorUtils;->convertHSVToARGBPackedInt()I",
        "Lorg/andengine/util/color/ColorUtils;->extractBlueFromARGBPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->convertRGBAToABGRPackedFloat()F",
        "Lorg/andengine/util/color/ColorUtils;->extractGreenFromARGBPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->convertPackedIntToPackedFloat()F",
        "Lorg/andengine/util/color/ColorUtils;->extractGreenFromABGRPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->extractRedFromABGRPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->extractAlphaFromABGRPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->convertRGBAToARGBPackedInt()I",
        "Lorg/andengine/util/color/ColorUtils;->extractBlueFromABGRPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->convertRGBAToABGRPackedInt()I",
        "Lorg/andengine/util/color/ColorUtils;->extractRedFromARGBPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->extractAlphaFromARGBPackedInt()F",
        "Lorg/andengine/util/color/ColorUtils;->convertARGBPackedIntToColor()Lorg/andengine/util/color/Color;"
    ],
    "Lorg/andengine/util/color/ColorPool;": [
        "Lorg/andengine/util/color/ColorPool;->onAllocatePoolItem()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/util/color/ColorPool;->onHandleRecycleItem()V"
    ],
    "Lorg/andengine/util/adt/pool/GenericPool;": [
        "Lorg/andengine/util/adt/pool/GenericPool;->onHandleObtainItem()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->onHandleAllocatePoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/GenericPool;->obtainPoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/GenericPool;->onAllocatePoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/GenericPool;->onHandleRecycleItem()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->batchAllocatePoolItems()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->recyclePoolItem()V"
    ],
    "Lorg/andengine/util/adt/array/ArrayUtils;": [
        "Lorg/andengine/util/adt/array/ArrayUtils;->idealIntArraySize()I",
        "Lorg/andengine/util/adt/array/ArrayUtils;->idealByteArraySize()I",
        "Lorg/andengine/util/adt/array/ArrayUtils;->reverse()V"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/bit/BitVector;": [
        "Lorg/andengine/util/adt/bit/BitVector;->getBit()Z",
        "Lorg/andengine/util/adt/bit/BitVector;->getBits()J"
    ],
    "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;": [
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->moveToTail()V",
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->poll()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->add()Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueueNode;"
    ],
    "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;": [
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->moveToTail()V",
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->add()Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueueNode;",
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->poll()I"
    ],
    "Lorg/andengine/util/adt/cache/IntLRUCache;": [
        "Lorg/andengine/util/adt/cache/IntLRUCache;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->clear()V",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->getSize()I",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->put()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/cache/LRUCache;": [
        "Lorg/andengine/util/adt/cache/LRUCache;->getSize()I",
        "Lorg/andengine/util/adt/cache/LRUCache;->put()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/cache/LRUCache;->clear()V",
        "Lorg/andengine/util/adt/cache/LRUCache;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/LRUCache;->get()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/spatial/ISpatialItem;": [
        "Lorg/andengine/util/adt/spatial/ISpatialItem;->getBounds()Lorg/andengine/util/adt/bounds/IBounds;"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;": [
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->getItemCount()I",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->remove()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->add()V"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;": [
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->callItems()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->add()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->containsAny()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->remove()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->toString()Ljava/lang/String;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->clear()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->getItemCount()I",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->callNodes()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->access$0()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->contains()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->appendBoundsToString()V"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;"
    ],
    "Lorg/andengine/util/adt/bounds/IntBounds;": [
        "Lorg/andengine/util/adt/bounds/IntBounds;->set()V"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;": [
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->getRoot()Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->containsAny()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->query()Ljava/util/ArrayList;",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->queryForSubclass()Ljava/util/List;"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;": [
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getYMin()I",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getXMin()I",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getXMax()I",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getYMax()I"
    ],
    "Lorg/andengine/util/adt/bounds/FloatBounds;": [
        "Lorg/andengine/util/adt/bounds/FloatBounds;->set()V"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;": [
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->containsAny()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->getRoot()Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->query()Ljava/util/ArrayList;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->queryForSubclass()Ljava/util/List;"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;": [
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getXMax()F",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getXMin()F",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getYMin()F",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getYMax()F"
    ],
    "Lorg/andengine/util/adt/bounds/IFloatBounds;": [
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getXMin()F",
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getYMax()F",
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getXMax()F",
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getYMin()F"
    ],
    "Lorg/andengine/util/adt/spatial/bounds/util/FloatBoundsUtils;": [
        "Lorg/andengine/util/adt/spatial/bounds/util/FloatBoundsUtils;->intersects()Z",
        "Lorg/andengine/util/adt/spatial/bounds/util/FloatBoundsUtils;->contains()Z"
    ],
    "Lorg/andengine/util/adt/bounds/IIntBounds;": [
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getXMin()I",
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getYMax()I",
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getXMax()I",
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getYMin()I"
    ],
    "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;": [
        "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;->adjacent()Z",
        "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;->contains()Z",
        "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;->intersects()Z"
    ],
    "Lorg/andengine/util/adt/queue/UniqueQueue;": [
        "Lorg/andengine/util/adt/queue/UniqueQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->add()V",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->enter()V",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->poll()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->peek()Ljava/lang/Comparable;"
    ],
    "Lorg/andengine/util/adt/queue/CircularQueue;": [
        "Lorg/andengine/util/adt/queue/CircularQueue;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/CircularQueue;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/CircularQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/CircularQueue;->add()V"
    ],
    "Lorg/andengine/util/adt/queue/ShiftQueue;": [
        "Lorg/andengine/util/adt/queue/ShiftQueue;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/ShiftQueue;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/ShiftQueue;->add()V",
        "Lorg/andengine/util/adt/queue/ShiftQueue;->isEmpty()Z"
    ],
    "Lorg/andengine/util/adt/queue/SortedQueue;": [
        "Lorg/andengine/util/adt/queue/SortedQueue;->enter()V",
        "Lorg/andengine/util/adt/queue/SortedQueue;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/SortedQueue;->poll()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/SortedQueue;->add()V",
        "Lorg/andengine/util/adt/queue/SortedQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/SortedQueue;->peek()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/SortedQueue;->get()Ljava/lang/Comparable;"
    ],
    "Lorg/andengine/util/adt/queue/IQueue;": [
        "Lorg/andengine/util/adt/queue/IQueue;->size()I",
        "Lorg/andengine/util/adt/queue/IQueue;->add()V",
        "Lorg/andengine/util/adt/queue/IQueue;->enter()V",
        "Lorg/andengine/util/adt/queue/IQueue;->removeFirst()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->poll()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->removeLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->indexOf()I",
        "Lorg/andengine/util/adt/queue/IQueue;->set()V",
        "Lorg/andengine/util/adt/queue/IQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/IQueue;->peek()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->clear()V",
        "Lorg/andengine/util/adt/queue/IQueue;->remove()Z"
    ],
    "Lorg/andengine/util/adt/transformation/Transformation;": [
        "Lorg/andengine/util/adt/transformation/Transformation;->postScale()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postTranslate()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postSkew()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->preConcat()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->transform()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postConcat()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->setToIdentity()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->setTo()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postRotate()V"
    ],
    "Lorg/andengine/util/adt/trie/Trie$TrieNode;": [
        "Lorg/andengine/util/adt/trie/Trie$TrieNode;->contains()Z",
        "Lorg/andengine/util/adt/trie/Trie$TrieNode;->add()V"
    ],
    "Lorg/andengine/util/adt/list/CircularList;": [
        "Lorg/andengine/util/adt/list/CircularList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/CircularList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/CircularList;->size()I",
        "Lorg/andengine/util/adt/list/CircularList;->indexOf()I",
        "Lorg/andengine/util/adt/list/CircularList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/CircularList;->encodeToInternalIndex()I"
    ],
    "Lorg/andengine/util/adt/list/LongArrayList;": [
        "Lorg/andengine/util/adt/list/LongArrayList;->clear()V",
        "Lorg/andengine/util/adt/list/LongArrayList;->toArray()[J",
        "Lorg/andengine/util/adt/list/LongArrayList;->add()V",
        "Lorg/andengine/util/adt/list/LongArrayList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/LongArrayList;->size()I"
    ],
    "Lorg/andengine/util/adt/list/IntArrayList;": [
        "Lorg/andengine/util/adt/list/IntArrayList;->ensureCapacity()V"
    ],
    "Lorg/andengine/util/adt/list/ListUtils;": [
        "Lorg/andengine/util/adt/list/ListUtils;->toList()Ljava/util/ArrayList;",
        "Lorg/andengine/util/adt/list/ListUtils;->encodeInsertionIndex()I"
    ],
    "Lorg/andengine/util/adt/list/IList;": [
        "Lorg/andengine/util/adt/list/IList;->add()V",
        "Lorg/andengine/util/adt/list/IList;->indexOf()I",
        "Lorg/andengine/util/adt/list/IList;->remove()Z",
        "Lorg/andengine/util/adt/list/IList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->removeLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->size()I",
        "Lorg/andengine/util/adt/list/IList;->clear()V",
        "Lorg/andengine/util/adt/list/IList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->removeFirst()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->set()V",
        "Lorg/andengine/util/adt/list/IList;->isEmpty()Z"
    ],
    "Ljava/lang/Comparable;": [
        "Ljava/lang/Comparable;->compareTo()I"
    ],
    "Lorg/andengine/util/adt/list/SortedList;": [
        "Lorg/andengine/util/adt/list/SortedList;->remove()Z",
        "Lorg/andengine/util/adt/list/SortedList;->removeLast()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->indexOf()I",
        "Lorg/andengine/util/adt/list/SortedList;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->set()V",
        "Lorg/andengine/util/adt/list/SortedList;->removeFirst()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->add()V",
        "Lorg/andengine/util/adt/list/SortedList;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->scanForEqualItem()I",
        "Lorg/andengine/util/adt/list/SortedList;->binarySearch()I"
    ],
    "Lorg/andengine/util/adt/list/SmartList;": [
        "Lorg/andengine/util/adt/list/SmartList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->isEmpty()Z",
        "Lorg/andengine/util/adt/list/SmartList;->addLast()V",
        "Lorg/andengine/util/adt/list/SmartList;->call()V",
        "Lorg/andengine/util/adt/list/SmartList;->clear()V",
        "Lorg/andengine/util/adt/list/SmartList;->removeLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/util/adt/list/SmartList;->size()I",
        "Lorg/andengine/util/adt/list/SmartList;->add()Z",
        "Lorg/andengine/util/adt/list/SmartList;->add()V",
        "Lorg/andengine/util/adt/list/SmartList;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/list/SmartList;->removeAll()Z",
        "Lorg/andengine/util/adt/list/SmartList;->remove()Z",
        "Lorg/andengine/util/adt/list/SmartList;->getLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->remove()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/IMatcher;": [
        "Lorg/andengine/util/IMatcher;->matches()Z"
    ],
    "Lorg/andengine/util/call/ParameterCallable;": [
        "Lorg/andengine/util/call/ParameterCallable;->call()V"
    ],
    "Lorg/andengine/util/adt/list/UniqueList;": [
        "Lorg/andengine/util/adt/list/UniqueList;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->indexOf()I",
        "Lorg/andengine/util/adt/list/UniqueList;->remove()Z",
        "Lorg/andengine/util/adt/list/UniqueList;->removeLast()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->set()V",
        "Lorg/andengine/util/adt/list/UniqueList;->add()V",
        "Lorg/andengine/util/adt/list/UniqueList;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->removeFirst()Ljava/lang/Comparable;"
    ],
    "Lorg/andengine/util/adt/list/ShiftList;": [
        "Lorg/andengine/util/adt/list/ShiftList;->enter()V",
        "Lorg/andengine/util/adt/list/ShiftList;->ensureShiftableLeft()V",
        "Lorg/andengine/util/adt/list/ShiftList;->shift()V",
        "Lorg/andengine/util/adt/list/ShiftList;->indexOf()I",
        "Lorg/andengine/util/adt/list/ShiftList;->size()I",
        "Lorg/andengine/util/adt/list/ShiftList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/ShiftList;->ensureShiftableRight()V",
        "Lorg/andengine/util/adt/list/ShiftList;->enterShiftingLeft()V",
        "Lorg/andengine/util/adt/list/ShiftList;->enterShiftingRight()V"
    ],
    "Lorg/andengine/util/adt/list/FloatArrayList;": [
        "Lorg/andengine/util/adt/list/FloatArrayList;->ensureCapacity()V"
    ],
    "Lorg/andengine/util/adt/map/LongSparseArray;": [
        "Lorg/andengine/util/adt/map/LongSparseArray;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/map/LongSparseArray;->clear()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->indexOfKey()I",
        "Lorg/andengine/util/adt/map/LongSparseArray;->keyAt()J",
        "Lorg/andengine/util/adt/map/LongSparseArray;->gc()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->binarySearch()I",
        "Lorg/andengine/util/adt/map/LongSparseArray;->valueAt()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/map/LongSparseArray;->delete()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->size()I",
        "Lorg/andengine/util/adt/map/LongSparseArray;->put()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->remove()V"
    ],
    "Lorg/andengine/util/adt/map/MultiKey;": [
        "Lorg/andengine/util/adt/map/MultiKey;->hashCode()I",
        "Lorg/andengine/util/adt/map/MultiKey;->getKeys()[Ljava/lang/Object;",
        "Lorg/andengine/util/adt/map/MultiKey;->hash()I"
    ],
    "Lorg/andengine/util/adt/map/MultiKeyHashMap;": [
        "Lorg/andengine/util/adt/map/MultiKeyHashMap;->isEqualKey()Z",
        "Lorg/andengine/util/adt/map/MultiKeyHashMap;->entrySet()Ljava/util/Set;"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;"
    ],
    "Landroid/util/SparseBooleanArray;": [
        "Landroid/util/SparseBooleanArray;->valueAt()Z",
        "Landroid/util/SparseBooleanArray;->keyAt()I",
        "Landroid/util/SparseBooleanArray;->size()I"
    ],
    "Landroid/util/SparseIntArray;": [
        "Landroid/util/SparseIntArray;->valueAt()I",
        "Landroid/util/SparseIntArray;->keyAt()I",
        "Landroid/util/SparseIntArray;->put()V",
        "Landroid/util/SparseIntArray;->size()I",
        "Landroid/util/SparseIntArray;->get()I"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->sort()V",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->synchronizedMap()Ljava/util/Map;",
        "Ljava/util/Collections;->shuffle()V"
    ],
    "Lorg/andengine/util/adt/pool/Pool;": [
        "Lorg/andengine/util/adt/pool/Pool;->recyclePoolItem()V",
        "Lorg/andengine/util/adt/pool/Pool;->onHandleRecycleItem()V",
        "Lorg/andengine/util/adt/pool/Pool;->obtainPoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/Pool;->onHandleAllocatePoolItem()Lorg/andengine/util/adt/pool/PoolItem;",
        "Lorg/andengine/util/adt/pool/Pool;->onHandleObtainItem()V",
        "Lorg/andengine/util/adt/pool/Pool;->ownsPoolItem()Z",
        "Lorg/andengine/util/adt/pool/Pool;->recycle()V"
    ],
    "Lorg/andengine/util/adt/pool/PoolUpdateHandler;": [
        "Lorg/andengine/util/adt/pool/PoolUpdateHandler;->onHandlePoolItem()V"
    ],
    "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;": [
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->obtainPoolItem()Lorg/andengine/util/adt/pool/PoolItem;",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->scheduleDetach()V",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->onAllocatePoolItem()Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->postPoolItem()V"
    ],
    "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;": [
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;->setEntity()V",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;->setCallback()V"
    ],
    "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;": [
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->onAllocatePoolItem()Lorg/andengine/util/adt/pool/RunnablePoolItem;",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->postPoolItem()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->reset()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->onUpdate()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->onHandlePoolItem()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->obtainPoolItem()Lorg/andengine/util/adt/pool/PoolItem;"
    ],
    "Lorg/andengine/util/adt/pool/RunnablePoolItem;": [
        "Lorg/andengine/util/adt/pool/RunnablePoolItem;->run()V"
    ],
    "Lorg/andengine/entity/IEntity;": [
        "Lorg/andengine/entity/IEntity;->setScale()V",
        "Lorg/andengine/entity/IEntity;->getY()F",
        "Lorg/andengine/entity/IEntity;->reset()V",
        "Lorg/andengine/entity/IEntity;->getParent()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/IEntity;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/IEntity;->setY()V",
        "Lorg/andengine/entity/IEntity;->onDraw()V",
        "Lorg/andengine/entity/IEntity;->isRotatedOrScaledOrSkewed()Z",
        "Lorg/andengine/entity/IEntity;->getTag()I",
        "Lorg/andengine/entity/IEntity;->detachChild()Z",
        "Lorg/andengine/entity/IEntity;->getRotation()F",
        "Lorg/andengine/entity/IEntity;->isVisible()Z",
        "Lorg/andengine/entity/IEntity;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/IEntity;->setScaleCenter()V",
        "Lorg/andengine/entity/IEntity;->getX()F",
        "Lorg/andengine/entity/IEntity;->setSkew()V",
        "Lorg/andengine/entity/IEntity;->onUpdate()V",
        "Lorg/andengine/entity/IEntity;->getZIndex()I",
        "Lorg/andengine/entity/IEntity;->setX()V",
        "Lorg/andengine/entity/IEntity;->getSceneToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/IEntity;->queryFirstForSubclass()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/IEntity;->getLocalToParentTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/IEntity;->setRotationCenter()V",
        "Lorg/andengine/entity/IEntity;->setAlpha()V",
        "Lorg/andengine/entity/IEntity;->detachSelf()Z",
        "Lorg/andengine/entity/IEntity;->setColor()V",
        "Lorg/andengine/entity/IEntity;->setSkewY()V",
        "Lorg/andengine/entity/IEntity;->setPosition()V",
        "Lorg/andengine/entity/IEntity;->getSceneCenterCoordinates()[F",
        "Lorg/andengine/entity/IEntity;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/entity/IEntity;->setParent()V",
        "Lorg/andengine/entity/IEntity;->setSkewX()V",
        "Lorg/andengine/entity/IEntity;->hasParent()Z",
        "Lorg/andengine/entity/IEntity;->attachChild()V",
        "Lorg/andengine/entity/IEntity;->toString()V",
        "Lorg/andengine/entity/IEntity;->setRotation()V",
        "Lorg/andengine/entity/IEntity;->onAttached()V",
        "Lorg/andengine/entity/IEntity;->query()Ljava/util/List;"
    ],
    "Lorg/andengine/util/call/Callback;": [
        "Lorg/andengine/util/call/Callback;->onCallback()V"
    ],
    "Lorg/andengine/util/adt/pool/PoolItem;": [
        "Lorg/andengine/util/adt/pool/PoolItem;->isRecycled()Z",
        "Lorg/andengine/util/adt/pool/PoolItem;->isFromPool()Z",
        "Lorg/andengine/util/adt/pool/PoolItem;->onObtain()V",
        "Lorg/andengine/util/adt/pool/PoolItem;->onRecycle()V"
    ],
    "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;": [
        "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;->toByteBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;->grow()V",
        "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;->ensureCapacity()V"
    ],
    "Lorg/andengine/util/algorithm/path/Direction;": [
        "Lorg/andengine/util/algorithm/path/Direction;->fromDelta()Lorg/andengine/util/algorithm/path/Direction;",
        "Lorg/andengine/util/algorithm/path/Direction;->isHorizontal()Z",
        "Lorg/andengine/util/algorithm/path/Direction;->ordinal()I",
        "Lorg/andengine/util/algorithm/path/Direction;->rotateRight()Lorg/andengine/util/algorithm/path/Direction;",
        "Lorg/andengine/util/algorithm/path/Direction;->$SWITCH_TABLE$org$andengine$util$algorithm$path$Direction()[I",
        "Lorg/andengine/util/algorithm/path/Direction;->getDeltaX()I",
        "Lorg/andengine/util/algorithm/path/Direction;->values()[Lorg/andengine/util/algorithm/path/Direction;",
        "Lorg/andengine/util/algorithm/path/Direction;->getDeltaY()I"
    ],
    "Lorg/andengine/util/algorithm/hull/HullUtils;": [
        "Lorg/andengine/util/algorithm/hull/HullUtils;->indexOfLowestVertex()I",
        "Lorg/andengine/util/algorithm/hull/HullUtils;->swap()V"
    ],
    "Lorg/andengine/opengl/util/VertexUtils;": [
        "Lorg/andengine/opengl/util/VertexUtils;->getVertex()F"
    ],
    "Lorg/andengine/util/algorithm/hull/JarvisMarch;": [
        "Lorg/andengine/util/algorithm/hull/JarvisMarch;->jarvisMarch()I"
    ],
    "Lorg/andengine/util/algorithm/collision/ShapeCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/ShapeCollisionChecker;->checkCollision()Z",
        "Lorg/andengine/util/algorithm/collision/ShapeCollisionChecker;->checkCollisionSub()Z",
        "Lorg/andengine/util/algorithm/collision/ShapeCollisionChecker;->checkContains()Z"
    ],
    "Lorg/andengine/util/algorithm/collision/LineCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/LineCollisionChecker;->checkLineCollision()Z",
        "Lorg/andengine/util/algorithm/collision/LineCollisionChecker;->fillVertices()V"
    ],
    "Lorg/andengine/util/algorithm/collision/TriangleCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/TriangleCollisionChecker;->checkContains()Z"
    ],
    "Lorg/andengine/util/algorithm/collision/RectangularShapeCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/RectangularShapeCollisionChecker;->fillVertices()V",
        "Lorg/andengine/util/algorithm/collision/RectangularShapeCollisionChecker;->isVisible()Z",
        "Lorg/andengine/util/algorithm/collision/RectangularShapeCollisionChecker;->checkContains()Z",
        "Lorg/andengine/util/algorithm/collision/RectangularShapeCollisionChecker;->checkCollision()Z"
    ],
    "Lorg/andengine/entity/Entity;": [
        "Lorg/andengine/entity/Entity;->query()Ljava/util/List;",
        "Lorg/andengine/entity/Entity;->assertEntityHasNoParent()V",
        "Lorg/andengine/entity/Entity;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->preDraw()V",
        "Lorg/andengine/entity/Entity;->getSceneToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->convertLocalToSceneCoordinates()[F",
        "Lorg/andengine/entity/Entity;->getAlpha()F",
        "Lorg/andengine/entity/Entity;->applyTranslation()V",
        "Lorg/andengine/entity/Entity;->getRed()F",
        "Lorg/andengine/entity/Entity;->allocateChildren()V",
        "Lorg/andengine/entity/Entity;->applySkew()V",
        "Lorg/andengine/entity/Entity;->onManagedDraw()V",
        "Lorg/andengine/entity/Entity;->onUpdateColor()V",
        "Lorg/andengine/entity/Entity;->sortChildren()V",
        "Lorg/andengine/entity/Entity;->reset()V",
        "Lorg/andengine/entity/Entity;->applyScale()V",
        "Lorg/andengine/entity/Entity;->getY()F",
        "Lorg/andengine/entity/Entity;->getLocalToParentTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->queryFirstForSubclass()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/Entity;->postDraw()V",
        "Lorg/andengine/entity/Entity;->getBlue()F",
        "Lorg/andengine/entity/Entity;->onManagedUpdate()V",
        "Lorg/andengine/entity/Entity;->getParentToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->applyRotation()V",
        "Lorg/andengine/entity/Entity;->allocateUpdateHandlers()V",
        "Lorg/andengine/entity/Entity;->setPosition()V",
        "Lorg/andengine/entity/Entity;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/entity/Entity;->isCulled()Z",
        "Lorg/andengine/entity/Entity;->attachChild()V",
        "Lorg/andengine/entity/Entity;->dispose()V",
        "Lorg/andengine/entity/Entity;->convertSceneToLocalCoordinates()[F",
        "Lorg/andengine/entity/Entity;->getX()F",
        "Lorg/andengine/entity/Entity;->getChildCount()I",
        "Lorg/andengine/entity/Entity;->getGreen()F",
        "Lorg/andengine/entity/Entity;->allocateEntityModifiers()V",
        "Lorg/andengine/entity/Entity;->onApplyTransformations()V",
        "Lorg/andengine/entity/Entity;->toString()V",
        "Lorg/andengine/entity/Entity;->draw()V"
    ],
    "Lorg/andengine/engine/camera/Camera;": [
        "Lorg/andengine/engine/camera/Camera;->getYMax()F",
        "Lorg/andengine/engine/camera/Camera;->convertSceneToCameraSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->getRotation()F",
        "Lorg/andengine/engine/camera/Camera;->getHeight()F",
        "Lorg/andengine/engine/camera/Camera;->getWidthRaw()F",
        "Lorg/andengine/engine/camera/Camera;->convertAxisAlignedSceneToSurfaceTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->onUpdate()V",
        "Lorg/andengine/engine/camera/Camera;->unapplySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/Camera;->applySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/Camera;->convertCameraSceneToSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->isLineVisible()Z",
        "Lorg/andengine/engine/camera/Camera;->onDrawHUD()V",
        "Lorg/andengine/engine/camera/Camera;->applySceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->convertSceneToSurfaceTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->updateChaseEntity()V",
        "Lorg/andengine/engine/camera/Camera;->convertSurfaceToSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->allocateUpdateHandlers()V",
        "Lorg/andengine/engine/camera/Camera;->getXMax()F",
        "Lorg/andengine/engine/camera/Camera;->onApplySceneMatrix()V",
        "Lorg/andengine/engine/camera/Camera;->hasHUD()Z",
        "Lorg/andengine/engine/camera/Camera;->onApplySceneBackgroundMatrix()V",
        "Lorg/andengine/engine/camera/Camera;->getWidth()F",
        "Lorg/andengine/engine/camera/Camera;->unapplyCameraSceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->getCenterY()F",
        "Lorg/andengine/engine/camera/Camera;->getHUD()Lorg/andengine/engine/camera/hud/HUD;",
        "Lorg/andengine/engine/camera/Camera;->getSceneCoordinatesFromCameraSceneCoordinates()[F",
        "Lorg/andengine/engine/camera/Camera;->onSurfaceSizeInitialized()V",
        "Lorg/andengine/engine/camera/Camera;->isRectangularShapeVisible()Z",
        "Lorg/andengine/engine/camera/Camera;->getCameraSceneCoordinatesFromSceneCoordinates()[F",
        "Lorg/andengine/engine/camera/Camera;->getXMin()F",
        "Lorg/andengine/engine/camera/Camera;->getCenterX()F",
        "Lorg/andengine/engine/camera/Camera;->unapplySceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->set()V",
        "Lorg/andengine/engine/camera/Camera;->getHeightRaw()F",
        "Lorg/andengine/engine/camera/Camera;->applyRotation()V",
        "Lorg/andengine/engine/camera/Camera;->onApplyCameraSceneMatrix()V",
        "Lorg/andengine/engine/camera/Camera;->applyCameraSceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->convertAxisAlignedSurfaceToSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->setSurfaceSize()V",
        "Lorg/andengine/engine/camera/Camera;->getYMin()F",
        "Lorg/andengine/engine/camera/Camera;->setCenter()V",
        "Lorg/andengine/engine/camera/Camera;->onSurfaceSizeChanged()V"
    ],
    "Lorg/andengine/entity/shape/RectangularShape;": [
        "Lorg/andengine/entity/shape/RectangularShape;->preDraw()V",
        "Lorg/andengine/entity/shape/RectangularShape;->resetRotationCenter()V",
        "Lorg/andengine/entity/shape/RectangularShape;->resetSkewCenter()V",
        "Lorg/andengine/entity/shape/RectangularShape;->postDraw()V",
        "Lorg/andengine/entity/shape/RectangularShape;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/shape/RectangularShape;->resetScaleCenter()V",
        "Lorg/andengine/entity/shape/RectangularShape;->reset()V",
        "Lorg/andengine/entity/shape/RectangularShape;->onUpdateVertices()V",
        "Lorg/andengine/entity/shape/RectangularShape;->convertLocalToSceneCoordinates()[F",
        "Lorg/andengine/entity/shape/RectangularShape;->getWidth()F",
        "Lorg/andengine/entity/shape/RectangularShape;->getHeight()F"
    ],
    "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;->relativeCCW()I"
    ],
    "Lorg/andengine/entity/primitive/Line;": [
        "Lorg/andengine/entity/primitive/Line;->getX1()F",
        "Lorg/andengine/entity/primitive/Line;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/primitive/Line;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;",
        "Lorg/andengine/entity/primitive/Line;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/Line;->getY2()F",
        "Lorg/andengine/entity/primitive/Line;->getX2()F",
        "Lorg/andengine/entity/primitive/Line;->setBlendingEnabled()V",
        "Lorg/andengine/entity/primitive/Line;->getY1()F",
        "Lorg/andengine/entity/primitive/Line;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/Line;->getColor()Lorg/andengine/util/color/Color;"
    ],
    "Lorg/andengine/util/algorithm/sort/Sorter;": [
        "Lorg/andengine/util/algorithm/sort/Sorter;->sort()V"
    ],
    "Ljava/util/Comparator;": [
        "Ljava/util/Comparator;->compare()I"
    ],
    "Lorg/andengine/util/algorithm/path/Path;": [
        "Lorg/andengine/util/algorithm/path/Path;->getX()I",
        "Lorg/andengine/util/algorithm/path/Path;->getLength()I",
        "Lorg/andengine/util/algorithm/path/Path;->getY()I",
        "Lorg/andengine/util/algorithm/path/Path;->set()V"
    ],
    "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder;": [
        "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder;->findPath()Lorg/andengine/util/algorithm/path/Path;"
    ],
    "Lorg/andengine/util/algorithm/path/IPathFinderMap;": [
        "Lorg/andengine/util/algorithm/path/IPathFinderMap;->isBlocked()Z"
    ],
    "Lorg/andengine/util/algorithm/path/astar/IAStarHeuristic;": [
        "Lorg/andengine/util/algorithm/path/astar/IAStarHeuristic;->getExpectedRestCost()F"
    ],
    "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder$Node;": [
        "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder$Node;->calculateID()J",
        "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder$Node;->setParent()V"
    ],
    "Lorg/andengine/util/algorithm/path/ICostFunction;": [
        "Lorg/andengine/util/algorithm/path/ICostFunction;->getCost()F"
    ],
    "Lorg/andengine/util/algorithm/path/IPathFinder$IPathFinderListener;": [
        "Lorg/andengine/util/algorithm/path/IPathFinder$IPathFinderListener;->onVisited()V"
    ],
    "Lorg/andengine/util/modifier/BaseQuadrupelValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseQuadrupelValueSpanModifier;->onSetValues()V",
        "Lorg/andengine/util/modifier/BaseQuadrupelValueSpanModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;->onSetValues()V",
        "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/util/modifier/BaseDoubleValueChangeModifier;": [
        "Lorg/andengine/util/modifier/BaseDoubleValueChangeModifier;->onChangeValues()V"
    ],
    "Lorg/andengine/util/modifier/BaseModifier;": [
        "Lorg/andengine/util/modifier/BaseModifier;->assertNoNullModifier()V",
        "Lorg/andengine/util/modifier/BaseModifier;->addModifierListener()V"
    ],
    "Lorg/andengine/util/modifier/util/ModifierUtils;": [
        "Lorg/andengine/util/modifier/util/ModifierUtils;->getSequenceDurationOfModifier()F"
    ],
    "Lorg/andengine/util/modifier/IModifier;": [
        "Lorg/andengine/util/modifier/IModifier;->reset()V",
        "Lorg/andengine/util/modifier/IModifier;->onUpdate()F",
        "Lorg/andengine/util/modifier/IModifier;->removeModifierListener()Z",
        "Lorg/andengine/util/modifier/IModifier;->addModifierListener()V",
        "Lorg/andengine/util/modifier/IModifier;->isFinished()Z",
        "Lorg/andengine/util/modifier/IModifier;->isAutoUnregisterWhenFinished()Z",
        "Lorg/andengine/util/modifier/IModifier;->deepCopy()Lorg/andengine/util/modifier/IModifier;",
        "Lorg/andengine/util/modifier/IModifier;->getDuration()F"
    ],
    "Lorg/andengine/util/modifier/SequenceModifier;": [
        "Lorg/andengine/util/modifier/SequenceModifier;->getDuration()F",
        "Lorg/andengine/util/modifier/SequenceModifier;->getSecondsElapsed()F",
        "Lorg/andengine/util/modifier/SequenceModifier;->deepCopy()Lorg/andengine/util/modifier/SequenceModifier;",
        "Lorg/andengine/util/modifier/SequenceModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/SequenceModifier;->reset()V",
        "Lorg/andengine/util/modifier/SequenceModifier;->isFinished()Z",
        "Lorg/andengine/util/modifier/SequenceModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/SequenceModifier;->onUpdate()F"
    ],
    "Lorg/andengine/util/modifier/SequenceModifier$ISubSequenceModifierListener;": [
        "Lorg/andengine/util/modifier/SequenceModifier$ISubSequenceModifierListener;->onSubSequenceFinished()V",
        "Lorg/andengine/util/modifier/SequenceModifier$ISubSequenceModifierListener;->onSubSequenceStarted()V"
    ],
    "Lorg/andengine/util/modifier/ease/EaseLinear;": [
        "Lorg/andengine/util/modifier/ease/EaseLinear;->getInstance()Lorg/andengine/util/modifier/ease/EaseLinear;"
    ],
    "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->onSetValue()V",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->getToValue()F",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->getFromValue()F",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->getSecondsElapsed()F",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->onSetInitialValue()V",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->reset()V"
    ],
    "Lorg/andengine/util/modifier/ease/IEaseFunction;": [
        "Lorg/andengine/util/modifier/ease/IEaseFunction;->getPercentage()F"
    ],
    "Lorg/andengine/util/modifier/BaseDurationModifier;": [
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onManagedInitialize()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onManagedUpdate()V"
    ],
    "Lorg/andengine/util/modifier/ParallelModifier;": [
        "Lorg/andengine/util/modifier/ParallelModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/ParallelModifier;->deepCopy()Lorg/andengine/util/modifier/ParallelModifier;",
        "Lorg/andengine/util/modifier/ParallelModifier;->onModifierStarted()V"
    ],
    "Lorg/andengine/util/modifier/BaseSingleValueChangeModifier;": [
        "Lorg/andengine/util/modifier/BaseSingleValueChangeModifier;->onChangeValue()V"
    ],
    "Lorg/andengine/util/modifier/ModifierList;": [
        "Lorg/andengine/util/modifier/ModifierList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/modifier/ModifierList;->clear()V",
        "Lorg/andengine/util/modifier/ModifierList;->remove()Z",
        "Lorg/andengine/util/modifier/ModifierList;->reset()V",
        "Lorg/andengine/util/modifier/ModifierList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/modifier/ModifierList;->size()I",
        "Lorg/andengine/util/modifier/ModifierList;->onUpdate()V",
        "Lorg/andengine/util/modifier/ModifierList;->add()Z"
    ],
    "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;->onSetInitialValues()V",
        "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;->onSetValues()V"
    ],
    "Lorg/andengine/util/modifier/IModifier$IModifierListener;": [
        "Lorg/andengine/util/modifier/IModifier$IModifierListener;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/IModifier$IModifierListener;->onModifierFinished()V"
    ],
    "Lorg/andengine/util/modifier/LoopModifier;": [
        "Lorg/andengine/util/modifier/LoopModifier;->deepCopy()Lorg/andengine/util/modifier/LoopModifier;",
        "Lorg/andengine/util/modifier/LoopModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/LoopModifier;->onModifierFinished()V"
    ],
    "Lorg/andengine/util/modifier/LoopModifier$ILoopModifierListener;": [
        "Lorg/andengine/util/modifier/LoopModifier$ILoopModifierListener;->onLoopStarted()V",
        "Lorg/andengine/util/modifier/LoopModifier$ILoopModifierListener;->onLoopFinished()V"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuintOut;": [
        "Lorg/andengine/util/modifier/ease/EaseQuintOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCubicIn;": [
        "Lorg/andengine/util/modifier/ease/EaseCubicIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBounceOut;": [
        "Lorg/andengine/util/modifier/ease/EaseBounceOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBounceIn;": [
        "Lorg/andengine/util/modifier/ease/EaseBounceIn;->getInstance()Lorg/andengine/util/modifier/ease/EaseBounceIn;",
        "Lorg/andengine/util/modifier/ease/EaseBounceIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseExponentialIn;": [
        "Lorg/andengine/util/modifier/ease/EaseExponentialIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseStrongIn;": [
        "Lorg/andengine/util/modifier/ease/EaseStrongIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuadIn;": [
        "Lorg/andengine/util/modifier/ease/EaseQuadIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuadOut;": [
        "Lorg/andengine/util/modifier/ease/EaseQuadOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuintIn;": [
        "Lorg/andengine/util/modifier/ease/EaseQuintIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuartOut;": [
        "Lorg/andengine/util/modifier/ease/EaseQuartOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseElasticIn;": [
        "Lorg/andengine/util/modifier/ease/EaseElasticIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseElasticOut;": [
        "Lorg/andengine/util/modifier/ease/EaseElasticOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBackIn;": [
        "Lorg/andengine/util/modifier/ease/EaseBackIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBackOut;": [
        "Lorg/andengine/util/modifier/ease/EaseBackOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseExponentialOut;": [
        "Lorg/andengine/util/modifier/ease/EaseExponentialOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseSineOut;": [
        "Lorg/andengine/util/modifier/ease/EaseSineOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCircularOut;": [
        "Lorg/andengine/util/modifier/ease/EaseCircularOut;->getInstance()Lorg/andengine/util/modifier/ease/EaseCircularOut;",
        "Lorg/andengine/util/modifier/ease/EaseCircularOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCircularIn;": [
        "Lorg/andengine/util/modifier/ease/EaseCircularIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCubicOut;": [
        "Lorg/andengine/util/modifier/ease/EaseCubicOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseStrongOut;": [
        "Lorg/andengine/util/modifier/ease/EaseStrongOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuartIn;": [
        "Lorg/andengine/util/modifier/ease/EaseQuartIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseSineIn;": [
        "Lorg/andengine/util/modifier/ease/EaseSineIn;->getValue()F"
    ],
    "Lorg/andengine/util/debug/Debug$DebugLevel;": [
        "Lorg/andengine/util/debug/Debug$DebugLevel;->ordinal()I",
        "Lorg/andengine/util/debug/Debug$DebugLevel;->values()[Lorg/andengine/util/debug/Debug$DebugLevel;",
        "Lorg/andengine/util/debug/Debug$DebugLevel;->isSameOrLessThan()Z"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->peek()Ljava/lang/Object;",
        "Ljava/util/Stack;->size()I",
        "Ljava/util/Stack;->isEmpty()Z",
        "Ljava/util/Stack;->add()Z",
        "Ljava/util/Stack;->push()Ljava/lang/Object;",
        "Ljava/util/Stack;->clear()V",
        "Ljava/util/Stack;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Stack;->pop()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/debug/DebugTimer$DebugTime;": [
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->access$0()Ljava/lang/String;",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->split()V",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->dump()V",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->begin()V",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->end()V"
    ],
    "Lorg/andengine/util/debug/DebugTimer;": [
        "Lorg/andengine/util/debug/DebugTimer;->dump()V",
        "Lorg/andengine/util/debug/DebugTimer;->clear()V"
    ],
    "Ljavax/xml/parsers/SAXParserFactory;": [
        "Ljavax/xml/parsers/SAXParserFactory;->newSAXParser()Ljavax/xml/parsers/SAXParser;",
        "Ljavax/xml/parsers/SAXParserFactory;->newInstance()Ljavax/xml/parsers/SAXParserFactory;"
    ],
    "Ljavax/xml/parsers/SAXParser;": [
        "Ljavax/xml/parsers/SAXParser;->getXMLReader()Lorg/xml/sax/XMLReader;"
    ],
    "Lorg/xml/sax/XMLReader;": [
        "Lorg/xml/sax/XMLReader;->parse()V",
        "Lorg/xml/sax/XMLReader;->setContentHandler()V"
    ],
    "Lorg/andengine/util/texturepack/TexturePackParser;": [
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseWrapS()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseWrapT()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseMinFilter()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parsePremultiplyalpha()Z",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parsePixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseTextureOptions()Lorg/andengine/opengl/texture/TextureOptions;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseWrap()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->getTexturePack()Lorg/andengine/util/texturepack/TexturePack;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseMagFilter()I"
    ],
    "Lorg/andengine/util/texturepack/TexturePackLoader;": [
        "Lorg/andengine/util/texturepack/TexturePackLoader;->load()Lorg/andengine/util/texturepack/TexturePack;",
        "Lorg/andengine/util/texturepack/TexturePackLoader;->loadFromAsset()Lorg/andengine/util/texturepack/TexturePack;"
    ],
    "Lorg/andengine/opengl/texture/PixelFormat;": [
        "Lorg/andengine/opengl/texture/PixelFormat;->getGLType()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->ordinal()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->getGLInternalFormat()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->getGLFormat()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->valueOf()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/PixelFormat;->values()[Lorg/andengine/opengl/texture/PixelFormat;"
    ],
    "Lorg/andengine/opengl/texture/TextureManager;": [
        "Lorg/andengine/opengl/texture/TextureManager;->loadTexture()Z",
        "Lorg/andengine/opengl/texture/TextureManager;->onDestroy()V",
        "Lorg/andengine/opengl/texture/TextureManager;->onReload()V",
        "Lorg/andengine/opengl/texture/TextureManager;->updateTextures()V",
        "Lorg/andengine/opengl/texture/TextureManager;->addMappedTexture()V",
        "Lorg/andengine/opengl/texture/TextureManager;->hasMappedTexture()Z",
        "Lorg/andengine/opengl/texture/TextureManager;->onCreate()V",
        "Lorg/andengine/opengl/texture/TextureManager;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/texture/TextureManager;->getMappedTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/texture/TextureManager;->unloadTexture()Z"
    ],
    "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;": [
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->$SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat()[I",
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->getBitmapConfig()Landroid/graphics/Bitmap$Config;",
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->fromPixelFormat()Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;->isCompressed()Z",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;->fromPixelFormat()Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;"
    ],
    "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;": [
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->getSourceMapping()Ljava/util/HashMap;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->put()V",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->get()Lorg/andengine/util/texturepack/TexturePackTextureRegion;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->throwOnCollision()V"
    ],
    "Lorg/andengine/util/texturepack/TexturePackTextureRegion;": [
        "Lorg/andengine/util/texturepack/TexturePackTextureRegion;->getID()I",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegion;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegion;->getSource()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/texturepack/TexturePack;": [
        "Lorg/andengine/util/texturepack/TexturePack;->loadTexture()V",
        "Lorg/andengine/util/texturepack/TexturePack;->getTexturePackTextureRegionLibrary()Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;"
    ],
    "Lorg/andengine/opengl/texture/ITexture;": [
        "Lorg/andengine/opengl/texture/ITexture;->bind()V",
        "Lorg/andengine/opengl/texture/ITexture;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->getHeight()I",
        "Lorg/andengine/opengl/texture/ITexture;->unload()V",
        "Lorg/andengine/opengl/texture/ITexture;->getWidth()I",
        "Lorg/andengine/opengl/texture/ITexture;->getTextureOptions()Lorg/andengine/opengl/texture/TextureOptions;",
        "Lorg/andengine/opengl/texture/ITexture;->load()V",
        "Lorg/andengine/opengl/texture/ITexture;->isUpdateOnHardwareNeeded()Z",
        "Lorg/andengine/opengl/texture/ITexture;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/ITexture;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/texture/ITexture;->reloadToHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->loadToHardware()V"
    ],
    "Ljava/util/regex/MatchResult;": [
        "Ljava/util/regex/MatchResult;->group()Ljava/lang/String;",
        "Ljava/util/regex/MatchResult;->groupCount()I"
    ],
    "Ljava/lang/ProcessBuilder;": [
        "Ljava/lang/ProcessBuilder;->start()Ljava/lang/Process;"
    ],
    "Ljava/lang/Process;": [
        "Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;"
    ],
    "Ljava/util/Scanner;": [
        "Ljava/util/Scanner;->match()Ljava/util/regex/MatchResult;",
        "Ljava/util/Scanner;->findWithinHorizon()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/progress/IProgressListener;": [
        "Lorg/andengine/util/progress/IProgressListener;->onProgressChanged()V"
    ],
    "Lorg/andengine/util/progress/ProgressMonitor;": [
        "Lorg/andengine/util/progress/ProgressMonitor;->addProgressListener()V",
        "Lorg/andengine/util/progress/ProgressMonitor;->removeProgressListener()V"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackParser;": [
        "Lorg/andengine/util/animationpack/AnimationPackParser;->getAnimationPack()Lorg/andengine/util/animationpack/AnimationPack;"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackLoader;": [
        "Lorg/andengine/util/animationpack/AnimationPackLoader;->load()Lorg/andengine/util/animationpack/AnimationPack;"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegion;": [
        "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegion;->getAnimationName()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegionLibrary;": [
        "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegionLibrary;->put()V"
    ],
    "Lorg/andengine/util/texturepack/TexturePackLibrary;": [
        "Lorg/andengine/util/texturepack/TexturePackLibrary;->put()V",
        "Lorg/andengine/util/texturepack/TexturePackLibrary;->getTexturePackTextureRegion()Lorg/andengine/util/texturepack/TexturePackTextureRegion;"
    ],
    "Lorg/andengine/util/level/IEntityLoader;": [
        "Lorg/andengine/util/level/IEntityLoader;->onLoadEntity()Lorg/andengine/entity/IEntity;"
    ],
    "Lorg/andengine/util/level/LevelLoader;": [
        "Lorg/andengine/util/level/LevelLoader;->onAfterLoadLevel()V",
        "Lorg/andengine/util/level/LevelLoader;->loadLevelFromStream()V",
        "Lorg/andengine/util/level/LevelLoader;->onBeforeLoadLevel()V",
        "Lorg/andengine/util/level/LevelLoader;->setAssetBasePath()V"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->setText()V"
    ],
    "Lorg/andengine/ui/dialog/GenericInputDialogBuilder;": [
        "Lorg/andengine/ui/dialog/GenericInputDialogBuilder;->setView()V"
    ],
    "Lorg/andengine/ui/dialog/StringInputDialogBuilder;": [
        "Lorg/andengine/ui/dialog/StringInputDialogBuilder;->generateResult()Ljava/lang/String;"
    ],
    "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;": [
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onCreateResources()V",
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onResume()V",
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onCreate()V",
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onPause()V",
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onCreateScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onDestroy()V"
    ],
    "Lorg/andengine/ui/IGameInterface$OnCreateResourcesCallback;": [
        "Lorg/andengine/ui/IGameInterface$OnCreateResourcesCallback;->onCreateResourcesFinished()V"
    ],
    "Lorg/andengine/ui/IGameInterface$OnCreateSceneCallback;": [
        "Lorg/andengine/ui/IGameInterface$OnCreateSceneCallback;->onCreateSceneFinished()V"
    ],
    "Lorg/andengine/ui/IGameInterface$OnPopulateSceneCallback;": [
        "Lorg/andengine/ui/IGameInterface$OnPopulateSceneCallback;->onPopulateSceneFinished()V"
    ],
    "Lorg/andengine/ui/activity/BaseActivity;": [
        "Lorg/andengine/ui/activity/BaseActivity;->onCreate()V",
        "Lorg/andengine/ui/activity/BaseActivity;->doAsync()V",
        "Lorg/andengine/ui/activity/BaseActivity;->doProgressAsync()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onDestroy()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onWindowFocusChanged()V",
        "Lorg/andengine/ui/activity/BaseActivity;->runOnUiThread()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onResume()V",
        "Lorg/andengine/ui/activity/BaseActivity;->toastOnUIThread()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onPause()V"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->getThread()Ljava/lang/Thread;",
        "Landroid/os/Looper;->myLooper()Landroid/os/Looper;",
        "Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;"
    ],
    "Lorg/andengine/ui/activity/SimpleAsyncGameActivity;": [
        "Lorg/andengine/ui/activity/SimpleAsyncGameActivity;->runOnUiThread()V"
    ],
    "Lorg/andengine/engine/options/ScreenOrientation;": [
        "Lorg/andengine/engine/options/ScreenOrientation;->ordinal()I",
        "Lorg/andengine/engine/options/ScreenOrientation;->values()[Lorg/andengine/engine/options/ScreenOrientation;"
    ],
    "Lorg/andengine/ui/activity/BaseGameActivity;": [
        "Lorg/andengine/ui/activity/BaseGameActivity;->$SWITCH_TABLE$org$andengine$engine$options$ScreenOrientation()[I",
        "Lorg/andengine/ui/activity/BaseGameActivity;->setVolumeControlStream()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->createSurfaceViewLayoutParams()Landroid/widget/FrameLayout$LayoutParams;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->setContentView()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->getMusicManager()Lorg/andengine/audio/music/MusicManager;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->setRequestedOrientation()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->callGameResumedOnUIThread()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onResumeGame()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onReloadResources()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateEngine()Lorg/andengine/engine/Engine;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->runOnUiThread()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onDestroyResources()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->acquireWakeLock()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateResources()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->getSoundManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateEngineOptions()Lorg/andengine/engine/options/EngineOptions;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onPauseGame()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onGameDestroyed()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onGameCreated()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateGame()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->releaseWakeLock()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onSetContentView()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->applyEngineOptions()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->getSystemService()Ljava/lang/Object;"
    ],
    "Lorg/andengine/engine/Engine;": [
        "Lorg/andengine/engine/Engine;->isSensorSupported()Z",
        "Lorg/andengine/engine/Engine;->getScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/engine/Engine;->enableAccelerationSensor()Z",
        "Lorg/andengine/engine/Engine;->registerSelfAsSensorListener()V",
        "Lorg/andengine/engine/Engine;->onUpdateCameraSurface()V",
        "Lorg/andengine/engine/Engine;->stop()V",
        "Lorg/andengine/engine/Engine;->unregisterSelfAsSensorListener()V",
        "Lorg/andengine/engine/Engine;->runOnUpdateThread()V",
        "Lorg/andengine/engine/Engine;->onDrawScene()V",
        "Lorg/andengine/engine/Engine;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lorg/andengine/engine/Engine;->onUpdateDrawHandlers()V",
        "Lorg/andengine/engine/Engine;->getMusicManager()Lorg/andengine/audio/music/MusicManager;",
        "Lorg/andengine/engine/Engine;->onUpdateScene()V",
        "Lorg/andengine/engine/Engine;->startUpdateThread()V",
        "Lorg/andengine/engine/Engine;->getEngineOptions()Lorg/andengine/engine/options/EngineOptions;",
        "Lorg/andengine/engine/Engine;->setTouchController()V",
        "Lorg/andengine/engine/Engine;->onLocationChanged()V",
        "Lorg/andengine/engine/Engine;->getNanosecondsElapsed()J",
        "Lorg/andengine/engine/Engine;->disableOrientationSensor()Z",
        "Lorg/andengine/engine/Engine;->onUpdateUpdateHandlers()V",
        "Lorg/andengine/engine/Engine;->onDrawFrame()V",
        "Lorg/andengine/engine/Engine;->start()V",
        "Lorg/andengine/engine/Engine;->throwOnDestroyed()V",
        "Lorg/andengine/engine/Engine;->getFontManager()Lorg/andengine/opengl/font/FontManager;",
        "Lorg/andengine/engine/Engine;->onTouchScene()Z",
        "Lorg/andengine/engine/Engine;->onTouchHUD()Z",
        "Lorg/andengine/engine/Engine;->onUpdate()V",
        "Lorg/andengine/engine/Engine;->enableVibrator()Z",
        "Lorg/andengine/engine/Engine;->getSceneFromSurfaceTouchEvent()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/engine/Engine;->getShaderProgramManager()Lorg/andengine/opengl/shader/ShaderProgramManager;",
        "Lorg/andengine/engine/Engine;->enableOrientationSensor()Z",
        "Lorg/andengine/engine/Engine;->setScene()V",
        "Lorg/andengine/engine/Engine;->disableLocationSensor()V",
        "Lorg/andengine/engine/Engine;->getSoundManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lorg/andengine/engine/Engine;->setSurfaceSize()V",
        "Lorg/andengine/engine/Engine;->disableAccelerationSensor()Z",
        "Lorg/andengine/engine/Engine;->convertSurfaceToSceneTouchEvent()V",
        "Lorg/andengine/engine/Engine;->onDestroy()V",
        "Lorg/andengine/engine/Engine;->getTextureManager()Lorg/andengine/opengl/texture/TextureManager;",
        "Lorg/andengine/engine/Engine;->enableLocationSensor()V",
        "Lorg/andengine/engine/Engine;->getCameraFromSurfaceTouchEvent()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/Engine;->onReloadResources()V",
        "Lorg/andengine/engine/Engine;->getCamera()Lorg/andengine/engine/camera/Camera;"
    ],
    "Lorg/andengine/engine/options/EngineOptions;": [
        "Lorg/andengine/engine/options/EngineOptions;->getCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/options/EngineOptions;->hasUpdateThread()Z",
        "Lorg/andengine/engine/options/EngineOptions;->getScreenOrientation()Lorg/andengine/engine/options/ScreenOrientation;",
        "Lorg/andengine/engine/options/EngineOptions;->getUpdateThread()Lorg/andengine/engine/Engine$UpdateThread;",
        "Lorg/andengine/engine/options/EngineOptions;->getWakeLockOptions()Lorg/andengine/engine/options/WakeLockOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->hasEngineLock()Z",
        "Lorg/andengine/engine/options/EngineOptions;->getTouchOptions()Lorg/andengine/engine/options/TouchOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->getAudioOptions()Lorg/andengine/engine/options/AudioOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->getResolutionPolicy()Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy;",
        "Lorg/andengine/engine/options/EngineOptions;->isFullscreen()Z",
        "Lorg/andengine/engine/options/EngineOptions;->getEngineLock()Lorg/andengine/engine/Engine$EngineLock;",
        "Lorg/andengine/engine/options/EngineOptions;->getRenderOptions()Lorg/andengine/engine/options/RenderOptions;"
    ],
    "Lorg/andengine/engine/options/WakeLockOptions;": [
        "Lorg/andengine/engine/options/WakeLockOptions;->getFlag()I"
    ],
    "Lorg/andengine/engine/options/AudioOptions;": [
        "Lorg/andengine/engine/options/AudioOptions;->needsMusic()Z",
        "Lorg/andengine/engine/options/AudioOptions;->needsSound()Z",
        "Lorg/andengine/engine/options/AudioOptions;->setNeedsSound()Lorg/andengine/engine/options/AudioOptions;",
        "Lorg/andengine/engine/options/AudioOptions;->getSoundOptions()Lorg/andengine/engine/options/SoundOptions;",
        "Lorg/andengine/engine/options/AudioOptions;->setNeedsMusic()Lorg/andengine/engine/options/AudioOptions;"
    ],
    "Lorg/andengine/opengl/view/RenderSurfaceView;": [
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setOnTouchListener()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setEGLContextClientVersion()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->isInEditMode()Z",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setEGLConfigChooser()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->onPause()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setMeasuredDimensionProxy()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setMeasuredDimension()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setRenderer()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->onResume()V"
    ],
    "Lorg/andengine/ui/activity/LayoutGameActivity;": [
        "Lorg/andengine/ui/activity/LayoutGameActivity;->getLayoutID()I",
        "Lorg/andengine/ui/activity/LayoutGameActivity;->findViewById()Landroid/view/View;",
        "Lorg/andengine/ui/activity/LayoutGameActivity;->getRenderSurfaceViewID()I"
    ],
    "Lorg/andengine/ui/activity/SimpleBaseGameActivity;": [
        "Lorg/andengine/ui/activity/SimpleBaseGameActivity;->onCreateResources()V",
        "Lorg/andengine/ui/activity/SimpleBaseGameActivity;->onCreateScene()Lorg/andengine/entity/scene/Scene;"
    ],
    "Lorg/andengine/ui/activity/LegacyBaseGameActivity;": [
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadComplete()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onUnloadResources()V",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadResources()V",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadEngine()Lorg/andengine/engine/Engine;"
    ],
    "Lorg/andengine/opengl/GLES20Fix;": [
        "Lorg/andengine/opengl/GLES20Fix;->glVertexAttribPointerFix()V",
        "Lorg/andengine/opengl/GLES20Fix;->glVertexAttribPointer()V",
        "Lorg/andengine/opengl/GLES20Fix;->glDrawElements()V"
    ],
    "Landroid/opengl/GLES20;": [
        "Landroid/opengl/GLES20;->glEnable()V",
        "Landroid/opengl/GLES20;->glGenTextures()V",
        "Landroid/opengl/GLES20;->glViewport()V",
        "Landroid/opengl/GLES20;->glGetProgramiv()V",
        "Landroid/opengl/GLES20;->glUseProgram()V",
        "Landroid/opengl/GLES20;->glUniform4f()V",
        "Landroid/opengl/GLES20;->glDeleteProgram()V",
        "Landroid/opengl/GLES20;->glReadPixels()V",
        "Landroid/opengl/GLES20;->glClearColor()V",
        "Landroid/opengl/GLES20;->glLineWidth()V",
        "Landroid/opengl/GLES20;->glGetActiveUniform()V",
        "Landroid/opengl/GLES20;->glFlush()V",
        "Landroid/opengl/GLES20;->glCompileShader()V",
        "Landroid/opengl/GLES20;->glBindTexture()V",
        "Landroid/opengl/GLES20;->glUniform2f()V",
        "Landroid/opengl/GLES20;->glDeleteFramebuffers()V",
        "Landroid/opengl/GLES20;->glShaderSource()V",
        "Landroid/opengl/GLES20;->glIsTexture()Z",
        "Landroid/opengl/GLES20;->glBindBuffer()V",
        "Landroid/opengl/GLES20;->glGetError()I",
        "Landroid/opengl/GLES20;->glDeleteShader()V",
        "Landroid/opengl/GLES20;->glUniform1f()V",
        "Landroid/opengl/GLES20;->glGenFramebuffers()V",
        "Landroid/opengl/GLES20;->glGetShaderInfoLog()Ljava/lang/String;",
        "Landroid/opengl/GLES20;->glUniformMatrix4fv()V",
        "Landroid/opengl/GLES20;->glVertexAttribPointer()V",
        "Landroid/opengl/GLES20;->glDrawElements()V",
        "Landroid/opengl/GLES20;->glCreateShader()I",
        "Landroid/opengl/GLES20;->glGetProgramInfoLog()Ljava/lang/String;",
        "Landroid/opengl/GLES20;->glCreateProgram()I",
        "Landroid/opengl/GLES20;->glClear()V",
        "Landroid/opengl/GLES20;->glScissor()V",
        "Landroid/opengl/GLES20;->glGetIntegerv()V",
        "Landroid/opengl/GLES20;->glFinish()V",
        "Landroid/opengl/GLES20;->glDisable()V",
        "Landroid/opengl/GLES20;->glAttachShader()V",
        "Landroid/opengl/GLES20;->glDeleteTextures()V",
        "Landroid/opengl/GLES20;->glTexImage2D()V",
        "Landroid/opengl/GLES20;->glEnableVertexAttribArray()V",
        "Landroid/opengl/GLES20;->glGetShaderiv()V",
        "Landroid/opengl/GLES20;->glGetActiveAttrib()V",
        "Landroid/opengl/GLES20;->glGenBuffers()V",
        "Landroid/opengl/GLES20;->glUniform3f()V",
        "Landroid/opengl/GLES20;->glDrawArrays()V",
        "Landroid/opengl/GLES20;->glActiveTexture()V",
        "Landroid/opengl/GLES20;->glGetUniformLocation()I",
        "Landroid/opengl/GLES20;->glLinkProgram()V",
        "Landroid/opengl/GLES20;->glBufferData()V",
        "Landroid/opengl/GLES20;->glFramebufferTexture2D()V",
        "Landroid/opengl/GLES20;->glTexSubImage2D()V",
        "Landroid/opengl/GLES20;->glDisableVertexAttribArray()V",
        "Landroid/opengl/GLES20;->glBindAttribLocation()V",
        "Landroid/opengl/GLES20;->glGetAttribLocation()I",
        "Landroid/opengl/GLES20;->glBindFramebuffer()V",
        "Landroid/opengl/GLES20;->glTexParameterf()V",
        "Landroid/opengl/GLES20;->glCheckFramebufferStatus()I",
        "Landroid/opengl/GLES20;->glUniform1i()V",
        "Landroid/opengl/GLES20;->glGetString()Ljava/lang/String;",
        "Landroid/opengl/GLES20;->glPixelStorei()V",
        "Landroid/opengl/GLES20;->glDeleteBuffers()V",
        "Landroid/opengl/GLES20;->glGetFloatv()V",
        "Landroid/opengl/GLES20;->glBlendFunc()V"
    ],
    "Lorg/andengine/opengl/vbo/IVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getGPUMemoryByteSize()I",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->dispose()V",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->unloadFromHardware()V",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->isAutoDispose()Z",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->isDisposed()Z",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getHeapMemoryByteSize()I",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getNativeHeapMemoryByteSize()I"
    ],
    "Lorg/andengine/opengl/vbo/DrawType;": [
        "Lorg/andengine/opengl/vbo/DrawType;->getUsage()I"
    ],
    "Lorg/andengine/opengl/util/GLState;": [
        "Lorg/andengine/opengl/util/GLState;->pushModelViewGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->lineWidth()V",
        "Lorg/andengine/opengl/util/GLState;->enableCulling()Z",
        "Lorg/andengine/opengl/util/GLState;->loadModelViewGLMatrixIdentity()V",
        "Lorg/andengine/opengl/util/GLState;->disableCulling()Z",
        "Lorg/andengine/opengl/util/GLState;->enableDither()Z",
        "Lorg/andengine/opengl/util/GLState;->bindFramebuffer()V",
        "Lorg/andengine/opengl/util/GLState;->deleteArrayBuffer()V",
        "Lorg/andengine/opengl/util/GLState;->generateBuffer()I",
        "Lorg/andengine/opengl/util/GLState;->bindArrayBuffer()V",
        "Lorg/andengine/opengl/util/GLState;->getInteger()I",
        "Lorg/andengine/opengl/util/GLState;->enableDepthTest()Z",
        "Lorg/andengine/opengl/util/GLState;->orthoProjectionGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->bindIndexBuffer()V",
        "Lorg/andengine/opengl/util/GLState;->disableDepthTest()Z",
        "Lorg/andengine/opengl/util/GLState;->useProgram()V",
        "Lorg/andengine/opengl/util/GLState;->translateProjectionGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->generateFramebuffer()I",
        "Lorg/andengine/opengl/util/GLState;->rotateModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->deleteFramebuffer()V",
        "Lorg/andengine/opengl/util/GLState;->getModelViewProjectionGLMatrix()[F",
        "Lorg/andengine/opengl/util/GLState;->bindTexture()V",
        "Lorg/andengine/opengl/util/GLState;->scaleModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->disableDither()Z",
        "Lorg/andengine/opengl/util/GLState;->pushProjectionGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->enableScissorTest()Z",
        "Lorg/andengine/opengl/util/GLState;->getRenderer()Ljava/lang/String;",
        "Lorg/andengine/opengl/util/GLState;->reset()V",
        "Lorg/andengine/opengl/util/GLState;->disableScissorTest()Z",
        "Lorg/andengine/opengl/util/GLState;->popProjectionGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->popModelViewGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->checkError()V",
        "Lorg/andengine/opengl/util/GLState;->enableBlend()Z",
        "Lorg/andengine/opengl/util/GLState;->deleteProgram()V",
        "Lorg/andengine/opengl/util/GLState;->checkFramebufferStatus()V",
        "Lorg/andengine/opengl/util/GLState;->blendFunction()V",
        "Lorg/andengine/opengl/util/GLState;->disableBlend()Z",
        "Lorg/andengine/opengl/util/GLState;->skewModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->getActiveFramebuffer()I",
        "Lorg/andengine/opengl/util/GLState;->translateModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->getFramebufferStatus()I",
        "Lorg/andengine/opengl/util/GLState;->flush()V",
        "Lorg/andengine/opengl/util/GLState;->getExtensions()Ljava/lang/String;",
        "Lorg/andengine/opengl/util/GLState;->rotateProjectionGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->setDitherEnabled()Z",
        "Lorg/andengine/opengl/util/GLState;->generateTexture()I",
        "Lorg/andengine/opengl/util/GLState;->glTexImage2D()V",
        "Lorg/andengine/opengl/util/GLState;->loadProjectionGLMatrixIdentity()V",
        "Lorg/andengine/opengl/util/GLState;->glTexSubImage2D()V",
        "Lorg/andengine/opengl/util/GLState;->deleteTexture()V",
        "Lorg/andengine/opengl/util/GLState;->finish()V",
        "Lorg/andengine/opengl/util/GLState;->activeTexture()V",
        "Lorg/andengine/opengl/util/GLState;->getVersion()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->aquireByteBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->onPopulateBufferData()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->releaseByteBuffer()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->bind()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->loadToHardware()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->dispose()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->getByteCapacity()I",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->isLoadedToHardware()Z"
    ],
    "Lorg/andengine/opengl/util/BufferUtils;": [
        "Lorg/andengine/opengl/util/BufferUtils;->jniFreeDirect()V",
        "Lorg/andengine/opengl/util/BufferUtils;->put()V",
        "Lorg/andengine/opengl/util/BufferUtils;->allocateDirectByteBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/opengl/util/BufferUtils;->freeDirectByteBuffer()V",
        "Lorg/andengine/opengl/util/BufferUtils;->jniAllocateDirect()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/opengl/util/BufferUtils;->jniPut()V"
    ],
    "Ljava/nio/ByteOrder;": [
        "Ljava/nio/ByteOrder;->nativeOrder()Ljava/nio/ByteOrder;"
    ],
    "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;": [
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onVertexBufferObjectLoaded()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onReload()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onUnloadVertexBufferObject()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onDestroy()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->updateVertexBufferObjects()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onCreate()V"
    ],
    "Lorg/andengine/opengl/shader/ShaderProgram;": [
        "Lorg/andengine/opengl/shader/ShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/ShaderProgram;->compileShader()I",
        "Lorg/andengine/opengl/shader/ShaderProgram;->link()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->compile()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->setCompiled()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->unbind()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->getUniformLocationOptional()I",
        "Lorg/andengine/opengl/shader/ShaderProgram;->isCompiled()Z",
        "Lorg/andengine/opengl/shader/ShaderProgram;->bind()V"
    ],
    "Lorg/andengine/opengl/vbo/VertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->onBufferData()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->getByteCapacity()I",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->loadToHardware()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->bind()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->dispose()V"
    ],
    "Lorg/andengine/opengl/vbo/LowMemoryVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/LowMemoryVertexBufferObject;->getByteCapacity()I"
    ],
    "Ljava/util/concurrent/locks/ReentrantLock;": [
        "Ljava/util/concurrent/locks/ReentrantLock;->unlock()V",
        "Ljava/util/concurrent/locks/ReentrantLock;->lock()V"
    ],
    "Lorg/andengine/opengl/vbo/SharedMemoryVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/SharedMemoryVertexBufferObject;->getByteCapacity()I"
    ],
    "Lorg/andengine/opengl/vbo/HighPerformanceVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/HighPerformanceVertexBufferObject;->getByteCapacity()I"
    ],
    "Ljava/nio/FloatBuffer;": [
        "Ljava/nio/FloatBuffer;->put()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->position()Ljava/nio/Buffer;"
    ],
    "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttribute;": [
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttribute;->glVertexAttribPointer()V"
    ],
    "Lorg/andengine/opengl/texture/Texture;": [
        "Lorg/andengine/opengl/texture/Texture;->hasTextureStateListener()Z",
        "Lorg/andengine/opengl/texture/Texture;->writeTextureToHardware()V",
        "Lorg/andengine/opengl/texture/Texture;->setTextureStateListener()V",
        "Lorg/andengine/opengl/texture/Texture;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/Texture;->getTextureStateListener()Lorg/andengine/opengl/texture/ITextureStateListener;",
        "Lorg/andengine/opengl/texture/Texture;->loadToHardware()V"
    ],
    "Lorg/andengine/opengl/texture/TextureOptions;": [
        "Lorg/andengine/opengl/texture/TextureOptions;->apply()V"
    ],
    "Lorg/andengine/opengl/texture/ITextureStateListener;": [
        "Lorg/andengine/opengl/texture/ITextureStateListener;->onLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/ITextureStateListener;->onUnloadedFromHardware()V"
    ],
    "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;": [
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;->add()Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;",
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;->build()Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributes;"
    ],
    "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;": [
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->warmup()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->draw()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->bind()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->getByteCapacity()I",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->dispose()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->unbind()V"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;->getUniformLocation()I"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->isEmpty()Z",
        "Ljava/util/HashSet;->remove()Z",
        "Ljava/util/HashSet;->contains()Z",
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->clear()V",
        "Ljava/util/HashSet;->removeAll()Z",
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->size()I"
    ],
    "Lorg/andengine/util/adt/io/in/IInputStreamOpener;": [
        "Lorg/andengine/util/adt/io/in/IInputStreamOpener;->open()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/bitmap/BitmapTexture;": [
        "Lorg/andengine/opengl/texture/bitmap/BitmapTexture;->onGetBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/opengl/GLUtils;": [
        "Landroid/opengl/GLUtils;->texSubImage2D()V",
        "Landroid/opengl/GLUtils;->texImage2D()V"
    ],
    "Lorg/andengine/opengl/texture/region/TextureRegionLibrary;": [
        "Lorg/andengine/opengl/texture/region/TextureRegionLibrary;->get()Lorg/andengine/opengl/texture/region/TextureRegion;"
    ],
    "Lorg/andengine/util/adt/map/Library;": [
        "Lorg/andengine/util/adt/map/Library;->get()Ljava/lang/Object;"
    ],
    "Lorg/andengine/opengl/texture/region/ITextureRegion;": [
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getV()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getTextureY()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->isRotated()Z",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureX()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getTextureX()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getScale()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getU2()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getHeight()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getV2()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureHeight()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTexturePosition()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureSize()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getU()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureY()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureWidth()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->deepCopy()Lorg/andengine/opengl/texture/region/ITextureRegion;",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->set()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getWidth()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->isScaled()Z"
    ],
    "Lorg/andengine/opengl/texture/region/TiledTextureRegion;": [
        "Lorg/andengine/opengl/texture/region/TiledTextureRegion;->create()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/region/TiledTextureRegion;->deepCopy()Lorg/andengine/opengl/texture/region/TiledTextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/region/TextureRegionFactory;": [
        "Lorg/andengine/opengl/texture/region/TextureRegionFactory;->createFromSource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/region/TextureRegionFactory;->extractFromTexture()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/region/TextureRegionFactory;->createTiledFromSource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureY()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->setTextureX()V",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureHeight()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureX()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureWidth()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->setTextureY()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->hasTextureStateListener()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getHeight()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->load()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setUpdateOnHardwareNeeded()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureOptions()Lorg/andengine/opengl/texture/TextureOptions;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setTextureAtlasStateListener()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureAtlasStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->addTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->addEmptyTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->reloadToHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setTextureStateListener()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getHardwareTextureID()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->clearTextureAtlasSources()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->loadToHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getWidth()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->hasTextureAtlasStateListener()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->unload()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->isUpdateOnHardwareNeeded()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->bind()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->removeTextureAtlasSource()V"
    ],
    "Lorg/andengine/opengl/texture/region/TextureRegion;": [
        "Lorg/andengine/opengl/texture/region/TextureRegion;->getTextureY()F",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->deepCopy()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->getTextureX()F",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->updateUV()V"
    ],
    "Lorg/andengine/opengl/texture/render/RenderTexture;": [
        "Lorg/andengine/opengl/texture/render/RenderTexture;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->getBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->begin()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->end()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->savePreviousViewport()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->savePreviousFramebufferObjectID()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->getPixelsARGB_8888()[I",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->restorePreviousFramebufferObjectID()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->flush()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->resotorePreviousViewport()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->loadToHardware()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->finish()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->destroy()V"
    ],
    "Ljava/nio/IntBuffer;": [
        "Ljava/nio/IntBuffer;->wrap()Ljava/nio/IntBuffer;",
        "Ljava/nio/IntBuffer;->position()Ljava/nio/Buffer;"
    ],
    "Lorg/andengine/opengl/util/GLHelper;": [
        "Lorg/andengine/opengl/util/GLHelper;->getPixels()Ljava/nio/Buffer;",
        "Lorg/andengine/opengl/util/GLHelper;->$SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toA_8()[B",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toRGBA_4444()[S",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toRGB_565()[S",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toRGBA_8888()[I",
        "Lorg/andengine/opengl/util/GLHelper;->getPixelsARGB_8888()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertRGBA_8888toARGB_8888_FlippedVertical()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertRGBA_8888toARGB_8888()[I"
    ],
    "Lorg/andengine/opengl/texture/atlas/TextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getTextureAtlasStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->checkTextureAtlasSourcePosition()V",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getWidth()I",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->addEmptyTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->addTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getTextureStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getHeight()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->setAssetBasePath()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createFromSource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createTiledFromSource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createFromAsset()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createFromResource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->reset()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createTiledFromAsset()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createTiledFromResource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;->create()Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;->create()Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlasTextureRegionFactory;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlasTextureRegionFactory;->createTiledFromSource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlasTextureRegionFactory;->createFromSource()Lorg/andengine/opengl/texture/region/TextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->addTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->getTextureAtlasStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->unload()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->load()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureY()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureWidth()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureHeight()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureX()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;": [
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;->onTextureAtlasSourceLoadExeption()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;->onTextureAtlasSourceLoaded()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;->create()Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;"
    ],
    "Landroid/graphics/Picture;": [
        "Landroid/graphics/Picture;->getWidth()I",
        "Landroid/graphics/Picture;->draw()V",
        "Landroid/graphics/Picture;->getHeight()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/PictureBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/PictureBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/PictureBitmapTextureAtlasSource;"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->getWidth()I",
        "Landroid/graphics/Canvas;->scale()V",
        "Landroid/graphics/Canvas;->drawCircle()V",
        "Landroid/graphics/Canvas;->drawRoundRect()V",
        "Landroid/graphics/Canvas;->getHeight()I",
        "Landroid/graphics/Canvas;->setBitmap()V",
        "Landroid/graphics/Canvas;->drawRect()V",
        "Landroid/graphics/Canvas;->drawArc()V",
        "Landroid/graphics/Canvas;->drawARGB()V",
        "Landroid/graphics/Canvas;->drawOval()V",
        "Landroid/graphics/Canvas;->drawText()V",
        "Landroid/graphics/Canvas;->drawBitmap()V"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->getFontMetrics()Landroid/graphics/Paint$FontMetrics;",
        "Landroid/graphics/Paint;->setStrokeWidth()V",
        "Landroid/graphics/Paint;->setXfermode()Landroid/graphics/Xfermode;",
        "Landroid/graphics/Paint;->getTextWidths()I",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->setTypeface()Landroid/graphics/Typeface;",
        "Landroid/graphics/Paint;->setShader()Landroid/graphics/Shader;",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->getTextBounds()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorSwapBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorSwapBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorSwapBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/FillBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/FillBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/FillBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetBottom()F",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getAntiAliasing()Z",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetTop()F",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetRight()F",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetLeft()F"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;->onDecorateBitmap()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;->ensureLoadedBitmapIsMutable()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/OutlineBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/OutlineBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/OutlineBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getToY()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getFromX()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getFromY()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getToX()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;->values()[Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;->ordinal()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;->$SWITCH_TABLE$org$andengine$opengl$texture$atlas$bitmap$source$decorator$RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection()[I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorKeyBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorKeyBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorKeyBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseShapeBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseShapeBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseShapeBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/shape/IBitmapTextureAtlasSourceDecoratorShape;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/shape/IBitmapTextureAtlasSourceDecoratorShape;->onDecorateBitmap()V"
    ],
    "Landroid/graphics/RectF;": [
        "Landroid/graphics/RectF;->set()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/source/BaseTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/source/BaseTextureAtlasSource;->getTextureHeight()I",
        "Lorg/andengine/opengl/texture/atlas/source/BaseTextureAtlasSource;->getTextureWidth()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas;->getTextureStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas;->addTextureAtlasSource()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/builder/ITextureAtlasBuilder;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/ITextureAtlasBuilder;->build()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;->getTextureAtlasSource()Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;->getCallback()Lorg/andengine/util/call/Callback;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;->access$0()Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;->insert()Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;",
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;->access$0()Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;->access$1()I",
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;->access$0()I"
    ],
    "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture;": [
        "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture;->getInputStream()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture$ETC1TextureHeader;": [
        "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture$ETC1TextureHeader;->getHeight()I",
        "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture$ETC1TextureHeader;->getWidth()I"
    ],
    "Landroid/opengl/ETC1Util;": [
        "Landroid/opengl/ETC1Util;->loadTexture()V"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->getWidth()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->getInputStream()Ljava/io/InputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->hasMipMaps()Z",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->onGetInputStream()Ljava/io/InputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->getHeight()I"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getPVRTextureFormat()Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getNumMipmaps()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getWidth()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getDataLength()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getBitsPerPixel()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getHeight()I"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy;->newPVRTexturePixelBufferStrategyManager()Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager;",
        "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy;->loadPVRTextureData()V"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRGZTexture;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRGZTexture;->getInputStream()Ljava/util/zip/GZIPInputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRGZTexture;->onGetInputStream()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture;->onGetInputStream()Ljava/io/InputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture;->getInputStream()Ljava/util/zip/InflaterInputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZHeader;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZHeader;->getCCZCompressionFormat()Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZCompressionFormat;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZHeader;->getUncompressedSize()I"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZCompressionFormat;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZCompressionFormat;->wrap()Ljava/util/zip/InflaterInputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager;->getPixelBuffer()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/andengine/engine/options/RenderOptions;": [
        "Lorg/andengine/engine/options/RenderOptions;->isDithering()Z",
        "Lorg/andengine/engine/options/RenderOptions;->isMultiSampling()Z"
    ],
    "Lorg/andengine/opengl/view/IRendererListener;": [
        "Lorg/andengine/opengl/view/IRendererListener;->onSurfaceCreated()V",
        "Lorg/andengine/opengl/view/IRendererListener;->onSurfaceChanged()V"
    ],
    "Landroid/opengl/GLSurfaceView;": [
        "Landroid/opengl/GLSurfaceView;->onMeasure()V"
    ],
    "Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy;": [
        "Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy;->onMeasure()V"
    ],
    "Lorg/andengine/opengl/view/ConfigChooser$ConfigChooserMatcher;": [
        "Lorg/andengine/opengl/view/ConfigChooser$ConfigChooserMatcher;->matches()Z"
    ],
    "Lorg/andengine/opengl/exception/GLException;": [
        "Lorg/andengine/opengl/exception/GLException;->getErrorString()Ljava/lang/String;"
    ],
    "Landroid/opengl/GLU;": [
        "Landroid/opengl/GLU;->gluErrorString()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/util/GLMatrixStack;": [
        "Lorg/andengine/opengl/util/GLMatrixStack;->glPushMatrix()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glScalef()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glPopMatrix()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->getMatrix()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glLoadIdentity()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glSkewf()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glTranslatef()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->reset()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glRotatef()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glOrthof()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->setSkewM()V"
    ],
    "Landroid/opengl/Matrix;": [
        "Landroid/opengl/Matrix;->orthoM()V",
        "Landroid/opengl/Matrix;->translateM()V",
        "Landroid/opengl/Matrix;->multiplyMM()V",
        "Landroid/opengl/Matrix;->scaleM()V",
        "Landroid/opengl/Matrix;->setRotateM()V",
        "Landroid/opengl/Matrix;->setIdentityM()V"
    ],
    "Ljava/nio/ShortBuffer;": [
        "Ljava/nio/ShortBuffer;->wrap()Ljava/nio/ShortBuffer;"
    ],
    "Lorg/andengine/opengl/util/criteria/IGLCriteria;": [
        "Lorg/andengine/opengl/util/criteria/IGLCriteria;->isMet()Z"
    ],
    "Lorg/andengine/opengl/util/criteria/StringGLCriteria;": [
        "Lorg/andengine/opengl/util/criteria/StringGLCriteria;->getActualCriteria()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/adt/data/operator/StringOperator;": [
        "Lorg/andengine/util/adt/data/operator/StringOperator;->check()Z"
    ],
    "Lorg/andengine/opengl/util/criteria/IntGLCriteria;": [
        "Lorg/andengine/opengl/util/criteria/IntGLCriteria;->getActualCriteria()I"
    ],
    "Lorg/andengine/util/adt/data/operator/IntOperator;": [
        "Lorg/andengine/util/adt/data/operator/IntOperator;->check()Z"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;->getUniformLocation()I"
    ],
    "Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;",
        "Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;->getUniformLocation()I"
    ],
    "Lorg/andengine/opengl/shader/PositionColorShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionColorShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionColorShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionColorShaderProgram;"
    ],
    "Lorg/andengine/opengl/shader/ShaderProgramManager;": [
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->onCreate()V",
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->loadShaderProgram()V",
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->onDestroy()V",
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->onReload()V"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;"
    ],
    "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributes;": [
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributes;->glVertexAttribPointers()V"
    ],
    "Lorg/andengine/opengl/shader/source/IShaderSource;": [
        "Lorg/andengine/opengl/shader/source/IShaderSource;->getShaderSource()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/shader/source/CriteriaShaderSource$CriteriaShaderSourceEntry;": [
        "Lorg/andengine/opengl/shader/source/CriteriaShaderSource$CriteriaShaderSourceEntry;->isMet()Z",
        "Lorg/andengine/opengl/shader/source/CriteriaShaderSource$CriteriaShaderSourceEntry;->getShaderSource()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/font/FontFactory;": [
        "Lorg/andengine/opengl/font/FontFactory;->createFromAsset()Lorg/andengine/opengl/font/Font;",
        "Lorg/andengine/opengl/font/FontFactory;->setAssetBasePath()V",
        "Lorg/andengine/opengl/font/FontFactory;->onCreate()V",
        "Lorg/andengine/opengl/font/FontFactory;->create()Lorg/andengine/opengl/font/Font;"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->createFromAsset()Landroid/graphics/Typeface;",
        "Landroid/graphics/Typeface;->create()Landroid/graphics/Typeface;"
    ],
    "Lorg/andengine/opengl/font/Font;": [
        "Lorg/andengine/opengl/font/Font;->load()V",
        "Lorg/andengine/opengl/font/Font;->getLetter()Lorg/andengine/opengl/font/Letter;",
        "Lorg/andengine/opengl/font/Font;->getAscent()F",
        "Lorg/andengine/opengl/font/Font;->update()V",
        "Lorg/andengine/opengl/font/Font;->drawLetter()V",
        "Lorg/andengine/opengl/font/Font;->invalidateLetters()V",
        "Lorg/andengine/opengl/font/Font;->unload()V",
        "Lorg/andengine/opengl/font/Font;->getDescent()F",
        "Lorg/andengine/opengl/font/Font;->updateTextBounds()V",
        "Lorg/andengine/opengl/font/Font;->getLetterBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/font/Font;->createLetter()Lorg/andengine/opengl/font/Letter;",
        "Lorg/andengine/opengl/font/Font;->getLetterAdvance()F"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->width()I",
        "Landroid/graphics/Rect;->height()I",
        "Landroid/graphics/Rect;->inset()V"
    ],
    "Lorg/andengine/opengl/font/FontManager;": [
        "Lorg/andengine/opengl/font/FontManager;->onReload()V",
        "Lorg/andengine/opengl/font/FontManager;->loadFont()V",
        "Lorg/andengine/opengl/font/FontManager;->onDestroy()V",
        "Lorg/andengine/opengl/font/FontManager;->updateFonts()V",
        "Lorg/andengine/opengl/font/FontManager;->onCreate()V",
        "Lorg/andengine/opengl/font/FontManager;->unloadFont()V"
    ],
    "Lorg/andengine/opengl/font/BitmapFont;": [
        "Lorg/andengine/opengl/font/BitmapFont;->parseCharacters()V",
        "Lorg/andengine/opengl/font/BitmapFont;->getCharAttribute()C",
        "Lorg/andengine/opengl/font/BitmapFont;->unloadTextures()V",
        "Lorg/andengine/opengl/font/BitmapFont;->getAttribute()Ljava/lang/String;",
        "Lorg/andengine/opengl/font/BitmapFont;->loadTextures()V",
        "Lorg/andengine/opengl/font/BitmapFont;->getStringAttribute()Ljava/lang/String;",
        "Lorg/andengine/opengl/font/BitmapFont;->parseKernings()V",
        "Lorg/andengine/opengl/font/BitmapFont;->getIntAttribute()I",
        "Lorg/andengine/opengl/font/BitmapFont;->getBooleanAttribute()Z"
    ],
    "Lorg/andengine/opengl/font/BitmapFont$BitmapFontOptions;": [
        "Lorg/andengine/opengl/font/BitmapFont$BitmapFontOptions;->access$1()I",
        "Lorg/andengine/opengl/font/BitmapFont$BitmapFontOptions;->access$0()I"
    ],
    "Lorg/andengine/opengl/font/BitmapFont$BitmapFontPage;": [
        "Lorg/andengine/opengl/font/BitmapFont$BitmapFontPage;->getTexture()Lorg/andengine/opengl/texture/ITexture;"
    ],
    "Lorg/andengine/opengl/font/Letter;": [
        "Lorg/andengine/opengl/font/Letter;->isWhitespace()Z",
        "Lorg/andengine/opengl/font/Letter;->getKerning()I",
        "Lorg/andengine/opengl/font/Letter;->addKerning()V"
    ],
    "Lorg/andengine/util/adt/map/SparseArrayUtils;": [
        "Lorg/andengine/util/adt/map/SparseArrayUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/andengine/entity/text/AutoWrap;": [
        "Lorg/andengine/entity/text/AutoWrap;->ordinal()I",
        "Lorg/andengine/entity/text/AutoWrap;->values()[Lorg/andengine/entity/text/AutoWrap;"
    ],
    "Lorg/andengine/opengl/font/IFont;": [
        "Lorg/andengine/opengl/font/IFont;->getLineHeight()F",
        "Lorg/andengine/opengl/font/IFont;->getLetter()Lorg/andengine/opengl/font/Letter;",
        "Lorg/andengine/opengl/font/IFont;->getTexture()Lorg/andengine/opengl/texture/ITexture;"
    ],
    "Lorg/andengine/opengl/font/FontUtils;": [
        "Lorg/andengine/opengl/font/FontUtils;->$SWITCH_TABLE$org$andengine$entity$text$AutoWrap()[I",
        "Lorg/andengine/opengl/font/FontUtils;->splitLinesByWords()Ljava/util/List;",
        "Lorg/andengine/opengl/font/FontUtils;->splitLines()Ljava/util/List;",
        "Lorg/andengine/opengl/font/FontUtils;->measureText()F",
        "Lorg/andengine/opengl/font/FontUtils;->splitLinesByLetters()Ljava/util/List;",
        "Lorg/andengine/opengl/font/FontUtils;->getAdvanceCorrection()F",
        "Lorg/andengine/opengl/font/FontUtils;->splitLinesByCJK()Ljava/util/List;"
    ],
    "Lorg/andengine/engine/options/TouchOptions;": [
        "Lorg/andengine/engine/options/TouchOptions;->needsMultiTouch()Z",
        "Lorg/andengine/engine/options/TouchOptions;->getTouchEventIntervalMilliseconds()J",
        "Lorg/andengine/engine/options/TouchOptions;->setNeedsMultiTouch()Lorg/andengine/engine/options/TouchOptions;"
    ],
    "Lorg/andengine/engine/options/SoundOptions;": [
        "Lorg/andengine/engine/options/SoundOptions;->getMaxSimultaneousStreams()I",
        "Lorg/andengine/engine/options/SoundOptions;->setNeedsSound()Lorg/andengine/engine/options/SoundOptions;",
        "Lorg/andengine/engine/options/SoundOptions;->needsSound()Z"
    ],
    "Lorg/andengine/engine/Engine$UpdateThread;": [
        "Lorg/andengine/engine/Engine$UpdateThread;->interrupt()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->postRunnable()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->setEngine()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->join()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->start()V"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->getOrientation()[F",
        "Landroid/hardware/SensorManager;->getRotationMatrix()Z",
        "Landroid/hardware/SensorManager;->unregisterListener()V",
        "Landroid/hardware/SensorManager;->getSensorList()Ljava/util/List;",
        "Landroid/hardware/SensorManager;->remapCoordinateSystem()Z",
        "Landroid/hardware/SensorManager;->registerListener()Z"
    ],
    "Lorg/andengine/input/sensor/SensorDelay;": [
        "Lorg/andengine/input/sensor/SensorDelay;->getDelay()I"
    ],
    "Lorg/andengine/engine/handler/DrawHandlerList;": [
        "Lorg/andengine/engine/handler/DrawHandlerList;->onDraw()V",
        "Lorg/andengine/engine/handler/DrawHandlerList;->add()Z",
        "Lorg/andengine/engine/handler/DrawHandlerList;->clear()V",
        "Lorg/andengine/engine/handler/DrawHandlerList;->size()I",
        "Lorg/andengine/engine/handler/DrawHandlerList;->remove()Z",
        "Lorg/andengine/engine/handler/DrawHandlerList;->get()Ljava/lang/Object;"
    ],
    "Lorg/andengine/engine/handler/UpdateHandlerList;": [
        "Lorg/andengine/engine/handler/UpdateHandlerList;->get()Ljava/lang/Object;",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->clear()V",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->size()I",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->add()Z",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->onUpdate()V",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->removeAll()Z",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->remove()Z"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->addView()V",
        "Landroid/view/WindowManager;->removeView()V",
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getOrientation()I",
        "Landroid/view/Display;->getHeight()I"
    ],
    "Lorg/andengine/input/sensor/acceleration/AccelerationSensorOptions;": [
        "Lorg/andengine/input/sensor/acceleration/AccelerationSensorOptions;->getSensorDelay()Lorg/andengine/input/sensor/SensorDelay;"
    ],
    "Lorg/andengine/input/sensor/location/LocationSensorOptions;": [
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->isEnabledOnly()Z",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setAccuracy()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setCostAllowed()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setPowerRequirement()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->getMinimumTriggerTime()J",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->getMinimumTriggerDistance()J",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setSpeedRequired()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setAltitudeRequired()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setBearingRequired()V"
    ],
    "Lorg/andengine/input/sensor/orientation/OrientationSensorOptions;": [
        "Lorg/andengine/input/sensor/orientation/OrientationSensorOptions;->getSensorDelay()Lorg/andengine/input/sensor/SensorDelay;"
    ],
    "Landroid/hardware/Sensor;": [
        "Landroid/hardware/Sensor;->getType()I"
    ],
    "Lorg/andengine/input/sensor/acceleration/AccelerationData;": [
        "Lorg/andengine/input/sensor/acceleration/AccelerationData;->setValues()V",
        "Lorg/andengine/input/sensor/acceleration/AccelerationData;->setAccuracy()V"
    ],
    "Lorg/andengine/input/sensor/acceleration/IAccelerationListener;": [
        "Lorg/andengine/input/sensor/acceleration/IAccelerationListener;->onAccelerationChanged()V",
        "Lorg/andengine/input/sensor/acceleration/IAccelerationListener;->onAccelerationAccuracyChanged()V"
    ],
    "Lorg/andengine/input/sensor/orientation/OrientationData;": [
        "Lorg/andengine/input/sensor/orientation/OrientationData;->getAccuracy()I",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setAccelerationValues()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setMagneticFieldValues()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setAccelerationAccuracy()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setMagneticFieldAccuracy()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->updateOrientation()V"
    ],
    "Lorg/andengine/input/sensor/orientation/IOrientationListener;": [
        "Lorg/andengine/input/sensor/orientation/IOrientationListener;->onOrientationChanged()V",
        "Lorg/andengine/input/sensor/orientation/IOrientationListener;->onOrientationAccuracyChanged()V"
    ],
    "Lorg/andengine/engine/Engine$EngineLock;": [
        "Lorg/andengine/engine/Engine$EngineLock;->unlock()V",
        "Lorg/andengine/engine/Engine$EngineLock;->notifyCanDraw()V",
        "Lorg/andengine/engine/Engine$EngineLock;->notifyCanUpdate()V",
        "Lorg/andengine/engine/Engine$EngineLock;->waitUntilCanUpdate()V",
        "Lorg/andengine/engine/Engine$EngineLock;->lock()V",
        "Lorg/andengine/engine/Engine$EngineLock;->waitUntilCanDraw()V"
    ],
    "Lorg/andengine/entity/scene/Scene;": [
        "Lorg/andengine/entity/scene/Scene;->setChildScene()V",
        "Lorg/andengine/entity/scene/Scene;->onChildSceneTouchEvent()Z",
        "Lorg/andengine/entity/scene/Scene;->onUpdate()V",
        "Lorg/andengine/entity/scene/Scene;->onAreaTouchEvent()Ljava/lang/Boolean;",
        "Lorg/andengine/entity/scene/Scene;->setParentScene()V",
        "Lorg/andengine/entity/scene/Scene;->clearChildScene()V",
        "Lorg/andengine/entity/scene/Scene;->attachChild()V",
        "Lorg/andengine/entity/scene/Scene;->onSceneTouchEvent()Z",
        "Lorg/andengine/entity/scene/Scene;->onDraw()V",
        "Lorg/andengine/entity/scene/Scene;->onApplyMatrix()V"
    ],
    "Lorg/andengine/input/sensor/location/ILocationListener;": [
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationProviderEnabled()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationChanged()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationProviderStatusChanged()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationLost()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationProviderDisabled()V"
    ],
    "Lorg/andengine/input/touch/controller/ITouchController;": [
        "Lorg/andengine/input/touch/controller/ITouchController;->onUpdate()V",
        "Lorg/andengine/input/touch/controller/ITouchController;->setTouchEventCallback()V",
        "Lorg/andengine/input/touch/controller/ITouchController;->onHandleMotionEvent()V"
    ],
    "Lorg/andengine/engine/camera/hud/HUD;": [
        "Lorg/andengine/engine/camera/hud/HUD;->onSceneTouchEvent()Z",
        "Lorg/andengine/engine/camera/hud/HUD;->onUpdate()V",
        "Lorg/andengine/engine/camera/hud/HUD;->setCamera()V",
        "Lorg/andengine/engine/camera/hud/HUD;->onDraw()V",
        "Lorg/andengine/engine/camera/hud/HUD;->setBackgroundEnabled()V"
    ],
    "Lorg/andengine/engine/handler/runnable/RunnableHandler;": [
        "Lorg/andengine/engine/handler/runnable/RunnableHandler;->postRunnable()V",
        "Lorg/andengine/engine/handler/runnable/RunnableHandler;->onUpdate()V"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->vibrate()V"
    ],
    "Lorg/andengine/engine/handler/BaseEntityUpdateHandler;": [
        "Lorg/andengine/engine/handler/BaseEntityUpdateHandler;->onUpdate()V"
    ],
    "Lorg/andengine/engine/handler/IUpdateHandler;": [
        "Lorg/andengine/engine/handler/IUpdateHandler;->reset()V",
        "Lorg/andengine/engine/handler/IUpdateHandler;->onUpdate()V"
    ],
    "Lorg/andengine/engine/handler/IDrawHandler;": [
        "Lorg/andengine/engine/handler/IDrawHandler;->onDraw()V"
    ],
    "Lorg/andengine/engine/handler/timer/ITimerCallback;": [
        "Lorg/andengine/engine/handler/timer/ITimerCallback;->onTimePassed()V"
    ],
    "Lorg/andengine/entity/shape/IShape;": [
        "Lorg/andengine/entity/shape/IShape;->setBlendFunction()V",
        "Lorg/andengine/entity/shape/IShape;->collidesWith()Z"
    ],
    "Lorg/andengine/engine/handler/collision/ICollisionCallback;": [
        "Lorg/andengine/engine/handler/collision/ICollisionCallback;->onCollision()Z"
    ],
    "Lorg/andengine/engine/options/MusicOptions;": [
        "Lorg/andengine/engine/options/MusicOptions;->setNeedsMusic()Lorg/andengine/engine/options/MusicOptions;",
        "Lorg/andengine/engine/options/MusicOptions;->needsMusic()Z"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->getMode()I"
    ],
    "Lorg/andengine/engine/options/resolutionpolicy/BaseResolutionPolicy;": [
        "Lorg/andengine/engine/options/resolutionpolicy/BaseResolutionPolicy;->throwOnNotMeasureSpecEXACTLY()V"
    ],
    "Lorg/andengine/input/touch/TouchEvent;": [
        "Lorg/andengine/input/touch/TouchEvent;->getAction()I",
        "Lorg/andengine/input/touch/TouchEvent;->isActionCancel()Z",
        "Lorg/andengine/input/touch/TouchEvent;->isActionUp()Z",
        "Lorg/andengine/input/touch/TouchEvent;->offset()V",
        "Lorg/andengine/input/touch/TouchEvent;->obtain()Lorg/andengine/input/touch/TouchEvent;",
        "Lorg/andengine/input/touch/TouchEvent;->set()V",
        "Lorg/andengine/input/touch/TouchEvent;->isActionDown()Z",
        "Lorg/andengine/input/touch/TouchEvent;->isActionMove()Z",
        "Lorg/andengine/input/touch/TouchEvent;->getX()F",
        "Lorg/andengine/input/touch/TouchEvent;->getMotionEvent()Landroid/view/MotionEvent;",
        "Lorg/andengine/input/touch/TouchEvent;->getY()F",
        "Lorg/andengine/input/touch/TouchEvent;->getPointerID()I"
    ],
    "Lorg/andengine/engine/camera/ZoomCamera;": [
        "Lorg/andengine/engine/camera/ZoomCamera;->setZoomFactor()V",
        "Lorg/andengine/engine/camera/ZoomCamera;->onUpdate()V",
        "Lorg/andengine/engine/camera/ZoomCamera;->setCenter()V",
        "Lorg/andengine/engine/camera/ZoomCamera;->getCenterX()F",
        "Lorg/andengine/engine/camera/ZoomCamera;->getCenterY()F",
        "Lorg/andengine/engine/camera/ZoomCamera;->ensureInBounds()V"
    ],
    "Lorg/andengine/engine/camera/BoundCamera;": [
        "Lorg/andengine/engine/camera/BoundCamera;->getCenterY()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getXMax()F",
        "Lorg/andengine/engine/camera/BoundCamera;->applySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/BoundCamera;->unapplySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/BoundCamera;->getBoundedY()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getYMax()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getCenterX()F",
        "Lorg/andengine/engine/camera/BoundCamera;->ensureInBounds()V",
        "Lorg/andengine/engine/camera/BoundCamera;->getYMin()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getBoundedX()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getXMin()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getHeight()F",
        "Lorg/andengine/engine/camera/BoundCamera;->setBounds()V",
        "Lorg/andengine/engine/camera/BoundCamera;->getWidth()F"
    ],
    "Lorg/andengine/engine/camera/CameraFactory;": [
        "Lorg/andengine/engine/camera/CameraFactory;->getDisplayMetrics()Landroid/util/DisplayMetrics;"
    ],
    "Lorg/andengine/engine/camera/SmoothCamera;": [
        "Lorg/andengine/engine/camera/SmoothCamera;->limitToMaxVelocityY()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->onSmoothZoomFinished()V",
        "Lorg/andengine/engine/camera/SmoothCamera;->getCenterY()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->limitToMaxVelocityX()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->getCenterX()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->onSmoothZoomStarted()V",
        "Lorg/andengine/engine/camera/SmoothCamera;->getZoomFactor()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->limitToMaxZoomFactorChange()F"
    ],
    "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;": [
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->updateControlKnob()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->registerUpdateHandler()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->attachChild()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onHandleControlBaseLeft()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->setCamera()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onUpdateControlKnob()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->registerTouchArea()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->setTouchAreaBindingOnActionDownEnabled()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onHandleControlKnobReleased()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->getOnScreenControlListener()Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl$IOnScreenControlListener;",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->setOnSceneTouchListener()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onHandleControlBaseTouched()Z"
    ],
    "Lorg/andengine/engine/camera/hud/controls/DigitalOnScreenControl;": [
        "Lorg/andengine/engine/camera/hud/controls/DigitalOnScreenControl;->testDiagonalAngle()Z"
    ],
    "Lorg/andengine/entity/sprite/Sprite;": [
        "Lorg/andengine/entity/sprite/Sprite;->getAlpha()F",
        "Lorg/andengine/entity/sprite/Sprite;->clearEntityModifiers()V",
        "Lorg/andengine/entity/sprite/Sprite;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/sprite/Sprite;->setScaleCenter()V",
        "Lorg/andengine/entity/sprite/Sprite;->getSceneCenterCoordinates()[F",
        "Lorg/andengine/entity/sprite/Sprite;->getVertexBufferObject()Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;",
        "Lorg/andengine/entity/sprite/Sprite;->getWidth()F",
        "Lorg/andengine/entity/sprite/Sprite;->setScale()V",
        "Lorg/andengine/entity/sprite/Sprite;->getHeightScaled()F",
        "Lorg/andengine/entity/sprite/Sprite;->preDraw()V",
        "Lorg/andengine/entity/sprite/Sprite;->getBlue()F",
        "Lorg/andengine/entity/sprite/Sprite;->getY()F",
        "Lorg/andengine/entity/sprite/Sprite;->setBlendingEnabled()V",
        "Lorg/andengine/entity/sprite/Sprite;->contains()Z",
        "Lorg/andengine/entity/sprite/Sprite;->onUpdateTextureCoordinates()V",
        "Lorg/andengine/entity/sprite/Sprite;->getTextureRegion()Lorg/andengine/opengl/texture/region/ITextureRegion;",
        "Lorg/andengine/entity/sprite/Sprite;->registerEntityModifier()V",
        "Lorg/andengine/entity/sprite/Sprite;->getWidthScaled()F",
        "Lorg/andengine/entity/sprite/Sprite;->isFlippedVertical()Z",
        "Lorg/andengine/entity/sprite/Sprite;->onUpdateColor()V",
        "Lorg/andengine/entity/sprite/Sprite;->setFlippedHorizontal()V",
        "Lorg/andengine/entity/sprite/Sprite;->onUpdateVertices()V",
        "Lorg/andengine/entity/sprite/Sprite;->setVisible()V",
        "Lorg/andengine/entity/sprite/Sprite;->getGreen()F",
        "Lorg/andengine/entity/sprite/Sprite;->isFlippedHorizontal()Z",
        "Lorg/andengine/entity/sprite/Sprite;->getHeight()F",
        "Lorg/andengine/entity/sprite/Sprite;->getX()F",
        "Lorg/andengine/entity/sprite/Sprite;->setPosition()V",
        "Lorg/andengine/entity/sprite/Sprite;->getRed()F"
    ],
    "Lorg/andengine/input/touch/detector/ClickDetector;": [
        "Lorg/andengine/input/touch/detector/ClickDetector;->setEnabled()V",
        "Lorg/andengine/input/touch/detector/ClickDetector;->setTriggerClickMaximumMilliseconds()V",
        "Lorg/andengine/input/touch/detector/ClickDetector;->onSceneTouchEvent()Z",
        "Lorg/andengine/input/touch/detector/ClickDetector;->prepareClick()V"
    ],
    "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl;": [
        "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl;->getOnScreenControlListener()Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl$IAnalogOnScreenControlListener;"
    ],
    "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl$IAnalogOnScreenControlListener;": [
        "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl$IAnalogOnScreenControlListener;->onControlClick()V"
    ],
    "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;": [
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->setFirstScene()V",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getFirstCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getSecondCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getFirstScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getSecondScene()Lorg/andengine/entity/scene/Scene;"
    ],
    "Lorg/andengine/engine/splitscreen/SingleSceneSplitScreenEngine;": [
        "Lorg/andengine/engine/splitscreen/SingleSceneSplitScreenEngine;->getFirstCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/splitscreen/SingleSceneSplitScreenEngine;->getSecondCamera()Lorg/andengine/engine/camera/Camera;"
    ],
    "Lorg/andengine/entity/modifier/EntityModifierList;": [
        "Lorg/andengine/entity/modifier/EntityModifierList;->add()Z",
        "Lorg/andengine/entity/modifier/EntityModifierList;->removeAll()Z",
        "Lorg/andengine/entity/modifier/EntityModifierList;->reset()V",
        "Lorg/andengine/entity/modifier/EntityModifierList;->remove()Z",
        "Lorg/andengine/entity/modifier/EntityModifierList;->clear()V",
        "Lorg/andengine/entity/modifier/EntityModifierList;->onUpdate()V",
        "Lorg/andengine/entity/modifier/EntityModifierList;->size()I"
    ],
    "Lorg/andengine/entity/ZIndexSorter;": [
        "Lorg/andengine/entity/ZIndexSorter;->sort()V",
        "Lorg/andengine/entity/ZIndexSorter;->getInstance()Lorg/andengine/entity/ZIndexSorter;"
    ],
    "Lorg/andengine/entity/IEntityMatcher;": [
        "Lorg/andengine/entity/IEntityMatcher;->matches()Z"
    ],
    "Lorg/andengine/entity/TagEntityMatcher;": [
        "Lorg/andengine/entity/TagEntityMatcher;->matches()Z"
    ],
    "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->onUpdateTextureCoordinates()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->onUpdateVertices()V"
    ],
    "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;": [
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getTileCount()I",
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getHeight()F",
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getTextureRegion()Lorg/andengine/opengl/texture/region/ITextureRegion;",
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getWidth()F"
    ],
    "Lorg/andengine/entity/sprite/ButtonSprite;": [
        "Lorg/andengine/entity/sprite/ButtonSprite;->contains()Z",
        "Lorg/andengine/entity/sprite/ButtonSprite;->isVisible()Z",
        "Lorg/andengine/entity/sprite/ButtonSprite;->setCurrentTileIndex()V",
        "Lorg/andengine/entity/sprite/ButtonSprite;->isEnabled()Z",
        "Lorg/andengine/entity/sprite/ButtonSprite;->changeState()V"
    ],
    "Lorg/andengine/entity/sprite/ButtonSprite$State;": [
        "Lorg/andengine/entity/sprite/ButtonSprite$State;->getTiledTextureRegionIndex()I",
        "Lorg/andengine/entity/sprite/ButtonSprite$State;->toString()Ljava/lang/String;"
    ],
    "Lorg/andengine/entity/sprite/TiledSprite;": [
        "Lorg/andengine/entity/sprite/TiledSprite;->isFlippedHorizontal()Z",
        "Lorg/andengine/entity/sprite/TiledSprite;->contains()Z",
        "Lorg/andengine/entity/sprite/TiledSprite;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/sprite/TiledSprite;->getHeight()F",
        "Lorg/andengine/entity/sprite/TiledSprite;->isFlippedVertical()Z",
        "Lorg/andengine/entity/sprite/TiledSprite;->getVertexBufferObject()Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;",
        "Lorg/andengine/entity/sprite/TiledSprite;->getTileCount()I",
        "Lorg/andengine/entity/sprite/TiledSprite;->onManagedUpdate()V",
        "Lorg/andengine/entity/sprite/TiledSprite;->getWidth()F",
        "Lorg/andengine/entity/sprite/TiledSprite;->getTiledTextureRegion()Lorg/andengine/opengl/texture/region/ITiledTextureRegion;"
    ],
    "Lorg/andengine/entity/sprite/ButtonSprite$OnClickListener;": [
        "Lorg/andengine/entity/sprite/ButtonSprite$OnClickListener;->onClick()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->onUpdateTextureCoordinates()V",
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->draw()V"
    ],
    "Lorg/andengine/entity/sprite/AnimationData;": [
        "Lorg/andengine/entity/sprite/AnimationData;->fillFrameDurations()[J",
        "Lorg/andengine/entity/sprite/AnimationData;->set()V"
    ],
    "Lorg/andengine/entity/sprite/IAnimationData;": [
        "Lorg/andengine/entity/sprite/IAnimationData;->getFirstFrameIndex()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getFrameCount()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getFrameDurations()[J",
        "Lorg/andengine/entity/sprite/IAnimationData;->set()V",
        "Lorg/andengine/entity/sprite/IAnimationData;->getAnimationDuration()J",
        "Lorg/andengine/entity/sprite/IAnimationData;->getLoopCount()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->calculateCurrentFrameIndex()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getFrames()[I"
    ],
    "Lorg/andengine/entity/sprite/AnimatedSprite;": [
        "Lorg/andengine/entity/sprite/AnimatedSprite;->setPosition()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->animate()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->getTileCount()I",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->setCurrentTileIndex()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->registerEntityModifier()V"
    ],
    "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;": [
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationStarted()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationFrameChanged()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationFinished()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationLoopFinished()V"
    ],
    "Lorg/andengine/entity/sprite/batch/SpriteGroup;": [
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->attachChild()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->assertCapacity()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->getChildCount()I",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->setChildrenVisible()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->assertTexture()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->drawWithoutChecks()V"
    ],
    "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;": [
        "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;->attachChild()V",
        "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;->submit()V",
        "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;->onUpdateSpriteBatch()Z"
    ],
    "Lorg/andengine/entity/sprite/batch/SpriteBatch;": [
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->assertCapacity()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->getVertexBufferObject()Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->drawWithoutChecks()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->assertTexture()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->submit()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->onDraw()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->begin()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->end()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->setBlendingEnabled()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->setIndex()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->add()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->onSubmit()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->addWithPackedColor()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->addInner()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->draw()V"
    ],
    "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->isAutoDispose()Z",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->setDirtyOnHardware()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->isDisposed()Z",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->setBufferDataOffset()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->dispose()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->addWithPackedColor()V"
    ],
    "Lorg/andengine/entity/shape/Shape;": [
        "Lorg/andengine/entity/shape/Shape;->preDraw()V",
        "Lorg/andengine/entity/shape/Shape;->setBlendFunction()V",
        "Lorg/andengine/entity/shape/Shape;->reset()V",
        "Lorg/andengine/entity/shape/Shape;->postDraw()V",
        "Lorg/andengine/entity/shape/Shape;->setX()V",
        "Lorg/andengine/entity/shape/Shape;->setY()V",
        "Lorg/andengine/entity/shape/Shape;->getX()F",
        "Lorg/andengine/entity/shape/Shape;->dispose()V",
        "Lorg/andengine/entity/shape/Shape;->getVertexBufferObject()Lorg/andengine/opengl/vbo/IVertexBufferObject;",
        "Lorg/andengine/entity/shape/Shape;->getY()F",
        "Lorg/andengine/entity/shape/Shape;->setPosition()V"
    ],
    "Lorg/andengine/entity/sprite/batch/vbo/LowMemorySpriteBatchVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/batch/vbo/LowMemorySpriteBatchVertexBufferObject;->getFloatBuffer()Ljava/nio/FloatBuffer;"
    ],
    "Lorg/andengine/entity/sprite/batch/vbo/HighPerformanceSpriteBatchVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/batch/vbo/HighPerformanceSpriteBatchVertexBufferObject;->getBufferData()[F"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryTiledSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryTiledSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceTiledSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceTiledSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryDiamondSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryDiamondSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemorySpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemorySpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryUniformColorSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryUniformColorSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceUncoloredSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceUncoloredSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryUncoloredSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryUncoloredSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceUniformColorSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceUniformColorSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceDiamondSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceDiamondSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/particle/Particle;": [
        "Lorg/andengine/entity/particle/Particle;->getEntity()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/particle/Particle;->setExpireTime()V",
        "Lorg/andengine/entity/particle/Particle;->getPhysicsHandler()Lorg/andengine/engine/handler/physics/PhysicsHandler;",
        "Lorg/andengine/entity/particle/Particle;->reset()V",
        "Lorg/andengine/entity/particle/Particle;->setExpired()V",
        "Lorg/andengine/entity/particle/Particle;->onUpdate()V",
        "Lorg/andengine/entity/particle/Particle;->onDraw()V",
        "Lorg/andengine/entity/particle/Particle;->getLifeTime()F",
        "Lorg/andengine/entity/particle/Particle;->setEntity()V"
    ],
    "Lorg/andengine/entity/particle/ParticleSystem;": [
        "Lorg/andengine/entity/particle/ParticleSystem;->spawnParticle()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->registerUpdateHandler()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->moveParticleToEnd()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->isParticlesSpawnEnabled()Z",
        "Lorg/andengine/entity/particle/ParticleSystem;->spawnParticles()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->determineCurrentRate()F"
    ],
    "Lorg/andengine/entity/particle/emitter/IParticleEmitter;": [
        "Lorg/andengine/entity/particle/emitter/IParticleEmitter;->getPositionOffset()V"
    ],
    "Lorg/andengine/entity/IEntityFactory;": [
        "Lorg/andengine/entity/IEntityFactory;->create()Lorg/andengine/entity/IEntity;"
    ],
    "Lorg/andengine/entity/particle/modifier/IParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/IParticleModifier;->onUpdateParticle()V",
        "Lorg/andengine/entity/particle/modifier/IParticleModifier;->onInitializeParticle()V"
    ],
    "Lorg/andengine/engine/handler/physics/PhysicsHandler;": [
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->accelerate()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->reset()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->onUpdate()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->setVelocity()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->setEntity()V"
    ],
    "Lorg/andengine/entity/particle/modifier/BaseTripleValueSpanParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/BaseTripleValueSpanParticleModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/particle/modifier/BaseTripleValueSpanParticleModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;->reset()V",
        "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;->reset()V",
        "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/particle/emitter/BaseRectangleParticleEmitter;": [
        "Lorg/andengine/entity/particle/emitter/BaseRectangleParticleEmitter;->setHeight()V",
        "Lorg/andengine/entity/particle/emitter/BaseRectangleParticleEmitter;->setWidth()V"
    ],
    "Lorg/andengine/entity/particle/emitter/BaseCircleParticleEmitter;": [
        "Lorg/andengine/entity/particle/emitter/BaseCircleParticleEmitter;->setRadiusY()V",
        "Lorg/andengine/entity/particle/emitter/BaseCircleParticleEmitter;->setRadiusX()V"
    ],
    "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;": [
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->onUpdateColor()V"
    ],
    "Lorg/andengine/entity/text/TickerText;": [
        "Lorg/andengine/entity/text/TickerText;->getTextOptions()Lorg/andengine/entity/text/TickerText$TickerTextOptions;"
    ],
    "Lorg/andengine/entity/text/Text;": [
        "Lorg/andengine/entity/text/Text;->getVertexBufferObject()Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;",
        "Lorg/andengine/entity/text/Text;->invalidateText()V",
        "Lorg/andengine/entity/text/Text;->setBlendingEnabled()V",
        "Lorg/andengine/entity/text/Text;->reset()V",
        "Lorg/andengine/entity/text/Text;->onUpdateColor()V",
        "Lorg/andengine/entity/text/Text;->getCharactersMaximum()I",
        "Lorg/andengine/entity/text/Text;->getLines()Ljava/util/ArrayList;",
        "Lorg/andengine/entity/text/Text;->getLineAlignmentWidth()F",
        "Lorg/andengine/entity/text/Text;->setText()V",
        "Lorg/andengine/entity/text/Text;->getLineWidths()Lorg/andengine/util/adt/list/IFloatList;",
        "Lorg/andengine/entity/text/Text;->getHeight()F",
        "Lorg/andengine/entity/text/Text;->onManagedUpdate()V",
        "Lorg/andengine/entity/text/Text;->setCharactersToDraw()V",
        "Lorg/andengine/entity/text/Text;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/text/Text;->getLeading()F",
        "Lorg/andengine/entity/text/Text;->setPosition()V",
        "Lorg/andengine/entity/text/Text;->onUpdateVertices()V",
        "Lorg/andengine/entity/text/Text;->getHorizontalAlign()Lorg/andengine/util/HorizontalAlign;",
        "Lorg/andengine/entity/text/Text;->getTextOptions()Lorg/andengine/entity/text/TextOptions;",
        "Lorg/andengine/entity/text/Text;->getFont()Lorg/andengine/opengl/font/IFont;"
    ],
    "Lorg/andengine/util/adt/list/IFloatList;": [
        "Lorg/andengine/util/adt/list/IFloatList;->add()V",
        "Lorg/andengine/util/adt/list/IFloatList;->get()F",
        "Lorg/andengine/util/adt/list/IFloatList;->clear()V"
    ],
    "Lorg/andengine/util/HorizontalAlign;": [
        "Lorg/andengine/util/HorizontalAlign;->ordinal()I",
        "Lorg/andengine/util/HorizontalAlign;->values()[Lorg/andengine/util/HorizontalAlign;"
    ],
    "Lorg/andengine/entity/text/vbo/HighPerformanceTextVertexBufferObject;": [
        "Lorg/andengine/entity/text/vbo/HighPerformanceTextVertexBufferObject;->$SWITCH_TABLE$org$andengine$util$HorizontalAlign()[I",
        "Lorg/andengine/entity/text/vbo/HighPerformanceTextVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/text/vbo/LowMemoryTextVertexBufferObject;": [
        "Lorg/andengine/entity/text/vbo/LowMemoryTextVertexBufferObject;->setDirtyOnHardware()V",
        "Lorg/andengine/entity/text/vbo/LowMemoryTextVertexBufferObject;->$SWITCH_TABLE$org$andengine$util$HorizontalAlign()[I"
    ],
    "Lorg/andengine/entity/util/FPSCounter;": [
        "Lorg/andengine/entity/util/FPSCounter;->onUpdate()V"
    ],
    "Lorg/andengine/entity/util/AverageFPSCounter;": [
        "Lorg/andengine/entity/util/AverageFPSCounter;->reset()V",
        "Lorg/andengine/entity/util/AverageFPSCounter;->getFPS()F",
        "Lorg/andengine/entity/util/AverageFPSCounter;->onUpdate()V",
        "Lorg/andengine/entity/util/AverageFPSCounter;->onHandleAverageDurationElapsed()V"
    ],
    "Lorg/andengine/entity/util/ScreenGrabber;": [
        "Lorg/andengine/entity/util/ScreenGrabber;->grab()V",
        "Lorg/andengine/entity/util/ScreenGrabber;->onManagedDraw()V",
        "Lorg/andengine/entity/util/ScreenGrabber;->grab()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/entity/util/ScreenCapture;": [
        "Lorg/andengine/entity/util/ScreenCapture;->saveCapture()V",
        "Lorg/andengine/entity/util/ScreenCapture;->capture()V"
    ],
    "Lorg/andengine/entity/util/ScreenCapture$IScreenCaptureCallback;": [
        "Lorg/andengine/entity/util/ScreenCapture$IScreenCaptureCallback;->onScreenCaptureFailed()V",
        "Lorg/andengine/entity/util/ScreenCapture$IScreenCaptureCallback;->onScreenCaptured()V"
    ],
    "Lorg/andengine/entity/util/ScreenGrabber$IScreenGrabberCallback;": [
        "Lorg/andengine/entity/util/ScreenGrabber$IScreenGrabberCallback;->onScreenGrabFailed()V",
        "Lorg/andengine/entity/util/ScreenGrabber$IScreenGrabberCallback;->onScreenGrabbed()V"
    ],
    "Lorg/andengine/entity/util/FPSLogger;": [
        "Lorg/andengine/entity/util/FPSLogger;->onLogFPS()V"
    ],
    "Lorg/andengine/entity/modifier/RotationModifier;": [
        "Lorg/andengine/entity/modifier/RotationModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/RotationModifier;->deepCopy()Lorg/andengine/entity/modifier/RotationModifier;",
        "Lorg/andengine/entity/modifier/RotationModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/RotationModifier;->onManagedInitialize()V"
    ],
    "Lorg/andengine/entity/modifier/SequenceEntityModifier;": [
        "Lorg/andengine/entity/modifier/SequenceEntityModifier;->deepCopy()Lorg/andengine/entity/modifier/SequenceEntityModifier;"
    ],
    "Lorg/andengine/entity/modifier/DelayModifier;": [
        "Lorg/andengine/entity/modifier/DelayModifier;->deepCopy()Lorg/andengine/entity/modifier/DelayModifier;",
        "Lorg/andengine/entity/modifier/DelayModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/DelayModifier;->onManagedUpdate()V"
    ],
    "Lorg/andengine/entity/modifier/ColorModifier;": [
        "Lorg/andengine/entity/modifier/ColorModifier;->deepCopy()Lorg/andengine/entity/modifier/ColorModifier;",
        "Lorg/andengine/entity/modifier/ColorModifier;->onSetValues()V",
        "Lorg/andengine/entity/modifier/ColorModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;": [
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->deepCopy()Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;",
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->onManagedUpdate()V",
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->getSecondsElapsed()F"
    ],
    "Lorg/andengine/entity/modifier/JumpModifier;": [
        "Lorg/andengine/entity/modifier/JumpModifier;->deepCopy()Lorg/andengine/entity/modifier/JumpModifier;"
    ],
    "Lorg/andengine/entity/modifier/MoveModifier;": [
        "Lorg/andengine/entity/modifier/MoveModifier;->reset()V",
        "Lorg/andengine/entity/modifier/MoveModifier;->onSetValues()V",
        "Lorg/andengine/entity/modifier/MoveModifier;->getToValueA()F",
        "Lorg/andengine/entity/modifier/MoveModifier;->getToValueB()F",
        "Lorg/andengine/entity/modifier/MoveModifier;->getFromValueA()F",
        "Lorg/andengine/entity/modifier/MoveModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/modifier/MoveModifier;->getFromValueB()F",
        "Lorg/andengine/entity/modifier/MoveModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveModifier;",
        "Lorg/andengine/entity/modifier/MoveModifier;->setAutoUnregisterWhenFinished()V"
    ],
    "Lorg/andengine/entity/modifier/ScaleAtModifier;": [
        "Lorg/andengine/entity/modifier/ScaleAtModifier;->deepCopy()Lorg/andengine/entity/modifier/ScaleAtModifier;",
        "Lorg/andengine/entity/modifier/ScaleAtModifier;->onManagedInitialize()V"
    ],
    "Lorg/andengine/entity/modifier/ScaleModifier;": [
        "Lorg/andengine/entity/modifier/ScaleModifier;->onSetValues()V",
        "Lorg/andengine/entity/modifier/ScaleModifier;->deepCopy()Lorg/andengine/entity/modifier/ScaleModifier;",
        "Lorg/andengine/entity/modifier/ScaleModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/ScaleModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/entity/modifier/ParallelEntityModifier;": [
        "Lorg/andengine/entity/modifier/ParallelEntityModifier;->deepCopy()Lorg/andengine/entity/modifier/ParallelEntityModifier;"
    ],
    "Lorg/andengine/entity/modifier/MoveXModifier;": [
        "Lorg/andengine/entity/modifier/MoveXModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/MoveXModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveXModifier;",
        "Lorg/andengine/entity/modifier/MoveXModifier;->onSetInitialValue()V"
    ],
    "Lorg/andengine/entity/modifier/SkewYModifier;": [
        "Lorg/andengine/entity/modifier/SkewYModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/SkewYModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/SkewYModifier;->deepCopy()Lorg/andengine/entity/modifier/SkewYModifier;"
    ],
    "Lorg/andengine/entity/modifier/LoopEntityModifier;": [
        "Lorg/andengine/entity/modifier/LoopEntityModifier;->deepCopy()Lorg/andengine/entity/modifier/LoopEntityModifier;",
        "Lorg/andengine/entity/modifier/LoopEntityModifier;->reset()V"
    ],
    "Lorg/andengine/entity/modifier/MoveByModifier;": [
        "Lorg/andengine/entity/modifier/MoveByModifier;->onChangeValues()V",
        "Lorg/andengine/entity/modifier/MoveByModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveByModifier;"
    ],
    "Lorg/andengine/entity/modifier/RotationAtModifier;": [
        "Lorg/andengine/entity/modifier/RotationAtModifier;->deepCopy()Lorg/andengine/entity/modifier/RotationAtModifier;",
        "Lorg/andengine/entity/modifier/RotationAtModifier;->onManagedInitialize()V"
    ],
    "Lorg/andengine/entity/modifier/PathModifier$Path;": [
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getSegmentLength()F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getCoordinatesX()[F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getSize()I",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getLength()F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->deepCopy()Lorg/andengine/entity/modifier/PathModifier$Path;",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getCoordinatesY()[F"
    ],
    "Lorg/andengine/entity/modifier/PathModifier;": [
        "Lorg/andengine/entity/modifier/PathModifier;->onModifierFinished()V",
        "Lorg/andengine/entity/modifier/PathModifier;->onUpdate()F",
        "Lorg/andengine/entity/modifier/PathModifier;->deepCopy()Lorg/andengine/entity/modifier/PathModifier;",
        "Lorg/andengine/entity/modifier/PathModifier;->onModifierStarted()V"
    ],
    "Lorg/andengine/entity/modifier/RotationByModifier;": [
        "Lorg/andengine/entity/modifier/RotationByModifier;->deepCopy()Lorg/andengine/entity/modifier/RotationByModifier;",
        "Lorg/andengine/entity/modifier/RotationByModifier;->onChangeValue()V"
    ],
    "Lorg/andengine/entity/modifier/MoveYModifier;": [
        "Lorg/andengine/entity/modifier/MoveYModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/MoveYModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveYModifier;",
        "Lorg/andengine/entity/modifier/MoveYModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;": [
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->deepCopy()Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;",
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->getSecondsElapsed()F",
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->onManagedUpdate()V",
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->onManagedInitialize()V"
    ],
    "Lorg/andengine/entity/modifier/SkewXModifier;": [
        "Lorg/andengine/entity/modifier/SkewXModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/SkewXModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/SkewXModifier;->deepCopy()Lorg/andengine/entity/modifier/SkewXModifier;"
    ],
    "Lorg/andengine/entity/modifier/FadeOutModifier;": [
        "Lorg/andengine/entity/modifier/FadeOutModifier;->deepCopy()Lorg/andengine/entity/modifier/FadeOutModifier;"
    ],
    "Lorg/andengine/entity/modifier/SkewModifier;": [
        "Lorg/andengine/entity/modifier/SkewModifier;->deepCopy()Lorg/andengine/entity/modifier/SkewModifier;",
        "Lorg/andengine/entity/modifier/SkewModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/modifier/SkewModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/modifier/AlphaModifier;": [
        "Lorg/andengine/entity/modifier/AlphaModifier;->setAutoUnregisterWhenFinished()V",
        "Lorg/andengine/entity/modifier/AlphaModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/AlphaModifier;->deepCopy()Lorg/andengine/entity/modifier/AlphaModifier;",
        "Lorg/andengine/entity/modifier/AlphaModifier;->reset()V",
        "Lorg/andengine/entity/modifier/AlphaModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;": [
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->access$1()[F",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->access$0()[F",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->deepCopy()Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->getControlPointCount()I",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->deepCopyReverse()Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;"
    ],
    "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;": [
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->onManagedUpdate()V",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->getSecondsElapsed()F",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->deepCopy()Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;"
    ],
    "Lorg/andengine/entity/modifier/FadeInModifier;": [
        "Lorg/andengine/entity/modifier/FadeInModifier;->deepCopy()Lorg/andengine/entity/modifier/FadeInModifier;"
    ],
    "Lorg/andengine/entity/scene/ITouchArea;": [
        "Lorg/andengine/entity/scene/ITouchArea;->onAreaTouched()Z",
        "Lorg/andengine/entity/scene/ITouchArea;->convertSceneToLocalCoordinates()[F",
        "Lorg/andengine/entity/scene/ITouchArea;->contains()Z"
    ],
    "Lorg/andengine/entity/scene/IOnAreaTouchListener;": [
        "Lorg/andengine/entity/scene/IOnAreaTouchListener;->onAreaTouched()Z"
    ],
    "Lorg/andengine/entity/scene/background/IBackground;": [
        "Lorg/andengine/entity/scene/background/IBackground;->onDraw()V",
        "Lorg/andengine/entity/scene/background/IBackground;->onUpdate()V",
        "Lorg/andengine/entity/scene/background/IBackground;->setColor()V"
    ],
    "Lorg/andengine/entity/scene/IOnSceneTouchListener;": [
        "Lorg/andengine/entity/scene/IOnSceneTouchListener;->onSceneTouchEvent()Z"
    ],
    "Lorg/andengine/entity/shape/IAreaShape;": [
        "Lorg/andengine/entity/shape/IAreaShape;->getY()F",
        "Lorg/andengine/entity/shape/IAreaShape;->getHeight()F",
        "Lorg/andengine/entity/shape/IAreaShape;->getWidth()F",
        "Lorg/andengine/entity/shape/IAreaShape;->setPosition()V",
        "Lorg/andengine/entity/shape/IAreaShape;->getX()F"
    ],
    "Lorg/andengine/entity/scene/background/RepeatingSpriteBackground;": [
        "Lorg/andengine/entity/scene/background/RepeatingSpriteBackground;->loadSprite()Lorg/andengine/entity/sprite/Sprite;"
    ],
    "Lorg/andengine/entity/scene/background/Background;": [
        "Lorg/andengine/entity/scene/background/Background;->onDraw()V",
        "Lorg/andengine/entity/scene/background/Background;->allocateBackgroundModifiers()V"
    ],
    "Lorg/andengine/entity/scene/background/ParallaxBackground$ParallaxEntity;": [
        "Lorg/andengine/entity/scene/background/ParallaxBackground$ParallaxEntity;->onDraw()V"
    ],
    "Lorg/andengine/entity/scene/background/ParallaxBackground;": [
        "Lorg/andengine/entity/scene/background/ParallaxBackground;->onUpdate()V"
    ],
    "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;",
        "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/scene/background/modifier/LoopBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/LoopBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/LoopBackgroundModifier;"
    ],
    "Lorg/andengine/entity/scene/background/modifier/SequenceBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/SequenceBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/SequenceBackgroundModifier;"
    ],
    "Lorg/andengine/entity/scene/background/modifier/ParallelBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/ParallelBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/ParallelBackgroundModifier;"
    ],
    "Lorg/andengine/entity/scene/menu/MenuScene;": [
        "Lorg/andengine/entity/scene/menu/MenuScene;->unregisterTouchArea()Z",
        "Lorg/andengine/entity/scene/menu/MenuScene;->reset()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->setOnAreaTouchListener()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->back()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->registerTouchArea()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->prepareAnimations()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->setOnSceneTouchListener()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->detachChild()Z",
        "Lorg/andengine/entity/scene/menu/MenuScene;->getChildScene()Lorg/andengine/entity/scene/menu/MenuScene;",
        "Lorg/andengine/entity/scene/menu/MenuScene;->attachChild()V"
    ],
    "Lorg/andengine/entity/scene/CameraScene;": [
        "Lorg/andengine/entity/scene/CameraScene;->reset()V",
        "Lorg/andengine/entity/scene/CameraScene;->clearChildScene()V",
        "Lorg/andengine/entity/scene/CameraScene;->setChildScene()V",
        "Lorg/andengine/entity/scene/CameraScene;->getChildScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/entity/scene/CameraScene;->back()V"
    ],
    "Lorg/andengine/entity/scene/menu/animator/IMenuAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/IMenuAnimator;->buildAnimations()V",
        "Lorg/andengine/entity/scene/menu/animator/IMenuAnimator;->prepareAnimations()V"
    ],
    "Lorg/andengine/entity/scene/menu/item/IMenuItem;": [
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSceneToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isIgnoreUpdate()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildByMatcher()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setIgnoreUpdate()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getVertexBufferObject()Lorg/andengine/opengl/vbo/IVertexBufferObject;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryFirst()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkew()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->contains()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onDetached()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getUpdateHandlerCount()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setColor()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onUpdate()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotationCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildByTag()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChildren()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterEntityModifier()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachSelf()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildByIndex()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onDraw()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterUpdateHandlers()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getGreen()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isBlendingEnabled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->attachChild()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlue()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScale()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildCount()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRotationCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotation()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRotationCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendFunctionDestination()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onSelected()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getZIndex()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getAlpha()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getShaderProgram()Lorg/andengine/opengl/shader/ShaderProgram;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setHeight()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setShaderProgram()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getWidthScaled()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->query()Ljava/util/List;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->convertLocalToSceneCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->toString()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getParent()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getLocalToParentTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isChildrenVisible()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->query()Ljava/util/ArrayList;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->reset()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setChildrenVisible()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onAreaTouched()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onAttached()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChildren()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getTag()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRed()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setUserData()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->dispose()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isChildrenIgnoreUpdate()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isCullingEnabled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterUpdateHandler()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendingEnabled()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isScaled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryFirstForSubclass()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSize()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChild()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->registerUpdateHandler()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getParentToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSceneCenterCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setTag()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isDisposed()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotationCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getHeightScaled()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->hasParent()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->clearEntityModifiers()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendFunction()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryForSubclass()Ljava/util/ArrayList;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getBlendFunctionDestination()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getBlue()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setWidth()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getFirstChild()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isRotated()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getWidth()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setCullingEnabled()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setZIndex()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRed()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setChildrenIgnoreUpdate()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->collidesWith()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isRotatedOrScaledOrSkewed()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getEntityModifierCount()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getLastChild()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setPosition()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setAlpha()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onUnselected()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->sortChildren()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isVisible()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isSkewed()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterEntityModifiers()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotationCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->clearUpdateHandlers()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChild()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setVisible()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRotation()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isCulled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setParent()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->callOnChildren()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getUserData()Ljava/lang/Object;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getHeight()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->convertSceneToLocalCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setGreen()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->registerEntityModifier()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getBlendFunctionSource()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getID()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendFunctionSource()V"
    ],
    "Lorg/andengine/entity/scene/menu/MenuScene$IOnMenuItemClickListener;": [
        "Lorg/andengine/entity/scene/menu/MenuScene$IOnMenuItemClickListener;->onMenuItemClicked()Z"
    ],
    "Lorg/andengine/entity/scene/menu/item/decorator/ScaleMenuItemDecorator;": [
        "Lorg/andengine/entity/scene/menu/item/decorator/ScaleMenuItemDecorator;->setScale()V"
    ],
    "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;": [
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->onMenuItemUnselected()V",
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->onMenuItemReset()V",
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->onMenuItemSelected()V"
    ],
    "Lorg/andengine/entity/scene/menu/animator/DirectMenuAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/DirectMenuAnimator;->$SWITCH_TABLE$org$andengine$util$HorizontalAlign()[I",
        "Lorg/andengine/entity/scene/menu/animator/DirectMenuAnimator;->getMaximumWidth()F",
        "Lorg/andengine/entity/scene/menu/animator/DirectMenuAnimator;->getOverallHeight()F"
    ],
    "Lorg/andengine/entity/scene/menu/animator/SlideMenuAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/SlideMenuAnimator;->$SWITCH_TABLE$org$andengine$util$HorizontalAlign()[I",
        "Lorg/andengine/entity/scene/menu/animator/SlideMenuAnimator;->getOverallHeight()F",
        "Lorg/andengine/entity/scene/menu/animator/SlideMenuAnimator;->getMaximumWidth()F"
    ],
    "Lorg/andengine/entity/scene/menu/animator/AlphaMenuAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/AlphaMenuAnimator;->getOverallHeight()F",
        "Lorg/andengine/entity/scene/menu/animator/AlphaMenuAnimator;->getMaximumWidth()F",
        "Lorg/andengine/entity/scene/menu/animator/AlphaMenuAnimator;->$SWITCH_TABLE$org$andengine$util$HorizontalAlign()[I"
    ],
    "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->bind()V"
    ],
    "Lorg/andengine/entity/primitive/Rectangle;": [
        "Lorg/andengine/entity/primitive/Rectangle;->setBlendingEnabled()V",
        "Lorg/andengine/entity/primitive/Rectangle;->getHeight()F",
        "Lorg/andengine/entity/primitive/Rectangle;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/primitive/Rectangle;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/Rectangle;->getWidth()F",
        "Lorg/andengine/entity/primitive/Rectangle;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/Rectangle;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;"
    ],
    "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->onUpdateVertices()V"
    ],
    "Lorg/andengine/entity/primitive/DrawMode;": [
        "Lorg/andengine/entity/primitive/DrawMode;->getDrawMode()I"
    ],
    "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->setDirtyOnHardware()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->getBufferData()[F",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->unbind()V"
    ],
    "Lorg/andengine/entity/primitive/Mesh;": [
        "Lorg/andengine/entity/primitive/Mesh;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;",
        "Lorg/andengine/entity/primitive/Mesh;->getColor()Lorg/andengine/util/color/Color;",
        "Lorg/andengine/entity/primitive/Mesh;->setBlendingEnabled()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/LowMemoryLineVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/LowMemoryLineVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/LowMemoryRectangleVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/LowMemoryRectangleVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceLineVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceLineVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceRectangleVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceRectangleVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceMeshVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceMeshVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/input/sensor/BaseSensorData;": [
        "Lorg/andengine/input/sensor/BaseSensorData;->setValues()V",
        "Lorg/andengine/input/sensor/BaseSensorData;->setAccuracy()V"
    ],
    "Lorg/andengine/input/sensor/acceleration/AccelerationData$IAxisSwap;": [
        "Lorg/andengine/input/sensor/acceleration/AccelerationData$IAxisSwap;->swapAxis()V"
    ],
    "Lorg/andengine/input/touch/TouchEvent$TouchEventPool;": [
        "Lorg/andengine/input/touch/TouchEvent$TouchEventPool;->obtainPoolItem()Ljava/lang/Object;",
        "Lorg/andengine/input/touch/TouchEvent$TouchEventPool;->recyclePoolItem()V"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->obtain()Landroid/view/MotionEvent;",
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getPointerId()I",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->getEventTime()J",
        "Landroid/view/MotionEvent;->getPointerCount()I",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->getDownTime()J"
    ],
    "Lorg/andengine/input/touch/controller/MultiTouchController;": [
        "Lorg/andengine/input/touch/controller/MultiTouchController;->onHandleTouchAction()V",
        "Lorg/andengine/input/touch/controller/MultiTouchController;->onHandleTouchMove()V",
        "Lorg/andengine/input/touch/controller/MultiTouchController;->getPointerIndex()I",
        "Lorg/andengine/input/touch/controller/MultiTouchController;->fireTouchEvent()V"
    ],
    "Lorg/andengine/input/touch/controller/BaseTouchController$TouchEventRunnablePoolItem;": [
        "Lorg/andengine/input/touch/controller/BaseTouchController$TouchEventRunnablePoolItem;->set()V"
    ],
    "Lorg/andengine/input/touch/controller/SingleTouchController;": [
        "Lorg/andengine/input/touch/controller/SingleTouchController;->fireTouchEvent()V"
    ],
    "Lorg/andengine/input/touch/detector/HoldDetector;": [
        "Lorg/andengine/input/touch/detector/HoldDetector;->setTriggerHoldMaximumDistance()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->prepareHold()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->triggerOnHoldStarted()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->triggerOnHold()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->setTriggerHoldMinimumMilliseconds()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->triggerOnHoldFinished()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->reset()V"
    ],
    "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;": [
        "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;->onHold()V",
        "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;->onHoldFinished()V",
        "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;->onHoldStarted()V"
    ],
    "Lorg/andengine/input/touch/detector/ClickDetector$IClickDetectorListener;": [
        "Lorg/andengine/input/touch/detector/ClickDetector$IClickDetectorListener;->onClick()V"
    ],
    "Landroid/view/GestureDetector;": [
        "Landroid/view/GestureDetector;->onTouchEvent()Z"
    ],
    "Lorg/andengine/input/touch/detector/BaseDetector;": [
        "Lorg/andengine/input/touch/detector/BaseDetector;->onManagedTouchEvent()Z",
        "Lorg/andengine/input/touch/detector/BaseDetector;->onTouchEvent()Z"
    ],
    "Lorg/andengine/input/touch/detector/PinchZoomDetector;": [
        "Lorg/andengine/input/touch/detector/PinchZoomDetector;->getZoomFactor()F",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector;->calculatePointerDistance()F",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector;->hasTwoOrMorePointers()Z"
    ],
    "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;": [
        "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;->onPinchZoom()V",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;->onPinchZoomStarted()V",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;->onPinchZoomFinished()V"
    ],
    "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;": [
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->triggerOnHold()V",
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->triggerOnHoldStarted()V",
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->prepareHold()V",
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->triggerOnHoldFinished()V"
    ],
    "Lorg/andengine/engine/handler/timer/TimerHandler;": [
        "Lorg/andengine/engine/handler/timer/TimerHandler;->reset()V",
        "Lorg/andengine/engine/handler/timer/TimerHandler;->onUpdate()V"
    ],
    "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;": [
        "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;->onScrollFinished()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;->onScroll()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;->onScrollStarted()V"
    ],
    "Lorg/andengine/input/touch/detector/ScrollDetector;": [
        "Lorg/andengine/input/touch/detector/ScrollDetector;->triggerOnScrollFinished()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->getX()F",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->prepareScroll()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->triggerOnScrollStarted()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->triggerOnScroll()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->getY()F"
    ],
    "Lnet/youmi/android/dev/c;": [
        "Lnet/youmi/android/dev/c;->a()Lnet/youmi/android/dev/CheckAppUpdateCallBack;",
        "Lnet/youmi/android/dev/c;->a()V",
        "Lnet/youmi/android/dev/c;->start()V"
    ],
    "Lnet/youmi/android/dev/e;": [
        "Lnet/youmi/android/dev/e;->start()V",
        "Lnet/youmi/android/dev/e;->a()Lnet/youmi/android/dev/OnlineConfigCallBack;",
        "Lnet/youmi/android/dev/e;->a()V",
        "Lnet/youmi/android/dev/e;->a()Ljava/lang/String;"
    ],
    "Lnet/youmi/android/dev/b;": [
        "Lnet/youmi/android/dev/b;->a()Ljava/lang/String;",
        "Lnet/youmi/android/dev/b;->a()Lnet/youmi/android/dev/AppUpdateInfo;"
    ],
    "Lnet/youmi/android/g/k;": [
        "Lnet/youmi/android/g/k;->a()Lnet/youmi/android/g/k;",
        "Lnet/youmi/android/g/k;->a()V",
        "Lnet/youmi/android/g/k;->a()Ljava/lang/String;",
        "Lnet/youmi/android/g/k;->a()Z"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Lnet/youmi/android/ExpService;": [
        "Lnet/youmi/android/ExpService;->getApplication()Landroid/app/Application;"
    ],
    "Lnet/youmi/android/SmartBannerActivity;": [
        "Lnet/youmi/android/SmartBannerActivity;->getIntent()Landroid/content/Intent;",
        "Lnet/youmi/android/SmartBannerActivity;->finish()V",
        "Lnet/youmi/android/SmartBannerActivity;->addContentView()V",
        "Lnet/youmi/android/SmartBannerActivity;->a()V",
        "Lnet/youmi/android/SmartBannerActivity;->overridePendingTransition()V"
    ],
    "Lnet/youmi/android/f/f;": [
        "Lnet/youmi/android/f/f;->clearHistory()V",
        "Lnet/youmi/android/f/f;->postUrl()V",
        "Lnet/youmi/android/f/f;->a()V",
        "Lnet/youmi/android/f/f;->loadUrl()V",
        "Lnet/youmi/android/f/f;->getCurrentView()Landroid/view/View;"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->startAnimation()V",
        "Landroid/view/View;->destroyDrawingCache()V",
        "Landroid/view/View;->getDrawingCache()Landroid/graphics/Bitmap;",
        "Landroid/view/View;->setId()V",
        "Landroid/view/View;->buildDrawingCache()V",
        "Landroid/view/View;->post()Z",
        "Landroid/view/View;->setOnClickListener()V",
        "Landroid/view/View;->setBackgroundColor()V",
        "Landroid/view/View;->setDrawingCacheEnabled()V",
        "Landroid/view/View;->setVisibility()V",
        "Landroid/view/View;->getWindowVisibleDisplayFrame()V",
        "Landroid/view/View;->setEnabled()V"
    ],
    "Lorg/apache/http/util/EncodingUtils;": [
        "Lorg/apache/http/util/EncodingUtils;->getBytes()[B"
    ],
    "Lnet/youmi/android/i/a;": [
        "Lnet/youmi/android/i/a;->setOnClickListener()V",
        "Lnet/youmi/android/i/a;->setImageResource()V",
        "Lnet/youmi/android/i/a;->setVisibility()V",
        "Lnet/youmi/android/i/a;->setScaleType()V",
        "Lnet/youmi/android/i/a;->setImageBitmap()V",
        "Lnet/youmi/android/i/a;->bringToFront()V"
    ],
    "Lnet/youmi/android/AdBrowser;": [
        "Lnet/youmi/android/AdBrowser;->setContentView()V",
        "Lnet/youmi/android/AdBrowser;->getIntent()Landroid/content/Intent;",
        "Lnet/youmi/android/AdBrowser;->addContentView()V",
        "Lnet/youmi/android/AdBrowser;->finish()V",
        "Lnet/youmi/android/AdBrowser;->a()V"
    ],
    "Lnet/youmi/android/i/b;": [
        "Lnet/youmi/android/i/b;->addView()V",
        "Lnet/youmi/android/i/b;->setForwardEnable()V",
        "Lnet/youmi/android/i/b;->setBackEnable()V",
        "Lnet/youmi/android/i/b;->setId()V",
        "Lnet/youmi/android/i/b;->setBackgroundColor()V",
        "Lnet/youmi/android/i/b;->a()V"
    ],
    "Lnet/youmi/android/SmartBannerService;": [
        "Lnet/youmi/android/SmartBannerService;->getApplication()Landroid/app/Application;"
    ],
    "Lnet/youmi/android/f/e;": [
        "Lnet/youmi/android/f/e;->a()V",
        "Lnet/youmi/android/f/e;->a()I"
    ],
    "Lnet/youmi/android/f/b;": [
        "Lnet/youmi/android/f/b;->a()V",
        "Lnet/youmi/android/f/b;->a()I"
    ],
    "Lnet/youmi/android/f/d;": [
        "Lnet/youmi/android/f/d;->a()Ljava/lang/String;",
        "Lnet/youmi/android/f/d;->a()V",
        "Lnet/youmi/android/f/d;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;",
        "Landroid/app/ActivityManager;->getRunningTasks()Ljava/util/List;"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->getClassName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;"
    ],
    "Lnet/youmi/android/f/g;": [
        "Lnet/youmi/android/f/g;->addView()V",
        "Lnet/youmi/android/f/g;->a()V",
        "Lnet/youmi/android/f/g;->setCanShowAdNow()V",
        "Lnet/youmi/android/f/g;->setBackgroundColor()V",
        "Lnet/youmi/android/f/g;->setClickableToast()V",
        "Lnet/youmi/android/f/g;->a()Lnet/youmi/android/f/a;",
        "Lnet/youmi/android/f/g;->proxyLoadUrl()Z"
    ],
    "Lnet/youmi/android/f/a;": [
        "Lnet/youmi/android/f/a;->a()V",
        "Lnet/youmi/android/f/a;->a()Z"
    ],
    "Landroid/webkit/CookieManager;": [
        "Landroid/webkit/CookieManager;->getInstance()Landroid/webkit/CookieManager;",
        "Landroid/webkit/CookieManager;->setAcceptCookie()V"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Landroid/os/AsyncTask;": [
        "Landroid/os/AsyncTask;->onProgressUpdate()V",
        "Landroid/os/AsyncTask;->onPostExecute()V",
        "Landroid/os/AsyncTask;->onCancelled()V",
        "Landroid/os/AsyncTask;->execute()Landroid/os/AsyncTask;",
        "Landroid/os/AsyncTask;->executeOnExecutor()Landroid/os/AsyncTask;"
    ],
    "Landroid/graphics/drawable/BitmapDrawable;": [
        "Landroid/graphics/drawable/BitmapDrawable;->getBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/util/Base64;": [
        "Landroid/util/Base64;->decode()[B",
        "Landroid/util/Base64;->encodeToString()Ljava/lang/String;"
    ],
    "Landroid/graphics/drawable/ShapeDrawable;": [
        "Landroid/graphics/drawable/ShapeDrawable;->getPaint()Landroid/graphics/Paint;"
    ],
    "Ljava/util/Timer;": [
        "Ljava/util/Timer;->cancel()V",
        "Ljava/util/Timer;->schedule()V"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->get()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->put()Ljava/lang/Object;"
    ],
    "Lnet/youmi/android/c/c;": [
        "Lnet/youmi/android/c/c;->a()Ljava/lang/String;",
        "Lnet/youmi/android/c/c;->a()Z",
        "Lnet/youmi/android/c/c;->a()V",
        "Lnet/youmi/android/c/c;->a()I"
    ],
    "Landroid/content/Intent$ShortcutIconResource;": [
        "Landroid/content/Intent$ShortcutIconResource;->fromContext()Landroid/content/Intent$ShortcutIconResource;"
    ],
    "Landroid/webkit/SslErrorHandler;": [
        "Landroid/webkit/SslErrorHandler;->proceed()V"
    ],
    "Landroid/webkit/WebStorage$QuotaUpdater;": [
        "Landroid/webkit/WebStorage$QuotaUpdater;->updateQuota()V"
    ],
    "Landroid/webkit/GeolocationPermissions$Callback;": [
        "Landroid/webkit/GeolocationPermissions$Callback;->invoke()V"
    ],
    "Landroid/content/DialogInterface;": [
        "Landroid/content/DialogInterface;->cancel()V"
    ],
    "Landroid/webkit/JsResult;": [
        "Landroid/webkit/JsResult;->cancel()V"
    ],
    "Landroid/webkit/JsPromptResult;": [
        "Landroid/webkit/JsPromptResult;->cancel()V"
    ],
    "Lnet/youmi/android/banner/e;": [
        "Lnet/youmi/android/banner/e;->a()I",
        "Lnet/youmi/android/banner/e;->a()Landroid/content/Context;",
        "Lnet/youmi/android/banner/e;->a()Ljava/lang/String;",
        "Lnet/youmi/android/banner/e;->a()V"
    ],
    "Lnet/youmi/android/banner/AdViewListener;": [
        "Lnet/youmi/android/banner/AdViewListener;->onFailedToReceivedAd()V",
        "Lnet/youmi/android/banner/AdViewListener;->onSwitchedAd()V",
        "Lnet/youmi/android/banner/AdViewListener;->onReceivedAd()V"
    ],
    "Lnet/youmi/android/banner/h;": [
        "Lnet/youmi/android/banner/h;->a()I",
        "Lnet/youmi/android/banner/h;->a()Ljava/lang/String;",
        "Lnet/youmi/android/banner/h;->a()V"
    ],
    "Lnet/youmi/android/banner/BannerManager;": [
        "Lnet/youmi/android/banner/BannerManager;->getBannerObject()Lnet/youmi/android/banner/h;",
        "Lnet/youmi/android/banner/BannerManager;->a()I",
        "Lnet/youmi/android/banner/BannerManager;->setBannerObject()V",
        "Lnet/youmi/android/banner/BannerManager;->a()V",
        "Lnet/youmi/android/banner/BannerManager;->checkPermissions()Ljava/lang/String;",
        "Lnet/youmi/android/banner/BannerManager;->a()Ljava/lang/String;"
    ],
    "Lnet/youmi/android/banner/g;": [
        "Lnet/youmi/android/banner/g;->sendEmptyMessage()Z"
    ],
    "Lnet/youmi/android/banner/c;": [
        "Lnet/youmi/android/banner/c;->a()V"
    ],
    "Lnet/youmi/android/d/a;": [
        "Lnet/youmi/android/d/a;->a()Lnet/youmi/android/d/a;",
        "Lnet/youmi/android/d/a;->cancel()V",
        "Lnet/youmi/android/d/a;->a()V",
        "Lnet/youmi/android/d/a;->addContentView()V",
        "Lnet/youmi/android/d/a;->show()V"
    ],
    "Lnet/youmi/android/banner/a;": [
        "Lnet/youmi/android/banner/a;->a()V"
    ],
    "Lnet/youmi/android/banner/AdView;": [
        "Lnet/youmi/android/banner/AdView;->getVisibility()I",
        "Lnet/youmi/android/banner/AdView;->getChildCount()I",
        "Lnet/youmi/android/banner/AdView;->addView()V",
        "Lnet/youmi/android/banner/AdView;->setVisibility()V",
        "Lnet/youmi/android/banner/AdView;->a()V",
        "Lnet/youmi/android/banner/AdView;->removeAllViews()V",
        "Lnet/youmi/android/banner/AdView;->a()Z"
    ],
    "Lnet/youmi/android/banner/f;": [
        "Lnet/youmi/android/banner/f;->cancel()Z"
    ],
    "Lnet/youmi/android/banner/AdSize;": [
        "Lnet/youmi/android/banner/AdSize;->getAdHeight()I",
        "Lnet/youmi/android/banner/AdSize;->resizeWidth()I",
        "Lnet/youmi/android/banner/AdSize;->resizeHeight()I",
        "Lnet/youmi/android/banner/AdSize;->getAdWidth()I"
    ],
    "Lnet/youmi/android/dev/a;": [
        "Lnet/youmi/android/dev/a;->a()Z"
    ],
    "Lnet/youmi/android/banner/b;": [
        "Lnet/youmi/android/banner/b;->a()V"
    ],
    "Lnet/youmi/android/banner/d;": [
        "Lnet/youmi/android/banner/d;->a()V"
    ],
    "Ljava/util/zip/GZIPOutputStream;": [
        "Ljava/util/zip/GZIPOutputStream;->close()V",
        "Ljava/util/zip/GZIPOutputStream;->write()V",
        "Ljava/util/zip/GZIPOutputStream;->flush()V"
    ],
    "Ljava/io/ByteArrayInputStream;": [
        "Ljava/io/ByteArrayInputStream;->close()V",
        "Ljava/io/ByteArrayInputStream;->read()I"
    ],
    "Ljava/util/zip/GZIPInputStream;": [
        "Ljava/util/zip/GZIPInputStream;->close()V",
        "Ljava/util/zip/GZIPInputStream;->read()I"
    ],
    "Ljava/lang/ref/SoftReference;": [
        "Ljava/lang/ref/SoftReference;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->load()V",
        "Ljava/util/Properties;->get()Ljava/lang/Object;",
        "Ljava/util/Properties;->containsKey()Z",
        "Ljava/util/Properties;->store()V",
        "Ljava/util/Properties;->put()Ljava/lang/Object;"
    ],
    "Lnet/youmi/android/offers/EarnPointsOrderList;": [
        "Lnet/youmi/android/offers/EarnPointsOrderList;->a()Z",
        "Lnet/youmi/android/offers/EarnPointsOrderList;->a()V",
        "Lnet/youmi/android/offers/EarnPointsOrderList;->isEmpty()Z",
        "Lnet/youmi/android/offers/EarnPointsOrderList;->get()Lnet/youmi/android/offers/EarnPointsOrderInfo;",
        "Lnet/youmi/android/offers/EarnPointsOrderList;->size()I"
    ],
    "Lnet/youmi/android/offers/EarnPointsOrderInfo;": [
        "Lnet/youmi/android/offers/EarnPointsOrderInfo;->getPoints()I",
        "Lnet/youmi/android/offers/EarnPointsOrderInfo;->a()I",
        "Lnet/youmi/android/offers/EarnPointsOrderInfo;->getOrderID()Ljava/lang/String;",
        "Lnet/youmi/android/offers/EarnPointsOrderInfo;->getMessage()Ljava/lang/String;",
        "Lnet/youmi/android/offers/EarnPointsOrderInfo;->a()V"
    ],
    "Lnet/youmi/android/offers/d;": [
        "Lnet/youmi/android/offers/d;->a()Lnet/youmi/android/offers/d;",
        "Lnet/youmi/android/offers/d;->a()V",
        "Lnet/youmi/android/offers/d;->a()Ljava/util/List;"
    ],
    "Lnet/youmi/android/offers/e;": [
        "Lnet/youmi/android/offers/e;->a()Z",
        "Lnet/youmi/android/offers/e;->a()V"
    ],
    "Lnet/youmi/android/offers/PointsReceiver;": [
        "Lnet/youmi/android/offers/PointsReceiver;->getActionName_EarnPoints()Ljava/lang/String;",
        "Lnet/youmi/android/offers/PointsReceiver;->a()Ljava/lang/String;",
        "Lnet/youmi/android/offers/PointsReceiver;->onViewPoints()V",
        "Lnet/youmi/android/offers/PointsReceiver;->getActionName_ViewPoints()Ljava/lang/String;",
        "Lnet/youmi/android/offers/PointsReceiver;->onEarnPoints()V"
    ],
    "Lnet/youmi/android/offers/OffersManager;": [
        "Lnet/youmi/android/offers/OffersManager;->checkOffersAdConfig()Z",
        "Lnet/youmi/android/offers/OffersManager;->getCustomUserId()Ljava/lang/String;",
        "Lnet/youmi/android/offers/OffersManager;->onAppExit()V",
        "Lnet/youmi/android/offers/OffersManager;->getShowOffersWallIntent()Landroid/content/Intent;",
        "Lnet/youmi/android/offers/OffersManager;->getInstance()Lnet/youmi/android/offers/OffersManager;",
        "Lnet/youmi/android/offers/OffersManager;->a()Landroid/content/Context;"
    ],
    "Lnet/youmi/android/offers/OffersBanner;": [
        "Lnet/youmi/android/offers/OffersBanner;->startLoad()V",
        "Lnet/youmi/android/offers/OffersBanner;->a()Ljava/lang/String;"
    ],
    "Lnet/youmi/android/offers/OffersAdSize;": [
        "Lnet/youmi/android/offers/OffersAdSize;->getHeight()I",
        "Lnet/youmi/android/offers/OffersAdSize;->getWidth()I"
    ],
    "Lnet/youmi/android/offers/a/a;": [
        "Lnet/youmi/android/offers/a/a;->a()Ljava/lang/String;"
    ],
    "Lnet/youmi/android/offers/c/b;": [
        "Lnet/youmi/android/offers/c/b;->a()V",
        "Lnet/youmi/android/offers/c/b;->a()Lnet/youmi/android/offers/OffersAdSize;"
    ],
    "Lnet/youmi/android/offers/c/c;": [
        "Lnet/youmi/android/offers/c/c;->a()Lnet/youmi/android/offers/c/e;",
        "Lnet/youmi/android/offers/c/c;->setVisibility()V",
        "Lnet/youmi/android/offers/c/c;->startLoad()V",
        "Lnet/youmi/android/offers/c/c;->a()V",
        "Lnet/youmi/android/offers/c/c;->getContext()Landroid/content/Context;"
    ],
    "Lnet/youmi/android/offers/b;": [
        "Lnet/youmi/android/offers/b;->getContext()Landroid/content/Context;",
        "Lnet/youmi/android/offers/b;->addView()V",
        "Lnet/youmi/android/offers/b;->a()V",
        "Lnet/youmi/android/offers/b;->startAnimation()V"
    ],
    "Lnet/youmi/android/offers/c;": [
        "Lnet/youmi/android/offers/c;->a()V"
    ],
    "Lnet/youmi/android/offers/c/e;": [
        "Lnet/youmi/android/offers/c/e;->a()V"
    ],
    "Lnet/youmi/android/offers/c/g;": [
        "Lnet/youmi/android/offers/c/g;->a()V",
        "Lnet/youmi/android/offers/c/g;->a()Lnet/youmi/android/offers/c/a;",
        "Lnet/youmi/android/offers/c/g;->start()V"
    ],
    "Lnet/youmi/android/offers/c/a;": [
        "Lnet/youmi/android/offers/c/a;->proxyCloseCurrentWindow()Z",
        "Lnet/youmi/android/offers/c/a;->setCanShowAdNow()V",
        "Lnet/youmi/android/offers/c/a;->setBackgroundColor()V",
        "Lnet/youmi/android/offers/c/a;->addView()V",
        "Lnet/youmi/android/offers/c/a;->run()V",
        "Lnet/youmi/android/offers/c/a;->onAttachedToWindow()V",
        "Lnet/youmi/android/offers/c/a;->canShowAdNow()Z",
        "Lnet/youmi/android/offers/c/a;->getContext()Landroid/content/Context;",
        "Lnet/youmi/android/offers/c/a;->startLoad()V",
        "Lnet/youmi/android/offers/c/a;->a()V",
        "Lnet/youmi/android/offers/c/a;->a()Z"
    ],
    "Lnet/youmi/android/offers/c/f;": [
        "Lnet/youmi/android/offers/c/f;->a()V"
    ],
    "Lnet/youmi/android/offers/PointsManager;": [
        "Lnet/youmi/android/offers/PointsManager;->isEnableEarnPointsToastTips()Z",
        "Lnet/youmi/android/offers/PointsManager;->getInstance()Lnet/youmi/android/offers/PointsManager;",
        "Lnet/youmi/android/offers/PointsManager;->registerNotify()V",
        "Lnet/youmi/android/offers/PointsManager;->awardPoints()Z",
        "Lnet/youmi/android/offers/PointsManager;->isEnableEarnPointsNotification()Z"
    ],
    "Lnet/youmi/android/offers/PointsChangeNotify;": [
        "Lnet/youmi/android/offers/PointsChangeNotify;->onPointBalanceChange()V"
    ],
    "Landroid/view/animation/Animation;": [
        "Landroid/view/animation/Animation;->setStartOffset()V",
        "Landroid/view/animation/Animation;->setDuration()V",
        "Landroid/view/animation/Animation;->setFillAfter()V",
        "Landroid/view/animation/Animation;->setAnimationListener()V"
    ],
    "Lnet/youmi/android/g/b;": [
        "Lnet/youmi/android/g/b;->a()Lnet/youmi/android/g/b;",
        "Lnet/youmi/android/g/b;->a()Lnet/youmi/android/g/f;",
        "Lnet/youmi/android/g/b;->a()Lnet/youmi/android/g/a;",
        "Lnet/youmi/android/g/b;->a()Lnet/youmi/android/g/e;"
    ],
    "Lnet/youmi/android/g/e;": [
        "Lnet/youmi/android/g/e;->a()Ljava/lang/String;",
        "Lnet/youmi/android/g/e;->a()V",
        "Lnet/youmi/android/g/e;->a()I",
        "Lnet/youmi/android/g/e;->a()J"
    ],
    "Lnet/youmi/android/g/c;": [
        "Lnet/youmi/android/g/c;->a()Lnet/youmi/android/g/c;",
        "Lnet/youmi/android/g/c;->a()Z",
        "Lnet/youmi/android/g/c;->onCreate()V",
        "Lnet/youmi/android/g/c;->a()Ljava/lang/String;",
        "Lnet/youmi/android/g/c;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lnet/youmi/android/g/c;->a()Ljava/util/List;",
        "Lnet/youmi/android/g/c;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Lnet/youmi/android/g/h;": [
        "Lnet/youmi/android/g/h;->a()Ljava/lang/String;",
        "Lnet/youmi/android/g/h;->a()Lnet/youmi/android/g/i;",
        "Lnet/youmi/android/g/h;->a()Ljava/util/List;",
        "Lnet/youmi/android/g/h;->a()Z",
        "Lnet/youmi/android/g/h;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lnet/youmi/android/g/h;->a()Lnet/youmi/android/g/h;",
        "Lnet/youmi/android/g/h;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lnet/youmi/android/g/h;->onCreate()V"
    ],
    "Lnet/youmi/android/g/i;": [
        "Lnet/youmi/android/g/i;->a()V",
        "Lnet/youmi/android/g/i;->a()I",
        "Lnet/youmi/android/g/i;->a()Ljava/lang/String;",
        "Lnet/youmi/android/g/i;->a()J"
    ],
    "Lnet/youmi/android/g/d;": [
        "Lnet/youmi/android/g/d;->a()Z",
        "Lnet/youmi/android/g/d;->a()V",
        "Lnet/youmi/android/g/d;->a()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/client/params/HttpClientParams;": [
        "Lorg/apache/http/client/params/HttpClientParams;->setRedirecting()V"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/client/HttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/conn/ClientConnectionManager;": [
        "Lorg/apache/http/conn/ClientConnectionManager;->shutdown()V"
    ],
    "Lnet/youmi/android/g/f;": [
        "Lnet/youmi/android/g/f;->a()Lnet/youmi/android/g/b;",
        "Lnet/youmi/android/g/f;->a()Lnet/youmi/android/g/f;"
    ],
    "Lnet/youmi/android/g/j;": [
        "Lnet/youmi/android/g/j;->a()V"
    ],
    "Lnet/youmi/android/diy/DiyAdWebView;": [
        "Lnet/youmi/android/diy/DiyAdWebView;->canShowAdNow()Z",
        "Lnet/youmi/android/diy/DiyAdWebView;->maybeNeedToInit()V",
        "Lnet/youmi/android/diy/DiyAdWebView;->addView()V",
        "Lnet/youmi/android/diy/DiyAdWebView;->isInited()Z",
        "Lnet/youmi/android/diy/DiyAdWebView;->setCanShowAdNow()V",
        "Lnet/youmi/android/diy/DiyAdWebView;->a()V",
        "Lnet/youmi/android/diy/DiyAdWebView;->setBackgroundColor()V"
    ],
    "Lnet/youmi/android/diy/banner/a;": [
        "Lnet/youmi/android/diy/banner/a;->start()V",
        "Lnet/youmi/android/diy/banner/a;->a()Lnet/youmi/android/diy/DiyAdWebView;"
    ],
    "Lnet/youmi/android/diy/banner/DiyAdSize;": [
        "Lnet/youmi/android/diy/banner/DiyAdSize;->getHeight()I",
        "Lnet/youmi/android/diy/banner/DiyAdSize;->getWidth()I"
    ],
    "Lnet/youmi/android/diy/DiyManager;": [
        "Lnet/youmi/android/diy/DiyManager;->a()V"
    ],
    "Lnet/youmi/android/diy/a/a;": [
        "Lnet/youmi/android/diy/a/a;->a()Z"
    ],
    "Lnet/youmi/android/diy/banner/DiyBanner;": [
        "Lnet/youmi/android/diy/banner/DiyBanner;->a()Ljava/lang/String;"
    ],
    "Lnet/youmi/android/spot/i;": [
        "Lnet/youmi/android/spot/i;->a()Lnet/youmi/android/spot/SpotManager;",
        "Lnet/youmi/android/spot/i;->a()V",
        "Lnet/youmi/android/spot/i;->proxyLoadUrl()Z",
        "Lnet/youmi/android/spot/i;->setClickableToast()V",
        "Lnet/youmi/android/spot/i;->a()Z",
        "Lnet/youmi/android/spot/i;->setCloseSpotTime()V",
        "Lnet/youmi/android/spot/i;->setCanShowAdNow()V",
        "Lnet/youmi/android/spot/i;->a()Lnet/youmi/android/spot/a;",
        "Lnet/youmi/android/spot/i;->setSpotManager()V",
        "Lnet/youmi/android/spot/i;->setSpotDialogLinster()V",
        "Lnet/youmi/android/spot/i;->setBackgroundColor()V",
        "Lnet/youmi/android/spot/i;->proxyCloseCurrentWindow()Z",
        "Lnet/youmi/android/spot/i;->a()Lnet/youmi/android/spot/SpotDialogListener;",
        "Lnet/youmi/android/spot/i;->setAutoClose()V",
        "Lnet/youmi/android/spot/i;->addView()V"
    ],
    "Lnet/youmi/android/spot/a;": [
        "Lnet/youmi/android/spot/a;->a()Z",
        "Lnet/youmi/android/spot/a;->a()V"
    ],
    "Lnet/youmi/android/spot/SpotManager;": [
        "Lnet/youmi/android/spot/SpotManager;->setLoading()V",
        "Lnet/youmi/android/spot/SpotManager;->showSpotAds()V",
        "Lnet/youmi/android/spot/SpotManager;->a()Ljava/lang/String;",
        "Lnet/youmi/android/spot/SpotManager;->a()Z",
        "Lnet/youmi/android/spot/SpotManager;->a()J",
        "Lnet/youmi/android/spot/SpotManager;->getInstance()Lnet/youmi/android/spot/SpotManager;",
        "Lnet/youmi/android/spot/SpotManager;->a()Lnet/youmi/android/spot/i;",
        "Lnet/youmi/android/spot/SpotManager;->a()V",
        "Lnet/youmi/android/spot/SpotManager;->a()Landroid/content/Context;",
        "Lnet/youmi/android/spot/SpotManager;->disMiss()Z"
    ],
    "Lnet/youmi/android/spot/SpotDialogListener;": [
        "Lnet/youmi/android/spot/SpotDialogListener;->onShowFailed()V",
        "Lnet/youmi/android/spot/SpotDialogListener;->onShowSuccess()V"
    ],
    "Lnet/youmi/android/spot/b;": [
        "Lnet/youmi/android/spot/b;->execute()Landroid/os/AsyncTask;",
        "Lnet/youmi/android/spot/b;->a()Ljava/lang/String;",
        "Lnet/youmi/android/spot/b;->a()V"
    ],
    "Lnet/youmi/android/dev/OnlineConfigCallBack;": [
        "Lnet/youmi/android/dev/OnlineConfigCallBack;->onGetOnlineConfigSuccessful()V",
        "Lnet/youmi/android/dev/OnlineConfigCallBack;->onGetOnlineConfigFailed()V"
    ],
    "Lnet/youmi/android/dev/CheckAppUpdateCallBack;": [
        "Lnet/youmi/android/dev/CheckAppUpdateCallBack;->onCheckAppUpdateFinish()V"
    ],
    "Lnet/youmi/android/dev/AppUpdateInfo;": [
        "Lnet/youmi/android/dev/AppUpdateInfo;->a()V"
    ],
    "Lnet/youmi/android/i/d;": [
        "Lnet/youmi/android/i/d;->setImageDrawable()V",
        "Lnet/youmi/android/i/d;->getResources()Landroid/content/res/Resources;",
        "Lnet/youmi/android/i/d;->setScaleType()V",
        "Lnet/youmi/android/i/d;->a()[I",
        "Lnet/youmi/android/i/d;->a()V",
        "Lnet/youmi/android/i/d;->setBackgroundDrawable()V"
    ],
    "Lnet/youmi/android/i/f;": [
        "Lnet/youmi/android/i/f;->addState()V"
    ],
    "Lnet/youmi/android/i/e;": [
        "Lnet/youmi/android/i/e;->addState()V"
    ],
    "Landroid/widget/TableLayout;": [
        "Landroid/widget/TableLayout;->setColumnStretchable()V",
        "Landroid/widget/TableLayout;->setStretchAllColumns()V",
        "Landroid/widget/TableLayout;->addView()V"
    ],
    "Landroid/widget/TableRow;": [
        "Landroid/widget/TableRow;->addView()V"
    ],
    "Lnet/youmi/android/i/c;": [
        "Lnet/youmi/android/i/c;->a()V"
    ],
    "Lnet/youmi/android/c/d;": [
        "Lnet/youmi/android/c/d;->a()Ljava/lang/String;"
    ],
    "Ljava/io/FileReader;": [
        "Ljava/io/FileReader;->close()V"
    ],
    "Ljava/io/BufferedWriter;": [
        "Ljava/io/BufferedWriter;->write()V",
        "Ljava/io/BufferedWriter;->close()V",
        "Ljava/io/BufferedWriter;->flush()V"
    ],
    "Ljava/io/FileWriter;": [
        "Ljava/io/FileWriter;->close()V"
    ],
    "Lnet/youmi/android/c/b;": [
        "Lnet/youmi/android/c/b;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/methods/HttpUriRequest;": [
        "Lorg/apache/http/client/methods/HttpUriRequest;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->getAllHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/client/methods/HttpUriRequest;->abort()V"
    ],
    "Ljavax/crypto/SecretKeyFactory;": [
        "Ljavax/crypto/SecretKeyFactory;->getInstance()Ljavax/crypto/SecretKeyFactory;",
        "Ljavax/crypto/SecretKeyFactory;->generateSecret()Ljavax/crypto/SecretKey;"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;",
        "Ljavax/crypto/Cipher;->doFinal()[B"
    ],
    "Landroid/view/animation/AnimationUtils;": [
        "Landroid/view/animation/AnimationUtils;->loadInterpolator()Landroid/view/animation/Interpolator;"
    ],
    "Landroid/view/animation/AnimationSet;": [
        "Landroid/view/animation/AnimationSet;->addAnimation()V",
        "Landroid/view/animation/AnimationSet;->setInterpolator()V"
    ],
    "Landroid/os/StatFs;": [
        "Landroid/os/StatFs;->getAvailableBlocks()I",
        "Landroid/os/StatFs;->getBlockSize()I",
        "Landroid/os/StatFs;->getBlockCount()I"
    ],
    "Landroid/content/pm/ResolveInfo;": [
        "Landroid/content/pm/ResolveInfo;->loadLabel()Ljava/lang/CharSequence;"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;",
        "Ljava/lang/Runtime;->exec()Ljava/lang/Process;"
    ],
    "Lorg/apache/http/NameValuePair;": [
        "Lorg/apache/http/NameValuePair;->getName()Ljava/lang/String;",
        "Lorg/apache/http/NameValuePair;->getValue()Ljava/lang/String;"
    ],
    "Ljava/net/URI;": [
        "Ljava/net/URI;->create()Ljava/net/URI;"
    ],
    "Lorg/apache/http/params/BasicHttpParams;": [
        "Lorg/apache/http/params/BasicHttpParams;->setParameter()Lorg/apache/http/params/HttpParams;"
    ],
    "Ljava/io/RandomAccessFile;": [
        "Ljava/io/RandomAccessFile;->seek()V",
        "Ljava/io/RandomAccessFile;->write()V",
        "Ljava/io/RandomAccessFile;->close()V"
    ],
    "Lnet/youmi/android/d/b;": [
        "Lnet/youmi/android/d/b;->onDialogClose()V"
    ],
    "Lnet/youmi/android/g/a;": [
        "Lnet/youmi/android/g/a;->a()Lnet/youmi/android/g/a;"
    ],
    "Lnet/youmi/android/AdManager;": [
        "Lnet/youmi/android/AdManager;->getIsDownloadProgressDisplayOnNotification()Z",
        "Lnet/youmi/android/AdManager;->getTipsDisplayOnNotificationAfterInstall()Z"
    ],
    "Lu/aly/ak;": [
        "Lu/aly/ak;->a()Lu/aly/ak;",
        "Lu/aly/ak;->a()I"
    ],
    "Lu/aly/aL;": [
        "Lu/aly/aL;->a()V"
    ],
    "Lu/aly/Q;": [
        "Lu/aly/Q;->a()Z",
        "Lu/aly/Q;->a()V",
        "Lu/aly/Q;->a()Lu/aly/Q;",
        "Lu/aly/Q;->a()Lu/aly/Q$e;",
        "Lu/aly/Q;->toString()Ljava/lang/String;"
    ],
    "Lu/aly/aF;": [
        "Lu/aly/aF;->getMessage()Ljava/lang/String;"
    ],
    "Lu/aly/Q$e;": [
        "Lu/aly/Q$e;->a()Lu/aly/Q$e;"
    ],
    "Lu/aly/aY;": [
        "Lu/aly/aY;->a()Lu/aly/bc;",
        "Lu/aly/aY;->a()Lu/aly/aU;",
        "Lu/aly/aY;->a()I",
        "Lu/aly/aY;->a()Ljava/lang/Class;",
        "Lu/aly/aY;->a()S",
        "Lu/aly/aY;->a()B",
        "Lu/aly/aY;->a()Z",
        "Lu/aly/aY;->a()Ljava/lang/String;",
        "Lu/aly/aY;->a()Ljava/nio/ByteBuffer;",
        "Lu/aly/aY;->a()D",
        "Lu/aly/aY;->a()J",
        "Lu/aly/aY;->a()V",
        "Lu/aly/aY;->a()Lu/aly/aV;",
        "Lu/aly/aY;->a()Lu/aly/aT;",
        "Lu/aly/aY;->a()Lu/aly/bd;"
    ],
    "Lu/aly/bh;": [
        "Lu/aly/bh;->a()Lu/aly/bg;"
    ],
    "Lu/aly/bg;": [
        "Lu/aly/bg;->a()V"
    ],
    "Lu/aly/aw;": [
        "Lu/aly/aw;->a()I",
        "Lu/aly/aw;->a()J",
        "Lu/aly/aw;->a()B",
        "Lu/aly/aw;->a()V",
        "Lu/aly/aw;->a()Z"
    ],
    "Lu/aly/bl;": [
        "Lu/aly/bl;->a()V",
        "Lu/aly/bl;->a()I"
    ],
    "Lu/aly/I;": [
        "Lu/aly/I;->a()Lu/aly/I;",
        "Lu/aly/I;->a()Z",
        "Lu/aly/I;->a()V",
        "Lu/aly/I;->toString()Ljava/lang/String;",
        "Lu/aly/I;->a()Lu/aly/I$e;"
    ],
    "Lu/aly/I$e;": [
        "Lu/aly/I$e;->a()Lu/aly/I$e;"
    ],
    "Lu/aly/ag;": [
        "Lu/aly/ag;->a()Lu/aly/ag;",
        "Lu/aly/ag;->a()Lu/aly/ag$e;",
        "Lu/aly/ag;->a()V",
        "Lu/aly/ag;->a()Z"
    ],
    "Lu/aly/ag$e;": [
        "Lu/aly/ag$e;->a()Lu/aly/ag$e;"
    ],
    "Lu/aly/u;": [
        "Lu/aly/u;->a()Landroid/content/SharedPreferences;"
    ],
    "Lu/aly/s;": [
        "Lu/aly/s;->a()Ljava/lang/Object;",
        "Lu/aly/s;->a()Ljava/lang/String;",
        "Lu/aly/s;->a()[B"
    ],
    "Lu/aly/l;": [
        "Lu/aly/l;->a()Lu/aly/A;",
        "Lu/aly/l;->a()V",
        "Lu/aly/l;->a()Z"
    ],
    "Lu/aly/E;": [
        "Lu/aly/E;->a()V",
        "Lu/aly/E;->a()Lu/aly/Y;"
    ],
    "Lu/aly/aj;": [
        "Lu/aly/aj;->a()V"
    ],
    "Lu/aly/y;": [
        "Lu/aly/y;->a()Lu/aly/ae;",
        "Lu/aly/y;->a()[J"
    ],
    "Lu/aly/ae;": [
        "Lu/aly/ae;->a()Lu/aly/ae;",
        "Lu/aly/ae;->a()Lu/aly/ae$e;",
        "Lu/aly/ae;->a()V"
    ],
    "Lu/aly/aW;": [
        "Lu/aly/aW;->a()Z"
    ],
    "Lu/aly/bm;": [
        "Lu/aly/bm;->a()V",
        "Lu/aly/bm;->a()[B",
        "Lu/aly/bm;->a()Z",
        "Lu/aly/bm;->a()I"
    ],
    "Lu/aly/af;": [
        "Lu/aly/af;->a()I",
        "Lu/aly/af;->a()Lu/aly/af;",
        "Lu/aly/af;->a()Z",
        "Lu/aly/af;->a()V",
        "Lu/aly/af;->a()Lu/aly/af$e;",
        "Lu/aly/af;->toString()Ljava/lang/String;",
        "Lu/aly/af;->a()Ljava/util/List;"
    ],
    "Lu/aly/J;": [
        "Lu/aly/J;->a()Z",
        "Lu/aly/J;->a()V",
        "Lu/aly/J;->a()Lu/aly/J;",
        "Lu/aly/J;->a()Lu/aly/J$e;"
    ],
    "Lu/aly/K;": [
        "Lu/aly/K;->a()Lu/aly/K;",
        "Lu/aly/K;->a()V",
        "Lu/aly/K;->ac()V",
        "Lu/aly/K;->a()Z",
        "Lu/aly/K;->ab()Z",
        "Lu/aly/K;->a()Lu/aly/K$e;"
    ],
    "Lu/aly/X;": [
        "Lu/aly/X;->a()Z",
        "Lu/aly/X;->a()V",
        "Lu/aly/X;->a()Lu/aly/X$e;",
        "Lu/aly/X;->a()Lu/aly/X;"
    ],
    "Lu/aly/H;": [
        "Lu/aly/H;->a()Lu/aly/H$e;",
        "Lu/aly/H;->a()V",
        "Lu/aly/H;->a()Lu/aly/H;"
    ],
    "Lu/aly/T;": [
        "Lu/aly/T;->a()Lu/aly/T$e;",
        "Lu/aly/T;->a()Z",
        "Lu/aly/T;->a()V",
        "Lu/aly/T;->a()Ljava/lang/String;",
        "Lu/aly/T;->a()Lu/aly/T;",
        "Lu/aly/T;->toString()Ljava/lang/String;",
        "Lu/aly/T;->a()Ljava/util/Map;",
        "Lu/aly/T;->a()I"
    ],
    "Lu/aly/S;": [
        "Lu/aly/S;->a()Z",
        "Lu/aly/S;->a()V",
        "Lu/aly/S;->a()Lu/aly/S;",
        "Lu/aly/S;->a()Ljava/util/Map;",
        "Lu/aly/S;->a()Lu/aly/S$e;",
        "Lu/aly/S;->toString()Ljava/lang/String;",
        "Lu/aly/S;->a()Ljava/util/List;"
    ],
    "Lu/aly/af$e;": [
        "Lu/aly/af$e;->a()Lu/aly/af$e;"
    ],
    "Lu/aly/H$e;": [
        "Lu/aly/H$e;->a()Lu/aly/H$e;"
    ],
    "Lu/aly/a;": [
        "Lu/aly/a;->a()Lu/aly/R;",
        "Lu/aly/a;->a()Z",
        "Lu/aly/a;->a()Ljava/util/List;",
        "Lu/aly/a;->a()V",
        "Lu/aly/a;->a()Ljava/lang/String;"
    ],
    "Lu/aly/R;": [
        "Lu/aly/R;->a()Lu/aly/R$e;",
        "Lu/aly/R;->a()V",
        "Lu/aly/R;->a()J",
        "Lu/aly/R;->a()Lu/aly/R;",
        "Lu/aly/R;->a()I",
        "Lu/aly/R;->a()Ljava/lang/String;",
        "Lu/aly/R;->toString()Ljava/lang/String;",
        "Lu/aly/R;->a()Z"
    ],
    "Lu/aly/t;": [
        "Lu/aly/t;->a()V"
    ],
    "Lu/aly/m;": [
        "Lu/aly/m;->a()V"
    ],
    "Lu/aly/ba;": [
        "Lu/aly/ba;->a()Lu/aly/aY;"
    ],
    "Lu/aly/aC;": [
        "Lu/aly/aC;->a()Ljava/lang/Object;",
        "Lu/aly/aC;->a()Lu/aly/aT;",
        "Lu/aly/aC;->a()V"
    ],
    "Lu/aly/aG;": [
        "Lu/aly/aG;->a()S"
    ],
    "Lu/aly/bb;": [
        "Lu/aly/bb;->a()V"
    ],
    "Lu/aly/az;": [
        "Lu/aly/az;->a()Lu/aly/az;",
        "Lu/aly/az;->a()V"
    ],
    "Lu/aly/D;": [
        "Lu/aly/D;->a()Lu/aly/O;",
        "Lu/aly/D;->a()Ljava/util/HashMap;"
    ],
    "Lu/aly/Z;": [
        "Lu/aly/Z;->a()Ljava/lang/Object;",
        "Lu/aly/Z;->a()Lu/aly/aT;",
        "Lu/aly/Z;->a()Lu/aly/Z$a;",
        "Lu/aly/Z;->a()Lu/aly/aG;",
        "Lu/aly/Z;->a()Lu/aly/Z;",
        "Lu/aly/Z;->a()V",
        "Lu/aly/Z;->a()Z",
        "Lu/aly/Z;->a()[I"
    ],
    "Lu/aly/V;": [
        "Lu/aly/V;->a()V",
        "Lu/aly/V;->a()Lu/aly/V;",
        "Lu/aly/V;->toString()Ljava/lang/String;",
        "Lu/aly/V;->a()Z",
        "Lu/aly/V;->a()Ljava/lang/String;",
        "Lu/aly/V;->a()Lu/aly/V$e;"
    ],
    "Lu/aly/k;": [
        "Lu/aly/k;->a()Lu/aly/k;",
        "Lu/aly/k;->a()V"
    ],
    "Lu/aly/v;": [
        "Lu/aly/v;->a()Ljava/lang/String;",
        "Lu/aly/v;->a()Lu/aly/F;",
        "Lu/aly/v;->a()Z",
        "Lu/aly/v;->a()V"
    ],
    "Lu/aly/F;": [
        "Lu/aly/F;->a()Lu/aly/ad;",
        "Lu/aly/F;->a()V",
        "Lu/aly/F;->a()Z"
    ],
    "Lcom/umeng/analytics/AnalyticsConfig;": [
        "Lcom/umeng/analytics/AnalyticsConfig;->getReportPolicy()[I",
        "Lcom/umeng/analytics/AnalyticsConfig;->setChannel()V",
        "Lcom/umeng/analytics/AnalyticsConfig;->getLocation()[D",
        "Lcom/umeng/analytics/AnalyticsConfig;->setReportPolicy()V",
        "Lcom/umeng/analytics/AnalyticsConfig;->getAppkey()Ljava/lang/String;",
        "Lcom/umeng/analytics/AnalyticsConfig;->setAppkey()V",
        "Lcom/umeng/analytics/AnalyticsConfig;->getChannel()Ljava/lang/String;"
    ],
    "Lu/aly/z;": [
        "Lu/aly/z;->a()Ljava/util/List;",
        "Lu/aly/z;->a()V"
    ],
    "Lu/aly/ai;": [
        "Lu/aly/ai;->a()Ljava/lang/String;",
        "Lu/aly/ai;->a()[Ljava/lang/String;",
        "Lu/aly/ai;->a()Ljava/util/Locale;",
        "Lu/aly/ai;->a()[I",
        "Lu/aly/ai;->a()I",
        "Lu/aly/ai;->a()Z"
    ],
    "Lu/aly/av;": [
        "Lu/aly/av;->a()V",
        "Lu/aly/av;->a()[B",
        "Lu/aly/av;->a()Ljava/lang/String;",
        "Lu/aly/av;->a()Z"
    ],
    "Lu/aly/S$e;": [
        "Lu/aly/S$e;->a()Lu/aly/S$e;"
    ],
    "Ljava/lang/InstantiationException;": [
        "Ljava/lang/InstantiationException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/IllegalAccessException;": [
        "Ljava/lang/IllegalAccessException;->getMessage()Ljava/lang/String;"
    ],
    "Lu/aly/ae$e;": [
        "Lu/aly/ae$e;->a()Lu/aly/ae$e;"
    ],
    "Lu/aly/K$e;": [
        "Lu/aly/K$e;->a()Lu/aly/K$e;"
    ],
    "Lu/aly/aa;": [
        "Lu/aly/aa;->a()Lu/aly/aa$e;",
        "Lu/aly/aa;->a()Lu/aly/aa;",
        "Lu/aly/aa;->a()V"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->after()Z",
        "Ljava/util/Date;->getTime()J"
    ],
    "Ljavax/microedition/khronos/opengles/GL10;": [
        "Ljavax/microedition/khronos/opengles/GL10;->glGetString()Ljava/lang/String;"
    ],
    "Landroid/content/res/Configuration;": [
        "Landroid/content/res/Configuration;->setToDefaults()V"
    ],
    "Lu/aly/n;": [
        "Lu/aly/n;->a()Z",
        "Lu/aly/n;->a()V"
    ],
    "Lu/aly/B;": [
        "Lu/aly/B;->a()Lu/aly/A;",
        "Lu/aly/B;->a()Ljava/util/HashMap;",
        "Lu/aly/B;->a()Ljava/lang/String;",
        "Lu/aly/B;->a()Lu/aly/O;"
    ],
    "Lu/aly/w;": [
        "Lu/aly/w;->a()J",
        "Lu/aly/w;->a()V",
        "Lu/aly/w;->a()Z",
        "Lu/aly/w;->a()Lu/aly/J;"
    ],
    "Lu/aly/R$e;": [
        "Lu/aly/R$e;->a()Lu/aly/R$e;"
    ],
    "Lu/aly/au;": [
        "Lu/aly/au;->a()[B"
    ],
    "Lu/aly/c;": [
        "Lu/aly/c;->a()V",
        "Lu/aly/c;->a()[B",
        "Lu/aly/c;->a()Lu/aly/c;",
        "Lu/aly/c;->a()Ljava/lang/String;"
    ],
    "Lu/aly/ah;": [
        "Lu/aly/ah;->a()Lu/aly/ah$e;",
        "Lu/aly/ah;->a()Lu/aly/ah;",
        "Lu/aly/ah;->a()Z",
        "Lu/aly/ah;->a()V",
        "Lu/aly/ah;->toString()Ljava/lang/String;"
    ],
    "Lu/aly/aI;": [
        "Lu/aly/aI;->a()[B"
    ],
    "Lu/aly/J$e;": [
        "Lu/aly/J$e;->a()Lu/aly/J$e;"
    ],
    "Lu/aly/ad;": [
        "Lu/aly/ad;->a()Lu/aly/ad$e;",
        "Lu/aly/ad;->a()V",
        "Lu/aly/ad;->a()Lu/aly/ad;",
        "Lu/aly/ad;->a()Z",
        "Lu/aly/ad;->a()I",
        "Lu/aly/ad;->toString()Ljava/lang/String;"
    ],
    "Lu/aly/ad$e;": [
        "Lu/aly/ad$e;->a()Lu/aly/ad$e;"
    ],
    "Lu/aly/aA;": [
        "Lu/aly/aA;->a()[B",
        "Lu/aly/aA;->a()Ljava/lang/String;",
        "Lu/aly/aA;->a()Z",
        "Lu/aly/aA;->a()Ljava/nio/ByteBuffer;",
        "Lu/aly/aA;->a()V",
        "Lu/aly/aA;->a()I"
    ],
    "Lu/aly/ah$e;": [
        "Lu/aly/ah$e;->a()Lu/aly/ah$e;"
    ],
    "Ljava/util/SortedMap;": [
        "Ljava/util/SortedMap;->putAll()V",
        "Ljava/util/SortedMap;->entrySet()Ljava/util/Set;"
    ],
    "Ljava/util/SortedSet;": [
        "Ljava/util/SortedSet;->addAll()Z",
        "Ljava/util/SortedSet;->iterator()Ljava/util/Iterator;"
    ],
    "Lu/aly/aR;": [
        "Lu/aly/aR;->a()S",
        "Lu/aly/aR;->a()V",
        "Lu/aly/aR;->a()I",
        "Lu/aly/aR;->a()B",
        "Lu/aly/aR;->a()Ljava/lang/String;",
        "Lu/aly/aR;->a()J"
    ],
    "Lu/aly/U;": [
        "Lu/aly/U;->a()Lu/aly/U$e;",
        "Lu/aly/U;->a()J",
        "Lu/aly/U;->a()Lu/aly/U;",
        "Lu/aly/U;->a()Ljava/lang/String;",
        "Lu/aly/U;->a()V",
        "Lu/aly/U;->a()Z",
        "Lu/aly/U;->toString()Ljava/lang/String;"
    ],
    "Lu/aly/U$e;": [
        "Lu/aly/U$e;->a()Lu/aly/U$e;"
    ],
    "Lu/aly/Y;": [
        "Lu/aly/Y;->toString()Ljava/lang/String;",
        "Lu/aly/Y;->a()Z",
        "Lu/aly/Y;->a()Lu/aly/Y;",
        "Lu/aly/Y;->a()V",
        "Lu/aly/Y;->a()Lu/aly/Y$e;"
    ],
    "Lu/aly/Y$e;": [
        "Lu/aly/Y$e;->a()Lu/aly/Y$e;"
    ],
    "Lu/aly/d;": [
        "Lu/aly/d;->a()Lu/aly/S;",
        "Lu/aly/d;->a()V"
    ],
    "Lu/aly/f;": [
        "Lu/aly/f;->a()Z",
        "Lu/aly/f;->a()Ljava/lang/String;",
        "Lu/aly/f;->a()[B",
        "Lu/aly/f;->a()Lu/aly/T;",
        "Lu/aly/f;->a()V"
    ],
    "Lu/aly/ao;": [
        "Lu/aly/ao;->a()Lorg/apache/http/params/HttpParams;",
        "Lu/aly/ao;->a()Z",
        "Lu/aly/ao;->a()Ljava/lang/String;",
        "Lu/aly/ao;->a()V",
        "Lu/aly/ao;->a()Lorg/json/JSONObject;"
    ],
    "Ljava/nio/charset/Charset;": [
        "Ljava/nio/charset/Charset;->toString()Ljava/lang/String;",
        "Ljava/nio/charset/Charset;->defaultCharset()Ljava/nio/charset/Charset;"
    ],
    "Lu/aly/ap;": [
        "Lu/aly/ap;->a()Ljava/lang/String;",
        "Lu/aly/ap;->a()Lorg/json/JSONObject;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;"
    ],
    "Lu/aly/M;": [
        "Lu/aly/M;->a()V",
        "Lu/aly/M;->a()Lu/aly/M$e;",
        "Lu/aly/M;->a()Lu/aly/M;",
        "Lu/aly/M;->toString()Ljava/lang/String;",
        "Lu/aly/M;->a()Z"
    ],
    "Lu/aly/M$e;": [
        "Lu/aly/M$e;->a()Lu/aly/M$e;"
    ],
    "Lu/aly/aJ;": [
        "Lu/aly/aJ;->a()Ljava/util/Map;",
        "Lu/aly/aJ;->a()Ljava/util/List;",
        "Lu/aly/aJ;->a()Lu/aly/aG;",
        "Lu/aly/aJ;->a()Z",
        "Lu/aly/aJ;->a()Ljava/util/Set;",
        "Lu/aly/aJ;->a()Ljava/lang/Object;",
        "Lu/aly/aJ;->a()V",
        "Lu/aly/aJ;->a()Lu/aly/aT;"
    ],
    "Lu/aly/aS;": [
        "Lu/aly/aS;->a()Lu/aly/aU;",
        "Lu/aly/aS;->a()B",
        "Lu/aly/aS;->a()V",
        "Lu/aly/aS;->a()[B",
        "Lu/aly/aS;->a()I",
        "Lu/aly/aS;->a()S",
        "Lu/aly/aS;->a()Z",
        "Lu/aly/aS;->a()Ljava/lang/String;",
        "Lu/aly/aS;->a()J"
    ],
    "Lu/aly/ax;": [
        "Lu/aly/ax;->a()V",
        "Lu/aly/ax;->a()S"
    ],
    "Lu/aly/T$e;": [
        "Lu/aly/T$e;->a()Lu/aly/T$e;"
    ],
    "Ljava/util/BitSet;": [
        "Ljava/util/BitSet;->get()Z",
        "Ljava/util/BitSet;->set()V",
        "Ljava/util/BitSet;->length()I"
    ],
    "Lu/aly/be;": [
        "Lu/aly/be;->a()B",
        "Lu/aly/be;->a()Ljava/util/BitSet;",
        "Lu/aly/be;->a()[B",
        "Lu/aly/be;->a()V"
    ],
    "Lu/aly/X$e;": [
        "Lu/aly/X$e;->a()Lu/aly/X$e;"
    ],
    "Ljava/text/DecimalFormat;": [
        "Ljava/text/DecimalFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/text/DateFormat;": [
        "Ljava/text/DateFormat;->format()Ljava/lang/String;"
    ],
    "Lcom/umeng/analytics/Gender;": [
        "Lcom/umeng/analytics/Gender;->a()[I",
        "Lcom/umeng/analytics/Gender;->getGender()Lcom/umeng/analytics/Gender;",
        "Lcom/umeng/analytics/Gender;->ordinal()I",
        "Lcom/umeng/analytics/Gender;->values()[Lcom/umeng/analytics/Gender;",
        "Lcom/umeng/analytics/Gender;->transGender()Lu/aly/P;"
    ],
    "Lu/aly/q;": [
        "Lu/aly/q;->a()Lu/aly/I;",
        "Lu/aly/q;->a()Lu/aly/T;",
        "Lu/aly/q;->a()V",
        "Lu/aly/q;->a()Lu/aly/X;",
        "Lu/aly/q;->a()Lu/aly/S;",
        "Lu/aly/q;->a()Ljava/lang/String;",
        "Lu/aly/q;->a()I",
        "Lu/aly/q;->a()Lu/aly/J;",
        "Lu/aly/q;->a()Lu/aly/K;"
    ],
    "Lu/aly/p;": [
        "Lu/aly/p;->a()V"
    ],
    "Lu/aly/h;": [
        "Lu/aly/h;->a()Lu/aly/f;",
        "Lu/aly/h;->a()Lu/aly/d;"
    ],
    "Lu/aly/i;": [
        "Lu/aly/i;->a()Ljava/io/File;",
        "Lu/aly/i;->a()Ljava/lang/String;"
    ],
    "Lu/aly/L;": [
        "Lu/aly/L;->a()Z",
        "Lu/aly/L;->toString()Ljava/lang/String;",
        "Lu/aly/L;->a()Lu/aly/L;",
        "Lu/aly/L;->a()V",
        "Lu/aly/L;->a()Lu/aly/L$e;"
    ],
    "Lu/aly/L$e;": [
        "Lu/aly/L$e;->a()Lu/aly/L$e;"
    ],
    "Lu/aly/ab;": [
        "Lu/aly/ab;->a()Lu/aly/T;",
        "Lu/aly/ab;->a()Lu/aly/ab$e;",
        "Lu/aly/ab;->a()V",
        "Lu/aly/ab;->a()Ljava/lang/String;",
        "Lu/aly/ab;->a()Lu/aly/ab;",
        "Lu/aly/ab;->a()Z"
    ],
    "Lu/aly/ab$e;": [
        "Lu/aly/ab$e;->a()Lu/aly/ab$e;"
    ],
    "Lu/aly/W;": [
        "Lu/aly/W;->a()V",
        "Lu/aly/W;->a()Lu/aly/W;",
        "Lu/aly/W;->a()Lu/aly/W$e;"
    ],
    "Lu/aly/W$e;": [
        "Lu/aly/W$e;->a()Lu/aly/W$e;"
    ],
    "Lu/aly/ay;": [
        "Lu/aly/ay;->getMessage()Ljava/lang/String;"
    ],
    "Lu/aly/r;": [
        "Lu/aly/r;->a()Z",
        "Lu/aly/r;->a()Ljava/lang/String;",
        "Lu/aly/r;->a()[B",
        "Lu/aly/r;->a()I",
        "Lu/aly/r;->a()V"
    ],
    "Ljava/util/zip/Deflater;": [
        "Ljava/util/zip/Deflater;->deflate()I",
        "Ljava/util/zip/Deflater;->setInput()V",
        "Ljava/util/zip/Deflater;->finish()V",
        "Ljava/util/zip/Deflater;->end()V",
        "Ljava/util/zip/Deflater;->finished()Z"
    ],
    "Lu/aly/C;": [
        "Lu/aly/C;->a()Ljava/lang/String;",
        "Lu/aly/C;->a()Lu/aly/M;",
        "Lu/aly/C;->a()Lu/aly/C;"
    ],
    "Ljava/io/PrintWriter;": [
        "Ljava/io/PrintWriter;->close()V"
    ],
    "Lcom/umeng/analytics/f;": [
        "Lcom/umeng/analytics/f;->a()V",
        "Lcom/umeng/analytics/f;->a()Lcom/umeng/analytics/f;",
        "Lcom/umeng/analytics/f;->a()[B",
        "Lcom/umeng/analytics/f;->a()Landroid/content/SharedPreferences;",
        "Lcom/umeng/analytics/f;->a()Z",
        "Lcom/umeng/analytics/f;->a()[I",
        "Lcom/umeng/analytics/f;->a()Ljava/lang/String;"
    ],
    "Lu/aly/j;": [
        "Lu/aly/j;->a()Z",
        "Lu/aly/j;->a()V",
        "Lu/aly/j;->a()[B",
        "Lu/aly/j;->a()Lu/aly/af;"
    ],
    "Lcom/umeng/analytics/ReportPolicy$e;": [
        "Lcom/umeng/analytics/ReportPolicy$e;->a()Z"
    ],
    "Lu/aly/O;": [
        "Lu/aly/O;->a()Z",
        "Lu/aly/O;->a()Lu/aly/O$e;",
        "Lu/aly/O;->toString()Ljava/lang/String;",
        "Lu/aly/O;->a()V",
        "Lu/aly/O;->a()Lu/aly/O;"
    ],
    "Lu/aly/O$e;": [
        "Lu/aly/O$e;->a()Lu/aly/O$e;"
    ],
    "Lu/aly/aa$e;": [
        "Lu/aly/aa$e;->a()Lu/aly/aa$e;"
    ],
    "Lu/aly/V$e;": [
        "Lu/aly/V$e;->a()Lu/aly/V$e;"
    ],
    "Ljava/io/ObjectInputStream;": [
        "Ljava/io/ObjectInputStream;->readObject()Ljava/lang/Object;"
    ],
    "Ljava/io/ObjectOutputStream;": [
        "Ljava/io/ObjectOutputStream;->close()V",
        "Ljava/io/ObjectOutputStream;->writeObject()V"
    ],
    "Lu/aly/Z$a;": [
        "Lu/aly/Z$a;->a()Lu/aly/Z$a;",
        "Lu/aly/Z$a;->values()[Lu/aly/Z$a;",
        "Lu/aly/Z$a;->ordinal()I"
    ],
    "Lu/aly/al;": [
        "Lu/aly/al;->a()Lu/aly/aq;"
    ],
    "Lu/aly/al$b;": [
        "Lu/aly/al$b;->execute()Landroid/os/AsyncTask;"
    ],
    "Lu/aly/al$a;": [
        "Lu/aly/al$a;->a()V"
    ],
    "Lcom/umeng/analytics/d;": [
        "Lcom/umeng/analytics/d;->a()V"
    ],
    "Lcom/umeng/analytics/onlineconfig/a;": [
        "Lcom/umeng/analytics/onlineconfig/a;->a()V",
        "Lcom/umeng/analytics/onlineconfig/a;->a()Lorg/json/JSONObject;",
        "Lcom/umeng/analytics/onlineconfig/a;->a()Ljava/lang/String;"
    ],
    "Lu/aly/o;": [
        "Lu/aly/o;->a()V"
    ],
    "Lu/upd/c;": [
        "Lu/upd/c;->a()I",
        "Lu/upd/c;->a()Lu/upd/c;"
    ],
    "Lu/upd/b;": [
        "Lu/upd/b;->a()V"
    ],
    "Lu/upd/g;": [
        "Lu/upd/g;->a()Lorg/apache/http/params/HttpParams;",
        "Lu/upd/g;->a()Z",
        "Lu/upd/g;->a()Lorg/json/JSONObject;",
        "Lu/upd/g;->a()V",
        "Lu/upd/g;->a()Ljava/lang/String;"
    ],
    "Lu/upd/m;": [
        "Lu/upd/m;->a()[B"
    ],
    "Lu/upd/n;": [
        "Lu/upd/n;->a()V",
        "Lu/upd/n;->a()Z",
        "Lu/upd/n;->a()Ljava/lang/String;"
    ],
    "Lu/upd/h;": [
        "Lu/upd/h;->a()Ljava/lang/String;",
        "Lu/upd/h;->a()Lorg/json/JSONObject;"
    ],
    "Lu/upd/d;": [
        "Lu/upd/d;->a()Lu/upd/i;"
    ],
    "Lu/upd/d$b;": [
        "Lu/upd/d$b;->execute()Landroid/os/AsyncTask;"
    ],
    "Lu/upd/d$a;": [
        "Lu/upd/d$a;->a()V"
    ],
    "Lu/upd/a;": [
        "Lu/upd/a;->a()[Ljava/lang/String;",
        "Lu/upd/a;->a()Z",
        "Lu/upd/a;->a()[I",
        "Lu/upd/a;->a()I",
        "Lu/upd/a;->a()Ljava/util/Locale;",
        "Lu/upd/a;->a()Ljava/lang/String;"
    ],
    "Lcom/umeng/analytics/c;": [
        "Lcom/umeng/analytics/c;->a()V"
    ],
    "Lcom/umeng/analytics/social/UMSocialService;": [
        "Lcom/umeng/analytics/social/UMSocialService;->a()V",
        "Lcom/umeng/analytics/social/UMSocialService;->share()V"
    ],
    "Lcom/umeng/analytics/b;": [
        "Lcom/umeng/analytics/b;->a()V"
    ],
    "Lcom/umeng/analytics/e;": [
        "Lcom/umeng/analytics/e;->a()V"
    ],
    "Lcom/umeng/analytics/game/c;": [
        "Lcom/umeng/analytics/game/c;->a()V"
    ],
    "Lcom/umeng/analytics/game/UMGameAgent;": [
        "Lcom/umeng/analytics/game/UMGameAgent;->onEvent()V",
        "Lcom/umeng/analytics/game/UMGameAgent;->a()Z"
    ],
    "Lcom/umeng/analytics/game/b$a;": [
        "Lcom/umeng/analytics/game/b$a;->a()Z",
        "Lcom/umeng/analytics/game/b$a;->a()V"
    ],
    "Lcom/umeng/analytics/MobclickAgent;": [
        "Lcom/umeng/analytics/MobclickAgent;->getAgent()Lcom/umeng/analytics/c;",
        "Lcom/umeng/analytics/MobclickAgent;->onPause()V",
        "Lcom/umeng/analytics/MobclickAgent;->onResume()V",
        "Lcom/umeng/analytics/MobclickAgent;->updateOnlineConfig()V"
    ],
    "Lcom/umeng/analytics/game/b;": [
        "Lcom/umeng/analytics/game/b;->a()V"
    ],
    "Lcom/umeng/analytics/social/b;": [
        "Lcom/umeng/analytics/social/b;->a()V"
    ],
    "Lcom/umeng/analytics/social/c;": [
        "Lcom/umeng/analytics/social/c;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/entity/UrlEncodedFormEntity;": [
        "Lorg/apache/http/client/entity/UrlEncodedFormEntity;->writeTo()V"
    ],
    "Lcom/umeng/analytics/social/UMPlatformData;": [
        "Lcom/umeng/analytics/social/UMPlatformData;->getGender()Lcom/umeng/analytics/social/UMPlatformData$GENDER;",
        "Lcom/umeng/analytics/social/UMPlatformData;->isValid()Z",
        "Lcom/umeng/analytics/social/UMPlatformData;->getName()Ljava/lang/String;",
        "Lcom/umeng/analytics/social/UMPlatformData;->getWeiboId()Ljava/lang/String;",
        "Lcom/umeng/analytics/social/UMPlatformData;->getMeida()Lcom/umeng/analytics/social/UMPlatformData$UMedia;",
        "Lcom/umeng/analytics/social/UMPlatformData;->getUsid()Ljava/lang/String;"
    ],
    "Lcom/umeng/analytics/social/UMPlatformData$UMedia;": [
        "Lcom/umeng/analytics/social/UMPlatformData$UMedia;->toString()Ljava/lang/String;"
    ],
    "Lcom/umeng/analytics/social/f;": [
        "Lcom/umeng/analytics/social/f;->a()Ljava/lang/String;",
        "Lcom/umeng/analytics/social/f;->a()[Ljava/lang/String;",
        "Lcom/umeng/analytics/social/f;->a()Z",
        "Lcom/umeng/analytics/social/f;->a()Ljava/util/List;",
        "Lcom/umeng/analytics/social/f;->a()Ljava/util/Map;"
    ],
    "Lcom/umeng/analytics/social/UMSocialService$a;": [
        "Lcom/umeng/analytics/social/UMSocialService$a;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/umeng/analytics/onlineconfig/UmengOnlineConfigureListener;": [
        "Lcom/umeng/analytics/onlineconfig/UmengOnlineConfigureListener;->onDataReceived()V"
    ],
    "Lcom/umeng/analytics/onlineconfig/b;": [
        "Lcom/umeng/analytics/onlineconfig/b;->a()V"
    ],
    "Lcom/umeng/update/d;": [
        "Lcom/umeng/update/d;->a()Lorg/json/JSONObject;",
        "Lcom/umeng/update/d;->a()V"
    ],
    "Lcom/umeng/update/UpdateConfig;": [
        "Lcom/umeng/update/UpdateConfig;->isDeltaUpdate()Z",
        "Lcom/umeng/update/UpdateConfig;->isUpdateCheck()Z",
        "Lcom/umeng/update/UpdateConfig;->getAppkey()Ljava/lang/String;",
        "Lcom/umeng/update/UpdateConfig;->setUpdateForce()V",
        "Lcom/umeng/update/UpdateConfig;->setChannel()V",
        "Lcom/umeng/update/UpdateConfig;->isUpdateOnlyWifi()Z",
        "Lcom/umeng/update/UpdateConfig;->setSilentDownload()V",
        "Lcom/umeng/update/UpdateConfig;->setStyle()V",
        "Lcom/umeng/update/UpdateConfig;->getChannel()Ljava/lang/String;",
        "Lcom/umeng/update/UpdateConfig;->saveIgnoreMd5()V",
        "Lcom/umeng/update/UpdateConfig;->getIgnoreMd5()Ljava/lang/String;",
        "Lcom/umeng/update/UpdateConfig;->setAppkey()V",
        "Lcom/umeng/update/UpdateConfig;->setUpdateOnlyWifi()V",
        "Lcom/umeng/update/UpdateConfig;->setRichNotification()V",
        "Lcom/umeng/update/UpdateConfig;->isUpdateForce()Z",
        "Lcom/umeng/update/UpdateConfig;->setUpdateAutoPopup()V",
        "Lcom/umeng/update/UpdateConfig;->isSilentDownload()Z",
        "Lcom/umeng/update/UpdateConfig;->isRichNotification()Z",
        "Lcom/umeng/update/UpdateConfig;->setUpdateCheck()V",
        "Lcom/umeng/update/UpdateConfig;->setDeltaUpdate()V"
    ],
    "Lcom/umeng/update/util/DeltaUpdate;": [
        "Lcom/umeng/update/util/DeltaUpdate;->a()Ljava/lang/String;",
        "Lcom/umeng/update/util/DeltaUpdate;->bspatch()I",
        "Lcom/umeng/update/util/DeltaUpdate;->a()Z"
    ],
    "Lcom/umeng/update/UpdateDialogActivity;": [
        "Lcom/umeng/update/UpdateDialogActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/umeng/update/UpdateDialogActivity;->findViewById()Landroid/view/View;",
        "Lcom/umeng/update/UpdateDialogActivity;->setContentView()V",
        "Lcom/umeng/update/UpdateDialogActivity;->requestWindowFeature()Z"
    ],
    "Landroid/widget/CheckBox;": [
        "Landroid/widget/CheckBox;->setOnCheckedChangeListener()V"
    ],
    "Lcom/umeng/update/UpdateResponse;": [
        "Lcom/umeng/update/UpdateResponse;->a()Ljava/lang/String;",
        "Lcom/umeng/update/UpdateResponse;->a()V"
    ],
    "Lcom/umeng/update/UmengUpdateAgent;": [
        "Lcom/umeng/update/UmengUpdateAgent;->isIgnore()Z",
        "Lcom/umeng/update/UmengUpdateAgent;->setUpdateUIStyle()V",
        "Lcom/umeng/update/UmengUpdateAgent;->a()Z",
        "Lcom/umeng/update/UmengUpdateAgent;->downloadedFile()Ljava/io/File;",
        "Lcom/umeng/update/UmengUpdateAgent;->setUpdateListener()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setDownloadListener()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setRichNotification()V",
        "Lcom/umeng/update/UmengUpdateAgent;->update()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setUpdateOnlyWifi()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setDeltaUpdate()V",
        "Lcom/umeng/update/UmengUpdateAgent;->startInstall()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setUpdateAutoPopup()V",
        "Lcom/umeng/update/UmengUpdateAgent;->startDownload()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setDialogListener()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setChannel()V",
        "Lcom/umeng/update/UmengUpdateAgent;->a()V",
        "Lcom/umeng/update/UmengUpdateAgent;->setAppkey()V",
        "Lcom/umeng/update/UmengUpdateAgent;->ignoreUpdate()V"
    ],
    "Lcom/umeng/update/UmengDialogButtonListener;": [
        "Lcom/umeng/update/UmengDialogButtonListener;->onClick()V"
    ],
    "Lcom/umeng/update/c;": [
        "Lcom/umeng/update/c;->a()Z",
        "Lcom/umeng/update/c;->a()V",
        "Lcom/umeng/update/c;->a()Lcom/umeng/update/c$a;"
    ],
    "Lcom/umeng/update/c$a;": [
        "Lcom/umeng/update/c$a;->a()Lcom/umeng/update/c$a;",
        "Lcom/umeng/update/c$a;->a()Lcom/umeng/update/util/b;",
        "Lcom/umeng/update/c$a;->a()Landroid/app/Notification;"
    ],
    "Lcom/umeng/update/net/j;": [
        "Lcom/umeng/update/net/j;->a()J",
        "Lcom/umeng/update/net/j;->a()Ljava/lang/String;",
        "Lcom/umeng/update/net/j;->a()Z",
        "Lcom/umeng/update/net/j;->a()Landroid/graphics/Bitmap;",
        "Lcom/umeng/update/net/j;->a()Landroid/graphics/drawable/Drawable;",
        "Lcom/umeng/update/net/j;->a()V",
        "Lcom/umeng/update/net/j;->a()Ljava/io/File;"
    ],
    "Lcom/umeng/update/b;": [
        "Lcom/umeng/update/b;->a()Lu/upd/i;"
    ],
    "Lcom/umeng/update/net/a;": [
        "Lcom/umeng/update/net/a;->a()V"
    ],
    "Lcom/umeng/update/UmengDownloadListener;": [
        "Lcom/umeng/update/UmengDownloadListener;->OnDownloadStart()V",
        "Lcom/umeng/update/UmengDownloadListener;->OnDownloadEnd()V",
        "Lcom/umeng/update/UmengDownloadListener;->OnDownloadUpdate()V"
    ],
    "Lcom/umeng/update/util/b;": [
        "Lcom/umeng/update/util/b;->a()Lcom/umeng/update/util/b;"
    ],
    "Lcom/umeng/update/util/c;": [
        "Lcom/umeng/update/util/c;->a()V"
    ],
    "Landroid/app/Notification$Builder;": [
        "Landroid/app/Notification$Builder;->setSmallIcon()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setTicker()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setAutoCancel()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setOngoing()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setWhen()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContent()Landroid/app/Notification$Builder;"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;"
    ],
    "Ljava/net/URLConnection;": [
        "Ljava/net/URLConnection;->getContent()Ljava/lang/Object;"
    ],
    "Lcom/umeng/update/net/j$a;": [
        "Lcom/umeng/update/net/j$a;->a()V"
    ],
    "Lcom/umeng/update/net/j$c;": [
        "Lcom/umeng/update/net/j$c;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->createFromPath()Landroid/graphics/drawable/Drawable;"
    ],
    "Ljava/lang/OutOfMemoryError;": [
        "Ljava/lang/OutOfMemoryError;->toString()Ljava/lang/String;"
    ],
    "Lcom/umeng/update/net/g;": [
        "Lcom/umeng/update/net/g;->a()Lu/upd/i;"
    ],
    "Lcom/umeng/update/net/g$b;": [
        "Lcom/umeng/update/net/g$b;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/umeng/update/net/g$a;": [
        "Lcom/umeng/update/net/g$a;->a()V"
    ],
    "Lcom/umeng/update/net/b$a;": [
        "Lcom/umeng/update/net/b$a;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcom/umeng/update/net/b$a;->close()V",
        "Lcom/umeng/update/net/b$a;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Lu/upd/l;": [
        "Lu/upd/l;->a()I"
    ],
    "Lcom/umeng/update/net/c$a;": [
        "Lcom/umeng/update/net/c$a;->a()Lcom/umeng/update/net/c$a;",
        "Lcom/umeng/update/net/c$a;->a()V",
        "Lcom/umeng/update/net/c$a;->a()Lcom/umeng/update/util/b;",
        "Lcom/umeng/update/net/c$a;->a()Landroid/app/Notification;"
    ],
    "Lu/upd/k;": [
        "Lu/upd/k;->a()I"
    ],
    "Lu/upd/j;": [
        "Lu/upd/j;->a()I"
    ],
    "Lcom/umeng/update/net/f;": [
        "Lcom/umeng/update/net/f;->a()Landroid/app/PendingIntent;",
        "Lcom/umeng/update/net/f;->a()Ljava/lang/String;"
    ],
    "Lcom/umeng/update/net/c;": [
        "Lcom/umeng/update/net/c;->a()I",
        "Lcom/umeng/update/net/c;->a()Z",
        "Lcom/umeng/update/net/c;->a()V"
    ],
    "Lcom/umeng/update/net/DownloadingService;": [
        "Lcom/umeng/update/net/DownloadingService;->a()V",
        "Lcom/umeng/update/net/DownloadingService;->getPackageName()Ljava/lang/String;",
        "Lcom/umeng/update/net/DownloadingService;->getApplicationContext()Landroid/content/Context;",
        "Lcom/umeng/update/net/DownloadingService;->getSystemService()Ljava/lang/Object;"
    ],
    "Lcom/umeng/update/net/DownloadingService$b;": [
        "Lcom/umeng/update/net/DownloadingService$b;->a()V",
        "Lcom/umeng/update/net/DownloadingService$b;->start()V"
    ],
    "Landroid/os/Messenger;": [
        "Landroid/os/Messenger;->getBinder()Landroid/os/IBinder;",
        "Landroid/os/Messenger;->send()V"
    ],
    "Lcom/umeng/update/net/c$b;": [
        "Lcom/umeng/update/net/c$b;->a()V"
    ],
    "Lcom/umeng/update/net/e;": [
        "Lcom/umeng/update/net/e;->a()V",
        "Lcom/umeng/update/net/e;->a()Ljava/util/List;",
        "Lcom/umeng/update/net/e;->a()Z"
    ],
    "Landroid/os/Debug;": [
        "Landroid/os/Debug;->waitForDebugger()V"
    ],
    "Lcom/umeng/update/net/b;": [
        "Lcom/umeng/update/net/b;->a()V",
        "Lcom/umeng/update/net/b;->finalize()V",
        "Lcom/umeng/update/net/b;->a()Lcom/umeng/update/net/b;"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->elapsedRealtime()J"
    ],
    "Lcom/albertobeiz/andlib/ALScene;": [
        "Lcom/albertobeiz/andlib/ALScene;->onResume()V",
        "Lcom/albertobeiz/andlib/ALScene;->setBackground()V",
        "Lcom/albertobeiz/andlib/ALScene;->load()V",
        "Lcom/albertobeiz/andlib/ALScene;->onTouchUp()V",
        "Lcom/albertobeiz/andlib/ALScene;->attachAtlas()V",
        "Lcom/albertobeiz/andlib/ALScene;->setOnSceneTouchListener()V",
        "Lcom/albertobeiz/andlib/ALScene;->attachChild()V",
        "Lcom/albertobeiz/andlib/ALScene;->onPause()V",
        "Lcom/albertobeiz/andlib/ALScene;->unload()V",
        "Lcom/albertobeiz/andlib/ALScene;->attachSprite()Lorg/andengine/entity/sprite/Sprite;",
        "Lcom/albertobeiz/andlib/ALScene;->onBackPressed()V"
    ],
    "Lcom/albertobeiz/andlib/ALGame;": [
        "Lcom/albertobeiz/andlib/ALGame;->getSoundManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lcom/albertobeiz/andlib/ALGame;->getFontManager()Lorg/andengine/opengl/font/FontManager;",
        "Lcom/albertobeiz/andlib/ALGame;->runOnUiThread()V",
        "Lcom/albertobeiz/andlib/ALGame;->onCreateEngineOptions()Lorg/andengine/engine/options/EngineOptions;",
        "Lcom/albertobeiz/andlib/ALGame;->getBaseContext()Landroid/content/Context;",
        "Lcom/albertobeiz/andlib/ALGame;->getMenuScene()Lcom/albertobeiz/andlib/ALScene;",
        "Lcom/albertobeiz/andlib/ALGame;->getGameOrientation()Lorg/andengine/engine/options/ScreenOrientation;",
        "Lcom/albertobeiz/andlib/ALGame;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lcom/albertobeiz/andlib/ALGame;->getPreferences()Landroid/content/SharedPreferences;",
        "Lcom/albertobeiz/andlib/ALGame;->getTextureManager()Lorg/andengine/opengl/texture/TextureManager;",
        "Lcom/albertobeiz/andlib/ALGame;->setScene()V",
        "Lcom/albertobeiz/andlib/ALGame;->finish()V"
    ],
    "Lcom/albertobeiz/andlib/ALMenuButton;": [
        "Lcom/albertobeiz/andlib/ALMenuButton;->getHeight()F",
        "Lcom/albertobeiz/andlib/ALMenuButton;->onTouchUp()V",
        "Lcom/albertobeiz/andlib/ALMenuButton;->setPosition()V",
        "Lcom/albertobeiz/andlib/ALMenuButton;->getX()F",
        "Lcom/albertobeiz/andlib/ALMenuButton;->getY()F",
        "Lcom/albertobeiz/andlib/ALMenuButton;->getWidth()F"
    ],
    "Lcom/albertobeiz/andlib/SoundManager;": [
        "Lcom/albertobeiz/andlib/SoundManager;->volumeOff()V",
        "Lcom/albertobeiz/andlib/SoundManager;->volumeOn()V",
        "Lcom/albertobeiz/andlib/SoundManager;->setVolume()V"
    ],
    "Lcom/albertobeiz/andlib/ALMainMenuScene;": [
        "Lcom/albertobeiz/andlib/ALMainMenuScene;->toggleVolume()V",
        "Lcom/albertobeiz/andlib/ALMainMenuScene;->attachSprite()Lorg/andengine/entity/sprite/Sprite;",
        "Lcom/albertobeiz/andlib/ALMainMenuScene;->setBackground()V",
        "Lcom/albertobeiz/andlib/ALMainMenuScene;->load()V",
        "Lcom/albertobeiz/andlib/ALMainMenuScene;->attachChild()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;->load()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;->attachChild()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;->endGame()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;->unload()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;->onTouchDown()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseGameScene;->setBackground()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;": [
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->getSurvivalPerson()Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->getGoldZombie()Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->getZombie()Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->getPerson()Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->createTextures()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->load()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->getRedZombie()Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacterFactory;->unload()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/gamescenes/TwoPlayers;": [
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/TwoPlayers;->attachChild()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/TwoPlayers;->attachSprite()Lorg/andengine/entity/sprite/Sprite;",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/TwoPlayers;->resetZombie()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/TwoPlayers;->endGame()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/TwoPlayers;->registerUpdateHandler()V"
    ],
    "Ljava/text/NumberFormat;": [
        "Ljava/text/NumberFormat;->format()Ljava/lang/String;"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;": [
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->reset()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->setPosition()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->getWidth()F",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->getX()F",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->registerEntityModifier()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->contains()Z",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->refresh()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->getY()F",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->clearEntityModifiers()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->smashedAndDead()Z",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->animate()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->setFlippedHorizontal()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;->getHeight()F"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->registerUpdateHandler()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->removeZombie()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->setOnSceneTouchListener()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->attachChild()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->getRandomCharacter()Lcom/albertobeiz/littlezombiesmasher/characters/GameCharacter;",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->loadFinger()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/ClassicGameScene;->addLife()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/gamescenes/formations/Formation;": [
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/formations/Formation;->reloadEntityModifiers()[Lorg/andengine/entity/modifier/IEntityModifier;",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/formations/Formation;->hasCitizens()Z",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/formations/Formation;->getNumCharacters()I"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseOnePlayerGameScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseOnePlayerGameScene;->endGame()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseOnePlayerGameScene;->attachChild()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/BaseOnePlayerGameScene;->load()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/gamescenes/SurvivalGameScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/SurvivalGameScene;->resetZombie()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/SurvivalGameScene;->registerUpdateHandler()V",
        "Lcom/albertobeiz/littlezombiesmasher/gamescenes/SurvivalGameScene;->stop()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/scenes/ScoreScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/scenes/ScoreScene;->attachChild()V",
        "Lcom/albertobeiz/littlezombiesmasher/scenes/ScoreScene;->setBackground()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/scenes/ModeSelectScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/scenes/ModeSelectScene;->setBackground()V"
    ],
    "Lcom/sby/zombie/LZS;": [
        "Lcom/sby/zombie/LZS;->runOnUiThread()V",
        "Lcom/sby/zombie/LZS;->getTextureManager()Lorg/andengine/opengl/texture/TextureManager;",
        "Lcom/sby/zombie/LZS;->getSoundManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lcom/sby/zombie/LZS;->getMusicManager()Lorg/andengine/audio/music/MusicManager;"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/scenes/MenuScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/scenes/MenuScene;->registerUpdateHandler()V",
        "Lcom/albertobeiz/littlezombiesmasher/scenes/MenuScene;->addZombies()V",
        "Lcom/albertobeiz/littlezombiesmasher/scenes/MenuScene;->attachAtlas()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/scenes/ShopScene;": [
        "Lcom/albertobeiz/littlezombiesmasher/scenes/ShopScene;->attachSprite128()Lorg/andengine/entity/sprite/Sprite;",
        "Lcom/albertobeiz/littlezombiesmasher/scenes/ShopScene;->attachChild()V",
        "Lcom/albertobeiz/littlezombiesmasher/scenes/ShopScene;->setBackground()V"
    ],
    "Lcom/albertobeiz/littlezombiesmasher/characters/PowerUp;": [
        "Lcom/albertobeiz/littlezombiesmasher/characters/PowerUp;->registerEntityModifier()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/PowerUp;->clearEntityModifiers()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/PowerUp;->contains()Z",
        "Lcom/albertobeiz/littlezombiesmasher/characters/PowerUp;->activate()V",
        "Lcom/albertobeiz/littlezombiesmasher/characters/PowerUp;->clear()V"
    ],
    "Lcom/sby/util/DirProvider;": [
        "Lcom/sby/util/DirProvider;->existSDCard()Z",
        "Lcom/sby/util/DirProvider;->ensureDirExist()V"
    ],
    "Lcom/sby/zombie/JPushReceiver;": [
        "Lcom/sby/zombie/JPushReceiver;->processCustomMessage()V",
        "Lcom/sby/zombie/JPushReceiver;->printBundle()Ljava/lang/String;"
    ],
    "Lcom/sby/zombie/ZombieActivity;": [
        "Lcom/sby/zombie/ZombieActivity;->setContentView()V"
    ],
    "Landroid/util/TypedValue;": [
        "Landroid/util/TypedValue;->applyDimension()F"
    ],
    "Lcom/sby/zombie/BaseAction;": [
        "Lcom/sby/zombie/BaseAction;->getBitmap()V",
        "Lcom/sby/zombie/BaseAction;->getBitmap()Ljava/io/File;"
    ]
}