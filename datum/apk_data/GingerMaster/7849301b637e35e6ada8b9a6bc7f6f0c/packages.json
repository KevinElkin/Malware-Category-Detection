{
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->charAt()C",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->setLength()V",
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->substring()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->deleteCharAt()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->insert()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->execute()Ljava/lang/Object;",
        "Lorg/apache/http/client/HttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/client/HttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->containsHeader()Z",
        "Lorg/apache/http/HttpResponse;->headerIterator()Lorg/apache/http/HeaderIterator;",
        "Lorg/apache/http/HttpResponse;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/HttpResponse;->setStatusCode()V",
        "Lorg/apache/http/HttpResponse;->getHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;",
        "Lorg/apache/http/HttpResponse;->getFirstHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpResponse;->setHeader()V",
        "Lorg/apache/http/HttpResponse;->setParams()V",
        "Lorg/apache/http/HttpResponse;->getAllHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/HttpResponse;->setEntity()V",
        "Lorg/apache/http/HttpResponse;->addHeader()V"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->isRepeatable()Z",
        "Lorg/apache/http/HttpEntity;->getContentEncoding()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpEntity;->writeTo()V",
        "Lorg/apache/http/HttpEntity;->getContentLength()J",
        "Lorg/apache/http/HttpEntity;->getContentType()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;",
        "Lorg/apache/http/HttpEntity;->isStreaming()Z",
        "Lorg/apache/http/HttpEntity;->consumeContent()V",
        "Lorg/apache/http/HttpEntity;->isChunked()Z"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->write()V",
        "Ljava/io/ByteArrayOutputStream;->toString()Ljava/lang/String;",
        "Ljava/io/ByteArrayOutputStream;->close()V",
        "Ljava/io/ByteArrayOutputStream;->flush()V",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->compareToIgnoreCase()I",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->regionMatches()Z",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->subSequence()Ljava/lang/CharSequence;",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->codePointAt()I",
        "Ljava/lang/String;->replaceFirst()Ljava/lang/String;",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->concat()Ljava/lang/String;",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->compareTo()I",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->getChars()V",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->indexOf()I"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->clear()V",
        "Ljava/util/Map;->putAll()V",
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->containsKey()Z",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->containsValue()Z",
        "Ljava/util/Map;->size()I"
    ],
    "Ljava/net/URLDecoder;": [
        "Ljava/net/URLDecoder;->decode()Ljava/lang/String;"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Landroid/preference/PreferenceManager;": [
        "Landroid/preference/PreferenceManager;->getDefaultSharedPreferences()Landroid/content/SharedPreferences;"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->contains()Z"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->clear()V",
        "Ljava/util/Set;->isEmpty()Z",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->toArray()[Ljava/lang/Object;",
        "Ljava/util/Set;->contains()Z",
        "Ljava/util/Set;->remove()Z",
        "Ljava/util/Set;->addAll()Z",
        "Ljava/util/Set;->size()I"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->remove()V",
        "Ljava/util/Iterator;->hasNext()Z"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->clear()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->remove()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z"
    ],
    "Lcom/keyes/youtube/PlaylistId;": [
        "Lcom/keyes/youtube/PlaylistId;->getId()Ljava/lang/String;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->has()Z",
        "Lorg/json/JSONObject;->optString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getBoolean()Z",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getLong()J",
        "Lorg/json/JSONObject;->getInt()I",
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->get()Ljava/lang/Object;",
        "Lorg/json/JSONArray;->getString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->getInt()I",
        "Lorg/json/JSONArray;->toString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->put()Lorg/json/JSONArray;"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->getQueryParameter()Ljava/lang/String;",
        "Landroid/net/Uri;->getScheme()Ljava/lang/String;",
        "Landroid/net/Uri;->getEncodedSchemeSpecificPart()Ljava/lang/String;",
        "Landroid/net/Uri;->fromFile()Landroid/net/Uri;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;",
        "Landroid/net/Uri;->decode()Ljava/lang/String;",
        "Landroid/net/Uri;->encode()Ljava/lang/String;"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/Class;->getDeclaredConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getGenericSuperclass()Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->isAssignableFrom()Z",
        "Ljava/lang/Class;->desiredAssertionStatus()Z",
        "Ljava/lang/Class;->getSimpleName()Ljava/lang/String;",
        "Ljava/lang/Class;->getModifiers()I",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->isSynthetic()Z",
        "Ljava/lang/Class;->isAnonymousClass()Z",
        "Ljava/lang/Class;->getSuperclass()Ljava/lang/Class;",
        "Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/Class;->toString()Ljava/lang/String;",
        "Ljava/lang/Class;->isMemberClass()Z",
        "Ljava/lang/Class;->getGenericInterfaces()[Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->getMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->isInstance()Z",
        "Ljava/lang/Class;->getDeclaredField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getResource()Ljava/net/URL;",
        "Ljava/lang/Class;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Ljava/lang/Class;->getEnclosingClass()Ljava/lang/Class;",
        "Ljava/lang/Class;->getConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->getTypeParameters()[Ljava/lang/reflect/TypeVariable;",
        "Ljava/lang/Class;->cast()Ljava/lang/Object;",
        "Ljava/lang/Class;->getInterfaces()[Ljava/lang/Class;",
        "Ljava/lang/Class;->getDeclaredMethods()[Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->isLocalClass()Z",
        "Ljava/lang/Class;->isInterface()Z",
        "Ljava/lang/Class;->getDeclaredFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->isPrimitive()Z",
        "Ljava/lang/Class;->getMethods()[Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->isArray()Z"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->isLoggable()Z",
        "Landroid/util/Log;->a()I"
    ],
    "Lcom/keyes/youtube/OpenYouTubePlayerActivity;": [
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->requestWindowFeature()Z",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->setContentView()V",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->getWindow()Landroid/view/Window;",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->setupView()V",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->getSystemService()Ljava/lang/Object;",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->finish()V",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->extractMessages()V",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity;->getIntent()Landroid/content/Intent;"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->getDataString()Ljava/lang/String;",
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setType()Landroid/content/Intent;",
        "Landroid/content/Intent;->createChooser()Landroid/content/Intent;",
        "Landroid/content/Intent;->getIntExtra()I",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->toURI()Ljava/lang/String;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->putExtras()Landroid/content/Intent;",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->setPackage()Landroid/content/Intent;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->setGravity()V",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/LinearLayout;->setOrientation()V",
        "Landroid/widget/LinearLayout;->removeAllViews()V",
        "Landroid/widget/LinearLayout;->setPadding()V",
        "Landroid/widget/LinearLayout;->setId()V",
        "Landroid/widget/LinearLayout;->setLayoutParams()V"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->getParent()Landroid/view/ViewParent;",
        "Landroid/widget/RelativeLayout;->removeView()V",
        "Landroid/widget/RelativeLayout;->findViewById()Landroid/view/View;",
        "Landroid/widget/RelativeLayout;->onLayout()V",
        "Landroid/widget/RelativeLayout;->setBackgroundDrawable()V",
        "Landroid/widget/RelativeLayout;->setVisibility()V",
        "Landroid/widget/RelativeLayout;->postDelayed()Z",
        "Landroid/widget/RelativeLayout;->setGravity()V",
        "Landroid/widget/RelativeLayout;->setOnClickListener()V",
        "Landroid/widget/RelativeLayout;->setOnTouchListener()V",
        "Landroid/widget/RelativeLayout;->setLayoutParams()V",
        "Landroid/widget/RelativeLayout;->post()Z",
        "Landroid/widget/RelativeLayout;->setId()V",
        "Landroid/widget/RelativeLayout;->setBackgroundColor()V",
        "Landroid/widget/RelativeLayout;->addView()V",
        "Landroid/widget/RelativeLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"
    ],
    "Landroid/widget/VideoView;": [
        "Landroid/widget/VideoView;->setVideoURI()V",
        "Landroid/widget/VideoView;->start()V",
        "Landroid/widget/VideoView;->setOnCompletionListener()V",
        "Landroid/widget/VideoView;->setOnPreparedListener()V",
        "Landroid/widget/VideoView;->requestFocus()Z",
        "Landroid/widget/VideoView;->getHolder()Landroid/view/SurfaceHolder;",
        "Landroid/widget/VideoView;->setMediaController()V",
        "Landroid/widget/VideoView;->setKeepScreenOn()V",
        "Landroid/widget/VideoView;->setLayoutParams()V",
        "Landroid/widget/VideoView;->setId()V",
        "Landroid/widget/VideoView;->stopPlayback()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V",
        "Landroid/widget/RelativeLayout$LayoutParams;->setMargins()V"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->setIndeterminate()V",
        "Landroid/widget/ProgressBar;->setId()V",
        "Landroid/widget/ProgressBar;->setLayoutParams()V",
        "Landroid/widget/ProgressBar;->setVisibility()V",
        "Landroid/widget/ProgressBar;->setEnabled()V",
        "Landroid/widget/ProgressBar;->bringToFront()V"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setLayoutParams()V",
        "Landroid/widget/TextView;->setOnFocusChangeListener()V",
        "Landroid/widget/TextView;->setId()V",
        "Landroid/widget/TextView;->setPadding()V",
        "Landroid/widget/TextView;->setVisibility()V",
        "Landroid/widget/TextView;->setGravity()V",
        "Landroid/widget/TextView;->setFocusable()V",
        "Landroid/widget/TextView;->setHorizontallyScrolling()V",
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->setVerticalScrollBarEnabled()V",
        "Landroid/widget/TextView;->getPaint()Landroid/text/TextPaint;",
        "Landroid/widget/TextView;->setMovementMethod()V",
        "Landroid/widget/TextView;->setTypeface()V",
        "Landroid/widget/TextView;->setShadowLayer()V",
        "Landroid/widget/TextView;->setOnClickListener()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setEnabled()V",
        "Landroid/widget/TextView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/TextView;->getId()I",
        "Landroid/widget/TextView;->setTextSize()V"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->getApplicationContext()Landroid/content/Context;",
        "Landroid/app/Activity;->finish()V",
        "Landroid/app/Activity;->onBackPressed()V",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->findViewById()Landroid/view/View;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->getPackageName()Ljava/lang/String;",
        "Landroid/app/Activity;->getLayoutInflater()Landroid/view/LayoutInflater;",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->startActivityForResult()V",
        "Landroid/app/Activity;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/app/Activity;->onRestart()V",
        "Landroid/app/Activity;->onWindowFocusChanged()V",
        "Landroid/app/Activity;->moveTaskToBack()Z",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->setResult()V",
        "Landroid/app/Activity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/app/Activity;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->onActivityResult()V",
        "Landroid/app/Activity;->getSystemService()Ljava/lang/Object;",
        "Landroid/app/Activity;->runOnUiThread()V",
        "Landroid/app/Activity;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->getString()Ljava/lang/String;",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/app/Activity;->getWindow()Landroid/view/Window;",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->onCreate()V"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setLayout()V",
        "Landroid/view/Window;->setFlags()V",
        "Landroid/view/Window;->setSoftInputMode()V",
        "Landroid/view/Window;->clearFlags()V",
        "Landroid/view/Window;->getWindowManager()Landroid/view/WindowManager;"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->acquire()V",
        "Landroid/os/PowerManager$WakeLock;->release()V"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->clone()Ljava/lang/Object;",
        "Ljava/lang/Object;->hashCode()I",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->finalize()V",
        "Ljava/lang/Object;->notify()V",
        "Ljava/lang/Object;->wait()V"
    ],
    "Lcom/keyes/youtube/OpenYouTubePlayerActivity$QueryYouTubeTask;": [
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity$QueryYouTubeTask;->execute()Landroid/os/AsyncTask;",
        "Lcom/keyes/youtube/OpenYouTubePlayerActivity$QueryYouTubeTask;->cancel()Z"
    ],
    "Lcom/keyes/youtube/YouTubeUtility;": [
        "Lcom/keyes/youtube/YouTubeUtility;->markVideoAsViewed()V"
    ],
    "Lcom/outfit7/engine/touchzone/c;": [
        "Lcom/outfit7/engine/touchzone/c;->a()Z",
        "Lcom/outfit7/engine/touchzone/c;->a()V",
        "Lcom/outfit7/engine/touchzone/c;->a()Ljava/io/File;",
        "Lcom/outfit7/engine/touchzone/c;->a()Ljava/lang/String;",
        "Lcom/outfit7/engine/touchzone/c;->a()Landroid/graphics/drawable/Drawable;",
        "Lcom/outfit7/engine/touchzone/c;->a()I"
    ],
    "Lcom/outfit7/a/a;": [
        "Lcom/outfit7/a/a;->a()Lcom/outfit7/talkingfriends/b/b;",
        "Lcom/outfit7/a/a;->a()Lcom/outfit7/talkingfriends/b/e;",
        "Lcom/outfit7/a/a;->a()Lcom/outfit7/a/a;",
        "Lcom/outfit7/a/a;->a()Lcom/outfit7/talkingfriends/b/c;",
        "Lcom/outfit7/a/a;->a()V",
        "Lcom/outfit7/a/a;->a()Z"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->decode()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->equals()Z",
        "Ljava/lang/Integer;->intValue()I"
    ],
    "Lcom/outfit7/a/b;": [
        "Lcom/outfit7/a/b;->a()Lcom/outfit7/a/a;",
        "Lcom/outfit7/a/b;->a()V",
        "Lcom/outfit7/a/b;->a()Lcom/outfit7/a/b;"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->nanoTime()J",
        "Ljava/lang/System;->exit()V",
        "Ljava/lang/System;->runFinalizersOnExit()V",
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->identityHashCode()I",
        "Ljava/lang/System;->getProperties()Ljava/util/Properties;",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->arraycopy()V"
    ],
    "Lcom/outfit7/ffmpeg/JFFMPEGJNI;": [
        "Lcom/outfit7/ffmpeg/JFFMPEGJNI;->getFrameNumber()I",
        "Lcom/outfit7/ffmpeg/JFFMPEGJNI;->createSymbolicLink()I",
        "Lcom/outfit7/ffmpeg/JFFMPEGJNI;->test_ffmpeg()V",
        "Lcom/outfit7/ffmpeg/JFFMPEGJNI;->quit()V",
        "Lcom/outfit7/ffmpeg/JFFMPEGJNI;->createLink()I",
        "Lcom/outfit7/ffmpeg/JFFMPEGJNI;->main_ffmpeg()I"
    ],
    "Lcom/outfit7/b/h;": [
        "Lcom/outfit7/b/h;->a()Lcom/outfit7/youtube/h;",
        "Lcom/outfit7/b/h;->a()Landroid/os/Handler;",
        "Lcom/outfit7/b/h;->a()V",
        "Lcom/outfit7/b/h;->a()Ljava/lang/String;"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->handleMessage()V",
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->sendEmptyMessage()Z",
        "Landroid/os/Handler;->sendMessageDelayed()Z",
        "Landroid/os/Handler;->obtainMessage()Landroid/os/Message;",
        "Landroid/os/Handler;->sendEmptyMessageDelayed()Z",
        "Landroid/os/Handler;->postDelayed()Z",
        "Landroid/os/Handler;->removeCallbacks()V",
        "Landroid/os/Handler;->sendMessage()Z"
    ],
    "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;": [
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Landroid/widget/ImageView;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Landroid/widget/TextView;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()I",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()V",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()[Ljava/util/List;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Z",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->getPackageName()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Lcom/outfit7/talkingfriends/e/b;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()[Lcom/outfit7/engine/a/h;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Landroid/content/res/AssetManager;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Landroid/view/SurfaceView;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Lcom/outfit7/talkingfriends/MainProxy;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Ljava/io/File;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()[Lcom/outfit7/engine/a/g;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Lcom/outfit7/talkingfriends/TalkingFriendsApplication;",
        "Lcom/outfit7/talkingfriends/TalkingFriendsApplication;->a()Lcom/outfit7/engine/c/c;"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->getCanonicalPath()Ljava/lang/String;",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->createTempFile()Ljava/io/File;",
        "Ljava/io/File;->deleteOnExit()V",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->canRead()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->toString()Ljava/lang/String;",
        "Ljava/io/File;->toURI()Ljava/net/URI;"
    ],
    "Lcom/outfit7/youtube/h;": [
        "Lcom/outfit7/youtube/h;->a()Ljava/lang/String;",
        "Lcom/outfit7/youtube/h;->a()V"
    ],
    "Lcom/outfit7/youtube/i;": [
        "Lcom/outfit7/youtube/i;->a()I"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V",
        "Ljava/lang/Exception;->getLocalizedMessage()Ljava/lang/String;"
    ],
    "Lcom/outfit7/b/j;": [
        "Lcom/outfit7/b/j;->a()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->interrupt()V",
        "Ljava/lang/Thread;->join()V",
        "Ljava/lang/Thread;->getName()Ljava/lang/String;",
        "Ljava/lang/Thread;->getContextClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/Thread;->setContextClassLoader()V",
        "Ljava/lang/Thread;->setName()V",
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->setDefaultUncaughtExceptionHandler()V",
        "Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;",
        "Ljava/lang/Thread;->stop()V",
        "Ljava/lang/Thread;->setPriority()V",
        "Ljava/lang/Thread;->isAlive()Z",
        "Ljava/lang/Thread;->getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;",
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->yield()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->round()I",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->ceil()D",
        "Ljava/lang/Math;->abs()D",
        "Ljava/lang/Math;->sin()D",
        "Ljava/lang/Math;->max()D",
        "Ljava/lang/Math;->min()J",
        "Ljava/lang/Math;->min()D",
        "Ljava/lang/Math;->random()D",
        "Ljava/lang/Math;->signum()F",
        "Ljava/lang/Math;->round()J",
        "Ljava/lang/Math;->min()F"
    ],
    "Landroid/content/DialogInterface;": [
        "Landroid/content/DialogInterface;->dismiss()V",
        "Landroid/content/DialogInterface;->cancel()V"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->floatToIntBits()I",
        "Ljava/lang/Float;->parseFloat()F",
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;",
        "Ljava/lang/Float;->isNaN()Z"
    ],
    "Lcom/outfit7/b/a;": [
        "Lcom/outfit7/b/a;->a()Ljava/lang/String;",
        "Lcom/outfit7/b/a;->a()V"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->getStackTrace()[Ljava/lang/StackTraceElement;",
        "Ljava/lang/Throwable;->printStackTrace()V",
        "Ljava/lang/Throwable;->getLocalizedMessage()Ljava/lang/String;",
        "Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;",
        "Ljava/lang/Throwable;->toString()Ljava/lang/String;",
        "Ljava/lang/Throwable;->fillInStackTrace()Ljava/lang/Throwable;",
        "Ljava/lang/Throwable;->getMessage()Ljava/lang/String;"
    ],
    "Landroid/app/ProgressDialog;": [
        "Landroid/app/ProgressDialog;->setMax()V",
        "Landroid/app/ProgressDialog;->setMessage()V",
        "Landroid/app/ProgressDialog;->requestWindowFeature()Z",
        "Landroid/app/ProgressDialog;->setIndeterminate()V",
        "Landroid/app/ProgressDialog;->cancel()V",
        "Landroid/app/ProgressDialog;->setCancelMessage()V",
        "Landroid/app/ProgressDialog;->setCancelable()V",
        "Landroid/app/ProgressDialog;->setProgress()V",
        "Landroid/app/ProgressDialog;->dismiss()V",
        "Landroid/app/ProgressDialog;->setButton()V",
        "Landroid/app/ProgressDialog;->setOnCancelListener()V",
        "Landroid/app/ProgressDialog;->setOnKeyListener()V",
        "Landroid/app/ProgressDialog;->setProgressStyle()V",
        "Landroid/app/ProgressDialog;->show()V"
    ],
    "Ljava/lang/RuntimeException;": [
        "Ljava/lang/RuntimeException;->getLocalizedMessage()Ljava/lang/String;",
        "Ljava/lang/RuntimeException;->printStackTrace()V",
        "Ljava/lang/RuntimeException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/outfit7/b/g;": [
        "Lcom/outfit7/b/g;->a()V"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;",
        "Ljava/lang/Boolean;->hashCode()I",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->booleanValue()Z"
    ],
    "Lcom/outfit7/util/r;": [
        "Lcom/outfit7/util/r;->a()Z",
        "Lcom/outfit7/util/r;->a()Ljava/io/File;",
        "Lcom/outfit7/util/r;->a()Ljava/lang/String;",
        "Lcom/outfit7/util/r;->a()[Ljava/lang/String;",
        "Lcom/outfit7/util/r;->a()Landroid/app/AlertDialog;",
        "Lcom/outfit7/util/r;->a()V",
        "Lcom/outfit7/util/r;->a()Landroid/graphics/Bitmap;",
        "Lcom/outfit7/util/r;->a()I",
        "Lcom/outfit7/util/r;->a()Ljava/io/InputStream;"
    ],
    "Lcom/outfit7/talkingfriends/f/d;": [
        "Lcom/outfit7/talkingfriends/f/d;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/a;": [
        "Lcom/outfit7/talkingfriends/a;->a()Lcom/outfit7/talkingfriends/MainProxy;",
        "Lcom/outfit7/talkingfriends/a;->a()J",
        "Lcom/outfit7/talkingfriends/a;->a()V",
        "Lcom/outfit7/talkingfriends/a;->a()Ljava/util/concurrent/locks/Lock;",
        "Lcom/outfit7/talkingfriends/a;->a()I"
    ],
    "Lcom/outfit7/talkingfriends/MainProxy;": [
        "Lcom/outfit7/talkingfriends/MainProxy;->onOptionsItemSelected()Z",
        "Lcom/outfit7/talkingfriends/MainProxy;->onWindowFocusChanged()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->onPrepareOptionsMenu()Z",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()Lcom/outfit7/talkingfriends/gui/b/g;",
        "Lcom/outfit7/talkingfriends/MainProxy;->onResume()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->getMenuInflater()Landroid/view/MenuInflater;",
        "Lcom/outfit7/talkingfriends/MainProxy;->startActivity()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->onDestroy()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/outfit7/talkingfriends/MainProxy;->onPause()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()Landroid/app/Dialog;",
        "Lcom/outfit7/talkingfriends/MainProxy;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingfriends/MainProxy;->getPackageName()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/MainProxy;->onBackPressed()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->getSystemService()Ljava/lang/Object;",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()F",
        "Lcom/outfit7/talkingfriends/MainProxy;->onCreate()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->finish()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->onActivityResult()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()Z",
        "Lcom/outfit7/talkingfriends/MainProxy;->findViewById()Landroid/view/View;",
        "Lcom/outfit7/talkingfriends/MainProxy;->onNewIntent()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()Landroid/graphics/Bitmap;",
        "Lcom/outfit7/talkingfriends/MainProxy;->getString()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/MainProxy;->getDir()Ljava/io/File;",
        "Lcom/outfit7/talkingfriends/MainProxy;->onStop()V",
        "Lcom/outfit7/talkingfriends/MainProxy;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/MainProxy;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/outfit7/talkingfriends/MainProxy;->getApplicationContext()Landroid/content/Context;"
    ],
    "Lcom/outfit7/talkingfriends/e/b;": [
        "Lcom/outfit7/talkingfriends/e/b;->a()Z",
        "Lcom/outfit7/talkingfriends/e/b;->a()Ljava/lang/String;"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->getByteArray()[B",
        "Landroid/os/Bundle;->isEmpty()Z",
        "Landroid/os/Bundle;->get()Ljava/lang/Object;",
        "Landroid/os/Bundle;->getLong()J",
        "Landroid/os/Bundle;->putByteArray()V",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->keySet()Ljava/util/Set;",
        "Landroid/os/Bundle;->getBoolean()Z",
        "Landroid/os/Bundle;->containsKey()Z",
        "Landroid/os/Bundle;->putAll()V",
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->putString()V"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setOnCancelListener()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setOnKeyListener()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setIcon()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNeutralButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setView()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->dismiss()V",
        "Landroid/app/AlertDialog;->isShowing()Z",
        "Landroid/app/AlertDialog;->cancel()V",
        "Landroid/app/AlertDialog;->show()V"
    ],
    "Landroid/media/MediaScannerConnection;": [
        "Landroid/media/MediaScannerConnection;->disconnect()V",
        "Landroid/media/MediaScannerConnection;->connect()V",
        "Landroid/media/MediaScannerConnection;->scanFile()V"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getDimensionPixelSize()I",
        "Landroid/content/res/Resources;->getString()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->flushLayoutCache()V",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcom/outfit7/funnetworks/b/b;": [
        "Lcom/outfit7/funnetworks/b/b;->a()Lcom/outfit7/funnetworks/b/a;",
        "Lcom/outfit7/funnetworks/b/b;->a()V",
        "Lcom/outfit7/funnetworks/b/b;->a()Ljava/lang/String;"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStoragePublicDirectory()Ljava/io/File;"
    ],
    "Lcom/outfit7/util/c;": [
        "Lcom/outfit7/util/c;->onScanCompleted()V",
        "Lcom/outfit7/util/c;->a()V"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->getMessage()Ljava/lang/String;",
        "Ljava/io/IOException;->printStackTrace()V"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->put()V"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Long;->parseLong()J",
        "Ljava/lang/Long;->intValue()I",
        "Ljava/lang/Long;->decode()Ljava/lang/Long;",
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->longValue()J",
        "Ljava/lang/Long;->toString()Ljava/lang/String;"
    ],
    "Landroid/provider/MediaStore$Audio$Media;": [
        "Landroid/provider/MediaStore$Audio$Media;->getContentUriForPath()Landroid/net/Uri;"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;",
        "Landroid/content/ContentResolver;->query()Landroid/database/Cursor;"
    ],
    "Landroid/media/RingtoneManager;": [
        "Landroid/media/RingtoneManager;->setActualDefaultRingtoneUri()V",
        "Landroid/media/RingtoneManager;->getRingtone()Landroid/media/Ringtone;"
    ],
    "Lcom/outfit7/engine/a;": [
        "Lcom/outfit7/engine/a;->a()Lcom/outfit7/engine/a;",
        "Lcom/outfit7/engine/a;->a()Z",
        "Lcom/outfit7/engine/a;->a()I",
        "Lcom/outfit7/engine/a;->a()Lcom/outfit7/engine/i;",
        "Lcom/outfit7/engine/a;->a()V",
        "Lcom/outfit7/engine/a;->a()Ljava/lang/Object;"
    ],
    "Lcom/outfit7/engine/i;": [
        "Lcom/outfit7/engine/i;->a()[I",
        "Lcom/outfit7/engine/i;->a()[Lcom/outfit7/engine/a/h;",
        "Lcom/outfit7/engine/i;->a()V",
        "Lcom/outfit7/engine/i;->a()[Landroid/graphics/drawable/Drawable;",
        "Lcom/outfit7/engine/i;->a()Z",
        "Lcom/outfit7/engine/i;->a()Ljava/util/List;",
        "Lcom/outfit7/engine/i;->a()I",
        "Lcom/outfit7/engine/i;->a()[Lcom/outfit7/engine/a/g;",
        "Lcom/outfit7/engine/i;->a()[Ljava/util/List;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->binarySearch()I",
        "Ljava/util/Arrays;->equals()Z",
        "Ljava/util/Arrays;->toString()Ljava/lang/String;",
        "Ljava/util/Arrays;->fill()V",
        "Ljava/util/Arrays;->asList()Ljava/util/List;",
        "Ljava/util/Arrays;->sort()V"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->contains()Z",
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->isEmpty()Z",
        "Ljava/util/List;->subList()Ljava/util/List;",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->removeAll()Z",
        "Ljava/util/List;->set()Ljava/lang/Object;",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->toArray()[Ljava/lang/Object;",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->addAll()Z",
        "Ljava/util/List;->size()I"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->availableProcessors()I",
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;"
    ],
    "Lcom/outfit7/engine/b/g;": [
        "Lcom/outfit7/engine/b/g;->a()[S",
        "Lcom/outfit7/engine/b/g;->a()Lcom/outfit7/engine/b/f;",
        "Lcom/outfit7/engine/b/g;->a()Lcom/outfit7/engine/b/g;",
        "Lcom/outfit7/engine/b/g;->a()V",
        "Lcom/outfit7/engine/b/g;->a()F"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->flush()V",
        "Ljava/io/OutputStream;->close()V",
        "Ljava/io/OutputStream;->write()V"
    ],
    "Lcom/outfit7/ffmpeg/JFFMPEG;": [
        "Lcom/outfit7/ffmpeg/JFFMPEG;->main_ffmpeg()I",
        "Lcom/outfit7/ffmpeg/JFFMPEG;->quit()V",
        "Lcom/outfit7/ffmpeg/JFFMPEG;->getFrameNumber()I"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->getHeight()I",
        "Landroid/graphics/Bitmap;->recycle()V",
        "Landroid/graphics/Bitmap;->compress()Z",
        "Landroid/graphics/Bitmap;->createScaledBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->copy()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->isRecycled()Z",
        "Landroid/graphics/Bitmap;->extractAlpha()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getNinePatchChunk()[B"
    ],
    "Lcom/outfit7/engine/a/g;": [
        "Lcom/outfit7/engine/a/g;->a()[B",
        "Lcom/outfit7/engine/a/g;->a()Lcom/outfit7/engine/a/g;",
        "Lcom/outfit7/engine/a/g;->a()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/Matrix;": [
        "Landroid/graphics/Matrix;->mapPoints()V",
        "Landroid/graphics/Matrix;->preTranslate()Z",
        "Landroid/graphics/Matrix;->postTranslate()Z",
        "Landroid/graphics/Matrix;->preScale()Z"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->restore()V",
        "Landroid/graphics/Canvas;->save()I",
        "Landroid/graphics/Canvas;->concat()V",
        "Landroid/graphics/Canvas;->drawARGB()V",
        "Landroid/graphics/Canvas;->drawColor()V",
        "Landroid/graphics/Canvas;->drawRoundRect()V",
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->drawText()V"
    ],
    "Ljava/util/concurrent/locks/Lock;": [
        "Ljava/util/concurrent/locks/Lock;->lock()V",
        "Ljava/util/concurrent/locks/Lock;->newCondition()Ljava/util/concurrent/locks/Condition;",
        "Ljava/util/concurrent/locks/Lock;->unlock()V"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->floatValue()F",
        "Ljava/lang/Double;->doubleToLongBits()J",
        "Ljava/lang/Double;->isNaN()Z",
        "Ljava/lang/Double;->toString()Ljava/lang/String;",
        "Ljava/lang/Double;->doubleValue()D",
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;",
        "Ljava/lang/Double;->parseDouble()D"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->reset()V",
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->skip()J",
        "Ljava/io/InputStream;->markSupported()Z",
        "Ljava/io/InputStream;->mark()V",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->available()I"
    ],
    "Lcom/outfit7/engine/e;": [
        "Lcom/outfit7/engine/e;->sendMessage()Z",
        "Lcom/outfit7/engine/e;->obtainMessage()Landroid/os/Message;",
        "Lcom/outfit7/engine/e;->post()Z"
    ],
    "Lcom/outfit7/util/b;": [
        "Lcom/outfit7/util/b;->a()V"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->unbindService()V",
        "Landroid/content/Context;->sendBroadcast()V",
        "Landroid/content/Context;->getFileStreamPath()Ljava/io/File;",
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->getString()Ljava/lang/String;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->getFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;",
        "Ljava/io/BufferedReader;->close()V"
    ],
    "Ljava/nio/charset/Charset;": [
        "Ljava/nio/charset/Charset;->name()Ljava/lang/String;",
        "Ljava/nio/charset/Charset;->defaultCharset()Ljava/nio/charset/Charset;",
        "Ljava/nio/charset/Charset;->encode()Ljava/nio/ByteBuffer;",
        "Ljava/nio/charset/Charset;->forName()Ljava/nio/charset/Charset;",
        "Ljava/nio/charset/Charset;->decode()Ljava/nio/CharBuffer;"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/client/methods/HttpPost;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpPost;->setURI()V",
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V"
    ],
    "Ljava/util/SortedMap;": [
        "Ljava/util/SortedMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/SortedMap;->put()Ljava/lang/Object;"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;"
    ],
    "Lcom/outfit7/util/j;": [
        "Lcom/outfit7/util/j;->getContentLength()J",
        "Lcom/outfit7/util/j;->a()V",
        "Lcom/outfit7/util/j;->a()Z",
        "Lcom/outfit7/util/j;->addPart()V"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getStatusCode()I",
        "Lorg/apache/http/StatusLine;->getReasonPhrase()Ljava/lang/String;",
        "Lorg/apache/http/StatusLine;->getProtocolVersion()Lorg/apache/http/ProtocolVersion;"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->equals()Z",
        "Ljava/util/Locale;->getAvailableLocales()[Ljava/util/Locale;",
        "Ljava/util/Locale;->getVariant()Ljava/lang/String;",
        "Ljava/util/Locale;->hashCode()I"
    ],
    "Lcom/outfit7/funnetworks/a;": [
        "Lcom/outfit7/funnetworks/a;->a()V",
        "Lcom/outfit7/funnetworks/a;->a()Ljava/lang/String;",
        "Lcom/outfit7/funnetworks/a;->a()Z"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->writeFloat()V",
        "Ljava/io/DataOutputStream;->writeLong()V",
        "Ljava/io/DataOutputStream;->writeShort()V",
        "Ljava/io/DataOutputStream;->writeByte()V",
        "Ljava/io/DataOutputStream;->write()V",
        "Ljava/io/DataOutputStream;->writeBytes()V",
        "Ljava/io/DataOutputStream;->writeUTF()V",
        "Ljava/io/DataOutputStream;->writeBoolean()V",
        "Ljava/io/DataOutputStream;->flush()V",
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->size()I",
        "Ljava/io/DataOutputStream;->writeDouble()V",
        "Ljava/io/DataOutputStream;->close()V"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getInstalledPackages()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getLaunchIntentForPackage()Landroid/content/Intent;",
        "Landroid/content/pm/PackageManager;->getReceiverInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationLabel()Ljava/lang/CharSequence;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;"
    ],
    "Landroid/content/BroadcastReceiver;": [
        "Landroid/content/BroadcastReceiver;->onReceive()V"
    ],
    "Lcom/outfit7/funnetworks/c/c;": [
        "Lcom/outfit7/funnetworks/c/c;->a()Z",
        "Lcom/outfit7/funnetworks/c/c;->a()Ljava/lang/String;",
        "Lcom/outfit7/funnetworks/c/c;->a()V",
        "Lcom/outfit7/funnetworks/c/c;->a()Lcom/outfit7/funnetworks/c/c;",
        "Lcom/outfit7/funnetworks/c/c;->a()I"
    ],
    "Lorg/json/JSONException;": [
        "Lorg/json/JSONException;->printStackTrace()V"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->unmodifiableSet()Ljava/util/Set;",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->unmodifiableCollection()Ljava/util/Collection;",
        "Ljava/util/Collections;->emptySet()Ljava/util/Set;",
        "Ljava/util/Collections;->shuffle()V",
        "Ljava/util/Collections;->reverse()V",
        "Ljava/util/Collections;->singletonMap()Ljava/util/Map;",
        "Ljava/util/Collections;->sort()V",
        "Ljava/util/Collections;->singleton()Ljava/util/Set;",
        "Ljava/util/Collections;->unmodifiableList()Ljava/util/List;",
        "Ljava/util/Collections;->enumeration()Ljava/util/Enumeration;",
        "Ljava/util/Collections;->synchronizedMap()Ljava/util/Map;",
        "Ljava/util/Collections;->synchronizedList()Ljava/util/List;",
        "Ljava/util/Collections;->emptyMap()Ljava/util/Map;",
        "Ljava/util/Collections;->list()Ljava/util/ArrayList;",
        "Ljava/util/Collections;->emptyList()Ljava/util/List;"
    ],
    "Lcom/google/gson/Gson;": [
        "Lcom/google/gson/Gson;->fromJson()Ljava/lang/Object;",
        "Lcom/google/gson/Gson;->toJson()Ljava/lang/String;",
        "Lcom/google/gson/Gson;->assertFullConsumption()V",
        "Lcom/google/gson/Gson;->createExclusionStrategy()Lcom/google/gson/ExclusionStrategy;",
        "Lcom/google/gson/Gson;->toJsonTree()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/Gson;->toJson()V"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->elements()Ljava/util/Enumeration;",
        "Ljava/util/Hashtable;->size()I",
        "Ljava/util/Hashtable;->put()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->entrySet()Ljava/util/Set;",
        "Ljava/util/Hashtable;->values()Ljava/util/Collection;",
        "Ljava/util/Hashtable;->clear()V",
        "Ljava/util/Hashtable;->keySet()Ljava/util/Set;",
        "Ljava/util/Hashtable;->rehash()V",
        "Ljava/util/Hashtable;->get()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->toString()Ljava/lang/String;",
        "Ljava/util/Hashtable;->containsKey()Z",
        "Ljava/util/Hashtable;->keys()Ljava/util/Enumeration;",
        "Ljava/util/Hashtable;->remove()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->isEmpty()Z"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->add()Z",
        "Ljava/util/Collection;->size()I",
        "Ljava/util/Collection;->contains()Z",
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Collection;->isEmpty()Z",
        "Ljava/util/Collection;->toArray()[Ljava/lang/Object;"
    ],
    "Lcom/outfit7/funnetworks/c/b;": [
        "Lcom/outfit7/funnetworks/c/b;->a()Lcom/outfit7/funnetworks/c/b;",
        "Lcom/outfit7/funnetworks/c/b;->a()Ljava/util/List;",
        "Lcom/outfit7/funnetworks/c/b;->a()Z",
        "Lcom/outfit7/funnetworks/c/b;->a()V"
    ],
    "Lcom/outfit7/funnetworks/grid/O7Gallery;": [
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->dispatchTouchEvent()Z",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->post()Z",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->getWidth()I",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->setOnItemSelectedListener()V",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->setAdapter()V",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->setSelection()V",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->a()V",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->a()Lcom/outfit7/funnetworks/grid/x;",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->setPadding()V",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->a()I",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->getSelectedItemPosition()I",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->onScroll()Z",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->getHeight()I",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->setUnselectedAlpha()V",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->a()Landroid/os/HandlerThread;",
        "Lcom/outfit7/funnetworks/grid/O7Gallery;->onTouchEvent()Z"
    ],
    "Landroid/os/HandlerThread;": [
        "Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;",
        "Landroid/os/HandlerThread;->start()V",
        "Landroid/os/HandlerThread;->isAlive()Z",
        "Landroid/os/HandlerThread;->quit()Z"
    ],
    "Lcom/outfit7/funnetworks/ui/a/a;": [
        "Lcom/outfit7/funnetworks/ui/a/a;->a()V"
    ],
    "Lcom/outfit7/funnetworks/b/f;": [
        "Lcom/outfit7/funnetworks/b/f;->a()Lorg/apache/http/HttpResponse;",
        "Lcom/outfit7/funnetworks/b/f;->a()Lorg/json/JSONArray;",
        "Lcom/outfit7/funnetworks/b/f;->a()Lorg/json/JSONObject;",
        "Lcom/outfit7/funnetworks/b/f;->a()[I",
        "Lcom/outfit7/funnetworks/b/f;->a()Ljava/lang/String;"
    ],
    "Lcom/outfit7/funnetworks/grid/d;": [
        "Lcom/outfit7/funnetworks/grid/d;->start()V"
    ],
    "Lcom/outfit7/funnetworks/grid/c;": [
        "Lcom/outfit7/funnetworks/grid/c;->a()Ljava/lang/String;"
    ],
    "Lcom/outfit7/funnetworks/grid/o;": [
        "Lcom/outfit7/funnetworks/grid/o;->a()Landroid/widget/RelativeLayout;",
        "Lcom/outfit7/funnetworks/grid/o;->a()Z",
        "Lcom/outfit7/funnetworks/grid/o;->a()Ljava/util/LinkedList;",
        "Lcom/outfit7/funnetworks/grid/o;->a()V",
        "Lcom/outfit7/funnetworks/grid/o;->a()Lcom/outfit7/funnetworks/grid/o;"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setOnClickListener()V",
        "Landroid/widget/ImageView;->setColorFilter()V",
        "Landroid/widget/ImageView;->onLayout()V",
        "Landroid/widget/ImageView;->setScaleType()V",
        "Landroid/widget/ImageView;->setEnabled()V",
        "Landroid/widget/ImageView;->setMaxHeight()V",
        "Landroid/widget/ImageView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/ImageView;->setOnTouchListener()V",
        "Landroid/widget/ImageView;->getId()I",
        "Landroid/widget/ImageView;->setImageDrawable()V",
        "Landroid/widget/ImageView;->startAnimation()V",
        "Landroid/widget/ImageView;->post()Z",
        "Landroid/widget/ImageView;->setMinimumHeight()V",
        "Landroid/widget/ImageView;->setId()V",
        "Landroid/widget/ImageView;->setMaxWidth()V",
        "Landroid/widget/ImageView;->setAdjustViewBounds()V",
        "Landroid/widget/ImageView;->setLayoutParams()V",
        "Landroid/widget/ImageView;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/widget/ImageView;->setMinimumWidth()V",
        "Landroid/widget/ImageView;->setImageResource()V",
        "Landroid/widget/ImageView;->getLocationInWindow()V",
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->setVisibility()V",
        "Landroid/widget/ImageView;->getVisibility()I"
    ],
    "Lcom/outfit7/funnetworks/grid/m;": [
        "Lcom/outfit7/funnetworks/grid/m;->a()V",
        "Lcom/outfit7/funnetworks/grid/m;->a()Z"
    ],
    "Lcom/outfit7/funnetworks/grid/e;": [
        "Lcom/outfit7/funnetworks/grid/e;->a()Lcom/outfit7/funnetworks/grid/m;",
        "Lcom/outfit7/funnetworks/grid/e;->a()Lcom/outfit7/funnetworks/grid/k;",
        "Lcom/outfit7/funnetworks/grid/e;->a()Lcom/outfit7/funnetworks/grid/e;",
        "Lcom/outfit7/funnetworks/grid/e;->a()V",
        "Lcom/outfit7/funnetworks/grid/e;->a()Lorg/json/JSONObject;",
        "Lcom/outfit7/funnetworks/grid/e;->a()Landroid/content/SharedPreferences;",
        "Lcom/outfit7/funnetworks/grid/e;->a()Landroid/content/SharedPreferences$Editor;",
        "Lcom/outfit7/funnetworks/grid/e;->a()Z"
    ],
    "Lcom/outfit7/funnetworks/grid/k;": [
        "Lcom/outfit7/funnetworks/grid/k;->a()V"
    ],
    "Lcom/outfit7/funnetworks/grid/x;": [
        "Lcom/outfit7/funnetworks/grid/x;->post()Z"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->setLocation()V",
        "Landroid/view/MotionEvent;->getPointerCount()I",
        "Landroid/view/MotionEvent;->getPointerId()I",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->getRawX()F",
        "Landroid/view/MotionEvent;->setAction()V",
        "Landroid/view/MotionEvent;->obtain()Landroid/view/MotionEvent;"
    ],
    "Landroid/widget/Gallery;": [
        "Landroid/widget/Gallery;->onLayout()V",
        "Landroid/widget/Gallery;->onTouchEvent()Z",
        "Landroid/widget/Gallery;->onScroll()Z",
        "Landroid/widget/Gallery;->onInterceptTouchEvent()Z"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->setAnimation()V",
        "Landroid/view/View;->getLocationOnScreen()V",
        "Landroid/view/View;->isShown()Z",
        "Landroid/view/View;->inflate()Landroid/view/View;",
        "Landroid/view/View;->setId()V",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->setKeepScreenOn()V",
        "Landroid/view/View;->setWillNotCacheDrawing()V",
        "Landroid/view/View;->setLayoutParams()V",
        "Landroid/view/View;->post()Z",
        "Landroid/view/View;->getMeasuredHeight()I",
        "Landroid/view/View;->requestLayout()V",
        "Landroid/view/View;->setTag()V",
        "Landroid/view/View;->getVisibility()I",
        "Landroid/view/View;->getId()I",
        "Landroid/view/View;->setEnabled()V",
        "Landroid/view/View;->postDelayed()Z",
        "Landroid/view/View;->getContext()Landroid/content/Context;",
        "Landroid/view/View;->setBackgroundResource()V",
        "Landroid/view/View;->setBackgroundColor()V",
        "Landroid/view/View;->findViewById()Landroid/view/View;",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->getMeasuredWidth()I",
        "Landroid/view/View;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/view/View;->setVisibility()V",
        "Landroid/view/View;->setOnClickListener()V",
        "Landroid/view/View;->destroyDrawingCache()V",
        "Landroid/view/View;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/view/View;->setOnTouchListener()V",
        "Landroid/view/View;->getTag()Ljava/lang/Object;",
        "Landroid/view/View;->getLocationInWindow()V",
        "Landroid/view/View;->setDrawingCacheEnabled()V",
        "Landroid/view/View;->layout()V"
    ],
    "Landroid/text/Html;": [
        "Landroid/text/Html;->fromHtml()Landroid/text/Spanned;"
    ],
    "Ljava/util/LinkedList;": [
        "Ljava/util/LinkedList;->listIterator()Ljava/util/ListIterator;",
        "Ljava/util/LinkedList;->remove()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->contains()Z",
        "Ljava/util/LinkedList;->size()I",
        "Ljava/util/LinkedList;->toArray()[Ljava/lang/Object;",
        "Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedList;->clear()V",
        "Ljava/util/LinkedList;->removeLast()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->addFirst()V",
        "Ljava/util/LinkedList;->isEmpty()Z",
        "Ljava/util/LinkedList;->getLast()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->removeFirst()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->add()Z",
        "Ljava/util/LinkedList;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->remove()Z"
    ],
    "Landroid/widget/TableLayout;": [
        "Landroid/widget/TableLayout;->addView()V",
        "Landroid/widget/TableLayout;->setPadding()V",
        "Landroid/widget/TableLayout;->setLayoutParams()V"
    ],
    "Lcom/outfit7/funnetworks/grid/b;": [
        "Lcom/outfit7/funnetworks/grid/b;->a()Ljava/lang/String;",
        "Lcom/outfit7/funnetworks/grid/b;->a()I"
    ],
    "Landroid/widget/TableRow;": [
        "Landroid/widget/TableRow;->addView()V"
    ],
    "Lcom/outfit7/funnetworks/grid/a;": [
        "Lcom/outfit7/funnetworks/grid/a;->notifyDataSetChanged()V"
    ],
    "Lcom/outfit7/funnetworks/b/d;": [
        "Lcom/outfit7/funnetworks/b/d;->a()Lcom/outfit7/funnetworks/b/d;",
        "Lcom/outfit7/funnetworks/b/d;->a()V",
        "Lcom/outfit7/funnetworks/b/d;->a()Z"
    ],
    "Lcom/outfit7/funnetworks/grid/f;": [
        "Lcom/outfit7/funnetworks/grid/f;->start()V"
    ],
    "Lcom/outfit7/funnetworks/grid/j;": [
        "Lcom/outfit7/funnetworks/grid/j;->a()V"
    ],
    "Lcom/outfit7/funnetworks/grid/l;": [
        "Lcom/outfit7/funnetworks/grid/l;->a()V"
    ],
    "Lcom/outfit7/engine/q;": [
        "Lcom/outfit7/engine/q;->a()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/drawable/BitmapDrawable;": [
        "Landroid/graphics/drawable/BitmapDrawable;->getBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lcom/outfit7/funnetworks/grid/g;": [
        "Lcom/outfit7/funnetworks/grid/g;->start()V"
    ],
    "Lcom/outfit7/funnetworks/b/k;": [
        "Lcom/outfit7/funnetworks/b/k;->a()Z"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setStaleCheckingEnabled()V",
        "Lorg/apache/http/params/HttpConnectionParams;->getSocketBufferSize()I",
        "Lorg/apache/http/params/HttpConnectionParams;->setLinger()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setSocketBufferSize()V",
        "Lorg/apache/http/params/HttpConnectionParams;->getSoTimeout()I",
        "Lorg/apache/http/params/HttpConnectionParams;->getTcpNoDelay()Z",
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setTcpNoDelay()V",
        "Lorg/apache/http/params/HttpConnectionParams;->getConnectionTimeout()I",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->getLinger()I",
        "Lorg/apache/http/params/HttpConnectionParams;->isStaleCheckingEnabled()Z"
    ],
    "Lorg/apache/http/client/methods/HttpUriRequest;": [
        "Lorg/apache/http/client/methods/HttpUriRequest;->abort()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->getMethod()Ljava/lang/String;",
        "Lorg/apache/http/client/methods/HttpUriRequest;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->getURI()Ljava/net/URI;",
        "Lorg/apache/http/client/methods/HttpUriRequest;->setHeader()V"
    ],
    "Lorg/apache/http/client/methods/HttpPut;": [
        "Lorg/apache/http/client/methods/HttpPut;->setURI()V",
        "Lorg/apache/http/client/methods/HttpPut;->setEntity()V"
    ],
    "Lorg/apache/http/Header;": [
        "Lorg/apache/http/Header;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/Header;->getElements()[Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/Header;->getName()Ljava/lang/String;"
    ],
    "Ljava/io/BufferedInputStream;": [
        "Ljava/io/BufferedInputStream;->read()I",
        "Ljava/io/BufferedInputStream;->close()V"
    ],
    "Lcom/outfit7/funnetworks/b/h;": [
        "Lcom/outfit7/funnetworks/b/h;->a()V",
        "Lcom/outfit7/funnetworks/b/h;->a()Ljava/util/Set;",
        "Lcom/outfit7/funnetworks/b/h;->a()Z",
        "Lcom/outfit7/funnetworks/b/h;->a()Landroid/graphics/Bitmap;",
        "Lcom/outfit7/funnetworks/b/h;->a()Lcom/outfit7/funnetworks/b/h;",
        "Lcom/outfit7/funnetworks/b/h;->a()Ljava/util/Map;"
    ],
    "Lcom/outfit7/funnetworks/b/e;": [
        "Lcom/outfit7/funnetworks/b/e;->a()V",
        "Lcom/outfit7/funnetworks/b/e;->a()Lcom/outfit7/funnetworks/b/e;"
    ],
    "Lcom/outfit7/funnetworks/b/j;": [
        "Lcom/outfit7/funnetworks/b/j;->a()I",
        "Lcom/outfit7/funnetworks/b/j;->a()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeResource()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeFile()Landroid/graphics/Bitmap;"
    ],
    "Lorg/springframework/util/Assert;": [
        "Lorg/springframework/util/Assert;->state()V",
        "Lorg/springframework/util/Assert;->isInstanceOf()V",
        "Lorg/springframework/util/Assert;->noNullElements()V",
        "Lorg/springframework/util/Assert;->notEmpty()V",
        "Lorg/springframework/util/Assert;->hasText()V",
        "Lorg/springframework/util/Assert;->isNull()V",
        "Lorg/springframework/util/Assert;->isTrue()V",
        "Lorg/springframework/util/Assert;->doesNotContain()V",
        "Lorg/springframework/util/Assert;->isAssignable()V",
        "Lorg/springframework/util/Assert;->hasLength()V",
        "Lorg/springframework/util/Assert;->notNull()V"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;",
        "Ljava/lang/Enum;->toString()Ljava/lang/String;"
    ],
    "[Lcom/outfit7/funnetworks/b/a;": [
        "[Lcom/outfit7/funnetworks/b/a;->clone()Ljava/lang/Object;"
    ],
    "Lcom/outfit7/funnetworks/ui/O7ImageView;": [
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->invalidate()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setDrawingCacheEnabled()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setImageDrawable()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setOnLayoutInterface$3558bc90$464c78de()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->a()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setImageBitmap()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->post()Z",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->a()Landroid/graphics/Bitmap;",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->destroyDrawingCache()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setScaleType()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->requestLayout()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setWillNotCacheDrawing()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setAnimation()V",
        "Lcom/outfit7/funnetworks/ui/O7ImageView;->setVisibility()V"
    ],
    "Lcom/outfit7/funnetworks/ui/a/c;": [
        "Lcom/outfit7/funnetworks/ui/a/c;->a()V",
        "Lcom/outfit7/funnetworks/ui/a/c;->a()J",
        "Lcom/outfit7/funnetworks/ui/a/c;->a()Z"
    ],
    "Lcom/outfit7/funnetworks/ui/a/b;": [
        "Lcom/outfit7/funnetworks/ui/a/b;->a()V"
    ],
    "Lcom/outfit7/funnetworks/a/b;": [
        "Lcom/outfit7/funnetworks/a/b;->a()V",
        "Lcom/outfit7/funnetworks/a/b;->a()Z"
    ],
    "Lcom/outfit7/funnetworks/b/a;": [
        "Lcom/outfit7/funnetworks/b/a;->values()[Lcom/outfit7/funnetworks/b/a;",
        "Lcom/outfit7/funnetworks/b/a;->ordinal()I"
    ],
    "Landroid/view/View$OnClickListener;": [
        "Landroid/view/View$OnClickListener;->onClick()V"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->isConnectedOrConnecting()Z",
        "Landroid/net/NetworkInfo;->getType()I"
    ],
    "Lcom/outfit7/engine/c/c;": [
        "Lcom/outfit7/engine/c/c;->a()Z",
        "Lcom/outfit7/engine/c/c;->a()I",
        "Lcom/outfit7/engine/c/c;->a()Landroid/graphics/Bitmap;"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->insert()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->charAt()C",
        "Ljava/lang/StringBuffer;->substring()Ljava/lang/String;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuffer;->replace()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->setCharAt()V",
        "Ljava/lang/StringBuffer;->setLength()V",
        "Ljava/lang/StringBuffer;->length()I",
        "Ljava/lang/StringBuffer;->getChars()V",
        "Ljava/lang/StringBuffer;->reverse()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->deleteCharAt()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;"
    ],
    "Lcom/outfit7/util/m;": [
        "Lcom/outfit7/util/m;->a()Ljava/lang/String;",
        "Lcom/outfit7/util/m;->a()V"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->printStackTrace()V"
    ],
    "Landroid/text/method/ScrollingMovementMethod;": [
        "Landroid/text/method/ScrollingMovementMethod;->getInstance()Landroid/text/method/MovementMethod;"
    ],
    "Ljava/lang/StackTraceElement;": [
        "Ljava/lang/StackTraceElement;->toString()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getClassName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getLineNumber()I"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->getChannel()Ljava/nio/channels/FileChannel;",
        "Ljava/io/FileOutputStream;->write()V",
        "Ljava/io/FileOutputStream;->flush()V",
        "Ljava/io/FileOutputStream;->close()V"
    ],
    "Ljava/lang/Thread$UncaughtExceptionHandler;": [
        "Ljava/lang/Thread$UncaughtExceptionHandler;->uncaughtException()V"
    ],
    "Landroid/view/ViewGroup;": [
        "Landroid/view/ViewGroup;->setOnTouchListener()V",
        "Landroid/view/ViewGroup;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/ViewGroup;->removeView()V",
        "Landroid/view/ViewGroup;->setVisibility()V",
        "Landroid/view/ViewGroup;->addView()V"
    ],
    "Lcom/outfit7/talkingfriends/gui/b;": [
        "Lcom/outfit7/talkingfriends/gui/b;->a()V"
    ],
    "Lcom/outfit7/util/d;": [
        "Lcom/outfit7/util/d;->a()Lcom/outfit7/util/d;"
    ],
    "Lcom/outfit7/util/e;": [
        "Lcom/outfit7/util/e;->a()V",
        "Lcom/outfit7/util/e;->a()Z"
    ],
    "Ljava/util/Queue;": [
        "Ljava/util/Queue;->remove()Z",
        "Ljava/util/Queue;->peek()Ljava/lang/Object;",
        "Ljava/util/Queue;->poll()Ljava/lang/Object;",
        "Ljava/util/Queue;->remove()Ljava/lang/Object;",
        "Ljava/util/Queue;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Queue;->add()Z",
        "Ljava/util/Queue;->size()I",
        "Ljava/util/Queue;->isEmpty()Z"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->show()V",
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;"
    ],
    "Lcom/outfit7/util/i;": [
        "Lcom/outfit7/util/i;->a()V"
    ],
    "Ljava/io/FilterOutputStream;": [
        "Ljava/io/FilterOutputStream;->write()V"
    ],
    "Ljava/io/ByteArrayInputStream;": [
        "Ljava/io/ByteArrayInputStream;->close()V"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->digest()[B",
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V"
    ],
    "Landroid/app/Dialog;": [
        "Landroid/app/Dialog;->onCreate()V",
        "Landroid/app/Dialog;->setOwnerActivity()V",
        "Landroid/app/Dialog;->show()V",
        "Landroid/app/Dialog;->onBackPressed()V",
        "Landroid/app/Dialog;->getWindow()Landroid/view/Window;"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->getChannel()Ljava/nio/channels/FileChannel;",
        "Ljava/io/FileInputStream;->close()V",
        "Ljava/io/FileInputStream;->read()I"
    ],
    "Ljava/nio/channels/FileChannel;": [
        "Ljava/nio/channels/FileChannel;->transferFrom()J",
        "Ljava/nio/channels/FileChannel;->close()V",
        "Ljava/nio/channels/FileChannel;->size()J"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readLine()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readByte()B",
        "Ljava/io/DataInputStream;->readFully()V",
        "Ljava/io/DataInputStream;->skipBytes()I",
        "Ljava/io/DataInputStream;->readLong()J",
        "Ljava/io/DataInputStream;->readUnsignedShort()I",
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readShort()S",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->readBoolean()Z",
        "Ljava/io/DataInputStream;->close()V"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getPhoneType()I",
        "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDataState()I",
        "Landroid/telephony/TelephonyManager;->getNetworkType()I",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/entity/mime/MultipartEntity;": [
        "Lorg/apache/http/entity/mime/MultipartEntity;->isStreaming()Z",
        "Lorg/apache/http/entity/mime/MultipartEntity;->isRepeatable()Z",
        "Lorg/apache/http/entity/mime/MultipartEntity;->writeTo()V",
        "Lorg/apache/http/entity/mime/MultipartEntity;->generateContentType()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingnews/Main;": [
        "Lcom/outfit7/talkingnews/Main;->moveTaskToBack()Z",
        "Lcom/outfit7/talkingnews/Main;->a()Z",
        "Lcom/outfit7/talkingnews/Main;->getApplicationContext()Landroid/content/Context;",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/talkingnews/c/b;",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/funnetworks/a/a;",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/talkingnews/Main;",
        "Lcom/outfit7/talkingnews/Main;->startActivity()V",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/funnetworks/grid/o;",
        "Lcom/outfit7/talkingnews/Main;->startActivityForResult()V",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/a/b;",
        "Lcom/outfit7/talkingnews/Main;->getPackageName()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/Main;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/outfit7/talkingnews/Main;->setContentView()V",
        "Lcom/outfit7/talkingnews/Main;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/Main;->setIntent()V",
        "Lcom/outfit7/talkingnews/Main;->a()Landroid/app/Dialog;",
        "Lcom/outfit7/talkingnews/Main;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnews/Main;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/outfit7/talkingnews/Main;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingnews/Main;->hasWindowFocus()Z",
        "Lcom/outfit7/talkingnews/Main;->setRequestedOrientation()V",
        "Lcom/outfit7/talkingnews/Main;->finish()V",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/talkingfriends/gui/b/a;",
        "Lcom/outfit7/talkingnews/Main;->a()V",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/funnetworks/grid/e;",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/talkingnews/c/a;",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/talkingfriends/gui/O7RelativeLayout;",
        "Lcom/outfit7/talkingnews/Main;->setVolumeControlStream()V",
        "Lcom/outfit7/talkingnews/Main;->getString()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/Main;->a()Lcom/outfit7/talkingfriends/gui/b/w;",
        "Lcom/outfit7/talkingnews/Main;->findViewById()Landroid/view/View;"
    ],
    "Lcom/outfit7/talkingnews/DetectOrientationActivity;": [
        "Lcom/outfit7/talkingnews/DetectOrientationActivity;->startActivity()V",
        "Lcom/outfit7/talkingnews/DetectOrientationActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingnews/DetectOrientationActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnews/DetectOrientationActivity;->setRequestedOrientation()V",
        "Lcom/outfit7/talkingnews/DetectOrientationActivity;->finish()V",
        "Lcom/outfit7/talkingnews/DetectOrientationActivity;->getWindow()Landroid/view/Window;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->updateViewLayout()V",
        "Landroid/view/WindowManager;->removeViewImmediate()V",
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;",
        "Landroid/view/WindowManager;->addView()V"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getOrientation()I",
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getHeight()I"
    ],
    "[Lcom/outfit7/talkingnews/p;": [
        "[Lcom/outfit7/talkingnews/p;->clone()Ljava/lang/Object;"
    ],
    "Lcom/outfit7/talkingfriends/gui/O7RelativeLayout;": [
        "Lcom/outfit7/talkingfriends/gui/O7RelativeLayout;->setOnLayoutCallback()V",
        "Lcom/outfit7/talkingfriends/gui/O7RelativeLayout;->post()Z",
        "Lcom/outfit7/talkingfriends/gui/O7RelativeLayout;->setKeepScreenOn()V"
    ],
    "Lcom/outfit7/talkingnews/c/b;": [
        "Lcom/outfit7/talkingnews/c/b;->a()Lcom/outfit7/engine/a;",
        "Lcom/outfit7/talkingnews/c/b;->a()Lcom/outfit7/talkingnews/Main;",
        "Lcom/outfit7/talkingnews/c/b;->a()Lcom/outfit7/talkingnews/b/l;",
        "Lcom/outfit7/talkingnews/c/b;->a()Z",
        "Lcom/outfit7/talkingnews/c/b;->a()Lcom/outfit7/talkingnews/Bubble;",
        "Lcom/outfit7/talkingnews/c/b;->a()V"
    ],
    "Lcom/outfit7/talkingnews/C2DMReceiver;": [
        "Lcom/outfit7/talkingnews/C2DMReceiver;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/outfit7/talkingnews/C2DMReceiver;->getSystemService()Ljava/lang/Object;",
        "Lcom/outfit7/talkingnews/C2DMReceiver;->getApplicationContext()Landroid/content/Context;",
        "Lcom/outfit7/talkingnews/C2DMReceiver;->getPackageName()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingnews/TalkingNewsApplication;": [
        "Lcom/outfit7/talkingnews/TalkingNewsApplication;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/TalkingNewsApplication;->a()Lcom/outfit7/talkingfriends/TalkingFriendsApplication;"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->notify()V",
        "Landroid/app/NotificationManager;->cancel()V"
    ],
    "Ljava/util/TimeZone;": [
        "Ljava/util/TimeZone;->getTimeZone()Ljava/util/TimeZone;",
        "Ljava/util/TimeZone;->getDefault()Ljava/util/TimeZone;",
        "Ljava/util/TimeZone;->getDisplayName()Ljava/lang/String;",
        "Ljava/util/TimeZone;->getID()Ljava/lang/String;",
        "Ljava/util/TimeZone;->getRawOffset()I"
    ],
    "Lcom/google/android/c2dm/a;": [
        "Lcom/google/android/c2dm/a;->a()V",
        "Lcom/google/android/c2dm/a;->a()Z"
    ],
    "Lcom/outfit7/talkingnews/Bubble;": [
        "Lcom/outfit7/talkingnews/Bubble;->setBackgroundDrawable()V",
        "Lcom/outfit7/talkingnews/Bubble;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingnews/Bubble;->a()V",
        "Lcom/outfit7/talkingnews/Bubble;->addView()V",
        "Lcom/outfit7/talkingnews/Bubble;->removeView()V",
        "Lcom/outfit7/talkingnews/Bubble;->setLayoutParams()V",
        "Lcom/outfit7/talkingnews/Bubble;->a()Landroid/view/View;"
    ],
    "Lcom/outfit7/talkingnews/p;": [
        "Lcom/outfit7/talkingnews/p;->ordinal()I",
        "Lcom/outfit7/talkingnews/p;->values()[Lcom/outfit7/talkingnews/p;"
    ],
    "Lcom/outfit7/talkingnews/r;": [
        "Lcom/outfit7/talkingnews/r;->a()V",
        "Lcom/outfit7/talkingnews/r;->a()Landroid/app/Dialog;",
        "Lcom/outfit7/talkingnews/r;->a()Lcom/outfit7/talkingnews/Main;"
    ],
    "Lcom/outfit7/talkingfriends/gui/a/t;": [
        "Lcom/outfit7/talkingfriends/gui/a/t;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/c/a;": [
        "Lcom/outfit7/talkingfriends/c/a;->a()Ljava/io/File;",
        "Lcom/outfit7/talkingfriends/c/a;->a()V",
        "Lcom/outfit7/talkingfriends/c/a;->a()Z",
        "Lcom/outfit7/talkingfriends/c/a;->a()Landroid/app/Notification;"
    ],
    "Lcom/outfit7/funnetworks/a/a;": [
        "Lcom/outfit7/funnetworks/a/a;->a()Z",
        "Lcom/outfit7/funnetworks/a/a;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/gui/SplashView;": [
        "Lcom/outfit7/talkingfriends/gui/SplashView;->getContext()Landroid/content/Context;",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->getVisibility()I",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->setSplashImagePath()V",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->post()Z",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->setVisibility()V",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->a()Z",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->setImageBitmap()V",
        "Lcom/outfit7/talkingfriends/gui/SplashView;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/a/a;": [
        "Lcom/outfit7/talkingfriends/a/a;->a()V"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Lcom/outfit7/talkingfriends/gui/b/a;": [
        "Lcom/outfit7/talkingfriends/gui/b/a;->a()Z",
        "Lcom/outfit7/talkingfriends/gui/b/a;->a()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingfriends/gui/b/w;": [
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()V",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Landroid/view/animation/Animation;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Lcom/outfit7/talkingfriends/k;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Landroid/content/SharedPreferences;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Landroid/view/View;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Lcom/outfit7/talkingfriends/MainProxy;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Landroid/app/Activity;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Landroid/app/AlertDialog;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Landroid/widget/ListView;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Ljava/util/Hashtable;",
        "Lcom/outfit7/talkingfriends/gui/b/w;->a()Z"
    ],
    "Lcom/outfit7/talkingfriends/gui/b/p;": [
        "Lcom/outfit7/talkingfriends/gui/b/p;->a()Ljava/util/Map;",
        "Lcom/outfit7/talkingfriends/gui/b/p;->a()Z",
        "Lcom/outfit7/talkingfriends/gui/b/p;->a()Landroid/graphics/drawable/AnimationDrawable;",
        "Lcom/outfit7/talkingfriends/gui/b/p;->a()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingfriends/gui/b/g;": [
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()V",
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()Landroid/widget/TextView;",
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()Ljava/util/List;",
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()Z",
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()Landroid/widget/ListAdapter;",
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()Landroid/view/View;",
        "Lcom/outfit7/talkingfriends/gui/b/g;->a()Landroid/widget/ListView;"
    ],
    "Lcom/outfit7/talkingfriends/gui/a/b;": [
        "Lcom/outfit7/talkingfriends/gui/a/b;->a()V",
        "Lcom/outfit7/talkingfriends/gui/a/b;->a()Landroid/app/Dialog;",
        "Lcom/outfit7/talkingfriends/gui/a/b;->a()Z"
    ],
    "Lcom/outfit7/talkingfriends/gui/a/m;": [
        "Lcom/outfit7/talkingfriends/gui/a/m;->a()V",
        "Lcom/outfit7/talkingfriends/gui/a/m;->a()Landroid/app/Dialog;"
    ],
    "Lcom/outfit7/talkingfriends/gui/a/f;": [
        "Lcom/outfit7/talkingfriends/gui/a/f;->a()Landroid/app/Dialog;"
    ],
    "Lcom/outfit7/talkingfriends/j;": [
        "Lcom/outfit7/talkingfriends/j;->a()V",
        "Lcom/outfit7/talkingfriends/j;->a()Ljava/lang/String;",
        "Lcom/outfit7/talkingfriends/j;->a()Lcom/outfit7/talkingfriends/e/b;",
        "Lcom/outfit7/talkingfriends/j;->a()Landroid/widget/ImageView;",
        "Lcom/outfit7/talkingfriends/j;->a()Lcom/outfit7/talkingfriends/MainProxy;",
        "Lcom/outfit7/talkingfriends/j;->a()Lcom/outfit7/engine/c/c;",
        "Lcom/outfit7/talkingfriends/j;->a()Landroid/widget/TextView;",
        "Lcom/outfit7/talkingfriends/j;->a()Landroid/view/SurfaceView;",
        "Lcom/outfit7/talkingfriends/j;->a()Z"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->getItemId()I"
    ],
    "Lcom/outfit7/soundtouch/SoundTouch;": [
        "Lcom/outfit7/soundtouch/SoundTouch;->setPitchSemiTones()V",
        "Lcom/outfit7/soundtouch/SoundTouch;->putSamples()V",
        "Lcom/outfit7/soundtouch/SoundTouch;->setSampleRate()V",
        "Lcom/outfit7/soundtouch/SoundTouch;->setSetting()I",
        "Lcom/outfit7/soundtouch/SoundTouch;->delete()V",
        "Lcom/outfit7/soundtouch/SoundTouch;->setRateChange()V",
        "Lcom/outfit7/soundtouch/SoundTouch;->receiveSamples()J",
        "Lcom/outfit7/soundtouch/SoundTouch;->flush()V",
        "Lcom/outfit7/soundtouch/SoundTouch;->setup()V"
    ],
    "Lcom/outfit7/talkingnews/v;": [
        "Lcom/outfit7/talkingnews/v;->a()V"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpGet;->setURI()V",
        "Lorg/apache/http/client/methods/HttpGet;->abort()V"
    ],
    "Ljava/util/zip/ZipFile;": [
        "Ljava/util/zip/ZipFile;->entries()Ljava/util/Enumeration;",
        "Ljava/util/zip/ZipFile;->close()V",
        "Ljava/util/zip/ZipFile;->getInputStream()Ljava/io/InputStream;"
    ],
    "Ljava/util/Enumeration;": [
        "Ljava/util/Enumeration;->hasMoreElements()Z",
        "Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;"
    ],
    "Ljava/util/zip/ZipEntry;": [
        "Ljava/util/zip/ZipEntry;->getName()Ljava/lang/String;",
        "Ljava/util/zip/ZipEntry;->isDirectory()Z"
    ],
    "Ljava/io/BufferedOutputStream;": [
        "Ljava/io/BufferedOutputStream;->flush()V",
        "Ljava/io/BufferedOutputStream;->close()V"
    ],
    "Lcom/outfit7/talkingnews/b/e;": [
        "Lcom/outfit7/talkingnews/b/e;->a()I",
        "Lcom/outfit7/talkingnews/b/e;->a()Lcom/outfit7/engine/a/f;",
        "Lcom/outfit7/talkingnews/b/e;->a()V"
    ],
    "Lcom/outfit7/talkingnews/b/l;": [
        "Lcom/outfit7/talkingnews/b/l;->a()V"
    ],
    "Lcom/outfit7/engine/a/c;": [
        "Lcom/outfit7/engine/a/c;->a()Z",
        "Lcom/outfit7/engine/a/c;->a()V"
    ],
    "Lcom/outfit7/talkingnews/b/a;": [
        "Lcom/outfit7/talkingnews/b/a;->a()V"
    ],
    "Lcom/outfit7/engine/a/i;": [
        "Lcom/outfit7/engine/a/i;->a()V"
    ],
    "Lcom/outfit7/talkingnews/b/b;": [
        "Lcom/outfit7/talkingnews/b/b;->a()Lcom/outfit7/engine/a/b;",
        "Lcom/outfit7/talkingnews/b/b;->a()Lcom/outfit7/engine/b/g;"
    ],
    "Lcom/outfit7/talkingnews/b/d;": [
        "Lcom/outfit7/talkingnews/b/d;->a()V",
        "Lcom/outfit7/talkingnews/b/d;->a()Lcom/outfit7/talkingnews/b/d;"
    ],
    "Lcom/outfit7/talkingnews/b/f;": [
        "Lcom/outfit7/talkingnews/b/f;->a()Lcom/outfit7/engine/b/g;",
        "Lcom/outfit7/talkingnews/b/f;->a()Z",
        "Lcom/outfit7/talkingnews/b/f;->a()V",
        "Lcom/outfit7/talkingnews/b/f;->a()Lcom/outfit7/engine/a/b;"
    ],
    "Lcom/outfit7/talkingnews/b/j;": [
        "Lcom/outfit7/talkingnews/b/j;->a()Z",
        "Lcom/outfit7/talkingnews/b/j;->a()Lcom/outfit7/talkingnews/Main;",
        "Lcom/outfit7/talkingnews/b/j;->a()Lcom/outfit7/engine/a/b;",
        "Lcom/outfit7/talkingnews/b/j;->a()Lcom/outfit7/engine/b/g;",
        "Lcom/outfit7/talkingnews/b/j;->a()V",
        "Lcom/outfit7/talkingnews/b/j;->a()Lcom/outfit7/engine/a/a;"
    ],
    "Lcom/outfit7/engine/b/f;": [
        "Lcom/outfit7/engine/b/f;->start()V",
        "Lcom/outfit7/engine/b/f;->a()Z",
        "Lcom/outfit7/engine/b/f;->a()[S",
        "Lcom/outfit7/engine/b/f;->a()I",
        "Lcom/outfit7/engine/b/f;->a()[I",
        "Lcom/outfit7/engine/b/f;->a()V"
    ],
    "Lcom/outfit7/talkingnews/b/c;": [
        "Lcom/outfit7/talkingnews/b/c;->a()Lcom/outfit7/talkingnews/b/c;",
        "Lcom/outfit7/talkingnews/b/c;->a()V"
    ],
    "Landroid/preference/PreferenceActivity;": [
        "Landroid/preference/PreferenceActivity;->onCreate()V",
        "Landroid/preference/PreferenceActivity;->onResume()V",
        "Landroid/preference/PreferenceActivity;->onPause()V"
    ],
    "Lcom/outfit7/talkingnews/activity/Preferences;": [
        "Lcom/outfit7/talkingnews/activity/Preferences;->getPreferenceScreen()Landroid/preference/PreferenceScreen;",
        "Lcom/outfit7/talkingnews/activity/Preferences;->findPreference()Landroid/preference/Preference;",
        "Lcom/outfit7/talkingnews/activity/Preferences;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/outfit7/talkingnews/activity/Preferences;->setRequestedOrientation()V",
        "Lcom/outfit7/talkingnews/activity/Preferences;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingnews/activity/Preferences;->addPreferencesFromResource()V"
    ],
    "Landroid/preference/PreferenceCategory;": [
        "Landroid/preference/PreferenceCategory;->removePreference()Z"
    ],
    "Landroid/preference/PreferenceScreen;": [
        "Landroid/preference/PreferenceScreen;->removePreference()Z"
    ],
    "Landroid/preference/Preference;": [
        "Landroid/preference/Preference;->getKey()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingnews/activity/u;": [
        "Lcom/outfit7/talkingnews/activity/u;->start()V"
    ],
    "Landroid/preference/CheckBoxPreference;": [
        "Landroid/preference/CheckBoxPreference;->isChecked()Z"
    ],
    "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;": [
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->runOnUiThread()V",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->a()V",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->a()Ljava/lang/Thread;",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->setContentView()V",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->setResult()V",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->a()Z",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->finish()V",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->a()I",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->findViewById()Landroid/view/View;",
        "Lcom/outfit7/talkingnews/activity/O7CamcorderActivity;->getParent()Landroid/app/Activity;"
    ],
    "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;": [
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->managedQuery()Landroid/database/Cursor;",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->getPackageName()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->a()Z",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->finish()V",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->a()V",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->setResult()V",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->getString()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->setRequestedOrientation()V",
        "Lcom/outfit7/talkingnews/activity/ConvertVideoActivity;->runOnUiThread()V"
    ],
    "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;": [
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->managedQuery()Landroid/database/Cursor;",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->setResult()V",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->finish()V",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->setRequestedOrientation()V",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->getString()Ljava/lang/String;",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->startActivityForResult()V",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/outfit7/talkingnews/activity/CameraVideoActivity;->setContentView()V"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->moveToFirst()Z",
        "Landroid/database/Cursor;->getColumnIndexOrThrow()I",
        "Landroid/database/Cursor;->getColumnIndex()I",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->getInt()I",
        "Landroid/database/Cursor;->moveToNext()Z",
        "Landroid/database/Cursor;->isAfterLast()Z"
    ],
    "Landroid/hardware/Camera;": [
        "Landroid/hardware/Camera;->open()Landroid/hardware/Camera;",
        "Landroid/hardware/Camera;->setParameters()V",
        "Landroid/hardware/Camera;->setPreviewDisplay()V",
        "Landroid/hardware/Camera;->getNumberOfCameras()I",
        "Landroid/hardware/Camera;->release()V",
        "Landroid/hardware/Camera;->reconnect()V",
        "Landroid/hardware/Camera;->getParameters()Landroid/hardware/Camera$Parameters;",
        "Landroid/hardware/Camera;->stopPreview()V",
        "Landroid/hardware/Camera;->unlock()V",
        "Landroid/hardware/Camera;->startPreview()V"
    ],
    "Landroid/hardware/Camera$Parameters;": [
        "Landroid/hardware/Camera$Parameters;->setPreviewSize()V",
        "Landroid/hardware/Camera$Parameters;->getSupportedPreviewSizes()Ljava/util/List;"
    ],
    "Landroid/media/MediaRecorder;": [
        "Landroid/media/MediaRecorder;->stop()V",
        "Landroid/media/MediaRecorder;->setOutputFormat()V",
        "Landroid/media/MediaRecorder;->release()V",
        "Landroid/media/MediaRecorder;->setOutputFile()V",
        "Landroid/media/MediaRecorder;->prepare()V",
        "Landroid/media/MediaRecorder;->setPreviewDisplay()V",
        "Landroid/media/MediaRecorder;->setOrientationHint()V",
        "Landroid/media/MediaRecorder;->setVideoSource()V",
        "Landroid/media/MediaRecorder;->setCamera()V",
        "Landroid/media/MediaRecorder;->setVideoEncoder()V",
        "Landroid/media/MediaRecorder;->start()V",
        "Landroid/media/MediaRecorder;->setOnInfoListener()V",
        "Landroid/media/MediaRecorder;->setMaxDuration()V",
        "Landroid/media/MediaRecorder;->setVideoSize()V"
    ],
    "Landroid/view/animation/RotateAnimation;": [
        "Landroid/view/animation/RotateAnimation;->setInterpolator()V",
        "Landroid/view/animation/RotateAnimation;->setFillAfter()V",
        "Landroid/view/animation/RotateAnimation;->setRepeatCount()V",
        "Landroid/view/animation/RotateAnimation;->setDuration()V"
    ],
    "Landroid/view/SurfaceHolder;": [
        "Landroid/view/SurfaceHolder;->getSurface()Landroid/view/Surface;",
        "Landroid/view/SurfaceHolder;->addCallback()V",
        "Landroid/view/SurfaceHolder;->lockCanvas()Landroid/graphics/Canvas;",
        "Landroid/view/SurfaceHolder;->setType()V",
        "Landroid/view/SurfaceHolder;->unlockCanvasAndPost()V"
    ],
    "Lcom/outfit7/talkingnews/activity/t;": [
        "Lcom/outfit7/talkingnews/activity/t;->enable()V",
        "Lcom/outfit7/talkingnews/activity/t;->canDetectOrientation()Z",
        "Lcom/outfit7/talkingnews/activity/t;->disable()V"
    ],
    "Lcom/outfit7/talkingnews/activity/EditVideoActivity;": [
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->runOnUiThread()V",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->setResult()V",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->a()Landroid/view/SurfaceView;",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->a()Z",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->setContentView()V",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->finish()V",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->a()Lcom/outfit7/talkingnews/activity/k;",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->a()I",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->setRequestedOrientation()V",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->findViewById()Landroid/view/View;",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->a()Landroid/media/MediaPlayer;",
        "Lcom/outfit7/talkingnews/activity/EditVideoActivity;->a()Landroid/view/View;"
    ],
    "Lcom/outfit7/talkingnews/activity/k;": [
        "Lcom/outfit7/talkingnews/activity/k;->a()J",
        "Lcom/outfit7/talkingnews/activity/k;->a()V",
        "Lcom/outfit7/talkingnews/activity/k;->a()I"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->getVideoWidth()I",
        "Landroid/media/MediaPlayer;->setOnBufferingUpdateListener()V",
        "Landroid/media/MediaPlayer;->getDuration()I",
        "Landroid/media/MediaPlayer;->setOnVideoSizeChangedListener()V",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->setDisplay()V",
        "Landroid/media/MediaPlayer;->setAudioStreamType()V",
        "Landroid/media/MediaPlayer;->getVideoHeight()I",
        "Landroid/media/MediaPlayer;->setOnCompletionListener()V",
        "Landroid/media/MediaPlayer;->setOnSeekCompleteListener()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->setOnPreparedListener()V",
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->pause()V"
    ],
    "Landroid/view/SurfaceView;": [
        "Landroid/view/SurfaceView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/view/SurfaceView;->postDelayed()Z",
        "Landroid/view/SurfaceView;->getHolder()Landroid/view/SurfaceHolder;",
        "Landroid/view/SurfaceView;->post()Z",
        "Landroid/view/SurfaceView;->setLayoutParams()V"
    ],
    "Lcom/outfit7/talkingnews/activity/c;": [
        "Lcom/outfit7/talkingnews/activity/c;->start()V"
    ],
    "Lcom/outfit7/talkingnews/d/a;": [
        "Lcom/outfit7/talkingnews/d/a;->a()V"
    ],
    "Lcom/outfit7/talkingnews/d/b;": [
        "Lcom/outfit7/talkingnews/d/b;->a()V",
        "Lcom/outfit7/talkingnews/d/b;->a()Z",
        "Lcom/outfit7/talkingnews/d/b;->a()Lcom/outfit7/talkingnews/Main;",
        "Lcom/outfit7/talkingnews/d/b;->a()Lcom/outfit7/a/b;"
    ],
    "Lcom/outfit7/engine/c/b;": [
        "Lcom/outfit7/engine/c/b;->a()Z",
        "Lcom/outfit7/engine/c/b;->a()I",
        "Lcom/outfit7/engine/c/b;->a()[I",
        "Lcom/outfit7/engine/c/b;->a()Lcom/outfit7/engine/c/c;",
        "Lcom/outfit7/engine/c/b;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/d/a;": [
        "Lcom/outfit7/talkingfriends/d/a;->a()V"
    ],
    "Lcom/outfit7/engine/touchzone/n;": [
        "Lcom/outfit7/engine/touchzone/n;->a()V",
        "Lcom/outfit7/engine/touchzone/n;->a()Lcom/outfit7/a/b;"
    ],
    "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;": [
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->a()J",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->setFacebookTeaseEnabled()V",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->postDelayed()Z",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->a()V",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->getContext()Landroid/content/Context;",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->a()Z",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->a()Landroid/graphics/drawable/Drawable;",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->setImageDrawable()V",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->startAnimation()V",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->a()Landroid/view/animation/Animation;",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->a()Ljava/util/List;",
        "Lcom/outfit7/talkingfriends/gui/InfoTeaseView;->setTwitterTeaseEnabled()V"
    ],
    "Lcom/outfit7/engine/touchzone/TouchZone;": [
        "Lcom/outfit7/engine/touchzone/TouchZone;->setHapticFeedbackEnabled()V",
        "Lcom/outfit7/engine/touchzone/TouchZone;->a()V",
        "Lcom/outfit7/engine/touchzone/TouchZone;->setGeom()V",
        "Lcom/outfit7/engine/touchzone/TouchZone;->getWidth()I",
        "Lcom/outfit7/engine/touchzone/TouchZone;->setBackgroundColor()V",
        "Lcom/outfit7/engine/touchzone/TouchZone;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Lcom/outfit7/engine/touchzone/TouchZone;->getHeight()I",
        "Lcom/outfit7/engine/touchzone/TouchZone;->setVisibility()V",
        "Lcom/outfit7/engine/touchzone/TouchZone;->getTop()I",
        "Lcom/outfit7/engine/touchzone/TouchZone;->getLeft()I",
        "Lcom/outfit7/engine/touchzone/TouchZone;->postDelayed()Z",
        "Lcom/outfit7/engine/touchzone/TouchZone;->getVisibility()I"
    ],
    "Lcom/flurry/android/FlurryAgent;": [
        "Lcom/flurry/android/FlurryAgent;->logEvent()V",
        "Lcom/flurry/android/FlurryAgent;->a()Lcom/flurry/android/Offer;",
        "Lcom/flurry/android/FlurryAgent;->onStartSession()V",
        "Lcom/flurry/android/FlurryAgent;->a()J",
        "Lcom/flurry/android/FlurryAgent;->a()Lorg/apache/http/client/HttpClient;",
        "Lcom/flurry/android/FlurryAgent;->a()D",
        "Lcom/flurry/android/FlurryAgent;->a()Landroid/view/View;",
        "Lcom/flurry/android/FlurryAgent;->a()Ljava/lang/String;",
        "Lcom/flurry/android/FlurryAgent;->addUserCookie()V",
        "Lcom/flurry/android/FlurryAgent;->enableAppCircle()V",
        "Lcom/flurry/android/FlurryAgent;->setDefaultNoAdsMessage()V",
        "Lcom/flurry/android/FlurryAgent;->a()[B",
        "Lcom/flurry/android/FlurryAgent;->onError()V",
        "Lcom/flurry/android/FlurryAgent;->isCaptureUncaughtExceptions()Z",
        "Lcom/flurry/android/FlurryAgent;->endTimedEvent()V",
        "Lcom/flurry/android/FlurryAgent;->a()Landroid/location/Location;",
        "Lcom/flurry/android/FlurryAgent;->setContinueSessionMillis()V",
        "Lcom/flurry/android/FlurryAgent;->a()Lcom/flurry/android/u;",
        "Lcom/flurry/android/FlurryAgent;->a()Landroid/os/Handler;",
        "Lcom/flurry/android/FlurryAgent;->onEndSession()V",
        "Lcom/flurry/android/FlurryAgent;->a()Ljava/util/List;",
        "Lcom/flurry/android/FlurryAgent;->a()V",
        "Lcom/flurry/android/FlurryAgent;->clearUserCookies()V",
        "Lcom/flurry/android/FlurryAgent;->setLogEnabled()V",
        "Lcom/flurry/android/FlurryAgent;->a()Z"
    ],
    "Lcom/outfit7/talkingfriends/d;": [
        "Lcom/outfit7/talkingfriends/d;->a()V"
    ],
    "Landroid/media/AudioRecord;": [
        "Landroid/media/AudioRecord;->getState()I",
        "Landroid/media/AudioRecord;->getMinBufferSize()I",
        "Landroid/media/AudioRecord;->release()V",
        "Landroid/media/AudioRecord;->stop()V",
        "Landroid/media/AudioRecord;->read()I",
        "Landroid/media/AudioRecord;->startRecording()V"
    ],
    "Landroid/content/pm/PackageManager$NameNotFoundException;": [
        "Landroid/content/pm/PackageManager$NameNotFoundException;->getLocalizedMessage()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingfriends/g;": [
        "Lcom/outfit7/talkingfriends/g;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/h;": [
        "Lcom/outfit7/talkingfriends/h;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/k;": [
        "Lcom/outfit7/talkingfriends/k;->a()Z",
        "Lcom/outfit7/talkingfriends/k;->a()V"
    ],
    "Landroid/view/MenuInflater;": [
        "Landroid/view/MenuInflater;->inflate()V"
    ],
    "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;": [
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->setVolumeControlStream()V",
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->setResult()V",
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->setContentView()V",
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->finish()V",
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->findViewById()Landroid/view/View;",
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->a()V",
        "Lcom/outfit7/talkingfriends/activity/AnimationPlayer;->runOnUiThread()V"
    ],
    "Lcom/outfit7/talkingfriends/activity/ScreenOrientationWaiterActivity;": [
        "Lcom/outfit7/talkingfriends/activity/ScreenOrientationWaiterActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/talkingfriends/activity/ScreenOrientationWaiterActivity;->startActivity()V",
        "Lcom/outfit7/talkingfriends/activity/ScreenOrientationWaiterActivity;->finish()V",
        "Lcom/outfit7/talkingfriends/activity/ScreenOrientationWaiterActivity;->a()V",
        "Lcom/outfit7/talkingfriends/activity/ScreenOrientationWaiterActivity;->getIntent()Landroid/content/Intent;"
    ],
    "Lcom/outfit7/soundtouch/JSoundTouch;": [
        "Lcom/outfit7/soundtouch/JSoundTouch;->getUnpackPos()I",
        "Lcom/outfit7/soundtouch/JSoundTouch;->getUntarTotal()I",
        "Lcom/outfit7/soundtouch/JSoundTouch;->getUnpackTotal()I",
        "Lcom/outfit7/soundtouch/JSoundTouch;->nasalizer_create()Lcom/outfit7/soundtouch/SWIGTYPE_p_nasalizer_t;",
        "Lcom/outfit7/soundtouch/JSoundTouch;->lztar()I",
        "Lcom/outfit7/soundtouch/JSoundTouch;->quit()V",
        "Lcom/outfit7/soundtouch/JSoundTouch;->getUntarPos()I"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->setImageViewResource()V",
        "Landroid/widget/RemoteViews;->setProgressBar()V",
        "Landroid/widget/RemoteViews;->setTextViewText()V"
    ],
    "Lcom/outfit7/talkingfriends/c/p;": [
        "Lcom/outfit7/talkingfriends/c/p;->a()I"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getKeyCode()I",
        "Landroid/view/KeyEvent;->getRepeatCount()I"
    ],
    "Lcom/outfit7/talkingfriends/c/q;": [
        "Lcom/outfit7/talkingfriends/c/q;->start()V"
    ],
    "Landroid/os/StatFs;": [
        "Landroid/os/StatFs;->getBlockSize()I",
        "Landroid/os/StatFs;->getAvailableBlocks()I"
    ],
    "Lcom/outfit7/talkingfriends/f/a;": [
        "Lcom/outfit7/talkingfriends/f/a;->a()V"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->getText()Landroid/text/Editable;",
        "Landroid/widget/EditText;->setText()V",
        "Landroid/widget/EditText;->dispatchTouchEvent()Z",
        "Landroid/widget/EditText;->setLineSpacing()V",
        "Landroid/widget/EditText;->setOnEditorActionListener()V",
        "Landroid/widget/EditText;->onDraw()V",
        "Landroid/widget/EditText;->onLayout()V"
    ],
    "Ljava/util/LinkedHashMap;": [
        "Ljava/util/LinkedHashMap;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/LinkedHashMap;->put()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->clear()V",
        "Ljava/util/LinkedHashMap;->size()I",
        "Ljava/util/LinkedHashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->keySet()Ljava/util/Set;"
    ],
    "Lcom/outfit7/talkingfriends/gui/k;": [
        "Lcom/outfit7/talkingfriends/gui/k;->a()Ljava/util/LinkedHashMap;",
        "Lcom/outfit7/talkingfriends/gui/k;->a()Ljava/util/LinkedList;"
    ],
    "Lcom/outfit7/talkingfriends/gui/j;": [
        "Lcom/outfit7/talkingfriends/gui/j;->a()Z"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->setStrokeJoin()V",
        "Landroid/graphics/Paint;->setARGB()V",
        "Landroid/graphics/Paint;->setTypeface()Landroid/graphics/Typeface;",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->setStrokeWidth()V",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->measureText()F",
        "Landroid/graphics/Paint;->setXfermode()Landroid/graphics/Xfermode;",
        "Landroid/graphics/Paint;->setMaskFilter()Landroid/graphics/MaskFilter;"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->from()Landroid/view/LayoutInflater;",
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;"
    ],
    "Landroid/view/animation/AnimationUtils;": [
        "Landroid/view/animation/AnimationUtils;->loadAnimation()Landroid/view/animation/Animation;"
    ],
    "Landroid/view/animation/Animation;": [
        "Landroid/view/animation/Animation;->setStartOffset()V",
        "Landroid/view/animation/Animation;->setDuration()V",
        "Landroid/view/animation/Animation;->setAnimationListener()V"
    ],
    "Landroid/widget/ScrollView;": [
        "Landroid/widget/ScrollView;->onInterceptTouchEvent()Z",
        "Landroid/widget/ScrollView;->scrollTo()V"
    ],
    "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;": [
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->addTextChangedListener()V",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getText()Landroid/text/Editable;",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getPaddingBottom()I",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getPaddingTop()I",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getWidth()I",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->setTextSize()V",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->a()I",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->invalidate()V",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getHeight()I",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->a()V",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->requestLayout()V",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getTextSize()F",
        "Lcom/outfit7/talkingfriends/gui/AutoResizeEditText;->getPaint()Landroid/text/TextPaint;"
    ],
    "Landroid/text/TextPaint;": [
        "Landroid/text/TextPaint;->setTextSize()V",
        "Landroid/text/TextPaint;->setFakeBoldText()V"
    ],
    "Landroid/text/StaticLayout;": [
        "Landroid/text/StaticLayout;->getHeight()I"
    ],
    "Lcom/outfit7/talkingfriends/gui/O7ButtonLayout;": [
        "Lcom/outfit7/talkingfriends/gui/O7ButtonLayout;->getChildCount()I",
        "Lcom/outfit7/talkingfriends/gui/O7ButtonLayout;->getChildAt()Landroid/view/View;"
    ],
    "Lcom/outfit7/talkingfriends/gui/a/e;": [
        "Lcom/outfit7/talkingfriends/gui/a/e;->a()V"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setEmptyView()V",
        "Landroid/widget/ListView;->setVisibility()V",
        "Landroid/widget/ListView;->post()Z",
        "Landroid/widget/ListView;->removeViewInLayout()V",
        "Landroid/widget/ListView;->setFastScrollEnabled()V",
        "Landroid/widget/ListView;->invalidateViews()V",
        "Landroid/widget/ListView;->setAdapter()V",
        "Landroid/widget/ListView;->getChildAt()Landroid/view/View;",
        "Landroid/widget/ListView;->setOnItemClickListener()V",
        "Landroid/widget/ListView;->setRecyclerListener()V",
        "Landroid/widget/ListView;->setSmoothScrollbarEnabled()V",
        "Landroid/widget/ListView;->removeViews()V",
        "Landroid/widget/ListView;->scrollTo()V",
        "Landroid/widget/ListView;->getChildCount()I"
    ],
    "Landroid/graphics/drawable/AnimationDrawable;": [
        "Landroid/graphics/drawable/AnimationDrawable;->stop()V",
        "Landroid/graphics/drawable/AnimationDrawable;->setOneShot()V",
        "Landroid/graphics/drawable/AnimationDrawable;->start()V",
        "Landroid/graphics/drawable/AnimationDrawable;->addFrame()V"
    ],
    "Ljava/text/DateFormat;": [
        "Ljava/text/DateFormat;->format()Ljava/lang/String;",
        "Ljava/text/DateFormat;->getDateTimeInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->getTimeInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->getDateInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->setTimeZone()V"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->applyPattern()V",
        "Ljava/text/SimpleDateFormat;->set2DigitYearStart()V",
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;",
        "Ljava/text/SimpleDateFormat;->toPattern()Ljava/lang/String;",
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->contains()Z"
    ],
    "Ljava/text/DecimalFormat;": [
        "Ljava/text/DecimalFormat;->format()Ljava/lang/String;",
        "Ljava/text/DecimalFormat;->isParseBigDecimal()Z",
        "Ljava/text/DecimalFormat;->setParseBigDecimal()V"
    ],
    "Landroid/net/Uri$Builder;": [
        "Landroid/net/Uri$Builder;->path()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->authority()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->build()Landroid/net/Uri;",
        "Landroid/net/Uri$Builder;->scheme()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->appendQueryParameter()Landroid/net/Uri$Builder;"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->setBackgroundColor()V",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->destroy()V",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V",
        "Landroid/webkit/WebView;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/webkit/WebView;->addJavascriptInterface()V",
        "Landroid/webkit/WebView;->getContext()Landroid/content/Context;",
        "Landroid/webkit/WebView;->setId()V",
        "Landroid/webkit/WebView;->scrollTo()V",
        "Landroid/webkit/WebView;->setScrollBarStyle()V",
        "Landroid/webkit/WebView;->loadData()V",
        "Landroid/webkit/WebView;->canGoBack()Z",
        "Landroid/webkit/WebView;->requestFocus()Z",
        "Landroid/webkit/WebView;->setVerticalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;",
        "Landroid/webkit/WebView;->goBack()V",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->getUrl()Ljava/lang/String;",
        "Landroid/webkit/WebView;->setVisibility()V",
        "Landroid/webkit/WebView;->setHorizontalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->setLayoutParams()V"
    ],
    "Lcom/outfit7/talkingfriends/offers/OfferProvider;": [
        "Lcom/outfit7/talkingfriends/offers/OfferProvider;->startOffer()V",
        "Lcom/outfit7/talkingfriends/offers/OfferProvider;->shouldCloseOffers()Z",
        "Lcom/outfit7/talkingfriends/offers/OfferProvider;->checkOffers()Ljava/util/List;",
        "Lcom/outfit7/talkingfriends/offers/OfferProvider;->release()V"
    ],
    "Lcom/outfit7/talkingfriends/offers/OfferProvider$Offer;": [
        "Lcom/outfit7/talkingfriends/offers/OfferProvider$Offer;->getThumb()Landroid/graphics/Bitmap;"
    ],
    "Lcom/outfit7/talkingfriends/gui/b/l;": [
        "Lcom/outfit7/talkingfriends/gui/b/l;->start()V"
    ],
    "Lcom/outfit7/talkingfriends/gui/h;": [
        "Lcom/outfit7/talkingfriends/gui/h;->a()Landroid/widget/ImageView;",
        "Lcom/outfit7/talkingfriends/gui/h;->a()Landroid/widget/TextView;",
        "Lcom/outfit7/talkingfriends/gui/h;->a()Landroid/widget/RelativeLayout;",
        "Lcom/outfit7/talkingfriends/gui/h;->a()V"
    ],
    "Landroid/content/pm/ResolveInfo;": [
        "Landroid/content/pm/ResolveInfo;->loadIcon()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/pm/ResolveInfo;->loadLabel()Ljava/lang/CharSequence;"
    ],
    "Landroid/widget/Button;": [
        "Landroid/widget/Button;->setOnClickListener()V",
        "Landroid/widget/Button;->requestFocus()Z",
        "Landroid/widget/Button;->setText()V",
        "Landroid/widget/Button;->setFocusableInTouchMode()V"
    ],
    "Landroid/media/Ringtone;": [
        "Landroid/media/Ringtone;->stop()V",
        "Landroid/media/Ringtone;->play()V"
    ],
    "Lcom/outfit7/talkingfriends/gui/i;": [
        "Lcom/outfit7/talkingfriends/gui/i;->a()V"
    ],
    "Lcom/outfit7/youtube/c;": [
        "Lcom/outfit7/youtube/c;->a()Ljava/lang/String;",
        "Lcom/outfit7/youtube/c;->publishProgress()V",
        "Lcom/outfit7/youtube/c;->isCancelled()Z",
        "Lcom/outfit7/youtube/c;->a()Landroid/net/Uri;",
        "Lcom/outfit7/youtube/c;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/outfit7/youtube/CustomYouTubePlayer;": [
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->getResources()Landroid/content/res/Resources;",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->getSystemService()Ljava/lang/Object;",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->requestWindowFeature()Z",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->a()V",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->setContentView()V",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->getWindow()Landroid/view/Window;",
        "Lcom/outfit7/youtube/CustomYouTubePlayer;->finish()V"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;",
        "Landroid/net/wifi/WifiManager;->isWifiEnabled()Z"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getIpAddress()I"
    ],
    "Lcom/outfit7/engine/a/h;": [
        "Lcom/outfit7/engine/a/h;->a()Ljava/lang/String;"
    ],
    "Lcom/outfit7/youtube/b;": [
        "Lcom/outfit7/youtube/b;->a()Ljava/lang/String;"
    ],
    "Landroid/os/AsyncTask;": [
        "Landroid/os/AsyncTask;->onPostExecute()V",
        "Landroid/os/AsyncTask;->onProgressUpdate()V"
    ],
    "Landroid/widget/MediaController;": [
        "Landroid/widget/MediaController;->show()V"
    ],
    "Lorg/apache/commons/lang/StringEscapeUtils;": [
        "Lorg/apache/commons/lang/StringEscapeUtils;->hex()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringEscapeUtils;->unescapeHtml()V",
        "Lorg/apache/commons/lang/StringEscapeUtils;->unescapeCsv()V",
        "Lorg/apache/commons/lang/StringEscapeUtils;->escapeJavaStyleString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringEscapeUtils;->escapeJava()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringEscapeUtils;->escapeJavaStyleString()V",
        "Lorg/apache/commons/lang/StringEscapeUtils;->escapeCsv()V",
        "Lorg/apache/commons/lang/StringEscapeUtils;->escapeHtml()V",
        "Lorg/apache/commons/lang/StringEscapeUtils;->unescapeJava()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringEscapeUtils;->unescapeJava()V",
        "Lorg/apache/commons/lang/StringEscapeUtils;->escapeXml()Ljava/lang/String;"
    ],
    "Lcom/outfit7/talkingnewsfree/Main;": [
        "Lcom/outfit7/talkingnewsfree/Main;->getIntent()Landroid/content/Intent;",
        "Lcom/outfit7/talkingnewsfree/Main;->finish()V",
        "Lcom/outfit7/talkingnewsfree/Main;->startActivity()V"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->loop()V",
        "Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;",
        "Landroid/os/Looper;->prepare()V"
    ],
    "Lcom/outfit7/engine/a/b;": [
        "Lcom/outfit7/engine/a/b;->a()Ljava/util/List;",
        "Lcom/outfit7/engine/a/b;->a()Lcom/outfit7/engine/a/f;",
        "Lcom/outfit7/engine/a/b;->a()Lcom/outfit7/engine/a/b;",
        "Lcom/outfit7/engine/a/b;->a()V",
        "Lcom/outfit7/engine/a/b;->a()Lcom/outfit7/engine/a/a;"
    ],
    "Lcom/outfit7/engine/f;": [
        "Lcom/outfit7/engine/f;->a()V",
        "Lcom/outfit7/engine/f;->a()Z",
        "Lcom/outfit7/engine/f;->sendMessage()Z",
        "Lcom/outfit7/engine/f;->handleMessage()V",
        "Lcom/outfit7/engine/f;->obtainMessage()Landroid/os/Message;"
    ],
    "Lcom/outfit7/engine/a/a;": [
        "Lcom/outfit7/engine/a/a;->a()I",
        "Lcom/outfit7/engine/a/a;->a()V",
        "Lcom/outfit7/engine/a/a;->start()V",
        "Lcom/outfit7/engine/a/a;->a()Lcom/outfit7/engine/a/a;",
        "Lcom/outfit7/engine/a/a;->setName()V"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->parseColor()I"
    ],
    "Lcom/outfit7/talkingfriends/b/c;": [
        "Lcom/outfit7/talkingfriends/b/c;->a()Ljava/util/List;"
    ],
    "Lcom/outfit7/engine/g;": [
        "Lcom/outfit7/engine/g;->start()V",
        "Lcom/outfit7/engine/g;->a()Lcom/outfit7/engine/f;"
    ],
    "Lcom/outfit7/engine/p;": [
        "Lcom/outfit7/engine/p;->start()V",
        "Lcom/outfit7/engine/p;->a()V"
    ],
    "Lcom/outfit7/engine/b/l;": [
        "Lcom/outfit7/engine/b/l;->a()Ljava/util/Map;",
        "Lcom/outfit7/engine/b/l;->a()V",
        "Lcom/outfit7/engine/b/l;->a()Lcom/outfit7/engine/b/g;"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->setSeed()V",
        "Ljava/util/Random;->nextLong()J",
        "Ljava/util/Random;->nextInt()I",
        "Ljava/util/Random;->nextDouble()D",
        "Ljava/util/Random;->nextFloat()F",
        "Ljava/util/Random;->nextBoolean()Z"
    ],
    "Ljava/util/concurrent/locks/Condition;": [
        "Ljava/util/concurrent/locks/Condition;->signal()V",
        "Ljava/util/concurrent/locks/Condition;->signalAll()V",
        "Ljava/util/concurrent/locks/Condition;->awaitUntil()Z",
        "Ljava/util/concurrent/locks/Condition;->await()Z",
        "Ljava/util/concurrent/locks/Condition;->await()V"
    ],
    "Lcom/outfit7/engine/b/i;": [
        "Lcom/outfit7/engine/b/i;->a()V",
        "Lcom/outfit7/engine/b/i;->start()V"
    ],
    "Lcom/outfit7/engine/a/f;": [
        "Lcom/outfit7/engine/a/f;->a()Lcom/outfit7/engine/a/f;"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->toString()Ljava/lang/String;",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clear()V"
    ],
    "Lcom/outfit7/engine/touchzone/e;": [
        "Lcom/outfit7/engine/touchzone/e;->a()V"
    ],
    "Lcom/outfit7/engine/touchzone/m;": [
        "Lcom/outfit7/engine/touchzone/m;->a()V"
    ],
    "Lcom/outfit7/engine/touchzone/f;": [
        "Lcom/outfit7/engine/touchzone/f;->a()Lcom/outfit7/engine/touchzone/f;",
        "Lcom/outfit7/engine/touchzone/f;->a()Z"
    ],
    "Lcom/outfit7/engine/touchzone/l;": [
        "Lcom/outfit7/engine/touchzone/l;->a()V"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->getProtocol()Ljava/lang/String;",
        "Ljava/net/URL;->hashCode()I",
        "Ljava/net/URL;->equals()Z",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;",
        "Ljava/net/URL;->getFile()Ljava/lang/String;",
        "Ljava/net/URL;->getQuery()Ljava/lang/String;",
        "Ljava/net/URL;->toString()Ljava/lang/String;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->getRef()Ljava/lang/String;",
        "Ljava/net/URL;->getPath()Ljava/lang/String;"
    ],
    "Ljava/net/URLConnection;": [
        "Ljava/net/URLConnection;->getContentLength()I",
        "Ljava/net/URLConnection;->getLastModified()J",
        "Ljava/net/URLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/URLConnection;->connect()V",
        "Ljava/net/URLConnection;->setUseCaches()V",
        "Ljava/net/URLConnection;->setReadTimeout()V"
    ],
    "Landroid/view/inputmethod/InputMethodManager;": [
        "Landroid/view/inputmethod/InputMethodManager;->hideSoftInputFromWindow()Z"
    ],
    "Lcom/outfit7/engine/touchzone/a;": [
        "Lcom/outfit7/engine/touchzone/a;->a()Lcom/outfit7/engine/touchzone/a;",
        "Lcom/outfit7/engine/touchzone/a;->a()Lcom/outfit7/engine/touchzone/c;",
        "Lcom/outfit7/engine/touchzone/a;->a()[J"
    ],
    "Lcom/outfit7/engine/b/a;": [
        "Lcom/outfit7/engine/b/a;->a()Ljava/util/concurrent/locks/Condition;",
        "Lcom/outfit7/engine/b/a;->a()V",
        "Lcom/outfit7/engine/b/a;->a()[S",
        "Lcom/outfit7/engine/b/a;->a()Lcom/outfit7/engine/b/f;"
    ],
    "Landroid/media/AudioTrack;": [
        "Landroid/media/AudioTrack;->setLoopPoints()I",
        "Landroid/media/AudioTrack;->setStereoVolume()I",
        "Landroid/media/AudioTrack;->write()I",
        "Landroid/media/AudioTrack;->release()V",
        "Landroid/media/AudioTrack;->play()V",
        "Landroid/media/AudioTrack;->stop()V",
        "Landroid/media/AudioTrack;->getState()I"
    ],
    "Lcom/outfit7/engine/b/h;": [
        "Lcom/outfit7/engine/b/h;->start()V"
    ],
    "Lcom/outfit7/talkingfriends/b/a;": [
        "Lcom/outfit7/talkingfriends/b/a;->a_()V",
        "Lcom/outfit7/talkingfriends/b/a;->a()V"
    ],
    "Lcom/outfit7/talkingfriends/b/b;": [
        "Lcom/outfit7/talkingfriends/b/b;->a()Lcom/outfit7/talkingfriends/b/a;"
    ],
    "Lcom/outfit7/talkingfriends/b/e;": [
        "Lcom/outfit7/talkingfriends/b/e;->a()Lcom/outfit7/talkingfriends/b/d;"
    ],
    "Lcom/outfit7/talkingfriends/b/d;": [
        "Lcom/outfit7/talkingfriends/b/d;->a()V"
    ],
    "[S": [
        "[S->clone()Ljava/lang/Object;"
    ],
    "Ljava/util/concurrent/BlockingQueue;": [
        "Ljava/util/concurrent/BlockingQueue;->put()V",
        "Ljava/util/concurrent/BlockingQueue;->take()Ljava/lang/Object;",
        "Ljava/util/concurrent/BlockingQueue;->clear()V"
    ],
    "Lcom/outfit7/soundtouch/ShortArray;": [
        "Lcom/outfit7/soundtouch/ShortArray;->delete()V",
        "Lcom/outfit7/soundtouch/ShortArray;->cast()Lcom/outfit7/soundtouch/SWIGTYPE_p_short;",
        "Lcom/outfit7/soundtouch/ShortArray;->getitem()S",
        "Lcom/outfit7/soundtouch/ShortArray;->setitem()V"
    ],
    "Lcom/outfit7/engine/c/a;": [
        "Lcom/outfit7/engine/c/a;->a()[S"
    ],
    "[I": [
        "[I->clone()Ljava/lang/Object;"
    ],
    "Lcom/outfit7/soundtouch/JSoundTouchJNI;": [
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOProcessor_SWIGUpcast()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->INTEGER_SAMPLES_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->ShortArray_getitem()S",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasal_process()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_numUnprocessedSamples()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->getUnpackTotal()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->getUntarTotal()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FALSE_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->TRUE_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SETTING_SEQUENCE_MS_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->new_ShortArray()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasalizer_destroy()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SOUNDTOUCH_VERSION_get()Ljava/lang/String;",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setSetting()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->quit()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->ShortArray_setitem()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->new_FloatArray()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->delete_FloatArray()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->new_SoundTouch()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setTempoChange()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->getUnpackPos()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->lztar()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOProcessor_isEmpty()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SETTING_SEEKWINDOW_MS_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOProcessor_receiveSamples__SWIG_1()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_numSamples()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_clear()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setChannels()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_isEmpty()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->ShortArray_cast()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FloatArray_frompointer()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setPitchSemiTones__SWIG_1()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_putSamples()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SETTING_USE_QUICKSEEK_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_putSamples()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setPitchOctaves()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->delete_ShortArray()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_getVersionId()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasalizer_setBypassThresh()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasalizer_setLPCOrder()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setPitch()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasalizer_setWindowSize()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_getSetting()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FloatArray_getitem()F",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->getUntarPos()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setRate()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->ALLOW_NONEXACT_SIMD_OPTIMIZATION_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_flush()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setPitchSemiTones__SWIG_0()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasalizer_setRootFindingIter()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->ShortArray_frompointer()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setup()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_SWIGUpcast()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_moveSamples()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->nasalizer_create()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SOUNDTOUCH_VERSION_ID_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FloatArray_cast()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setSampleRate()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FloatArray_setitem()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SETTING_USE_AA_FILTER_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SETTING_OVERLAP_MS_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setRateChange()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_clear()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->delete_SoundTouch()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOProcessor_numSamples()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->delete_FIFOSamplePipe()V",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_getVersionString()Ljava/lang/String;",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_receiveSamples__SWIG_1()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOProcessor_receiveSamples__SWIG_0()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->FIFOSamplePipe_receiveSamples__SWIG_0()J",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SETTING_AA_FILTER_LENGTH_get()I",
        "Lcom/outfit7/soundtouch/JSoundTouchJNI;->SoundTouch_setTempo()V"
    ],
    "Lcom/outfit7/soundtouch/SWIGTYPE_p_short;": [
        "Lcom/outfit7/soundtouch/SWIGTYPE_p_short;->getCPtr()J"
    ],
    "Lcom/outfit7/soundtouch/FIFOProcessor;": [
        "Lcom/outfit7/soundtouch/FIFOProcessor;->delete()V"
    ],
    "Lcom/outfit7/soundtouch/FIFOSamplePipe;": [
        "Lcom/outfit7/soundtouch/FIFOSamplePipe;->getCPtr()J",
        "Lcom/outfit7/soundtouch/FIFOSamplePipe;->delete()V"
    ],
    "Lcom/outfit7/soundtouch/SWIGTYPE_p_nasalizer_t;": [
        "Lcom/outfit7/soundtouch/SWIGTYPE_p_nasalizer_t;->getCPtr()J"
    ],
    "Lcom/outfit7/soundtouch/SWIGTYPE_p_float;": [
        "Lcom/outfit7/soundtouch/SWIGTYPE_p_float;->getCPtr()J"
    ],
    "Lcom/outfit7/soundtouch/FloatArray;": [
        "Lcom/outfit7/soundtouch/FloatArray;->delete()V"
    ],
    "Lcom/outfit7/jpeg2avi/AudioDecoder;": [
        "Lcom/outfit7/jpeg2avi/AudioDecoder;->printUsageAndExit()V",
        "Lcom/outfit7/jpeg2avi/AudioDecoder;->out()V"
    ],
    "Ljavax/sound/sampled/AudioSystem;": [
        "Ljavax/sound/sampled/AudioSystem;->write()I",
        "Ljavax/sound/sampled/AudioSystem;->getAudioInputStream()Ljavax/sound/sampled/AudioInputStream;",
        "Ljavax/sound/sampled/AudioSystem;->getLine()Ljavax/sound/sampled/Line;"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->print()V",
        "Ljava/io/PrintStream;->println()V",
        "Ljava/io/PrintStream;->flush()V"
    ],
    "Ljava/io/RandomAccessFile;": [
        "Ljava/io/RandomAccessFile;->write()V",
        "Ljava/io/RandomAccessFile;->seek()V",
        "Ljava/io/RandomAccessFile;->read()I",
        "Ljava/io/RandomAccessFile;->getFilePointer()J",
        "Ljava/io/RandomAccessFile;->close()V",
        "Ljava/io/RandomAccessFile;->length()J",
        "Ljava/io/RandomAccessFile;->writeBytes()V"
    ],
    "Lcom/outfit7/jpeg2avi/Util;": [
        "Lcom/outfit7/jpeg2avi/Util;->writeShort()V",
        "Lcom/outfit7/jpeg2avi/Util;->writeChars()V",
        "Lcom/outfit7/jpeg2avi/Util;->writeInt()V"
    ],
    "Ljavax/sound/sampled/AudioInputStream;": [
        "Ljavax/sound/sampled/AudioInputStream;->close()V",
        "Ljavax/sound/sampled/AudioInputStream;->available()I",
        "Ljavax/sound/sampled/AudioInputStream;->getFrameLength()J",
        "Ljavax/sound/sampled/AudioInputStream;->read()I",
        "Ljavax/sound/sampled/AudioInputStream;->getFormat()Ljavax/sound/sampled/AudioFormat;"
    ],
    "Ljavax/sound/sampled/AudioFormat;": [
        "Ljavax/sound/sampled/AudioFormat;->getSampleRate()F",
        "Ljavax/sound/sampled/AudioFormat;->getSampleSizeInBits()I",
        "Ljavax/sound/sampled/AudioFormat;->isBigEndian()Z",
        "Ljavax/sound/sampled/AudioFormat;->getEncoding()Ljavax/sound/sampled/AudioFormat$Encoding;",
        "Ljavax/sound/sampled/AudioFormat;->getFrameRate()F",
        "Ljavax/sound/sampled/AudioFormat;->getChannels()I",
        "Ljavax/sound/sampled/AudioFormat;->getFrameSize()I",
        "Ljavax/sound/sampled/AudioFormat;->toString()Ljava/lang/String;"
    ],
    "Ljavax/sound/sampled/SourceDataLine;": [
        "Ljavax/sound/sampled/SourceDataLine;->stop()V",
        "Ljavax/sound/sampled/SourceDataLine;->open()V",
        "Ljavax/sound/sampled/SourceDataLine;->drain()V",
        "Ljavax/sound/sampled/SourceDataLine;->start()V",
        "Ljavax/sound/sampled/SourceDataLine;->write()I",
        "Ljavax/sound/sampled/SourceDataLine;->close()V"
    ],
    "Lcom/outfit7/jpeg2avi/Test2;": [
        "Lcom/outfit7/jpeg2avi/Test2;->dumpAudioInputStream()V",
        "Lcom/outfit7/jpeg2avi/Test2;->createAvdio()Lcom/outfit7/jpeg2avi/AviAudio;",
        "Lcom/outfit7/jpeg2avi/Test2;->getAudioInputStream()Ljava/io/InputStream;",
        "Lcom/outfit7/jpeg2avi/Test2;->test()V",
        "Lcom/outfit7/jpeg2avi/Test2;->getLine()Ljavax/sound/sampled/SourceDataLine;",
        "Lcom/outfit7/jpeg2avi/Test2;->rawplay()V"
    ],
    "Lcom/outfit7/jpeg2avi/Avi;": [
        "Lcom/outfit7/jpeg2avi/Avi;->writeHeaderChunk()V",
        "Lcom/outfit7/jpeg2avi/Avi;->addAudio()V",
        "Lcom/outfit7/jpeg2avi/Avi;->writeJunkChunk()V",
        "Lcom/outfit7/jpeg2avi/Avi;->writeIndex()I",
        "Lcom/outfit7/jpeg2avi/Avi;->addFrame()V",
        "Lcom/outfit7/jpeg2avi/Avi;->close()V"
    ],
    "Lcom/outfit7/jpeg2avi/AviHeader;": [
        "Lcom/outfit7/jpeg2avi/AviHeader;->write()V"
    ],
    "Lcom/outfit7/jpeg2avi/StreamHeader;": [
        "Lcom/outfit7/jpeg2avi/StreamHeader;->write()V"
    ],
    "Lcom/outfit7/jpeg2avi/VideoStreamFormat;": [
        "Lcom/outfit7/jpeg2avi/VideoStreamFormat;->write()V"
    ],
    "Lcom/outfit7/jpeg2avi/AudioStreamFormat;": [
        "Lcom/outfit7/jpeg2avi/AudioStreamFormat;->write()V"
    ],
    "Lcom/outfit7/jpeg2avi/Test3;": [
        "Lcom/outfit7/jpeg2avi/Test3;->rawplay()V",
        "Lcom/outfit7/jpeg2avi/Test3;->dumpAudioInputStream()V",
        "Lcom/outfit7/jpeg2avi/Test3;->getLine()Ljavax/sound/sampled/SourceDataLine;",
        "Lcom/outfit7/jpeg2avi/Test3;->testX()V"
    ],
    "Lcom/outfit7/jpeg2avi/Test;": [
        "Lcom/outfit7/jpeg2avi/Test;->getJpegMetaData()Lcom/outfit7/jpeg2avi/Test$JpegMetaData;"
    ],
    "Lcom/outfit7/jpeg2avi/Jpeg2avi;": [
        "Lcom/outfit7/jpeg2avi/Jpeg2avi;->createAvdio()Lcom/outfit7/jpeg2avi/AviAudio;",
        "Lcom/outfit7/jpeg2avi/Jpeg2avi;->generateSound()[B"
    ],
    "Lcom/google/android/c2dm/C2DMBaseReceiver;": [
        "Lcom/google/android/c2dm/C2DMBaseReceiver;->getApplicationContext()Landroid/content/Context;",
        "Lcom/google/android/c2dm/C2DMBaseReceiver;->a()V"
    ],
    "Landroid/app/AlarmManager;": [
        "Landroid/app/AlarmManager;->cancel()V",
        "Landroid/app/AlarmManager;->setRepeating()V",
        "Landroid/app/AlarmManager;->set()V"
    ],
    "Lcom/google/android/c2dm/C2DMBroadcastReceiver;": [
        "Lcom/google/android/c2dm/C2DMBroadcastReceiver;->setResult()V"
    ],
    "Lcom/google/gson/JsonNull;": [
        "Lcom/google/gson/JsonNull;->createJsonNull()Lcom/google/gson/JsonNull;"
    ],
    "Lcom/google/gson/JsonSerializationContextDefault;": [
        "Lcom/google/gson/JsonSerializationContextDefault;->serialize()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/ObjectNavigator;": [
        "Lcom/google/gson/ObjectNavigator;->isPrimitiveOrString()Z",
        "Lcom/google/gson/ObjectNavigator;->accept()V"
    ],
    "Lcom/google/gson/JsonSerializationVisitor;": [
        "Lcom/google/gson/JsonSerializationVisitor;->end()V",
        "Lcom/google/gson/JsonSerializationVisitor;->assignToRoot()V",
        "Lcom/google/gson/JsonSerializationVisitor;->addChildAsElement()V",
        "Lcom/google/gson/JsonSerializationVisitor;->addAsArrayElement()V",
        "Lcom/google/gson/JsonSerializationVisitor;->start()V",
        "Lcom/google/gson/JsonSerializationVisitor;->isFieldNull()Z",
        "Lcom/google/gson/JsonSerializationVisitor;->findAndInvokeCustomSerializer()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonSerializationVisitor;->getJsonElementForChild()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonSerializationVisitor;->getFieldValue()Ljava/lang/Object;",
        "Lcom/google/gson/JsonSerializationVisitor;->addAsChildOfObject()V",
        "Lcom/google/gson/JsonSerializationVisitor;->getJsonElement()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/FieldAttributes;": [
        "Lcom/google/gson/FieldAttributes;->getDeclaredType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/FieldAttributes;->getTypeInfoForField()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/FieldAttributes;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Lcom/google/gson/FieldAttributes;->set()V",
        "Lcom/google/gson/FieldAttributes;->getAnnotationFromArray()Ljava/lang/annotation/Annotation;",
        "Lcom/google/gson/FieldAttributes;->getAnnotations()Ljava/util/Collection;",
        "Lcom/google/gson/FieldAttributes;->hasModifier()Z",
        "Lcom/google/gson/FieldAttributes;->getFieldObject()Ljava/lang/reflect/Field;",
        "Lcom/google/gson/FieldAttributes;->get()Ljava/lang/Object;",
        "Lcom/google/gson/FieldAttributes;->getName()Ljava/lang/String;",
        "Lcom/google/gson/FieldAttributes;->getResolvedType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/FieldAttributes;->getDeclaredClass()Ljava/lang/Class;",
        "Lcom/google/gson/FieldAttributes;->getMaxCacheSize()I",
        "Lcom/google/gson/FieldAttributes;->isSynthetic()Z"
    ],
    "Lcom/google/gson/annotations/Expose;": [
        "Lcom/google/gson/annotations/Expose;->deserialize()Z",
        "Lcom/google/gson/annotations/Expose;->serialize()Z"
    ],
    "Lcom/google/gson/internal/$Gson$Preconditions;": [
        "Lcom/google/gson/internal/$Gson$Preconditions;->checkNotNull()Ljava/lang/Object;",
        "Lcom/google/gson/internal/$Gson$Preconditions;->checkState()V",
        "Lcom/google/gson/internal/$Gson$Preconditions;->checkArgument()V"
    ],
    "Lcom/google/gson/annotations/Since;": [
        "Lcom/google/gson/annotations/Since;->value()D"
    ],
    "Lcom/google/gson/annotations/Until;": [
        "Lcom/google/gson/annotations/Until;->value()D"
    ],
    "Lcom/google/gson/VersionExclusionStrategy;": [
        "Lcom/google/gson/VersionExclusionStrategy;->isValidVersion()Z",
        "Lcom/google/gson/VersionExclusionStrategy;->isValidUntil()Z",
        "Lcom/google/gson/VersionExclusionStrategy;->isValidSince()Z"
    ],
    "Lcom/google/gson/GsonBuilder;": [
        "Lcom/google/gson/GsonBuilder;->registerDeserializer()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->registerInstanceCreatorForTypeHierarchy()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->registerIfAbsent()V",
        "Lcom/google/gson/GsonBuilder;->registerInstanceCreator()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->registerSerializerForTypeHierarchy()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->registerTypeHierarchyAdapter()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->addTypeAdaptersForDate()V",
        "Lcom/google/gson/GsonBuilder;->setFieldNamingStrategy()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->registerSerializer()Lcom/google/gson/GsonBuilder;",
        "Lcom/google/gson/GsonBuilder;->registerDeserializerForTypeHierarchy()Lcom/google/gson/GsonBuilder;"
    ],
    "Lcom/google/gson/ParameterizedTypeHandlerMap;": [
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->hasSpecificHandlerFor()Z",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->getIndexOfSpecificHandlerForTypeHierarchy()I",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->copyOf()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->getIndexOfAnOverriddenHandler()I",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->makeUnmodifiable()V",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->toString()Ljava/lang/String;",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->typeToString()Ljava/lang/String;",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->register()V",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->registerIfAbsent()V",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->registerForTypeHierarchy()V",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->getHandlerFor()Ljava/lang/Object;",
        "Lcom/google/gson/ParameterizedTypeHandlerMap;->getHandlerForTypeHierarchy()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/DefaultTypeAdapters;": [
        "Lcom/google/gson/DefaultTypeAdapters;->createDefaultHierarchySerializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->getDefaultInstanceCreators()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->getDefaultSerializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->getDefaultDeserializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->wrapDeserializer()Lcom/google/gson/JsonDeserializer;",
        "Lcom/google/gson/DefaultTypeAdapters;->createDefaultHierarchyDeserializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->createDefaultInstanceCreators()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->getAllDefaultDeserializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->createDefaultDeserializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->getAllDefaultSerializers()Lcom/google/gson/ParameterizedTypeHandlerMap;",
        "Lcom/google/gson/DefaultTypeAdapters;->createDefaultSerializers()Lcom/google/gson/ParameterizedTypeHandlerMap;"
    ],
    "Lcom/google/gson/FieldNamingPolicy;": [
        "Lcom/google/gson/FieldNamingPolicy;->getFieldNamingPolicy()Lcom/google/gson/FieldNamingStrategy2;"
    ],
    "Lcom/google/gson/JsonArrayDeserializationVisitor;": [
        "Lcom/google/gson/JsonArrayDeserializationVisitor;->visitChildAsObject()Ljava/lang/Object;",
        "Lcom/google/gson/JsonArrayDeserializationVisitor;->visitChildAsArray()Ljava/lang/Object;",
        "Lcom/google/gson/JsonArrayDeserializationVisitor;->getTarget()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonObjectDeserializationVisitor;": [
        "Lcom/google/gson/JsonObjectDeserializationVisitor;->getTarget()Ljava/lang/Object;",
        "Lcom/google/gson/JsonObjectDeserializationVisitor;->visitChildAsObject()Ljava/lang/Object;",
        "Lcom/google/gson/JsonObjectDeserializationVisitor;->getFieldName()Ljava/lang/String;",
        "Lcom/google/gson/JsonObjectDeserializationVisitor;->invokeCustomDeserializer()Ljava/lang/Object;",
        "Lcom/google/gson/JsonObjectDeserializationVisitor;->visitChildAsArray()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonPrimitive;": [
        "Lcom/google/gson/JsonPrimitive;->getAsObject()Ljava/lang/Object;",
        "Lcom/google/gson/JsonPrimitive;->stringToNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonPrimitive;->isPrimitiveOrString()Z",
        "Lcom/google/gson/JsonPrimitive;->isFloatingPoint()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsBooleanWrapper()Ljava/lang/Boolean;",
        "Lcom/google/gson/JsonPrimitive;->isString()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsBoolean()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonPrimitive;->isIntegral()Z",
        "Lcom/google/gson/JsonPrimitive;->isBoolean()Z",
        "Lcom/google/gson/JsonPrimitive;->isNumber()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsString()Ljava/lang/String;",
        "Lcom/google/gson/JsonPrimitive;->setValue()V"
    ],
    "Lcom/google/gson/JsonElement;": [
        "Lcom/google/gson/JsonElement;->toString()V",
        "Lcom/google/gson/JsonElement;->getAsNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonElement;->getAsJsonObject()Lcom/google/gson/JsonObject;",
        "Lcom/google/gson/JsonElement;->getAsShort()S",
        "Lcom/google/gson/JsonElement;->getAsBoolean()Z",
        "Lcom/google/gson/JsonElement;->isJsonObject()Z",
        "Lcom/google/gson/JsonElement;->isJsonNull()Z",
        "Lcom/google/gson/JsonElement;->getAsJsonNull()Lcom/google/gson/JsonNull;",
        "Lcom/google/gson/JsonElement;->getAsInt()I",
        "Lcom/google/gson/JsonElement;->getAsCharacter()C",
        "Lcom/google/gson/JsonElement;->getAsDouble()D",
        "Lcom/google/gson/JsonElement;->getAsByte()B",
        "Lcom/google/gson/JsonElement;->getAsBigDecimal()Ljava/math/BigDecimal;",
        "Lcom/google/gson/JsonElement;->getAsFloat()F",
        "Lcom/google/gson/JsonElement;->getAsObject()Ljava/lang/Object;",
        "Lcom/google/gson/JsonElement;->isJsonPrimitive()Z",
        "Lcom/google/gson/JsonElement;->getAsJsonPrimitive()Lcom/google/gson/JsonPrimitive;",
        "Lcom/google/gson/JsonElement;->getAsLong()J",
        "Lcom/google/gson/JsonElement;->isJsonArray()Z",
        "Lcom/google/gson/JsonElement;->getAsString()Ljava/lang/String;",
        "Lcom/google/gson/JsonElement;->getAsJsonArray()Lcom/google/gson/JsonArray;",
        "Lcom/google/gson/JsonElement;->getAsBigInteger()Ljava/math/BigInteger;"
    ],
    "Lcom/google/gson/JsonDeserializationContextDefault;": [
        "Lcom/google/gson/JsonDeserializationContextDefault;->fromJsonPrimitive()Ljava/lang/Object;",
        "Lcom/google/gson/JsonDeserializationContextDefault;->getObjectConstructor()Lcom/google/gson/ObjectConstructor;",
        "Lcom/google/gson/JsonDeserializationContextDefault;->fromJsonArray()Ljava/lang/Object;",
        "Lcom/google/gson/JsonDeserializationContextDefault;->fromJsonObject()Ljava/lang/Object;"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->getGenericType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Field;->getType()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->isSynthetic()Z",
        "Ljava/lang/reflect/Field;->getModifiers()I",
        "Ljava/lang/reflect/Field;->getAnnotations()[Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/Field;->setAccessible()V",
        "Ljava/lang/reflect/Field;->isAccessible()Z",
        "Ljava/lang/reflect/Field;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Field;->getDeclaringClass()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->set()V"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->isAccessible()Z",
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->getReturnType()Ljava/lang/Class;",
        "Ljava/lang/reflect/Method;->getParameterAnnotations()[[Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/Method;->getModifiers()I",
        "Ljava/lang/reflect/Method;->getGenericParameterTypes()[Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Method;->getParameterTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Method;->getExceptionTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Method;->getDeclaringClass()Ljava/lang/Class;",
        "Ljava/lang/reflect/Method;->getGenericReturnType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Method;->setAccessible()V",
        "Ljava/lang/reflect/Method;->getName()Ljava/lang/String;"
    ],
    "Lcom/google/gson/RecursiveFieldNamingPolicy;": [
        "Lcom/google/gson/RecursiveFieldNamingPolicy;->translateName()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/ParameterizedType;": [
        "Ljava/lang/reflect/ParameterizedType;->getRawType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/ParameterizedType;->getActualTypeArguments()[Ljava/lang/reflect/Type;"
    ],
    "Lcom/google/gson/MapAsArrayTypeAdapter;": [
        "Lcom/google/gson/MapAsArrayTypeAdapter;->constructMapType()Ljava/util/Map;",
        "Lcom/google/gson/MapAsArrayTypeAdapter;->deserialize()Ljava/util/Map;",
        "Lcom/google/gson/MapAsArrayTypeAdapter;->checkSize()V",
        "Lcom/google/gson/MapAsArrayTypeAdapter;->typeToTypeArguments()[Ljava/lang/reflect/Type;",
        "Lcom/google/gson/MapAsArrayTypeAdapter;->serialize()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/JsonArray;": [
        "Lcom/google/gson/JsonArray;->getAsJsonArray()Lcom/google/gson/JsonArray;",
        "Lcom/google/gson/JsonArray;->iterator()Ljava/util/Iterator;",
        "Lcom/google/gson/JsonArray;->size()I",
        "Lcom/google/gson/JsonArray;->get()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonArray;->add()V"
    ],
    "Lcom/google/gson/JsonDeserializationContext;": [
        "Lcom/google/gson/JsonDeserializationContext;->deserialize()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonObject;": [
        "Lcom/google/gson/JsonObject;->add()V",
        "Lcom/google/gson/JsonObject;->createJsonElement()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonObject;->entrySet()Ljava/util/Set;",
        "Lcom/google/gson/JsonObject;->get()Lcom/google/gson/JsonElement;"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Stack;->pop()Ljava/lang/Object;",
        "Ljava/util/Stack;->push()Ljava/lang/Object;",
        "Ljava/util/Stack;->peek()Ljava/lang/Object;",
        "Ljava/util/Stack;->isEmpty()Z",
        "Ljava/util/Stack;->removeAllElements()V",
        "Ljava/util/Stack;->elementAt()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/ObjectTypePair;": [
        "Lcom/google/gson/ObjectTypePair;->getMoreSpecificType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/ObjectTypePair;->getType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/ObjectTypePair;->getMatchingHandler()Lcom/google/gson/Pair;",
        "Lcom/google/gson/ObjectTypePair;->setObject()V",
        "Lcom/google/gson/ObjectTypePair;->getObject()Ljava/lang/Object;",
        "Lcom/google/gson/ObjectTypePair;->getActualTypeIfMoreSpecific()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/ObjectTypePair;->toMoreSpecificType()Lcom/google/gson/ObjectTypePair;"
    ],
    "Lcom/google/gson/Cache;": [
        "Lcom/google/gson/Cache;->getElement()Ljava/lang/Object;",
        "Lcom/google/gson/Cache;->addElement()V"
    ],
    "Lcom/google/gson/ReflectingFieldNavigator;": [
        "Lcom/google/gson/ReflectingFieldNavigator;->getAllFields()Ljava/util/List;",
        "Lcom/google/gson/ReflectingFieldNavigator;->visitFieldsReflectively()V",
        "Lcom/google/gson/ReflectingFieldNavigator;->getInheritanceHierarchy()Ljava/util/List;"
    ],
    "Ljava/lang/reflect/AccessibleObject;": [
        "Ljava/lang/reflect/AccessibleObject;->setAccessible()V"
    ],
    "Lcom/google/gson/internal/$Gson$Types;": [
        "Lcom/google/gson/internal/$Gson$Types;->getMapKeyAndValueTypes()[Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->canonicalize()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->isArray()Z",
        "Lcom/google/gson/internal/$Gson$Types;->resolve()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->getArrayComponentType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->equals()Z",
        "Lcom/google/gson/internal/$Gson$Types;->typeToString()Ljava/lang/String;",
        "Lcom/google/gson/internal/$Gson$Types;->getRawType()Ljava/lang/Class;"
    ],
    "Lcom/google/gson/ExclusionStrategy;": [
        "Lcom/google/gson/ExclusionStrategy;->shouldSkipField()Z",
        "Lcom/google/gson/ExclusionStrategy;->shouldSkipClass()Z"
    ],
    "Lcom/google/gson/ObjectNavigator$Visitor;": [
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitArray()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitUsingCustomHandler()Z",
        "Lcom/google/gson/ObjectNavigator$Visitor;->end()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitPrimitive()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitObjectField()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitFieldUsingCustomHandler()Z",
        "Lcom/google/gson/ObjectNavigator$Visitor;->startVisitingObject()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->getTarget()Ljava/lang/Object;",
        "Lcom/google/gson/ObjectNavigator$Visitor;->start()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitArrayField()V"
    ],
    "Lcom/google/gson/stream/JsonReader;": [
        "Lcom/google/gson/stream/JsonReader;->skipToEndOfLine()V",
        "Lcom/google/gson/stream/JsonReader;->getSnippet()Ljava/lang/CharSequence;",
        "Lcom/google/gson/stream/JsonReader;->beginArray()V",
        "Lcom/google/gson/stream/JsonReader;->endArray()V",
        "Lcom/google/gson/stream/JsonReader;->nextInObject()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->fillBuffer()Z",
        "Lcom/google/gson/stream/JsonReader;->checkLenient()V",
        "Lcom/google/gson/stream/JsonReader;->nextNonWhitespace()I",
        "Lcom/google/gson/stream/JsonReader;->nextBoolean()Z",
        "Lcom/google/gson/stream/JsonReader;->skipTo()Z",
        "Lcom/google/gson/stream/JsonReader;->decodeLiteral()V",
        "Lcom/google/gson/stream/JsonReader;->replaceTop()V",
        "Lcom/google/gson/stream/JsonReader;->objectValue()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->pop()Lcom/google/gson/stream/JsonScope;",
        "Lcom/google/gson/stream/JsonReader;->nextName()Ljava/lang/String;",
        "Lcom/google/gson/stream/JsonReader;->consumeNonExecutePrefix()V",
        "Lcom/google/gson/stream/JsonReader;->isLenient()Z",
        "Lcom/google/gson/stream/JsonReader;->nextLiteral()Ljava/lang/String;",
        "Lcom/google/gson/stream/JsonReader;->nextInArray()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->quickPeek()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->advance()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->syntaxError()Ljava/io/IOException;",
        "Lcom/google/gson/stream/JsonReader;->nextString()Ljava/lang/String;",
        "Lcom/google/gson/stream/JsonReader;->endObject()V",
        "Lcom/google/gson/stream/JsonReader;->readEscapeCharacter()C",
        "Lcom/google/gson/stream/JsonReader;->nextNull()V",
        "Lcom/google/gson/stream/JsonReader;->nextValue()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->peek()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->expect()V",
        "Lcom/google/gson/stream/JsonReader;->beginObject()V",
        "Lcom/google/gson/stream/JsonReader;->hasNext()Z",
        "Lcom/google/gson/stream/JsonReader;->setLenient()V",
        "Lcom/google/gson/stream/JsonReader;->peekStack()Lcom/google/gson/stream/JsonScope;",
        "Lcom/google/gson/stream/JsonReader;->push()V",
        "Lcom/google/gson/stream/JsonReader;->readLiteral()Lcom/google/gson/stream/JsonToken;"
    ],
    "Lcom/google/gson/Primitives;": [
        "Lcom/google/gson/Primitives;->wrap()Ljava/lang/Class;",
        "Lcom/google/gson/Primitives;->add()V",
        "Lcom/google/gson/Primitives;->isPrimitive()Z",
        "Lcom/google/gson/Primitives;->unwrap()Ljava/lang/Class;"
    ],
    "Lcom/google/gson/Streams;": [
        "Lcom/google/gson/Streams;->parse()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/Streams;->write()V",
        "Lcom/google/gson/Streams;->parseRecursive()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/Streams;->writerForAppendable()Ljava/io/Writer;"
    ],
    "Ljava/io/StringWriter;": [
        "Ljava/io/StringWriter;->getBuffer()Ljava/lang/StringBuffer;",
        "Ljava/io/StringWriter;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/gson/stream/JsonWriter;": [
        "Lcom/google/gson/stream/JsonWriter;->string()V",
        "Lcom/google/gson/stream/JsonWriter;->replaceTop()V",
        "Lcom/google/gson/stream/JsonWriter;->newline()V",
        "Lcom/google/gson/stream/JsonWriter;->isHtmlSafe()Z",
        "Lcom/google/gson/stream/JsonWriter;->open()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->close()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->value()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->setLenient()V",
        "Lcom/google/gson/stream/JsonWriter;->isLenient()Z",
        "Lcom/google/gson/stream/JsonWriter;->nullValue()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->endArray()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->beginObject()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->peek()Lcom/google/gson/stream/JsonScope;",
        "Lcom/google/gson/stream/JsonWriter;->endObject()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->beforeValue()V",
        "Lcom/google/gson/stream/JsonWriter;->name()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->setIndent()V",
        "Lcom/google/gson/stream/JsonWriter;->beginArray()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->setHtmlSafe()V",
        "Lcom/google/gson/stream/JsonWriter;->beforeName()V"
    ],
    "Ljava/lang/Appendable;": [
        "Ljava/lang/Appendable;->append()Ljava/lang/Appendable;"
    ],
    "[Lcom/google/gson/FieldNamingPolicy;": [
        "[Lcom/google/gson/FieldNamingPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/InnerClassExclusionStrategy;": [
        "Lcom/google/gson/InnerClassExclusionStrategy;->isStatic()Z",
        "Lcom/google/gson/InnerClassExclusionStrategy;->isInnerClass()Z"
    ],
    "Lcom/google/gson/JsonStreamParser;": [
        "Lcom/google/gson/JsonStreamParser;->next()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonStreamParser;->hasNext()Z"
    ],
    "Lcom/google/gson/JsonParseException;": [
        "Lcom/google/gson/JsonParseException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lcom/google/gson/UnsafeAllocator;": [
        "Lcom/google/gson/UnsafeAllocator;->newInstance()Ljava/lang/Object;",
        "Lcom/google/gson/UnsafeAllocator;->create()Lcom/google/gson/UnsafeAllocator;"
    ],
    "Lcom/google/gson/DefaultConstructorAllocator;": [
        "Lcom/google/gson/DefaultConstructorAllocator;->findConstructor()Ljava/lang/reflect/Constructor;",
        "Lcom/google/gson/DefaultConstructorAllocator;->getNoArgsConstructor()Ljava/lang/reflect/Constructor;",
        "Lcom/google/gson/DefaultConstructorAllocator;->createNullConstructor()Ljava/lang/reflect/Constructor;",
        "Lcom/google/gson/DefaultConstructorAllocator;->newInstance()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/InstanceCreator;": [
        "Lcom/google/gson/InstanceCreator;->createInstance()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/MappedObjectConstructor;": [
        "Lcom/google/gson/MappedObjectConstructor;->constructWithAllocators()Ljava/lang/Object;"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->set()V",
        "Ljava/lang/reflect/Array;->getLength()I",
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/ObjectConstructor;": [
        "Lcom/google/gson/ObjectConstructor;->construct()Ljava/lang/Object;",
        "Lcom/google/gson/ObjectConstructor;->constructArray()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/Pair;": [
        "Lcom/google/gson/Pair;->equal()Z"
    ],
    "Lcom/google/gson/MapTypeAdapter;": [
        "Lcom/google/gson/MapTypeAdapter;->serialize()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/MapTypeAdapter;->constructMapType()Ljava/util/Map;",
        "Lcom/google/gson/MapTypeAdapter;->deserialize()Ljava/util/Map;"
    ],
    "Lcom/google/gson/Escaper;": [
        "Lcom/google/gson/Escaper;->escapeJsonString()Ljava/lang/String;",
        "Lcom/google/gson/Escaper;->mustEscapeCharInJsString()Z",
        "Lcom/google/gson/Escaper;->escapeJsonString()V",
        "Lcom/google/gson/Escaper;->appendHexJavaScriptRepresentation()V",
        "Lcom/google/gson/Escaper;->isControlCharacter()Z"
    ],
    "Lcom/google/gson/JsonElementVisitor;": [
        "Lcom/google/gson/JsonElementVisitor;->visitNull()V",
        "Lcom/google/gson/JsonElementVisitor;->visitNullArrayMember()V",
        "Lcom/google/gson/JsonElementVisitor;->visitNullObjectMember()V",
        "Lcom/google/gson/JsonElementVisitor;->endArray()V",
        "Lcom/google/gson/JsonElementVisitor;->startObject()V",
        "Lcom/google/gson/JsonElementVisitor;->visitObjectMember()V",
        "Lcom/google/gson/JsonElementVisitor;->startArray()V",
        "Lcom/google/gson/JsonElementVisitor;->visitArrayMember()V",
        "Lcom/google/gson/JsonElementVisitor;->visitPrimitive()V",
        "Lcom/google/gson/JsonElementVisitor;->endObject()V"
    ],
    "Lcom/google/gson/JsonTreeNavigator;": [
        "Lcom/google/gson/JsonTreeNavigator;->navigate()V",
        "Lcom/google/gson/JsonTreeNavigator;->visitChild()Z",
        "Lcom/google/gson/JsonTreeNavigator;->visitChild()V"
    ],
    "Lcom/google/gson/FieldNamingStrategy2;": [
        "Lcom/google/gson/FieldNamingStrategy2;->translateName()Ljava/lang/String;"
    ],
    "Lcom/google/gson/annotations/SerializedName;": [
        "Lcom/google/gson/annotations/SerializedName;->value()Ljava/lang/String;"
    ],
    "Lcom/google/gson/JsonDeserializer;": [
        "Lcom/google/gson/JsonDeserializer;->deserialize()Ljava/lang/Object;"
    ],
    "Ljava/lang/Character;": [
        "Ljava/lang/Character;->isUpperCase()Z",
        "Ljava/lang/Character;->toLowerCase()C",
        "Ljava/lang/Character;->isDigit()Z",
        "Ljava/lang/Character;->getType()I",
        "Ljava/lang/Character;->charValue()C",
        "Ljava/lang/Character;->forDigit()C",
        "Ljava/lang/Character;->toChars()[C",
        "Ljava/lang/Character;->codePointAt()I",
        "Ljava/lang/Character;->toTitleCase()C",
        "Ljava/lang/Character;->isSupplementaryCodePoint()Z",
        "Ljava/lang/Character;->isWhitespace()Z",
        "Ljava/lang/Character;->isLetterOrDigit()Z",
        "Ljava/lang/Character;->isTitleCase()Z",
        "Ljava/lang/Character;->isSpaceChar()Z",
        "Ljava/lang/Character;->isLetter()Z",
        "Ljava/lang/Character;->charCount()I",
        "Ljava/lang/Character;->isISOControl()Z",
        "Ljava/lang/Character;->isLowerCase()Z",
        "Ljava/lang/Character;->valueOf()Ljava/lang/Character;",
        "Ljava/lang/Character;->toUpperCase()C",
        "Ljava/lang/Character;->digit()I"
    ],
    "Lcom/google/gson/ModifyFirstLetterNamingPolicy;": [
        "Lcom/google/gson/ModifyFirstLetterNamingPolicy;->modifyString()Ljava/lang/String;"
    ],
    "Lcom/google/gson/JsonDeserializationVisitor;": [
        "Lcom/google/gson/JsonDeserializationVisitor;->getTarget()Ljava/lang/Object;",
        "Lcom/google/gson/JsonDeserializationVisitor;->constructTarget()Ljava/lang/Object;",
        "Lcom/google/gson/JsonDeserializationVisitor;->visitChild()Ljava/lang/Object;",
        "Lcom/google/gson/JsonDeserializationVisitor;->invokeCustomDeserializer()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/CircularReferenceException;": [
        "Lcom/google/gson/CircularReferenceException;->getMessage()Ljava/lang/String;",
        "Lcom/google/gson/CircularReferenceException;->createDetailedException()Ljava/lang/IllegalStateException;"
    ],
    "[Lcom/google/gson/LongSerializationPolicy;": [
        "[Lcom/google/gson/LongSerializationPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/LongSerializationPolicy$Strategy;": [
        "Lcom/google/gson/LongSerializationPolicy$Strategy;->serialize()Lcom/google/gson/JsonElement;"
    ],
    "Ljava/math/BigInteger;": [
        "Ljava/math/BigInteger;->intValue()I",
        "Ljava/math/BigInteger;->mod()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->negate()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->divide()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->multiply()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->valueOf()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->add()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->longValue()J",
        "Ljava/math/BigInteger;->bitLength()I",
        "Ljava/math/BigInteger;->subtract()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->compareTo()I"
    ],
    "Ljava/lang/Number;": [
        "Ljava/lang/Number;->shortValue()S",
        "Ljava/lang/Number;->doubleValue()D",
        "Ljava/lang/Number;->intValue()I",
        "Ljava/lang/Number;->byteValue()B",
        "Ljava/lang/Number;->longValue()J",
        "Ljava/lang/Number;->floatValue()F"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->decode()Ljava/lang/Byte;",
        "Ljava/lang/Byte;->byteValue()B",
        "Ljava/lang/Byte;->valueOf()Ljava/lang/Byte;",
        "Ljava/lang/Byte;->parseByte()B"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->decode()Ljava/lang/Short;",
        "Ljava/lang/Short;->parseShort()S",
        "Ljava/lang/Short;->shortValue()S",
        "Ljava/lang/Short;->valueOf()Ljava/lang/Short;"
    ],
    "Ljava/lang/annotation/Annotation;": [
        "Ljava/lang/annotation/Annotation;->annotationType()Ljava/lang/Class;"
    ],
    "Lcom/google/gson/LruCache;": [
        "Lcom/google/gson/LruCache;->put()Ljava/lang/Object;",
        "Lcom/google/gson/LruCache;->remove()Ljava/lang/Object;",
        "Lcom/google/gson/LruCache;->size()I",
        "Lcom/google/gson/LruCache;->get()Ljava/lang/Object;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Constructor;->isAccessible()Z",
        "Ljava/lang/reflect/Constructor;->getModifiers()I",
        "Ljava/lang/reflect/Constructor;->getGenericParameterTypes()[Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Constructor;->setAccessible()V",
        "Ljava/lang/reflect/Constructor;->getParameterTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Constructor;->getDeclaringClass()Ljava/lang/Class;",
        "Ljava/lang/reflect/Constructor;->getParameterAnnotations()[[Ljava/lang/annotation/Annotation;"
    ],
    "Lcom/google/gson/JsonParser;": [
        "Lcom/google/gson/JsonParser;->parse()Lcom/google/gson/JsonElement;"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->charAt()C",
        "Ljava/lang/CharSequence;->length()I"
    ],
    "Lcom/google/gson/stream/JsonToken;": [
        "Lcom/google/gson/stream/JsonToken;->ordinal()I"
    ],
    "Lcom/google/gson/FieldNamingStrategy;": [
        "Lcom/google/gson/FieldNamingStrategy;->translateName()Ljava/lang/String;"
    ],
    "Ljava/util/logging/Logger;": [
        "Ljava/util/logging/Logger;->getLogger()Ljava/util/logging/Logger;",
        "Ljava/util/logging/Logger;->logp()V",
        "Ljava/util/logging/Logger;->log()V",
        "Ljava/util/logging/Logger;->isLoggable()Z"
    ],
    "Lcom/google/gson/JsonSerializer;": [
        "Lcom/google/gson/JsonSerializer;->serialize()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/MemoryRefStack;": [
        "Lcom/google/gson/MemoryRefStack;->pop()Lcom/google/gson/ObjectTypePair;",
        "Lcom/google/gson/MemoryRefStack;->push()Lcom/google/gson/ObjectTypePair;",
        "Lcom/google/gson/MemoryRefStack;->contains()Z"
    ],
    "Lcom/google/gson/AnonymousAndLocalClassExclusionStrategy;": [
        "Lcom/google/gson/AnonymousAndLocalClassExclusionStrategy;->isAnonymousOrLocal()Z"
    ],
    "Lcom/google/gson/reflect/TypeToken;": [
        "Lcom/google/gson/reflect/TypeToken;->isAssignableFrom()Z",
        "Lcom/google/gson/reflect/TypeToken;->typeEquals()Z",
        "Lcom/google/gson/reflect/TypeToken;->getType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/reflect/TypeToken;->getSuperclassTypeParameter()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/reflect/TypeToken;->buildUnexpectedTypeError()Ljava/lang/AssertionError;",
        "Lcom/google/gson/reflect/TypeToken;->matches()Z"
    ],
    "Ljava/lang/reflect/GenericArrayType;": [
        "Ljava/lang/reflect/GenericArrayType;->getGenericComponentType()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/reflect/TypeVariable;": [
        "Ljava/lang/reflect/TypeVariable;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/TypeVariable;->getBounds()[Ljava/lang/reflect/Type;"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->close()V",
        "Ljava/io/Reader;->read()I"
    ],
    "Lcom/google/gson/stream/JsonScope;": [
        "Lcom/google/gson/stream/JsonScope;->ordinal()I"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->write()V",
        "Ljava/io/Writer;->append()Ljava/io/Writer;",
        "Ljava/io/Writer;->flush()V"
    ],
    "[Lcom/google/gson/stream/JsonScope;": [
        "[Lcom/google/gson/stream/JsonScope;->clone()Ljava/lang/Object;"
    ],
    "[Lcom/google/gson/stream/JsonToken;": [
        "[Lcom/google/gson/stream/JsonToken;->clone()Ljava/lang/Object;"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->onPageStarted()V",
        "Landroid/webkit/WebViewClient;->onPageFinished()V",
        "Landroid/webkit/WebViewClient;->onReceivedError()V"
    ],
    "Landroid/widget/FrameLayout;": [
        "Landroid/widget/FrameLayout;->addView()V",
        "Landroid/widget/FrameLayout;->setBackgroundColor()V"
    ],
    "Landroid/webkit/CookieSyncManager;": [
        "Landroid/webkit/CookieSyncManager;->createInstance()Landroid/webkit/CookieSyncManager;",
        "Landroid/webkit/CookieSyncManager;->getInstance()Landroid/webkit/CookieSyncManager;",
        "Landroid/webkit/CookieSyncManager;->sync()V"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->getIntrinsicWidth()I",
        "Landroid/graphics/drawable/Drawable;->createFromStream()Landroid/graphics/drawable/Drawable;"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->setSavePassword()V"
    ],
    "Landroid/text/TextUtils;": [
        "Landroid/text/TextUtils;->isEmpty()Z",
        "Landroid/text/TextUtils;->split()[Ljava/lang/String;",
        "Landroid/text/TextUtils;->join()Ljava/lang/String;"
    ],
    "Landroid/content/pm/Signature;": [
        "Landroid/content/pm/Signature;->toCharsString()Ljava/lang/String;"
    ],
    "Landroid/webkit/CookieManager;": [
        "Landroid/webkit/CookieManager;->getInstance()Landroid/webkit/CookieManager;",
        "Landroid/webkit/CookieManager;->removeAllCookie()V"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->getProperty()Ljava/lang/String;",
        "Ljava/util/Properties;->load()V",
        "Ljava/util/Properties;->propertyNames()Ljava/util/Enumeration;",
        "Ljava/util/Properties;->setProperty()Ljava/lang/Object;",
        "Ljava/util/Properties;->get()Ljava/lang/Object;"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->setRequestMethod()V",
        "Ljava/net/HttpURLConnection;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/HttpURLConnection;->setReadTimeout()V",
        "Ljava/net/HttpURLConnection;->getErrorStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->disconnect()V",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->setDoInput()V",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->getResponseCode()I",
        "Ljava/net/HttpURLConnection;->setDoOutput()V",
        "Ljava/net/HttpURLConnection;->getContentLength()I",
        "Ljava/net/HttpURLConnection;->connect()V"
    ],
    "Ljava/security/Signature;": [
        "Ljava/security/Signature;->getInstance()Ljava/security/Signature;",
        "Ljava/security/Signature;->verify()Z",
        "Ljava/security/Signature;->update()V"
    ],
    "Lcom/android/vending/licensing/a/a;": [
        "Lcom/android/vending/licensing/a/a;->a()Ljava/lang/String;",
        "Lcom/android/vending/licensing/a/a;->a()[B",
        "Lcom/android/vending/licensing/a/a;->a()I"
    ],
    "Landroid/text/TextUtils$StringSplitter;": [
        "Landroid/text/TextUtils$StringSplitter;->setString()V",
        "Landroid/text/TextUtils$StringSplitter;->iterator()Ljava/util/Iterator;"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;",
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;",
        "Ljava/util/regex/Pattern;->quote()Ljava/lang/String;"
    ],
    "Lcom/android/vending/licensing/DeviceLimiter;": [
        "Lcom/android/vending/licensing/DeviceLimiter;->a()Lcom/android/vending/licensing/Policy$LicenseResponse;"
    ],
    "Lcom/android/vending/licensing/Policy;": [
        "Lcom/android/vending/licensing/Policy;->a()V"
    ],
    "Lcom/android/vending/licensing/LicenseChecker;": [
        "Lcom/android/vending/licensing/LicenseChecker;->a()V"
    ],
    "Lcom/android/vending/licensing/LicenseValidator;": [
        "Lcom/android/vending/licensing/LicenseValidator;->a()I",
        "Lcom/android/vending/licensing/LicenseValidator;->a()Ljava/lang/String;"
    ],
    "Lcom/android/vending/licensing/ILicensingService;": [
        "Lcom/android/vending/licensing/ILicensingService;->a()V"
    ],
    "Landroid/os/IBinder;": [
        "Landroid/os/IBinder;->queryLocalInterface()Landroid/os/IInterface;"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->doFinal()[B"
    ],
    "Lcom/android/vending/licensing/Obfuscator;": [
        "Lcom/android/vending/licensing/Obfuscator;->a()Ljava/lang/String;"
    ],
    "Lcom/android/vending/licensing/PreferenceObfuscator;": [
        "Lcom/android/vending/licensing/PreferenceObfuscator;->a()V"
    ],
    "Lorg/apache/http/client/utils/URLEncodedUtils;": [
        "Lorg/apache/http/client/utils/URLEncodedUtils;->decode()Ljava/lang/String;",
        "Lorg/apache/http/client/utils/URLEncodedUtils;->parse()V",
        "Lorg/apache/http/client/utils/URLEncodedUtils;->encode()Ljava/lang/String;",
        "Lorg/apache/http/client/utils/URLEncodedUtils;->parse()Ljava/util/List;",
        "Lorg/apache/http/client/utils/URLEncodedUtils;->format()Ljava/lang/String;"
    ],
    "Lorg/apache/http/NameValuePair;": [
        "Lorg/apache/http/NameValuePair;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/NameValuePair;->getName()Ljava/lang/String;"
    ],
    "Lcom/android/vending/licensing/ServerManagedPolicy;": [
        "Lcom/android/vending/licensing/ServerManagedPolicy;->a()Ljava/util/Map;",
        "Lcom/android/vending/licensing/ServerManagedPolicy;->a()V"
    ],
    "Lcom/android/vending/licensing/Policy$LicenseResponse;": [
        "Lcom/android/vending/licensing/Policy$LicenseResponse;->toString()Ljava/lang/String;"
    ],
    "Lcom/flurry/android/ah;": [
        "Lcom/flurry/android/ah;->a()Z",
        "Lcom/flurry/android/ah;->a()V",
        "Lcom/flurry/android/ah;->a()I"
    ],
    "Lcom/flurry/android/r;": [
        "Lcom/flurry/android/r;->a()I",
        "Lcom/flurry/android/r;->a()Ljava/lang/String;",
        "Lcom/flurry/android/r;->a()V"
    ],
    "Ljava/io/Closeable;": [
        "Ljava/io/Closeable;->close()V"
    ],
    "Lcom/flurry/android/AdImage;": [
        "Lcom/flurry/android/AdImage;->a()V"
    ],
    "Ljava/io/DataInput;": [
        "Ljava/io/DataInput;->readUnsignedShort()I",
        "Ljava/io/DataInput;->readLong()J",
        "Ljava/io/DataInput;->readBoolean()Z",
        "Ljava/io/DataInput;->readInt()I",
        "Ljava/io/DataInput;->readFully()V",
        "Ljava/io/DataInput;->readUnsignedByte()I",
        "Ljava/io/DataInput;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInput;->readByte()B"
    ],
    "Lcom/flurry/android/o;": [
        "Lcom/flurry/android/o;->a()V",
        "Lcom/flurry/android/o;->a()Lcom/flurry/android/y;",
        "Lcom/flurry/android/o;->a()Landroid/widget/RelativeLayout$LayoutParams;",
        "Lcom/flurry/android/o;->removeAllViews()V",
        "Lcom/flurry/android/o;->addView()V"
    ],
    "Lcom/flurry/android/s;": [
        "Lcom/flurry/android/s;->addView()V",
        "Lcom/flurry/android/s;->setGravity()V",
        "Lcom/flurry/android/s;->setBackgroundColor()V"
    ],
    "Lcom/flurry/android/CatalogActivity;": [
        "Lcom/flurry/android/CatalogActivity;->setTheme()V",
        "Lcom/flurry/android/CatalogActivity;->a()J",
        "Lcom/flurry/android/CatalogActivity;->a()Lcom/flurry/android/u;",
        "Lcom/flurry/android/CatalogActivity;->a()Lcom/flurry/android/p;",
        "Lcom/flurry/android/CatalogActivity;->setContentView()V",
        "Lcom/flurry/android/CatalogActivity;->a()V",
        "Lcom/flurry/android/CatalogActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/flurry/android/CatalogActivity;->finish()V"
    ],
    "Lcom/flurry/android/u;": [
        "Lcom/flurry/android/u;->a()J",
        "Lcom/flurry/android/u;->a()Lcom/flurry/android/AppCircleCallback;",
        "Lcom/flurry/android/u;->a()Landroid/view/View;",
        "Lcom/flurry/android/u;->a()Lcom/flurry/android/AdImage;",
        "Lcom/flurry/android/u;->a()Ljava/lang/String;",
        "Lcom/flurry/android/u;->a()Lcom/flurry/android/Offer;",
        "Lcom/flurry/android/u;->a()V",
        "Lcom/flurry/android/u;->a()Z",
        "Lcom/flurry/android/u;->a()Ljava/util/Set;",
        "Lcom/flurry/android/u;->a()Lcom/flurry/android/p;",
        "Lcom/flurry/android/u;->a()Ljava/util/List;"
    ],
    "Landroid/widget/LinearLayout$LayoutParams;": [
        "Landroid/widget/LinearLayout$LayoutParams;->setMargins()V"
    ],
    "Lcom/flurry/android/ag;": [
        "Lcom/flurry/android/ag;->a()V"
    ],
    "Ljava/io/DataOutput;": [
        "Ljava/io/DataOutput;->writeLong()V",
        "Ljava/io/DataOutput;->writeShort()V",
        "Ljava/io/DataOutput;->writeUTF()V",
        "Ljava/io/DataOutput;->writeByte()V",
        "Ljava/io/DataOutput;->writeInt()V",
        "Ljava/io/DataOutput;->write()V",
        "Ljava/io/DataOutput;->writeBoolean()V"
    ],
    "Lcom/flurry/android/ab;": [
        "Lcom/flurry/android/ab;->addView()V",
        "Lcom/flurry/android/ab;->getId()I",
        "Lcom/flurry/android/ab;->setId()V",
        "Lcom/flurry/android/ab;->a()Landroid/text/SpannedString;",
        "Lcom/flurry/android/ab;->setLayoutParams()V",
        "Lcom/flurry/android/ab;->setBackgroundColor()V"
    ],
    "Lcom/flurry/android/h;": [
        "Lcom/flurry/android/h;->size()I"
    ],
    "Lcom/flurry/android/af;": [
        "Lcom/flurry/android/af;->a()I",
        "Lcom/flurry/android/af;->a()V",
        "Lcom/flurry/android/af;->a()Ljava/lang/Object;",
        "Lcom/flurry/android/af;->a()Ljava/util/Set;",
        "Lcom/flurry/android/af;->a()Ljava/util/List;"
    ],
    "Lcom/flurry/android/p;": [
        "Lcom/flurry/android/p;->a()V",
        "Lcom/flurry/android/p;->a()J"
    ],
    "Landroid/content/res/ColorStateList;": [
        "Landroid/content/res/ColorStateList;->valueOf()Landroid/content/res/ColorStateList;"
    ],
    "Lcom/flurry/android/v;": [
        "Lcom/flurry/android/v;->a()Ljava/lang/String;",
        "Lcom/flurry/android/v;->a()V"
    ],
    "Lcom/flurry/android/c;": [
        "Lcom/flurry/android/c;->a()V"
    ],
    "Lcom/flurry/android/z;": [
        "Lcom/flurry/android/z;->a()Lcom/flurry/android/AdImage;",
        "Lcom/flurry/android/z;->a()Ljava/util/Set;",
        "Lcom/flurry/android/z;->a()[Lcom/flurry/android/v;",
        "Lcom/flurry/android/z;->a()Lcom/flurry/android/e;",
        "Lcom/flurry/android/z;->a()Lcom/flurry/android/al;",
        "Lcom/flurry/android/z;->toString()Ljava/lang/String;",
        "Lcom/flurry/android/z;->a()Ljava/lang/String;",
        "Lcom/flurry/android/z;->a()Z",
        "Lcom/flurry/android/z;->a()J",
        "Lcom/flurry/android/z;->a()Lcom/flurry/android/c;",
        "Lcom/flurry/android/z;->a()V"
    ],
    "Lcom/flurry/android/CallbackEvent;": [
        "Lcom/flurry/android/CallbackEvent;->setMessage()V"
    ],
    "Lcom/flurry/android/AppCircleCallback;": [
        "Lcom/flurry/android/AppCircleCallback;->onAdsUpdated()V",
        "Lcom/flurry/android/AppCircleCallback;->onMarketAppLaunchError()V"
    ],
    "Ljavax/net/ssl/SSLContext;": [
        "Ljavax/net/ssl/SSLContext;->getInstance()Ljavax/net/ssl/SSLContext;",
        "Ljavax/net/ssl/SSLContext;->getSocketFactory()Ljavax/net/ssl/SSLSocketFactory;"
    ],
    "Ljavax/net/ssl/SSLSocketFactory;": [
        "Ljavax/net/ssl/SSLSocketFactory;->createSocket()Ljava/net/Socket;"
    ],
    "Lcom/flurry/android/w;": [
        "Lcom/flurry/android/w;->removeAllViews()V",
        "Lcom/flurry/android/w;->a()V",
        "Lcom/flurry/android/w;->a()Ljava/util/List;",
        "Lcom/flurry/android/w;->setGravity()V",
        "Lcom/flurry/android/w;->setOrientation()V",
        "Lcom/flurry/android/w;->refreshDrawableState()V",
        "Lcom/flurry/android/w;->getId()I",
        "Lcom/flurry/android/w;->setId()V",
        "Lcom/flurry/android/w;->addView()V"
    ],
    "Lcom/flurry/android/y;": [
        "Lcom/flurry/android/y;->a()V",
        "Lcom/flurry/android/y;->setLayoutParams()V",
        "Lcom/flurry/android/y;->a()Lcom/flurry/android/p;",
        "Lcom/flurry/android/y;->setBackgroundDrawable()V",
        "Lcom/flurry/android/y;->setFocusable()V",
        "Lcom/flurry/android/y;->addView()V",
        "Lcom/flurry/android/y;->setOnClickListener()V"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Lcom/flurry/android/InstallReceiver;": [
        "Lcom/flurry/android/InstallReceiver;->a()Ljava/util/Map;",
        "Lcom/flurry/android/InstallReceiver;->a()V",
        "Lcom/flurry/android/InstallReceiver;->a()Ljava/io/File;"
    ],
    "Lcom/flurry/android/AppCircle;": [
        "Lcom/flurry/android/AppCircle;->getOffer()Lcom/flurry/android/Offer;",
        "Lcom/flurry/android/AppCircle;->openCatalog()V"
    ],
    "Landroid/graphics/NinePatch;": [
        "Landroid/graphics/NinePatch;->isNinePatchChunk()Z"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->create()Landroid/graphics/Typeface;"
    ],
    "Ljava/security/KeyStore;": [
        "Ljava/security/KeyStore;->getDefaultType()Ljava/lang/String;",
        "Ljava/security/KeyStore;->load()V",
        "Ljava/security/KeyStore;->getInstance()Ljava/security/KeyStore;"
    ],
    "Lorg/apache/http/conn/scheme/PlainSocketFactory;": [
        "Lorg/apache/http/conn/scheme/PlainSocketFactory;->createSocket()Ljava/net/Socket;",
        "Lorg/apache/http/conn/scheme/PlainSocketFactory;->getSocketFactory()Lorg/apache/http/conn/scheme/PlainSocketFactory;"
    ],
    "Lorg/apache/http/conn/scheme/SchemeRegistry;": [
        "Lorg/apache/http/conn/scheme/SchemeRegistry;->get()Lorg/apache/http/conn/scheme/Scheme;",
        "Lorg/apache/http/conn/scheme/SchemeRegistry;->register()Lorg/apache/http/conn/scheme/Scheme;",
        "Lorg/apache/http/conn/scheme/SchemeRegistry;->getScheme()Lorg/apache/http/conn/scheme/Scheme;"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->elapsedRealtime()J"
    ],
    "Lcom/flurry/android/i;": [
        "Lcom/flurry/android/i;->a()V",
        "Lcom/flurry/android/i;->a()Z",
        "Lcom/flurry/android/i;->a()[B"
    ],
    "Lorg/apache/http/entity/ByteArrayEntity;": [
        "Lorg/apache/http/entity/ByteArrayEntity;->setContentType()V"
    ],
    "Lorg/apache/http/params/HttpParams;": [
        "Lorg/apache/http/params/HttpParams;->setParameter()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/params/HttpParams;->setLongParameter()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/params/HttpParams;->isParameterTrue()Z",
        "Lorg/apache/http/params/HttpParams;->isParameterFalse()Z",
        "Lorg/apache/http/params/HttpParams;->getLongParameter()J",
        "Lorg/apache/http/params/HttpParams;->removeParameter()Z",
        "Lorg/apache/http/params/HttpParams;->getParameter()Ljava/lang/Object;",
        "Lorg/apache/http/params/HttpParams;->setBooleanParameter()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/params/HttpParams;->copy()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/params/HttpParams;->getBooleanParameter()Z",
        "Lorg/apache/http/params/HttpParams;->setIntParameter()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/params/HttpParams;->getIntParameter()I"
    ],
    "Landroid/provider/Settings$System;": [
        "Landroid/provider/Settings$System;->getString()Ljava/lang/String;"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;",
        "Landroid/location/LocationManager;->requestLocationUpdates()V",
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getAccuracy()F"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->hashCode()I",
        "Ljava/util/Date;->getTime()J",
        "Ljava/util/Date;->equals()Z",
        "Ljava/util/Date;->getYear()I",
        "Ljava/util/Date;->getHours()I",
        "Ljava/util/Date;->setTime()V"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toByteArray()[B",
        "Lorg/apache/http/util/EntityUtils;->getContentCharSet()Ljava/lang/String;",
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;"
    ],
    "Ljava/net/UnknownHostException;": [
        "Ljava/net/UnknownHostException;->getMessage()Ljava/lang/String;",
        "Ljava/net/UnknownHostException;->printStackTrace()V"
    ],
    "Lcom/flurry/android/Offer;": [
        "Lcom/flurry/android/Offer;->getId()J"
    ],
    "Ljava/lang/IllegalArgumentException;": [
        "Ljava/lang/IllegalArgumentException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/tapjoy/TJCOffersWebView;": [
        "Lcom/tapjoy/TJCOffersWebView;->getIntent()Landroid/content/Intent;",
        "Lcom/tapjoy/TJCOffersWebView;->requestWindowFeature()Z",
        "Lcom/tapjoy/TJCOffersWebView;->a()Landroid/widget/ProgressBar;",
        "Lcom/tapjoy/TJCOffersWebView;->startActivity()V",
        "Lcom/tapjoy/TJCOffersWebView;->a()Landroid/app/Dialog;",
        "Lcom/tapjoy/TJCOffersWebView;->setContentView()V",
        "Lcom/tapjoy/TJCOffersWebView;->a()Ljava/lang/String;"
    ],
    "Lcom/tapjoy/TapjoyFeaturedAppWebView;": [
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->a()Ljava/lang/String;",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->requestWindowFeature()Z",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->finish()V",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->a()Landroid/widget/ProgressBar;",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->startActivity()V",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->a()V",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->getIntent()Landroid/content/Intent;",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->setContentView()V",
        "Lcom/tapjoy/TapjoyFeaturedAppWebView;->a()Landroid/webkit/WebView;"
    ],
    "Lcom/tapjoy/c;": [
        "Lcom/tapjoy/c;->a()Ljava/lang/Boolean;",
        "Lcom/tapjoy/c;->execute()Landroid/os/AsyncTask;"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Lcom/EUDbgb/E;": [
        "Lcom/EUDbgb/E;->a()Landroid/os/Handler;",
        "Lcom/EUDbgb/E;->a()I",
        "Lcom/EUDbgb/E;->a()Landroid/os/Bundle;",
        "Lcom/EUDbgb/E;->a()Z",
        "Lcom/EUDbgb/E;->getApplicationContext()Landroid/content/Context;",
        "Lcom/EUDbgb/E;->a()J",
        "Lcom/EUDbgb/E;->stopSelf()V",
        "Lcom/EUDbgb/E;->a()Landroid/graphics/Bitmap;",
        "Lcom/EUDbgb/E;->a()V",
        "Lcom/EUDbgb/E;->getSystemService()Ljava/lang/Object;"
    ],
    "Lcom/EUDbgb/au;": [
        "Lcom/EUDbgb/au;->a()Ljava/lang/String;",
        "Lcom/EUDbgb/au;->a()Lorg/json/JSONObject;",
        "Lcom/EUDbgb/au;->a()Z",
        "Lcom/EUDbgb/au;->a()Ljava/lang/Long;",
        "Lcom/EUDbgb/au;->a()Ljava/util/Date;",
        "Lcom/EUDbgb/au;->a()Landroid/graphics/drawable/Drawable;",
        "Lcom/EUDbgb/au;->a()Landroid/graphics/Bitmap;",
        "Lcom/EUDbgb/au;->a()I",
        "Lcom/EUDbgb/au;->a()V"
    ],
    "Lcom/EUDbgb/A;": [
        "Lcom/EUDbgb/A;->a()Ljava/lang/String;",
        "Lcom/EUDbgb/A;->findViewById()Landroid/view/View;",
        "Lcom/EUDbgb/A;->setRequestedOrientation()V",
        "Lcom/EUDbgb/A;->setContentView()V",
        "Lcom/EUDbgb/A;->finish()V",
        "Lcom/EUDbgb/A;->requestWindowFeature()Z",
        "Lcom/EUDbgb/A;->getApplicationContext()Landroid/content/Context;",
        "Lcom/EUDbgb/A;->getIntent()Landroid/content/Intent;",
        "Lcom/EUDbgb/A;->a()I"
    ],
    "Lcom/EUDbgb/j;": [
        "Lcom/EUDbgb/j;->start()V"
    ],
    "Lcom/EUDbgb/G;": [
        "Lcom/EUDbgb/G;->setContentView()V",
        "Lcom/EUDbgb/G;->finish()V",
        "Lcom/EUDbgb/G;->a()V",
        "Lcom/EUDbgb/G;->getApplicationContext()Landroid/content/Context;",
        "Lcom/EUDbgb/G;->getIntent()Landroid/content/Intent;",
        "Lcom/EUDbgb/G;->startActivity()V"
    ],
    "Lcom/EUDbgb/ac;": [
        "Lcom/EUDbgb/ac;->a()I",
        "Lcom/EUDbgb/ac;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcom/EUDbgb/ac;->a()Ljava/lang/String;",
        "Lcom/EUDbgb/ac;->a()Z",
        "Lcom/EUDbgb/ac;->a()V",
        "Lcom/EUDbgb/ac;->close()V",
        "Lcom/EUDbgb/ac;->onCreate()V"
    ],
    "Landroid/database/sqlite/SQLiteDatabase;": [
        "Landroid/database/sqlite/SQLiteDatabase;->execSQL()V",
        "Landroid/database/sqlite/SQLiteDatabase;->close()V",
        "Landroid/database/sqlite/SQLiteDatabase;->rawQuery()Landroid/database/Cursor;"
    ],
    "Lcom/EUDbgb/H;": [
        "Lcom/EUDbgb/H;->a()V"
    ],
    "Lcom/EUDbgb/B;": [
        "Lcom/EUDbgb/B;->a()V",
        "Lcom/EUDbgb/B;->a()Z"
    ],
    "Lcom/EUDbgb/ag;": [
        "Lcom/EUDbgb/ag;->start()V"
    ],
    "Landroid/text/format/Formatter;": [
        "Landroid/text/format/Formatter;->formatFileSize()Ljava/lang/String;"
    ],
    "Lcom/EUDbgb/l;": [
        "Lcom/EUDbgb/l;->start()V"
    ],
    "Lcom/EUDbgb/m;": [
        "Lcom/EUDbgb/m;->start()V"
    ],
    "Lcom/EUDbgb/q;": [
        "Lcom/EUDbgb/q;->start()V"
    ],
    "Lcom/EUDbgb/n;": [
        "Lcom/EUDbgb/n;->start()V"
    ],
    "Lcom/EUDbgb/o;": [
        "Lcom/EUDbgb/o;->start()V"
    ],
    "Lcom/EUDbgb/p;": [
        "Lcom/EUDbgb/p;->start()V"
    ],
    "Lcom/EUDbgb/s;": [
        "Lcom/EUDbgb/s;->a()Ljava/lang/String;",
        "Lcom/EUDbgb/s;->a()[C",
        "Lcom/EUDbgb/s;->a()[B"
    ],
    "Landroid/os/Message;": [
        "Landroid/os/Message;->setData()V",
        "Landroid/os/Message;->getData()Landroid/os/Bundle;"
    ],
    "Lcom/EUDbgb/u;": [
        "Lcom/EUDbgb/u;->start()V"
    ],
    "Lcom/EUDbgb/C;": [
        "Lcom/EUDbgb/C;->getIntent()Landroid/content/Intent;",
        "Lcom/EUDbgb/C;->a()I",
        "Lcom/EUDbgb/C;->a()Landroid/widget/ImageView;",
        "Lcom/EUDbgb/C;->findViewById()Landroid/view/View;",
        "Lcom/EUDbgb/C;->a()Ljava/lang/String;",
        "Lcom/EUDbgb/C;->finish()V",
        "Lcom/EUDbgb/C;->setContentView()V",
        "Lcom/EUDbgb/C;->a()Z",
        "Lcom/EUDbgb/C;->requestWindowFeature()Z",
        "Lcom/EUDbgb/C;->a()V",
        "Lcom/EUDbgb/C;->a()Landroid/os/Handler;",
        "Lcom/EUDbgb/C;->getResources()Landroid/content/res/Resources;",
        "Lcom/EUDbgb/C;->a()Landroid/widget/Button;",
        "Lcom/EUDbgb/C;->getApplicationContext()Landroid/content/Context;"
    ],
    "Lcom/EUDbgb/v;": [
        "Lcom/EUDbgb/v;->start()V"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->getMessage()Ljava/lang/String;",
        "Ljava/io/UnsupportedEncodingException;->printStackTrace()V"
    ],
    "Lcom/EUDbgb/as;": [
        "Lcom/EUDbgb/as;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/conn/ClientConnectionManager;": [
        "Lorg/apache/http/conn/ClientConnectionManager;->releaseConnection()V",
        "Lorg/apache/http/conn/ClientConnectionManager;->shutdown()V",
        "Lorg/apache/http/conn/ClientConnectionManager;->requestConnection()Lorg/apache/http/conn/ClientConnectionRequest;",
        "Lorg/apache/http/conn/ClientConnectionManager;->getSchemeRegistry()Lorg/apache/http/conn/scheme/SchemeRegistry;"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->printStackTrace()V"
    ],
    "Lcom/EUDbgb/D;": [
        "Lcom/EUDbgb/D;->a()Ljava/lang/String;",
        "Lcom/EUDbgb/D;->getBaseContext()Landroid/content/Context;",
        "Lcom/EUDbgb/D;->requestWindowFeature()Z",
        "Lcom/EUDbgb/D;->a()Landroid/widget/TextView;",
        "Lcom/EUDbgb/D;->a()I",
        "Lcom/EUDbgb/D;->finish()V",
        "Lcom/EUDbgb/D;->setRequestedOrientation()V",
        "Lcom/EUDbgb/D;->getResources()Landroid/content/res/Resources;",
        "Lcom/EUDbgb/D;->getApplicationContext()Landroid/content/Context;",
        "Lcom/EUDbgb/D;->findViewById()Landroid/view/View;",
        "Lcom/EUDbgb/D;->startActivity()V",
        "Lcom/EUDbgb/D;->a()V",
        "Lcom/EUDbgb/D;->a()Z",
        "Lcom/EUDbgb/D;->setContentView()V"
    ],
    "Lcom/EUDbgb/x;": [
        "Lcom/EUDbgb/x;->start()V"
    ],
    "Lcom/EUDbgb/ar;": [
        "Lcom/EUDbgb/ar;->start()V"
    ],
    "Lcom/EUDbgb/aq;": [
        "Lcom/EUDbgb/aq;->start()V"
    ],
    "Lcom/EUDbgb/z;": [
        "Lcom/EUDbgb/z;->start()V"
    ],
    "Ljava/security/NoSuchAlgorithmException;": [
        "Ljava/security/NoSuchAlgorithmException;->printStackTrace()V",
        "Ljava/security/NoSuchAlgorithmException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/EUDbgb/F;": [
        "Lcom/EUDbgb/F;->getResources()Landroid/content/res/Resources;",
        "Lcom/EUDbgb/F;->requestWindowFeature()Z",
        "Lcom/EUDbgb/F;->a()V",
        "Lcom/EUDbgb/F;->finish()V",
        "Lcom/EUDbgb/F;->setRequestedOrientation()V",
        "Lcom/EUDbgb/F;->getPackageName()Ljava/lang/String;",
        "Lcom/EUDbgb/F;->getApplicationContext()Landroid/content/Context;",
        "Lcom/EUDbgb/F;->setContentView()V",
        "Lcom/EUDbgb/F;->findViewById()Landroid/view/View;",
        "Lcom/EUDbgb/F;->getIntent()Landroid/content/Intent;"
    ],
    "Lcom/EUDbgb/an;": [
        "Lcom/EUDbgb/an;->start()V"
    ],
    "Lcom/EUDbgb/aj;": [
        "Lcom/EUDbgb/aj;->start()V"
    ],
    "Lcom/EUDbgb/al;": [
        "Lcom/EUDbgb/al;->start()V"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onDestroy()V",
        "Landroid/app/Service;->onStart()V",
        "Landroid/app/Service;->onCreate()V"
    ],
    "Lcom/EUDbgb/ad;": [
        "Lcom/EUDbgb/ad;->start()V"
    ],
    "Lcom/EUDbgb/ai;": [
        "Lcom/EUDbgb/ai;->start()V"
    ],
    "Lcom/EUDbgb/at;": [
        "Lcom/EUDbgb/at;->a()Ljava/lang/String;"
    ],
    "Ljava/text/ParseException;": [
        "Ljava/text/ParseException;->getMessage()Ljava/lang/String;",
        "Ljava/text/ParseException;->printStackTrace()V"
    ],
    "Lorg/json/JSONTokener;": [
        "Lorg/json/JSONTokener;->nextValue()Ljava/lang/Object;"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->hashCode()I",
        "Ljava/net/InetAddress;->equals()Z",
        "Ljava/net/InetAddress;->getAllByName()[Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;",
        "Ljava/net/InetAddress;->getByName()Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getHostName()Ljava/lang/String;"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningTasks()Ljava/util/List;"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->getClassName()Ljava/lang/String;"
    ],
    "Lcom/EUDbgb/ao;": [
        "Lcom/EUDbgb/ao;->start()V"
    ],
    "Lcom/EUDbgb/ap;": [
        "Lcom/EUDbgb/ap;->start()V"
    ],
    "Ljava/util/concurrent/ArrayBlockingQueue;": [
        "Ljava/util/concurrent/ArrayBlockingQueue;->poll()Ljava/lang/Object;",
        "Ljava/util/concurrent/ArrayBlockingQueue;->offer()Z"
    ],
    "Lcom/apsalar/sdk/Apsalar;": [
        "Lcom/apsalar/sdk/Apsalar;->JSONevent()V"
    ],
    "Lcom/apsalar/sdk/ApsalarThread;": [
        "Lcom/apsalar/sdk/ApsalarThread;->setName()V",
        "Lcom/apsalar/sdk/ApsalarThread;->REST()V",
        "Lcom/apsalar/sdk/ApsalarThread;->setDaemon()V",
        "Lcom/apsalar/sdk/ApsalarThread;->hexDigest()Ljava/lang/String;",
        "Lcom/apsalar/sdk/ApsalarThread;->start()V",
        "Lcom/apsalar/sdk/ApsalarThread;->device_id()Ljava/lang/String;"
    ],
    "Ljava/util/UUID;": [
        "Ljava/util/UUID;->toString()Ljava/lang/String;",
        "Ljava/util/UUID;->randomUUID()Ljava/util/UUID;"
    ],
    "Lcom/apsalar/sdk/Activity;": [
        "Lcom/apsalar/sdk/Activity;->getIntent()Landroid/content/Intent;",
        "Lcom/apsalar/sdk/Activity;->load()V",
        "Lcom/apsalar/sdk/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/apsalar/sdk/Activity;->addContentView()V",
        "Lcom/apsalar/sdk/Activity;->seal()Ljava/lang/String;",
        "Lcom/apsalar/sdk/Activity;->getSystemService()Ljava/lang/Object;"
    ],
    "Lorg/apache/james/mime4j/MimeException;": [
        "Lorg/apache/james/mime4j/MimeException;->getMessage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/MimeException;->fillInStackTrace()Ljava/lang/Throwable;"
    ],
    "Lorg/apache/james/mime4j/util/ByteArrayBuffer;": [
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->append()V",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->clear()V",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->setLength()V",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->expand()V",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->buffer()[B",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->byteAt()B",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->toByteArray()[B",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->indexOf()I",
        "Lorg/apache/james/mime4j/util/ByteArrayBuffer;->length()I"
    ],
    "Lorg/apache/james/mime4j/util/ByteSequence;": [
        "Lorg/apache/james/mime4j/util/ByteSequence;->length()I",
        "Lorg/apache/james/mime4j/util/ByteSequence;->toByteArray()[B"
    ],
    "Lorg/apache/james/mime4j/util/ContentUtil;": [
        "Lorg/apache/james/mime4j/util/ContentUtil;->encode()Lorg/apache/james/mime4j/util/ByteSequence;",
        "Lorg/apache/james/mime4j/util/ContentUtil;->decode()Ljava/lang/String;"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->limit()I",
        "Ljava/nio/ByteBuffer;->position()I",
        "Ljava/nio/ByteBuffer;->get()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->wrap()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->array()[B",
        "Ljava/nio/ByteBuffer;->remaining()I"
    ],
    "Ljava/nio/CharBuffer;": [
        "Ljava/nio/CharBuffer;->wrap()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/util/StringArrayMap;": [
        "Lorg/apache/james/mime4j/util/StringArrayMap;->convertName()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/StringArrayMap;->addMapValue()V",
        "Lorg/apache/james/mime4j/util/StringArrayMap;->asStringEnum()Ljava/util/Enumeration;",
        "Lorg/apache/james/mime4j/util/StringArrayMap;->asStringArray()[Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/StringArrayMap;->asString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/StringArrayMap;->asMap()Ljava/util/Map;"
    ],
    "Lorg/apache/commons/logging/LogFactory;": [
        "Lorg/apache/commons/logging/LogFactory;->createFactoryStore()Ljava/util/Hashtable;",
        "Lorg/apache/commons/logging/LogFactory;->implementsLogFactory()Z",
        "Lorg/apache/commons/logging/LogFactory;->cacheFactory()V",
        "Lorg/apache/commons/logging/LogFactory;->getCachedFactory()Lorg/apache/commons/logging/LogFactory;",
        "Lorg/apache/commons/logging/LogFactory;->getSystemProperty()Ljava/lang/String;",
        "Lorg/apache/commons/logging/LogFactory;->getConfigurationFile()Ljava/util/Properties;",
        "Lorg/apache/commons/logging/LogFactory;->logHierarchy()V",
        "Lorg/apache/commons/logging/LogFactory;->getProperties()Ljava/util/Properties;",
        "Lorg/apache/commons/logging/LogFactory;->objectId()Ljava/lang/String;",
        "Lorg/apache/commons/logging/LogFactory;->newFactory()Lorg/apache/commons/logging/LogFactory;",
        "Lorg/apache/commons/logging/LogFactory;->getClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/LogFactory;->release()V",
        "Lorg/apache/commons/logging/LogFactory;->directGetContextClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/LogFactory;->logDiagnostic()V",
        "Lorg/apache/commons/logging/LogFactory;->getContextClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/LogFactory;->getContextClassLoaderInternal()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/LogFactory;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/logging/LogFactory;->logClassLoaderEnvironment()V",
        "Lorg/apache/commons/logging/LogFactory;->isDiagnosticsEnabled()Z",
        "Lorg/apache/commons/logging/LogFactory;->getFactory()Lorg/apache/commons/logging/LogFactory;",
        "Lorg/apache/commons/logging/LogFactory;->getLog()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/LogFactory;->getInstance()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/LogFactory;->setAttribute()V",
        "Lorg/apache/commons/logging/LogFactory;->logRawDiagnostic()V",
        "Lorg/apache/commons/logging/LogFactory;->getResources()Ljava/util/Enumeration;",
        "Lorg/apache/commons/logging/LogFactory;->trim()Ljava/lang/String;",
        "Lorg/apache/commons/logging/LogFactory;->getResourceAsStream()Ljava/io/InputStream;"
    ],
    "Lorg/apache/james/mime4j/util/MimeUtil;": [
        "Lorg/apache/james/mime4j/util/MimeUtil;->createUniqueBoundary()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->isSameMimeType()Z",
        "Lorg/apache/james/mime4j/util/MimeUtil;->nextCounterValue()I",
        "Lorg/apache/james/mime4j/util/MimeUtil;->isMessage()Z",
        "Lorg/apache/james/mime4j/util/MimeUtil;->unfold0()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->formatDate()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->isBase64Encoding()Z",
        "Lorg/apache/james/mime4j/util/MimeUtil;->isQuotedPrintableEncoded()Z",
        "Lorg/apache/james/mime4j/util/MimeUtil;->getHeaderParams()Ljava/util/Map;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->isMultipart()Z",
        "Lorg/apache/james/mime4j/util/MimeUtil;->fold()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->createUniqueMessageId()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->unfold()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/MimeUtil;->indexOfWsp()I"
    ],
    "Ljava/lang/ThreadLocal;": [
        "Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/logging/Log;": [
        "Lorg/apache/commons/logging/Log;->info()V",
        "Lorg/apache/commons/logging/Log;->isDebugEnabled()Z",
        "Lorg/apache/commons/logging/Log;->debug()V",
        "Lorg/apache/commons/logging/Log;->isErrorEnabled()Z",
        "Lorg/apache/commons/logging/Log;->warn()V",
        "Lorg/apache/commons/logging/Log;->error()V",
        "Lorg/apache/commons/logging/Log;->isInfoEnabled()Z",
        "Lorg/apache/commons/logging/Log;->isWarnEnabled()Z"
    ],
    "Lorg/apache/james/mime4j/util/CharsetUtil$Charset;": [
        "Lorg/apache/james/mime4j/util/CharsetUtil$Charset;->access$300()[Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/CharsetUtil$Charset;->access$100()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/CharsetUtil$Charset;->access$200()Ljava/lang/String;"
    ],
    "Ljava/util/SortedSet;": [
        "Ljava/util/SortedSet;->add()Z",
        "Ljava/util/SortedSet;->contains()Z"
    ],
    "Lorg/apache/james/mime4j/util/CharsetUtil;": [
        "Lorg/apache/james/mime4j/util/CharsetUtil;->isDecodingSupported()Z",
        "Lorg/apache/james/mime4j/util/CharsetUtil;->isASCII()Z",
        "Lorg/apache/james/mime4j/util/CharsetUtil;->getCharset()Ljava/nio/charset/Charset;",
        "Lorg/apache/james/mime4j/util/CharsetUtil;->toMimeCharset()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/CharsetUtil;->toJavaCharset()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/util/CharsetUtil;->isWhitespace()Z",
        "Lorg/apache/james/mime4j/util/CharsetUtil;->isEncodingSupported()Z"
    ],
    "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;": [
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->encode()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->escape()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->softBreak()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->plain()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->clearPending()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->writePending()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->write()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->encodeChunk()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->completeEncoding()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->lineBreak()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableEncoder;->flushOutput()V"
    ],
    "Lorg/apache/james/mime4j/codec/Base64OutputStream;": [
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->flush0()V",
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->writePad()V",
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->writeLineSeparator()V",
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->close0()V",
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->close()V",
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->checkLineSeparator()V",
        "Lorg/apache/james/mime4j/codec/Base64OutputStream;->write0()V"
    ],
    "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;": [
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->add()Z",
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->isEmpty()Z",
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->increment()I",
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->iterator()Ljava/util/Iterator;",
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->decrement()I",
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->remove()B",
        "Lorg/apache/james/mime4j/codec/UnboundedFifoByteBuffer;->size()I"
    ],
    "Ljava/util/BitSet;": [
        "Ljava/util/BitSet;->get()Z",
        "Ljava/util/BitSet;->set()V"
    ],
    "Lorg/apache/james/mime4j/codec/EncoderUtil;": [
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->determineCharset()Ljava/nio/charset/Charset;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->qEncodedLength()I",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->hasToBeEncoded()Z",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeEncodedWord()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->isDotAtomText()Z",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encode()[B",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->determineEncoding()Lorg/apache/james/mime4j/codec/EncoderUtil$Encoding;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->quote()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeAddressDisplayName()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeB()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->isToken()Z",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->isAtomPhrase()Z",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeAddressLocalPart()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->bEncodedLength()I",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->hexDigit()C",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeHeaderParameter()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeQ()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/EncoderUtil;->encodeIfNecessary()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/codec/QuotedPrintableOutputStream;": [
        "Lorg/apache/james/mime4j/codec/QuotedPrintableOutputStream;->write()V"
    ],
    "Lorg/apache/james/mime4j/codec/DecoderUtil;": [
        "Lorg/apache/james/mime4j/codec/DecoderUtil;->decodeQ()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/DecoderUtil;->decodeBaseQuotedPrintable()[B",
        "Lorg/apache/james/mime4j/codec/DecoderUtil;->decodeEncodedWord()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/DecoderUtil;->decodeEncodedWords()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/codec/DecoderUtil;->decodeBase64()[B",
        "Lorg/apache/james/mime4j/codec/DecoderUtil;->decodeB()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/codec/Base64InputStream;": [
        "Lorg/apache/james/mime4j/codec/Base64InputStream;->decodePad()I",
        "Lorg/apache/james/mime4j/codec/Base64InputStream;->read()I",
        "Lorg/apache/james/mime4j/codec/Base64InputStream;->handleUnexpectedEof()V",
        "Lorg/apache/james/mime4j/codec/Base64InputStream;->read0()I",
        "Lorg/apache/james/mime4j/codec/Base64InputStream;->handleUnexpecedPad()V"
    ],
    "Lorg/apache/james/mime4j/codec/QuotedPrintableInputStream;": [
        "Lorg/apache/james/mime4j/codec/QuotedPrintableInputStream;->asciiCharToNumericValue()B",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableInputStream;->populatePushbackQueue()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableInputStream;->fillBuffer()V",
        "Lorg/apache/james/mime4j/codec/QuotedPrintableInputStream;->read()I"
    ],
    "Lorg/apache/james/mime4j/codec/ByteQueue;": [
        "Lorg/apache/james/mime4j/codec/ByteQueue;->dequeue()B",
        "Lorg/apache/james/mime4j/codec/ByteQueue;->clear()V",
        "Lorg/apache/james/mime4j/codec/ByteQueue;->enqueue()V",
        "Lorg/apache/james/mime4j/codec/ByteQueue;->count()I"
    ],
    "Lorg/apache/james/mime4j/codec/CodecUtil;": [
        "Lorg/apache/james/mime4j/codec/CodecUtil;->wrapBase64()Ljava/io/OutputStream;",
        "Lorg/apache/james/mime4j/codec/CodecUtil;->copy()V",
        "Lorg/apache/james/mime4j/codec/CodecUtil;->wrapQuotedPrintable()Ljava/io/OutputStream;"
    ],
    "Lorg/apache/james/mime4j/descriptor/BodyDescriptor;": [
        "Lorg/apache/james/mime4j/descriptor/BodyDescriptor;->getCharset()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/BodyDescriptor;->getMimeType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/BodyDescriptor;->getTransferEncoding()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/BodyDescriptor;->getSubType()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/parser/Field;": [
        "Lorg/apache/james/mime4j/parser/Field;->getName()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/Field;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/Field;->getRaw()Lorg/apache/james/mime4j/util/ByteSequence;"
    ],
    "Lorg/apache/james/mime4j/descriptor/DefaultBodyDescriptor;": [
        "Lorg/apache/james/mime4j/descriptor/DefaultBodyDescriptor;->parseContentType()V",
        "Lorg/apache/james/mime4j/descriptor/DefaultBodyDescriptor;->addField()V"
    ],
    "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;": [
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseContentDescription()V",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseLocation()V",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseDate()Lorg/apache/james/mime4j/field/datetime/DateTime;",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseMD5()V",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseLanguage()V",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseContentDisposition()V",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseContentId()V",
        "Lorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor;->parseMimeVersion()V"
    ],
    "Ljava/lang/NumberFormatException;": [
        "Ljava/lang/NumberFormatException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->parseAll()Lorg/apache/james/mime4j/field/datetime/DateTime;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->jj_la1_1()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->month()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->date_time()Lorg/apache/james/mime4j/field/datetime/DateTime;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->zone()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->hour()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->jj_consume_token()Lorg/apache/james/mime4j/field/datetime/parser/Token;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->second()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->getMilitaryZoneOffset()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->parseDigits()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->parseLine()Lorg/apache/james/mime4j/field/datetime/DateTime;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->generateParseException()Lorg/apache/james/mime4j/field/datetime/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->jj_ntk()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->day()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->obs_zone()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->day_of_week()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->date()Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Date;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->minute()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->year()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser;->time()Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Time;"
    ],
    "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;": [
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->jj_consume_token()Lorg/apache/james/mime4j/field/language/parser/Token;",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->jj_ntk()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->generateParseException()Lorg/apache/james/mime4j/field/language/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->language()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->doParse()Ljava/util/List;",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParser;->parse()Ljava/util/List;"
    ],
    "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;": [
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->parse()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->setFoldingPreserved()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->generateParseException()Lorg/apache/james/mime4j/field/structured/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->doParse()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->jj_consume_token()Lorg/apache/james/mime4j/field/structured/parser/Token;",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParser;->jj_ntk()I"
    ],
    "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;": [
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->getMajorVersion()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->parse()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->jj_ntk()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->getMinorVersion()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->jj_consume_token()Lorg/apache/james/mime4j/field/mimeversion/parser/Token;",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParser;->generateParseException()Lorg/apache/james/mime4j/field/mimeversion/parser/ParseException;"
    ],
    "Lorg/apache/james/mime4j/storage/MultiReferenceStorage;": [
        "Lorg/apache/james/mime4j/storage/MultiReferenceStorage;->incrementCounter()V",
        "Lorg/apache/james/mime4j/storage/MultiReferenceStorage;->addReference()V",
        "Lorg/apache/james/mime4j/storage/MultiReferenceStorage;->delete()V",
        "Lorg/apache/james/mime4j/storage/MultiReferenceStorage;->decrementCounter()Z",
        "Lorg/apache/james/mime4j/storage/MultiReferenceStorage;->getInputStream()Ljava/io/InputStream;"
    ],
    "Lorg/apache/james/mime4j/storage/Storage;": [
        "Lorg/apache/james/mime4j/storage/Storage;->getInputStream()Ljava/io/InputStream;",
        "Lorg/apache/james/mime4j/storage/Storage;->delete()V"
    ],
    "Ljavax/crypto/KeyGenerator;": [
        "Ljavax/crypto/KeyGenerator;->getInstance()Ljavax/crypto/KeyGenerator;",
        "Ljavax/crypto/KeyGenerator;->generateKey()Ljavax/crypto/SecretKey;"
    ],
    "Ljavax/crypto/SecretKey;": [
        "Ljavax/crypto/SecretKey;->getEncoded()[B"
    ],
    "Lorg/apache/james/mime4j/storage/CipherStorageProvider;": [
        "Lorg/apache/james/mime4j/storage/CipherStorageProvider;->getSecretKeySpec()Ljavax/crypto/spec/SecretKeySpec;"
    ],
    "Lorg/apache/james/mime4j/storage/StorageProvider;": [
        "Lorg/apache/james/mime4j/storage/StorageProvider;->createStorageOutputStream()Lorg/apache/james/mime4j/storage/StorageOutputStream;",
        "Lorg/apache/james/mime4j/storage/StorageProvider;->store()Lorg/apache/james/mime4j/storage/Storage;"
    ],
    "Lorg/apache/james/mime4j/storage/AbstractStorageProvider;": [
        "Lorg/apache/james/mime4j/storage/AbstractStorageProvider;->createStorageOutputStream()Lorg/apache/james/mime4j/storage/StorageOutputStream;"
    ],
    "Lorg/apache/james/mime4j/storage/StorageOutputStream;": [
        "Lorg/apache/james/mime4j/storage/StorageOutputStream;->toStorage0()Lorg/apache/james/mime4j/storage/Storage;",
        "Lorg/apache/james/mime4j/storage/StorageOutputStream;->close()V",
        "Lorg/apache/james/mime4j/storage/StorageOutputStream;->toStorage()Lorg/apache/james/mime4j/storage/Storage;",
        "Lorg/apache/james/mime4j/storage/StorageOutputStream;->write0()V"
    ],
    "Lorg/apache/james/mime4j/field/MailboxListField;": [
        "Lorg/apache/james/mime4j/field/MailboxListField;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/MailboxListField;->getParseException()Lorg/apache/james/mime4j/field/address/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/MailboxListField;->parse()V",
        "Lorg/apache/james/mime4j/field/MailboxListField;->getMailboxList()Lorg/apache/james/mime4j/field/address/MailboxList;"
    ],
    "Lorg/apache/james/mime4j/field/address/AddressList;": [
        "Lorg/apache/james/mime4j/field/address/AddressList;->print()V",
        "Lorg/apache/james/mime4j/field/address/AddressList;->parse()Lorg/apache/james/mime4j/field/address/AddressList;",
        "Lorg/apache/james/mime4j/field/address/AddressList;->flatten()Lorg/apache/james/mime4j/field/address/MailboxList;",
        "Lorg/apache/james/mime4j/field/address/AddressList;->get()Lorg/apache/james/mime4j/field/address/Address;"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/address/parser/ParseException;->add_escapes()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/parser/ParseException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/Fields;": [
        "Lorg/apache/james/mime4j/field/Fields;->isValidDispositionType()Z",
        "Lorg/apache/james/mime4j/field/Fields;->mailboxList0()Lorg/apache/james/mime4j/field/MailboxListField;",
        "Lorg/apache/james/mime4j/field/Fields;->date()Lorg/apache/james/mime4j/field/DateTimeField;",
        "Lorg/apache/james/mime4j/field/Fields;->parse()Lorg/apache/james/mime4j/parser/Field;",
        "Lorg/apache/james/mime4j/field/Fields;->encodeAddresses()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/Fields;->contentType()Lorg/apache/james/mime4j/field/ContentTypeField;",
        "Lorg/apache/james/mime4j/field/Fields;->date0()Lorg/apache/james/mime4j/field/DateTimeField;",
        "Lorg/apache/james/mime4j/field/Fields;->mailbox0()Lorg/apache/james/mime4j/field/MailboxField;",
        "Lorg/apache/james/mime4j/field/Fields;->contentDisposition()Lorg/apache/james/mime4j/field/ContentDispositionField;",
        "Lorg/apache/james/mime4j/field/Fields;->addressList()Lorg/apache/james/mime4j/field/AddressListField;",
        "Lorg/apache/james/mime4j/field/Fields;->messageId()Lorg/apache/james/mime4j/parser/Field;",
        "Lorg/apache/james/mime4j/field/Fields;->checkValidFieldName()V",
        "Lorg/apache/james/mime4j/field/Fields;->subject()Lorg/apache/james/mime4j/field/UnstructuredField;",
        "Lorg/apache/james/mime4j/field/Fields;->contentTransferEncoding()Lorg/apache/james/mime4j/field/ContentTransferEncodingField;",
        "Lorg/apache/james/mime4j/field/Fields;->isValidMimeType()Z",
        "Lorg/apache/james/mime4j/field/Fields;->mailboxList()Lorg/apache/james/mime4j/field/MailboxListField;",
        "Lorg/apache/james/mime4j/field/Fields;->addressList0()Lorg/apache/james/mime4j/field/AddressListField;",
        "Lorg/apache/james/mime4j/field/Fields;->mailbox()Lorg/apache/james/mime4j/field/MailboxField;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->find()Z",
        "Ljava/util/regex/Matcher;->matches()Z",
        "Ljava/util/regex/Matcher;->group()Ljava/lang/String;",
        "Ljava/util/regex/Matcher;->end()I"
    ],
    "Ljava/lang/Iterable;": [
        "Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;"
    ],
    "Lorg/apache/james/mime4j/field/address/Address;": [
        "Lorg/apache/james/mime4j/field/address/Address;->getEncodedString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Address;->parse()Lorg/apache/james/mime4j/field/address/Address;",
        "Lorg/apache/james/mime4j/field/address/Address;->addMailboxesTo()V",
        "Lorg/apache/james/mime4j/field/address/Address;->doAddMailboxesTo()V",
        "Lorg/apache/james/mime4j/field/address/Address;->getDisplayString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Address;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/FieldParser;": [
        "Lorg/apache/james/mime4j/field/FieldParser;->parse()Lorg/apache/james/mime4j/field/ParsedField;"
    ],
    "Lorg/apache/james/mime4j/field/DateTimeField;": [
        "Lorg/apache/james/mime4j/field/DateTimeField;->getDate()Ljava/util/Date;",
        "Lorg/apache/james/mime4j/field/DateTimeField;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/DateTimeField;->getParseException()Lorg/apache/james/mime4j/field/datetime/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/DateTimeField;->parse()V"
    ],
    "Lorg/apache/james/mime4j/field/datetime/DateTime;": [
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->convertToYear()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getDay()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getHour()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getYear()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->toString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getDate()Ljava/util/Date;",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getTimeZone()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getMonth()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getMinute()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->getSecond()I",
        "Lorg/apache/james/mime4j/field/datetime/DateTime;->convertToDate()Ljava/util/Date;"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/ParseException;->add_escapes()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/ParseException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/TokenMgrError;->getMessage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/TokenMgrError;->addEscapes()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/TokenMgrError;->LexicalError()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/DefaultFieldParser;": [
        "Lorg/apache/james/mime4j/field/DefaultFieldParser;->parse()Lorg/apache/james/mime4j/field/ParsedField;",
        "Lorg/apache/james/mime4j/field/DefaultFieldParser;->setFieldParser()V"
    ],
    "Lorg/apache/james/mime4j/field/AbstractField;": [
        "Lorg/apache/james/mime4j/field/AbstractField;->parse()Lorg/apache/james/mime4j/field/ParsedField;",
        "Lorg/apache/james/mime4j/field/AbstractField;->getParseException()Lorg/apache/james/mime4j/field/ParseException;"
    ],
    "Lorg/apache/james/mime4j/field/MailboxField;": [
        "Lorg/apache/james/mime4j/field/MailboxField;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/MailboxField;->getParseException()Lorg/apache/james/mime4j/field/address/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/MailboxField;->parse()V",
        "Lorg/apache/james/mime4j/field/MailboxField;->getMailbox()Lorg/apache/james/mime4j/field/address/Mailbox;"
    ],
    "Lorg/apache/james/mime4j/field/address/MailboxList;": [
        "Lorg/apache/james/mime4j/field/address/MailboxList;->iterator()Ljava/util/Iterator;",
        "Lorg/apache/james/mime4j/field/address/MailboxList;->size()I",
        "Lorg/apache/james/mime4j/field/address/MailboxList;->get()Lorg/apache/james/mime4j/field/address/Mailbox;"
    ],
    "Lorg/apache/james/mime4j/field/AddressListField;": [
        "Lorg/apache/james/mime4j/field/AddressListField;->getAddressList()Lorg/apache/james/mime4j/field/address/AddressList;",
        "Lorg/apache/james/mime4j/field/AddressListField;->getParseException()Lorg/apache/james/mime4j/field/address/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/AddressListField;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/AddressListField;->parse()V"
    ],
    "Lorg/apache/james/mime4j/field/ContentTypeField;": [
        "Lorg/apache/james/mime4j/field/ContentTypeField;->getParseException()Lorg/apache/james/mime4j/field/contenttype/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->getMimeType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->parse()V",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->isMimeType()Z",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->getBoundary()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->getCharset()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->getParameter()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentTypeField;->isMultipart()Z"
    ],
    "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;": [
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->generateParseException()Lorg/apache/james/mime4j/field/contenttype/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->jj_ntk()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->parseAll()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->getType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->getParamValues()Ljava/util/List;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->value()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->getSubType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->getParamNames()Ljava/util/List;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->parseLine()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->jj_consume_token()Lorg/apache/james/mime4j/field/contenttype/parser/Token;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->parameter()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParser;->parse()V"
    ],
    "Lorg/apache/james/mime4j/field/contenttype/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/contenttype/parser/ParseException;->getMessage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ParseException;->add_escapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/contenttype/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/contenttype/parser/TokenMgrError;->getMessage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/TokenMgrError;->LexicalError()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/TokenMgrError;->addEscapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/ContentTransferEncodingField;": [
        "Lorg/apache/james/mime4j/field/ContentTransferEncodingField;->getEncoding()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/DelegatingFieldParser;": [
        "Lorg/apache/james/mime4j/field/DelegatingFieldParser;->getParser()Lorg/apache/james/mime4j/field/FieldParser;"
    ],
    "Lorg/apache/james/mime4j/field/ContentDispositionField;": [
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->getDispositionType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->getParameter()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->getParameters()Ljava/util/Map;",
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->getBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->parse()V",
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->parseDate()Ljava/util/Date;",
        "Lorg/apache/james/mime4j/field/ContentDispositionField;->getFilename()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;": [
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->getDispositionType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->parseAll()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->generateParseException()Lorg/apache/james/mime4j/field/contentdisposition/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->jj_ntk()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->parameter()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->parse()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->value()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->getParamValues()Ljava/util/List;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->jj_consume_token()Lorg/apache/james/mime4j/field/contentdisposition/parser/Token;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->getParamNames()Ljava/util/List;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParser;->parseLine()V"
    ],
    "Lorg/apache/james/mime4j/field/ParseException;": [
        "Lorg/apache/james/mime4j/field/ParseException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/contentdisposition/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/TokenMgrError;->addEscapes()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/TokenMgrError;->LexicalError()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/TokenMgrError;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/UnstructuredField;": [
        "Lorg/apache/james/mime4j/field/UnstructuredField;->parse()V",
        "Lorg/apache/james/mime4j/field/UnstructuredField;->getValue()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/UnstructuredField;->getBody()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/mimeversion/parser/Token;",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjStopStringLiteralDfa_3()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveNfa_3()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjStartNfaWithStates_0()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/mimeversion/parser/Token;",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjStopStringLiteralDfa_2()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->TokenLexicalActions()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->MoreLexicalActions()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveStringLiteralDfa0_1()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveNfa_2()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjStopAtPos()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->jjMoveStringLiteralDfa0_3()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/MimeVersionParserTokenManager;->ReInitRounds()V"
    ],
    "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->UpdateLineColumn()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->BeginToken()C",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->getBeginColumn()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->ReInit()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->readChar()C",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/SimpleCharStream;->GetImage()Ljava/lang/String;"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->addElement()V",
        "Ljava/util/Vector;->elements()Ljava/util/Enumeration;",
        "Ljava/util/Vector;->size()I",
        "Ljava/util/Vector;->elementAt()Ljava/lang/Object;",
        "Ljava/util/Vector;->removeAllElements()V"
    ],
    "Lorg/apache/james/mime4j/field/mimeversion/parser/Token;": [
        "Lorg/apache/james/mime4j/field/mimeversion/parser/Token;->newToken()Lorg/apache/james/mime4j/field/mimeversion/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/mimeversion/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/mimeversion/parser/TokenMgrError;->LexicalError()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/mimeversion/parser/TokenMgrError;->addEscapes()Ljava/lang/String;"
    ],
    "Ljava/lang/Error;": [
        "Ljava/lang/Error;->printStackTrace()V",
        "Ljava/lang/Error;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/mimeversion/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/mimeversion/parser/ParseException;->add_escapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/structured/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/structured/parser/ParseException;->add_escapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/structured/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/structured/parser/TokenMgrError;->addEscapes()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/structured/parser/TokenMgrError;->LexicalError()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/structured/parser/Token;",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjStopStringLiteralDfa_2()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/structured/parser/Token;",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveStringLiteralDfa0_1()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveNfa_3()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveNfa_2()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->TokenLexicalActions()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveStringLiteralDfa0_3()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->SkipLexicalActions()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->ReInitRounds()V",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjStopAtPos()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjStopStringLiteralDfa_3()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/structured/parser/StructuredFieldParserTokenManager;->MoreLexicalActions()V"
    ],
    "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->readChar()C",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->BeginToken()C",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->GetImage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->ReInit()V",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->getBeginColumn()I",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/structured/parser/SimpleCharStream;->UpdateLineColumn()V"
    ],
    "Lorg/apache/james/mime4j/field/structured/parser/Token;": [
        "Lorg/apache/james/mime4j/field/structured/parser/Token;->newToken()Lorg/apache/james/mime4j/field/structured/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/address/Mailbox;": [
        "Lorg/apache/james/mime4j/field/address/Mailbox;->toString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Mailbox;->getDisplayString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Mailbox;->getEncodedString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Mailbox;->getRoute()Lorg/apache/james/mime4j/field/address/DomainList;",
        "Lorg/apache/james/mime4j/field/address/Mailbox;->getDomain()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Mailbox;->getLocalPart()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/Mailbox;->getCanonicalizedAddress()Ljava/lang/Object;"
    ],
    "Lorg/apache/james/mime4j/field/address/Builder;": [
        "Lorg/apache/james/mime4j/field/address/Builder;->buildAddrSpec()Lorg/apache/james/mime4j/field/address/Mailbox;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildRoute()Lorg/apache/james/mime4j/field/address/DomainList;",
        "Lorg/apache/james/mime4j/field/address/Builder;->getInstance()Lorg/apache/james/mime4j/field/address/Builder;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildNameAddr()Lorg/apache/james/mime4j/field/address/Mailbox;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildMailbox()Lorg/apache/james/mime4j/field/address/Mailbox;",
        "Lorg/apache/james/mime4j/field/address/Builder;->addSpecials()V",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildAngleAddr()Lorg/apache/james/mime4j/field/address/Mailbox;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildGroupBody()Lorg/apache/james/mime4j/field/address/MailboxList;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildAddress()Lorg/apache/james/mime4j/field/address/Address;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildAddressList()Lorg/apache/james/mime4j/field/address/AddressList;",
        "Lorg/apache/james/mime4j/field/address/Builder;->buildString()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;": [
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_consume_token()Lorg/apache/james/mime4j/field/address/parser/Token;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_2_1()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jjtreeOpenNodeScope()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->address_list()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_la1_1()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_rescan_token()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_scan_token()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->phrase()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->generateParseException()Lorg/apache/james/mime4j/field/address/parser/ParseException;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3_2()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseAddress()Lorg/apache/james/mime4j/field/address/parser/ASTaddress;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseAddressList0()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseLine()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->route()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jjtreeCloseNodeScope()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseMailbox()Lorg/apache/james/mime4j/field/address/parser/ASTmailbox;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->domain()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3R_13()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->address()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_save()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->name_addr()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3R_12()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->ReInit()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_2_2()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseAddressList()Lorg/apache/james/mime4j/field/address/parser/ASTaddress_list;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->getToken()Lorg/apache/james/mime4j/field/address/parser/Token;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_la1_0()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->angle_addr()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3R_10()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseMailbox0()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->mailbox()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3R_9()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->local_part()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_ntk()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3R_11()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_add_error_token()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->group_body()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3R_8()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->parseAddress0()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->jj_3_1()Z",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParser;->addr_spec()V"
    ],
    "Lorg/apache/james/mime4j/field/address/Builder$ChildNodeIterator;": [
        "Lorg/apache/james/mime4j/field/address/Builder$ChildNodeIterator;->next()Lorg/apache/james/mime4j/field/address/parser/Node;",
        "Lorg/apache/james/mime4j/field/address/Builder$ChildNodeIterator;->hasNext()Z"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/ASTroute;": [
        "Lorg/apache/james/mime4j/field/address/parser/ASTroute;->jjtGetNumChildren()I"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/ASTaddress_list;": [
        "Lorg/apache/james/mime4j/field/address/parser/ASTaddress_list;->jjtGetChild()Lorg/apache/james/mime4j/field/address/parser/Node;",
        "Lorg/apache/james/mime4j/field/address/parser/ASTaddress_list;->jjtGetNumChildren()I"
    ],
    "Lorg/apache/james/mime4j/field/address/DomainList;": [
        "Lorg/apache/james/mime4j/field/address/DomainList;->toRouteString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/DomainList;->get()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/AddressListParserVisitor;": [
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserVisitor;->visit()Ljava/lang/Object;"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->BeginToken()C",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->readChar()C",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->GetImage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->UpdateLineColumn()V",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->getBeginColumn()I",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleCharStream;->ReInit()V"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveStringLiteralDfa0_1()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/address/parser/Token;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjStopStringLiteralDfa_3()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveStringLiteralDfa0_4()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->ReInitRounds()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjStopStringLiteralDfa_4()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveNfa_4()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/address/parser/Token;",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveStringLiteralDfa0_3()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveNfa_3()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjStopStringLiteralDfa_2()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->MoreLexicalActions()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->TokenLexicalActions()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjStopAtPos()I",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/address/parser/AddressListParserTokenManager;->jjMoveNfa_2()I"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;": [
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->openNodeScope()V",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->reset()V",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->popNode()Lorg/apache/james/mime4j/field/address/parser/Node;",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->closeNodeScope()V",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->rootNode()Lorg/apache/james/mime4j/field/address/parser/Node;",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->clearNodeScope()V",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->pushNode()V",
        "Lorg/apache/james/mime4j/field/address/parser/JJTAddressListParserState;->nodeArity()I"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/SimpleNode;": [
        "Lorg/apache/james/mime4j/field/address/parser/SimpleNode;->toString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/parser/SimpleNode;->dump()V"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/address/parser/TokenMgrError;->getMessage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/parser/TokenMgrError;->LexicalError()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/address/parser/TokenMgrError;->addEscapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/Token;": [
        "Lorg/apache/james/mime4j/field/address/parser/Token;->newToken()Lorg/apache/james/mime4j/field/address/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/address/parser/Node;": [
        "Lorg/apache/james/mime4j/field/address/parser/Node;->jjtClose()V",
        "Lorg/apache/james/mime4j/field/address/parser/Node;->jjtOpen()V",
        "Lorg/apache/james/mime4j/field/address/parser/Node;->jjtSetParent()V",
        "Lorg/apache/james/mime4j/field/address/parser/Node;->jjtAccept()Ljava/lang/Object;",
        "Lorg/apache/james/mime4j/field/address/parser/Node;->jjtAddChild()V"
    ],
    "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjStartNfaWithStates_0()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjStopStringLiteralDfa_3()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveNfa_2()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/contenttype/parser/Token;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/contenttype/parser/Token;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveNfa_3()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->ReInitRounds()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjStopAtPos()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveStringLiteralDfa0_3()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->TokenLexicalActions()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->MoreLexicalActions()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjMoveStringLiteralDfa0_1()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/ContentTypeParserTokenManager;->jjStopStringLiteralDfa_2()I"
    ],
    "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->UpdateLineColumn()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->ReInit()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->BeginToken()C",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->GetImage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->readChar()C",
        "Lorg/apache/james/mime4j/field/contenttype/parser/SimpleCharStream;->getBeginColumn()I"
    ],
    "Lorg/apache/james/mime4j/field/contenttype/parser/Token;": [
        "Lorg/apache/james/mime4j/field/contenttype/parser/Token;->newToken()Lorg/apache/james/mime4j/field/contenttype/parser/Token;"
    ],
    "Ljava/util/Calendar;": [
        "Ljava/util/Calendar;->setLenient()V",
        "Ljava/util/Calendar;->getTime()Ljava/util/Date;",
        "Ljava/util/Calendar;->add()V",
        "Ljava/util/Calendar;->getActualMaximum()I",
        "Ljava/util/Calendar;->get()I",
        "Ljava/util/Calendar;->set()V",
        "Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;",
        "Ljava/util/Calendar;->setTimeZone()V",
        "Ljava/util/Calendar;->clone()Ljava/lang/Object;",
        "Ljava/util/Calendar;->getActualMinimum()I",
        "Ljava/util/Calendar;->setTime()V"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveStringLiteralDfa1_0()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveStringLiteralDfa0_1()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/datetime/parser/Token;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveNfa_2()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjStopStringLiteralDfa_2()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjStopAtPos()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjStartNfa_0()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->ReInitRounds()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->MoreLexicalActions()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjMoveStringLiteralDfa2_0()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/datetime/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->GetImage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->UpdateLineColumn()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->ReInit()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->BeginToken()C",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->getBeginColumn()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/SimpleCharStream;->readChar()C"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Date;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Date;->getDay()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Date;->getYear()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Date;->getMonth()I"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Time;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Time;->getHour()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Time;->getSecond()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Time;->getZone()I",
        "Lorg/apache/james/mime4j/field/datetime/parser/DateTimeParser$Time;->getMinute()I"
    ],
    "Lorg/apache/james/mime4j/field/datetime/parser/Token;": [
        "Lorg/apache/james/mime4j/field/datetime/parser/Token;->newToken()Lorg/apache/james/mime4j/field/datetime/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->MoreLexicalActions()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjStopStringLiteralDfa_3()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjStartNfaWithStates_0()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveNfa_2()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveStringLiteralDfa0_3()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjStopAtPos()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->TokenLexicalActions()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveNfa_3()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjStopStringLiteralDfa_2()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->ReInitRounds()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/contentdisposition/parser/Token;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/contentdisposition/parser/Token;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ContentDispositionParserTokenManager;->jjMoveStringLiteralDfa0_1()I"
    ],
    "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->GetImage()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->readChar()C",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->UpdateLineColumn()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->ReInit()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->getBeginColumn()I",
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/SimpleCharStream;->BeginToken()C"
    ],
    "Lorg/apache/james/mime4j/field/contentdisposition/parser/Token;": [
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/Token;->newToken()Lorg/apache/james/mime4j/field/contentdisposition/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/contentdisposition/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/contentdisposition/parser/ParseException;->add_escapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/language/parser/ParseException;": [
        "Lorg/apache/james/mime4j/field/language/parser/ParseException;->add_escapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;": [
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveStringLiteralDfa0_3()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveNfa_1()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->ReInitRounds()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->TokenLexicalActions()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->ReInit()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjStopStringLiteralDfa_2()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveStringLiteralDfa0_1()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveNfa_0()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveNfa_3()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->SwitchTo()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjFillToken()Lorg/apache/james/mime4j/field/language/parser/Token;",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjCheckNAdd()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->MoreLexicalActions()V",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjMoveNfa_2()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjStopStringLiteralDfa_1()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjStopStringLiteralDfa_3()I",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->getNextToken()Lorg/apache/james/mime4j/field/language/parser/Token;",
        "Lorg/apache/james/mime4j/field/language/parser/ContentLanguageParserTokenManager;->jjStopAtPos()I"
    ],
    "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;": [
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->GetSuffix()[C",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->BeginToken()C",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->getEndColumn()I",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->backup()V",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->getEndLine()I",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->readChar()C",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->ReInit()V",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->ExpandBuff()V",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->UpdateLineColumn()V",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->FillBuff()V",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->getBeginColumn()I",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->getBeginLine()I",
        "Lorg/apache/james/mime4j/field/language/parser/SimpleCharStream;->GetImage()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/field/language/parser/Token;": [
        "Lorg/apache/james/mime4j/field/language/parser/Token;->newToken()Lorg/apache/james/mime4j/field/language/parser/Token;"
    ],
    "Lorg/apache/james/mime4j/field/language/parser/TokenMgrError;": [
        "Lorg/apache/james/mime4j/field/language/parser/TokenMgrError;->LexicalError()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/field/language/parser/TokenMgrError;->addEscapes()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/message/BodyCopier;": [
        "Lorg/apache/james/mime4j/message/BodyCopier;->copy()Lorg/apache/james/mime4j/message/Body;"
    ],
    "Lorg/apache/james/mime4j/message/Entity;": [
        "Lorg/apache/james/mime4j/message/Entity;->getBody()Lorg/apache/james/mime4j/message/Body;",
        "Lorg/apache/james/mime4j/message/Entity;->setHeader()V",
        "Lorg/apache/james/mime4j/message/Entity;->getHeader()Lorg/apache/james/mime4j/message/Header;",
        "Lorg/apache/james/mime4j/message/Entity;->setText()V",
        "Lorg/apache/james/mime4j/message/Entity;->getMimeType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/message/Entity;->setBody()V",
        "Lorg/apache/james/mime4j/message/Entity;->obtainHeader()Lorg/apache/james/mime4j/message/Header;",
        "Lorg/apache/james/mime4j/message/Entity;->getParent()Lorg/apache/james/mime4j/message/Entity;",
        "Lorg/apache/james/mime4j/message/Entity;->obtainField()Lorg/apache/james/mime4j/parser/Field;",
        "Lorg/apache/james/mime4j/message/Entity;->getContentTransferEncoding()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/message/Body;": [
        "Lorg/apache/james/mime4j/message/Body;->dispose()V",
        "Lorg/apache/james/mime4j/message/Body;->setParent()V"
    ],
    "Lorg/apache/james/mime4j/message/Header;": [
        "Lorg/apache/james/mime4j/message/Header;->iterator()Ljava/util/Iterator;",
        "Lorg/apache/james/mime4j/message/Header;->removeFields()I",
        "Lorg/apache/james/mime4j/message/Header;->getField()Lorg/apache/james/mime4j/parser/Field;",
        "Lorg/apache/james/mime4j/message/Header;->setField()V",
        "Lorg/apache/james/mime4j/message/Header;->getFields()Ljava/util/List;",
        "Lorg/apache/james/mime4j/message/Header;->addField()V"
    ],
    "Lorg/apache/james/mime4j/message/Multipart;": [
        "Lorg/apache/james/mime4j/message/Multipart;->getEpilogueRaw()Lorg/apache/james/mime4j/util/ByteSequence;",
        "Lorg/apache/james/mime4j/message/Multipart;->getParent()Lorg/apache/james/mime4j/message/Entity;",
        "Lorg/apache/james/mime4j/message/Multipart;->setEpilogueRaw()V",
        "Lorg/apache/james/mime4j/message/Multipart;->getSubType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/message/Multipart;->getPreambleRaw()Lorg/apache/james/mime4j/util/ByteSequence;",
        "Lorg/apache/james/mime4j/message/Multipart;->getBodyParts()Ljava/util/List;",
        "Lorg/apache/james/mime4j/message/Multipart;->setPreambleRaw()V",
        "Lorg/apache/james/mime4j/message/Multipart;->addBodyPart()V"
    ],
    "Lorg/apache/james/mime4j/message/TextBody;": [
        "Lorg/apache/james/mime4j/message/TextBody;->getMimeCharset()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/message/SingleBody;": [
        "Lorg/apache/james/mime4j/message/SingleBody;->writeTo()V",
        "Lorg/apache/james/mime4j/message/SingleBody;->copy()Lorg/apache/james/mime4j/message/SingleBody;"
    ],
    "Lorg/apache/james/mime4j/message/SimpleContentHandler;": [
        "Lorg/apache/james/mime4j/message/SimpleContentHandler;->bodyDecoded()V",
        "Lorg/apache/james/mime4j/message/SimpleContentHandler;->headers()V"
    ],
    "Lorg/apache/james/mime4j/message/MessageBuilder;": [
        "Lorg/apache/james/mime4j/message/MessageBuilder;->expect()V",
        "Lorg/apache/james/mime4j/message/MessageBuilder;->loadStream()Lorg/apache/james/mime4j/util/ByteSequence;"
    ],
    "Lorg/apache/james/mime4j/message/BodyFactory;": [
        "Lorg/apache/james/mime4j/message/BodyFactory;->textBody()Lorg/apache/james/mime4j/message/TextBody;",
        "Lorg/apache/james/mime4j/message/BodyFactory;->toJavaCharset()Ljava/nio/charset/Charset;",
        "Lorg/apache/james/mime4j/message/BodyFactory;->binaryBody()Lorg/apache/james/mime4j/message/BinaryBody;"
    ],
    "Lorg/apache/james/mime4j/message/BodyPart;": [
        "Lorg/apache/james/mime4j/message/BodyPart;->getBody()Lorg/apache/james/mime4j/message/Body;",
        "Lorg/apache/james/mime4j/message/BodyPart;->getHeader()Lorg/apache/james/mime4j/message/Header;",
        "Lorg/apache/james/mime4j/message/BodyPart;->setParent()V",
        "Lorg/apache/james/mime4j/message/BodyPart;->dispose()V"
    ],
    "Lorg/apache/james/mime4j/message/StorageBinaryBody;": [
        "Lorg/apache/james/mime4j/message/StorageBinaryBody;->copy()Lorg/apache/james/mime4j/message/StorageBinaryBody;"
    ],
    "Lorg/apache/james/mime4j/message/StorageTextBody;": [
        "Lorg/apache/james/mime4j/message/StorageTextBody;->copy()Lorg/apache/james/mime4j/message/StorageTextBody;"
    ],
    "Lorg/apache/james/mime4j/storage/DefaultStorageProvider;": [
        "Lorg/apache/james/mime4j/storage/DefaultStorageProvider;->getInstance()Lorg/apache/james/mime4j/storage/StorageProvider;"
    ],
    "Lorg/apache/james/mime4j/parser/MimeStreamParser;": [
        "Lorg/apache/james/mime4j/parser/MimeStreamParser;->parse()V",
        "Lorg/apache/james/mime4j/parser/MimeStreamParser;->setContentHandler()V"
    ],
    "Lorg/apache/james/mime4j/message/Message;": [
        "Lorg/apache/james/mime4j/message/Message;->setMailbox()V",
        "Lorg/apache/james/mime4j/message/Message;->obtainHeader()Lorg/apache/james/mime4j/message/Header;",
        "Lorg/apache/james/mime4j/message/Message;->obtainField()Lorg/apache/james/mime4j/parser/Field;",
        "Lorg/apache/james/mime4j/message/Message;->setDate()V",
        "Lorg/apache/james/mime4j/message/Message;->getAddressList()Lorg/apache/james/mime4j/field/address/AddressList;",
        "Lorg/apache/james/mime4j/message/Message;->setHeader()V",
        "Lorg/apache/james/mime4j/message/Message;->setAddressList()V",
        "Lorg/apache/james/mime4j/message/Message;->getHeader()Lorg/apache/james/mime4j/message/Header;",
        "Lorg/apache/james/mime4j/message/Message;->getMailbox()Lorg/apache/james/mime4j/field/address/Mailbox;",
        "Lorg/apache/james/mime4j/message/Message;->getMailboxList()Lorg/apache/james/mime4j/field/address/MailboxList;",
        "Lorg/apache/james/mime4j/message/Message;->setMailboxList()V"
    ],
    "Lorg/apache/james/mime4j/message/MessageWriter;": [
        "Lorg/apache/james/mime4j/message/MessageWriter;->getBoundary()Lorg/apache/james/mime4j/util/ByteSequence;",
        "Lorg/apache/james/mime4j/message/MessageWriter;->encodeStream()Ljava/io/OutputStream;",
        "Lorg/apache/james/mime4j/message/MessageWriter;->writeMultipart()V",
        "Lorg/apache/james/mime4j/message/MessageWriter;->getContentType()Lorg/apache/james/mime4j/field/ContentTypeField;",
        "Lorg/apache/james/mime4j/message/MessageWriter;->writeEntity()V",
        "Lorg/apache/james/mime4j/message/MessageWriter;->writeHeader()V",
        "Lorg/apache/james/mime4j/message/MessageWriter;->writeBody()V",
        "Lorg/apache/james/mime4j/message/MessageWriter;->writeBytes()V"
    ],
    "Lorg/apache/james/mime4j/message/StringTextBody;": [
        "Lorg/apache/james/mime4j/message/StringTextBody;->copy()Lorg/apache/james/mime4j/message/StringTextBody;"
    ],
    "Lorg/apache/james/mime4j/parser/MimeEntityConfig;": [
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->getMaxHeaderCount()I",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->clone()Lorg/apache/james/mime4j/parser/MimeEntityConfig;",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->getMaxContentLen()J",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->setMaximalBodyDescriptor()V",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->isCountLineNumbers()Z",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->setStrictParsing()V",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->isMaximalBodyDescriptor()Z",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->getMaxLineLen()I",
        "Lorg/apache/james/mime4j/parser/MimeEntityConfig;->isStrictParsing()Z"
    ],
    "Lorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor;": [
        "Lorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor;->isUsed()Z",
        "Lorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor;->doReadLine()I",
        "Lorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor;->eof()Z"
    ],
    "Lorg/apache/james/mime4j/parser/MimeEntity;": [
        "Lorg/apache/james/mime4j/parser/MimeEntity;->setRecursionMode()V",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->clearMimeStream()V",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->advanceToBoundary()V",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->stateToString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->nextMessage()Lorg/apache/james/mime4j/parser/EntityStateMachine;",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->monitor()V",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->parseField()Z",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->skipHeader()V",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->getLimitedContentStream()Ljava/io/InputStream;",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->nextMimeEntity()Lorg/apache/james/mime4j/parser/EntityStateMachine;",
        "Lorg/apache/james/mime4j/parser/MimeEntity;->createMimeStream()V"
    ],
    "Lorg/apache/james/mime4j/descriptor/MutableBodyDescriptor;": [
        "Lorg/apache/james/mime4j/descriptor/MutableBodyDescriptor;->addField()V",
        "Lorg/apache/james/mime4j/descriptor/MutableBodyDescriptor;->getMimeType()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/MutableBodyDescriptor;->getBoundary()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/MutableBodyDescriptor;->getTransferEncoding()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;": [
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->hasBufferedData()Z",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->indexOf()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->charAt()B",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->buf()[B",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->skip()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->limit()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->truncate()V",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->read()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->clear()V",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->expand()V",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->length()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->pos()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->capacity()I",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->ensureCapacity()V",
        "Lorg/apache/james/mime4j/io/BufferedLineReaderInputStream;->fillBuffer()I"
    ],
    "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;": [
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->hasData()Z",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->endOfStream()Z",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->isLastPart()Z",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->eof()Z",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->read()I",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->skipBoundary()V",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->fillBuffer()I",
        "Lorg/apache/james/mime4j/io/MimeBoundaryInputStream;->calculateBoundaryLen()V"
    ],
    "Lorg/apache/james/mime4j/io/LineNumberSource;": [
        "Lorg/apache/james/mime4j/io/LineNumberSource;->getLineNumber()I"
    ],
    "Lorg/apache/james/mime4j/parser/AbstractEntity;": [
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->newBodyDescriptor()Lorg/apache/james/mime4j/descriptor/MutableBodyDescriptor;",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->getDataStream()Lorg/apache/james/mime4j/io/LineReaderInputStream;",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->getState()I",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->monitor()V",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->stateToString()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->fillFieldBuffer()Lorg/apache/james/mime4j/util/ByteArrayBuffer;",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->message()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->warn()V",
        "Lorg/apache/james/mime4j/parser/AbstractEntity;->getLineNumber()I"
    ],
    "Lorg/apache/james/mime4j/io/LineReaderInputStream;": [
        "Lorg/apache/james/mime4j/io/LineReaderInputStream;->readLine()I"
    ],
    "Lorg/apache/james/mime4j/parser/Event;": [
        "Lorg/apache/james/mime4j/parser/Event;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/parser/EntityStateMachine;": [
        "Lorg/apache/james/mime4j/parser/EntityStateMachine;->getContentStream()Ljava/io/InputStream;",
        "Lorg/apache/james/mime4j/parser/EntityStateMachine;->advance()Lorg/apache/james/mime4j/parser/EntityStateMachine;",
        "Lorg/apache/james/mime4j/parser/EntityStateMachine;->setRecursionMode()V",
        "Lorg/apache/james/mime4j/parser/EntityStateMachine;->getState()I",
        "Lorg/apache/james/mime4j/parser/EntityStateMachine;->getBodyDescriptor()Lorg/apache/james/mime4j/descriptor/BodyDescriptor;",
        "Lorg/apache/james/mime4j/parser/EntityStateMachine;->getField()Lorg/apache/james/mime4j/parser/Field;"
    ],
    "Lorg/apache/james/mime4j/parser/MimeTokenStream;": [
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->getField()Lorg/apache/james/mime4j/parser/Field;",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->doParse()V",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->next()I",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->stop()V",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->getState()I",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->getDecodedInputStream()Ljava/io/InputStream;",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->isRaw()Z",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->setRecursionMode()V",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->getBodyDescriptor()Lorg/apache/james/mime4j/descriptor/BodyDescriptor;",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->getInputStream()Ljava/io/InputStream;",
        "Lorg/apache/james/mime4j/parser/MimeTokenStream;->parse()V"
    ],
    "Lorg/apache/james/mime4j/parser/ContentHandler;": [
        "Lorg/apache/james/mime4j/parser/ContentHandler;->endHeader()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->startMultipart()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->endBodyPart()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->startBodyPart()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->preamble()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->endMessage()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->endMultipart()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->field()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->body()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->startHeader()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->startMessage()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->epilogue()V",
        "Lorg/apache/james/mime4j/parser/ContentHandler;->raw()V"
    ],
    "Lorg/apache/james/mime4j/parser/RawField;": [
        "Lorg/apache/james/mime4j/parser/RawField;->parseName()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/RawField;->getName()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/RawField;->parseBody()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/parser/RawField;->getBody()Ljava/lang/String;"
    ],
    "Lorg/apache/james/mime4j/io/LimitedInputStream;": [
        "Lorg/apache/james/mime4j/io/LimitedInputStream;->getBytesLeft()I",
        "Lorg/apache/james/mime4j/io/LimitedInputStream;->enforceLimit()V"
    ],
    "Lorg/apache/james/mime4j/io/PositionInputStream;": [
        "Lorg/apache/james/mime4j/io/PositionInputStream;->read()I",
        "Lorg/apache/james/mime4j/io/PositionInputStream;->skip()J"
    ],
    "Ljava/io/PushbackInputStream;": [
        "Ljava/io/PushbackInputStream;->unread()V",
        "Ljava/io/PushbackInputStream;->read()I",
        "Ljava/io/PushbackInputStream;->close()V"
    ],
    "Lorg/apache/commons/lang/StringUtils;": [
        "Lorg/apache/commons/lang/StringUtils;->startsWith()Z",
        "Lorg/apache/commons/lang/StringUtils;->deleteWhitespace()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->containsOnly()Z",
        "Lorg/apache/commons/lang/StringUtils;->chompLast()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->trim()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->stripEnd()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->substringBetween()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->splitByWholeSeparatorWorker()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->containsAny()Z",
        "Lorg/apache/commons/lang/StringUtils;->endsWithIgnoreCase()Z",
        "Lorg/apache/commons/lang/StringUtils;->endsWith()Z",
        "Lorg/apache/commons/lang/StringUtils;->stripStart()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->rightPad()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->uncapitalize()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->startsWithIgnoreCase()Z",
        "Lorg/apache/commons/lang/StringUtils;->strip()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->splitByCharacterType()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->indexOf()I",
        "Lorg/apache/commons/lang/StringUtils;->capitalize()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->indexOfDifference()I",
        "Lorg/apache/commons/lang/StringUtils;->containsNone()Z",
        "Lorg/apache/commons/lang/StringUtils;->indexOfAny()I",
        "Lorg/apache/commons/lang/StringUtils;->stripAll()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->join()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->center()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->splitWorker()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->defaultString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->indexOfAnyBut()I",
        "Lorg/apache/commons/lang/StringUtils;->isBlank()Z",
        "Lorg/apache/commons/lang/StringUtils;->replace()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->padding()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->replaceOnce()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->split()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->replaceEach()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->isNotEmpty()Z",
        "Lorg/apache/commons/lang/StringUtils;->leftPad()Ljava/lang/String;",
        "Lorg/apache/commons/lang/StringUtils;->contains()Z",
        "Lorg/apache/commons/lang/StringUtils;->isEmpty()Z",
        "Lorg/apache/commons/lang/StringUtils;->abbreviate()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/Entities;": [
        "Lorg/apache/commons/lang/Entities;->unescape()V",
        "Lorg/apache/commons/lang/Entities;->escape()V",
        "Lorg/apache/commons/lang/Entities;->doUnescape()V",
        "Lorg/apache/commons/lang/Entities;->fillWithHtml40Entities()V",
        "Lorg/apache/commons/lang/Entities;->createStringWriter()Ljava/io/StringWriter;",
        "Lorg/apache/commons/lang/Entities;->unescape()Ljava/lang/String;",
        "Lorg/apache/commons/lang/Entities;->addEntity()V",
        "Lorg/apache/commons/lang/Entities;->escape()Ljava/lang/String;",
        "Lorg/apache/commons/lang/Entities;->entityName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/Entities;->entityValue()I",
        "Lorg/apache/commons/lang/Entities;->addEntities()V"
    ],
    "Lorg/apache/commons/lang/NumberRange;": [
        "Lorg/apache/commons/lang/NumberRange;->includesNumber()Z",
        "Lorg/apache/commons/lang/NumberRange;->includesRange()Z"
    ],
    "Lorg/apache/commons/lang/IntHashMap;": [
        "Lorg/apache/commons/lang/IntHashMap;->contains()Z",
        "Lorg/apache/commons/lang/IntHashMap;->rehash()V"
    ],
    "Lorg/apache/commons/lang/CharUtils;": [
        "Lorg/apache/commons/lang/CharUtils;->unicodeEscaped()Ljava/lang/String;",
        "Lorg/apache/commons/lang/CharUtils;->toIntValue()I",
        "Lorg/apache/commons/lang/CharUtils;->toCharacterObject()Ljava/lang/Character;",
        "Lorg/apache/commons/lang/CharUtils;->isAsciiNumeric()Z",
        "Lorg/apache/commons/lang/CharUtils;->isAsciiPrintable()Z",
        "Lorg/apache/commons/lang/CharUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/BitField;": [
        "Lorg/apache/commons/lang/BitField;->clearByte()B",
        "Lorg/apache/commons/lang/BitField;->getRawValue()I",
        "Lorg/apache/commons/lang/BitField;->getValue()I",
        "Lorg/apache/commons/lang/BitField;->setByte()B",
        "Lorg/apache/commons/lang/BitField;->setValue()I",
        "Lorg/apache/commons/lang/BitField;->set()I",
        "Lorg/apache/commons/lang/BitField;->clearShort()S",
        "Lorg/apache/commons/lang/BitField;->setShort()S",
        "Lorg/apache/commons/lang/BitField;->clear()I"
    ],
    "Lorg/apache/commons/lang/NumberUtils;": [
        "Lorg/apache/commons/lang/NumberUtils;->createBigDecimal()Ljava/math/BigDecimal;",
        "Lorg/apache/commons/lang/NumberUtils;->isDigits()Z",
        "Lorg/apache/commons/lang/NumberUtils;->isAllZeros()Z",
        "Lorg/apache/commons/lang/NumberUtils;->createDouble()Ljava/lang/Double;",
        "Lorg/apache/commons/lang/NumberUtils;->stringToInt()I",
        "Lorg/apache/commons/lang/NumberUtils;->createBigInteger()Ljava/math/BigInteger;",
        "Lorg/apache/commons/lang/NumberUtils;->createLong()Ljava/lang/Long;",
        "Lorg/apache/commons/lang/NumberUtils;->createInteger()Ljava/lang/Integer;",
        "Lorg/apache/commons/lang/NumberUtils;->createFloat()Ljava/lang/Float;"
    ],
    "Lorg/apache/commons/lang/Validate;": [
        "Lorg/apache/commons/lang/Validate;->notNull()V",
        "Lorg/apache/commons/lang/Validate;->isTrue()V"
    ],
    "Lorg/apache/commons/lang/CharRange;": [
        "Lorg/apache/commons/lang/CharRange;->contains()Z",
        "Lorg/apache/commons/lang/CharRange;->isNegated()Z"
    ],
    "Lorg/apache/commons/lang/WordUtils;": [
        "Lorg/apache/commons/lang/WordUtils;->isDelimiter()Z",
        "Lorg/apache/commons/lang/WordUtils;->uncapitalize()Ljava/lang/String;",
        "Lorg/apache/commons/lang/WordUtils;->wrap()Ljava/lang/String;",
        "Lorg/apache/commons/lang/WordUtils;->capitalize()Ljava/lang/String;",
        "Lorg/apache/commons/lang/WordUtils;->capitalizeFully()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/ClassUtils;": [
        "Lorg/apache/commons/lang/ClassUtils;->getCanonicalName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ClassUtils;->getShortClassName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ClassUtils;->getClass()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/ClassUtils;->getPackageCanonicalName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ClassUtils;->toCanonicalName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ClassUtils;->getAllInterfaces()Ljava/util/List;",
        "Lorg/apache/commons/lang/ClassUtils;->getShortCanonicalName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ClassUtils;->primitiveToWrapper()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/ClassUtils;->getAllSuperclasses()Ljava/util/List;",
        "Lorg/apache/commons/lang/ClassUtils;->isAssignable()Z",
        "Lorg/apache/commons/lang/ClassUtils;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/ClassUtils;->addAbbreviation()V",
        "Lorg/apache/commons/lang/ClassUtils;->wrapperToPrimitive()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/ClassUtils;->getPackageName()Ljava/lang/String;"
    ],
    "Ljava/lang/ClassNotFoundException;": [
        "Ljava/lang/ClassNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Modifier;": [
        "Ljava/lang/reflect/Modifier;->isPublic()Z",
        "Ljava/lang/reflect/Modifier;->isFinal()Z",
        "Ljava/lang/reflect/Modifier;->isTransient()Z",
        "Ljava/lang/reflect/Modifier;->isStatic()Z"
    ],
    "Lorg/apache/commons/lang/ArrayUtils;": [
        "Lorg/apache/commons/lang/ArrayUtils;->toPrimitive()[Z",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[C",
        "Lorg/apache/commons/lang/ArrayUtils;->copyArrayGrow1()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[D",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[B",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[C",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[D",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[B",
        "Lorg/apache/commons/lang/ArrayUtils;->getLength()I",
        "Lorg/apache/commons/lang/ArrayUtils;->reverse()V",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[Ljava/lang/Object;",
        "Lorg/apache/commons/lang/ArrayUtils;->isEmpty()Z",
        "Lorg/apache/commons/lang/ArrayUtils;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[I",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[I",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[S",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[Z",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[J",
        "Lorg/apache/commons/lang/ArrayUtils;->lastIndexOf()I",
        "Lorg/apache/commons/lang/ArrayUtils;->indexOf()I",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[J",
        "Lorg/apache/commons/lang/ArrayUtils;->isSameLength()Z",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[Z",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[F",
        "Lorg/apache/commons/lang/ArrayUtils;->add()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()[Ljava/lang/Object;",
        "Lorg/apache/commons/lang/ArrayUtils;->toString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[F",
        "Lorg/apache/commons/lang/ArrayUtils;->clone()[S",
        "Lorg/apache/commons/lang/ArrayUtils;->remove()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/lang/BooleanUtils;": [
        "Lorg/apache/commons/lang/BooleanUtils;->isFalse()Z",
        "Lorg/apache/commons/lang/BooleanUtils;->isTrue()Z",
        "Lorg/apache/commons/lang/BooleanUtils;->toString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/BooleanUtils;->xor()Z",
        "Lorg/apache/commons/lang/BooleanUtils;->toBooleanObject()Ljava/lang/Boolean;"
    ],
    "Lorg/apache/commons/lang/RandomStringUtils;": [
        "Lorg/apache/commons/lang/RandomStringUtils;->random()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/IllegalClassException;": [
        "Lorg/apache/commons/lang/IllegalClassException;->safeGetClassName()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/CharSetUtils;": [
        "Lorg/apache/commons/lang/CharSetUtils;->modify()Ljava/lang/String;",
        "Lorg/apache/commons/lang/CharSetUtils;->keep()Ljava/lang/String;",
        "Lorg/apache/commons/lang/CharSetUtils;->count()I",
        "Lorg/apache/commons/lang/CharSetUtils;->delete()Ljava/lang/String;",
        "Lorg/apache/commons/lang/CharSetUtils;->squeeze()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/CharSet;": [
        "Lorg/apache/commons/lang/CharSet;->contains()Z",
        "Lorg/apache/commons/lang/CharSet;->add()V",
        "Lorg/apache/commons/lang/CharSet;->getInstance()Lorg/apache/commons/lang/CharSet;"
    ],
    "Lorg/apache/commons/lang/builder/HashCodeBuilder;": [
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->isRegistered()Z",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->toHashCode()I",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->unregister()V",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->getRegistry()Ljava/util/Set;",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->toIdentityHashCodeInteger()Ljava/lang/Integer;",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->reflectionAppend()V",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->reflectionHashCode()I",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->register()V",
        "Lorg/apache/commons/lang/builder/HashCodeBuilder;->append()Lorg/apache/commons/lang/builder/HashCodeBuilder;"
    ],
    "Lorg/apache/commons/lang/builder/EqualsBuilder;": [
        "Lorg/apache/commons/lang/builder/EqualsBuilder;->isEquals()Z",
        "Lorg/apache/commons/lang/builder/EqualsBuilder;->setEquals()V",
        "Lorg/apache/commons/lang/builder/EqualsBuilder;->reflectionEquals()Z",
        "Lorg/apache/commons/lang/builder/EqualsBuilder;->append()Lorg/apache/commons/lang/builder/EqualsBuilder;",
        "Lorg/apache/commons/lang/builder/EqualsBuilder;->reflectionAppend()V"
    ],
    "Lorg/apache/commons/lang/builder/ToStringBuilder;": [
        "Lorg/apache/commons/lang/builder/ToStringBuilder;->getObject()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/builder/ToStringBuilder;->append()Lorg/apache/commons/lang/builder/ToStringBuilder;",
        "Lorg/apache/commons/lang/builder/ToStringBuilder;->toString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringBuilder;->getStringBuffer()Ljava/lang/StringBuffer;",
        "Lorg/apache/commons/lang/builder/ToStringBuilder;->getStyle()Lorg/apache/commons/lang/builder/ToStringStyle;",
        "Lorg/apache/commons/lang/builder/ToStringBuilder;->getDefaultStyle()Lorg/apache/commons/lang/builder/ToStringStyle;"
    ],
    "Lorg/apache/commons/lang/SerializationUtils;": [
        "Lorg/apache/commons/lang/SerializationUtils;->deserialize()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/SerializationUtils;->serialize()[B",
        "Lorg/apache/commons/lang/SerializationUtils;->serialize()V"
    ],
    "Ljava/io/ObjectInputStream;": [
        "Ljava/io/ObjectInputStream;->readObject()Ljava/lang/Object;",
        "Ljava/io/ObjectInputStream;->close()V",
        "Ljava/io/ObjectInputStream;->defaultReadObject()V"
    ],
    "Ljava/io/ObjectOutputStream;": [
        "Ljava/io/ObjectOutputStream;->close()V",
        "Ljava/io/ObjectOutputStream;->flush()V",
        "Ljava/io/ObjectOutputStream;->writeObject()V"
    ],
    "Lorg/apache/commons/lang/ObjectUtils;": [
        "Lorg/apache/commons/lang/ObjectUtils;->toString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/ObjectUtils;->appendIdentityToString()Ljava/lang/StringBuffer;",
        "Lorg/apache/commons/lang/ObjectUtils;->identityToString()V"
    ],
    "Ljava/lang/UnsupportedOperationException;": [
        "Ljava/lang/UnsupportedOperationException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/UnsupportedOperationException;->printStackTrace()V"
    ],
    "Lorg/apache/commons/lang/exception/NestableDelegate;": [
        "Lorg/apache/commons/lang/exception/NestableDelegate;->getThrowables()[Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->getStackFrames()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->getMessages()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->indexOfThrowable()I",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->printStackTrace()V",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->trimStackFrames()V",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->getThrowableCount()I",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->getMessage()Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/NestableDelegate;->getThrowable()Ljava/lang/Throwable;"
    ],
    "Lorg/apache/commons/lang/IncompleteArgumentException;": [
        "Lorg/apache/commons/lang/IncompleteArgumentException;->safeArrayToString()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/Entities$EntityMap;": [
        "Lorg/apache/commons/lang/Entities$EntityMap;->add()V",
        "Lorg/apache/commons/lang/Entities$EntityMap;->value()I",
        "Lorg/apache/commons/lang/Entities$EntityMap;->name()Ljava/lang/String;"
    ],
    "Ljava/lang/Comparable;": [
        "Ljava/lang/Comparable;->compareTo()I"
    ],
    "Lorg/apache/commons/lang/LocaleUtils;": [
        "Lorg/apache/commons/lang/LocaleUtils;->localeLookupList()Ljava/util/List;",
        "Lorg/apache/commons/lang/LocaleUtils;->availableLocaleList()Ljava/util/List;"
    ],
    "Lorg/apache/commons/lang/SystemUtils;": [
        "Lorg/apache/commons/lang/SystemUtils;->getJavaVersionAsFloat()F",
        "Lorg/apache/commons/lang/SystemUtils;->getJavaVersionTrimmed()Ljava/lang/String;",
        "Lorg/apache/commons/lang/SystemUtils;->getJavaVersionMatches()Z",
        "Lorg/apache/commons/lang/SystemUtils;->getJavaVersionAsInt()I",
        "Lorg/apache/commons/lang/SystemUtils;->getOSMatches()Z",
        "Lorg/apache/commons/lang/SystemUtils;->getSystemProperty()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/mutable/MutableBoolean;": [
        "Lorg/apache/commons/lang/mutable/MutableBoolean;->setValue()V",
        "Lorg/apache/commons/lang/mutable/MutableBoolean;->booleanValue()Z"
    ],
    "Lorg/apache/commons/lang/mutable/MutableByte;": [
        "Lorg/apache/commons/lang/mutable/MutableByte;->setValue()V",
        "Lorg/apache/commons/lang/mutable/MutableByte;->byteValue()B"
    ],
    "Lorg/apache/commons/lang/mutable/MutableInt;": [
        "Lorg/apache/commons/lang/mutable/MutableInt;->setValue()V",
        "Lorg/apache/commons/lang/mutable/MutableInt;->intValue()I"
    ],
    "Lorg/apache/commons/lang/math/NumberUtils;": [
        "Lorg/apache/commons/lang/math/NumberUtils;->createBigInteger()Ljava/math/BigInteger;",
        "Lorg/apache/commons/lang/math/NumberUtils;->createDouble()Ljava/lang/Double;",
        "Lorg/apache/commons/lang/math/NumberUtils;->isAllZeros()Z",
        "Lorg/apache/commons/lang/math/NumberUtils;->isDigits()Z",
        "Lorg/apache/commons/lang/math/NumberUtils;->toFloat()F",
        "Lorg/apache/commons/lang/math/NumberUtils;->createFloat()Ljava/lang/Float;",
        "Lorg/apache/commons/lang/math/NumberUtils;->compare()I",
        "Lorg/apache/commons/lang/math/NumberUtils;->toLong()J",
        "Lorg/apache/commons/lang/math/NumberUtils;->toDouble()D",
        "Lorg/apache/commons/lang/math/NumberUtils;->createLong()Ljava/lang/Long;",
        "Lorg/apache/commons/lang/math/NumberUtils;->toInt()I",
        "Lorg/apache/commons/lang/math/NumberUtils;->createBigDecimal()Ljava/math/BigDecimal;",
        "Lorg/apache/commons/lang/math/NumberUtils;->createInteger()Ljava/lang/Integer;"
    ],
    "Lorg/apache/commons/lang/mutable/MutableDouble;": [
        "Lorg/apache/commons/lang/mutable/MutableDouble;->setValue()V",
        "Lorg/apache/commons/lang/mutable/MutableDouble;->doubleValue()D"
    ],
    "Lorg/apache/commons/lang/mutable/MutableShort;": [
        "Lorg/apache/commons/lang/mutable/MutableShort;->setValue()V",
        "Lorg/apache/commons/lang/mutable/MutableShort;->shortValue()S"
    ],
    "Lorg/apache/commons/lang/mutable/MutableFloat;": [
        "Lorg/apache/commons/lang/mutable/MutableFloat;->floatValue()F",
        "Lorg/apache/commons/lang/mutable/MutableFloat;->setValue()V"
    ],
    "Lorg/apache/commons/lang/mutable/MutableLong;": [
        "Lorg/apache/commons/lang/mutable/MutableLong;->longValue()J",
        "Lorg/apache/commons/lang/mutable/MutableLong;->setValue()V"
    ],
    "Lorg/apache/commons/lang/time/FastDateFormat;": [
        "Lorg/apache/commons/lang/time/FastDateFormat;->selectNumberRule()Lorg/apache/commons/lang/time/FastDateFormat$NumberRule;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->getTimeInstance()Lorg/apache/commons/lang/time/FastDateFormat;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->getDateTimeInstance()Lorg/apache/commons/lang/time/FastDateFormat;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->getDefaultPattern()Ljava/lang/String;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->format()Ljava/lang/String;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->parseToken()Ljava/lang/String;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->parsePattern()Ljava/util/List;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->applyRules()Ljava/lang/StringBuffer;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->format()Ljava/lang/StringBuffer;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->getInstance()Lorg/apache/commons/lang/time/FastDateFormat;",
        "Lorg/apache/commons/lang/time/FastDateFormat;->getDateInstance()Lorg/apache/commons/lang/time/FastDateFormat;"
    ],
    "Lorg/apache/commons/lang/time/FastDateFormat$Rule;": [
        "Lorg/apache/commons/lang/time/FastDateFormat$Rule;->estimateLength()I",
        "Lorg/apache/commons/lang/time/FastDateFormat$Rule;->appendTo()V"
    ],
    "Ljava/text/ParsePosition;": [
        "Ljava/text/ParsePosition;->getIndex()I",
        "Ljava/text/ParsePosition;->setErrorIndex()V",
        "Ljava/text/ParsePosition;->setIndex()V"
    ],
    "Ljava/text/DateFormatSymbols;": [
        "Ljava/text/DateFormatSymbols;->getEras()[Ljava/lang/String;",
        "Ljava/text/DateFormatSymbols;->getMonths()[Ljava/lang/String;",
        "Ljava/text/DateFormatSymbols;->getShortWeekdays()[Ljava/lang/String;",
        "Ljava/text/DateFormatSymbols;->getAmPmStrings()[Ljava/lang/String;",
        "Ljava/text/DateFormatSymbols;->getWeekdays()[Ljava/lang/String;",
        "Ljava/text/DateFormatSymbols;->getShortMonths()[Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/time/StopWatch;": [
        "Lorg/apache/commons/lang/time/StopWatch;->getSplitTime()J",
        "Lorg/apache/commons/lang/time/StopWatch;->getTime()J"
    ],
    "Lorg/apache/commons/lang/time/DurationFormatUtils;": [
        "Lorg/apache/commons/lang/time/DurationFormatUtils;->formatDuration()Ljava/lang/String;",
        "Lorg/apache/commons/lang/time/DurationFormatUtils;->formatPeriod()Ljava/lang/String;",
        "Lorg/apache/commons/lang/time/DurationFormatUtils;->format()Ljava/lang/String;",
        "Lorg/apache/commons/lang/time/DurationFormatUtils;->lexx()[Lorg/apache/commons/lang/time/DurationFormatUtils$Token;",
        "Lorg/apache/commons/lang/time/DurationFormatUtils;->formatDurationHMS()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/time/DateFormatUtils;": [
        "Lorg/apache/commons/lang/time/DateFormatUtils;->format()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/time/DateUtils;": [
        "Lorg/apache/commons/lang/time/DateUtils;->iterator()Ljava/util/Iterator;",
        "Lorg/apache/commons/lang/time/DateUtils;->set()Ljava/util/Date;",
        "Lorg/apache/commons/lang/time/DateUtils;->round()Ljava/util/Date;",
        "Lorg/apache/commons/lang/time/DateUtils;->round()Ljava/util/Calendar;",
        "Lorg/apache/commons/lang/time/DateUtils;->isSameDay()Z",
        "Lorg/apache/commons/lang/time/DateUtils;->truncate()Ljava/util/Calendar;",
        "Lorg/apache/commons/lang/time/DateUtils;->truncate()Ljava/util/Date;",
        "Lorg/apache/commons/lang/time/DateUtils;->modify()V",
        "Lorg/apache/commons/lang/time/DateUtils;->getFragment()J",
        "Lorg/apache/commons/lang/time/DateUtils;->getMillisPerUnit()J",
        "Lorg/apache/commons/lang/time/DateUtils;->add()Ljava/util/Date;"
    ],
    "Lorg/apache/commons/lang/time/DurationFormatUtils$Token;": [
        "Lorg/apache/commons/lang/time/DurationFormatUtils$Token;->getValue()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/time/DurationFormatUtils$Token;->getCount()I",
        "Lorg/apache/commons/lang/time/DurationFormatUtils$Token;->containsTokenWithValue()Z",
        "Lorg/apache/commons/lang/time/DurationFormatUtils$Token;->increment()V"
    ],
    "Lorg/apache/commons/lang/builder/ToStringStyle;": [
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendFieldStart()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getArrayStart()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->reflectionAppendArrayDetail()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendSummarySize()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendNullText()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setFieldSeparatorAtStart()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getSummaryObjectStartText()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->removeLastFieldSeparator()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendStart()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendCyclicObject()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setSummaryObjectEndText()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendFieldEnd()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setArrayEnd()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setFieldSeparator()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setUseShortClassName()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getContentEnd()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendClassName()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->append()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendContentEnd()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getSizeStartText()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getArraySeparator()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendFieldSeparator()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getContentStart()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setDefaultFullDetail()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendContentStart()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isFieldSeparatorAtEnd()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isDefaultFullDetail()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendToString()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isUseIdentityHashCode()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setArrayContentDetail()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendSuper()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getFieldNameValueSeparator()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setUseFieldNames()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setUseIdentityHashCode()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendDetail()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setUseClassName()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->register()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setSizeEndText()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendInternal()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isUseFieldNames()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendEnd()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setFieldSeparatorAtEnd()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isArrayContentDetail()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setContentStart()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getShortClassName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getRegistry()Ljava/util/Set;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isUseShortClassName()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isRegistered()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getNullText()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getSummaryObjectEndText()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setNullText()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getFieldSeparator()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendIdentityHashCode()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setArraySeparator()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isFullDetail()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getArrayEnd()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->unregister()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setContentEnd()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setArrayStart()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->getSizeEndText()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setFieldNameValueSeparator()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isUseClassName()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setSizeStartText()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->isFieldSeparatorAtStart()Z",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->setSummaryObjectStartText()V",
        "Lorg/apache/commons/lang/builder/ToStringStyle;->appendSummary()V"
    ],
    "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;": [
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->isAppendStatics()Z",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->getExcludeFieldNames()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->getObject()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->append()Lorg/apache/commons/lang/builder/ToStringBuilder;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->isAppendTransients()Z",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->accept()Z",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->toString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->setAppendStatics()V",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->getValue()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->getStringBuffer()Ljava/lang/StringBuffer;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->setUpToClass()V",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->toNoNullStringArray()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->reflectionAppendArray()Lorg/apache/commons/lang/builder/ToStringBuilder;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->setAppendTransients()V",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->setExcludeFieldNames()Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->appendFieldsIn()V",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->toStringExclude()Ljava/lang/String;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->getStyle()Lorg/apache/commons/lang/builder/ToStringStyle;",
        "Lorg/apache/commons/lang/builder/ReflectionToStringBuilder;->getUpToClass()Ljava/lang/Class;"
    ],
    "Ljava/math/BigDecimal;": [
        "Ljava/math/BigDecimal;->compareTo()I",
        "Ljava/math/BigDecimal;->toBigInteger()Ljava/math/BigInteger;"
    ],
    "Lorg/apache/commons/lang/builder/CompareToBuilder;": [
        "Lorg/apache/commons/lang/builder/CompareToBuilder;->append()Lorg/apache/commons/lang/builder/CompareToBuilder;",
        "Lorg/apache/commons/lang/builder/CompareToBuilder;->reflectionCompare()I",
        "Lorg/apache/commons/lang/builder/CompareToBuilder;->toComparison()I",
        "Lorg/apache/commons/lang/builder/CompareToBuilder;->reflectionAppend()V"
    ],
    "Ljava/util/Comparator;": [
        "Ljava/util/Comparator;->compare()I"
    ],
    "Ljava/lang/IllegalAccessException;": [
        "Ljava/lang/IllegalAccessException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/enum/Enum;": [
        "Lorg/apache/commons/lang/enum/Enum;->getEnumList()Ljava/util/List;",
        "Lorg/apache/commons/lang/enum/Enum;->getEnumClass()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/enum/Enum;->createEntry()Lorg/apache/commons/lang/enum/Enum$Entry;",
        "Lorg/apache/commons/lang/enum/Enum;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/enum/Enum;->getNameInOtherClassLoader()Ljava/lang/String;",
        "Lorg/apache/commons/lang/enum/Enum;->getEntry()Lorg/apache/commons/lang/enum/Enum$Entry;",
        "Lorg/apache/commons/lang/enum/Enum;->getName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/enum/Enum;->getEnum()Lorg/apache/commons/lang/enum/Enum;",
        "Lorg/apache/commons/lang/enum/Enum;->getEnumMap()Ljava/util/Map;"
    ],
    "Lorg/apache/commons/lang/enum/ValuedEnum;": [
        "Lorg/apache/commons/lang/enum/ValuedEnum;->getEnumClass()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/enum/ValuedEnum;->getName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/enum/ValuedEnum;->getEnum()Lorg/apache/commons/lang/enum/Enum;",
        "Lorg/apache/commons/lang/enum/ValuedEnum;->getValue()I"
    ],
    "Lorg/apache/commons/lang/enums/Enum;": [
        "Lorg/apache/commons/lang/enums/Enum;->getEnumClass()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/enums/Enum;->getEnum()Lorg/apache/commons/lang/enums/Enum;",
        "Lorg/apache/commons/lang/enums/Enum;->getName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/enums/Enum;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/enums/Enum;->getEnumMap()Ljava/util/Map;",
        "Lorg/apache/commons/lang/enums/Enum;->getEntry()Lorg/apache/commons/lang/enums/Enum$Entry;",
        "Lorg/apache/commons/lang/enums/Enum;->getNameInOtherClassLoader()Ljava/lang/String;",
        "Lorg/apache/commons/lang/enums/Enum;->createEntry()Lorg/apache/commons/lang/enums/Enum$Entry;",
        "Lorg/apache/commons/lang/enums/Enum;->getEnumList()Ljava/util/List;"
    ],
    "Lorg/apache/commons/lang/enums/ValuedEnum;": [
        "Lorg/apache/commons/lang/enums/ValuedEnum;->getEnumClass()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/enums/ValuedEnum;->getValueInOtherClassLoader()I",
        "Lorg/apache/commons/lang/enums/ValuedEnum;->getName()Ljava/lang/String;",
        "Lorg/apache/commons/lang/enums/ValuedEnum;->getEnum()Lorg/apache/commons/lang/enums/Enum;",
        "Lorg/apache/commons/lang/enums/ValuedEnum;->getValue()I"
    ],
    "Lorg/apache/commons/lang/math/RandomUtils;": [
        "Lorg/apache/commons/lang/math/RandomUtils;->nextBoolean()Z",
        "Lorg/apache/commons/lang/math/RandomUtils;->nextInt()I",
        "Lorg/apache/commons/lang/math/RandomUtils;->nextLong()J",
        "Lorg/apache/commons/lang/math/RandomUtils;->nextFloat()F",
        "Lorg/apache/commons/lang/math/RandomUtils;->nextDouble()D"
    ],
    "Lorg/apache/commons/lang/math/Fraction;": [
        "Lorg/apache/commons/lang/math/Fraction;->getReducedFraction()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->greatestCommonDivisor()I",
        "Lorg/apache/commons/lang/math/Fraction;->equals()Z",
        "Lorg/apache/commons/lang/math/Fraction;->getProperNumerator()I",
        "Lorg/apache/commons/lang/math/Fraction;->invert()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->mulPosAndCheck()I",
        "Lorg/apache/commons/lang/math/Fraction;->multiplyBy()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->getNumerator()I",
        "Lorg/apache/commons/lang/math/Fraction;->pow()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->mulAndCheck()I",
        "Lorg/apache/commons/lang/math/Fraction;->subAndCheck()I",
        "Lorg/apache/commons/lang/math/Fraction;->addSub()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->getFraction()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->negate()Lorg/apache/commons/lang/math/Fraction;",
        "Lorg/apache/commons/lang/math/Fraction;->getProperWhole()I",
        "Lorg/apache/commons/lang/math/Fraction;->getDenominator()I",
        "Lorg/apache/commons/lang/math/Fraction;->addAndCheck()I"
    ],
    "Lorg/apache/commons/lang/math/FloatRange;": [
        "Lorg/apache/commons/lang/math/FloatRange;->containsFloat()Z"
    ],
    "Lorg/apache/commons/lang/math/Range;": [
        "Lorg/apache/commons/lang/math/Range;->getMinimumInteger()I",
        "Lorg/apache/commons/lang/math/Range;->getMaximumInteger()I",
        "Lorg/apache/commons/lang/math/Range;->getMaximumLong()J",
        "Lorg/apache/commons/lang/math/Range;->getMinimumLong()J",
        "Lorg/apache/commons/lang/math/Range;->containsLong()Z",
        "Lorg/apache/commons/lang/math/Range;->getMinimumDouble()D",
        "Lorg/apache/commons/lang/math/Range;->getMaximumFloat()F",
        "Lorg/apache/commons/lang/math/Range;->containsInteger()Z",
        "Lorg/apache/commons/lang/math/Range;->containsDouble()Z",
        "Lorg/apache/commons/lang/math/Range;->getMinimumNumber()Ljava/lang/Number;",
        "Lorg/apache/commons/lang/math/Range;->containsNumber()Z",
        "Lorg/apache/commons/lang/math/Range;->getMaximumNumber()Ljava/lang/Number;",
        "Lorg/apache/commons/lang/math/Range;->getMinimumFloat()F",
        "Lorg/apache/commons/lang/math/Range;->getMaximumDouble()D",
        "Lorg/apache/commons/lang/math/Range;->containsFloat()Z"
    ],
    "Lorg/apache/commons/lang/math/JVMRandom;": [
        "Lorg/apache/commons/lang/math/JVMRandom;->nextInt()I",
        "Lorg/apache/commons/lang/math/JVMRandom;->nextLong()J"
    ],
    "Lorg/apache/commons/lang/math/IEEE754rUtils;": [
        "Lorg/apache/commons/lang/math/IEEE754rUtils;->max()D",
        "Lorg/apache/commons/lang/math/IEEE754rUtils;->max()F",
        "Lorg/apache/commons/lang/math/IEEE754rUtils;->min()D",
        "Lorg/apache/commons/lang/math/IEEE754rUtils;->min()F"
    ],
    "Lorg/apache/commons/lang/math/IntRange;": [
        "Lorg/apache/commons/lang/math/IntRange;->containsInteger()Z"
    ],
    "Lorg/apache/commons/lang/math/LongRange;": [
        "Lorg/apache/commons/lang/math/LongRange;->containsLong()Z"
    ],
    "Lorg/apache/commons/lang/math/DoubleRange;": [
        "Lorg/apache/commons/lang/math/DoubleRange;->containsDouble()Z"
    ],
    "Lorg/apache/commons/lang/exception/ExceptionUtils;": [
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getMessage()Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getCauseUsingMethodName()Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->printRootCauseStackTrace()V",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getStackFrameList()Ljava/util/List;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getStackFrames()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getThrowableList()Ljava/util/List;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->toArray()[Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->removeCommonFrames()V",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getThrowables()[Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getCauseUsingWellKnownTypes()Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getRootCause()Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->isNestedThrowable()Z",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->isCauseMethodName()Z",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getStackTrace()Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getCauseMethodNameList()Ljava/util/ArrayList;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getThrowableCount()I",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->indexOf()I",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getCauseUsingFieldName()Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->isThrowableNested()Z",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getCause()Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/ExceptionUtils;->getRootCauseStackTrace()[Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/exception/Nestable;": [
        "Lorg/apache/commons/lang/exception/Nestable;->getMessage()Ljava/lang/String;",
        "Lorg/apache/commons/lang/exception/Nestable;->getCause()Ljava/lang/Throwable;",
        "Lorg/apache/commons/lang/exception/Nestable;->printPartialStackTrace()V"
    ],
    "Ljava/sql/SQLException;": [
        "Ljava/sql/SQLException;->getNextException()Ljava/sql/SQLException;"
    ],
    "Ljava/lang/reflect/InvocationTargetException;": [
        "Ljava/lang/reflect/InvocationTargetException;->getTargetException()Ljava/lang/Throwable;",
        "Ljava/lang/reflect/InvocationTargetException;->getCause()Ljava/lang/Throwable;"
    ],
    "Ljava/util/StringTokenizer;": [
        "Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;",
        "Ljava/util/StringTokenizer;->hasMoreTokens()Z",
        "Ljava/util/StringTokenizer;->countTokens()I"
    ],
    "Ljava/io/PrintWriter;": [
        "Ljava/io/PrintWriter;->close()V",
        "Ljava/io/PrintWriter;->flush()V",
        "Ljava/io/PrintWriter;->println()V",
        "Ljava/io/PrintWriter;->print()V"
    ],
    "Lorg/apache/commons/lang/text/ExtendedMessageFormat;": [
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->appendQuotedString()Ljava/lang/StringBuffer;",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->insertFormats()Ljava/lang/String;",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->getQuotedString()V",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->parseFormatDescription()Ljava/lang/String;",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->containsElements()Z",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->getFormats()[Ljava/text/Format;",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->seekNonWs()V",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->readArgumentIndex()I",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->setLocale()V",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->getFormat()Ljava/text/Format;",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->applyPattern()V",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->next()Ljava/text/ParsePosition;",
        "Lorg/apache/commons/lang/text/ExtendedMessageFormat;->getLocale()Ljava/util/Locale;"
    ],
    "Lorg/apache/commons/lang/text/FormatFactory;": [
        "Lorg/apache/commons/lang/text/FormatFactory;->getFormat()Ljava/text/Format;"
    ],
    "Lorg/apache/commons/lang/text/StrMatcher;": [
        "Lorg/apache/commons/lang/text/StrMatcher;->stringMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->tabMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->charMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->noneMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->isMatch()I",
        "Lorg/apache/commons/lang/text/StrMatcher;->doubleQuoteMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->trimMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->commaMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrMatcher;->splitMatcher()Lorg/apache/commons/lang/text/StrMatcher;"
    ],
    "Ljava/text/MessageFormat;": [
        "Ljava/text/MessageFormat;->setFormats()V",
        "Ljava/text/MessageFormat;->applyPattern()V",
        "Ljava/text/MessageFormat;->toPattern()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/text/StrTokenizer;": [
        "Lorg/apache/commons/lang/text/StrTokenizer;->isQuote()Z",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setDelimiterMatcher()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->checkTokenized()V",
        "Lorg/apache/commons/lang/text/StrTokenizer;->readNextToken()I",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getQuoteMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setTrimmerMatcher()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getIgnoredMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->isEmptyTokenAsNull()Z",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getTokenList()Ljava/util/List;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setDelimiterString()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getCSVClone()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->clone()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setEmptyTokenAsNull()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setIgnoreEmptyTokens()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setQuoteMatcher()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setDelimiterChar()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->reset()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getTrimmerMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->addToken()V",
        "Lorg/apache/commons/lang/text/StrTokenizer;->readWithQuotes()I",
        "Lorg/apache/commons/lang/text/StrTokenizer;->tokenize()Ljava/util/List;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->hasPrevious()Z",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setIgnoredMatcher()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->cloneReset()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getTSVClone()Lorg/apache/commons/lang/text/StrTokenizer;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->getDelimiterMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrTokenizer;->hasNext()Z",
        "Lorg/apache/commons/lang/text/StrTokenizer;->isIgnoreEmptyTokens()Z",
        "Lorg/apache/commons/lang/text/StrTokenizer;->setQuoteChar()Lorg/apache/commons/lang/text/StrTokenizer;"
    ],
    "Lorg/apache/commons/lang/text/StrBuilder;": [
        "Lorg/apache/commons/lang/text/StrBuilder;->clear()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->replaceImpl()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->substring()Ljava/lang/String;",
        "Lorg/apache/commons/lang/text/StrBuilder;->deleteCharAt()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->length()I",
        "Lorg/apache/commons/lang/text/StrBuilder;->insert()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->toString()Ljava/lang/String;",
        "Lorg/apache/commons/lang/text/StrBuilder;->getChars()V",
        "Lorg/apache/commons/lang/text/StrBuilder;->getNullText()Ljava/lang/String;",
        "Lorg/apache/commons/lang/text/StrBuilder;->appendNewLine()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->appendFixedWidthPadRight()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->appendWithSeparators()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->size()I",
        "Lorg/apache/commons/lang/text/StrBuilder;->appendNull()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->replace()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->validateIndex()V",
        "Lorg/apache/commons/lang/text/StrBuilder;->replaceImpl()V",
        "Lorg/apache/commons/lang/text/StrBuilder;->validateRange()I",
        "Lorg/apache/commons/lang/text/StrBuilder;->append()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->equals()Z",
        "Lorg/apache/commons/lang/text/StrBuilder;->delete()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->ensureCapacity()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->appendFixedWidthPadLeft()Lorg/apache/commons/lang/text/StrBuilder;",
        "Lorg/apache/commons/lang/text/StrBuilder;->deleteImpl()V",
        "Lorg/apache/commons/lang/text/StrBuilder;->lastIndexOf()I",
        "Lorg/apache/commons/lang/text/StrBuilder;->indexOf()I"
    ],
    "Ljava/text/Format;": [
        "Ljava/text/Format;->format()Ljava/lang/StringBuffer;",
        "Ljava/text/Format;->parseObject()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/lang/text/CompositeFormat;": [
        "Lorg/apache/commons/lang/text/CompositeFormat;->parseObject()Ljava/lang/Object;",
        "Lorg/apache/commons/lang/text/CompositeFormat;->format()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/text/StrLookup;": [
        "Lorg/apache/commons/lang/text/StrLookup;->mapLookup()Lorg/apache/commons/lang/text/StrLookup;",
        "Lorg/apache/commons/lang/text/StrLookup;->systemPropertiesLookup()Lorg/apache/commons/lang/text/StrLookup;",
        "Lorg/apache/commons/lang/text/StrLookup;->lookup()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/lang/text/StrSubstitutor;": [
        "Lorg/apache/commons/lang/text/StrSubstitutor;->setEscapeChar()V",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->resolveVariable()Ljava/lang/String;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->getVariableSuffixMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->getEscapeChar()C",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->getVariablePrefixMatcher()Lorg/apache/commons/lang/text/StrMatcher;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->substitute()I",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->substitute()Z",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->replaceIn()Z",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->getVariableResolver()Lorg/apache/commons/lang/text/StrLookup;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->setVariablePrefix()Lorg/apache/commons/lang/text/StrSubstitutor;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->setVariableSuffixMatcher()Lorg/apache/commons/lang/text/StrSubstitutor;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->checkCyclicSubstitution()V",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->setVariablePrefixMatcher()Lorg/apache/commons/lang/text/StrSubstitutor;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->setVariableSuffix()Lorg/apache/commons/lang/text/StrSubstitutor;",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->setVariableResolver()V",
        "Lorg/apache/commons/lang/text/StrSubstitutor;->replace()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/Encoder;": [
        "Lorg/apache/commons/codec/Encoder;->encode()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/codec/digest/DigestUtils;": [
        "Lorg/apache/commons/codec/digest/DigestUtils;->getDigest()Ljava/security/MessageDigest;",
        "Lorg/apache/commons/codec/digest/DigestUtils;->getMd5Digest()Ljava/security/MessageDigest;",
        "Lorg/apache/commons/codec/digest/DigestUtils;->md5()[B",
        "Lorg/apache/commons/codec/digest/DigestUtils;->sha()[B",
        "Lorg/apache/commons/codec/digest/DigestUtils;->getShaDigest()Ljava/security/MessageDigest;"
    ],
    "Lorg/apache/commons/codec/binary/Hex;": [
        "Lorg/apache/commons/codec/binary/Hex;->encodeHex()[C",
        "Lorg/apache/commons/codec/binary/Hex;->decodeHex()[B",
        "Lorg/apache/commons/codec/binary/Hex;->toDigit()I"
    ],
    "Lorg/apache/commons/codec/net/RFC1522Codec;": [
        "Lorg/apache/commons/codec/net/RFC1522Codec;->doEncoding()[B",
        "Lorg/apache/commons/codec/net/RFC1522Codec;->doDecoding()[B",
        "Lorg/apache/commons/codec/net/RFC1522Codec;->getEncoding()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/net/QuotedPrintableCodec;": [
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->encode()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->decode()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->decodeQuotedPrintable()[B",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->encode()[B",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->decode()[B",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->encodeQuotedPrintable()[B",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->encodeQuotedPrintable()V",
        "Lorg/apache/commons/codec/net/QuotedPrintableCodec;->getDefaultCharset()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/net/BCodec;": [
        "Lorg/apache/commons/codec/net/BCodec;->encode()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/BCodec;->decodeText()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/BCodec;->encodeText()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/BCodec;->getDefaultCharset()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/BCodec;->decode()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/binary/Base64;": [
        "Lorg/apache/commons/codec/binary/Base64;->encode()[B",
        "Lorg/apache/commons/codec/binary/Base64;->isBase64()Z",
        "Lorg/apache/commons/codec/binary/Base64;->discardWhitespace()[B",
        "Lorg/apache/commons/codec/binary/Base64;->encodeBase64()[B",
        "Lorg/apache/commons/codec/binary/Base64;->decode()[B",
        "Lorg/apache/commons/codec/binary/Base64;->discardNonBase64()[B",
        "Lorg/apache/commons/codec/binary/Base64;->decodeBase64()[B"
    ],
    "Lorg/apache/commons/codec/net/QCodec;": [
        "Lorg/apache/commons/codec/net/QCodec;->getDefaultCharset()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/QCodec;->decodeText()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/QCodec;->decode()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/QCodec;->encodeText()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/QCodec;->encode()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/net/URLCodec;": [
        "Lorg/apache/commons/codec/net/URLCodec;->encode()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/URLCodec;->decode()[B",
        "Lorg/apache/commons/codec/net/URLCodec;->encodeUrl()[B",
        "Lorg/apache/commons/codec/net/URLCodec;->decodeUrl()[B",
        "Lorg/apache/commons/codec/net/URLCodec;->getDefaultCharset()Ljava/lang/String;",
        "Lorg/apache/commons/codec/net/URLCodec;->encode()[B",
        "Lorg/apache/commons/codec/net/URLCodec;->decode()Ljava/lang/String;"
    ],
    "Ljava/lang/ClassCastException;": [
        "Ljava/lang/ClassCastException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/binary/BinaryCodec;": [
        "Lorg/apache/commons/codec/binary/BinaryCodec;->toAsciiBytes()[B",
        "Lorg/apache/commons/codec/binary/BinaryCodec;->fromAscii()[B",
        "Lorg/apache/commons/codec/binary/BinaryCodec;->toAsciiChars()[C"
    ],
    "Lorg/apache/commons/codec/language/Metaphone;": [
        "Lorg/apache/commons/codec/language/Metaphone;->regionMatch()Z",
        "Lorg/apache/commons/codec/language/Metaphone;->isLastChar()Z",
        "Lorg/apache/commons/codec/language/Metaphone;->isPreviousChar()Z",
        "Lorg/apache/commons/codec/language/Metaphone;->isVowel()Z",
        "Lorg/apache/commons/codec/language/Metaphone;->isNextChar()Z",
        "Lorg/apache/commons/codec/language/Metaphone;->metaphone()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/Metaphone;->getMaxCodeLen()I"
    ],
    "Lorg/apache/commons/codec/language/DoubleMetaphone;": [
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->isVowel()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleG()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleC()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->conditionL0()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleX()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->isSlavoGermanic()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleW()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleZ()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->conditionCH1()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->conditionCH0()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleH()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleT()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->contains()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleCC()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleAEIOUY()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleL()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleR()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleS()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->doubleMetaphone()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleSC()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->isDoubleMetaphoneEqual()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleP()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->cleanInput()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->conditionC0()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleD()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->charAt()C",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->getMaxCodeLen()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->isSilentStart()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleJ()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleCH()I",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->conditionM0()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone;->handleGH()I"
    ],
    "Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;": [
        "Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;->getAlternate()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;->isComplete()Z",
        "Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;->appendAlternate()V",
        "Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;->append()V",
        "Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;->getPrimary()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/StringEncoder;": [
        "Lorg/apache/commons/codec/StringEncoder;->encode()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/language/SoundexUtils;": [
        "Lorg/apache/commons/codec/language/SoundexUtils;->difference()I",
        "Lorg/apache/commons/codec/language/SoundexUtils;->clean()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/SoundexUtils;->differenceEncoded()I"
    ],
    "Lorg/apache/commons/codec/language/Soundex;": [
        "Lorg/apache/commons/codec/language/Soundex;->soundex()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/Soundex;->setSoundexMapping()V",
        "Lorg/apache/commons/codec/language/Soundex;->map()C",
        "Lorg/apache/commons/codec/language/Soundex;->getMappingCode()C",
        "Lorg/apache/commons/codec/language/Soundex;->getSoundexMapping()[C"
    ],
    "Lorg/apache/commons/codec/language/RefinedSoundex;": [
        "Lorg/apache/commons/codec/language/RefinedSoundex;->soundex()Ljava/lang/String;",
        "Lorg/apache/commons/codec/language/RefinedSoundex;->getMappingCode()C"
    ],
    "Ljava/lang/ClassLoader;": [
        "Ljava/lang/ClassLoader;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/ClassLoader;->loadClass()Ljava/lang/Class;",
        "Ljava/lang/ClassLoader;->getResource()Ljava/net/URL;",
        "Ljava/lang/ClassLoader;->getSystemClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/ClassLoader;->getParent()Ljava/lang/ClassLoader;",
        "Ljava/lang/ClassLoader;->getSystemResource()Ljava/net/URL;"
    ],
    "Ljava/security/AccessController;": [
        "Ljava/security/AccessController;->doPrivileged()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/logging/LogSource;": [
        "Lorg/apache/commons/logging/LogSource;->getInstance()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/LogSource;->setLogImplementation()V",
        "Lorg/apache/commons/logging/LogSource;->makeNewLogInstance()Lorg/apache/commons/logging/Log;"
    ],
    "Lorg/apache/commons/logging/impl/ServletContextCleaner;": [
        "Lorg/apache/commons/logging/impl/ServletContextCleaner;->class$()Ljava/lang/Class;"
    ],
    "Lorg/apache/commons/logging/impl/LogKitLogger;": [
        "Lorg/apache/commons/logging/impl/LogKitLogger;->getLogger()Lorg/apache/log/Logger;",
        "Lorg/apache/commons/logging/impl/LogKitLogger;->debug()V"
    ],
    "Lorg/apache/log/Logger;": [
        "Lorg/apache/log/Logger;->warn()V",
        "Lorg/apache/log/Logger;->debug()V",
        "Lorg/apache/log/Logger;->isFatalErrorEnabled()Z",
        "Lorg/apache/log/Logger;->info()V",
        "Lorg/apache/log/Logger;->isInfoEnabled()Z",
        "Lorg/apache/log/Logger;->fatalError()V",
        "Lorg/apache/log/Logger;->isWarnEnabled()Z",
        "Lorg/apache/log/Logger;->error()V",
        "Lorg/apache/log/Logger;->isErrorEnabled()Z",
        "Lorg/apache/log/Logger;->isDebugEnabled()Z"
    ],
    "Lorg/apache/log/Hierarchy;": [
        "Lorg/apache/log/Hierarchy;->getLoggerFor()Lorg/apache/log/Logger;",
        "Lorg/apache/log/Hierarchy;->getDefaultHierarchy()Lorg/apache/log/Hierarchy;"
    ],
    "Lorg/apache/avalon/framework/logger/Logger;": [
        "Lorg/apache/avalon/framework/logger/Logger;->warn()V",
        "Lorg/apache/avalon/framework/logger/Logger;->info()V",
        "Lorg/apache/avalon/framework/logger/Logger;->isWarnEnabled()Z",
        "Lorg/apache/avalon/framework/logger/Logger;->isInfoEnabled()Z",
        "Lorg/apache/avalon/framework/logger/Logger;->error()V",
        "Lorg/apache/avalon/framework/logger/Logger;->isDebugEnabled()Z",
        "Lorg/apache/avalon/framework/logger/Logger;->getChildLogger()Lorg/apache/avalon/framework/logger/Logger;",
        "Lorg/apache/avalon/framework/logger/Logger;->isErrorEnabled()Z",
        "Lorg/apache/avalon/framework/logger/Logger;->fatalError()V",
        "Lorg/apache/avalon/framework/logger/Logger;->isFatalErrorEnabled()Z",
        "Lorg/apache/avalon/framework/logger/Logger;->debug()V"
    ],
    "Lorg/apache/commons/logging/impl/AvalonLogger;": [
        "Lorg/apache/commons/logging/impl/AvalonLogger;->getLogger()Lorg/apache/avalon/framework/logger/Logger;"
    ],
    "Ljava/lang/ref/ReferenceQueue;": [
        "Ljava/lang/ref/ReferenceQueue;->remove()Ljava/lang/ref/Reference;",
        "Ljava/lang/ref/ReferenceQueue;->poll()Ljava/lang/ref/Reference;"
    ],
    "Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey;": [
        "Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey;->access$400()Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;"
    ],
    "Lorg/apache/commons/logging/impl/WeakHashtable;": [
        "Lorg/apache/commons/logging/impl/WeakHashtable;->purgeOne()V",
        "Lorg/apache/commons/logging/impl/WeakHashtable;->purge()V",
        "Lorg/apache/commons/logging/impl/WeakHashtable;->put()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;": [
        "Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;->access$100()Ljava/lang/Object;"
    ],
    "Lorg/apache/commons/logging/impl/Jdk14Logger;": [
        "Lorg/apache/commons/logging/impl/Jdk14Logger;->log()V",
        "Lorg/apache/commons/logging/impl/Jdk14Logger;->getLogger()Ljava/util/logging/Logger;"
    ],
    "Lorg/apache/commons/logging/impl/Log4JLogger;": [
        "Lorg/apache/commons/logging/impl/Log4JLogger;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/logging/impl/Log4JLogger;->getLogger()Lorg/apache/log4j/Logger;"
    ],
    "Lorg/apache/log4j/Category;": [
        "Lorg/apache/log4j/Category;->getName()Ljava/lang/String;",
        "Lorg/apache/log4j/Category;->isEnabledFor()Z",
        "Lorg/apache/log4j/Category;->log()V",
        "Lorg/apache/log4j/Category;->isInfoEnabled()Z",
        "Lorg/apache/log4j/Category;->isDebugEnabled()Z"
    ],
    "Lorg/apache/log4j/Logger;": [
        "Lorg/apache/log4j/Logger;->getLogger()Lorg/apache/log4j/Logger;"
    ],
    "Lorg/apache/commons/logging/impl/Jdk13LumberjackLogger;": [
        "Lorg/apache/commons/logging/impl/Jdk13LumberjackLogger;->getLogger()Ljava/util/logging/Logger;",
        "Lorg/apache/commons/logging/impl/Jdk13LumberjackLogger;->log()V",
        "Lorg/apache/commons/logging/impl/Jdk13LumberjackLogger;->getClassAndMethod()V"
    ],
    "Ljava/util/logging/LogRecord;": [
        "Ljava/util/logging/LogRecord;->setSourceMethodName()V",
        "Ljava/util/logging/LogRecord;->setThrown()V",
        "Ljava/util/logging/LogRecord;->setSourceClassName()V"
    ],
    "Lorg/apache/commons/logging/impl/SimpleLog;": [
        "Lorg/apache/commons/logging/impl/SimpleLog;->isLevelEnabled()Z",
        "Lorg/apache/commons/logging/impl/SimpleLog;->getContextClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/impl/SimpleLog;->getBooleanProperty()Z",
        "Lorg/apache/commons/logging/impl/SimpleLog;->write()V",
        "Lorg/apache/commons/logging/impl/SimpleLog;->setLevel()V",
        "Lorg/apache/commons/logging/impl/SimpleLog;->getStringProperty()Ljava/lang/String;",
        "Lorg/apache/commons/logging/impl/SimpleLog;->log()V",
        "Lorg/apache/commons/logging/impl/SimpleLog;->getResourceAsStream()Ljava/io/InputStream;",
        "Lorg/apache/commons/logging/impl/SimpleLog;->class$()Ljava/lang/Class;"
    ],
    "Lorg/apache/commons/logging/impl/LogFactoryImpl;": [
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->isDiagnosticsEnabled()Z",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->handleFlawedHierarchy()V",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->newInstance()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getAttribute()Ljava/lang/Object;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->isLogLibraryAvailable()Z",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getContextClassLoaderInternal()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->createLogFromClass()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->class$()Ljava/lang/Class;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getLowestClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getInstance()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->logDiagnostic()V",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getBaseClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getBooleanConfiguration()Z",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->findUserSpecifiedLogClassName()Ljava/lang/String;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->discoverLogImplementation()Lorg/apache/commons/logging/Log;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getSystemProperty()Ljava/lang/String;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->handleFlawedDiscovery()V",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getParentClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->getConfigurationValue()Ljava/lang/String;",
        "Lorg/apache/commons/logging/impl/LogFactoryImpl;->informUponSimilarName()V"
    ],
    "Ljava/lang/ExceptionInInitializerError;": [
        "Ljava/lang/ExceptionInInitializerError;->getException()Ljava/lang/Throwable;"
    ],
    "Lorg/apache/http/util/LangUtils;": [
        "Lorg/apache/http/util/LangUtils;->equals()Z",
        "Lorg/apache/http/util/LangUtils;->hashCode()I"
    ],
    "Lorg/apache/http/util/CharArrayBuffer;": [
        "Lorg/apache/http/util/CharArrayBuffer;->substring()Ljava/lang/String;",
        "Lorg/apache/http/util/CharArrayBuffer;->indexOf()I",
        "Lorg/apache/http/util/CharArrayBuffer;->expand()V",
        "Lorg/apache/http/util/CharArrayBuffer;->charAt()C",
        "Lorg/apache/http/util/CharArrayBuffer;->append()V",
        "Lorg/apache/http/util/CharArrayBuffer;->toString()Ljava/lang/String;",
        "Lorg/apache/http/util/CharArrayBuffer;->substringTrimmed()Ljava/lang/String;",
        "Lorg/apache/http/util/CharArrayBuffer;->ensureCapacity()V",
        "Lorg/apache/http/util/CharArrayBuffer;->length()I",
        "Lorg/apache/http/util/CharArrayBuffer;->clear()V",
        "Lorg/apache/http/util/CharArrayBuffer;->buffer()[C"
    ],
    "Lorg/apache/http/HttpHost;": [
        "Lorg/apache/http/HttpHost;->getSchemeName()Ljava/lang/String;",
        "Lorg/apache/http/HttpHost;->getHostName()Ljava/lang/String;",
        "Lorg/apache/http/HttpHost;->equals()Z",
        "Lorg/apache/http/HttpHost;->hashCode()I",
        "Lorg/apache/http/HttpHost;->getPort()I",
        "Lorg/apache/http/HttpHost;->toHostString()Ljava/lang/String;",
        "Lorg/apache/http/HttpHost;->toURI()Ljava/lang/String;"
    ],
    "Lorg/apache/http/ProtocolVersion;": [
        "Lorg/apache/http/ProtocolVersion;->getProtocol()Ljava/lang/String;",
        "Lorg/apache/http/ProtocolVersion;->compareToVersion()I",
        "Lorg/apache/http/ProtocolVersion;->forVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/ProtocolVersion;->lessEquals()Z",
        "Lorg/apache/http/ProtocolVersion;->isComparable()Z",
        "Lorg/apache/http/ProtocolVersion;->getMinor()I",
        "Lorg/apache/http/ProtocolVersion;->getMajor()I"
    ],
    "Lorg/apache/http/conn/MultihomePlainSocketFactory;": [
        "Lorg/apache/http/conn/MultihomePlainSocketFactory;->createSocket()Ljava/net/Socket;"
    ],
    "Ljava/net/Socket;": [
        "Ljava/net/Socket;->getInetAddress()Ljava/net/InetAddress;",
        "Ljava/net/Socket;->getLocalPort()I",
        "Ljava/net/Socket;->getLocalAddress()Ljava/net/InetAddress;",
        "Ljava/net/Socket;->getPort()I",
        "Ljava/net/Socket;->getReceiveBufferSize()I",
        "Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/Socket;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/Socket;->connect()V",
        "Ljava/net/Socket;->getSoTimeout()I",
        "Ljava/net/Socket;->setSoTimeout()V",
        "Ljava/net/Socket;->isClosed()Z",
        "Ljava/net/Socket;->shutdownOutput()V",
        "Ljava/net/Socket;->setSoLinger()V",
        "Ljava/net/Socket;->getSendBufferSize()I",
        "Ljava/net/Socket;->bind()V",
        "Ljava/net/Socket;->shutdownInput()V",
        "Ljava/net/Socket;->setTcpNoDelay()V",
        "Ljava/net/Socket;->close()V"
    ],
    "Lorg/apache/http/conn/ManagedClientConnection;": [
        "Lorg/apache/http/conn/ManagedClientConnection;->open()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->markReusable()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->getRoute()Lorg/apache/http/conn/routing/HttpRoute;",
        "Lorg/apache/http/conn/ManagedClientConnection;->close()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->tunnelTarget()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->tunnelProxy()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->setIdleDuration()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->layerProtocol()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->setSocketTimeout()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->isStale()Z",
        "Lorg/apache/http/conn/ManagedClientConnection;->releaseConnection()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->setState()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->getSSLSession()Ljavax/net/ssl/SSLSession;",
        "Lorg/apache/http/conn/ManagedClientConnection;->isSecure()Z",
        "Lorg/apache/http/conn/ManagedClientConnection;->getRemotePort()I",
        "Lorg/apache/http/conn/ManagedClientConnection;->abortConnection()V",
        "Lorg/apache/http/conn/ManagedClientConnection;->isOpen()Z"
    ],
    "Lorg/apache/http/conn/BasicManagedEntity;": [
        "Lorg/apache/http/conn/BasicManagedEntity;->consumeContent()V",
        "Lorg/apache/http/conn/BasicManagedEntity;->releaseManagedConnection()V"
    ],
    "Lorg/apache/http/entity/HttpEntityWrapper;": [
        "Lorg/apache/http/entity/HttpEntityWrapper;->writeTo()V"
    ],
    "Lorg/apache/http/conn/EofSensorInputStream;": [
        "Lorg/apache/http/conn/EofSensorInputStream;->checkClose()V",
        "Lorg/apache/http/conn/EofSensorInputStream;->isReadAllowed()Z",
        "Lorg/apache/http/conn/EofSensorInputStream;->checkAbort()V",
        "Lorg/apache/http/conn/EofSensorInputStream;->checkEOF()V",
        "Lorg/apache/http/conn/EofSensorInputStream;->close()V"
    ],
    "Lorg/apache/http/conn/EofSensorWatcher;": [
        "Lorg/apache/http/conn/EofSensorWatcher;->streamAbort()Z",
        "Lorg/apache/http/conn/EofSensorWatcher;->streamClosed()Z",
        "Lorg/apache/http/conn/EofSensorWatcher;->eofDetected()Z"
    ],
    "Lorg/apache/http/conn/util/InetAddressUtils;": [
        "Lorg/apache/http/conn/util/InetAddressUtils;->isIPv4Address()Z",
        "Lorg/apache/http/conn/util/InetAddressUtils;->isIPv6Address()Z",
        "Lorg/apache/http/conn/util/InetAddressUtils;->isIPv6StdAddress()Z",
        "Lorg/apache/http/conn/util/InetAddressUtils;->isIPv6HexCompressedAddress()Z"
    ],
    "Lorg/apache/http/conn/scheme/HostNameResolver;": [
        "Lorg/apache/http/conn/scheme/HostNameResolver;->resolve()Ljava/net/InetAddress;"
    ],
    "Lorg/apache/http/conn/scheme/Scheme;": [
        "Lorg/apache/http/conn/scheme/Scheme;->getSocketFactory()Lorg/apache/http/conn/scheme/SocketFactory;",
        "Lorg/apache/http/conn/scheme/Scheme;->isLayered()Z",
        "Lorg/apache/http/conn/scheme/Scheme;->getName()Ljava/lang/String;",
        "Lorg/apache/http/conn/scheme/Scheme;->getDefaultPort()I",
        "Lorg/apache/http/conn/scheme/Scheme;->resolvePort()I"
    ],
    "Lorg/apache/http/conn/routing/HttpRoute;": [
        "Lorg/apache/http/conn/routing/HttpRoute;->equals()Z",
        "Lorg/apache/http/conn/routing/HttpRoute;->toChain()[Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/routing/HttpRoute;->getProxyHost()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/routing/HttpRoute;->getTargetHost()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/routing/HttpRoute;->isTunnelled()Z",
        "Lorg/apache/http/conn/routing/HttpRoute;->getLocalAddress()Ljava/net/InetAddress;",
        "Lorg/apache/http/conn/routing/HttpRoute;->getHopCount()I",
        "Lorg/apache/http/conn/routing/HttpRoute;->getHopTarget()Lorg/apache/http/HttpHost;"
    ],
    "Lorg/apache/http/conn/routing/RouteTracker;": [
        "Lorg/apache/http/conn/routing/RouteTracker;->isConnected()Z",
        "Lorg/apache/http/conn/routing/RouteTracker;->getTargetHost()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/routing/RouteTracker;->layerProtocol()V",
        "Lorg/apache/http/conn/routing/RouteTracker;->tunnelTarget()V",
        "Lorg/apache/http/conn/routing/RouteTracker;->isLayered()Z",
        "Lorg/apache/http/conn/routing/RouteTracker;->isTunnelled()Z",
        "Lorg/apache/http/conn/routing/RouteTracker;->connectProxy()V",
        "Lorg/apache/http/conn/routing/RouteTracker;->tunnelProxy()V",
        "Lorg/apache/http/conn/routing/RouteTracker;->toRoute()Lorg/apache/http/conn/routing/HttpRoute;",
        "Lorg/apache/http/conn/routing/RouteTracker;->connectTarget()V",
        "Lorg/apache/http/conn/routing/RouteTracker;->getHopCount()I"
    ],
    "Lorg/apache/http/conn/routing/RouteInfo$TunnelType;": [
        "Lorg/apache/http/conn/routing/RouteInfo$TunnelType;->hashCode()I"
    ],
    "Lorg/apache/http/conn/routing/RouteInfo$LayerType;": [
        "Lorg/apache/http/conn/routing/RouteInfo$LayerType;->hashCode()I"
    ],
    "Lorg/apache/http/conn/routing/RouteInfo;": [
        "Lorg/apache/http/conn/routing/RouteInfo;->isTunnelled()Z",
        "Lorg/apache/http/conn/routing/RouteInfo;->getHopCount()I",
        "Lorg/apache/http/conn/routing/RouteInfo;->getLocalAddress()Ljava/net/InetAddress;",
        "Lorg/apache/http/conn/routing/RouteInfo;->getHopTarget()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/routing/RouteInfo;->isSecure()Z",
        "Lorg/apache/http/conn/routing/RouteInfo;->getTargetHost()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/routing/RouteInfo;->isLayered()Z"
    ],
    "Lorg/apache/http/conn/routing/BasicRouteDirector;": [
        "Lorg/apache/http/conn/routing/BasicRouteDirector;->directStep()I",
        "Lorg/apache/http/conn/routing/BasicRouteDirector;->firstStep()I",
        "Lorg/apache/http/conn/routing/BasicRouteDirector;->proxiedStep()I"
    ],
    "Lorg/apache/http/conn/params/ConnPerRouteBean;": [
        "Lorg/apache/http/conn/params/ConnPerRouteBean;->setDefaultMaxPerRoute()V"
    ],
    "Ljavax/net/ssl/HttpsURLConnection;": [
        "Ljavax/net/ssl/HttpsURLConnection;->getDefaultSSLSocketFactory()Ljavax/net/ssl/SSLSocketFactory;"
    ],
    "Lorg/apache/http/conn/ssl/SSLSocketFactory;": [
        "Lorg/apache/http/conn/ssl/SSLSocketFactory;->createSocket()Ljava/net/Socket;",
        "Lorg/apache/http/conn/ssl/SSLSocketFactory;->createKeyManagers()[Ljavax/net/ssl/KeyManager;",
        "Lorg/apache/http/conn/ssl/SSLSocketFactory;->createTrustManagers()[Ljavax/net/ssl/TrustManager;",
        "Lorg/apache/http/conn/ssl/SSLSocketFactory;->getSocketFactory()Lorg/apache/http/conn/ssl/SSLSocketFactory;"
    ],
    "Ljavax/net/ssl/KeyManagerFactory;": [
        "Ljavax/net/ssl/KeyManagerFactory;->getInstance()Ljavax/net/ssl/KeyManagerFactory;",
        "Ljavax/net/ssl/KeyManagerFactory;->getDefaultAlgorithm()Ljava/lang/String;",
        "Ljavax/net/ssl/KeyManagerFactory;->getKeyManagers()[Ljavax/net/ssl/KeyManager;"
    ],
    "Ljavax/net/ssl/TrustManagerFactory;": [
        "Ljavax/net/ssl/TrustManagerFactory;->getInstance()Ljavax/net/ssl/TrustManagerFactory;",
        "Ljavax/net/ssl/TrustManagerFactory;->getDefaultAlgorithm()Ljava/lang/String;",
        "Ljavax/net/ssl/TrustManagerFactory;->getTrustManagers()[Ljavax/net/ssl/TrustManager;"
    ],
    "Ljavax/net/ssl/SSLSocket;": [
        "Ljavax/net/ssl/SSLSocket;->getSession()Ljavax/net/ssl/SSLSession;",
        "Ljavax/net/ssl/SSLSocket;->setSoTimeout()V",
        "Ljavax/net/ssl/SSLSocket;->bind()V",
        "Ljavax/net/ssl/SSLSocket;->getInputStream()Ljava/io/InputStream;",
        "Ljavax/net/ssl/SSLSocket;->connect()V",
        "Ljavax/net/ssl/SSLSocket;->startHandshake()V",
        "Ljavax/net/ssl/SSLSocket;->close()V"
    ],
    "Lorg/apache/http/conn/ssl/X509HostnameVerifier;": [
        "Lorg/apache/http/conn/ssl/X509HostnameVerifier;->verify()V"
    ],
    "Lorg/apache/http/conn/ssl/StrictHostnameVerifier;": [
        "Lorg/apache/http/conn/ssl/StrictHostnameVerifier;->verify()V"
    ],
    "Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;": [
        "Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;->verify()V"
    ],
    "Ljava/security/cert/X509Certificate;": [
        "Ljava/security/cert/X509Certificate;->getSubjectAlternativeNames()Ljava/util/Collection;",
        "Ljava/security/cert/X509Certificate;->getSubjectX500Principal()Ljavax/security/auth/x500/X500Principal;"
    ],
    "Ljavax/security/auth/x500/X500Principal;": [
        "Ljavax/security/auth/x500/X500Principal;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/conn/ssl/AbstractVerifier;": [
        "Lorg/apache/http/conn/ssl/AbstractVerifier;->verify()V",
        "Lorg/apache/http/conn/ssl/AbstractVerifier;->acceptableCountryWildcard()Z",
        "Lorg/apache/http/conn/ssl/AbstractVerifier;->countDots()I",
        "Lorg/apache/http/conn/ssl/AbstractVerifier;->getCNs()[Ljava/lang/String;",
        "Lorg/apache/http/conn/ssl/AbstractVerifier;->isIPAddress()Z",
        "Lorg/apache/http/conn/ssl/AbstractVerifier;->getSubjectAlts()[Ljava/lang/String;"
    ],
    "Ljavax/net/ssl/SSLSession;": [
        "Ljavax/net/ssl/SSLSession;->getLocalPrincipal()Ljava/security/Principal;",
        "Ljavax/net/ssl/SSLSession;->getPeerCertificates()[Ljava/security/cert/Certificate;"
    ],
    "Lorg/apache/http/impl/DefaultHttpRequestFactory;": [
        "Lorg/apache/http/impl/DefaultHttpRequestFactory;->isOneOf()Z"
    ],
    "Lorg/apache/http/RequestLine;": [
        "Lorg/apache/http/RequestLine;->getMethod()Ljava/lang/String;",
        "Lorg/apache/http/RequestLine;->getProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/RequestLine;->getUri()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/DefaultHttpServerConnection;": [
        "Lorg/apache/http/impl/DefaultHttpServerConnection;->getRemotePort()I",
        "Lorg/apache/http/impl/DefaultHttpServerConnection;->assertNotOpen()V",
        "Lorg/apache/http/impl/DefaultHttpServerConnection;->isOpen()Z"
    ],
    "Lorg/apache/http/impl/SocketHttpServerConnection;": [
        "Lorg/apache/http/impl/SocketHttpServerConnection;->createSessionInputBuffer()Lorg/apache/http/io/SessionInputBuffer;",
        "Lorg/apache/http/impl/SocketHttpServerConnection;->doFlush()V",
        "Lorg/apache/http/impl/SocketHttpServerConnection;->createHttpDataReceiver()Lorg/apache/http/io/SessionInputBuffer;",
        "Lorg/apache/http/impl/SocketHttpServerConnection;->bind()V",
        "Lorg/apache/http/impl/SocketHttpServerConnection;->createHttpDataTransmitter()Lorg/apache/http/io/SessionOutputBuffer;",
        "Lorg/apache/http/impl/SocketHttpServerConnection;->assertOpen()V",
        "Lorg/apache/http/impl/SocketHttpServerConnection;->createSessionOutputBuffer()Lorg/apache/http/io/SessionOutputBuffer;"
    ],
    "Lorg/apache/http/impl/DefaultHttpResponseFactory;": [
        "Lorg/apache/http/impl/DefaultHttpResponseFactory;->determineLocale()Ljava/util/Locale;"
    ],
    "Lorg/apache/http/ReasonPhraseCatalog;": [
        "Lorg/apache/http/ReasonPhraseCatalog;->getReason()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/DefaultHttpClientConnection;": [
        "Lorg/apache/http/impl/DefaultHttpClientConnection;->isOpen()Z",
        "Lorg/apache/http/impl/DefaultHttpClientConnection;->getRemotePort()I",
        "Lorg/apache/http/impl/DefaultHttpClientConnection;->assertNotOpen()V"
    ],
    "Lorg/apache/http/impl/SocketHttpClientConnection;": [
        "Lorg/apache/http/impl/SocketHttpClientConnection;->receiveResponseHeader()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->doFlush()V",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->shutdown()V",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->assertOpen()V",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->sendRequestHeader()V",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->createSessionOutputBuffer()Lorg/apache/http/io/SessionOutputBuffer;",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->bind()V",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->createSessionInputBuffer()Lorg/apache/http/io/SessionInputBuffer;",
        "Lorg/apache/http/impl/SocketHttpClientConnection;->close()V"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->toString()Ljava/lang/String;",
        "Ljava/util/HashMap;->clear()V"
    ],
    "Lorg/apache/http/io/HttpTransportMetrics;": [
        "Lorg/apache/http/io/HttpTransportMetrics;->getBytesTransferred()J",
        "Lorg/apache/http/io/HttpTransportMetrics;->reset()V"
    ],
    "Lorg/apache/http/impl/AbstractHttpClientConnection;": [
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->createEntitySerializer()Lorg/apache/http/impl/entity/EntitySerializer;",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->isOpen()Z",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->doFlush()V",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->createRequestWriter()Lorg/apache/http/io/HttpMessageWriter;",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->createHttpResponseFactory()Lorg/apache/http/HttpResponseFactory;",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->createEntityDeserializer()Lorg/apache/http/impl/entity/EntityDeserializer;",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->assertOpen()V",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->createResponseParser()Lorg/apache/http/io/HttpMessageParser;",
        "Lorg/apache/http/impl/AbstractHttpClientConnection;->isEof()Z"
    ],
    "Lorg/apache/http/io/SessionOutputBuffer;": [
        "Lorg/apache/http/io/SessionOutputBuffer;->flush()V",
        "Lorg/apache/http/io/SessionOutputBuffer;->getMetrics()Lorg/apache/http/io/HttpTransportMetrics;",
        "Lorg/apache/http/io/SessionOutputBuffer;->write()V",
        "Lorg/apache/http/io/SessionOutputBuffer;->writeLine()V"
    ],
    "Lorg/apache/http/io/SessionInputBuffer;": [
        "Lorg/apache/http/io/SessionInputBuffer;->readLine()I",
        "Lorg/apache/http/io/SessionInputBuffer;->getMetrics()Lorg/apache/http/io/HttpTransportMetrics;",
        "Lorg/apache/http/io/SessionInputBuffer;->read()I",
        "Lorg/apache/http/io/SessionInputBuffer;->isDataAvailable()Z",
        "Lorg/apache/http/io/SessionInputBuffer;->readLine()Ljava/lang/String;"
    ],
    "Lorg/apache/http/io/EofSensor;": [
        "Lorg/apache/http/io/EofSensor;->isEof()Z"
    ],
    "Lorg/apache/http/impl/entity/EntityDeserializer;": [
        "Lorg/apache/http/impl/entity/EntityDeserializer;->deserialize()Lorg/apache/http/HttpEntity;",
        "Lorg/apache/http/impl/entity/EntityDeserializer;->doDeserialize()Lorg/apache/http/entity/BasicHttpEntity;"
    ],
    "Lorg/apache/http/io/HttpMessageParser;": [
        "Lorg/apache/http/io/HttpMessageParser;->parse()Lorg/apache/http/HttpMessage;"
    ],
    "Lorg/apache/http/impl/HttpConnectionMetricsImpl;": [
        "Lorg/apache/http/impl/HttpConnectionMetricsImpl;->incrementRequestCount()V",
        "Lorg/apache/http/impl/HttpConnectionMetricsImpl;->incrementResponseCount()V"
    ],
    "Lorg/apache/http/HttpEntityEnclosingRequest;": [
        "Lorg/apache/http/HttpEntityEnclosingRequest;->expectContinue()Z",
        "Lorg/apache/http/HttpEntityEnclosingRequest;->getEntity()Lorg/apache/http/HttpEntity;",
        "Lorg/apache/http/HttpEntityEnclosingRequest;->setEntity()V"
    ],
    "Lorg/apache/http/impl/entity/EntitySerializer;": [
        "Lorg/apache/http/impl/entity/EntitySerializer;->doSerialize()Ljava/io/OutputStream;",
        "Lorg/apache/http/impl/entity/EntitySerializer;->serialize()V"
    ],
    "Lorg/apache/http/io/HttpMessageWriter;": [
        "Lorg/apache/http/io/HttpMessageWriter;->write()V"
    ],
    "Lorg/apache/http/impl/EnglishReasonPhraseCatalog;": [
        "Lorg/apache/http/impl/EnglishReasonPhraseCatalog;->setReason()V"
    ],
    "Lorg/apache/http/impl/AbstractHttpServerConnection;": [
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->createRequestParser()Lorg/apache/http/io/HttpMessageParser;",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->createEntityDeserializer()Lorg/apache/http/impl/entity/EntityDeserializer;",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->isOpen()Z",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->createResponseWriter()Lorg/apache/http/io/HttpMessageWriter;",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->assertOpen()V",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->isEof()Z",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->createHttpRequestFactory()Lorg/apache/http/HttpRequestFactory;",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->createEntitySerializer()Lorg/apache/http/impl/entity/EntitySerializer;",
        "Lorg/apache/http/impl/AbstractHttpServerConnection;->doFlush()V"
    ],
    "Lorg/apache/http/protocol/HttpContext;": [
        "Lorg/apache/http/protocol/HttpContext;->setAttribute()V",
        "Lorg/apache/http/protocol/HttpContext;->getAttribute()Ljava/lang/Object;",
        "Lorg/apache/http/protocol/HttpContext;->removeAttribute()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/HttpConnection;": [
        "Lorg/apache/http/HttpConnection;->isOpen()Z",
        "Lorg/apache/http/HttpConnection;->close()V"
    ],
    "Lorg/apache/http/HeaderIterator;": [
        "Lorg/apache/http/HeaderIterator;->nextHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/HeaderIterator;->hasNext()Z"
    ],
    "Lorg/apache/http/impl/DefaultConnectionReuseStrategy;": [
        "Lorg/apache/http/impl/DefaultConnectionReuseStrategy;->createTokenIterator()Lorg/apache/http/TokenIterator;"
    ],
    "Lorg/apache/http/TokenIterator;": [
        "Lorg/apache/http/TokenIterator;->nextToken()Ljava/lang/String;",
        "Lorg/apache/http/TokenIterator;->hasNext()Z"
    ],
    "Lorg/apache/http/conn/OperatedClientConnection;": [
        "Lorg/apache/http/conn/OperatedClientConnection;->receiveResponseEntity()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->getSocketTimeout()I",
        "Lorg/apache/http/conn/OperatedClientConnection;->isResponseAvailable()Z",
        "Lorg/apache/http/conn/OperatedClientConnection;->getLocalAddress()Ljava/net/InetAddress;",
        "Lorg/apache/http/conn/OperatedClientConnection;->getRemotePort()I",
        "Lorg/apache/http/conn/OperatedClientConnection;->setSocketTimeout()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->shutdown()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->update()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->opening()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->sendRequestHeader()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->getMetrics()Lorg/apache/http/HttpConnectionMetrics;",
        "Lorg/apache/http/conn/OperatedClientConnection;->getLocalPort()I",
        "Lorg/apache/http/conn/OperatedClientConnection;->receiveResponseHeader()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/conn/OperatedClientConnection;->isOpen()Z",
        "Lorg/apache/http/conn/OperatedClientConnection;->isStale()Z",
        "Lorg/apache/http/conn/OperatedClientConnection;->getRemoteAddress()Ljava/net/InetAddress;",
        "Lorg/apache/http/conn/OperatedClientConnection;->openCompleted()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->sendRequestEntity()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->flush()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->close()V",
        "Lorg/apache/http/conn/OperatedClientConnection;->isSecure()Z",
        "Lorg/apache/http/conn/OperatedClientConnection;->getSocket()Ljava/net/Socket;"
    ],
    "Lorg/apache/http/conn/scheme/SocketFactory;": [
        "Lorg/apache/http/conn/scheme/SocketFactory;->isSecure()Z",
        "Lorg/apache/http/conn/scheme/SocketFactory;->createSocket()Ljava/net/Socket;",
        "Lorg/apache/http/conn/scheme/SocketFactory;->connectSocket()Ljava/net/Socket;"
    ],
    "Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;": [
        "Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;->prepareSocket()V"
    ],
    "Lorg/apache/http/conn/scheme/LayeredSocketFactory;": [
        "Lorg/apache/http/conn/scheme/LayeredSocketFactory;->createSocket()Ljava/net/Socket;",
        "Lorg/apache/http/conn/scheme/LayeredSocketFactory;->isSecure()Z"
    ],
    "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;": [
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->detach()V",
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->unmarkReusable()V",
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->shutdown()V",
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->getWrappedConnection()Lorg/apache/http/conn/OperatedClientConnection;",
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->assertValid()V",
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->assertNotAborted()V",
        "Lorg/apache/http/impl/conn/AbstractClientConnAdapter;->isOpen()Z"
    ],
    "Ljava/util/concurrent/TimeUnit;": [
        "Ljava/util/concurrent/TimeUnit;->toMillis()J",
        "Ljava/util/concurrent/TimeUnit;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/HttpRequest;": [
        "Lorg/apache/http/HttpRequest;->getFirstHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpRequest;->setHeader()V",
        "Lorg/apache/http/HttpRequest;->getRequestLine()Lorg/apache/http/RequestLine;",
        "Lorg/apache/http/HttpRequest;->getAllHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpRequest;->getProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/HttpRequest;->setParams()V",
        "Lorg/apache/http/HttpRequest;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/HttpRequest;->containsHeader()Z",
        "Lorg/apache/http/HttpRequest;->addHeader()V"
    ],
    "Lorg/apache/http/conn/params/ConnRouteParams;": [
        "Lorg/apache/http/conn/params/ConnRouteParams;->getForcedRoute()Lorg/apache/http/conn/routing/HttpRoute;",
        "Lorg/apache/http/conn/params/ConnRouteParams;->getDefaultProxy()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/conn/params/ConnRouteParams;->getLocalAddress()Ljava/net/InetAddress;"
    ],
    "Lorg/apache/http/impl/conn/Wire;": [
        "Lorg/apache/http/impl/conn/Wire;->wire()V",
        "Lorg/apache/http/impl/conn/Wire;->input()V",
        "Lorg/apache/http/impl/conn/Wire;->output()V",
        "Lorg/apache/http/impl/conn/Wire;->enabled()Z"
    ],
    "Lorg/apache/http/impl/conn/SingleClientConnManager;": [
        "Lorg/apache/http/impl/conn/SingleClientConnManager;->shutdown()V",
        "Lorg/apache/http/impl/conn/SingleClientConnManager;->closeExpiredConnections()V",
        "Lorg/apache/http/impl/conn/SingleClientConnManager;->createConnectionOperator()Lorg/apache/http/conn/ClientConnectionOperator;",
        "Lorg/apache/http/impl/conn/SingleClientConnManager;->closeIdleConnections()V",
        "Lorg/apache/http/impl/conn/SingleClientConnManager;->assertStillUp()V"
    ],
    "Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;": [
        "Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;->shutdown()V",
        "Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;->close()V"
    ],
    "Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;": [
        "Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;->isMarkedReusable()Z",
        "Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;->isOpen()Z",
        "Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;->getManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;->detach()V",
        "Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;->shutdown()V"
    ],
    "Lorg/apache/http/conn/ClientConnectionOperator;": [
        "Lorg/apache/http/conn/ClientConnectionOperator;->updateSecureConnection()V",
        "Lorg/apache/http/conn/ClientConnectionOperator;->createConnection()Lorg/apache/http/conn/OperatedClientConnection;",
        "Lorg/apache/http/conn/ClientConnectionOperator;->openConnection()V"
    ],
    "Lorg/apache/http/message/LineParser;": [
        "Lorg/apache/http/message/LineParser;->parseProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/message/LineParser;->parseHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/message/LineParser;->parseStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/message/LineParser;->parseRequestLine()Lorg/apache/http/RequestLine;",
        "Lorg/apache/http/message/LineParser;->hasProtocolVersion()Z"
    ],
    "Lorg/apache/http/HttpResponseFactory;": [
        "Lorg/apache/http/HttpResponseFactory;->newHttpResponse()Lorg/apache/http/HttpResponse;"
    ],
    "Ljava/net/Proxy;": [
        "Ljava/net/Proxy;->address()Ljava/net/SocketAddress;",
        "Ljava/net/Proxy;->type()Ljava/net/Proxy$Type;"
    ],
    "Ljava/net/Proxy$Type;": [
        "Ljava/net/Proxy$Type;->ordinal()I"
    ],
    "Ljava/net/ProxySelector;": [
        "Ljava/net/ProxySelector;->getDefault()Ljava/net/ProxySelector;",
        "Ljava/net/ProxySelector;->select()Ljava/util/List;"
    ],
    "Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;": [
        "Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;->getHost()Ljava/lang/String;",
        "Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;->determineProxy()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;->chooseProxy()Ljava/net/Proxy;"
    ],
    "Ljava/net/InetSocketAddress;": [
        "Ljava/net/InetSocketAddress;->getHostName()Ljava/lang/String;",
        "Ljava/net/InetSocketAddress;->getPort()I",
        "Ljava/net/InetSocketAddress;->isUnresolved()Z",
        "Ljava/net/InetSocketAddress;->getAddress()Ljava/net/InetAddress;"
    ],
    "Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;": [
        "Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;->access$100()J",
        "Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;->access$000()J"
    ],
    "Lorg/apache/http/impl/conn/DefaultClientConnection;": [
        "Lorg/apache/http/impl/conn/DefaultClientConnection;->assertNotOpen()V",
        "Lorg/apache/http/impl/conn/DefaultClientConnection;->bind()V",
        "Lorg/apache/http/impl/conn/DefaultClientConnection;->assertOpen()V"
    ],
    "Lorg/apache/http/impl/conn/AbstractPoolEntry;": [
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->setState()V",
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->open()V",
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->tunnelProxy()V",
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->tunnelTarget()V",
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->getState()Ljava/lang/Object;",
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->layerProtocol()V",
        "Lorg/apache/http/impl/conn/AbstractPoolEntry;->shutdownEntry()V"
    ],
    "Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;": [
        "Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;->getManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;->detach()V",
        "Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;->getWrappedConnection()Lorg/apache/http/conn/OperatedClientConnection;",
        "Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;->assertNotAborted()V"
    ],
    "Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;": [
        "Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;->getPlannedRoute()Lorg/apache/http/conn/routing/HttpRoute;",
        "Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;->shutdownEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;->getState()Ljava/lang/Object;",
        "Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;->getConnection()Lorg/apache/http/conn/OperatedClientConnection;"
    ],
    "Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;": [
        "Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;->handleReference()V"
    ],
    "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;": [
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->getPoolEntry()Lorg/apache/http/impl/conn/AbstractPoolEntry;",
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->detach()V",
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->markReusable()V",
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->getManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->isOpen()Z",
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->shutdown()V",
        "Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;->isMarkedReusable()Z"
    ],
    "Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;": [
        "Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;->createConnectionPool()Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;",
        "Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;->createConnectionOperator()Lorg/apache/http/conn/ClientConnectionOperator;",
        "Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;->shutdown()V"
    ],
    "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;": [
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->closeConnection()V",
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->closeExpiredConnections()V",
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->closeIdleConnections()V",
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->freeEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->shutdown()V",
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->deleteClosedConnections()V",
        "Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;->requestPoolEntry()Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;"
    ],
    "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;": [
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->createEntry()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->createFreeConnQueue()Ljava/util/Queue;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->createWaitingThreadQueue()Ljava/util/Queue;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->closeConnection()V",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->getRoutePool()Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->newRouteSpecificPool()Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->deleteEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->newWaitingThread()Lorg/apache/http/impl/conn/tsccm/WaitingThread;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->deleteLeastUsedEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->notifyWaitingThread()V",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->createRouteToPoolMap()Ljava/util/Map;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->getFreeEntry()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;",
        "Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;->getConnectionsInPool()I"
    ],
    "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;": [
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->getRoute()Lorg/apache/http/conn/routing/HttpRoute;",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->freeEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->getCapacity()I",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->getMaxEntries()I",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->isUnused()Z",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->removeThread()V",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->deleteEntry()Z",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->createdEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->dropEntry()V",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->getEntryCount()I",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->allocEntry()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->nextThread()Lorg/apache/http/impl/conn/tsccm/WaitingThread;",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->hasThread()Z",
        "Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;->queueThread()V"
    ],
    "Lorg/apache/http/impl/conn/IdleConnectionHandler;": [
        "Lorg/apache/http/impl/conn/IdleConnectionHandler;->remove()Z",
        "Lorg/apache/http/impl/conn/IdleConnectionHandler;->closeIdleConnections()V",
        "Lorg/apache/http/impl/conn/IdleConnectionHandler;->removeAll()V",
        "Lorg/apache/http/impl/conn/IdleConnectionHandler;->add()V",
        "Lorg/apache/http/impl/conn/IdleConnectionHandler;->closeExpiredConnections()V"
    ],
    "Lorg/apache/http/conn/params/ConnManagerParams;": [
        "Lorg/apache/http/conn/params/ConnManagerParams;->getTimeout()J",
        "Lorg/apache/http/conn/params/ConnManagerParams;->getMaxConnectionsPerRoute()Lorg/apache/http/conn/params/ConnPerRoute;",
        "Lorg/apache/http/conn/params/ConnManagerParams;->getMaxTotalConnections()I"
    ],
    "Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;": [
        "Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;->setWaitingThread()V"
    ],
    "Lorg/apache/http/impl/conn/tsccm/WaitingThread;": [
        "Lorg/apache/http/impl/conn/tsccm/WaitingThread;->wakeup()V",
        "Lorg/apache/http/impl/conn/tsccm/WaitingThread;->interrupt()V",
        "Lorg/apache/http/impl/conn/tsccm/WaitingThread;->await()Z"
    ],
    "Lorg/apache/http/conn/params/ConnPerRoute;": [
        "Lorg/apache/http/conn/params/ConnPerRoute;->getMaxForRoute()I"
    ],
    "Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;": [
        "Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;->getPoolEntry()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;"
    ],
    "Ljava/util/ListIterator;": [
        "Ljava/util/ListIterator;->remove()V",
        "Ljava/util/ListIterator;->previous()Ljava/lang/Object;",
        "Ljava/util/ListIterator;->hasPrevious()Z"
    ],
    "Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;": [
        "Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;->parseChallenges()Ljava/util/Map;"
    ],
    "Lorg/apache/http/impl/client/HttpRedirect;": [
        "Lorg/apache/http/impl/client/HttpRedirect;->setHeaders()V",
        "Lorg/apache/http/impl/client/HttpRedirect;->setURI()V"
    ],
    "Lorg/apache/http/FormattedHeader;": [
        "Lorg/apache/http/FormattedHeader;->getBuffer()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/FormattedHeader;->getValuePos()I"
    ],
    "Lorg/apache/http/protocol/HTTP;": [
        "Lorg/apache/http/protocol/HTTP;->isWhitespace()Z"
    ],
    "Lorg/apache/http/impl/client/AbstractAuthenticationHandler;": [
        "Lorg/apache/http/impl/client/AbstractAuthenticationHandler;->getAuthPreferences()Ljava/util/List;"
    ],
    "Lorg/apache/http/auth/AuthSchemeRegistry;": [
        "Lorg/apache/http/auth/AuthSchemeRegistry;->getAuthScheme()Lorg/apache/http/auth/AuthScheme;",
        "Lorg/apache/http/auth/AuthSchemeRegistry;->register()V"
    ],
    "Lorg/apache/http/auth/AuthScope;": [
        "Lorg/apache/http/auth/AuthScope;->getPort()I",
        "Lorg/apache/http/auth/AuthScope;->match()I",
        "Lorg/apache/http/auth/AuthScope;->getRealm()Ljava/lang/String;",
        "Lorg/apache/http/auth/AuthScope;->getHost()Ljava/lang/String;",
        "Lorg/apache/http/auth/AuthScope;->getScheme()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/BasicCredentialsProvider;": [
        "Lorg/apache/http/impl/client/BasicCredentialsProvider;->matchCredentials()Lorg/apache/http/auth/Credentials;"
    ],
    "Ljava/net/URI;": [
        "Ljava/net/URI;->getPort()I",
        "Ljava/net/URI;->getAuthority()Ljava/lang/String;",
        "Ljava/net/URI;->create()Ljava/net/URI;",
        "Ljava/net/URI;->toURL()Ljava/net/URL;",
        "Ljava/net/URI;->toASCIIString()Ljava/lang/String;",
        "Ljava/net/URI;->getQuery()Ljava/lang/String;",
        "Ljava/net/URI;->resolve()Ljava/net/URI;",
        "Ljava/net/URI;->getFragment()Ljava/lang/String;",
        "Ljava/net/URI;->getRawQuery()Ljava/lang/String;",
        "Ljava/net/URI;->toString()Ljava/lang/String;",
        "Ljava/net/URI;->getSchemeSpecificPart()Ljava/lang/String;",
        "Ljava/net/URI;->getRawFragment()Ljava/lang/String;",
        "Ljava/net/URI;->getPath()Ljava/lang/String;",
        "Ljava/net/URI;->getScheme()Ljava/lang/String;",
        "Ljava/net/URI;->isAbsolute()Z",
        "Ljava/net/URI;->getRawPath()Ljava/lang/String;",
        "Ljava/net/URI;->getHost()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/AbstractHttpClient;": [
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getTargetAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->determineTarget()Lorg/apache/http/HttpHost;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getConnectionKeepAliveStrategy()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createAuthSchemeRegistry()Lorg/apache/http/auth/AuthSchemeRegistry;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createClientConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getUserTokenHandler()Lorg/apache/http/client/UserTokenHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createHttpRequestRetryHandler()Lorg/apache/http/client/HttpRequestRetryHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getRequestExecutor()Lorg/apache/http/protocol/HttpRequestExecutor;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->determineParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createConnectionReuseStrategy()Lorg/apache/http/ConnectionReuseStrategy;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createTargetAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createClientRequestDirector()Lorg/apache/http/client/RequestDirector;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createRedirectHandler()Lorg/apache/http/client/RedirectHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getConnectionReuseStrategy()Lorg/apache/http/ConnectionReuseStrategy;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->execute()Ljava/lang/Object;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createCredentialsProvider()Lorg/apache/http/client/CredentialsProvider;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createHttpParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createHttpRoutePlanner()Lorg/apache/http/conn/routing/HttpRoutePlanner;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getRoutePlanner()Lorg/apache/http/conn/routing/HttpRoutePlanner;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getProxyAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createRequestExecutor()Lorg/apache/http/protocol/HttpRequestExecutor;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createUserTokenHandler()Lorg/apache/http/client/UserTokenHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createConnectionKeepAliveStrategy()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getRedirectHandler()Lorg/apache/http/client/RedirectHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createCookieSpecRegistry()Lorg/apache/http/cookie/CookieSpecRegistry;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getHttpProcessor()Lorg/apache/http/protocol/BasicHttpProcessor;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getHttpRequestRetryHandler()Lorg/apache/http/client/HttpRequestRetryHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createHttpContext()Lorg/apache/http/protocol/HttpContext;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createProxyAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createCookieStore()Lorg/apache/http/client/CookieStore;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->createHttpProcessor()Lorg/apache/http/protocol/BasicHttpProcessor;"
    ],
    "Lorg/apache/http/protocol/BasicHttpProcessor;": [
        "Lorg/apache/http/protocol/BasicHttpProcessor;->clearResponseInterceptors()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->clearRequestInterceptors()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->removeResponseInterceptorByClass()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->getRequestInterceptorCount()I",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->copy()Lorg/apache/http/protocol/BasicHttpProcessor;",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->addRequestInterceptor()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->addResponseInterceptor()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->removeRequestInterceptorByClass()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->getResponseInterceptor()Lorg/apache/http/HttpResponseInterceptor;",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->addInterceptor()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->getResponseInterceptorCount()I",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->copyInterceptors()V",
        "Lorg/apache/http/protocol/BasicHttpProcessor;->getRequestInterceptor()Lorg/apache/http/HttpRequestInterceptor;"
    ],
    "Lorg/apache/http/client/ResponseHandler;": [
        "Lorg/apache/http/client/ResponseHandler;->handleResponse()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/client/RequestDirector;": [
        "Lorg/apache/http/client/RequestDirector;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/auth/AuthState;": [
        "Lorg/apache/http/auth/AuthState;->invalidate()V",
        "Lorg/apache/http/auth/AuthState;->setAuthScheme()V",
        "Lorg/apache/http/auth/AuthState;->getAuthScope()Lorg/apache/http/auth/AuthScope;",
        "Lorg/apache/http/auth/AuthState;->setCredentials()V",
        "Lorg/apache/http/auth/AuthState;->getCredentials()Lorg/apache/http/auth/Credentials;",
        "Lorg/apache/http/auth/AuthState;->getAuthScheme()Lorg/apache/http/auth/AuthScheme;",
        "Lorg/apache/http/auth/AuthState;->isValid()Z",
        "Lorg/apache/http/auth/AuthState;->setAuthScope()V"
    ],
    "Lorg/apache/http/client/AuthenticationHandler;": [
        "Lorg/apache/http/client/AuthenticationHandler;->isAuthenticationRequested()Z",
        "Lorg/apache/http/client/AuthenticationHandler;->selectScheme()Lorg/apache/http/auth/AuthScheme;",
        "Lorg/apache/http/client/AuthenticationHandler;->getChallenges()Ljava/util/Map;"
    ],
    "Lorg/apache/http/auth/AuthScheme;": [
        "Lorg/apache/http/auth/AuthScheme;->isComplete()Z",
        "Lorg/apache/http/auth/AuthScheme;->getSchemeName()Ljava/lang/String;",
        "Lorg/apache/http/auth/AuthScheme;->isConnectionBased()Z",
        "Lorg/apache/http/auth/AuthScheme;->authenticate()Lorg/apache/http/Header;",
        "Lorg/apache/http/auth/AuthScheme;->getRealm()Ljava/lang/String;",
        "Lorg/apache/http/auth/AuthScheme;->processChallenge()V"
    ],
    "Lorg/apache/http/client/CredentialsProvider;": [
        "Lorg/apache/http/client/CredentialsProvider;->getCredentials()Lorg/apache/http/auth/Credentials;"
    ],
    "Lorg/apache/http/params/HttpProtocolParams;": [
        "Lorg/apache/http/params/HttpProtocolParams;->getUserAgent()Ljava/lang/String;",
        "Lorg/apache/http/params/HttpProtocolParams;->setHttpElementCharset()V",
        "Lorg/apache/http/params/HttpProtocolParams;->setUseExpectContinue()V",
        "Lorg/apache/http/params/HttpProtocolParams;->useExpectContinue()Z",
        "Lorg/apache/http/params/HttpProtocolParams;->setUserAgent()V",
        "Lorg/apache/http/params/HttpProtocolParams;->getHttpElementCharset()Ljava/lang/String;",
        "Lorg/apache/http/params/HttpProtocolParams;->setVersion()V",
        "Lorg/apache/http/params/HttpProtocolParams;->getVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/params/HttpProtocolParams;->setContentCharset()V"
    ],
    "Lorg/apache/http/impl/client/DefaultRequestDirector;": [
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->determineRoute()Lorg/apache/http/conn/routing/HttpRoute;",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->wrapRequest()Lorg/apache/http/impl/client/RequestWrapper;",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->updateAuthState()V",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->createTunnelToTarget()Z",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->createConnectRequest()Lorg/apache/http/HttpRequest;",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->abortConnection()V",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->processChallenges()V",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->establishRoute()V",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->rewriteRequestURI()V",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->releaseConnection()V",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->handleResponse()Lorg/apache/http/impl/client/RoutedRequest;",
        "Lorg/apache/http/impl/client/DefaultRequestDirector;->createTunnelToProxy()Z"
    ],
    "Lorg/apache/http/protocol/HttpRequestExecutor;": [
        "Lorg/apache/http/protocol/HttpRequestExecutor;->canResponseHaveBody()Z",
        "Lorg/apache/http/protocol/HttpRequestExecutor;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/protocol/HttpRequestExecutor;->preProcess()V",
        "Lorg/apache/http/protocol/HttpRequestExecutor;->doSendRequest()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/protocol/HttpRequestExecutor;->doReceiveResponse()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/protocol/HttpRequestExecutor;->postProcess()V"
    ],
    "Lorg/apache/http/client/params/HttpClientParams;": [
        "Lorg/apache/http/client/params/HttpClientParams;->getCookiePolicy()Ljava/lang/String;",
        "Lorg/apache/http/client/params/HttpClientParams;->isRedirecting()Z",
        "Lorg/apache/http/client/params/HttpClientParams;->isAuthenticating()Z"
    ],
    "Lorg/apache/http/ConnectionReuseStrategy;": [
        "Lorg/apache/http/ConnectionReuseStrategy;->keepAlive()Z"
    ],
    "Lorg/apache/http/auth/AuthenticationException;": [
        "Lorg/apache/http/auth/AuthenticationException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/conn/routing/HttpRoutePlanner;": [
        "Lorg/apache/http/conn/routing/HttpRoutePlanner;->determineRoute()Lorg/apache/http/conn/routing/HttpRoute;"
    ],
    "Lorg/apache/http/conn/routing/HttpRouteDirector;": [
        "Lorg/apache/http/conn/routing/HttpRouteDirector;->nextStep()I"
    ],
    "Lorg/apache/http/impl/client/RequestWrapper;": [
        "Lorg/apache/http/impl/client/RequestWrapper;->resetHeaders()V",
        "Lorg/apache/http/impl/client/RequestWrapper;->setURI()V",
        "Lorg/apache/http/impl/client/RequestWrapper;->getProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/impl/client/RequestWrapper;->setParams()V",
        "Lorg/apache/http/impl/client/RequestWrapper;->isRepeatable()Z",
        "Lorg/apache/http/impl/client/RequestWrapper;->getExecCount()I",
        "Lorg/apache/http/impl/client/RequestWrapper;->incrementExecCount()V",
        "Lorg/apache/http/impl/client/RequestWrapper;->getURI()Ljava/net/URI;",
        "Lorg/apache/http/impl/client/RequestWrapper;->setHeaders()V",
        "Lorg/apache/http/impl/client/RequestWrapper;->getOriginal()Lorg/apache/http/HttpRequest;",
        "Lorg/apache/http/impl/client/RequestWrapper;->getMethod()Ljava/lang/String;",
        "Lorg/apache/http/impl/client/RequestWrapper;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/RequestWrapper;->getRequestLine()Lorg/apache/http/RequestLine;"
    ],
    "Lorg/apache/http/impl/client/RoutedRequest;": [
        "Lorg/apache/http/impl/client/RoutedRequest;->getRequest()Lorg/apache/http/impl/client/RequestWrapper;",
        "Lorg/apache/http/impl/client/RoutedRequest;->getRoute()Lorg/apache/http/conn/routing/HttpRoute;"
    ],
    "Lorg/apache/http/client/methods/AbortableHttpRequest;": [
        "Lorg/apache/http/client/methods/AbortableHttpRequest;->setConnectionRequest()V",
        "Lorg/apache/http/client/methods/AbortableHttpRequest;->setReleaseTrigger()V"
    ],
    "Lorg/apache/http/conn/ClientConnectionRequest;": [
        "Lorg/apache/http/conn/ClientConnectionRequest;->getConnection()Lorg/apache/http/conn/ManagedClientConnection;",
        "Lorg/apache/http/conn/ClientConnectionRequest;->abortRequest()V"
    ],
    "Lorg/apache/http/impl/client/TunnelRefusedException;": [
        "Lorg/apache/http/impl/client/TunnelRefusedException;->getMessage()Ljava/lang/String;",
        "Lorg/apache/http/impl/client/TunnelRefusedException;->getResponse()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/client/HttpRequestRetryHandler;": [
        "Lorg/apache/http/client/HttpRequestRetryHandler;->retryRequest()Z"
    ],
    "Lorg/apache/http/conn/ConnectionKeepAliveStrategy;": [
        "Lorg/apache/http/conn/ConnectionKeepAliveStrategy;->getKeepAliveDuration()J"
    ],
    "Lorg/apache/http/client/UserTokenHandler;": [
        "Lorg/apache/http/client/UserTokenHandler;->getUserToken()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/client/RedirectHandler;": [
        "Lorg/apache/http/client/RedirectHandler;->getLocationURI()Ljava/net/URI;",
        "Lorg/apache/http/client/RedirectHandler;->isRedirectRequested()Z"
    ],
    "Lorg/apache/http/client/utils/URIUtils;": [
        "Lorg/apache/http/client/utils/URIUtils;->rewriteURI()Ljava/net/URI;",
        "Lorg/apache/http/client/utils/URIUtils;->resolveReferenceStartingWithQueryString()Ljava/net/URI;",
        "Lorg/apache/http/client/utils/URIUtils;->removeDotSegments()Ljava/net/URI;",
        "Lorg/apache/http/client/utils/URIUtils;->resolve()Ljava/net/URI;",
        "Lorg/apache/http/client/utils/URIUtils;->createURI()Ljava/net/URI;"
    ],
    "Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;": [
        "Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;->parseChallenges()Ljava/util/Map;"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getCookieSpecs()Lorg/apache/http/cookie/CookieSpecRegistry;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getCredentialsProvider()Lorg/apache/http/client/CredentialsProvider;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getCookieStore()Lorg/apache/http/client/CookieStore;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getAuthSchemes()Lorg/apache/http/auth/AuthSchemeRegistry;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;"
    ],
    "Lorg/apache/http/conn/ClientConnectionManagerFactory;": [
        "Lorg/apache/http/conn/ClientConnectionManagerFactory;->newInstance()Lorg/apache/http/conn/ClientConnectionManager;"
    ],
    "Ljava/lang/InstantiationException;": [
        "Ljava/lang/InstantiationException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/cookie/CookieSpecRegistry;": [
        "Lorg/apache/http/cookie/CookieSpecRegistry;->register()V",
        "Lorg/apache/http/cookie/CookieSpecRegistry;->getCookieSpec()Lorg/apache/http/cookie/CookieSpec;"
    ],
    "Lorg/apache/http/util/VersionInfo;": [
        "Lorg/apache/http/util/VersionInfo;->loadVersionInfo()Lorg/apache/http/util/VersionInfo;",
        "Lorg/apache/http/util/VersionInfo;->fromMap()Lorg/apache/http/util/VersionInfo;",
        "Lorg/apache/http/util/VersionInfo;->getRelease()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/BasicResponseHandler;": [
        "Lorg/apache/http/impl/client/BasicResponseHandler;->handleResponse()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/RedirectLocations;": [
        "Lorg/apache/http/impl/client/RedirectLocations;->contains()Z",
        "Lorg/apache/http/impl/client/RedirectLocations;->add()V"
    ],
    "Ljava/net/URISyntaxException;": [
        "Ljava/net/URISyntaxException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/message/HeaderGroup;": [
        "Lorg/apache/http/message/HeaderGroup;->updateHeader()V",
        "Lorg/apache/http/message/HeaderGroup;->getAllHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/message/HeaderGroup;->getLastHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/message/HeaderGroup;->getFirstHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/message/HeaderGroup;->iterator()Lorg/apache/http/HeaderIterator;",
        "Lorg/apache/http/message/HeaderGroup;->setHeaders()V",
        "Lorg/apache/http/message/HeaderGroup;->addHeader()V",
        "Lorg/apache/http/message/HeaderGroup;->removeHeader()V",
        "Lorg/apache/http/message/HeaderGroup;->getHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/message/HeaderGroup;->clear()V",
        "Lorg/apache/http/message/HeaderGroup;->containsHeader()Z"
    ],
    "Lorg/apache/http/cookie/Cookie;": [
        "Lorg/apache/http/cookie/Cookie;->getPorts()[I",
        "Lorg/apache/http/cookie/Cookie;->getName()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getPath()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getDomain()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getVersion()I",
        "Lorg/apache/http/cookie/Cookie;->isSecure()Z",
        "Lorg/apache/http/cookie/Cookie;->isExpired()Z"
    ],
    "Lorg/apache/http/impl/client/BasicCookieStore;": [
        "Lorg/apache/http/impl/client/BasicCookieStore;->addCookie()V"
    ],
    "Lorg/apache/http/HeaderElementIterator;": [
        "Lorg/apache/http/HeaderElementIterator;->nextElement()Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/HeaderElementIterator;->hasNext()Z"
    ],
    "Lorg/apache/http/HeaderElement;": [
        "Lorg/apache/http/HeaderElement;->getName()Ljava/lang/String;",
        "Lorg/apache/http/HeaderElement;->getParameters()[Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/HeaderElement;->getParameterByName()Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/HeaderElement;->getParameterCount()I",
        "Lorg/apache/http/HeaderElement;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/HeaderElement;->getParameter()Lorg/apache/http/NameValuePair;"
    ],
    "Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;": [
        "Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;->getFirstHeader()Lorg/apache/http/Header;"
    ],
    "Lorg/apache/http/auth/Credentials;": [
        "Lorg/apache/http/auth/Credentials;->getUserPrincipal()Ljava/security/Principal;",
        "Lorg/apache/http/auth/Credentials;->getPassword()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/DefaultUserTokenHandler;": [
        "Lorg/apache/http/impl/client/DefaultUserTokenHandler;->getAuthPrincipal()Ljava/security/Principal;"
    ],
    "Lorg/apache/http/impl/client/ClientParamsStack;": [
        "Lorg/apache/http/impl/client/ClientParamsStack;->getApplicationParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/ClientParamsStack;->getRequestParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/ClientParamsStack;->getOverrideParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/ClientParamsStack;->getClientParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/impl/io/AbstractSessionOutputBuffer;": [
        "Lorg/apache/http/impl/io/AbstractSessionOutputBuffer;->write()V",
        "Lorg/apache/http/impl/io/AbstractSessionOutputBuffer;->flushBuffer()V"
    ],
    "Lorg/apache/http/util/ByteArrayBuffer;": [
        "Lorg/apache/http/util/ByteArrayBuffer;->isFull()Z",
        "Lorg/apache/http/util/ByteArrayBuffer;->capacity()I",
        "Lorg/apache/http/util/ByteArrayBuffer;->clear()V",
        "Lorg/apache/http/util/ByteArrayBuffer;->toByteArray()[B",
        "Lorg/apache/http/util/ByteArrayBuffer;->expand()V",
        "Lorg/apache/http/util/ByteArrayBuffer;->byteAt()I",
        "Lorg/apache/http/util/ByteArrayBuffer;->isEmpty()Z",
        "Lorg/apache/http/util/ByteArrayBuffer;->append()V",
        "Lorg/apache/http/util/ByteArrayBuffer;->setLength()V",
        "Lorg/apache/http/util/ByteArrayBuffer;->length()I",
        "Lorg/apache/http/util/ByteArrayBuffer;->buffer()[B"
    ],
    "Lorg/apache/http/impl/io/HttpTransportMetricsImpl;": [
        "Lorg/apache/http/impl/io/HttpTransportMetricsImpl;->incrementBytesTransferred()V"
    ],
    "Lorg/apache/http/impl/io/ContentLengthOutputStream;": [
        "Lorg/apache/http/impl/io/ContentLengthOutputStream;->write()V"
    ],
    "Lorg/apache/http/impl/io/ChunkedOutputStream;": [
        "Lorg/apache/http/impl/io/ChunkedOutputStream;->writeClosingChunk()V",
        "Lorg/apache/http/impl/io/ChunkedOutputStream;->write()V",
        "Lorg/apache/http/impl/io/ChunkedOutputStream;->flushCacheWithAppend()V",
        "Lorg/apache/http/impl/io/ChunkedOutputStream;->finish()V",
        "Lorg/apache/http/impl/io/ChunkedOutputStream;->flushCache()V"
    ],
    "Lorg/apache/http/message/LineFormatter;": [
        "Lorg/apache/http/message/LineFormatter;->formatRequestLine()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/LineFormatter;->appendProtocolVersion()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/LineFormatter;->formatHeader()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/LineFormatter;->formatStatusLine()Lorg/apache/http/util/CharArrayBuffer;"
    ],
    "Lorg/apache/http/impl/io/AbstractMessageWriter;": [
        "Lorg/apache/http/impl/io/AbstractMessageWriter;->writeHeadLine()V"
    ],
    "Lorg/apache/http/HttpMessage;": [
        "Lorg/apache/http/HttpMessage;->getProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/HttpMessage;->headerIterator()Lorg/apache/http/HeaderIterator;",
        "Lorg/apache/http/HttpMessage;->getHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpMessage;->getFirstHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpMessage;->setHeaders()V",
        "Lorg/apache/http/HttpMessage;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/impl/io/ContentLengthInputStream;": [
        "Lorg/apache/http/impl/io/ContentLengthInputStream;->read()I"
    ],
    "Lorg/apache/http/impl/io/IdentityOutputStream;": [
        "Lorg/apache/http/impl/io/IdentityOutputStream;->write()V"
    ],
    "Lorg/apache/http/HttpRequestFactory;": [
        "Lorg/apache/http/HttpRequestFactory;->newHttpRequest()Lorg/apache/http/HttpRequest;"
    ],
    "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;": [
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->fillBuffer()I",
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->lineFromReadBuffer()I",
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->hasBufferedData()Z",
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->lineFromLineBuffer()I",
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->locateLF()I",
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->readLine()I",
        "Lorg/apache/http/impl/io/AbstractSessionInputBuffer;->read()I"
    ],
    "Lorg/apache/http/ParseException;": [
        "Lorg/apache/http/ParseException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/io/AbstractMessageParser;": [
        "Lorg/apache/http/impl/io/AbstractMessageParser;->parseHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/impl/io/AbstractMessageParser;->parseHead()Lorg/apache/http/HttpMessage;"
    ],
    "Lorg/apache/http/impl/io/ChunkedInputStream;": [
        "Lorg/apache/http/impl/io/ChunkedInputStream;->getChunkSize()I",
        "Lorg/apache/http/impl/io/ChunkedInputStream;->nextChunk()V",
        "Lorg/apache/http/impl/io/ChunkedInputStream;->parseTrailerHeaders()V",
        "Lorg/apache/http/impl/io/ChunkedInputStream;->exhaustInputStream()V",
        "Lorg/apache/http/impl/io/ChunkedInputStream;->read()I"
    ],
    "Lorg/apache/http/HttpException;": [
        "Lorg/apache/http/HttpException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/io/SocketInputBuffer;": [
        "Lorg/apache/http/impl/io/SocketInputBuffer;->isSocketTimeoutException()Z",
        "Lorg/apache/http/impl/io/SocketInputBuffer;->hasBufferedData()Z",
        "Lorg/apache/http/impl/io/SocketInputBuffer;->SocketTimeoutExceptionClass()Ljava/lang/Class;",
        "Lorg/apache/http/impl/io/SocketInputBuffer;->fillBuffer()I"
    ],
    "Lorg/apache/http/entity/ContentLengthStrategy;": [
        "Lorg/apache/http/entity/ContentLengthStrategy;->determineLength()J"
    ],
    "Lorg/apache/http/entity/BasicHttpEntity;": [
        "Lorg/apache/http/entity/BasicHttpEntity;->setContent()V",
        "Lorg/apache/http/entity/BasicHttpEntity;->setChunked()V",
        "Lorg/apache/http/entity/BasicHttpEntity;->setContentEncoding()V",
        "Lorg/apache/http/entity/BasicHttpEntity;->getContent()Ljava/io/InputStream;",
        "Lorg/apache/http/entity/BasicHttpEntity;->setContentType()V",
        "Lorg/apache/http/entity/BasicHttpEntity;->setContentLength()V"
    ],
    "Lorg/apache/http/message/BasicHeaderValueParser;": [
        "Lorg/apache/http/message/BasicHeaderValueParser;->createNameValuePair()Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/message/BasicHeaderValueParser;->createHeaderElement()Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/message/BasicHeaderValueParser;->parseParameters()[Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/message/BasicHeaderValueParser;->parseElements()[Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/message/BasicHeaderValueParser;->parseHeaderElement()Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/message/BasicHeaderValueParser;->parseNameValuePair()Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/message/BasicHeaderValueParser;->isOneOf()Z"
    ],
    "Lorg/apache/http/message/ParserCursor;": [
        "Lorg/apache/http/message/ParserCursor;->atEnd()Z",
        "Lorg/apache/http/message/ParserCursor;->getUpperBound()I",
        "Lorg/apache/http/message/ParserCursor;->updatePos()V",
        "Lorg/apache/http/message/ParserCursor;->getPos()I"
    ],
    "Lorg/apache/http/cookie/CookieOrigin;": [
        "Lorg/apache/http/cookie/CookieOrigin;->getPort()I",
        "Lorg/apache/http/cookie/CookieOrigin;->getPath()Ljava/lang/String;",
        "Lorg/apache/http/cookie/CookieOrigin;->getHost()Ljava/lang/String;",
        "Lorg/apache/http/cookie/CookieOrigin;->isSecure()Z"
    ],
    "Lorg/apache/http/cookie/SetCookie;": [
        "Lorg/apache/http/cookie/SetCookie;->setExpiryDate()V",
        "Lorg/apache/http/cookie/SetCookie;->setDomain()V",
        "Lorg/apache/http/cookie/SetCookie;->setVersion()V",
        "Lorg/apache/http/cookie/SetCookie;->setSecure()V",
        "Lorg/apache/http/cookie/SetCookie;->setPath()V",
        "Lorg/apache/http/cookie/SetCookie;->setComment()V"
    ],
    "Lorg/apache/http/impl/cookie/BasicPathHandler;": [
        "Lorg/apache/http/impl/cookie/BasicPathHandler;->match()Z"
    ],
    "Lorg/apache/http/impl/cookie/AbstractCookieSpec;": [
        "Lorg/apache/http/impl/cookie/AbstractCookieSpec;->findAttribHandler()Lorg/apache/http/cookie/CookieAttributeHandler;"
    ],
    "Lorg/apache/http/cookie/SetCookie2;": [
        "Lorg/apache/http/cookie/SetCookie2;->setDiscard()V",
        "Lorg/apache/http/cookie/SetCookie2;->setCommentURL()V",
        "Lorg/apache/http/cookie/SetCookie2;->setPorts()V"
    ],
    "[Ljava/lang/String;": [
        "[Ljava/lang/String;->clone()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/impl/cookie/BestMatchSpec;": [
        "Lorg/apache/http/impl/cookie/BestMatchSpec;->getCompat()Lorg/apache/http/impl/cookie/BrowserCompatSpec;",
        "Lorg/apache/http/impl/cookie/BestMatchSpec;->getNetscape()Lorg/apache/http/impl/cookie/NetscapeDraftSpec;",
        "Lorg/apache/http/impl/cookie/BestMatchSpec;->getStrict()Lorg/apache/http/impl/cookie/RFC2965Spec;",
        "Lorg/apache/http/impl/cookie/BestMatchSpec;->getObsoleteStrict()Lorg/apache/http/impl/cookie/RFC2109Spec;"
    ],
    "Lorg/apache/http/impl/cookie/RFC2965Spec;": [
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->getDefaultDomain()Ljava/lang/String;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->getVersion()I",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->parse()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->formatCookies()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->match()Z",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->findAttribHandler()Lorg/apache/http/cookie/CookieAttributeHandler;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->createCookies()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->validate()V",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->adjustEffectiveHost()Lorg/apache/http/cookie/CookieOrigin;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->registerAttribHandler()V",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->getVersionHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/impl/cookie/RFC2965Spec;->getDefaultPath()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/cookie/RFC2109Spec;": [
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->parse()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->formatCookies()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->registerAttribHandler()V",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->match()Z",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->doFormatOneHeader()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->validate()V",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->formatCookieAsVer()V",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->doFormatManyHeaders()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/RFC2109Spec;->formatParamAsVer()V"
    ],
    "Lorg/apache/http/impl/cookie/BrowserCompatSpec;": [
        "Lorg/apache/http/impl/cookie/BrowserCompatSpec;->formatCookies()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/BrowserCompatSpec;->match()Z",
        "Lorg/apache/http/impl/cookie/BrowserCompatSpec;->parse()Ljava/util/List;",
        "Lorg/apache/http/impl/cookie/BrowserCompatSpec;->registerAttribHandler()V",
        "Lorg/apache/http/impl/cookie/BrowserCompatSpec;->validate()V"
    ],
    "Lorg/apache/http/impl/cookie/NetscapeDraftSpec;": [
        "Lorg/apache/http/impl/cookie/NetscapeDraftSpec;->registerAttribHandler()V",
        "Lorg/apache/http/impl/cookie/NetscapeDraftSpec;->parse()Ljava/util/List;"
    ],
    "Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;": [
        "Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;->parseHeader()Lorg/apache/http/HeaderElement;"
    ],
    "Lorg/apache/http/impl/cookie/BasicClientCookie;": [
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->clone()Ljava/lang/Object;",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->isPersistent()Z",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setAttribute()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setDomain()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setPath()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->isExpired()Z"
    ],
    "Lorg/apache/http/impl/cookie/DateUtils;": [
        "Lorg/apache/http/impl/cookie/DateUtils;->parseDate()Ljava/util/Date;",
        "Lorg/apache/http/impl/cookie/DateUtils;->formatDate()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/cookie/BasicDomainHandler;": [
        "Lorg/apache/http/impl/cookie/BasicDomainHandler;->validate()V"
    ],
    "Lorg/apache/http/impl/cookie/NetscapeDomainHandler;": [
        "Lorg/apache/http/impl/cookie/NetscapeDomainHandler;->isSpecialDomain()Z"
    ],
    "Lorg/apache/http/cookie/ClientCookie;": [
        "Lorg/apache/http/cookie/ClientCookie;->containsAttribute()Z",
        "Lorg/apache/http/cookie/ClientCookie;->getAttribute()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;": [
        "Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;->formatFor()Ljava/text/SimpleDateFormat;"
    ],
    "Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;": [
        "Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;->parsePortAttribute()[I",
        "Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;->portMatch()Z"
    ],
    "Lorg/apache/http/impl/cookie/BasicClientCookie2;": [
        "Lorg/apache/http/impl/cookie/BasicClientCookie2;->setDomain()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie2;->setPath()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie2;->setAttribute()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie2;->setPorts()V"
    ],
    "Lorg/apache/http/cookie/CookieAttributeHandler;": [
        "Lorg/apache/http/cookie/CookieAttributeHandler;->validate()V",
        "Lorg/apache/http/cookie/CookieAttributeHandler;->parse()V",
        "Lorg/apache/http/cookie/CookieAttributeHandler;->match()Z"
    ],
    "Lorg/apache/http/impl/cookie/CookieSpecBase;": [
        "Lorg/apache/http/impl/cookie/CookieSpecBase;->validate()V",
        "Lorg/apache/http/impl/cookie/CookieSpecBase;->getDefaultPath()Ljava/lang/String;",
        "Lorg/apache/http/impl/cookie/CookieSpecBase;->findAttribHandler()Lorg/apache/http/cookie/CookieAttributeHandler;",
        "Lorg/apache/http/impl/cookie/CookieSpecBase;->getAttribHandlers()Ljava/util/Collection;",
        "Lorg/apache/http/impl/cookie/CookieSpecBase;->getDefaultDomain()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;": [
        "Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;->domainMatch()Z"
    ],
    "Lorg/apache/http/client/utils/Punycode;": [
        "Lorg/apache/http/client/utils/Punycode;->toUnicode()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/cookie/PublicSuffixFilter;": [
        "Lorg/apache/http/impl/cookie/PublicSuffixFilter;->setPublicSuffixes()V",
        "Lorg/apache/http/impl/cookie/PublicSuffixFilter;->isForPublicSuffix()Z",
        "Lorg/apache/http/impl/cookie/PublicSuffixFilter;->setExceptions()V"
    ],
    "Lorg/apache/http/impl/cookie/PublicSuffixListParser;": [
        "Lorg/apache/http/impl/cookie/PublicSuffixListParser;->readLine()Z"
    ],
    "Ljava/security/Principal;": [
        "Ljava/security/Principal;->getName()Ljava/lang/String;"
    ],
    "Lorg/apache/http/util/EncodingUtils;": [
        "Lorg/apache/http/util/EncodingUtils;->getString()Ljava/lang/String;",
        "Lorg/apache/http/util/EncodingUtils;->getBytes()[B",
        "Lorg/apache/http/util/EncodingUtils;->getAsciiString()Ljava/lang/String;",
        "Lorg/apache/http/util/EncodingUtils;->getAsciiBytes()[B"
    ],
    "Lorg/apache/http/auth/params/AuthParams;": [
        "Lorg/apache/http/auth/params/AuthParams;->setCredentialCharset()V",
        "Lorg/apache/http/auth/params/AuthParams;->getCredentialCharset()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/auth/BasicScheme;": [
        "Lorg/apache/http/impl/auth/BasicScheme;->isProxy()Z",
        "Lorg/apache/http/impl/auth/BasicScheme;->authenticate()Lorg/apache/http/Header;"
    ],
    "Lorg/apache/http/impl/auth/RFC2617Scheme;": [
        "Lorg/apache/http/impl/auth/RFC2617Scheme;->processChallenge()V",
        "Lorg/apache/http/impl/auth/RFC2617Scheme;->getParameter()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/auth/DigestScheme;": [
        "Lorg/apache/http/impl/auth/DigestScheme;->encode()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/DigestScheme;->isProxy()Z",
        "Lorg/apache/http/impl/auth/DigestScheme;->createDigestHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/impl/auth/DigestScheme;->getQopVariantString()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/DigestScheme;->createMessageDigest()Ljava/security/MessageDigest;",
        "Lorg/apache/http/impl/auth/DigestScheme;->getParameters()Ljava/util/Map;",
        "Lorg/apache/http/impl/auth/DigestScheme;->createDigest()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/DigestScheme;->getParameter()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/DigestScheme;->createCnonce()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/DigestScheme;->getCnonce()Ljava/lang/String;"
    ],
    "Lorg/apache/http/message/BasicNameValuePair;": [
        "Lorg/apache/http/message/BasicNameValuePair;->getName()Ljava/lang/String;"
    ],
    "Lorg/apache/http/message/BasicHeaderValueFormatter;": [
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->estimateElementsLen()I",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->formatNameValuePair()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->estimateHeaderElementLen()I",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->isSeparator()Z",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->doFormatValue()V",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->estimateParametersLen()I",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->formatHeaderElement()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->isUnsafe()Z",
        "Lorg/apache/http/message/BasicHeaderValueFormatter;->estimateNameValuePairLen()I"
    ],
    "Lorg/apache/http/auth/NTCredentials;": [
        "Lorg/apache/http/auth/NTCredentials;->getUserName()Ljava/lang/String;",
        "Lorg/apache/http/auth/NTCredentials;->getPassword()Ljava/lang/String;",
        "Lorg/apache/http/auth/NTCredentials;->getWorkstation()Ljava/lang/String;",
        "Lorg/apache/http/auth/NTCredentials;->getDomain()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/auth/NTLMEngine;": [
        "Lorg/apache/http/impl/auth/NTLMEngine;->generateType1Msg()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/NTLMEngine;->generateType3Msg()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/auth/NTLMScheme;": [
        "Lorg/apache/http/impl/auth/NTLMScheme;->isProxy()Z"
    ],
    "Lorg/apache/http/impl/auth/AuthSchemeBase;": [
        "Lorg/apache/http/impl/auth/AuthSchemeBase;->getSchemeName()Ljava/lang/String;",
        "Lorg/apache/http/impl/auth/AuthSchemeBase;->parseChallenge()V"
    ],
    "Lorg/apache/http/message/HeaderValueParser;": [
        "Lorg/apache/http/message/HeaderValueParser;->parseElements()[Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/message/HeaderValueParser;->parseNameValuePair()Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/message/HeaderValueParser;->parseParameters()[Lorg/apache/http/NameValuePair;",
        "Lorg/apache/http/message/HeaderValueParser;->parseHeaderElement()Lorg/apache/http/HeaderElement;"
    ],
    "Lorg/apache/http/util/ExceptionUtils;": [
        "Lorg/apache/http/util/ExceptionUtils;->getInitCauseMethod()Ljava/lang/reflect/Method;",
        "Lorg/apache/http/util/ExceptionUtils;->class$()Ljava/lang/Class;"
    ],
    "Lorg/apache/http/entity/StringEntity;": [
        "Lorg/apache/http/entity/StringEntity;->setContentType()V"
    ],
    "Lorg/apache/http/entity/ContentProducer;": [
        "Lorg/apache/http/entity/ContentProducer;->writeTo()V"
    ],
    "Lorg/apache/http/entity/FileEntity;": [
        "Lorg/apache/http/entity/FileEntity;->setContentType()V"
    ],
    "Lorg/apache/http/entity/SerializableEntity;": [
        "Lorg/apache/http/entity/SerializableEntity;->createBytes()V"
    ],
    "Lorg/apache/http/entity/AbstractHttpEntity;": [
        "Lorg/apache/http/entity/AbstractHttpEntity;->setContentType()V",
        "Lorg/apache/http/entity/AbstractHttpEntity;->setContentEncoding()V",
        "Lorg/apache/http/entity/AbstractHttpEntity;->isStreaming()Z"
    ],
    "Lorg/apache/http/entity/mime/HttpMultipart;": [
        "Lorg/apache/http/entity/mime/HttpMultipart;->doWriteTo()V",
        "Lorg/apache/http/entity/mime/HttpMultipart;->writeTo()V",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getPreamble()Ljava/lang/String;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->setMode()V",
        "Lorg/apache/http/entity/mime/HttpMultipart;->writeBytes()V",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getEpilogue()Ljava/lang/String;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->setParent()V",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getCharset()Ljava/nio/charset/Charset;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getBoundary()Ljava/lang/String;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getParent()Lorg/apache/james/mime4j/message/Entity;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->encode()Lorg/apache/james/mime4j/util/ByteArrayBuffer;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getBodyParts()Ljava/util/List;",
        "Lorg/apache/http/entity/mime/HttpMultipart;->addBodyPart()V",
        "Lorg/apache/http/entity/mime/HttpMultipart;->getTotalLength()J"
    ],
    "Lorg/apache/http/entity/mime/FormBodyPart;": [
        "Lorg/apache/http/entity/mime/FormBodyPart;->generateTransferEncoding()V",
        "Lorg/apache/http/entity/mime/FormBodyPart;->getBody()Lorg/apache/james/mime4j/message/Body;",
        "Lorg/apache/http/entity/mime/FormBodyPart;->setHeader()V",
        "Lorg/apache/http/entity/mime/FormBodyPart;->generateContentDisp()V",
        "Lorg/apache/http/entity/mime/FormBodyPart;->getHeader()Lorg/apache/james/mime4j/message/Header;",
        "Lorg/apache/http/entity/mime/FormBodyPart;->getName()Ljava/lang/String;",
        "Lorg/apache/http/entity/mime/FormBodyPart;->generateContentType()V",
        "Lorg/apache/http/entity/mime/FormBodyPart;->setBody()V",
        "Lorg/apache/http/entity/mime/FormBodyPart;->addField()V"
    ],
    "Lorg/apache/http/entity/mime/content/ContentBody;": [
        "Lorg/apache/http/entity/mime/content/ContentBody;->getContentLength()J",
        "Lorg/apache/http/entity/mime/content/ContentBody;->getFilename()Ljava/lang/String;"
    ],
    "Lorg/apache/http/entity/mime/HttpMultipartMode;": [
        "Lorg/apache/http/entity/mime/HttpMultipartMode;->ordinal()I"
    ],
    "Lorg/apache/james/mime4j/descriptor/ContentDescriptor;": [
        "Lorg/apache/james/mime4j/descriptor/ContentDescriptor;->getCharset()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/ContentDescriptor;->getTransferEncoding()Ljava/lang/String;",
        "Lorg/apache/james/mime4j/descriptor/ContentDescriptor;->getMimeType()Ljava/lang/String;"
    ],
    "Lorg/apache/http/entity/mime/MinimalField;": [
        "Lorg/apache/http/entity/mime/MinimalField;->toString()Ljava/lang/String;"
    ],
    "[Lorg/apache/http/entity/mime/HttpMultipartMode;": [
        "[Lorg/apache/http/entity/mime/HttpMultipartMode;->clone()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/entity/mime/content/FileBody;": [
        "Lorg/apache/http/entity/mime/content/FileBody;->writeTo()V"
    ],
    "Lorg/apache/http/entity/mime/content/StringBody;": [
        "Lorg/apache/http/entity/mime/content/StringBody;->writeTo()V"
    ],
    "Lorg/apache/http/entity/mime/content/InputStreamBody;": [
        "Lorg/apache/http/entity/mime/content/InputStreamBody;->writeTo()V"
    ],
    "Lorg/apache/http/cookie/CookieSpecFactory;": [
        "Lorg/apache/http/cookie/CookieSpecFactory;->newInstance()Lorg/apache/http/cookie/CookieSpec;"
    ],
    "Lorg/apache/http/cookie/CookieIdentityComparator;": [
        "Lorg/apache/http/cookie/CookieIdentityComparator;->compare()I"
    ],
    "Lorg/apache/http/cookie/CookiePathComparator;": [
        "Lorg/apache/http/cookie/CookiePathComparator;->compare()I",
        "Lorg/apache/http/cookie/CookiePathComparator;->normalizePath()Ljava/lang/String;"
    ],
    "Lorg/apache/http/params/BasicHttpParams;": [
        "Lorg/apache/http/params/BasicHttpParams;->setParameter()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/params/BasicHttpParams;->copyParams()V",
        "Lorg/apache/http/params/BasicHttpParams;->getParameter()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/params/AbstractHttpParams;": [
        "Lorg/apache/http/params/AbstractHttpParams;->getParameter()Ljava/lang/Object;",
        "Lorg/apache/http/params/AbstractHttpParams;->getBooleanParameter()Z",
        "Lorg/apache/http/params/AbstractHttpParams;->setParameter()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/protocol/UriPatternMatcher;": [
        "Lorg/apache/http/protocol/UriPatternMatcher;->setHandlers()V",
        "Lorg/apache/http/protocol/UriPatternMatcher;->lookup()Ljava/lang/Object;",
        "Lorg/apache/http/protocol/UriPatternMatcher;->unregister()V",
        "Lorg/apache/http/protocol/UriPatternMatcher;->register()V",
        "Lorg/apache/http/protocol/UriPatternMatcher;->matchUriRequestPattern()Z"
    ],
    "Lorg/apache/http/HttpInetConnection;": [
        "Lorg/apache/http/HttpInetConnection;->getRemoteAddress()Ljava/net/InetAddress;",
        "Lorg/apache/http/HttpInetConnection;->getRemotePort()I"
    ],
    "Lorg/apache/http/protocol/HttpDateGenerator;": [
        "Lorg/apache/http/protocol/HttpDateGenerator;->getCurrentDate()Ljava/lang/String;"
    ],
    "Lorg/apache/http/protocol/BasicHttpContext;": [
        "Lorg/apache/http/protocol/BasicHttpContext;->removeAttribute()Ljava/lang/Object;",
        "Lorg/apache/http/protocol/BasicHttpContext;->getAttribute()Ljava/lang/Object;",
        "Lorg/apache/http/protocol/BasicHttpContext;->setAttribute()V"
    ],
    "Lorg/apache/http/protocol/HttpService;": [
        "Lorg/apache/http/protocol/HttpService;->handleException()V",
        "Lorg/apache/http/protocol/HttpService;->setConnReuseStrategy()V",
        "Lorg/apache/http/protocol/HttpService;->setResponseFactory()V",
        "Lorg/apache/http/protocol/HttpService;->setHttpProcessor()V",
        "Lorg/apache/http/protocol/HttpService;->doService()V"
    ],
    "Lorg/apache/http/protocol/HttpRequestHandlerResolver;": [
        "Lorg/apache/http/protocol/HttpRequestHandlerResolver;->lookup()Lorg/apache/http/protocol/HttpRequestHandler;"
    ],
    "Lorg/apache/http/protocol/HttpRequestHandler;": [
        "Lorg/apache/http/protocol/HttpRequestHandler;->handle()V"
    ],
    "Lorg/apache/http/HttpServerConnection;": [
        "Lorg/apache/http/HttpServerConnection;->sendResponseHeader()V",
        "Lorg/apache/http/HttpServerConnection;->close()V",
        "Lorg/apache/http/HttpServerConnection;->sendResponseEntity()V",
        "Lorg/apache/http/HttpServerConnection;->receiveRequestHeader()Lorg/apache/http/HttpRequest;",
        "Lorg/apache/http/HttpServerConnection;->receiveRequestEntity()V",
        "Lorg/apache/http/HttpServerConnection;->flush()V"
    ],
    "Lorg/apache/http/protocol/HttpExpectationVerifier;": [
        "Lorg/apache/http/protocol/HttpExpectationVerifier;->verify()V"
    ],
    "Lorg/apache/http/protocol/HttpProcessor;": [
        "Lorg/apache/http/protocol/HttpProcessor;->process()V"
    ],
    "Lorg/apache/http/HttpClientConnection;": [
        "Lorg/apache/http/HttpClientConnection;->isResponseAvailable()Z",
        "Lorg/apache/http/HttpClientConnection;->close()V",
        "Lorg/apache/http/HttpClientConnection;->flush()V",
        "Lorg/apache/http/HttpClientConnection;->receiveResponseEntity()V",
        "Lorg/apache/http/HttpClientConnection;->sendRequestHeader()V",
        "Lorg/apache/http/HttpClientConnection;->sendRequestEntity()V",
        "Lorg/apache/http/HttpClientConnection;->receiveResponseHeader()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpRequestInterceptor;": [
        "Lorg/apache/http/HttpRequestInterceptor;->process()V"
    ],
    "Lorg/apache/http/HttpResponseInterceptor;": [
        "Lorg/apache/http/HttpResponseInterceptor;->process()V"
    ],
    "Lorg/apache/http/message/BasicTokenIterator;": [
        "Lorg/apache/http/message/BasicTokenIterator;->nextToken()Ljava/lang/String;",
        "Lorg/apache/http/message/BasicTokenIterator;->findTokenStart()I",
        "Lorg/apache/http/message/BasicTokenIterator;->findTokenSeparator()I",
        "Lorg/apache/http/message/BasicTokenIterator;->findTokenEnd()I",
        "Lorg/apache/http/message/BasicTokenIterator;->isTokenChar()Z",
        "Lorg/apache/http/message/BasicTokenIterator;->isTokenSeparator()Z",
        "Lorg/apache/http/message/BasicTokenIterator;->isWhitespace()Z",
        "Lorg/apache/http/message/BasicTokenIterator;->isHttpSeparator()Z",
        "Lorg/apache/http/message/BasicTokenIterator;->findNext()I",
        "Lorg/apache/http/message/BasicTokenIterator;->createToken()Ljava/lang/String;"
    ],
    "Lorg/apache/http/message/BasicLineFormatter;": [
        "Lorg/apache/http/message/BasicLineFormatter;->appendProtocolVersion()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/BasicLineFormatter;->doFormatRequestLine()V",
        "Lorg/apache/http/message/BasicLineFormatter;->formatStatusLine()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/BasicLineFormatter;->formatRequestLine()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/BasicLineFormatter;->formatHeader()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/BasicLineFormatter;->doFormatStatusLine()V",
        "Lorg/apache/http/message/BasicLineFormatter;->estimateProtocolVersionLen()I",
        "Lorg/apache/http/message/BasicLineFormatter;->doFormatHeader()V"
    ],
    "Lorg/apache/http/message/BasicHeaderElementIterator;": [
        "Lorg/apache/http/message/BasicHeaderElementIterator;->nextElement()Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/message/BasicHeaderElementIterator;->parseNextElement()V",
        "Lorg/apache/http/message/BasicHeaderElementIterator;->bufferHeaderValue()V"
    ],
    "Lorg/apache/http/message/BasicHttpResponse;": [
        "Lorg/apache/http/message/BasicHttpResponse;->getReason()Ljava/lang/String;"
    ],
    "Lorg/apache/http/message/BasicHeaderIterator;": [
        "Lorg/apache/http/message/BasicHeaderIterator;->findNext()I",
        "Lorg/apache/http/message/BasicHeaderIterator;->nextHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/message/BasicHeaderIterator;->filterHeader()Z"
    ],
    "Lorg/apache/http/message/BasicListHeaderIterator;": [
        "Lorg/apache/http/message/BasicListHeaderIterator;->filterHeader()Z",
        "Lorg/apache/http/message/BasicListHeaderIterator;->findNext()I",
        "Lorg/apache/http/message/BasicListHeaderIterator;->nextHeader()Lorg/apache/http/Header;"
    ],
    "Lorg/apache/http/message/BasicHttpRequest;": [
        "Lorg/apache/http/message/BasicHttpRequest;->getRequestLine()Lorg/apache/http/RequestLine;",
        "Lorg/apache/http/message/BasicHttpRequest;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/message/HeaderValueFormatter;": [
        "Lorg/apache/http/message/HeaderValueFormatter;->formatNameValuePair()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/HeaderValueFormatter;->formatElements()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/HeaderValueFormatter;->formatHeaderElement()Lorg/apache/http/util/CharArrayBuffer;",
        "Lorg/apache/http/message/HeaderValueFormatter;->formatParameters()Lorg/apache/http/util/CharArrayBuffer;"
    ],
    "Lorg/apache/http/message/BasicLineParser;": [
        "Lorg/apache/http/message/BasicLineParser;->createProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/message/BasicLineParser;->skipWhitespace()V",
        "Lorg/apache/http/message/BasicLineParser;->createStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/message/BasicLineParser;->parseProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/message/BasicLineParser;->createRequestLine()Lorg/apache/http/RequestLine;"
    ],
    "Lorg/apache/http/message/BasicHttpEntityEnclosingRequest;": [
        "Lorg/apache/http/message/BasicHttpEntityEnclosingRequest;->getFirstHeader()Lorg/apache/http/Header;"
    ],
    "Lorg/apache/http/client/entity/UrlEncodedFormEntity;": [
        "Lorg/apache/http/client/entity/UrlEncodedFormEntity;->setContentType()V"
    ],
    "Lorg/apache/http/cookie/CookieSpec;": [
        "Lorg/apache/http/cookie/CookieSpec;->parse()Ljava/util/List;",
        "Lorg/apache/http/cookie/CookieSpec;->validate()V",
        "Lorg/apache/http/cookie/CookieSpec;->getVersionHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/cookie/CookieSpec;->getVersion()I",
        "Lorg/apache/http/cookie/CookieSpec;->formatCookies()Ljava/util/List;",
        "Lorg/apache/http/cookie/CookieSpec;->match()Z"
    ],
    "Lorg/apache/http/client/CookieStore;": [
        "Lorg/apache/http/client/CookieStore;->getCookies()Ljava/util/List;",
        "Lorg/apache/http/client/CookieStore;->addCookie()V"
    ],
    "Lorg/apache/http/cookie/MalformedCookieException;": [
        "Lorg/apache/http/cookie/MalformedCookieException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/protocol/ResponseProcessCookies;": [
        "Lorg/apache/http/client/protocol/ResponseProcessCookies;->processCookies()V"
    ],
    "Lorg/apache/http/client/methods/HttpTrace;": [
        "Lorg/apache/http/client/methods/HttpTrace;->setURI()V"
    ],
    "Lorg/apache/http/client/methods/HttpHead;": [
        "Lorg/apache/http/client/methods/HttpHead;->setURI()V"
    ],
    "Lorg/apache/http/client/methods/HttpOptions;": [
        "Lorg/apache/http/client/methods/HttpOptions;->setURI()V"
    ],
    "Lorg/apache/http/conn/ConnectionReleaseTrigger;": [
        "Lorg/apache/http/conn/ConnectionReleaseTrigger;->abortConnection()V"
    ],
    "Lorg/apache/http/client/utils/CloneUtils;": [
        "Lorg/apache/http/client/utils/CloneUtils;->clone()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/client/methods/HttpRequestBase;": [
        "Lorg/apache/http/client/methods/HttpRequestBase;->getURI()Ljava/net/URI;",
        "Lorg/apache/http/client/methods/HttpRequestBase;->getMethod()Ljava/lang/String;",
        "Lorg/apache/http/client/methods/HttpRequestBase;->getProtocolVersion()Lorg/apache/http/ProtocolVersion;",
        "Lorg/apache/http/client/methods/HttpRequestBase;->clone()Ljava/lang/Object;",
        "Lorg/apache/http/client/methods/HttpRequestBase;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/client/methods/HttpDelete;": [
        "Lorg/apache/http/client/methods/HttpDelete;->setURI()V"
    ],
    "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;": [
        "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;->getFirstHeader()Lorg/apache/http/Header;"
    ],
    "Ljava/lang/SecurityException;": [
        "Ljava/lang/SecurityException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/NoSuchMethodException;": [
        "Ljava/lang/NoSuchMethodException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/utils/Idn;": [
        "Lorg/apache/http/client/utils/Idn;->toUnicode()Ljava/lang/String;"
    ],
    "Ljava/util/Scanner;": [
        "Ljava/util/Scanner;->useDelimiter()Ljava/util/Scanner;",
        "Ljava/util/Scanner;->next()Ljava/lang/String;",
        "Ljava/util/Scanner;->hasNext()Z"
    ],
    "Lorg/apache/http/client/utils/Rfc3492Idn;": [
        "Lorg/apache/http/client/utils/Rfc3492Idn;->decode()Ljava/lang/String;",
        "Lorg/apache/http/client/utils/Rfc3492Idn;->adapt()I",
        "Lorg/apache/http/client/utils/Rfc3492Idn;->digit()I"
    ],
    "Lorg/apache/http/auth/BasicUserPrincipal;": [
        "Lorg/apache/http/auth/BasicUserPrincipal;->hashCode()I",
        "Lorg/apache/http/auth/BasicUserPrincipal;->getName()Ljava/lang/String;",
        "Lorg/apache/http/auth/BasicUserPrincipal;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/auth/AuthSchemeFactory;": [
        "Lorg/apache/http/auth/AuthSchemeFactory;->newInstance()Lorg/apache/http/auth/AuthScheme;"
    ],
    "Lorg/apache/http/auth/NTUserPrincipal;": [
        "Lorg/apache/http/auth/NTUserPrincipal;->getDomain()Ljava/lang/String;",
        "Lorg/apache/http/auth/NTUserPrincipal;->getUsername()Ljava/lang/String;"
    ],
    "Ljava/beans/PropertyChangeEvent;": [
        "Ljava/beans/PropertyChangeEvent;->getNewValue()Ljava/lang/Object;",
        "Ljava/beans/PropertyChangeEvent;->getPropertyName()Ljava/lang/String;"
    ],
    "Lorg/springframework/util/ClassUtils;": [
        "Lorg/springframework/util/ClassUtils;->getDefaultClassLoader()Ljava/lang/ClassLoader;",
        "Lorg/springframework/util/ClassUtils;->forName()Ljava/lang/Class;",
        "Lorg/springframework/util/ClassUtils;->getMethodCountForName()I",
        "Lorg/springframework/util/ClassUtils;->getDescriptiveType()Ljava/lang/String;",
        "Lorg/springframework/util/ClassUtils;->getUserClass()Ljava/lang/Class;",
        "Lorg/springframework/util/ClassUtils;->classPackageAsResourcePath()Ljava/lang/String;",
        "Lorg/springframework/util/ClassUtils;->classNamesToString()Ljava/lang/String;",
        "Lorg/springframework/util/ClassUtils;->getAllInterfacesForClass()[Ljava/lang/Class;",
        "Lorg/springframework/util/ClassUtils;->getAllInterfacesForClassAsSet()Ljava/util/Set;",
        "Lorg/springframework/util/ClassUtils;->getConstructorIfAvailable()Ljava/lang/reflect/Constructor;",
        "Lorg/springframework/util/ClassUtils;->isPresent()Z",
        "Lorg/springframework/util/ClassUtils;->isPrimitiveWrapper()Z",
        "Lorg/springframework/util/ClassUtils;->registerCommonClasses()V",
        "Lorg/springframework/util/ClassUtils;->getQualifiedNameForArray()Ljava/lang/String;",
        "Lorg/springframework/util/ClassUtils;->getShortName()Ljava/lang/String;",
        "Lorg/springframework/util/ClassUtils;->getQualifiedName()Ljava/lang/String;",
        "Lorg/springframework/util/ClassUtils;->resolvePrimitiveClassName()Ljava/lang/Class;",
        "Lorg/springframework/util/ClassUtils;->isAssignable()Z",
        "Lorg/springframework/util/ClassUtils;->isVisible()Z",
        "Lorg/springframework/util/ClassUtils;->hasAtLeastOneMethodWithName()Z",
        "Lorg/springframework/util/ClassUtils;->getMethodIfAvailable()Ljava/lang/reflect/Method;"
    ],
    "Lorg/springframework/beans/BeansException;": [
        "Lorg/springframework/beans/BeansException;->getMessage()Ljava/lang/String;",
        "Lorg/springframework/beans/BeansException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lorg/springframework/util/ObjectUtils;": [
        "Lorg/springframework/util/ObjectUtils;->nullSafeEquals()Z",
        "Lorg/springframework/util/ObjectUtils;->isEmpty()Z",
        "Lorg/springframework/util/ObjectUtils;->hashCode()I",
        "Lorg/springframework/util/ObjectUtils;->toObjectArray()[Ljava/lang/Object;",
        "Lorg/springframework/util/ObjectUtils;->isCheckedException()Z",
        "Lorg/springframework/util/ObjectUtils;->nullSafeToString()Ljava/lang/String;",
        "Lorg/springframework/util/ObjectUtils;->containsConstant()Z",
        "Lorg/springframework/util/ObjectUtils;->nullSafeHashCode()I",
        "Lorg/springframework/util/ObjectUtils;->getIdentityHexString()Ljava/lang/String;"
    ],
    "Lorg/springframework/core/MethodParameter;": [
        "Lorg/springframework/core/MethodParameter;->setParameterType()V",
        "Lorg/springframework/core/MethodParameter;->getMethod()Ljava/lang/reflect/Method;",
        "Lorg/springframework/core/MethodParameter;->getNestingLevel()I",
        "Lorg/springframework/core/MethodParameter;->getAnnotatedElement()Ljava/lang/reflect/AnnotatedElement;",
        "Lorg/springframework/core/MethodParameter;->getTypeIndexesPerLevel()Ljava/util/Map;",
        "Lorg/springframework/core/MethodParameter;->getMember()Ljava/lang/reflect/Member;",
        "Lorg/springframework/core/MethodParameter;->getParameterType()Ljava/lang/Class;",
        "Lorg/springframework/core/MethodParameter;->getParameterAnnotations()[Ljava/lang/annotation/Annotation;",
        "Lorg/springframework/core/MethodParameter;->getTypeIndexForLevel()Ljava/lang/Integer;",
        "Lorg/springframework/core/MethodParameter;->getParameterAnnotation()Ljava/lang/annotation/Annotation;",
        "Lorg/springframework/core/MethodParameter;->getParameterIndex()I",
        "Lorg/springframework/core/MethodParameter;->getConstructor()Ljava/lang/reflect/Constructor;"
    ],
    "Ljava/lang/reflect/Member;": [
        "Ljava/lang/reflect/Member;->getDeclaringClass()Ljava/lang/Class;"
    ],
    "Ljava/lang/reflect/AnnotatedElement;": [
        "Ljava/lang/reflect/AnnotatedElement;->getAnnotations()[Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/AnnotatedElement;->getAnnotation()Ljava/lang/annotation/Annotation;"
    ],
    "Lorg/springframework/core/ParameterNameDiscoverer;": [
        "Lorg/springframework/core/ParameterNameDiscoverer;->getParameterNames()[Ljava/lang/String;"
    ],
    "Lorg/springframework/core/NestedRuntimeException;": [
        "Lorg/springframework/core/NestedRuntimeException;->contains()Z",
        "Lorg/springframework/core/NestedRuntimeException;->getRootCause()Ljava/lang/Throwable;",
        "Lorg/springframework/core/NestedRuntimeException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lorg/springframework/core/NestedExceptionUtils;": [
        "Lorg/springframework/core/NestedExceptionUtils;->buildMessage()Ljava/lang/String;"
    ],
    "Lorg/springframework/core/GenericTypeResolver;": [
        "Lorg/springframework/core/GenericTypeResolver;->extractClass()Ljava/lang/Class;",
        "Lorg/springframework/core/GenericTypeResolver;->extractTypeVariablesFromGenericInterfaces()V",
        "Lorg/springframework/core/GenericTypeResolver;->getTargetType()Ljava/lang/reflect/Type;",
        "Lorg/springframework/core/GenericTypeResolver;->resolveTypeArguments()[Ljava/lang/Class;",
        "Lorg/springframework/core/GenericTypeResolver;->populateTypeMapFromParameterizedType()V",
        "Lorg/springframework/core/GenericTypeResolver;->getTypeVariableMap()Ljava/util/Map;",
        "Lorg/springframework/core/GenericTypeResolver;->doResolveTypeArguments()[Ljava/lang/Class;",
        "Lorg/springframework/core/GenericTypeResolver;->extractBoundForTypeVariable()Ljava/lang/reflect/Type;",
        "Lorg/springframework/core/GenericTypeResolver;->getRawType()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/ref/Reference;": [
        "Ljava/lang/ref/Reference;->get()Ljava/lang/Object;"
    ],
    "Lorg/springframework/core/GenericCollectionTypeResolver;": [
        "Lorg/springframework/core/GenericCollectionTypeResolver;->extractType()Ljava/lang/Class;",
        "Lorg/springframework/core/GenericCollectionTypeResolver;->extractTypeFromClass()Ljava/lang/Class;",
        "Lorg/springframework/core/GenericCollectionTypeResolver;->getGenericParameterType()Ljava/lang/Class;",
        "Lorg/springframework/core/GenericCollectionTypeResolver;->getGenericFieldType()Ljava/lang/Class;",
        "Lorg/springframework/core/GenericCollectionTypeResolver;->getGenericReturnType()Ljava/lang/Class;",
        "Lorg/springframework/core/GenericCollectionTypeResolver;->isIntrospectionCandidate()Z",
        "Lorg/springframework/core/GenericCollectionTypeResolver;->extractTypeFromParameterizedType()Ljava/lang/Class;"
    ],
    "Ljava/lang/reflect/WildcardType;": [
        "Ljava/lang/reflect/WildcardType;->getLowerBounds()[Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/WildcardType;->getUpperBounds()[Ljava/lang/reflect/Type;"
    ],
    "Lorg/springframework/core/NestedIOException;": [
        "Lorg/springframework/core/NestedIOException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lorg/springframework/core/NestedCheckedException;": [
        "Lorg/springframework/core/NestedCheckedException;->getRootCause()Ljava/lang/Throwable;",
        "Lorg/springframework/core/NestedCheckedException;->getCause()Ljava/lang/Throwable;",
        "Lorg/springframework/core/NestedCheckedException;->contains()Z"
    ],
    "Lorg/springframework/util/StringUtils;": [
        "Lorg/springframework/util/StringUtils;->getFilename()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->trimLeadingWhitespace()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->collectionToDelimitedString()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->containsWhitespace()Z",
        "Lorg/springframework/util/StringUtils;->changeFirstCharacterCase()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->quote()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->applyRelativePath()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->tokenizeToStringArray()[Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->delimitedListToStringArray()[Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->trimLeadingCharacter()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->split()[Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->cleanPath()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->replace()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->hasText()Z",
        "Lorg/springframework/util/StringUtils;->toStringArray()[Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->unqualify()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->trimAllWhitespace()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->deleteAny()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->commaDelimitedListToStringArray()[Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->arrayToDelimitedString()Ljava/lang/String;",
        "Lorg/springframework/util/StringUtils;->splitArrayElementsIntoProperties()Ljava/util/Properties;",
        "Lorg/springframework/util/StringUtils;->hasLength()Z"
    ],
    "Lorg/springframework/core/io/AbstractResource;": [
        "Lorg/springframework/core/io/AbstractResource;->getFile()Ljava/io/File;",
        "Lorg/springframework/core/io/AbstractResource;->getInputStream()Ljava/io/InputStream;",
        "Lorg/springframework/core/io/AbstractResource;->getDescription()Ljava/lang/String;",
        "Lorg/springframework/core/io/AbstractResource;->lastModified()J",
        "Lorg/springframework/core/io/AbstractResource;->contentLength()J",
        "Lorg/springframework/core/io/AbstractResource;->getURL()Ljava/net/URL;",
        "Lorg/springframework/core/io/AbstractResource;->getFileForLastModifiedCheck()Ljava/io/File;"
    ],
    "Lorg/springframework/core/io/Resource;": [
        "Lorg/springframework/core/io/Resource;->getDescription()Ljava/lang/String;"
    ],
    "Lorg/springframework/util/ResourceUtils;": [
        "Lorg/springframework/util/ResourceUtils;->toURI()Ljava/net/URI;",
        "Lorg/springframework/util/ResourceUtils;->isJarURL()Z",
        "Lorg/springframework/util/ResourceUtils;->getFile()Ljava/io/File;",
        "Lorg/springframework/util/ResourceUtils;->isFileURL()Z",
        "Lorg/springframework/util/ResourceUtils;->extractJarFileURL()Ljava/net/URL;"
    ],
    "Lorg/springframework/core/io/ClassPathResource;": [
        "Lorg/springframework/core/io/ClassPathResource;->getDescription()Ljava/lang/String;"
    ],
    "Lorg/springframework/core/io/AbstractFileResolvingResource;": [
        "Lorg/springframework/core/io/AbstractFileResolvingResource;->getFile()Ljava/io/File;",
        "Lorg/springframework/core/io/AbstractFileResolvingResource;->getURI()Ljava/net/URI;",
        "Lorg/springframework/core/io/AbstractFileResolvingResource;->getInputStream()Ljava/io/InputStream;",
        "Lorg/springframework/core/io/AbstractFileResolvingResource;->getURL()Ljava/net/URL;",
        "Lorg/springframework/core/io/AbstractFileResolvingResource;->getDescription()Ljava/lang/String;"
    ],
    "Lorg/springframework/core/io/UrlResource;": [
        "Lorg/springframework/core/io/UrlResource;->getCleanedUrl()Ljava/net/URL;"
    ],
    "Lorg/springframework/util/CollectionUtils;": [
        "Lorg/springframework/util/CollectionUtils;->isEmpty()Z",
        "Lorg/springframework/util/CollectionUtils;->findValueOfType()Ljava/lang/Object;"
    ],
    "Lorg/springframework/util/TypeUtils;": [
        "Lorg/springframework/util/TypeUtils;->isAssignableBound()Z",
        "Lorg/springframework/util/TypeUtils;->isAssignable()Z"
    ],
    "Lorg/springframework/util/ReflectionUtils;": [
        "Lorg/springframework/util/ReflectionUtils;->findMethod()Ljava/lang/reflect/Method;",
        "Lorg/springframework/util/ReflectionUtils;->doWithMethods()V",
        "Lorg/springframework/util/ReflectionUtils;->rethrowRuntimeException()V",
        "Lorg/springframework/util/ReflectionUtils;->invokeMethod()Ljava/lang/Object;",
        "Lorg/springframework/util/ReflectionUtils;->doWithFields()V",
        "Lorg/springframework/util/ReflectionUtils;->findField()Ljava/lang/reflect/Field;",
        "Lorg/springframework/util/ReflectionUtils;->invokeJdbcMethod()Ljava/lang/Object;",
        "Lorg/springframework/util/ReflectionUtils;->handleReflectionException()V",
        "Lorg/springframework/util/ReflectionUtils;->handleInvocationTargetException()V"
    ],
    "Lorg/springframework/util/ReflectionUtils$FieldFilter;": [
        "Lorg/springframework/util/ReflectionUtils$FieldFilter;->matches()Z"
    ],
    "Lorg/springframework/util/ReflectionUtils$FieldCallback;": [
        "Lorg/springframework/util/ReflectionUtils$FieldCallback;->doWith()V"
    ],
    "Lorg/springframework/util/ReflectionUtils$MethodFilter;": [
        "Lorg/springframework/util/ReflectionUtils$MethodFilter;->matches()Z"
    ],
    "Lorg/springframework/util/ReflectionUtils$MethodCallback;": [
        "Lorg/springframework/util/ReflectionUtils$MethodCallback;->doWith()V"
    ],
    "Lorg/springframework/util/NumberUtils;": [
        "Lorg/springframework/util/NumberUtils;->convertNumberToTargetClass()Ljava/lang/Number;",
        "Lorg/springframework/util/NumberUtils;->decodeBigInteger()Ljava/math/BigInteger;",
        "Lorg/springframework/util/NumberUtils;->isHexNumber()Z",
        "Lorg/springframework/util/NumberUtils;->raiseOverflowException()V",
        "Lorg/springframework/util/NumberUtils;->parseNumber()Ljava/lang/Number;"
    ],
    "Ljava/text/NumberFormat;": [
        "Ljava/text/NumberFormat;->parse()Ljava/lang/Number;"
    ],
    "Ljava/lang/reflect/Proxy;": [
        "Ljava/lang/reflect/Proxy;->isProxyClass()Z",
        "Ljava/lang/reflect/Proxy;->getProxyClass()Ljava/lang/Class;"
    ],
    "Lorg/springframework/util/LinkedMultiValueMap;": [
        "Lorg/springframework/util/LinkedMultiValueMap;->get()Ljava/util/List;",
        "Lorg/springframework/util/LinkedMultiValueMap;->remove()Ljava/util/List;",
        "Lorg/springframework/util/LinkedMultiValueMap;->put()Ljava/util/List;",
        "Lorg/springframework/util/LinkedMultiValueMap;->set()V"
    ],
    "Lorg/springframework/util/FileCopyUtils;": [
        "Lorg/springframework/util/FileCopyUtils;->copy()I",
        "Lorg/springframework/util/FileCopyUtils;->copyToByteArray()[B"
    ],
    "Lorg/springframework/util/LinkedCaseInsensitiveMap;": [
        "Lorg/springframework/util/LinkedCaseInsensitiveMap;->convertKey()Ljava/lang/String;",
        "Lorg/springframework/util/LinkedCaseInsensitiveMap;->put()Ljava/lang/Object;"
    ]
}