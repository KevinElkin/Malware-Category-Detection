{
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->close()V"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->getChars()V",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->trim()Ljava/lang/String;"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->close()V",
        "Ljava/io/OutputStream;->write()V"
    ],
    "Ljava/io/ByteArrayInputStream;": [
        "Ljava/io/ByteArrayInputStream;->close()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->size()I",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B",
        "Ljava/io/ByteArrayOutputStream;->write()V",
        "Ljava/io/ByteArrayOutputStream;->close()V"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->size()I",
        "Ljava/util/Vector;->add()Z",
        "Ljava/util/Vector;->toArray()[Ljava/lang/Object;",
        "Ljava/util/Vector;->elements()Ljava/util/Enumeration;"
    ],
    "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;": [
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->write()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->alignBigEndToFourByteBoundry()[B",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->class$()Ljava/lang/Class;",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->writeType()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->toByteArray()[B",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->writeTypesArray()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->appendNullCharToAlignStream()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->writeUnderHandler()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->writeInteger32ToByteArray()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->writeInteger64ToByteArray()V",
        "Lcom/illposed/osc/utility/OSCJavaToByteArrayConverter;->writeTypes()V"
    ],
    "Lcom/illposed/osc/OSCBundle;": [
        "Lcom/illposed/osc/OSCBundle;->addPacket()V",
        "Lcom/illposed/osc/OSCBundle;->getPackets()[Lcom/illposed/osc/OSCPacket;",
        "Lcom/illposed/osc/OSCBundle;->computeTimeTagByteArray()V",
        "Lcom/illposed/osc/OSCBundle;->getTimestamp()Ljava/util/Date;"
    ],
    "Ljava/util/Enumeration;": [
        "Ljava/util/Enumeration;->hasMoreElements()Z",
        "Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;"
    ],
    "Lcom/illposed/osc/OSCPacket;": [
        "Lcom/illposed/osc/OSCPacket;->getByteArray()[B",
        "Lcom/illposed/osc/OSCPacket;->computeByteArray()V"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->toLocaleString()Ljava/lang/String;",
        "Ljava/util/Date;->getTime()J",
        "Ljava/util/Date;->toString()Ljava/lang/String;"
    ],
    "Ljava/math/BigInteger;": [
        "Ljava/math/BigInteger;->longValue()J",
        "Ljava/math/BigInteger;->intValue()I",
        "Ljava/math/BigInteger;->toString()Ljava/lang/String;"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->getLocalHost()Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getByName()Ljava/net/InetAddress;"
    ],
    "Lcom/illposed/osc/OSCPortOut;": [
        "Lcom/illposed/osc/OSCPortOut;->send()V",
        "Lcom/illposed/osc/OSCPortOut;->defaultSCOSCPort()I",
        "Lcom/illposed/osc/OSCPortOut;->close()V"
    ],
    "Ljava/net/DatagramSocket;": [
        "Ljava/net/DatagramSocket;->setBroadcast()V",
        "Ljava/net/DatagramSocket;->close()V",
        "Ljava/net/DatagramSocket;->receive()V",
        "Ljava/net/DatagramSocket;->send()V"
    ],
    "Lcom/illposed/osc/utility/OSCPacketDispatcher;": [
        "Lcom/illposed/osc/utility/OSCPacketDispatcher;->addListener()V",
        "Lcom/illposed/osc/utility/OSCPacketDispatcher;->dispatchBundle()V",
        "Lcom/illposed/osc/utility/OSCPacketDispatcher;->dispatchPacket()V",
        "Lcom/illposed/osc/utility/OSCPacketDispatcher;->dispatchMessage()V"
    ],
    "Ljava/net/DatagramPacket;": [
        "Ljava/net/DatagramPacket;->getLength()I"
    ],
    "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;": [
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readTypes()[C",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->convertMessage()Lcom/illposed/osc/OSCMessage;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->moveToFourByteBoundry()V",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readInteger()Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readArray()[Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readChar()Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readDouble()Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readArgument()Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readFloat()Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->lengthOfCurrentString()I",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->convert()Lcom/illposed/osc/OSCPacket;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readString()Ljava/lang/String;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->isBundle()Z",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readBigInteger()Ljava/lang/Object;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->convertBundle()Lcom/illposed/osc/OSCBundle;",
        "Lcom/illposed/osc/utility/OSCByteArrayToJavaConverter;->readTimeTag()Ljava/util/Date;"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->printStackTrace()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->setDefaultUncaughtExceptionHandler()V",
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->finalize()V",
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->notify()V"
    ],
    "Lcom/illposed/osc/OSCMessage;": [
        "Lcom/illposed/osc/OSCMessage;->addArgument()V",
        "Lcom/illposed/osc/OSCMessage;->getAddress()Ljava/lang/String;",
        "Lcom/illposed/osc/OSCMessage;->computeArgumentsByteArray()V",
        "Lcom/illposed/osc/OSCMessage;->computeAddressByteArray()V",
        "Lcom/illposed/osc/OSCMessage;->setAddress()V"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->put()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->get()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->keys()Ljava/util/Enumeration;"
    ],
    "Lcom/illposed/osc/OSCListener;": [
        "Lcom/illposed/osc/OSCListener;->acceptMessage()V"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->intValue()I",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->intBitsToFloat()F",
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->floatToIntBits()I",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->toString()Ljava/lang/String;",
        "Ljava/lang/Class;->isArray()Z",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;"
    ],
    "Ljava/lang/ClassNotFoundException;": [
        "Ljava/lang/ClassNotFoundException;->printStackTrace()V",
        "Ljava/lang/ClassNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->equals()Z",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->delete()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;"
    ],
    "Lcom/fortuneteller/utils/v;": [
        "Lcom/fortuneteller/utils/v;->a()V",
        "Lcom/fortuneteller/utils/v;->a()Ljava/util/List;",
        "Lcom/fortuneteller/utils/v;->a()Z",
        "Lcom/fortuneteller/utils/v;->a()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/utils/p;": [
        "Lcom/fortuneteller/utils/p;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcom/fortuneteller/utils/p;->close()V",
        "Lcom/fortuneteller/utils/p;->onCreate()V"
    ],
    "Landroid/database/sqlite/SQLiteDatabase;": [
        "Landroid/database/sqlite/SQLiteDatabase;->replace()J",
        "Landroid/database/sqlite/SQLiteDatabase;->insert()J",
        "Landroid/database/sqlite/SQLiteDatabase;->close()V",
        "Landroid/database/sqlite/SQLiteDatabase;->delete()I",
        "Landroid/database/sqlite/SQLiteDatabase;->query()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->execSQL()V",
        "Landroid/database/sqlite/SQLiteDatabase;->update()I"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->moveToFirst()Z",
        "Landroid/database/Cursor;->getColumnIndexOrThrow()I",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->moveToNext()Z",
        "Landroid/database/Cursor;->isAfterLast()Z"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->getDateInstance()Ljava/text/DateFormat;",
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;",
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->arraycopy()V"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->parseLong()J",
        "Ljava/lang/Long;->toString()Ljava/lang/String;"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->clear()V",
        "Landroid/content/ContentValues;->put()V"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->obtainStyledAttributes()Landroid/content/res/TypedArray;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->sendBroadcast()V",
        "Landroid/content/Context;->getFileStreamPath()Ljava/io/File;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->notify()V",
        "Landroid/app/NotificationManager;->cancelAll()V",
        "Landroid/app/NotificationManager;->cancel()V"
    ],
    "Lcom/fortuneteller/utils/o;": [
        "Lcom/fortuneteller/utils/o;->a()V",
        "Lcom/fortuneteller/utils/o;->a()Ljava/lang/String;"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->getQueryParameter()Ljava/lang/String;",
        "Landroid/net/Uri;->getScheme()Ljava/lang/String;",
        "Landroid/net/Uri;->fromFile()Landroid/net/Uri;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;",
        "Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;",
        "Landroid/net/Uri;->getHost()Ljava/lang/String;"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setType()Landroid/content/Intent;",
        "Landroid/content/Intent;->createChooser()Landroid/content/Intent;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->putExtras()Landroid/content/Intent;",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->setImageViewResource()V",
        "Landroid/widget/RemoteViews;->setImageViewBitmap()V",
        "Landroid/widget/RemoteViews;->setProgressBar()V",
        "Landroid/widget/RemoteViews;->setTextViewText()V"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;"
    ],
    "Ljava/net/URLConnection;": [
        "Ljava/net/URLConnection;->getContentLength()I",
        "Ljava/net/URLConnection;->setRequestProperty()V",
        "Ljava/net/URLConnection;->getHeaderFields()Ljava/util/Map;",
        "Ljava/net/URLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/URLConnection;->connect()V"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->vibrate()V"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->putSerializable()V",
        "Landroid/os/Bundle;->getSerializable()Ljava/io/Serializable;",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->putString()V"
    ],
    "Ljava/net/MalformedURLException;": [
        "Ljava/net/MalformedURLException;->printStackTrace()V"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextInt()I"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getInstalledPackages()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getLaunchIntentForPackage()Landroid/content/Intent;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->delete()I",
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->createPackageContext()Landroid/content/Context;",
        "Landroid/app/Activity;->onCreateOptionsMenu()Z",
        "Landroid/app/Activity;->onWindowFocusChanged()V",
        "Landroid/app/Activity;->finish()V",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->onRestoreInstanceState()V",
        "Landroid/app/Activity;->onSaveInstanceState()V",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->onRestart()V"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->sendEmptyMessage()Z",
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->getLooper()Landroid/os/Looper;",
        "Landroid/os/Handler;->removeMessages()V",
        "Landroid/os/Handler;->postDelayed()Z"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->contains()Z",
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->removeAll()Z",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->toArray()[Ljava/lang/Object;",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->get()Ljava/lang/Object;"
    ],
    "Landroid/content/pm/ResolveInfo;": [
        "Landroid/content/pm/ResolveInfo;->loadLabel()Ljava/lang/CharSequence;"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->toString()Ljava/lang/String;"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/utils/WebApi;": [
        "Lcom/fortuneteller/utils/WebApi;->access$0()Landroid/content/Context;",
        "Lcom/fortuneteller/utils/WebApi;->getAllPermissions()[Ljava/lang/String;",
        "Lcom/fortuneteller/utils/WebApi;->getLocationByNetwork()Ljava/lang/String;",
        "Lcom/fortuneteller/utils/WebApi;->isNull()Z",
        "Lcom/fortuneteller/utils/WebApi;->stringsToLongs()[J",
        "Lcom/fortuneteller/utils/WebApi;->isInstalled()Ljava/lang/String;",
        "Lcom/fortuneteller/utils/WebApi;->getInstalled()Ljava/lang/String;",
        "Lcom/fortuneteller/utils/WebApi;->hasThePermission()Z",
        "Lcom/fortuneteller/utils/WebApi;->getLocationByGPS()Ljava/lang/String;"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->requestLocationUpdates()V",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;",
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;",
        "Landroid/location/LocationManager;->isProviderEnabled()Z"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getAccuracy()F"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningServices()Ljava/util/List;",
        "Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->hasNext()Z"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getDimension()F",
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getInteger()I",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->getXml()Landroid/content/res/XmlResourceParser;",
        "Landroid/content/res/Resources;->getStringArray()[Ljava/lang/String;",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->isAvailable()Z",
        "Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->getTypeName()Ljava/lang/String;"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->renameTo()Z",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->isFile()Z",
        "Ljava/io/File;->toString()Ljava/lang/String;"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;",
        "Ljava/io/BufferedReader;->close()V"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->close()V",
        "Ljava/io/FileInputStream;->read()I",
        "Ljava/io/FileInputStream;->getFD()Ljava/io/FileDescriptor;"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->write()V",
        "Ljava/io/FileOutputStream;->close()V"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->show()V",
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->isLoggable()Z",
        "Landroid/util/Log;->a()I"
    ],
    "Lcom/fortuneteller/utils/proSWActivity;": [
        "Lcom/fortuneteller/utils/proSWActivity;->requestWindowFeature()Z",
        "Lcom/fortuneteller/utils/proSWActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/fortuneteller/utils/proSWActivity;->getBaseContext()Landroid/content/Context;",
        "Lcom/fortuneteller/utils/proSWActivity;->startActivityForResult()V",
        "Lcom/fortuneteller/utils/proSWActivity;->setContentView()V",
        "Lcom/fortuneteller/utils/proSWActivity;->finish()V",
        "Lcom/fortuneteller/utils/proSWActivity;->findViewById()Landroid/view/View;"
    ],
    "Ljava/util/LinkedHashMap;": [
        "Ljava/util/LinkedHashMap;->put()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/LinkedHashMap;->size()I",
        "Ljava/util/LinkedHashMap;->get()Ljava/lang/Object;"
    ],
    "Lcom/fortuneteller/utils/w;": [
        "Lcom/fortuneteller/utils/w;->a()Z",
        "Lcom/fortuneteller/utils/w;->a()V",
        "Lcom/fortuneteller/utils/w;->a()Ljava/util/List;",
        "Lcom/fortuneteller/utils/w;->a()Ljava/lang/String;",
        "Lcom/fortuneteller/utils/w;->a()Lcom/fortuneteller/utils/o;"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setBackgroundResource()V",
        "Landroid/widget/TextView;->getBackground()Landroid/graphics/drawable/Drawable;",
        "Landroid/widget/TextView;->setVisibility()V",
        "Landroid/widget/TextView;->setEnabled()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setText()V"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->setLayoutParams()V",
        "Landroid/view/View;->getLocationOnScreen()V",
        "Landroid/view/View;->setOnClickListener()V",
        "Landroid/view/View;->onDraw()V",
        "Landroid/view/View;->measure()V",
        "Landroid/view/View;->getMeasuredHeight()I",
        "Landroid/view/View;->setPadding()V",
        "Landroid/view/View;->getContext()Landroid/content/Context;",
        "Landroid/view/View;->invalidate()V",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/view/View;->setOnKeyListener()V",
        "Landroid/view/View;->findViewById()Landroid/view/View;",
        "Landroid/view/View;->getVisibility()I",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->getMeasuredWidth()I",
        "Landroid/view/View;->scrollTo()V",
        "Landroid/view/View;->setVisibility()V"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->canGoBack()Z",
        "Landroid/webkit/WebView;->setLayoutParams()V",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->destroy()V",
        "Landroid/webkit/WebView;->stopLoading()V",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;",
        "Landroid/webkit/WebView;->goBack()V",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->addJavascriptInterface()V",
        "Landroid/webkit/WebView;->setVisibility()V",
        "Landroid/webkit/WebView;->setScrollBarStyle()V"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->setCacheMode()V"
    ],
    "Landroid/widget/Button;": [
        "Landroid/widget/Button;->setOnClickListener()V",
        "Landroid/widget/Button;->setHeight()V",
        "Landroid/widget/Button;->setSingleLine()V",
        "Landroid/widget/Button;->setBackgroundResource()V",
        "Landroid/widget/Button;->setText()V",
        "Landroid/widget/Button;->setVisibility()V"
    ],
    "Lcom/fortuneteller/utils/n;": [
        "Lcom/fortuneteller/utils/n;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/fortuneteller/utils/m;": [
        "Lcom/fortuneteller/utils/m;->a()Ljava/lang/String;",
        "Lcom/fortuneteller/utils/m;->a()V"
    ],
    "Landroid/os/AsyncTask;": [
        "Landroid/os/AsyncTask;->onPostExecute()V",
        "Landroid/os/AsyncTask;->onPreExecute()V"
    ],
    "Lcom/fortuneteller/utils/proIActivity;": [
        "Lcom/fortuneteller/utils/proIActivity;->getBaseContext()Landroid/content/Context;",
        "Lcom/fortuneteller/utils/proIActivity;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/utils/proIActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/fortuneteller/utils/proIActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/fortuneteller/utils/proIActivity;->a()Landroid/view/View;",
        "Lcom/fortuneteller/utils/proIActivity;->requestWindowFeature()Z",
        "Lcom/fortuneteller/utils/proIActivity;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/utils/proIActivity;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/fortuneteller/utils/proIActivity;->finish()V",
        "Lcom/fortuneteller/utils/proIActivity;->a()Landroid/webkit/WebView;",
        "Lcom/fortuneteller/utils/proIActivity;->setContentView()V",
        "Lcom/fortuneteller/utils/proIActivity;->startActivityForResult()V",
        "Lcom/fortuneteller/utils/proIActivity;->startActivity()V"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->registerOnSharedPreferenceChangeListener()V"
    ],
    "Lcom/fortuneteller/utils/x;": [
        "Lcom/fortuneteller/utils/x;->a()V",
        "Lcom/fortuneteller/utils/x;->a()Ljava/lang/String;"
    ],
    "Ljavax/xml/parsers/DocumentBuilderFactory;": [
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newInstance()Ljavax/xml/parsers/DocumentBuilderFactory;",
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;"
    ],
    "Ljavax/xml/parsers/DocumentBuilder;": [
        "Ljavax/xml/parsers/DocumentBuilder;->parse()Lorg/w3c/dom/Document;"
    ],
    "Lorg/w3c/dom/Document;": [
        "Lorg/w3c/dom/Document;->getDocumentElement()Lorg/w3c/dom/Element;"
    ],
    "Lorg/w3c/dom/Element;": [
        "Lorg/w3c/dom/Element;->getChildNodes()Lorg/w3c/dom/NodeList;",
        "Lorg/w3c/dom/Element;->getFirstChild()Lorg/w3c/dom/Node;",
        "Lorg/w3c/dom/Element;->getElementsByTagName()Lorg/w3c/dom/NodeList;",
        "Lorg/w3c/dom/Element;->getNodeName()Ljava/lang/String;"
    ],
    "Lorg/w3c/dom/NodeList;": [
        "Lorg/w3c/dom/NodeList;->item()Lorg/w3c/dom/Node;",
        "Lorg/w3c/dom/NodeList;->getLength()I"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z"
    ],
    "Lorg/w3c/dom/Node;": [
        "Lorg/w3c/dom/Node;->getNodeType()S",
        "Lorg/w3c/dom/Node;->getNodeValue()Ljava/lang/String;"
    ],
    "Landroid/app/AlarmManager;": [
        "Landroid/app/AlarmManager;->set()V"
    ],
    "Landroid/content/DialogInterface;": [
        "Landroid/content/DialogInterface;->cancel()V"
    ],
    "Lcom/fortuneteller/utils/a;": [
        "Lcom/fortuneteller/utils/a;->a()V"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getHeight()I"
    ],
    "Lcom/fortuneteller/utils/l;": [
        "Lcom/fortuneteller/utils/l;->execute()Landroid/os/AsyncTask;"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getStatusCode()I"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->printStackTrace()V"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->printStackTrace()V"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->remove()Z",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->size()I"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;"
    ],
    "Lcom/fortuneteller/utils/proFActivity;": [
        "Lcom/fortuneteller/utils/proFActivity;->a()Z",
        "Lcom/fortuneteller/utils/proFActivity;->finish()V",
        "Lcom/fortuneteller/utils/proFActivity;->a()Landroid/widget/EditText;",
        "Lcom/fortuneteller/utils/proFActivity;->requestWindowFeature()Z",
        "Lcom/fortuneteller/utils/proFActivity;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/utils/proFActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/fortuneteller/utils/proFActivity;->getBaseContext()Landroid/content/Context;",
        "Lcom/fortuneteller/utils/proFActivity;->setContentView()V",
        "Lcom/fortuneteller/utils/proFActivity;->getIntent()Landroid/content/Intent;"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->digest()[B",
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->printStackTrace()V",
        "Ljava/lang/Throwable;->getStackTrace()[Ljava/lang/StackTraceElement;",
        "Ljava/lang/Throwable;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/StackTraceElement;": [
        "Ljava/lang/StackTraceElement;->getClassName()Ljava/lang/String;"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->clear()V",
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->containsKey()Z",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->size()I"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;"
    ],
    "Landroid/content/pm/ApplicationInfo;": [
        "Landroid/content/pm/ApplicationInfo;->loadIcon()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/pm/ApplicationInfo;->loadLabel()Ljava/lang/CharSequence;"
    ],
    "Ljava/text/ParseException;": [
        "Ljava/text/ParseException;->printStackTrace()V"
    ],
    "Landroid/content/Intent$ShortcutIconResource;": [
        "Landroid/content/Intent$ShortcutIconResource;->fromContext()Landroid/content/Intent$ShortcutIconResource;"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->getHeaderFields()Ljava/util/Map;"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->getClassName()Ljava/lang/String;"
    ],
    "Landroid/graphics/drawable/BitmapDrawable;": [
        "Landroid/graphics/drawable/BitmapDrawable;->getBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lcom/fortuneteller/utils/proBReceiver;": [
        "Lcom/fortuneteller/utils/proBReceiver;->a()Landroid/content/Context;"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->min()J",
        "Ljava/lang/Math;->random()D",
        "Ljava/lang/Math;->max()J",
        "Ljava/lang/Math;->round()J",
        "Ljava/lang/Math;->min()F"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->onPageStarted()V",
        "Landroid/webkit/WebViewClient;->onPageFinished()V",
        "Landroid/webkit/WebViewClient;->onReceivedError()V"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNeutralButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setView()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->setSingleLine()V",
        "Landroid/widget/EditText;->getText()Landroid/text/Editable;"
    ],
    "Landroid/text/Editable;": [
        "Landroid/text/Editable;->toString()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/utils/proAReceiver;": [
        "Lcom/fortuneteller/utils/proAReceiver;->a()Lcom/fortuneteller/utils/o;",
        "Lcom/fortuneteller/utils/proAReceiver;->a()Landroid/content/Context;"
    ],
    "Lcom/fortuneteller/pro/Song$MidiFile;": [
        "Lcom/fortuneteller/pro/Song$MidiFile;->writeSongFile()V"
    ],
    "Ljava/util/zip/ZipInputStream;": [
        "Ljava/util/zip/ZipInputStream;->close()V",
        "Ljava/util/zip/ZipInputStream;->read()I",
        "Ljava/util/zip/ZipInputStream;->getNextEntry()Ljava/util/zip/ZipEntry;"
    ],
    "Ljava/io/BufferedOutputStream;": [
        "Ljava/io/BufferedOutputStream;->write()V",
        "Ljava/io/BufferedOutputStream;->flush()V",
        "Ljava/io/BufferedOutputStream;->close()V"
    ],
    "Ljava/io/ObjectInputStream;": [
        "Ljava/io/ObjectInputStream;->readObject()Ljava/lang/Object;",
        "Ljava/io/ObjectInputStream;->close()V"
    ],
    "Lcom/fortuneteller/pro/RemoteMidi;": [
        "Lcom/fortuneteller/pro/RemoteMidi;->send()V",
        "Lcom/fortuneteller/pro/RemoteMidi;->disconnect()V",
        "Lcom/fortuneteller/pro/RemoteMidi;->isConnected()Z"
    ],
    "Lcom/fortuneteller/pro/activities/MainMenu;": [
        "Lcom/fortuneteller/pro/activities/MainMenu;->getPackageName()Ljava/lang/String;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->checkExternalStorage()Z",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->advertiseHQSamples()V",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getString()Ljava/lang/String;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getExpandableListAdapter()Landroid/widget/ExpandableListAdapter;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->startActivity()V",
        "Lcom/fortuneteller/pro/activities/MainMenu;->runActivityClass()V",
        "Lcom/fortuneteller/pro/activities/MainMenu;->setListAdapter()V",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getExpandableListView()Landroid/widget/ExpandableListView;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/activities/MainMenu;->getPreferences()Landroid/content/SharedPreferences;"
    ],
    "Landroid/app/ExpandableListActivity;": [
        "Landroid/app/ExpandableListActivity;->onStart()V",
        "Landroid/app/ExpandableListActivity;->onCreateOptionsMenu()Z",
        "Landroid/app/ExpandableListActivity;->onCreate()V",
        "Landroid/app/ExpandableListActivity;->onDestroy()V",
        "Landroid/app/ExpandableListActivity;->onStop()V"
    ],
    "Landroid/widget/ExpandableListAdapter;": [
        "Landroid/widget/ExpandableListAdapter;->getChild()Ljava/lang/Object;",
        "Landroid/widget/ExpandableListAdapter;->getChildrenCount()I",
        "Landroid/widget/ExpandableListAdapter;->getGroupCount()I"
    ],
    "Landroid/widget/ExpandableListView;": [
        "Landroid/widget/ExpandableListView;->setOnChildClickListener()V",
        "Landroid/widget/ExpandableListView;->setCacheColorHint()V",
        "Landroid/widget/ExpandableListView;->getExpandableListAdapter()Landroid/widget/ExpandableListAdapter;",
        "Landroid/widget/ExpandableListView;->setAdapter()V",
        "Landroid/widget/ExpandableListView;->expandGroup()Z"
    ],
    "Landroid/view/Menu;": [
        "Landroid/view/Menu;->add()Landroid/view/MenuItem;"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->setIcon()Landroid/view/MenuItem;",
        "Landroid/view/MenuItem;->getTitle()Ljava/lang/CharSequence;",
        "Landroid/view/MenuItem;->getMenuInfo()Landroid/view/ContextMenu$ContextMenuInfo;",
        "Landroid/view/MenuItem;->getItemId()I"
    ],
    "Lcom/flurry/android/FlurryAgent;": [
        "Lcom/flurry/android/FlurryAgent;->a()[B",
        "Lcom/flurry/android/FlurryAgent;->onError()V",
        "Lcom/flurry/android/FlurryAgent;->onEvent()V",
        "Lcom/flurry/android/FlurryAgent;->a()Ljava/lang/String;",
        "Lcom/flurry/android/FlurryAgent;->a()Landroid/location/Location;",
        "Lcom/flurry/android/FlurryAgent;->a()Lcom/flurry/android/FlurryAgent;",
        "Lcom/flurry/android/FlurryAgent;->onEndSession()V",
        "Lcom/flurry/android/FlurryAgent;->a()V",
        "Lcom/flurry/android/FlurryAgent;->onStartSession()V",
        "Lcom/flurry/android/FlurryAgent;->a()Z"
    ],
    "Lcom/fortuneteller/pro/activities/Drums;": [
        "Lcom/fortuneteller/pro/activities/Drums;->getWindow()Landroid/view/Window;",
        "Lcom/fortuneteller/pro/activities/Drums;->finish()V",
        "Lcom/fortuneteller/pro/activities/Drums;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/Drums;->getNoteAtPosition()I",
        "Lcom/fortuneteller/pro/activities/Drums;->setVolumeControlStream()V",
        "Lcom/fortuneteller/pro/activities/Drums;->releaseNote()V",
        "Lcom/fortuneteller/pro/activities/Drums;->pressNote()V",
        "Lcom/fortuneteller/pro/activities/Drums;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/Drums;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/fortuneteller/pro/activities/Drums;->requestWindowFeature()Z"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setFormat()V",
        "Landroid/view/Window;->setLayout()V",
        "Landroid/view/Window;->requestFeature()Z",
        "Landroid/view/Window;->setFlags()V"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->getIntrinsicWidth()I",
        "Landroid/graphics/drawable/Drawable;->setAlpha()V",
        "Landroid/graphics/drawable/Drawable;->setBounds()V",
        "Landroid/graphics/drawable/Drawable;->getIntrinsicHeight()I",
        "Landroid/graphics/drawable/Drawable;->draw()V",
        "Landroid/graphics/drawable/Drawable;->setCallback()V",
        "Landroid/graphics/drawable/Drawable;->setState()Z",
        "Landroid/graphics/drawable/Drawable;->setDither()V",
        "Landroid/graphics/drawable/Drawable;->setVisible()Z"
    ],
    "Landroid/os/HandlerThread;": [
        "Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;",
        "Landroid/os/HandlerThread;->start()V",
        "Landroid/os/HandlerThread;->isAlive()Z",
        "Landroid/os/HandlerThread;->quit()Z"
    ],
    "Lcom/fortuneteller/pro/audio/soundmanagers/DrumSoundPoolSoundManager;": [
        "Lcom/fortuneteller/pro/audio/soundmanagers/DrumSoundPoolSoundManager;->release()V"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->offsetLocation()V",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->getPointerCount()I",
        "Landroid/view/MotionEvent;->getPointerId()I",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->getHistorySize()I",
        "Landroid/view/MotionEvent;->getHistoricalY()F",
        "Landroid/view/MotionEvent;->getHistoricalX()F"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/fortuneteller/pro/activities/LearnPiano;": [
        "Lcom/fortuneteller/pro/activities/LearnPiano;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->getScrollLocation()I",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->getWindow()Landroid/view/Window;",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->hideProgressBox()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->setNoteLabels()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->setTitle()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->fileMD5()Ljava/lang/String;",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->setProgressBoxProgress()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->setProgressBoxMax()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->getIntent()Landroid/content/Intent;",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->setVolumeControlStream()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->showProgressBox()V",
        "Lcom/fortuneteller/pro/activities/LearnPiano;->startSong()V"
    ],
    "Ljava/security/NoSuchAlgorithmException;": [
        "Ljava/security/NoSuchAlgorithmException;->printStackTrace()V"
    ],
    "Lcom/fortuneteller/pro/Song;": [
        "Lcom/fortuneteller/pro/Song;->getNotes()Ljava/util/ArrayList;"
    ],
    "Lcom/fortuneteller/pro/Song$Note;": [
        "Lcom/fortuneteller/pro/Song$Note;->getEndTick()J",
        "Lcom/fortuneteller/pro/Song$Note;->getStartTick()J",
        "Lcom/fortuneteller/pro/Song$Note;->getNote()I"
    ],
    "Lcom/fortuneteller/pro/views/PianoView;": [
        "Lcom/fortuneteller/pro/views/PianoView;->postInvalidate()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getNoteAtPosition()I",
        "Lcom/fortuneteller/pro/views/PianoView;->setOnPianoPressListener()V",
        "Lcom/fortuneteller/pro/views/PianoView;->releaseNote()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getWhiteKeyWidth()F",
        "Lcom/fortuneteller/pro/views/PianoView;->setDrawingRange()V",
        "Lcom/fortuneteller/pro/views/PianoView;->drawBlacks()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getWidth()I",
        "Lcom/fortuneteller/pro/views/PianoView;->postInvalidateKey()V",
        "Lcom/fortuneteller/pro/views/PianoView;->post()Z",
        "Lcom/fortuneteller/pro/views/PianoView;->drawWhites()V",
        "Lcom/fortuneteller/pro/views/PianoView;->setLitKeys()V",
        "Lcom/fortuneteller/pro/views/PianoView;->setOnInvalidateListener()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/views/PianoView;->pressNote()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getScrollY()I",
        "Lcom/fortuneteller/pro/views/PianoView;->getNoteRect()Landroid/graphics/Rect;",
        "Lcom/fortuneteller/pro/views/PianoView;->getScrollX()I",
        "Lcom/fortuneteller/pro/views/PianoView;->showLabels()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getWhiteNoteAtPosition()I",
        "Lcom/fortuneteller/pro/views/PianoView;->generateKeyImages()V",
        "Lcom/fortuneteller/pro/views/PianoView;->invalidate()V",
        "Lcom/fortuneteller/pro/views/PianoView;->getHeight()I",
        "Lcom/fortuneteller/pro/views/PianoView;->scrollTo()V",
        "Lcom/fortuneteller/pro/views/PianoView;->setWhiteKeysPerScreen()V"
    ],
    "Lcom/fortuneteller/pro/audio/soundmanagers/PianoSoundManager;": [
        "Lcom/fortuneteller/pro/audio/soundmanagers/PianoSoundManager;->isInstrumentPreloaded()Z",
        "Lcom/fortuneteller/pro/audio/soundmanagers/PianoSoundManager;->release()V"
    ],
    "Ljava/util/concurrent/ConcurrentLinkedQueue;": [
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->add()Z"
    ],
    "Lcom/fortuneteller/pro/views/VerticalPianoRollView;": [
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->measureHeight()I",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->measureWidth()I",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->setMeasuredDimension()V",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->scrollTo()V",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->tickToPixel()F",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->getPaddingTop()I",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->getScrollX()I",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->setPianoView()V",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->getPaddingBottom()I",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->getWidth()I",
        "Lcom/fortuneteller/pro/views/VerticalPianoRollView;->getHeight()I"
    ],
    "Lcom/fortuneteller/pro/views/PianoScrollView;": [
        "Lcom/fortuneteller/pro/views/PianoScrollView;->getHeight()I",
        "Lcom/fortuneteller/pro/views/PianoScrollView;->isEnabled()Z",
        "Lcom/fortuneteller/pro/views/PianoScrollView;->invalidate()V",
        "Lcom/fortuneteller/pro/views/PianoScrollView;->setEnabled()V",
        "Lcom/fortuneteller/pro/views/PianoScrollView;->setOnScrollListener()V",
        "Lcom/fortuneteller/pro/views/PianoScrollView;->getWidth()I",
        "Lcom/fortuneteller/pro/views/PianoScrollView;->setScrollableView()V"
    ],
    "Landroid/preference/PreferenceManager;": [
        "Landroid/preference/PreferenceManager;->getDefaultSharedPreferences()Landroid/content/SharedPreferences;"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getKeyCode()I",
        "Landroid/view/KeyEvent;->getAction()I",
        "Landroid/view/KeyEvent;->getRepeatCount()I"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->quit()V",
        "Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->getDuration()I",
        "Landroid/media/MediaPlayer;->reset()V",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->create()Landroid/media/MediaPlayer;",
        "Landroid/media/MediaPlayer;->setOnCompletionListener()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->setVolume()V",
        "Landroid/media/MediaPlayer;->isPlaying()Z",
        "Landroid/media/MediaPlayer;->stop()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->getCurrentPosition()I",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->setLooping()V"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->exactCenterX()F",
        "Landroid/graphics/Rect;->centerX()I"
    ],
    "Lcom/fortuneteller/pro/activities/Keyboard;": [
        "Lcom/fortuneteller/pro/activities/Keyboard;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->getWindow()Landroid/view/Window;",
        "Lcom/fortuneteller/pro/activities/Keyboard;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/pro/activities/Keyboard;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/activities/Keyboard;->hideProgress()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->setNoteLabels()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->onScroll()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->linkPianoViews()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->startActivity()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->setVolumeControlStream()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->loadInstrument()V",
        "Lcom/fortuneteller/pro/activities/Keyboard;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/Keyboard;->showProgress()V"
    ],
    "Lcom/fortuneteller/pro/header/HeaderInstrument;": [
        "Lcom/fortuneteller/pro/header/HeaderInstrument;->getCurrentInstrument()I",
        "Lcom/fortuneteller/pro/header/HeaderInstrument;->getInstrumentName()Ljava/lang/String;"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->onCreateDrawableState()[I",
        "Landroid/widget/ImageButton;->onDraw()V",
        "Landroid/widget/ImageButton;->setEnabled()V",
        "Landroid/widget/ImageButton;->performClick()Z",
        "Landroid/widget/ImageButton;->setImageResource()V",
        "Landroid/widget/ImageButton;->onRestoreInstanceState()V",
        "Landroid/widget/ImageButton;->setVisibility()V",
        "Landroid/widget/ImageButton;->drawableStateChanged()V",
        "Landroid/widget/ImageButton;->onSaveInstanceState()Landroid/os/Parcelable;",
        "Landroid/widget/ImageButton;->requestFocus()Z",
        "Landroid/widget/ImageButton;->verifyDrawable()Z",
        "Landroid/widget/ImageButton;->setOnClickListener()V"
    ],
    "Landroid/app/ProgressDialog;": [
        "Landroid/app/ProgressDialog;->show()Landroid/app/ProgressDialog;",
        "Landroid/app/ProgressDialog;->show()V"
    ],
    "Landroid/view/ViewGroup;": [
        "Landroid/view/ViewGroup;->removeView()V"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->setOnHierarchyChangeListener()V",
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->onFinishInflate()V",
        "Landroid/widget/LinearLayout;->setOrientation()V"
    ],
    "Lcom/fortuneteller/pro/header/HeaderRecord;": [
        "Lcom/fortuneteller/pro/header/HeaderRecord;->nameAndSave()V",
        "Lcom/fortuneteller/pro/header/HeaderRecord;->trySaveThenRun()V"
    ],
    "Lcom/fortuneteller/pro/audio/MidiRecorder;": [
        "Lcom/fortuneteller/pro/audio/MidiRecorder;->noteStatus()V",
        "Lcom/fortuneteller/pro/audio/MidiRecorder;->stop()V",
        "Lcom/fortuneteller/pro/audio/MidiRecorder;->noteOff()V",
        "Lcom/fortuneteller/pro/audio/MidiRecorder;->noteOn()V",
        "Lcom/fortuneteller/pro/audio/MidiRecorder;->isRecording()Z",
        "Lcom/fortuneteller/pro/audio/MidiRecorder;->getLength()J"
    ],
    "Lcom/fortuneteller/pro/activities/BeatFinder;": [
        "Lcom/fortuneteller/pro/activities/BeatFinder;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/BeatFinder;->finish()V",
        "Lcom/fortuneteller/pro/activities/BeatFinder;->setResult()V",
        "Lcom/fortuneteller/pro/activities/BeatFinder;->requestWindowFeature()Z",
        "Lcom/fortuneteller/pro/activities/BeatFinder;->findViewById()Landroid/view/View;"
    ],
    "Lcom/fortuneteller/pro/activities/Piano;": [
        "Lcom/fortuneteller/pro/activities/Piano;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/Piano;->getWindow()Landroid/view/Window;",
        "Lcom/fortuneteller/pro/activities/Piano;->onScroll()V",
        "Lcom/fortuneteller/pro/activities/Piano;->setVolumeControlStream()V",
        "Lcom/fortuneteller/pro/activities/Piano;->startActivity()V",
        "Lcom/fortuneteller/pro/activities/Piano;->showProgress()V",
        "Lcom/fortuneteller/pro/activities/Piano;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/Piano;->setNoteLabels()V",
        "Lcom/fortuneteller/pro/activities/Piano;->loadInstrument()V",
        "Lcom/fortuneteller/pro/activities/Piano;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/pro/activities/Piano;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/activities/Piano;->hideProgress()V"
    ],
    "Lcom/fortuneteller/pro/activities/Recordings;": [
        "Lcom/fortuneteller/pro/activities/Recordings;->setVolumeControlStream()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->registerForContextMenu()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->playRecording()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->getListAdapter()Landroid/widget/ListAdapter;",
        "Lcom/fortuneteller/pro/activities/Recordings;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/fortuneteller/pro/activities/Recordings;->getFilenameWithoutExtension()Ljava/lang/String;",
        "Lcom/fortuneteller/pro/activities/Recordings;->setTitle()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->updateList()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/Recordings;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/fortuneteller/pro/activities/Recordings;->getListView()Landroid/widget/ListView;",
        "Lcom/fortuneteller/pro/activities/Recordings;->setListAdapter()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->startActivity()V",
        "Lcom/fortuneteller/pro/activities/Recordings;->setContentView()V"
    ],
    "Landroid/widget/SimpleAdapter;": [
        "Landroid/widget/SimpleAdapter;->notifyDataSetChanged()V",
        "Landroid/widget/SimpleAdapter;->getItem()Ljava/lang/Object;"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setAdapter()V",
        "Landroid/widget/ListView;->setOnItemClickListener()V",
        "Landroid/widget/ListView;->getItemAtPosition()Ljava/lang/Object;"
    ],
    "Lcom/fortuneteller/pro/views/MediaControllerView;": [
        "Lcom/fortuneteller/pro/views/MediaControllerView;->disableUnsupportedButtons()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->addView()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->setPrevNextListeners()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->doPauseResume()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->setVisibility()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->setProgress()I",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->updatePausePlay()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->setMediaPlayer()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->installPrevNextListeners()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->hide()V",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->stringForTime()Ljava/lang/String;",
        "Lcom/fortuneteller/pro/views/MediaControllerView;->show()V"
    ],
    "Ljava/lang/IllegalArgumentException;": [
        "Ljava/lang/IllegalArgumentException;->printStackTrace()V"
    ],
    "Ljava/lang/IllegalStateException;": [
        "Ljava/lang/IllegalStateException;->printStackTrace()V"
    ],
    "Landroid/widget/ListAdapter;": [
        "Landroid/widget/ListAdapter;->getItem()Ljava/lang/Object;"
    ],
    "Landroid/provider/MediaStore$Audio$Media;": [
        "Landroid/provider/MediaStore$Audio$Media;->getContentUriForPath()Landroid/net/Uri;"
    ],
    "Landroid/app/ListActivity;": [
        "Landroid/app/ListActivity;->onCreate()V",
        "Landroid/app/ListActivity;->onContextItemSelected()Z",
        "Landroid/app/ListActivity;->onPause()V",
        "Landroid/app/ListActivity;->onStart()V",
        "Landroid/app/ListActivity;->onCreateContextMenu()V",
        "Landroid/app/ListActivity;->onStop()V"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->show()V"
    ],
    "Landroid/widget/FrameLayout;": [
        "Landroid/widget/FrameLayout;->addView()V",
        "Landroid/widget/FrameLayout;->setPadding()V",
        "Landroid/widget/FrameLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/FrameLayout;->setEnabled()V",
        "Landroid/widget/FrameLayout;->dispatchKeyEvent()Z"
    ],
    "Landroid/media/RingtoneManager;": [
        "Landroid/media/RingtoneManager;->setActualDefaultRingtoneUri()V"
    ],
    "Landroid/view/ContextMenu;": [
        "Landroid/view/ContextMenu;->add()Landroid/view/MenuItem;"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->emptyMap()Ljava/util/Map;",
        "Ljava/util/Collections;->sort()V"
    ],
    "Ljava/text/DateFormat;": [
        "Ljava/text/DateFormat;->format()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/pro/activities/SongSelect;": [
        "Lcom/fortuneteller/pro/activities/SongSelect;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/SongSelect;->getFilenameWithoutExtension()Ljava/lang/String;",
        "Lcom/fortuneteller/pro/activities/SongSelect;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/SongSelect;->setupRecordedList()V",
        "Lcom/fortuneteller/pro/activities/SongSelect;->setupBuiltInList()V",
        "Lcom/fortuneteller/pro/activities/SongSelect;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/activities/SongSelect;->setTitle()V"
    ],
    "Landroid/widget/TabHost;": [
        "Landroid/widget/TabHost;->setup()V",
        "Landroid/widget/TabHost;->addTab()V",
        "Landroid/widget/TabHost;->newTabSpec()Landroid/widget/TabHost$TabSpec;"
    ],
    "Landroid/widget/TabHost$TabSpec;": [
        "Landroid/widget/TabHost$TabSpec;->setContent()Landroid/widget/TabHost$TabSpec;",
        "Landroid/widget/TabHost$TabSpec;->setIndicator()Landroid/widget/TabHost$TabSpec;"
    ],
    "Landroid/preference/PreferenceActivity;": [
        "Landroid/preference/PreferenceActivity;->onCreate()V"
    ],
    "Lcom/fortuneteller/pro/activities/Preferences;": [
        "Lcom/fortuneteller/pro/activities/Preferences;->setTitle()V",
        "Lcom/fortuneteller/pro/activities/Preferences;->addPreferencesFromResource()V"
    ],
    "Lcom/fortuneteller/pro/activities/NumberInputDialog;": [
        "Lcom/fortuneteller/pro/activities/NumberInputDialog;->requestWindowFeature()Z",
        "Lcom/fortuneteller/pro/activities/NumberInputDialog;->finish()V",
        "Lcom/fortuneteller/pro/activities/NumberInputDialog;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/NumberInputDialog;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/NumberInputDialog;->setResult()V"
    ],
    "Lcom/fortuneteller/pro/activities/Metronome;": [
        "Lcom/fortuneteller/pro/activities/Metronome;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/Metronome;->setVolumeControlStream()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->startActivityForResult()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->unbindService()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->startMetronome()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->restartMetronome()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/pro/activities/Metronome;->syncViews()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->startService()Landroid/content/ComponentName;",
        "Lcom/fortuneteller/pro/activities/Metronome;->setTitle()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->stopMetronome()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->stopService()Z",
        "Lcom/fortuneteller/pro/activities/Metronome;->onProgressChanged()V",
        "Lcom/fortuneteller/pro/activities/Metronome;->bindService()Z"
    ],
    "Lcom/fortuneteller/pro/services/MetronomeService;": [
        "Lcom/fortuneteller/pro/services/MetronomeService;->showNotification()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->setNotes()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->isEnabled()Z",
        "Lcom/fortuneteller/pro/services/MetronomeService;->startTicking()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->setBeats()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->stopTicking()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->startNotifierThread()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->setBPM()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->setupAudio()V",
        "Lcom/fortuneteller/pro/services/MetronomeService;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/pro/services/MetronomeService;->getApplicationContext()Landroid/content/Context;",
        "Lcom/fortuneteller/pro/services/MetronomeService;->restart()V"
    ],
    "Landroid/widget/SeekBar;": [
        "Landroid/widget/SeekBar;->setOnSeekBarChangeListener()V",
        "Landroid/widget/SeekBar;->getProgress()I",
        "Landroid/widget/SeekBar;->setMax()V",
        "Landroid/widget/SeekBar;->setProgress()V"
    ],
    "Lcom/fortuneteller/pro/views/ImageRadioGroup;": [
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->getContext()Landroid/content/Context;",
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->check()V",
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->setOrientation()V",
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->generateLayoutParams()Lcom/fortuneteller/pro/views/ImageRadioGroup$LayoutParams;",
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->setCheckedStateForView()V",
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/views/ImageRadioGroup;->setCheckedId()V"
    ],
    "Lcom/fortuneteller/pro/popups/GalleryStylePopup;": [
        "Lcom/fortuneteller/pro/popups/GalleryStylePopup;->showArrow()V",
        "Lcom/fortuneteller/pro/popups/GalleryStylePopup;->preShow()V",
        "Lcom/fortuneteller/pro/popups/GalleryStylePopup;->setContentView()V",
        "Lcom/fortuneteller/pro/popups/GalleryStylePopup;->show()V",
        "Lcom/fortuneteller/pro/popups/GalleryStylePopup;->setAnimationStyle()V"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;"
    ],
    "Landroid/widget/FrameLayout$LayoutParams;": [
        "Landroid/widget/FrameLayout$LayoutParams;->setMargins()V"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/ImageView;->setImageResource()V",
        "Landroid/widget/ImageView;->getMeasuredWidth()I"
    ],
    "Landroid/media/AudioTrack;": [
        "Landroid/media/AudioTrack;->setLoopPoints()I",
        "Landroid/media/AudioTrack;->write()I",
        "Landroid/media/AudioTrack;->release()V",
        "Landroid/media/AudioTrack;->play()V",
        "Landroid/media/AudioTrack;->stop()V",
        "Landroid/media/AudioTrack;->getMinBufferSize()I"
    ],
    "Lcom/fortuneteller/pro/activities/AutoHarp;": [
        "Lcom/fortuneteller/pro/activities/AutoHarp;->pluck()V",
        "Lcom/fortuneteller/pro/activities/AutoHarp;->destroyStrings()V",
        "Lcom/fortuneteller/pro/activities/AutoHarp;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/AutoHarp;->fillZitherBuffer()V",
        "Lcom/fortuneteller/pro/activities/AutoHarp;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/AutoHarp;->getSystemService()Ljava/lang/Object;",
        "Lcom/fortuneteller/pro/activities/AutoHarp;->startActivity()V"
    ],
    "Lcom/fortuneteller/pro/views/ZitherView;": [
        "Lcom/fortuneteller/pro/views/ZitherView;->measureWidth()I",
        "Lcom/fortuneteller/pro/views/ZitherView;->getWidth()I",
        "Lcom/fortuneteller/pro/views/ZitherView;->postInvalidate()V",
        "Lcom/fortuneteller/pro/views/ZitherView;->setPluckListener()V",
        "Lcom/fortuneteller/pro/views/ZitherView;->setStrings()V",
        "Lcom/fortuneteller/pro/views/ZitherView;->setVisibleStrings()V",
        "Lcom/fortuneteller/pro/views/ZitherView;->measureHeight()I",
        "Lcom/fortuneteller/pro/views/ZitherView;->setMeasuredDimension()V",
        "Lcom/fortuneteller/pro/views/ZitherView;->getHeight()I"
    ],
    "Lcom/fortuneteller/pro/views/RadioGroupTable;": [
        "Lcom/fortuneteller/pro/views/RadioGroupTable;->findViewWithTag()Landroid/view/View;",
        "Lcom/fortuneteller/pro/views/RadioGroupTable;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/views/RadioGroupTable;->setChildrenOnClickListener()V",
        "Lcom/fortuneteller/pro/views/RadioGroupTable;->onClick()V",
        "Lcom/fortuneteller/pro/views/RadioGroupTable;->check()V",
        "Lcom/fortuneteller/pro/views/RadioGroupTable;->setOnCheckedChangeListener()V"
    ],
    "Lcom/fortuneteller/pro/activities/AutoHarp$ZitherThread;": [
        "Lcom/fortuneteller/pro/activities/AutoHarp$ZitherThread;->stopRunning()V",
        "Lcom/fortuneteller/pro/activities/AutoHarp$ZitherThread;->start()V"
    ],
    "Ljava/util/Queue;": [
        "Ljava/util/Queue;->add()Z"
    ],
    "Ljava/util/Timer;": [
        "Ljava/util/Timer;->cancel()V",
        "Ljava/util/Timer;->scheduleAtFixedRate()V",
        "Ljava/util/Timer;->schedule()V"
    ],
    "Lcom/fortuneteller/pro/audio/SoundMeter;": [
        "Lcom/fortuneteller/pro/audio/SoundMeter;->getAmplitude()D",
        "Lcom/fortuneteller/pro/audio/SoundMeter;->stop()V",
        "Lcom/fortuneteller/pro/audio/SoundMeter;->start()V"
    ],
    "Lcom/fortuneteller/pro/activities/PitchPipe;": [
        "Lcom/fortuneteller/pro/activities/PitchPipe;->finish()V",
        "Lcom/fortuneteller/pro/activities/PitchPipe;->setTitle()V",
        "Lcom/fortuneteller/pro/activities/PitchPipe;->startTimer()V",
        "Lcom/fortuneteller/pro/activities/PitchPipe;->setContentView()V",
        "Lcom/fortuneteller/pro/activities/PitchPipe;->findViewById()Landroid/view/View;",
        "Lcom/fortuneteller/pro/activities/PitchPipe;->onCheckedChanged()V"
    ],
    "Landroid/widget/RadioButton;": [
        "Landroid/widget/RadioButton;->setChecked()V",
        "Landroid/widget/RadioButton;->getId()I",
        "Landroid/widget/RadioButton;->setButtonDrawable()V"
    ],
    "Landroid/widget/RadioGroup;": [
        "Landroid/widget/RadioGroup;->setOnTouchListener()V",
        "Landroid/widget/RadioGroup;->setOnCheckedChangeListener()V",
        "Landroid/widget/RadioGroup;->getCheckedRadioButtonId()I",
        "Landroid/widget/RadioGroup;->setClickable()V"
    ],
    "Landroid/widget/CheckBox;": [
        "Landroid/widget/CheckBox;->isChecked()Z",
        "Landroid/widget/CheckBox;->setOnCheckedChangeListener()V"
    ],
    "Landroid/media/MediaRecorder;": [
        "Landroid/media/MediaRecorder;->stop()V",
        "Landroid/media/MediaRecorder;->setOutputFormat()V",
        "Landroid/media/MediaRecorder;->release()V",
        "Landroid/media/MediaRecorder;->setOutputFile()V",
        "Landroid/media/MediaRecorder;->setAudioSource()V",
        "Landroid/media/MediaRecorder;->prepare()V",
        "Landroid/media/MediaRecorder;->setAudioEncoder()V",
        "Landroid/media/MediaRecorder;->start()V",
        "Landroid/media/MediaRecorder;->getMaxAmplitude()I"
    ],
    "Lcom/fortuneteller/pro/audio/AudioPatternGenerator;": [
        "Lcom/fortuneteller/pro/audio/AudioPatternGenerator;->generatePattern()[S",
        "Lcom/fortuneteller/pro/audio/AudioPatternGenerator;->mixInAt()V",
        "Lcom/fortuneteller/pro/audio/AudioPatternGenerator;->addWithClipping()S",
        "Lcom/fortuneteller/pro/audio/AudioPatternGenerator;->loadPCMFromAsset()[S"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->openFd()Landroid/content/res/AssetFileDescriptor;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Landroid/content/res/AssetFileDescriptor;": [
        "Landroid/content/res/AssetFileDescriptor;->getLength()J"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->getShort()S",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->wrap()Ljava/nio/ByteBuffer;"
    ],
    "Lcom/fortuneteller/pro/audio/MidiMessageHelper;": [
        "Lcom/fortuneteller/pro/audio/MidiMessageHelper;->instrumentChange()Lorg/tritonus/javax/sound/midi/MidiMessage;",
        "Lcom/fortuneteller/pro/audio/MidiMessageHelper;->noteStatus()Lorg/tritonus/javax/sound/midi/MidiMessage;",
        "Lcom/fortuneteller/pro/audio/MidiMessageHelper;->tempoChange()Lorg/tritonus/javax/sound/midi/MidiMessage;",
        "Lcom/fortuneteller/pro/audio/MidiMessageHelper;->endOfTrack()Lorg/tritonus/javax/sound/midi/MidiMessage;"
    ],
    "Lorg/tritonus/javax/sound/midi/Track;": [
        "Lorg/tritonus/javax/sound/midi/Track;->get()Lorg/tritonus/javax/sound/midi/MidiEvent;",
        "Lorg/tritonus/javax/sound/midi/Track;->size()I",
        "Lorg/tritonus/javax/sound/midi/Track;->ticks()J",
        "Lorg/tritonus/javax/sound/midi/Track;->add()Z"
    ],
    "Lorg/tritonus/javax/sound/midi/InvalidMidiDataException;": [
        "Lorg/tritonus/javax/sound/midi/InvalidMidiDataException;->printStackTrace()V"
    ],
    "Lorg/tritonus/javax/sound/midi/MidiSystem;": [
        "Lorg/tritonus/javax/sound/midi/MidiSystem;->writeImpl()I",
        "Lorg/tritonus/javax/sound/midi/MidiSystem;->doMidiFileWriterIteration()V",
        "Lorg/tritonus/javax/sound/midi/MidiSystem;->write()I"
    ],
    "Lorg/tritonus/javax/sound/midi/Sequence;": [
        "Lorg/tritonus/javax/sound/midi/Sequence;->getTracks()[Lorg/tritonus/javax/sound/midi/Track;",
        "Lorg/tritonus/javax/sound/midi/Sequence;->getResolution()I",
        "Lorg/tritonus/javax/sound/midi/Sequence;->getTickLength()J",
        "Lorg/tritonus/javax/sound/midi/Sequence;->getDivisionType()F",
        "Lorg/tritonus/javax/sound/midi/Sequence;->createTrack()Lorg/tritonus/javax/sound/midi/Track;"
    ],
    "Lorg/tritonus/javax/sound/midi/MetaMessage;": [
        "Lorg/tritonus/javax/sound/midi/MetaMessage;->setMessage()V",
        "Lorg/tritonus/javax/sound/midi/MetaMessage;->getType()I",
        "Lorg/tritonus/javax/sound/midi/MetaMessage;->getStatus()I",
        "Lorg/tritonus/javax/sound/midi/MetaMessage;->getLength()I",
        "Lorg/tritonus/javax/sound/midi/MetaMessage;->getData()[B",
        "Lorg/tritonus/javax/sound/midi/MetaMessage;->getMessage()[B"
    ],
    "Lorg/tritonus/javax/sound/midi/ShortMessage;": [
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getDataByte()I",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getMessage()[B",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getStatus()I",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getCommand()I",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->setMessage()V",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getChannel()I",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getData1()I",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getDataLength()I",
        "Lorg/tritonus/javax/sound/midi/ShortMessage;->getLength()I"
    ],
    "Landroid/media/SoundPool;": [
        "Landroid/media/SoundPool;->play()I",
        "Landroid/media/SoundPool;->setVolume()V",
        "Landroid/media/SoundPool;->load()I",
        "Landroid/media/SoundPool;->release()V",
        "Landroid/media/SoundPool;->stop()V"
    ],
    "Lcom/fortuneteller/pro/audio/soundmanagers/SampledSoundManager;": [
        "Lcom/fortuneteller/pro/audio/soundmanagers/SampledSoundManager;->fadeStream()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/SampledSoundManager;->loadFrom()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/SampledSoundManager;->playSound()I",
        "Lcom/fortuneteller/pro/audio/soundmanagers/SampledSoundManager;->release()V"
    ],
    "Ljava/util/concurrent/ScheduledThreadPoolExecutor;": [
        "Ljava/util/concurrent/ScheduledThreadPoolExecutor;->schedule()Ljava/util/concurrent/ScheduledFuture;"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->getStreamVolume()I"
    ],
    "Lcom/fortuneteller/pro/audio/soundmanagers/LowMemoryMidiSoundManager;": [
        "Lcom/fortuneteller/pro/audio/soundmanagers/LowMemoryMidiSoundManager;->release()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/LowMemoryMidiSoundManager;->fadeStream()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/LowMemoryMidiSoundManager;->loadFrom()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/LowMemoryMidiSoundManager;->playSound()I",
        "Lcom/fortuneteller/pro/audio/soundmanagers/LowMemoryMidiSoundManager;->generateInstrument()V"
    ],
    "Lcom/fortuneteller/pro/audio/soundmanagers/MidiSoundManager;": [
        "Lcom/fortuneteller/pro/audio/soundmanagers/MidiSoundManager;->playSound()I",
        "Lcom/fortuneteller/pro/audio/soundmanagers/MidiSoundManager;->release()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/MidiSoundManager;->generateInstrument()V",
        "Lcom/fortuneteller/pro/audio/soundmanagers/MidiSoundManager;->fadeStream()V"
    ],
    "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;": [
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->getCategory()Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter$Category;",
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->getItem()Ljava/util/Map;",
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->getMenu()Ljava/util/ArrayList;",
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->bindView()V",
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->parseXML()Ljava/util/ArrayList;",
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->newGroupView()Landroid/view/View;",
        "Lcom/fortuneteller/pro/adapters/XMLMenuExpandableListAdapter;->newChildView()Landroid/view/View;"
    ],
    "Landroid/content/res/XmlResourceParser;": [
        "Landroid/content/res/XmlResourceParser;->next()I",
        "Landroid/content/res/XmlResourceParser;->getAttributeCount()I",
        "Landroid/content/res/XmlResourceParser;->getEventType()I",
        "Landroid/content/res/XmlResourceParser;->getAttributeResourceValue()I",
        "Landroid/content/res/XmlResourceParser;->getName()Ljava/lang/String;",
        "Landroid/content/res/XmlResourceParser;->getAttributeValue()Ljava/lang/String;",
        "Landroid/content/res/XmlResourceParser;->getIdAttributeResourceValue()I",
        "Landroid/content/res/XmlResourceParser;->close()V",
        "Landroid/content/res/XmlResourceParser;->getAttributeName()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;": [
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->getDialog()Landroid/app/Dialog;",
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->getPersistedInt()I",
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->persistInt()Z",
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->getInt()Ljava/lang/Integer;",
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->setInt()V",
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->callChangeListener()Z",
        "Lcom/fortuneteller/pro/preferences/PianoKeyWidthDialogPreference;->setDialogLayoutResource()V"
    ],
    "Landroid/preference/DialogPreference;": [
        "Landroid/preference/DialogPreference;->onBindDialogView()V",
        "Landroid/preference/DialogPreference;->showDialog()V",
        "Landroid/preference/DialogPreference;->onDialogClosed()V"
    ],
    "Landroid/content/res/TypedArray;": [
        "Landroid/content/res/TypedArray;->recycle()V",
        "Landroid/content/res/TypedArray;->getInteger()I",
        "Landroid/content/res/TypedArray;->getBoolean()Z",
        "Landroid/content/res/TypedArray;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Landroid/app/Dialog;": [
        "Landroid/app/Dialog;->dismiss()V",
        "Landroid/app/Dialog;->getWindow()Landroid/view/Window;"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->byteValue()B",
        "Ljava/lang/Byte;->valueOf()Ljava/lang/Byte;"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onCreate()V"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->acquire()V",
        "Landroid/os/PowerManager$WakeLock;->release()V"
    ],
    "Lcom/fortuneteller/pro/views/PianoRollView;": [
        "Lcom/fortuneteller/pro/views/PianoRollView;->getPaddingLeft()I",
        "Lcom/fortuneteller/pro/views/PianoRollView;->getPaddingRight()I",
        "Lcom/fortuneteller/pro/views/PianoRollView;->measureWidth()I",
        "Lcom/fortuneteller/pro/views/PianoRollView;->measureHeight()I",
        "Lcom/fortuneteller/pro/views/PianoRollView;->setRange()V",
        "Lcom/fortuneteller/pro/views/PianoRollView;->noteToPixel()F",
        "Lcom/fortuneteller/pro/views/PianoRollView;->getWidth()I",
        "Lcom/fortuneteller/pro/views/PianoRollView;->setChannels()V",
        "Lcom/fortuneteller/pro/views/PianoRollView;->setMeasuredDimension()V",
        "Lcom/fortuneteller/pro/views/PianoRollView;->getHeight()I",
        "Lcom/fortuneteller/pro/views/PianoRollView;->tickToPixel()F"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->getMode()I"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->setAlpha()V",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->setStrokeWidth()V",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->setTextAlign()V",
        "Landroid/graphics/Paint;->setShader()Landroid/graphics/Shader;",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->setColorFilter()Landroid/graphics/ColorFilter;"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->rgb()I"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->restore()V",
        "Landroid/graphics/Canvas;->drawRect()V",
        "Landroid/graphics/Canvas;->save()I",
        "Landroid/graphics/Canvas;->clipRect()Z",
        "Landroid/graphics/Canvas;->scale()V",
        "Landroid/graphics/Canvas;->drawColor()V",
        "Landroid/graphics/Canvas;->drawPaint()V",
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->drawLine()V",
        "Landroid/graphics/Canvas;->drawText()V",
        "Landroid/graphics/Canvas;->drawCircle()V",
        "Landroid/graphics/Canvas;->translate()V"
    ],
    "Lcom/fortuneteller/pro/views/ZitherView$ZitherPluckListener;": [
        "Lcom/fortuneteller/pro/views/ZitherView$ZitherPluckListener;->onPluck()V"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;"
    ],
    "Lorg/tritonus/javax/sound/midi/MidiEvent;": [
        "Lorg/tritonus/javax/sound/midi/MidiEvent;->getMessage()Lorg/tritonus/javax/sound/midi/MidiMessage;",
        "Lorg/tritonus/javax/sound/midi/MidiEvent;->getTick()J"
    ],
    "Lcom/fortuneteller/pro/views/PianoScrollView$OnScrollListener;": [
        "Lcom/fortuneteller/pro/views/PianoScrollView$OnScrollListener;->onScroll()V"
    ],
    "Lcom/fortuneteller/pro/views/PianoView$OnPianoPressListener;": [
        "Lcom/fortuneteller/pro/views/PianoView$OnPianoPressListener;->onPianoResize()V",
        "Lcom/fortuneteller/pro/views/PianoView$OnPianoPressListener;->onAllPianoKeysUp()V",
        "Lcom/fortuneteller/pro/views/PianoView$OnPianoPressListener;->onPianoKeyDown()V",
        "Lcom/fortuneteller/pro/views/PianoView$OnPianoPressListener;->onPianoKeyUp()V"
    ],
    "Lcom/fortuneteller/pro/views/PianoView$OnInvalidateListener;": [
        "Lcom/fortuneteller/pro/views/PianoView$OnInvalidateListener;->invalidate()V"
    ],
    "Lcom/fortuneteller/pro/views/ExpandableSpinner;": [
        "Lcom/fortuneteller/pro/views/ExpandableSpinner;->getPrompt()Ljava/lang/CharSequence;",
        "Lcom/fortuneteller/pro/views/ExpandableSpinner;->setSelection()V",
        "Lcom/fortuneteller/pro/views/ExpandableSpinner;->setAdapter()V",
        "Lcom/fortuneteller/pro/views/ExpandableSpinner;->getContext()Landroid/content/Context;"
    ],
    "Landroid/graphics/RectF;": [
        "Landroid/graphics/RectF;->round()V",
        "Landroid/graphics/RectF;->set()V",
        "Landroid/graphics/RectF;->width()F"
    ],
    "Lcom/fortuneteller/pro/views/ImageRadioButton;": [
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->invalidate()V",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->unscheduleDrawable()V",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->getId()I",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->getResources()Landroid/content/res/Resources;",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->getVisibility()I",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->mergeDrawableStates()[I",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->getHeight()I",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->requestLayout()V",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->toggle()V",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->refreshDrawableState()V",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->getDrawableState()[I",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->setChecked()V",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->isChecked()Z",
        "Lcom/fortuneteller/pro/views/ImageRadioButton;->setButtonDrawable()V"
    ],
    "Lcom/fortuneteller/pro/views/ImageRadioButton$SavedState;": [
        "Lcom/fortuneteller/pro/views/ImageRadioButton$SavedState;->getSuperState()Landroid/os/Parcelable;"
    ],
    "Lcom/fortuneteller/pro/views/ImageRadioButton$OnCheckedChangeListener;": [
        "Lcom/fortuneteller/pro/views/ImageRadioButton$OnCheckedChangeListener;->onCheckedChanged()V"
    ],
    "Lcom/fortuneteller/pro/views/ImageRadioGroup$OnCheckedChangeListener;": [
        "Lcom/fortuneteller/pro/views/ImageRadioGroup$OnCheckedChangeListener;->onCheckedChanged()V"
    ],
    "Lcom/fortuneteller/pro/views/ImageRadioGroup$PassThroughHierarchyChangeListener;": [
        "Lcom/fortuneteller/pro/views/ImageRadioGroup$PassThroughHierarchyChangeListener;->access$1()V"
    ],
    "Landroid/widget/MediaController$MediaPlayerControl;": [
        "Landroid/widget/MediaController$MediaPlayerControl;->pause()V",
        "Landroid/widget/MediaController$MediaPlayerControl;->start()V",
        "Landroid/widget/MediaController$MediaPlayerControl;->getDuration()I",
        "Landroid/widget/MediaController$MediaPlayerControl;->isPlaying()Z",
        "Landroid/widget/MediaController$MediaPlayerControl;->getBufferPercentage()I",
        "Landroid/widget/MediaController$MediaPlayerControl;->getCurrentPosition()I"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->setMax()V",
        "Landroid/widget/ProgressBar;->setEnabled()V",
        "Landroid/widget/ProgressBar;->setProgress()V",
        "Landroid/widget/ProgressBar;->setSecondaryProgress()V"
    ],
    "Ljava/util/Formatter;": [
        "Ljava/util/Formatter;->toString()Ljava/lang/String;",
        "Ljava/util/Formatter;->format()Ljava/util/Formatter;"
    ],
    "Landroid/widget/TableRow;": [
        "Landroid/widget/TableRow;->getChildCount()I",
        "Landroid/widget/TableRow;->getChildAt()Landroid/view/View;"
    ],
    "Landroid/widget/TableLayout;": [
        "Landroid/widget/TableLayout;->addView()V"
    ],
    "Lcom/fortuneteller/pro/views/RadioGroupTable$OnCheckedChangeListener;": [
        "Lcom/fortuneteller/pro/views/RadioGroupTable$OnCheckedChangeListener;->onCheckedChanged()V"
    ],
    "Landroid/widget/PopupWindow;": [
        "Landroid/widget/PopupWindow;->dismiss()V",
        "Landroid/widget/PopupWindow;->showAsDropDown()V",
        "Landroid/widget/PopupWindow;->showAtLocation()V",
        "Landroid/widget/PopupWindow;->setFocusable()V",
        "Landroid/widget/PopupWindow;->setAnimationStyle()V",
        "Landroid/widget/PopupWindow;->setTouchable()V",
        "Landroid/widget/PopupWindow;->setWidth()V",
        "Landroid/widget/PopupWindow;->setOutsideTouchable()V",
        "Landroid/widget/PopupWindow;->setOnDismissListener()V",
        "Landroid/widget/PopupWindow;->setContentView()V",
        "Landroid/widget/PopupWindow;->setBackgroundDrawable()V",
        "Landroid/widget/PopupWindow;->setTouchInterceptor()V",
        "Landroid/widget/PopupWindow;->setHeight()V"
    ],
    "Lcom/fortuneteller/pro/popups/CustomPopupWindow;": [
        "Lcom/fortuneteller/pro/popups/CustomPopupWindow;->setContentView()V",
        "Lcom/fortuneteller/pro/popups/CustomPopupWindow;->onCreate()V",
        "Lcom/fortuneteller/pro/popups/CustomPopupWindow;->preShow()V",
        "Lcom/fortuneteller/pro/popups/CustomPopupWindow;->showDropDown()V",
        "Lcom/fortuneteller/pro/popups/CustomPopupWindow;->onShow()V",
        "Lcom/fortuneteller/pro/popups/CustomPopupWindow;->showLikeQuickAction()V"
    ],
    "Lcom/fortuneteller/cores/e;": [
        "Lcom/fortuneteller/cores/e;->a()V",
        "Lcom/fortuneteller/cores/e;->a()Lcom/fortuneteller/cores/g;",
        "Lcom/fortuneteller/cores/e;->a()Landroid/content/Context;"
    ],
    "Lcom/fortuneteller/cores/f;": [
        "Lcom/fortuneteller/cores/f;->a()Ljava/lang/String;",
        "Lcom/fortuneteller/cores/f;->a()Lcom/fortuneteller/cores/g;",
        "Lcom/fortuneteller/cores/f;->a()V"
    ],
    "Lcom/fortuneteller/cores/g;": [
        "Lcom/fortuneteller/cores/g;->a()V",
        "Lcom/fortuneteller/cores/g;->a()Lorg/json/JSONArray;",
        "Lcom/fortuneteller/cores/g;->a()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/cores/h;": [
        "Lcom/fortuneteller/cores/h;->a()Z",
        "Lcom/fortuneteller/cores/h;->a()V",
        "Lcom/fortuneteller/cores/h;->a()Ljava/lang/String;"
    ],
    "Lcom/fortuneteller/cores/b;": [
        "Lcom/fortuneteller/cores/b;->onCreate()V",
        "Lcom/fortuneteller/cores/b;->close()V",
        "Lcom/fortuneteller/cores/b;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->getString()Ljava/lang/String;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->isNull()Z"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;",
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->find()Z"
    ],
    "Lorg/json/JSONException;": [
        "Lorg/json/JSONException;->printStackTrace()V"
    ],
    "Lcom/fortuneteller/cores/d;": [
        "Lcom/fortuneteller/cores/d;->a()Ljava/lang/String;",
        "Lcom/fortuneteller/cores/d;->a()V"
    ],
    "Lcom/flurry/android/Flog;": [
        "Lcom/flurry/android/Flog;->a()Z",
        "Lcom/flurry/android/Flog;->enableLog()V",
        "Lcom/flurry/android/Flog;->disableLog()V",
        "Lcom/flurry/android/Flog;->a()I"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->elapsedRealtime()J"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readFully()V",
        "Ljava/io/DataInputStream;->readUnsignedByte()I",
        "Ljava/io/DataInputStream;->readLong()J",
        "Ljava/io/DataInputStream;->readUnsignedShort()I",
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readShort()S",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->readBoolean()Z",
        "Ljava/io/DataInputStream;->skip()J"
    ],
    "Landroid/provider/Settings$System;": [
        "Landroid/provider/Settings$System;->getString()Ljava/lang/String;"
    ],
    "Ljava/io/Closeable;": [
        "Ljava/io/Closeable;->close()V"
    ],
    "Lorg/apache/http/entity/ByteArrayEntity;": [
        "Lorg/apache/http/entity/ByteArrayEntity;->setContentType()V"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->writeFloat()V",
        "Ljava/io/DataOutputStream;->writeLong()V",
        "Ljava/io/DataOutputStream;->writeShort()V",
        "Ljava/io/DataOutputStream;->writeByte()V",
        "Ljava/io/DataOutputStream;->write()V",
        "Ljava/io/DataOutputStream;->writeBoolean()V",
        "Ljava/io/DataOutputStream;->writeUTF()V",
        "Ljava/io/DataOutputStream;->size()I",
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->writeDouble()V",
        "Ljava/io/DataOutputStream;->close()V"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;"
    ],
    "Ljava/lang/Thread$UncaughtExceptionHandler;": [
        "Ljava/lang/Thread$UncaughtExceptionHandler;->uncaughtException()V"
    ],
    "Lorg/tritonus/TDebug;": [
        "Lorg/tritonus/TDebug;->out()V",
        "Lorg/tritonus/TDebug;->getBooleanProperty()Z"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->println()V"
    ],
    "Lorg/tritonus/midi/TMidiConfig;": [
        "Lorg/tritonus/midi/TMidiConfig;->getMidiFileReaders()Ljava/util/Iterator;",
        "Lorg/tritonus/midi/TMidiConfig;->getMidiFileWriters()Ljava/util/Iterator;",
        "Lorg/tritonus/midi/TMidiConfig;->addMidiFileWriter()V",
        "Lorg/tritonus/midi/TMidiConfig;->addMidiFileReader()V"
    ],
    "Lorg/tritonus/midi/file/StandardMidiFileReader;": [
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->readVariableLengthQuantity()J",
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->getSequence()Lorg/tritonus/javax/sound/midi/Sequence;",
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->readUnsignedByte()I",
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->getMidiFileFormat()Lorg/tritonus/javax/sound/midi/MidiFileFormat;",
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->readEvent()Lorg/tritonus/javax/sound/midi/MidiEvent;",
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->getType()I",
        "Lorg/tritonus/midi/file/StandardMidiFileReader;->readTrack()V"
    ],
    "Lorg/tritonus/javax/sound/midi/SysexMessage;": [
        "Lorg/tritonus/javax/sound/midi/SysexMessage;->setMessage()V",
        "Lorg/tritonus/javax/sound/midi/SysexMessage;->getMessage()[B",
        "Lorg/tritonus/javax/sound/midi/SysexMessage;->getLength()I",
        "Lorg/tritonus/javax/sound/midi/SysexMessage;->getStatus()I",
        "Lorg/tritonus/javax/sound/midi/SysexMessage;->getData()[B"
    ],
    "Lorg/tritonus/javax/sound/midi/MidiFileFormat;": [
        "Lorg/tritonus/javax/sound/midi/MidiFileFormat;->getDivisionType()F",
        "Lorg/tritonus/javax/sound/midi/MidiFileFormat;->getResolution()I"
    ],
    "Lorg/tritonus/midi/file/TMidiFileFormat;": [
        "Lorg/tritonus/midi/file/TMidiFileFormat;->getTrackCount()I"
    ],
    "Lorg/tritonus/midi/file/StandardMidiFileWriter;": [
        "Lorg/tritonus/midi/file/StandardMidiFileWriter;->isFileTypeSupported()Z",
        "Lorg/tritonus/midi/file/StandardMidiFileWriter;->writeTrack()I",
        "Lorg/tritonus/midi/file/StandardMidiFileWriter;->writeEvent()I",
        "Lorg/tritonus/midi/file/StandardMidiFileWriter;->writeVariableLengthQuantity()I",
        "Lorg/tritonus/midi/file/StandardMidiFileWriter;->write()I"
    ],
    "Lorg/tritonus/javax/sound/midi/MidiMessage;": [
        "Lorg/tritonus/javax/sound/midi/MidiMessage;->getLength()I",
        "Lorg/tritonus/javax/sound/midi/MidiMessage;->getMessage()[B",
        "Lorg/tritonus/javax/sound/midi/MidiMessage;->setMessage()V",
        "Lorg/tritonus/javax/sound/midi/MidiMessage;->getStatus()I"
    ],
    "Lorg/tritonus/util/ArraySet;": [
        "Lorg/tritonus/util/ArraySet;->contains()Z",
        "Lorg/tritonus/util/ArraySet;->addAll()Z"
    ],
    "Lorg/tritonus/javax/sound/midi/MidiSystem$MidiFileWriterAction;": [
        "Lorg/tritonus/javax/sound/midi/MidiSystem$MidiFileWriterAction;->handleMidiFileWriter()Z"
    ],
    "Lorg/tritonus/javax/sound/midi/spi/MidiFileReader;": [
        "Lorg/tritonus/javax/sound/midi/spi/MidiFileReader;->getMidiFileFormat()Lorg/tritonus/javax/sound/midi/MidiFileFormat;",
        "Lorg/tritonus/javax/sound/midi/spi/MidiFileReader;->getSequence()Lorg/tritonus/javax/sound/midi/Sequence;"
    ],
    "Lorg/tritonus/javax/sound/midi/spi/MidiFileWriter;": [
        "Lorg/tritonus/javax/sound/midi/spi/MidiFileWriter;->isFileTypeSupported()Z",
        "Lorg/tritonus/javax/sound/midi/spi/MidiFileWriter;->getMidiFileTypes()[I"
    ],
    "Lorg/tritonus/javax/sound/midi/MidiSystem$WriteMidiFileWriterAction;": [
        "Lorg/tritonus/javax/sound/midi/MidiSystem$WriteMidiFileWriterAction;->getWritten()I"
    ]
}