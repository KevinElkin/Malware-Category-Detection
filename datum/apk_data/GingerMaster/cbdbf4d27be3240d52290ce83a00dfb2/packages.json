{
    "Lt;": [
        "Lt;->a()Z",
        "Lt;->a()V"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->isLoggable()Z",
        "Landroid/util/Log;->a()I"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Ld;": [
        "Ld;->a()Lcom/google/ads/Ad;",
        "Ld;->a()Lh;",
        "Ld;->a()I",
        "Ld;->a()Z",
        "Ld;->a()V",
        "Ld;->a()Ljava/lang/String;",
        "Ld;->a()Landroid/app/Activity;",
        "Ld;->a()Lf;",
        "Ld;->a()Lg;",
        "Ld;->a()Lcom/google/ads/AdSize;",
        "Ld;->a()Lc;"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->clear()V"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->appendCodePoint()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;"
    ],
    "Lc;": [
        "Lc;->cancel()Z",
        "Lc;->a()J",
        "Lc;->execute()Landroid/os/AsyncTask;",
        "Lc;->a()V",
        "Lc;->publishProgress()V",
        "Lc;->a()Lcom/google/ads/AdRequest$ErrorCode;"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->getApplicationContext()Landroid/content/Context;",
        "Landroid/app/Activity;->onWindowFocusChanged()V",
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->finish()V",
        "Landroid/app/Activity;->onBackPressed()V",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/app/Activity;->hasWindowFocus()Z",
        "Landroid/app/Activity;->onRestart()V",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->getSystemService()Ljava/lang/Object;",
        "Landroid/app/Activity;->startActivityForResult()V",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->runOnUiThread()V",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->isFinishing()Z",
        "Landroid/app/Activity;->onCreate()V"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getOrientation()I",
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getHeight()I"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->sendBroadcast()V",
        "Landroid/content/Context;->getFileStreamPath()Ljava/io/File;",
        "Landroid/content/Context;->unregisterReceiver()V",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/content/Context;->getText()Ljava/lang/CharSequence;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->getFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->registerReceiver()Landroid/content/Intent;",
        "Landroid/content/Context;->createPackageContext()Landroid/content/Context;"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Lu;": [
        "Lu;->a()Lu$a;",
        "Lu;->a()Landroid/util/DisplayMetrics;",
        "Lu;->a()Ljava/util/HashMap;",
        "Lu;->a()Z",
        "Lu;->a()V",
        "Lu;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->replaceFirst()Ljava/lang/String;",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->compareTo()I",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->toString()Ljava/lang/String;",
        "Ljava/lang/String;->getChars()V",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->intern()Ljava/lang/String;",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->matches()Z"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getTime()J",
        "Landroid/location/Location;->getAccuracy()F"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->longValue()J",
        "Ljava/lang/Long;->toString()Ljava/lang/String;",
        "Ljava/lang/Long;->parseLong()J"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->enablePlatformNotifications()V",
        "Landroid/webkit/WebView;->clearCache()V",
        "Landroid/webkit/WebView;->onMeasure()V",
        "Landroid/webkit/WebView;->setBackgroundColor()V",
        "Landroid/webkit/WebView;->getVisibility()I",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->destroy()V",
        "Landroid/webkit/WebView;->stopLoading()V",
        "Landroid/webkit/WebView;->setDownloadListener()V",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V",
        "Landroid/webkit/WebView;->addJavascriptInterface()V",
        "Landroid/webkit/WebView;->clearHistory()V",
        "Landroid/webkit/WebView;->setId()V",
        "Landroid/webkit/WebView;->setWebChromeClient()V",
        "Landroid/webkit/WebView;->startAnimation()V",
        "Landroid/webkit/WebView;->setScrollBarStyle()V",
        "Landroid/webkit/WebView;->canGoBack()Z",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;",
        "Landroid/webkit/WebView;->setVerticalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->goBack()V",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->setVisibility()V",
        "Landroid/webkit/WebView;->setHorizontalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->setLayoutParams()V"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setUserAgentString()V",
        "Landroid/webkit/WebSettings;->getUserAgentString()Ljava/lang/String;",
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->setCacheMode()V"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->arraycopy()V",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->exit()V"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->digest()[B",
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->reset()V"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->isHierarchical()Z",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->getEncodedQuery()Ljava/lang/String;",
        "Landroid/net/Uri;->getScheme()Ljava/lang/String;",
        "Landroid/net/Uri;->fromFile()Landroid/net/Uri;",
        "Landroid/net/Uri;->getPathSegments()Ljava/util/List;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;",
        "Landroid/net/Uri;->getHost()Ljava/lang/String;",
        "Landroid/net/Uri;->getAuthority()Ljava/lang/String;"
    ],
    "Ljava/net/URLDecoder;": [
        "Ljava/net/URLDecoder;->decode()Ljava/lang/String;"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;",
        "Ljavax/crypto/Cipher;->doFinal()[B",
        "Ljavax/crypto/Cipher;->getIV()[B"
    ],
    "Lv;": [
        "Lv;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->booleanValue()Z",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getInstalledPackages()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getInstalledApplications()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getLaunchIntentForPackage()Landroid/content/Intent;",
        "Landroid/content/pm/PackageManager;->getReceiverInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationLabel()Ljava/lang/CharSequence;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->checkPermission()I",
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->getType()I",
        "Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;",
        "Landroid/net/NetworkInfo;->getTypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->isEmpty()Z",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->addAll()Z",
        "Ljava/util/List;->get()Ljava/lang/Object;"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->setStreamVolume()V",
        "Landroid/media/AudioManager;->isMusicActive()Z",
        "Landroid/media/AudioManager;->getRingerMode()I",
        "Landroid/media/AudioManager;->getStreamMaxVolume()I",
        "Landroid/media/AudioManager;->isSpeakerphoneOn()Z",
        "Landroid/media/AudioManager;->getMode()I"
    ],
    "Landroid/content/IntentFilter;": [
        "Landroid/content/IntentFilter;->addAction()V",
        "Landroid/content/IntentFilter;->addDataScheme()V"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->containsKey()Z",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->size()I"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->unmodifiableSet()Ljava/util/Set;",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->unmodifiableCollection()Ljava/util/Collection;",
        "Ljava/util/Collections;->sort()V",
        "Ljava/util/Collections;->emptyList()Ljava/util/List;"
    ],
    "La;": [
        "La;->a()V",
        "La;->a()Z"
    ],
    "La$a;": [
        "La$a;->ordinal()I"
    ],
    "Li;": [
        "Li;->a()V"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->isEnum()Z",
        "Ljava/lang/Class;->getGenericSuperclass()Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->isAssignableFrom()Z",
        "Ljava/lang/Class;->desiredAssertionStatus()Z",
        "Ljava/lang/Class;->getSimpleName()Ljava/lang/String;",
        "Ljava/lang/Class;->getModifiers()I",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->isSynthetic()Z",
        "Ljava/lang/Class;->isAnonymousClass()Z",
        "Ljava/lang/Class;->getSuperclass()Ljava/lang/Class;",
        "Ljava/lang/Class;->isMemberClass()Z",
        "Ljava/lang/Class;->getDeclaredConstructors()[Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getGenericInterfaces()[Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->getTypeParameters()[Ljava/lang/reflect/TypeVariable;",
        "Ljava/lang/Class;->cast()Ljava/lang/Object;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->isLocalClass()Z",
        "Ljava/lang/Class;->isInterface()Z",
        "Ljava/lang/Class;->getDeclaredFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->isPrimitive()Z",
        "Ljava/lang/Class;->isArray()Z"
    ],
    "Lv$b;": [
        "Lv$b;->a()Z"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->getProtocol()Ljava/lang/String;",
        "Ljava/net/URL;->equals()Z",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->getPath()Ljava/lang/String;",
        "Ljava/net/URL;->getHost()Ljava/lang/String;"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->setConnectTimeout()V",
        "Ljava/net/HttpURLConnection;->setRequestMethod()V",
        "Ljava/net/HttpURLConnection;->getHeaderField()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setReadTimeout()V",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->setDoInput()V",
        "Ljava/net/HttpURLConnection;->getContentLength()I",
        "Ljava/net/HttpURLConnection;->getResponseCode()I",
        "Ljava/net/HttpURLConnection;->setInstanceFollowRedirects()V",
        "Ljava/net/HttpURLConnection;->connect()V"
    ],
    "Lb;": [
        "Lb;->cancel()Z",
        "Lb;->a()V",
        "Lb;->execute()Landroid/os/AsyncTask;",
        "Lb;->a()Ljava/lang/Void;"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;",
        "Ljava/io/BufferedReader;->close()V"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->isNaN()Z",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;",
        "Ljava/lang/Float;->parseFloat()F"
    ],
    "Ljava/util/StringTokenizer;": [
        "Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;",
        "Ljava/util/StringTokenizer;->hasMoreTokens()Z"
    ],
    "Lcom/google/ads/AdActivity;": [
        "Lcom/google/ads/AdActivity;->showVideo()V",
        "Lcom/google/ads/AdActivity;->finish()V",
        "Lcom/google/ads/AdActivity;->setRequestedOrientation()V",
        "Lcom/google/ads/AdActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/google/ads/AdActivity;->startActivity()V",
        "Lcom/google/ads/AdActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/google/ads/AdActivity;->getVideoView()Landroid/widget/VideoView;",
        "Lcom/google/ads/AdActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/google/ads/AdActivity;->a()V",
        "Lcom/google/ads/AdActivity;->isFinishing()Z",
        "Lcom/google/ads/AdActivity;->requestWindowFeature()Z",
        "Lcom/google/ads/AdActivity;->launchAdActivity()V",
        "Lcom/google/ads/AdActivity;->getWindow()Landroid/view/Window;",
        "Lcom/google/ads/AdActivity;->setContentView()V"
    ],
    "Lw;": [
        "Lw;->execute()Landroid/os/AsyncTask;",
        "Lw;->a()Ljava/lang/Void;"
    ],
    "Lcom/google/ads/AdRequest;": [
        "Lcom/google/ads/AdRequest;->getRequestMap()Ljava/util/Map;"
    ],
    "Lf;": [
        "Lf;->a()J",
        "Lf;->a()V",
        "Lf;->a()Z",
        "Lf;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/AdSize;": [
        "Lcom/google/ads/AdSize;->toString()Ljava/lang/String;",
        "Lcom/google/ads/AdSize;->getWidth()I",
        "Lcom/google/ads/AdSize;->getHeight()I"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->intValue()I"
    ],
    "Lu$a;": [
        "Lu$a;->ordinal()I"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;"
    ],
    "Lcom/google/gson/Gson;": [
        "Lcom/google/gson/Gson;->a()V",
        "Lcom/google/gson/Gson;->fromJson()Ljava/lang/Object;",
        "Lcom/google/gson/Gson;->toJson()Ljava/lang/String;",
        "Lcom/google/gson/Gson;->a()Lcom/google/gson/an;",
        "Lcom/google/gson/Gson;->toJsonTree()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/Gson;->toJson()V"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->elapsedRealtime()J"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->hashCode()I",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->notify()V",
        "Ljava/lang/Object;->wait()V"
    ],
    "Lh;": [
        "Lh;->a()V"
    ],
    "Lg;": [
        "Lg;->setScrollBarStyle()V",
        "Lg;->setMeasuredDimension()V",
        "Lg;->loadDataWithBaseURL()V",
        "Lg;->a()V",
        "Lg;->getSettings()Landroid/webkit/WebSettings;",
        "Lg;->getParent()Landroid/view/ViewParent;",
        "Lg;->isInEditMode()Z",
        "Lg;->setBackgroundColor()V",
        "Lg;->loadUrl()V",
        "Lg;->getContext()Landroid/content/Context;",
        "Lg;->a()Lcom/google/ads/AdActivity;",
        "Lg;->stopLoading()V",
        "Lg;->getWindowVisibility()I",
        "Lg;->setVisibility()V",
        "Lg;->setWebViewClient()V"
    ],
    "Lh$a;": [
        "Lh$a;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->sendEmptyMessage()Z",
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->postDelayed()Z",
        "Landroid/os/Handler;->removeCallbacks()V",
        "Landroid/os/Handler;->sendMessage()Z"
    ],
    "Lcom/google/ads/AdListener;": [
        "Lcom/google/ads/AdListener;->onPresentScreen()V",
        "Lcom/google/ads/AdListener;->onFailedToReceiveAd()V",
        "Lcom/google/ads/AdListener;->onDismissScreen()V",
        "Lcom/google/ads/AdListener;->onReceiveAd()V",
        "Lcom/google/ads/AdListener;->onLeaveApplication()V"
    ],
    "Ljava/util/LinkedList;": [
        "Ljava/util/LinkedList;->size()I",
        "Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedList;->clear()V",
        "Ljava/util/LinkedList;->isEmpty()Z",
        "Ljava/util/LinkedList;->getLast()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->add()Z",
        "Ljava/util/LinkedList;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->hasNext()Z"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->putSerializable()V",
        "Landroid/os/Bundle;->getSerializable()Ljava/io/Serializable;",
        "Landroid/os/Bundle;->get()Ljava/lang/Object;",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->keySet()Ljava/util/Set;",
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->putString()V"
    ],
    "Landroid/widget/VideoView;": [
        "Landroid/widget/VideoView;->setVisibility()V",
        "Landroid/widget/VideoView;->start()V",
        "Landroid/widget/VideoView;->setVideoPath()V",
        "Landroid/widget/VideoView;->pause()V",
        "Landroid/widget/VideoView;->setOnCompletionListener()V",
        "Landroid/widget/VideoView;->setOnPreparedListener()V",
        "Landroid/widget/VideoView;->seekTo()V",
        "Landroid/widget/VideoView;->stopPlayback()V"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->getMode()I"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->openRawResource()Ljava/io/InputStream;",
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getString()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->getXml()Landroid/content/res/XmlResourceParser;",
        "Landroid/content/res/Resources;->getIdentifier()I",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;",
        "Ljava/lang/Enum;->toString()Ljava/lang/String;"
    ],
    "[Lorg/codehaus/jackson/JsonToken;": [
        "[Lorg/codehaus/jackson/JsonToken;->clone()Ljava/lang/Object;"
    ],
    "Lorg/codehaus/jackson/JsonToken;": [
        "Lorg/codehaus/jackson/JsonToken;->asByteArray()[B",
        "Lorg/codehaus/jackson/JsonToken;->asString()Ljava/lang/String;",
        "Lorg/codehaus/jackson/JsonToken;->ordinal()I",
        "Lorg/codehaus/jackson/JsonToken;->isNumeric()Z",
        "Lorg/codehaus/jackson/JsonToken;->asCharArray()[C"
    ],
    "Lorg/codehaus/jackson/JsonGenerator;": [
        "Lorg/codehaus/jackson/JsonGenerator;->configure()Lorg/codehaus/jackson/JsonGenerator;",
        "Lorg/codehaus/jackson/JsonGenerator;->writeStartArray()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeFieldName()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeNull()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeObject()V",
        "Lorg/codehaus/jackson/JsonGenerator;->isEnabled()Z",
        "Lorg/codehaus/jackson/JsonGenerator;->writeString()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeEndArray()V",
        "Lorg/codehaus/jackson/JsonGenerator;->close()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeEndObject()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeNumber()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeStartObject()V",
        "Lorg/codehaus/jackson/JsonGenerator;->disable()Lorg/codehaus/jackson/JsonGenerator;",
        "Lorg/codehaus/jackson/JsonGenerator;->writeRaw()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeBinary()V",
        "Lorg/codehaus/jackson/JsonGenerator;->writeBoolean()V",
        "Lorg/codehaus/jackson/JsonGenerator;->enable()Lorg/codehaus/jackson/JsonGenerator;"
    ],
    "Lorg/codehaus/jackson/Base64Variants;": [
        "Lorg/codehaus/jackson/Base64Variants;->getDefaultVariant()Lorg/codehaus/jackson/Base64Variant;"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->getMessage()Ljava/lang/String;",
        "Ljava/io/IOException;->printStackTrace()V",
        "Ljava/io/IOException;->toString()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/JsonProcessingException;": [
        "Lorg/codehaus/jackson/JsonProcessingException;->getLocation()Lorg/codehaus/jackson/JsonLocation;",
        "Lorg/codehaus/jackson/JsonProcessingException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/JsonLocation;": [
        "Lorg/codehaus/jackson/JsonLocation;->getByteOffset()J",
        "Lorg/codehaus/jackson/JsonLocation;->toString()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/JsonNode;": [
        "Lorg/codehaus/jackson/JsonNode;->get()Lorg/codehaus/jackson/JsonNode;",
        "Lorg/codehaus/jackson/JsonNode;->path()Lorg/codehaus/jackson/JsonNode;",
        "Lorg/codehaus/jackson/JsonNode;->getElements()Ljava/util/Iterator;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->equals()Z",
        "Ljava/util/Arrays;->asList()Ljava/util/List;",
        "Ljava/util/Arrays;->hashCode()I",
        "Ljava/util/Arrays;->fill()V"
    ],
    "[Lorg/codehaus/jackson/JsonEncoding;": [
        "[Lorg/codehaus/jackson/JsonEncoding;->clone()Ljava/lang/Object;"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->indexOf()I",
        "Ljava/lang/StringBuffer;->setCharAt()V",
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/JsonParser;": [
        "Lorg/codehaus/jackson/JsonParser;->getLongValue()J",
        "Lorg/codehaus/jackson/JsonParser;->getTextLength()I",
        "Lorg/codehaus/jackson/JsonParser;->getBigIntegerValue()Ljava/math/BigInteger;",
        "Lorg/codehaus/jackson/JsonParser;->getText()Ljava/lang/String;",
        "Lorg/codehaus/jackson/JsonParser;->_constructError()Lorg/codehaus/jackson/JsonParseException;",
        "Lorg/codehaus/jackson/JsonParser;->disable()Lorg/codehaus/jackson/JsonParser;",
        "Lorg/codehaus/jackson/JsonParser;->getCodec()Lorg/codehaus/jackson/ObjectCodec;",
        "Lorg/codehaus/jackson/JsonParser;->getIntValue()I",
        "Lorg/codehaus/jackson/JsonParser;->getBinaryValue()[B",
        "Lorg/codehaus/jackson/JsonParser;->nextToken()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/JsonParser;->getFloatValue()F",
        "Lorg/codehaus/jackson/JsonParser;->enable()Lorg/codehaus/jackson/JsonParser;",
        "Lorg/codehaus/jackson/JsonParser;->getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;",
        "Lorg/codehaus/jackson/JsonParser;->isEnabled()Z",
        "Lorg/codehaus/jackson/JsonParser;->getTokenLocation()Lorg/codehaus/jackson/JsonLocation;",
        "Lorg/codehaus/jackson/JsonParser;->skipChildren()Lorg/codehaus/jackson/JsonParser;",
        "Lorg/codehaus/jackson/JsonParser;->getCurrentLocation()Lorg/codehaus/jackson/JsonLocation;",
        "Lorg/codehaus/jackson/JsonParser;->getCurrentName()Ljava/lang/String;",
        "Lorg/codehaus/jackson/JsonParser;->enableFeature()V",
        "Lorg/codehaus/jackson/JsonParser;->getCurrentToken()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/JsonParser;->getDoubleValue()D",
        "Lorg/codehaus/jackson/JsonParser;->getEmbeddedObject()Ljava/lang/Object;",
        "Lorg/codehaus/jackson/JsonParser;->configure()Lorg/codehaus/jackson/JsonParser;",
        "Lorg/codehaus/jackson/JsonParser;->disableFeature()V",
        "Lorg/codehaus/jackson/JsonParser;->getDecimalValue()Ljava/math/BigDecimal;",
        "Lorg/codehaus/jackson/JsonParser;->getTextOffset()I",
        "Lorg/codehaus/jackson/JsonParser;->getTextCharacters()[C"
    ],
    "Lorg/codehaus/jackson/JsonParser$Feature;": [
        "Lorg/codehaus/jackson/JsonParser$Feature;->getMask()I",
        "Lorg/codehaus/jackson/JsonParser$Feature;->collectDefaults()I",
        "Lorg/codehaus/jackson/JsonParser$Feature;->enabledIn()Z"
    ],
    "Lorg/codehaus/jackson/ObjectCodec;": [
        "Lorg/codehaus/jackson/ObjectCodec;->readTree()Lorg/codehaus/jackson/JsonNode;",
        "Lorg/codehaus/jackson/ObjectCodec;->readValue()Ljava/lang/Object;",
        "Lorg/codehaus/jackson/ObjectCodec;->writeTree()V",
        "Lorg/codehaus/jackson/ObjectCodec;->writeValue()V"
    ],
    "Lorg/codehaus/jackson/JsonGenerator$Feature;": [
        "Lorg/codehaus/jackson/JsonGenerator$Feature;->collectDefaults()I",
        "Lorg/codehaus/jackson/JsonGenerator$Feature;->getMask()I"
    ],
    "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;": [
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->createRoot()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->rehash()V",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->release()V",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->maybeDirty()Z",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->makeChild()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->calcHash()I",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->mergeChild()V",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->findSymbol()Ljava/lang/String;",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->size()I",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->copyArrays()V",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;->makeOrphan()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;"
    ],
    "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;": [
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->nukeSymbols()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->markAsShared()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->mergeChild()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->expandCollision()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->unshareNames()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->rehash()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->release()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->constructName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->size()I",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->_addSymbol()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->maybeDirty()Z",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->getEmptyName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->makeChild()Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->unshareCollision()V",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->createRoot()Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->addName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->findBestBucket()I",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->calcHash()I",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->findName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;->unshareMain()V"
    ],
    "Lorg/codehaus/jackson/JsonFactory;": [
        "Lorg/codehaus/jackson/JsonFactory;->_getBufferRecycler()Lorg/codehaus/jackson/util/BufferRecycler;",
        "Lorg/codehaus/jackson/JsonFactory;->_createJsonGenerator()Lorg/codehaus/jackson/JsonGenerator;",
        "Lorg/codehaus/jackson/JsonFactory;->isEnabled()Z",
        "Lorg/codehaus/jackson/JsonFactory;->_optimizedStreamFromURL()Ljava/io/InputStream;",
        "Lorg/codehaus/jackson/JsonFactory;->createJsonParser()Lorg/codehaus/jackson/JsonParser;",
        "Lorg/codehaus/jackson/JsonFactory;->_createJsonParser()Lorg/codehaus/jackson/JsonParser;",
        "Lorg/codehaus/jackson/JsonFactory;->configure()Lorg/codehaus/jackson/JsonFactory;",
        "Lorg/codehaus/jackson/JsonFactory;->createJsonGenerator()Lorg/codehaus/jackson/JsonGenerator;",
        "Lorg/codehaus/jackson/JsonFactory;->enable()Lorg/codehaus/jackson/JsonFactory;",
        "Lorg/codehaus/jackson/JsonFactory;->_createContext()Lorg/codehaus/jackson/io/IOContext;",
        "Lorg/codehaus/jackson/JsonFactory;->disable()Lorg/codehaus/jackson/JsonFactory;",
        "Lorg/codehaus/jackson/JsonFactory;->_createWriter()Ljava/io/Writer;"
    ],
    "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;": [
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->reportWeirdUCS4()V",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->handleBOM()Z",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->checkUTF32()Z",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->checkUTF16()Z",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->constructReader()Ljava/io/Reader;",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->detectEncoding()Lorg/codehaus/jackson/JsonEncoding;",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->ensureLoaded()Z",
        "Lorg/codehaus/jackson/impl/ByteSourceBootstrapper;->constructParser()Lorg/codehaus/jackson/JsonParser;"
    ],
    "Lorg/codehaus/jackson/JsonEncoding;": [
        "Lorg/codehaus/jackson/JsonEncoding;->getJavaName()Ljava/lang/String;",
        "Lorg/codehaus/jackson/JsonEncoding;->ordinal()I",
        "Lorg/codehaus/jackson/JsonEncoding;->isBigEndian()Z"
    ],
    "Ljava/lang/ThreadLocal;": [
        "Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;",
        "Ljava/lang/ThreadLocal;->set()V"
    ],
    "Ljava/lang/ref/SoftReference;": [
        "Ljava/lang/ref/SoftReference;->get()Ljava/lang/Object;"
    ],
    "Lorg/codehaus/jackson/io/IOContext;": [
        "Lorg/codehaus/jackson/io/IOContext;->allocTokenBuffer()[C",
        "Lorg/codehaus/jackson/io/IOContext;->allocNameCopyBuffer()[C",
        "Lorg/codehaus/jackson/io/IOContext;->releaseConcatBuffer()V",
        "Lorg/codehaus/jackson/io/IOContext;->allocReadIOBuffer()[B",
        "Lorg/codehaus/jackson/io/IOContext;->releaseNameCopyBuffer()V",
        "Lorg/codehaus/jackson/io/IOContext;->releaseReadIOBuffer()V",
        "Lorg/codehaus/jackson/io/IOContext;->allocConcatBuffer()[C",
        "Lorg/codehaus/jackson/io/IOContext;->isResourceManaged()Z",
        "Lorg/codehaus/jackson/io/IOContext;->setEncoding()V",
        "Lorg/codehaus/jackson/io/IOContext;->getEncoding()Lorg/codehaus/jackson/JsonEncoding;",
        "Lorg/codehaus/jackson/io/IOContext;->releaseWriteEncodingBuffer()V",
        "Lorg/codehaus/jackson/io/IOContext;->releaseTokenBuffer()V",
        "Lorg/codehaus/jackson/io/IOContext;->allocWriteEncodingBuffer()[B",
        "Lorg/codehaus/jackson/io/IOContext;->getSourceReference()Ljava/lang/Object;",
        "Lorg/codehaus/jackson/io/IOContext;->constructTextBuffer()Lorg/codehaus/jackson/util/TextBuffer;"
    ],
    "Lorg/codehaus/jackson/util/TextBuffer;": [
        "Lorg/codehaus/jackson/util/TextBuffer;->findBuffer()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->getCurrentSegmentSize()I",
        "Lorg/codehaus/jackson/util/TextBuffer;->emptyAndGetCurrentSegment()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->buildResultArray()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->expand()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->resetWithEmpty()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->resetWithCopy()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->clearSegments()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->contentsAsString()Ljava/lang/String;",
        "Lorg/codehaus/jackson/util/TextBuffer;->append()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->contentsAsDecimal()Ljava/math/BigDecimal;",
        "Lorg/codehaus/jackson/util/TextBuffer;->contentsAsDouble()D",
        "Lorg/codehaus/jackson/util/TextBuffer;->contentsAsArray()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->expandCurrentSegment()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->getCurrentSegment()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->finishCurrentSegment()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->releaseBuffers()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->getTextBuffer()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->resetWithShared()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->size()I",
        "Lorg/codehaus/jackson/util/TextBuffer;->setCurrentLength()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->unshare()V",
        "Lorg/codehaus/jackson/util/TextBuffer;->_charArray()[C",
        "Lorg/codehaus/jackson/util/TextBuffer;->getTextOffset()I"
    ],
    "Lorg/codehaus/jackson/impl/Utf8NumericParser;": [
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->reportInvalidNumber()V",
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->close()V",
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->reset()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->loadMore()Z",
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->reportUnexpectedNumberChar()V",
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->_getCharDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/Utf8NumericParser;->loadMoreGuaranteed()V"
    ],
    "Lorg/codehaus/jackson/impl/ReaderBasedParserBase;": [
        "Lorg/codehaus/jackson/impl/ReaderBasedParserBase;->isEnabled()Z",
        "Lorg/codehaus/jackson/impl/ReaderBasedParserBase;->_reportInvalidEOF()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParserBase;->loadMore()Z",
        "Lorg/codehaus/jackson/impl/ReaderBasedParserBase;->_closeInput()V"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->close()V",
        "Ljava/io/Reader;->read()I"
    ],
    "Lorg/codehaus/jackson/impl/JsonNumericParserBase;": [
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->convertNumberToInt()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->_getCharDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->convertNumberToBigInteger()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->_throwInternal()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->convertNumberToBigDecimal()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->getDoubleValue()D",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->_releaseBuffers()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->parseNumericValue()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->convertNumberToDouble()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->_wrapError()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->getText()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->reportOverflowInt()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->convertNumberToLong()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->_reportError()V",
        "Lorg/codehaus/jackson/impl/JsonNumericParserBase;->reportOverflowLong()V"
    ],
    "Ljava/math/BigDecimal;": [
        "Ljava/math/BigDecimal;->doubleValue()D",
        "Ljava/math/BigDecimal;->valueOf()Ljava/math/BigDecimal;",
        "Ljava/math/BigDecimal;->longValue()J",
        "Ljava/math/BigDecimal;->toBigInteger()Ljava/math/BigInteger;",
        "Ljava/math/BigDecimal;->intValue()I",
        "Ljava/math/BigDecimal;->compareTo()I",
        "Ljava/math/BigDecimal;->toString()Ljava/lang/String;"
    ],
    "Ljava/math/BigInteger;": [
        "Ljava/math/BigInteger;->toString()Ljava/lang/String;",
        "Ljava/math/BigInteger;->intValue()I",
        "Ljava/math/BigInteger;->valueOf()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->longValue()J",
        "Ljava/math/BigInteger;->bitLength()I",
        "Ljava/math/BigInteger;->doubleValue()D",
        "Ljava/math/BigInteger;->toByteArray()[B",
        "Ljava/math/BigInteger;->compareTo()I"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->doubleToLongBits()J",
        "Ljava/lang/Double;->isNaN()Z",
        "Ljava/lang/Double;->toString()Ljava/lang/String;",
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;",
        "Ljava/lang/Double;->parseDouble()D"
    ],
    "Lorg/codehaus/jackson/io/NumberInput;": [
        "Lorg/codehaus/jackson/io/NumberInput;->inLongRange()Z",
        "Lorg/codehaus/jackson/io/NumberInput;->parseInt()I",
        "Lorg/codehaus/jackson/io/NumberInput;->parseLong()J"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->reset()V",
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->skip()J",
        "Ljava/io/InputStream;->markSupported()Z",
        "Ljava/io/InputStream;->mark()V",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->available()I"
    ],
    "Lorg/codehaus/jackson/impl/JsonReadContext;": [
        "Lorg/codehaus/jackson/impl/JsonReadContext;->inArray()Z",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->expectComma()Z",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->createChildObjectContext()Lorg/codehaus/jackson/impl/JsonReadContext;",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->reset()V",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->getCurrentIndex()I",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->setCurrentName()V",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->inRoot()Z",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->createRootContext()Lorg/codehaus/jackson/impl/JsonReadContext;",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->getParent()Lorg/codehaus/jackson/impl/JsonReadContext;",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->createChildArrayContext()Lorg/codehaus/jackson/impl/JsonReadContext;",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->inObject()Z",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->getTypeDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->getStartLocation()Lorg/codehaus/jackson/JsonLocation;",
        "Lorg/codehaus/jackson/impl/JsonReadContext;->getCurrentName()Ljava/lang/String;"
    ],
    "Ljava/lang/Character;": [
        "Ljava/lang/Character;->valueOf()Ljava/lang/Character;",
        "Ljava/lang/Character;->isUpperCase()Z",
        "Ljava/lang/Character;->isLowSurrogate()Z",
        "Ljava/lang/Character;->codePointAt()I",
        "Ljava/lang/Character;->toCodePoint()I",
        "Ljava/lang/Character;->isSupplementaryCodePoint()Z",
        "Ljava/lang/Character;->toLowerCase()C",
        "Ljava/lang/Character;->toUpperCase()C",
        "Ljava/lang/Character;->isDefined()Z",
        "Ljava/lang/Character;->charValue()C",
        "Ljava/lang/Character;->isJavaIdentifierPart()Z",
        "Ljava/lang/Character;->charCount()I",
        "Ljava/lang/Character;->isISOControl()Z",
        "Ljava/lang/Character;->isLetter()Z",
        "Ljava/lang/Character;->toChars()[C",
        "Ljava/lang/Character;->digit()I"
    ],
    "Lorg/codehaus/jackson/impl/JsonParserBase;": [
        "Lorg/codehaus/jackson/impl/JsonParserBase;->isEnabled()Z",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->loadMore()Z",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_reportInvalidEOF()V",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->getTokenCharacterOffset()J",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_decodeBase64()[B",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->getParsingContext()Lorg/codehaus/jackson/impl/JsonReadContext;",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_handleEOF()V",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_constructError()Lorg/codehaus/jackson/JsonParseException;",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_closeInput()V",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->getTokenColumnNr()I",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_reportError()V",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_releaseBuffers()V",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_getCharDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->getCurrentLocation()Lorg/codehaus/jackson/JsonLocation;",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->getTokenLineNr()I",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->_finishString()V",
        "Lorg/codehaus/jackson/impl/JsonParserBase;->nextToken()Lorg/codehaus/jackson/JsonToken;"
    ],
    "Lorg/codehaus/jackson/util/ByteArrayBuilder;": [
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->appendThreeBytes()V",
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->_allocMore()V",
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->toByteArray()[B",
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->append()V",
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->reset()V",
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->write()V",
        "Lorg/codehaus/jackson/util/ByteArrayBuilder;->appendTwoBytes()V"
    ],
    "Ljava/lang/IllegalArgumentException;": [
        "Ljava/lang/IllegalArgumentException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/impl/WriterBasedGenerator;": [
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_reportError()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->isEnabled()Z",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->getOutputContext()Lorg/codehaus/jackson/impl/JsonWriteContext;",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeNull()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_cantHappen()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->writeEndObject()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_appendSingleEscape()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeQuotedLong()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeLongString()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_verifyPrettyValueWrite()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeQuotedRaw()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_verifyValueWrite()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_releaseBuffers()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeBinary()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->writeEndArray()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->writeRaw()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->writeString()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_flushBuffer()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeSingleEscape()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeQuotedInt()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeSegment()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writePPFieldName()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->_writeString()V",
        "Lorg/codehaus/jackson/impl/WriterBasedGenerator;->writeRawLong()V"
    ],
    "Lorg/codehaus/jackson/io/NumberOutput;": [
        "Lorg/codehaus/jackson/io/NumberOutput;->calcLongStrLength()I",
        "Lorg/codehaus/jackson/io/NumberOutput;->outputLeadingTriplet()I",
        "Lorg/codehaus/jackson/io/NumberOutput;->outputInt()I",
        "Lorg/codehaus/jackson/io/NumberOutput;->outputFullTriplet()I",
        "Lorg/codehaus/jackson/io/NumberOutput;->outputLong()I",
        "Lorg/codehaus/jackson/io/NumberOutput;->toString()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/util/CharTypes;": [
        "Lorg/codehaus/jackson/util/CharTypes;->getInputCodeLatin1JsNames()[I",
        "Lorg/codehaus/jackson/util/CharTypes;->getOutputEscapes()[I",
        "Lorg/codehaus/jackson/util/CharTypes;->appendQuoted()V",
        "Lorg/codehaus/jackson/util/CharTypes;->getInputCodeLatin1()[I",
        "Lorg/codehaus/jackson/util/CharTypes;->getInputCodeComment()[I",
        "Lorg/codehaus/jackson/util/CharTypes;->getInputCodeUtf8()[I",
        "Lorg/codehaus/jackson/util/CharTypes;->charToHex()I",
        "Lorg/codehaus/jackson/util/CharTypes;->getInputCodeUtf8JsNames()[I"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->write()V",
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->flush()V"
    ],
    "Lorg/codehaus/jackson/PrettyPrinter;": [
        "Lorg/codehaus/jackson/PrettyPrinter;->beforeObjectEntries()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeObjectEntrySeparator()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->beforeArrayValues()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeStartObject()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeArrayValueSeparator()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeEndArray()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeStartArray()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeRootValueSeparator()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeObjectFieldValueSeparator()V",
        "Lorg/codehaus/jackson/PrettyPrinter;->writeEndObject()V"
    ],
    "Lorg/codehaus/jackson/impl/JsonWriteContext;": [
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->inArray()Z",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->appendDesc()V",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->inObject()Z",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->writeFieldName()I",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->createChildArrayContext()Lorg/codehaus/jackson/impl/JsonWriteContext;",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->getEntryCount()I",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->createChildObjectContext()Lorg/codehaus/jackson/impl/JsonWriteContext;",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->createRootContext()Lorg/codehaus/jackson/impl/JsonWriteContext;",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->getParent()Lorg/codehaus/jackson/impl/JsonWriteContext;",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->getTypeDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/JsonWriteContext;->writeValue()I"
    ],
    "Lorg/codehaus/jackson/Base64Variant;": [
        "Lorg/codehaus/jackson/Base64Variant;->getMaxLineLength()I",
        "Lorg/codehaus/jackson/Base64Variant;->getPaddingChar()C",
        "Lorg/codehaus/jackson/Base64Variant;->encodeBase64Partial()I",
        "Lorg/codehaus/jackson/Base64Variant;->encodeBase64Chunk()I",
        "Lorg/codehaus/jackson/Base64Variant;->decodeBase64Char()I",
        "Lorg/codehaus/jackson/Base64Variant;->usesPaddingChar()Z"
    ],
    "Lorg/codehaus/jackson/impl/JsonGeneratorBase;": [
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_writeEndObject()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_verifyValueWrite()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_writeStartArray()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeEndObject()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->isEnabled()Z",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->copyCurrentEvent()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->getOutputContext()Lorg/codehaus/jackson/impl/JsonWriteContext;",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeBoolean()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeNull()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeString()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeObject()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeNumber()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeBinary()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeFieldName()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_cantHappen()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_writeFieldName()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeStartObject()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeEndArray()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->copyCurrentStructure()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_writeEndArray()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->writeStartArray()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->setPrettyPrinter()Lorg/codehaus/jackson/JsonGenerator;",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_reportError()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_writeStartObject()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->_writeSimpleObject()V",
        "Lorg/codehaus/jackson/impl/JsonGeneratorBase;->close()V"
    ],
    "Lorg/codehaus/jackson/JsonStreamContext;": [
        "Lorg/codehaus/jackson/JsonStreamContext;->inArray()Z",
        "Lorg/codehaus/jackson/JsonStreamContext;->inObject()Z"
    ],
    "Lorg/codehaus/jackson/impl/StreamBasedParserBase;": [
        "Lorg/codehaus/jackson/impl/StreamBasedParserBase;->_closeInput()V",
        "Lorg/codehaus/jackson/impl/StreamBasedParserBase;->isEnabled()Z"
    ],
    "Ljava/lang/Number;": [
        "Ljava/lang/Number;->shortValue()S",
        "Ljava/lang/Number;->doubleValue()D",
        "Ljava/lang/Number;->intValue()I",
        "Ljava/lang/Number;->byteValue()B",
        "Ljava/lang/Number;->longValue()J",
        "Ljava/lang/Number;->floatValue()F"
    ],
    "Ljava/util/concurrent/atomic/AtomicInteger;": [
        "Ljava/util/concurrent/atomic/AtomicInteger;->get()I"
    ],
    "Ljava/util/concurrent/atomic/AtomicLong;": [
        "Ljava/util/concurrent/atomic/AtomicLong;->get()J"
    ],
    "Ljava/util/concurrent/atomic/AtomicBoolean;": [
        "Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z"
    ],
    "Lorg/codehaus/jackson/JsonParser$NumberType;": [
        "Lorg/codehaus/jackson/JsonParser$NumberType;->ordinal()I"
    ],
    "Lorg/codehaus/jackson/impl/Utf8StreamParser;": [
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_throwInvalidSpace()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_parseApostropheFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->loadMoreGuaranteed()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportInvalidInitial()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_nextAfterName()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipWS()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->reportInvalidChar()Ljava/lang/IllegalArgumentException;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportUnexpectedChar()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_parseFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipUtf8_3()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipUtf8_4()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_decodeUtf8_4()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportInvalidEOF()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->loadMore()Z",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportMismatchedEndMarker()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipCR()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_decodeEscaped()C",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_matchToken()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_handleUnusualFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportInvalidOther()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipString()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipUtf8_2()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->slowParseFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->parseLongFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_throwInternal()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_decodeUtf8_2()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportInvalidToken()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportError()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->findName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->nextByte()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_throwUnquotedSpace()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_getCharDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->parseNumberText()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_reportInvalidChar()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_handleEOF()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_getByteArrayBuilder()Lorg/codehaus/jackson/util/ByteArrayBuilder;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->close()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->parseFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipLF()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->isEnabled()Z",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->addName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_decodeCharForError()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_handleUnexpectedValue()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipComment()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipCComment()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_decodeUtf8_3fast()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_decodeUtf8_3()I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipCppComment()V",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->parseEscapedFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_constructError()Lorg/codehaus/jackson/JsonParseException;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->growArrayBy()[I",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->parseMediumFieldName()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/impl/Utf8StreamParser;->_skipWSOrEnd()I"
    ],
    "Lorg/codehaus/jackson/sym/Name;": [
        "Lorg/codehaus/jackson/sym/Name;->equals()Z",
        "Lorg/codehaus/jackson/sym/Name;->hashCode()I",
        "Lorg/codehaus/jackson/sym/Name;->getName()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/impl/ArrayWContext;": [
        "Lorg/codehaus/jackson/impl/ArrayWContext;->getCurrentIndex()I"
    ],
    "Lorg/codehaus/jackson/impl/Indenter;": [
        "Lorg/codehaus/jackson/impl/Indenter;->writeIndentation()V",
        "Lorg/codehaus/jackson/impl/Indenter;->isInline()Z"
    ],
    "Lorg/codehaus/jackson/impl/ReaderBasedParser;": [
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_parseFieldName2()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_decodeEscaped()C",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_parseFieldName()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->parseNumberText()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipLF()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_reportUnexpectedChar()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_handleUnexpectedValue()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_throwInvalidSpace()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_matchToken()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_handleUnusualFieldName()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->loadMoreGuaranteed()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_finishString2()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipComment()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_parseUnusualFieldName2()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_throwUnquotedSpace()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipCComment()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->reportInvalidChar()Ljava/lang/IllegalArgumentException;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipWS()I",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_parseApostropheFieldName()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_handleEOF()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_getByteArrayBuilder()Lorg/codehaus/jackson/util/ByteArrayBuilder;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->close()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipCppComment()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_reportInvalidEOF()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_reportInvalidToken()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipCR()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_nextAfterName()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipString()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_reportError()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_constructError()Lorg/codehaus/jackson/JsonParseException;",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_skipWSOrEnd()I",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->isEnabled()Z",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->loadMore()Z",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_reportMismatchedEndMarker()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedParser;->_getCharDesc()Ljava/lang/String;"
    ],
    "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;": [
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->_getCharDesc()Ljava/lang/String;",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->loadMore()Z",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->getNextChar()C",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->parseNumberText2()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->reset()Lorg/codehaus/jackson/JsonToken;",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->reportUnexpectedNumberChar()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->reportInvalidNumber()V",
        "Lorg/codehaus/jackson/impl/ReaderBasedNumericParser;->close()V"
    ],
    "Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;": [
        "Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;->access$000()I",
        "Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;->ordinal()I",
        "Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;->values()[Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;"
    ],
    "Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;": [
        "Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;->values()[Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;",
        "Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;->access$100()I",
        "Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;->ordinal()I"
    ],
    "Lorg/codehaus/jackson/util/BufferRecycler;": [
        "Lorg/codehaus/jackson/util/BufferRecycler;->allocCharBuffer()[C",
        "Lorg/codehaus/jackson/util/BufferRecycler;->calloc()[C",
        "Lorg/codehaus/jackson/util/BufferRecycler;->releaseCharBuffer()V",
        "Lorg/codehaus/jackson/util/BufferRecycler;->balloc()[B",
        "Lorg/codehaus/jackson/util/BufferRecycler;->allocByteBuffer()[B",
        "Lorg/codehaus/jackson/util/BufferRecycler;->releaseByteBuffer()V"
    ],
    "Lorg/codehaus/jackson/util/InternCache;": [
        "Lorg/codehaus/jackson/util/InternCache;->intern()Ljava/lang/String;",
        "Lorg/codehaus/jackson/util/InternCache;->size()I",
        "Lorg/codehaus/jackson/util/InternCache;->put()Ljava/lang/Object;",
        "Lorg/codehaus/jackson/util/InternCache;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->addAll()Z",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->clear()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->random()D",
        "Ljava/lang/Math;->sqrt()D"
    ],
    "Lorg/codehaus/jackson/io/UTF8Writer;": [
        "Lorg/codehaus/jackson/io/UTF8Writer;->throwIllegal()V",
        "Lorg/codehaus/jackson/io/UTF8Writer;->append()Ljava/io/Writer;",
        "Lorg/codehaus/jackson/io/UTF8Writer;->convertSurrogate()I",
        "Lorg/codehaus/jackson/io/UTF8Writer;->write()V"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->flush()V",
        "Ljava/io/OutputStream;->close()V",
        "Ljava/io/OutputStream;->write()V"
    ],
    "Lorg/codehaus/jackson/io/MergedStream;": [
        "Lorg/codehaus/jackson/io/MergedStream;->read()I",
        "Lorg/codehaus/jackson/io/MergedStream;->freeMergedBuffer()V"
    ],
    "Lorg/codehaus/jackson/io/BaseReader;": [
        "Lorg/codehaus/jackson/io/BaseReader;->close()V",
        "Lorg/codehaus/jackson/io/BaseReader;->freeBuffers()V",
        "Lorg/codehaus/jackson/io/BaseReader;->read()I"
    ],
    "Lorg/codehaus/jackson/io/UTF32Reader;": [
        "Lorg/codehaus/jackson/io/UTF32Reader;->reportStrangeStream()V",
        "Lorg/codehaus/jackson/io/UTF32Reader;->freeBuffers()V",
        "Lorg/codehaus/jackson/io/UTF32Reader;->reportUnexpectedEOF()V",
        "Lorg/codehaus/jackson/io/UTF32Reader;->loadMore()Z",
        "Lorg/codehaus/jackson/io/UTF32Reader;->reportInvalid()V",
        "Lorg/codehaus/jackson/io/UTF32Reader;->reportBounds()V"
    ],
    "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;": [
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;->find()Lorg/codehaus/jackson/sym/Name;",
        "Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;->length()I"
    ],
    "Lorg/codehaus/jackson/sym/Name1;": [
        "Lorg/codehaus/jackson/sym/Name1;->getEmptyName()Lorg/codehaus/jackson/sym/Name1;"
    ],
    "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;": [
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;->getNext()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;->getSymbol()Ljava/lang/String;",
        "Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;->find()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/ParameterizedType;": [
        "Ljava/lang/reflect/ParameterizedType;->getOwnerType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/ParameterizedType;->getRawType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/ParameterizedType;->getActualTypeArguments()[Ljava/lang/reflect/Type;"
    ],
    "Lorg/codehaus/jackson/type/TypeReference;": [
        "Lorg/codehaus/jackson/type/TypeReference;->compareTo()I"
    ],
    "Lorg/codehaus/jackson/type/JavaType;": [
        "Lorg/codehaus/jackson/type/JavaType;->_narrow()Lorg/codehaus/jackson/type/JavaType;",
        "Lorg/codehaus/jackson/type/JavaType;->toString()Ljava/lang/String;",
        "Lorg/codehaus/jackson/type/JavaType;->_assertSubclass()V",
        "Lorg/codehaus/jackson/type/JavaType;->setValueHandler()V",
        "Lorg/codehaus/jackson/type/JavaType;->setTypeHandler()V",
        "Lorg/codehaus/jackson/type/JavaType;->_widen()Lorg/codehaus/jackson/type/JavaType;"
    ],
    "Ljava/lang/reflect/Modifier;": [
        "Ljava/lang/reflect/Modifier;->isFinal()Z",
        "Ljava/lang/reflect/Modifier;->isAbstract()Z"
    ],
    "Lorg/apache/commons/codec/binary/Base64;": [
        "Lorg/apache/commons/codec/binary/Base64;->avail()I",
        "Lorg/apache/commons/codec/binary/Base64;->getEncodeLength()J",
        "Lorg/apache/commons/codec/binary/Base64;->reset()V",
        "Lorg/apache/commons/codec/binary/Base64;->isUrlSafe()Z",
        "Lorg/apache/commons/codec/binary/Base64;->readResults()I",
        "Lorg/apache/commons/codec/binary/Base64;->encode()[B",
        "Lorg/apache/commons/codec/binary/Base64;->isBase64()Z",
        "Lorg/apache/commons/codec/binary/Base64;->isWhiteSpace()Z",
        "Lorg/apache/commons/codec/binary/Base64;->setInitialBuffer()V",
        "Lorg/apache/commons/codec/binary/Base64;->toIntegerBytes()[B",
        "Lorg/apache/commons/codec/binary/Base64;->decode()V",
        "Lorg/apache/commons/codec/binary/Base64;->encodeBase64()[B",
        "Lorg/apache/commons/codec/binary/Base64;->decode()[B",
        "Lorg/apache/commons/codec/binary/Base64;->containsBase64Byte()Z",
        "Lorg/apache/commons/codec/binary/Base64;->resizeBuffer()V",
        "Lorg/apache/commons/codec/binary/Base64;->decodeBase64()[B",
        "Lorg/apache/commons/codec/binary/Base64;->encode()V"
    ],
    "Lorg/apache/commons/codec/binary/StringUtils;": [
        "Lorg/apache/commons/codec/binary/StringUtils;->newIllegalStateException()Ljava/lang/IllegalStateException;",
        "Lorg/apache/commons/codec/binary/StringUtils;->getBytesUtf8()[B",
        "Lorg/apache/commons/codec/binary/StringUtils;->getBytesUnchecked()[B",
        "Lorg/apache/commons/codec/binary/StringUtils;->newStringUtf8()Ljava/lang/String;",
        "Lorg/apache/commons/codec/binary/StringUtils;->newString()Ljava/lang/String;"
    ],
    "Lorg/apache/commons/codec/binary/Hex;": [
        "Lorg/apache/commons/codec/binary/Hex;->getCharsetName()Ljava/lang/String;",
        "Lorg/apache/commons/codec/binary/Hex;->encodeHexString()Ljava/lang/String;",
        "Lorg/apache/commons/codec/binary/Hex;->decodeHex()[B",
        "Lorg/apache/commons/codec/binary/Hex;->encodeHex()[C",
        "Lorg/apache/commons/codec/binary/Hex;->toDigit()I"
    ],
    "Ljava/lang/ClassCastException;": [
        "Ljava/lang/ClassCastException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->getMessage()Ljava/lang/String;",
        "Ljava/io/UnsupportedEncodingException;->printStackTrace()V"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->getDecorView()Landroid/view/View;",
        "Landroid/view/Window;->setFlags()V"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->setImageResource()V",
        "Landroid/widget/ImageButton;->setBackgroundDrawable()V",
        "Landroid/widget/ImageButton;->setOnClickListener()V",
        "Landroid/widget/ImageButton;->setPadding()V"
    ],
    "Landroid/util/TypedValue;": [
        "Landroid/util/TypedValue;->applyDimension()F"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->getParent()Landroid/view/ViewParent;",
        "Landroid/widget/RelativeLayout;->removeAllViews()V",
        "Landroid/widget/RelativeLayout;->setVisibility()V",
        "Landroid/widget/RelativeLayout;->setGravity()V",
        "Landroid/widget/RelativeLayout;->setLayoutParams()V",
        "Landroid/widget/RelativeLayout;->addView()V"
    ],
    "Le;": [
        "Le;->a()Ljava/lang/String;",
        "Le;->a()Landroid/os/Bundle;",
        "Le;->a()Ljava/util/HashMap;"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->getDataString()Ljava/lang/String;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setClass()Landroid/content/Intent;",
        "Landroid/content/Intent;->setComponent()Landroid/content/Intent;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->toString()Ljava/lang/String;",
        "Landroid/content/Intent;->setType()Landroid/content/Intent;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getBundleExtra()Landroid/os/Bundle;",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;"
    ],
    "Landroid/content/ActivityNotFoundException;": [
        "Landroid/content/ActivityNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->refreshDrawableState()V",
        "Landroid/widget/LinearLayout;->setAlwaysDrawnWithCacheEnabled()V",
        "Landroid/widget/LinearLayout;->setGravity()V",
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->setOrientation()V",
        "Landroid/widget/LinearLayout;->getChildAt()Landroid/view/View;",
        "Landroid/widget/LinearLayout;->removeAllViews()V",
        "Landroid/widget/LinearLayout;->setPadding()V",
        "Landroid/widget/LinearLayout;->clearDisappearingChildren()V",
        "Landroid/widget/LinearLayout;->removeView()V",
        "Landroid/widget/LinearLayout;->clearAnimation()V",
        "Landroid/widget/LinearLayout;->clearFocus()V",
        "Landroid/widget/LinearLayout;->setLayoutParams()V"
    ],
    "Lcom/google/ads/InterstitialAd;": [
        "Lcom/google/ads/InterstitialAd;->isReady()Z"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->retainAll()Z",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->clear()V",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->contains()Z",
        "Ljava/util/Set;->remove()Z",
        "Ljava/util/Set;->addAll()Z",
        "Ljava/util/Set;->size()I"
    ],
    "Landroid/content/BroadcastReceiver;": [
        "Landroid/content/BroadcastReceiver;->onReceive()V"
    ],
    "Lcom/google/ads/InstallReceiver;": [
        "Lcom/google/ads/InstallReceiver;->a()V",
        "Lcom/google/ads/InstallReceiver;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/AdView;": [
        "Lcom/google/ads/AdView;->isInEditMode()Z",
        "Lcom/google/ads/AdView;->setLayoutParams()V",
        "Lcom/google/ads/AdView;->addView()V",
        "Lcom/google/ads/AdView;->a()V",
        "Lcom/google/ads/AdView;->setGravity()V",
        "Lcom/google/ads/AdView;->isRefreshing()Z",
        "Lcom/google/ads/AdView;->loadAd()V"
    ],
    "Landroid/util/AttributeSet;": [
        "Landroid/util/AttributeSet;->getAttributeIntValue()I",
        "Landroid/util/AttributeSet;->getAttributeValue()Ljava/lang/String;"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setPadding()V",
        "Landroid/widget/TextView;->setGravity()V",
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setTypeface()V",
        "Landroid/widget/TextView;->setTextSize()V"
    ],
    "Lcom/google/ads/AdRequest$Gender;": [
        "Lcom/google/ads/AdRequest$Gender;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/api/client/escape/Escaper;": [
        "Lcom/google/api/client/escape/Escaper;->escape()Ljava/lang/String;"
    ],
    "Lcom/google/api/client/escape/PercentEscaper;": [
        "Lcom/google/api/client/escape/PercentEscaper;->createSafeOctets()[Z",
        "Lcom/google/api/client/escape/PercentEscaper;->escape()Ljava/lang/String;",
        "Lcom/google/api/client/escape/PercentEscaper;->escapeSlow()Ljava/lang/String;"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->charAt()C",
        "Ljava/lang/CharSequence;->length()I"
    ],
    "Lcom/google/api/client/escape/Platform;": [
        "Lcom/google/api/client/escape/Platform;->charBufferFromThreadLocal()[C"
    ],
    "Lcom/google/api/client/escape/UnicodeEscaper;": [
        "Lcom/google/api/client/escape/UnicodeEscaper;->nextEscapeIndex()I",
        "Lcom/google/api/client/escape/UnicodeEscaper;->escape()[C",
        "Lcom/google/api/client/escape/UnicodeEscaper;->codePointAt()I",
        "Lcom/google/api/client/escape/UnicodeEscaper;->growBuffer()[C"
    ],
    "Lcom/google/gson/aa;": [
        "Lcom/google/gson/aa;->a()V",
        "Lcom/google/gson/aa;->a()I",
        "Lcom/google/gson/aa;->a()Z",
        "Lcom/google/gson/aa;->a()Lcom/google/gson/az;"
    ],
    "Lcom/google/gson/y;": [
        "Lcom/google/gson/y;->a()Z",
        "Lcom/google/gson/y;->a()I",
        "Lcom/google/gson/y;->a()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/y;->a()Lcom/google/gson/JsonArray;",
        "Lcom/google/gson/y;->a()Ljava/lang/String;",
        "Lcom/google/gson/y;->a()Lcom/google/gson/JsonPrimitive;",
        "Lcom/google/gson/y;->a()Lcom/google/gson/JsonObject;",
        "Lcom/google/gson/y;->a()Lcom/google/gson/az;",
        "Lcom/google/gson/y;->a()V",
        "Lcom/google/gson/y;->a()Lcom/google/gson/JsonNull;"
    ],
    "Lcom/google/gson/JsonPrimitive;": [
        "Lcom/google/gson/JsonPrimitive;->isString()Z",
        "Lcom/google/gson/JsonPrimitive;->a()Ljava/lang/Object;",
        "Lcom/google/gson/JsonPrimitive;->a()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonPrimitive;->isBoolean()Z",
        "Lcom/google/gson/JsonPrimitive;->a()V",
        "Lcom/google/gson/JsonPrimitive;->getAsString()Ljava/lang/String;",
        "Lcom/google/gson/JsonPrimitive;->isNumber()Z"
    ],
    "Lcom/google/gson/JsonObject;": [
        "Lcom/google/gson/JsonObject;->add()V",
        "Lcom/google/gson/JsonObject;->entrySet()Ljava/util/Set;",
        "Lcom/google/gson/JsonObject;->get()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonObject;->a()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/JsonNull;": [
        "Lcom/google/gson/JsonNull;->a()Lcom/google/gson/JsonNull;"
    ],
    "Lcom/google/gson/JsonArray;": [
        "Lcom/google/gson/JsonArray;->getAsJsonArray()Lcom/google/gson/JsonArray;",
        "Lcom/google/gson/JsonArray;->iterator()Ljava/util/Iterator;",
        "Lcom/google/gson/JsonArray;->size()I",
        "Lcom/google/gson/JsonArray;->get()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/JsonArray;->add()V"
    ],
    "Lcom/google/gson/ap;": [
        "Lcom/google/gson/ap;->a()Z"
    ],
    "Ljava/lang/reflect/GenericArrayType;": [
        "Ljava/lang/reflect/GenericArrayType;->getGenericComponentType()Ljava/lang/reflect/Type;"
    ],
    "Lcom/google/gson/FieldAttributes;": [
        "Lcom/google/gson/FieldAttributes;->a()V",
        "Lcom/google/gson/FieldAttributes;->getDeclaredType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/FieldAttributes;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Lcom/google/gson/FieldAttributes;->a()Z",
        "Lcom/google/gson/FieldAttributes;->getAnnotations()Ljava/util/Collection;",
        "Lcom/google/gson/FieldAttributes;->hasModifier()Z",
        "Lcom/google/gson/FieldAttributes;->a()I",
        "Lcom/google/gson/FieldAttributes;->a()Ljava/lang/reflect/Field;",
        "Lcom/google/gson/FieldAttributes;->getName()Ljava/lang/String;",
        "Lcom/google/gson/FieldAttributes;->getDeclaredClass()Ljava/lang/Class;",
        "Lcom/google/gson/FieldAttributes;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/at;": [
        "Lcom/google/gson/at;->a()V"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->getGenericType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Field;->getType()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->isSynthetic()Z",
        "Ljava/lang/reflect/Field;->getModifiers()I",
        "Ljava/lang/reflect/Field;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Field;->getAnnotations()[Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/Field;->set()V"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->add()Z",
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;"
    ],
    "Ljava/lang/annotation/Annotation;": [
        "Ljava/lang/annotation/Annotation;->annotationType()Ljava/lang/Class;"
    ],
    "Lcom/google/gson/b;": [
        "Lcom/google/gson/b;->a()Ljava/lang/Object;",
        "Lcom/google/gson/b;->a()V"
    ],
    "Lcom/google/gson/ah;": [
        "Lcom/google/gson/ah;->size()I",
        "Lcom/google/gson/ah;->put()Ljava/lang/Object;",
        "Lcom/google/gson/ah;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/LinkedHashMap;": [
        "Ljava/util/LinkedHashMap;->clear()V",
        "Ljava/util/LinkedHashMap;->size()I"
    ],
    "Lcom/google/gson/an;": [
        "Lcom/google/gson/an;->a()Lcom/google/gson/ObjectNavigator;",
        "Lcom/google/gson/an;->a()Lcom/google/gson/k;"
    ],
    "Lcom/google/gson/ObjectNavigator;": [
        "Lcom/google/gson/ObjectNavigator;->a()V"
    ],
    "Lcom/google/gson/JsonElement;": [
        "Lcom/google/gson/JsonElement;->getAsNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonElement;->getAsJsonObject()Lcom/google/gson/JsonObject;",
        "Lcom/google/gson/JsonElement;->getAsShort()S",
        "Lcom/google/gson/JsonElement;->a()V",
        "Lcom/google/gson/JsonElement;->getAsBoolean()Z",
        "Lcom/google/gson/JsonElement;->isJsonObject()Z",
        "Lcom/google/gson/JsonElement;->isJsonNull()Z",
        "Lcom/google/gson/JsonElement;->getAsJsonNull()Lcom/google/gson/JsonNull;",
        "Lcom/google/gson/JsonElement;->getAsInt()I",
        "Lcom/google/gson/JsonElement;->getAsCharacter()C",
        "Lcom/google/gson/JsonElement;->getAsDouble()D",
        "Lcom/google/gson/JsonElement;->getAsByte()B",
        "Lcom/google/gson/JsonElement;->getAsBigDecimal()Ljava/math/BigDecimal;",
        "Lcom/google/gson/JsonElement;->a()Ljava/lang/Object;",
        "Lcom/google/gson/JsonElement;->getAsFloat()F",
        "Lcom/google/gson/JsonElement;->isJsonPrimitive()Z",
        "Lcom/google/gson/JsonElement;->getAsJsonPrimitive()Lcom/google/gson/JsonPrimitive;",
        "Lcom/google/gson/JsonElement;->getAsLong()J",
        "Lcom/google/gson/JsonElement;->isJsonArray()Z",
        "Lcom/google/gson/JsonElement;->getAsString()Ljava/lang/String;",
        "Lcom/google/gson/JsonElement;->getAsJsonArray()Lcom/google/gson/JsonArray;",
        "Lcom/google/gson/JsonElement;->getAsBigInteger()Ljava/math/BigInteger;"
    ],
    "Lcom/google/gson/k;": [
        "Lcom/google/gson/k;->a()Ljava/lang/String;"
    ],
    "Lcom/google/gson/ad;": [
        "Lcom/google/gson/ad;->a()Ljava/lang/Object;",
        "Lcom/google/gson/ad;->a()V",
        "Lcom/google/gson/ad;->start()V",
        "Lcom/google/gson/ad;->a()Z",
        "Lcom/google/gson/ad;->end()V",
        "Lcom/google/gson/ad;->a()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/ao;": [
        "Lcom/google/gson/ao;->a()V",
        "Lcom/google/gson/ao;->a()Lcom/google/gson/ap;",
        "Lcom/google/gson/ao;->a()Ljava/lang/Object;",
        "Lcom/google/gson/ao;->a()Lcom/google/gson/ao;"
    ],
    "Lcom/google/gson/JsonSerializer;": [
        "Lcom/google/gson/JsonSerializer;->serialize()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/aj;": [
        "Lcom/google/gson/aj;->a()Lcom/google/gson/ao;",
        "Lcom/google/gson/aj;->a()Z"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->set()V",
        "Ljava/lang/reflect/Array;->getLength()I",
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/be;": [
        "Lcom/google/gson/be;->a()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/be;->a()Lcom/google/gson/bb;",
        "Lcom/google/gson/be;->a()Lcom/google/gson/bc;"
    ],
    "Lcom/google/gson/bc;": [
        "Lcom/google/gson/bc;->a()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/bc;->a()Ljava/lang/Class;"
    ],
    "Lcom/google/gson/d;": [
        "Lcom/google/gson/d;->a()Ljava/lang/IllegalStateException;",
        "Lcom/google/gson/d;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/gson/a;": [
        "Lcom/google/gson/a;->a()Z"
    ],
    "Lcom/google/gson/am;": [
        "Lcom/google/gson/am;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/x;": [
        "Lcom/google/gson/x;->a()Ljava/lang/String;",
        "Lcom/google/gson/x;->a()Ljava/lang/Object;",
        "Lcom/google/gson/x;->getTarget()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/bb;": [
        "Lcom/google/gson/bb;->a()Z",
        "Lcom/google/gson/bb;->a()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/bb;->a()Ljava/lang/Class;"
    ],
    "Ljava/lang/Appendable;": [
        "Ljava/lang/Appendable;->append()Ljava/lang/Appendable;"
    ],
    "Lcom/google/gson/bg;": [
        "Lcom/google/gson/bg;->a()Ljava/lang/Class;",
        "Lcom/google/gson/bg;->a()Z"
    ],
    "Lcom/google/gson/au;": [
        "Lcom/google/gson/au;->a()V",
        "Lcom/google/gson/au;->a()Z",
        "Lcom/google/gson/au;->a()Ljava/lang/Class;"
    ],
    "Ljava/util/logging/Logger;": [
        "Ljava/util/logging/Logger;->getLogger()Ljava/util/logging/Logger;",
        "Ljava/util/logging/Logger;->log()V"
    ],
    "Lcom/google/gson/aq;": [
        "Lcom/google/gson/aq;->a()I",
        "Lcom/google/gson/aq;->a()Lcom/google/gson/aq;",
        "Lcom/google/gson/aq;->toString()Ljava/lang/String;",
        "Lcom/google/gson/aq;->a()Z",
        "Lcom/google/gson/aq;->a()Ljava/lang/Object;",
        "Lcom/google/gson/aq;->a()V"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonDeserializer;": [
        "Lcom/google/gson/JsonDeserializer;->deserialize()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/ExclusionStrategy;": [
        "Lcom/google/gson/ExclusionStrategy;->shouldSkipField()Z",
        "Lcom/google/gson/ExclusionStrategy;->shouldSkipClass()Z"
    ],
    "Lcom/google/gson/ObjectNavigator$Visitor;": [
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitArray()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitUsingCustomHandler()Z",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitPrimitive()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitObjectField()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitArrayField()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->startVisitingObject()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->visitFieldUsingCustomHandler()Z",
        "Lcom/google/gson/ObjectNavigator$Visitor;->getTarget()Ljava/lang/Object;",
        "Lcom/google/gson/ObjectNavigator$Visitor;->start()V",
        "Lcom/google/gson/ObjectNavigator$Visitor;->end()V"
    ],
    "Ljava/lang/reflect/AccessibleObject;": [
        "Ljava/lang/reflect/AccessibleObject;->setAccessible()V"
    ],
    "Lcom/google/gson/FieldNamingStrategy;": [
        "Lcom/google/gson/FieldNamingStrategy;->translateName()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->getParameterTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/InstanceCreator;": [
        "Lcom/google/gson/InstanceCreator;->createInstance()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/ai;": [
        "Lcom/google/gson/ai;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/u;": [
        "Lcom/google/gson/u;->a()V"
    ],
    "Lcom/google/gson/ae;": [
        "Lcom/google/gson/ae;->a()V"
    ],
    "Lcom/google/gson/ModifyFirstLetterNamingPolicy;": [
        "Lcom/google/gson/ModifyFirstLetterNamingPolicy;->a()Ljava/lang/String;"
    ],
    "Lcom/google/gson/ba;": [
        "Lcom/google/gson/ba;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/Error;": [
        "Ljava/lang/Error;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->pop()Ljava/lang/Object;",
        "Ljava/util/Stack;->push()Ljava/lang/Object;",
        "Ljava/util/Stack;->iterator()Ljava/util/Iterator;"
    ],
    "[Lcom/google/gson/LongSerializationPolicy;": [
        "[Lcom/google/gson/LongSerializationPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/LongSerializationPolicy$b;": [
        "Lcom/google/gson/LongSerializationPolicy$b;->a()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/as;": [
        "Lcom/google/gson/as;->a()Ljava/lang/String;"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;",
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->matches()Z"
    ],
    "[Lcom/google/gson/FieldNamingPolicy;": [
        "[Lcom/google/gson/FieldNamingPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/n;": [
        "Lcom/google/gson/n;->a()Z"
    ],
    "Ljava/lang/reflect/WildcardType;": [
        "Ljava/lang/reflect/WildcardType;->getUpperBounds()[Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->printStackTrace()V",
        "Ljava/lang/Throwable;->getLocalizedMessage()Ljava/lang/String;",
        "Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;",
        "Ljava/lang/Throwable;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/gson/ax;": [
        "Lcom/google/gson/ax;->a()I",
        "Lcom/google/gson/ax;->a()V",
        "Lcom/google/gson/ax;->a()C",
        "Lcom/google/gson/ax;->a()Ljava/lang/String;"
    ],
    "Lcom/google/gson/av;": [
        "Lcom/google/gson/av;->a()Ljava/lang/String;"
    ],
    "Lcom/google/gson/annotations/Expose;": [
        "Lcom/google/gson/annotations/Expose;->deserialize()Z",
        "Lcom/google/gson/annotations/Expose;->serialize()Z"
    ],
    "Lcom/google/gson/p;": [
        "Lcom/google/gson/p;->a()Ljava/lang/Object;",
        "Lcom/google/gson/p;->getTarget()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/az;": [
        "Lcom/google/gson/az;->a()Lcom/google/gson/az;"
    ],
    "Lcom/google/gson/h;": [
        "Lcom/google/gson/h;->a()Ljava/lang/String;",
        "Lcom/google/gson/h;->a()V"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->parseByte()B"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->parseShort()S"
    ],
    "Lcom/google/gson/s;": [
        "Lcom/google/gson/s;->a()Ljava/lang/Object;",
        "Lcom/google/gson/s;->getTarget()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/annotations/Since;": [
        "Lcom/google/gson/annotations/Since;->value()D"
    ],
    "Lcom/google/gson/annotations/Until;": [
        "Lcom/google/gson/annotations/Until;->value()D"
    ],
    "Lcom/google/gson/bi;": [
        "Lcom/google/gson/bi;->a()Z"
    ],
    "Lcom/google/gson/ab$a;": [
        "Lcom/google/gson/ab$a;->a()V"
    ],
    "Lcom/google/gson/annotations/SerializedName;": [
        "Lcom/google/gson/annotations/SerializedName;->value()Ljava/lang/String;"
    ],
    "Lcom/google/gson/v;": [
        "Lcom/google/gson/v;->a()Ljava/lang/String;"
    ],
    "Lcom/google/gson/JsonStreamParser;": [
        "Lcom/google/gson/JsonStreamParser;->next()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/JsonParseException;": [
        "Lcom/google/gson/JsonParseException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lcom/google/gson/JsonParser;": [
        "Lcom/google/gson/JsonParser;->parse()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/ac;": [
        "Lcom/google/gson/ac;->a()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/f;": [
        "Lcom/google/gson/f;->a()Lcom/google/gson/JsonDeserializer;",
        "Lcom/google/gson/f;->a()Lcom/google/gson/aq;"
    ],
    "Lcom/google/gson/FieldNamingPolicy;": [
        "Lcom/google/gson/FieldNamingPolicy;->a()Lcom/google/gson/k;"
    ],
    "Lcom/google/gson/GsonBuilder;": [
        "Lcom/google/gson/GsonBuilder;->a()Lcom/google/gson/GsonBuilder;"
    ],
    "Lcom/google/gson/JsonDeserializationContext;": [
        "Lcom/google/gson/JsonDeserializationContext;->deserialize()Ljava/lang/Object;"
    ],
    "Ljava/io/StringWriter;": [
        "Ljava/io/StringWriter;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/gson/w;": [
        "Lcom/google/gson/w;->a()V"
    ],
    "Lcom/google/gson/reflect/TypeToken;": [
        "Lcom/google/gson/reflect/TypeToken;->isAssignableFrom()Z",
        "Lcom/google/gson/reflect/TypeToken;->getType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/reflect/TypeToken;->a()Z",
        "Lcom/google/gson/reflect/TypeToken;->a()Ljava/lang/AssertionError;",
        "Lcom/google/gson/reflect/TypeToken;->a()Ljava/lang/Class;"
    ],
    "Ljava/lang/reflect/TypeVariable;": [
        "Ljava/lang/reflect/TypeVariable;->getName()Ljava/lang/String;"
    ],
    "Landroid/view/ViewGroup;": [
        "Landroid/view/ViewGroup;->removeViewAt()V",
        "Landroid/view/ViewGroup;->getChildAt()Landroid/view/View;",
        "Landroid/view/ViewGroup;->startAnimation()V",
        "Landroid/view/ViewGroup;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/ViewGroup;->getChildCount()I",
        "Landroid/view/ViewGroup;->getAnimation()Landroid/view/animation/Animation;",
        "Landroid/view/ViewGroup;->addView()V"
    ],
    "Lcom/ivbhb/qufndjqke/MyAdapter;": [
        "Lcom/ivbhb/qufndjqke/MyAdapter;->getCursor()Landroid/database/Cursor;",
        "Lcom/ivbhb/qufndjqke/MyAdapter;->setTextColor()V"
    ],
    "Landroid/widget/SimpleCursorAdapter;": [
        "Landroid/widget/SimpleCursorAdapter;->getView()Landroid/view/View;",
        "Landroid/widget/SimpleCursorAdapter;->bindView()V"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->clipRect()Z",
        "Landroid/graphics/Canvas;->drawText()V",
        "Landroid/graphics/Canvas;->restore()V"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextInt()I",
        "Ljava/util/Random;->setSeed()V",
        "Ljava/util/Random;->nextBytes()V"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->addElement()V",
        "Ljava/util/Vector;->size()I",
        "Ljava/util/Vector;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Vector;->elementAt()Ljava/lang/Object;",
        "Ljava/util/Vector;->removeAllElements()V",
        "Ljava/util/Vector;->removeElementAt()V"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;"
    ],
    "Lcom/ivbhb/qufndjqke/Scen;": [
        "Lcom/ivbhb/qufndjqke/Scen;->release()V",
        "Lcom/ivbhb/qufndjqke/Scen;->buildLine()V",
        "Lcom/ivbhb/qufndjqke/Scen;->addLine()Z",
        "Lcom/ivbhb/qufndjqke/Scen;->MoveToGoal()V",
        "Lcom/ivbhb/qufndjqke/Scen;->Init()V",
        "Lcom/ivbhb/qufndjqke/Scen;->clearGoal()V",
        "Lcom/ivbhb/qufndjqke/Scen;->paint()V"
    ],
    "Lcom/ivbhb/qufndjqke/Tools;": [
        "Lcom/ivbhb/qufndjqke/Tools;->loadPNG()Landroid/graphics/Bitmap;",
        "Lcom/ivbhb/qufndjqke/Tools;->GetRandom()I",
        "Lcom/ivbhb/qufndjqke/Tools;->ReleaseV()V",
        "Lcom/ivbhb/qufndjqke/Tools;->CollLineSeg()[F"
    ],
    "Lcom/ivbhb/qufndjqke/SoundClass;": [
        "Lcom/ivbhb/qufndjqke/SoundClass;->PlaySound()V",
        "Lcom/ivbhb/qufndjqke/SoundClass;->release()V",
        "Lcom/ivbhb/qufndjqke/SoundClass;->setDecibel()V"
    ],
    "Lcom/ivbhb/qufndjqke/Line;": [
        "Lcom/ivbhb/qufndjqke/Line;->paint()Z",
        "Lcom/ivbhb/qufndjqke/Line;->Bao()V",
        "Lcom/ivbhb/qufndjqke/Line;->isOut()Z"
    ],
    "Lcom/ivbhb/qufndjqke/Prop;": [
        "Lcom/ivbhb/qufndjqke/Prop;->isOut()Z",
        "Lcom/ivbhb/qufndjqke/Prop;->disappear()V",
        "Lcom/ivbhb/qufndjqke/Prop;->paint()Z"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->contains()Z",
        "Landroid/content/SharedPreferences;->getAll()Ljava/util/Map;"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->clear()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z"
    ],
    "Landroid/media/SoundPool;": [
        "Landroid/media/SoundPool;->stop()V",
        "Landroid/media/SoundPool;->load()I",
        "Landroid/media/SoundPool;->play()I",
        "Landroid/media/SoundPool;->release()V"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->getHeight()I",
        "Landroid/graphics/Bitmap;->recycle()V",
        "Landroid/graphics/Bitmap;->compress()Z",
        "Landroid/graphics/Bitmap;->createScaledBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->intersects()Z",
        "Landroid/graphics/Rect;->contains()Z"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->breakText()I",
        "Landroid/graphics/Paint;->setAlpha()V",
        "Landroid/graphics/Paint;->setTypeface()Landroid/graphics/Typeface;",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->setTextAlign()V",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->setFlags()V",
        "Landroid/graphics/Paint;->setXfermode()Landroid/graphics/Xfermode;"
    ],
    "Lcom/ivbhb/qufndjqke/MyCanvas;": [
        "Lcom/ivbhb/qufndjqke/MyCanvas;->invalidate()V",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->release()V",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->getBottom()I",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->postInvalidate()V",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->setPage()V",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->DataRun()V",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->getContext()Landroid/content/Context;",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->startGame()V",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->getAnimation()Landroid/view/animation/Animation;",
        "Lcom/ivbhb/qufndjqke/MyCanvas;->startAnimation()V"
    ],
    "Lcom/ivbhb/qufndjqke/JumpingNow;": [
        "Lcom/ivbhb/qufndjqke/JumpingNow;->findViewById()Landroid/view/View;",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->requestWindowFeature()Z",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->setContentView()V",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->addScoreList()V",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->getWindow()Landroid/view/Window;",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->snapScreen()Landroid/graphics/Bitmap;",
        "Lcom/ivbhb/qufndjqke/JumpingNow;->getSystemService()Ljava/lang/Object;"
    ],
    "Lcom/ivbhb/qufndjqke/Pref;": [
        "Lcom/ivbhb/qufndjqke/Pref;->loadName()Ljava/lang/String;",
        "Lcom/ivbhb/qufndjqke/Pref;->savetime()V",
        "Lcom/ivbhb/qufndjqke/Pref;->loadtime()I",
        "Lcom/ivbhb/qufndjqke/Pref;->saveOption()V",
        "Lcom/ivbhb/qufndjqke/Pref;->loadOption()Z"
    ],
    "Lcom/ivbhb/qufndjqke/Ball;": [
        "Lcom/ivbhb/qufndjqke/Ball;->isHurt()Z",
        "Lcom/ivbhb/qufndjqke/Ball;->paint()V",
        "Lcom/ivbhb/qufndjqke/Ball;->got()V",
        "Lcom/ivbhb/qufndjqke/Ball;->addProp()V",
        "Lcom/ivbhb/qufndjqke/Ball;->Init()V",
        "Lcom/ivbhb/qufndjqke/Ball;->gotProp()V"
    ],
    "Lcom/ivbhb/qufndjqke/TimeBar;": [
        "Lcom/ivbhb/qufndjqke/TimeBar;->setState()V",
        "Lcom/ivbhb/qufndjqke/TimeBar;->paint()V"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->delete()I",
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;",
        "Landroid/content/ContentResolver;->notifyChange()V",
        "Landroid/content/ContentResolver;->query()Landroid/database/Cursor;"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->moveToPosition()Z",
        "Landroid/database/Cursor;->moveToFirst()Z",
        "Landroid/database/Cursor;->setNotificationUri()V",
        "Landroid/database/Cursor;->getColumnIndex()I",
        "Landroid/database/Cursor;->getLong()J",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->getInt()I",
        "Landroid/database/Cursor;->moveToNext()Z",
        "Landroid/database/Cursor;->isAfterLast()Z"
    ],
    "Lcom/ivbhb/qufndjqke/ZiDan;": [
        "Lcom/ivbhb/qufndjqke/ZiDan;->Paint()Z",
        "Lcom/ivbhb/qufndjqke/ZiDan;->setGoal()V"
    ],
    "Lcom/ivbhb/qufndjqke/myButton;": [
        "Lcom/ivbhb/qufndjqke/myButton;->isContains()Z",
        "Lcom/ivbhb/qufndjqke/myButton;->paint()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->setDefaultUncaughtExceptionHandler()V",
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->getAction()I"
    ],
    "Landroid/view/animation/AnimationUtils;": [
        "Landroid/view/animation/AnimationUtils;->loadAnimation()Landroid/view/animation/Animation;"
    ],
    "Landroid/view/animation/Animation;": [
        "Landroid/view/animation/Animation;->setDuration()V",
        "Landroid/view/animation/Animation;->setInterpolator()V",
        "Landroid/view/animation/Animation;->setAnimationListener()V"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->setCursorVisible()V",
        "Landroid/widget/EditText;->setText()V",
        "Landroid/widget/EditText;->setTextSize()V",
        "Landroid/widget/EditText;->setBackgroundColor()V",
        "Landroid/widget/EditText;->setTextColor()V",
        "Landroid/widget/EditText;->setTypeface()V"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setAdapter()V",
        "Landroid/widget/ListView;->startAnimation()V"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->draw()V",
        "Landroid/view/View;->setLayoutParams()V",
        "Landroid/view/View;->setOnClickListener()V",
        "Landroid/view/View;->inflate()Landroid/view/View;",
        "Landroid/view/View;->invalidate()V",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/view/View;->clearAnimation()V",
        "Landroid/view/View;->setOnTouchListener()V",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->startAnimation()V",
        "Landroid/view/View;->setBackgroundDrawable()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->createFromAsset()Landroid/graphics/Typeface;"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->getDefaultSensor()Landroid/hardware/Sensor;",
        "Landroid/hardware/SensorManager;->registerListener()Z"
    ],
    "Landroid/view/animation/AlphaAnimation;": [
        "Landroid/view/animation/AlphaAnimation;->setDuration()V",
        "Landroid/view/animation/AlphaAnimation;->setStartOffset()V",
        "Landroid/view/animation/AlphaAnimation;->setAnimationListener()V",
        "Landroid/view/animation/AlphaAnimation;->setFillAfter()V"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->setOnCancelListener()V",
        "Landroid/app/AlertDialog;->cancel()V",
        "Landroid/app/AlertDialog;->isShowing()Z",
        "Landroid/app/AlertDialog;->show()V"
    ],
    "Landroid/widget/SimpleAdapter;": [
        "Landroid/widget/SimpleAdapter;->getView()Landroid/view/View;",
        "Landroid/widget/SimpleAdapter;->setViewText()V"
    ],
    "Landroid/database/sqlite/SQLiteDatabase;": [
        "Landroid/database/sqlite/SQLiteDatabase;->insert()J",
        "Landroid/database/sqlite/SQLiteDatabase;->close()V",
        "Landroid/database/sqlite/SQLiteDatabase;->delete()I",
        "Landroid/database/sqlite/SQLiteDatabase;->query()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->rawQuery()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->execSQL()V",
        "Landroid/database/sqlite/SQLiteDatabase;->update()I"
    ],
    "Lcom/ivbhb/qufndjqke/SQL/SQLHelper;": [
        "Lcom/ivbhb/qufndjqke/SQL/SQLHelper;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcom/ivbhb/qufndjqke/SQL/SQLHelper;->onCreate()V",
        "Lcom/ivbhb/qufndjqke/SQL/SQLHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Landroid/content/UriMatcher;": [
        "Landroid/content/UriMatcher;->addURI()V",
        "Landroid/content/UriMatcher;->match()I"
    ],
    "Lcom/ivbhb/qufndjqke/SQL/MyProvider;": [
        "Lcom/ivbhb/qufndjqke/SQL/MyProvider;->getContext()Landroid/content/Context;"
    ],
    "Landroid/text/TextUtils;": [
        "Landroid/text/TextUtils;->isEmpty()Z"
    ],
    "Landroid/content/ContentUris;": [
        "Landroid/content/ContentUris;->withAppendedId()Landroid/net/Uri;"
    ],
    "Lcom/waps/SDKUtils;": [
        "Lcom/waps/SDKUtils;->saveDataToLocal()V",
        "Lcom/waps/SDKUtils;->openUrlByBrowser()V",
        "Lcom/waps/SDKUtils;->deleteLocalFiles()V",
        "Lcom/waps/SDKUtils;->goToTargetBrowser()V",
        "Lcom/waps/SDKUtils;->loadStreamFromLocal()Ljava/io/InputStream;",
        "Lcom/waps/SDKUtils;->loadStringFromLocal()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->createMoreShortcut_forUrl()V",
        "Lcom/waps/SDKUtils;->getLocationByGPS()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->getMac_Address()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->openUrl()Z",
        "Lcom/waps/SDKUtils;->getInstalled()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->isTimeLimited()Z",
        "Lcom/waps/SDKUtils;->addBrowserBookmark()V",
        "Lcom/waps/SDKUtils;->getErrorLog()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->getLanguageCode()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->isClient()Z",
        "Lcom/waps/SDKUtils;->getLocationByNetwork()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->getDeviceName()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->getClassName()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->createShortcut_forUrl()V",
        "Lcom/waps/SDKUtils;->access$000()Landroid/content/Context;",
        "Lcom/waps/SDKUtils;->getUdid()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->openAd()V",
        "Lcom/waps/SDKUtils;->getAllPermissions()[Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->getAppInfoMap()Ljava/util/Map;",
        "Lcom/waps/SDKUtils;->isNull()Z",
        "Lcom/waps/SDKUtils;->createShortcut_forApp()V",
        "Lcom/waps/SDKUtils;->goToTargetBrowser_Intent()Landroid/content/Intent;",
        "Lcom/waps/SDKUtils;->getBrowserPackageName()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->access$100()Landroid/widget/RelativeLayout;",
        "Lcom/waps/SDKUtils;->getDeviceOSVersion()I",
        "Lcom/waps/SDKUtils;->isCmwap()Z",
        "Lcom/waps/SDKUtils;->getLocation()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->hasThePermission()Z",
        "Lcom/waps/SDKUtils;->getMetaData()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->getNetDataToStream()Ljava/io/InputStream;",
        "Lcom/waps/SDKUtils;->getRandomString()Ljava/lang/String;",
        "Lcom/waps/SDKUtils;->access$200()Landroid/widget/LinearLayout;",
        "Lcom/waps/SDKUtils;->submit()V"
    ],
    "Lcom/waps/AdView;": [
        "Lcom/waps/AdView;->a()Landroid/webkit/WebView;",
        "Lcom/waps/AdView;->a()Landroid/widget/RelativeLayout;",
        "Lcom/waps/AdView;->a()J",
        "Lcom/waps/AdView;->a()Ljava/lang/String;",
        "Lcom/waps/AdView;->a()Z",
        "Lcom/waps/AdView;->DisplayAd()V",
        "Lcom/waps/AdView;->a()Landroid/os/Handler;",
        "Lcom/waps/AdView;->a()I",
        "Lcom/waps/AdView;->a()Landroid/content/Context;"
    ],
    "Lcom/waps/AppConnect;": [
        "Lcom/waps/AppConnect;->getHistoryPointsName()Ljava/lang/String;",
        "Lcom/waps/AppConnect;->getHistoryPoints()I",
        "Lcom/waps/AppConnect;->getInstance()Lcom/waps/AppConnect;",
        "Lcom/waps/AppConnect;->getConfig_Sync()Ljava/lang/String;",
        "Lcom/waps/AppConnect;->showMore()V",
        "Lcom/waps/AppConnect;->getAdInfoList()Ljava/util/List;",
        "Lcom/waps/AppConnect;->a()Landroid/content/Context;",
        "Lcom/waps/AppConnect;->a()Ljava/util/concurrent/ScheduledExecutorService;",
        "Lcom/waps/AppConnect;->getIconAd()V",
        "Lcom/waps/AppConnect;->showOffers()V",
        "Lcom/waps/AppConnect;->getPushAd()V",
        "Lcom/waps/AppConnect;->showOffers_forTab()Landroid/content/Intent;",
        "Lcom/waps/AppConnect;->a()Lcom/waps/z;",
        "Lcom/waps/AppConnect;->a()Lcom/waps/o;",
        "Lcom/waps/AppConnect;->a()Ljava/lang/String;",
        "Lcom/waps/AppConnect;->showMore_forTab()Landroid/content/Intent;",
        "Lcom/waps/AppConnect;->a()Z",
        "Lcom/waps/AppConnect;->a()Ljava/lang/Class;",
        "Lcom/waps/AppConnect;->getInstanceNoConnect()Lcom/waps/AppConnect;",
        "Lcom/waps/AppConnect;->a()Lcom/waps/UpdatePointsNotifier;",
        "Lcom/waps/AppConnect;->showFeedback_forTab()Landroid/content/Intent;",
        "Lcom/waps/AppConnect;->setCrashReport()V",
        "Lcom/waps/AppConnect;->a()Ljava/util/List;",
        "Lcom/waps/AppConnect;->a()Ljava/util/Map;",
        "Lcom/waps/AppConnect;->a()Lorg/w3c/dom/Document;",
        "Lcom/waps/AppConnect;->a()Landroid/graphics/Bitmap;",
        "Lcom/waps/AppConnect;->a()V"
    ],
    "Lcom/waps/z;": [
        "Lcom/waps/z;->a()Ljava/lang/String;",
        "Lcom/waps/z;->a()V",
        "Lcom/waps/z;->a()[B",
        "Lcom/waps/z;->a()Z"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setIcon()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNeutralButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;"
    ],
    "Lcom/waps/i;": [
        "Lcom/waps/i;->a()V",
        "Lcom/waps/i;->a()Ljava/lang/Boolean;",
        "Lcom/waps/i;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/waps/UpdatePointsNotifier;": [
        "Lcom/waps/UpdatePointsNotifier;->getUpdatePoints()V",
        "Lcom/waps/UpdatePointsNotifier;->getUpdatePointsFailed()V"
    ],
    "Lcom/waps/q;": [
        "Lcom/waps/q;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/q;->a()Ljava/lang/Boolean;"
    ],
    "Lcom/waps/MiniAdView;": [
        "Lcom/waps/MiniAdView;->a()Landroid/widget/LinearLayout;",
        "Lcom/waps/MiniAdView;->getMiniAdClickListener()Landroid/view/View$OnClickListener;",
        "Lcom/waps/MiniAdView;->a()V",
        "Lcom/waps/MiniAdView;->showADS()V",
        "Lcom/waps/MiniAdView;->a()Ljava/util/List;",
        "Lcom/waps/MiniAdView;->a()Z",
        "Lcom/waps/MiniAdView;->DisplayAd()V",
        "Lcom/waps/MiniAdView;->a()I",
        "Lcom/waps/MiniAdView;->a()Landroid/graphics/Bitmap;"
    ],
    "Lcom/waps/a;": [
        "Lcom/waps/a;->a()V",
        "Lcom/waps/a;->a()[Ljava/lang/String;",
        "Lcom/waps/a;->a()Ljava/lang/String;",
        "Lcom/waps/a;->a()I"
    ],
    "Lcom/waps/aa;": [
        "Lcom/waps/aa;->a()V",
        "Lcom/waps/aa;->a()Ljava/lang/String;",
        "Lcom/waps/aa;->a()Z",
        "Lcom/waps/aa;->a()Landroid/content/Context;",
        "Lcom/waps/aa;->a()Lcom/waps/aa;",
        "Lcom/waps/aa;->a()Lcom/waps/z;"
    ],
    "Lcom/waps/ab;": [
        "Lcom/waps/ab;->start()V"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;",
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/io/PrintWriter;": [
        "Ljava/io/PrintWriter;->close()V"
    ],
    "Lcom/waps/ac;": [
        "Lcom/waps/ac;->a()Ljava/lang/Boolean;",
        "Lcom/waps/ac;->execute()Landroid/os/AsyncTask;"
    ],
    "Ljava/lang/Thread$UncaughtExceptionHandler;": [
        "Ljava/lang/Thread$UncaughtExceptionHandler;->uncaughtException()V"
    ],
    "Landroid/os/Process;": [
        "Landroid/os/Process;->killProcess()V",
        "Landroid/os/Process;->myPid()I"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->show()V",
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;"
    ],
    "Lcom/waps/p;": [
        "Lcom/waps/p;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/p;->a()V",
        "Lcom/waps/p;->a()Ljava/lang/Boolean;"
    ],
    "Lcom/waps/OffersWebView;": [
        "Lcom/waps/OffersWebView;->a()Z",
        "Lcom/waps/OffersWebView;->a()Landroid/webkit/WebView;",
        "Lcom/waps/OffersWebView;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/waps/OffersWebView;->getSystemService()Ljava/lang/Object;",
        "Lcom/waps/OffersWebView;->a()Ljava/util/Map;",
        "Lcom/waps/OffersWebView;->a()Ljava/lang/String;",
        "Lcom/waps/OffersWebView;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/waps/OffersWebView;->getIntent()Landroid/content/Intent;",
        "Lcom/waps/OffersWebView;->getFileStreamPath()Ljava/io/File;",
        "Lcom/waps/OffersWebView;->setRequestedOrientation()V",
        "Lcom/waps/OffersWebView;->requestWindowFeature()Z",
        "Lcom/waps/OffersWebView;->setContentView()V",
        "Lcom/waps/OffersWebView;->finish()V",
        "Lcom/waps/OffersWebView;->a()Landroid/widget/ProgressBar;",
        "Lcom/waps/OffersWebView;->startActivity()V",
        "Lcom/waps/OffersWebView;->a()V"
    ],
    "Lcom/waps/ad;": [
        "Lcom/waps/ad;->a()Z",
        "Lcom/waps/ad;->a()V",
        "Lcom/waps/ad;->a()Lcom/waps/z;",
        "Lcom/waps/ad;->a()Ljava/util/List;",
        "Lcom/waps/ad;->a()Lcom/waps/DisplayAdNotifier;",
        "Lcom/waps/ad;->a()Ljava/lang/String;"
    ],
    "Lcom/waps/k;": [
        "Lcom/waps/k;->a()V",
        "Lcom/waps/k;->a()Ljava/lang/Boolean;",
        "Lcom/waps/k;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/waps/s;": [
        "Lcom/waps/s;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/s;->a()Ljava/lang/Boolean;"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->loop()V",
        "Landroid/os/Looper;->myLooper()Landroid/os/Looper;",
        "Landroid/os/Looper;->prepare()V"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->getCanonicalPath()Ljava/lang/String;",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->canRead()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->isFile()Z",
        "Ljava/io/File;->toString()Ljava/lang/String;"
    ],
    "Lcom/waps/w;": [
        "Lcom/waps/w;->a()V",
        "Lcom/waps/w;->a()Ljava/lang/String;",
        "Lcom/waps/w;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/w;->a()J",
        "Lcom/waps/w;->publishProgress()V"
    ],
    "Landroid/view/animation/Transformation;": [
        "Landroid/view/animation/Transformation;->getMatrix()Landroid/graphics/Matrix;"
    ],
    "Landroid/graphics/Camera;": [
        "Landroid/graphics/Camera;->rotateY()V",
        "Landroid/graphics/Camera;->translate()V",
        "Landroid/graphics/Camera;->restore()V",
        "Landroid/graphics/Camera;->save()V",
        "Landroid/graphics/Camera;->getMatrix()V"
    ],
    "Landroid/graphics/Matrix;": [
        "Landroid/graphics/Matrix;->postScale()Z",
        "Landroid/graphics/Matrix;->preTranslate()Z",
        "Landroid/graphics/Matrix;->postRotate()Z",
        "Landroid/graphics/Matrix;->postTranslate()Z"
    ],
    "Landroid/content/DialogInterface;": [
        "Landroid/content/DialogInterface;->dismiss()V",
        "Landroid/content/DialogInterface;->cancel()V"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->toString()Ljava/lang/String;",
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->put()V"
    ],
    "Landroid/content/Intent$ShortcutIconResource;": [
        "Landroid/content/Intent$ShortcutIconResource;->fromContext()Landroid/content/Intent$ShortcutIconResource;"
    ],
    "Landroid/content/pm/ResolveInfo;": [
        "Landroid/content/pm/ResolveInfo;->loadLabel()Ljava/lang/CharSequence;"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setLinger()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/client/HttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/params/HttpParams;": [
        "Lorg/apache/http/params/HttpParams;->setParameter()Lorg/apache/http/params/HttpParams;"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkType()I",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->isProviderEnabled()Z",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;",
        "Landroid/location/LocationManager;->requestLocationUpdates()V"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;",
        "Lorg/apache/http/HttpEntity;->getContentLength()J"
    ],
    "Lorg/w3c/dom/NodeList;": [
        "Lorg/w3c/dom/NodeList;->item()Lorg/w3c/dom/Node;",
        "Lorg/w3c/dom/NodeList;->getLength()I"
    ],
    "Lorg/w3c/dom/Element;": [
        "Lorg/w3c/dom/Element;->getChildNodes()Lorg/w3c/dom/NodeList;"
    ],
    "Lorg/w3c/dom/Node;": [
        "Lorg/w3c/dom/Node;->getNodeValue()Ljava/lang/String;"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getMemoryInfo()V",
        "Landroid/app/ActivityManager;->getRunningTasks()Ljava/util/List;",
        "Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->after()Z",
        "Ljava/util/Date;->before()Z",
        "Ljava/util/Date;->getTime()J",
        "Ljava/util/Date;->equals()Z"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStoragePublicDirectory()Ljava/io/File;"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->close()V"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->write()V",
        "Ljava/io/FileOutputStream;->flush()V",
        "Ljava/io/FileOutputStream;->close()V"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->argb()I"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->setOnClickListener()V",
        "Landroid/widget/ImageView;->getId()I",
        "Landroid/widget/ImageView;->setScaleType()V",
        "Landroid/widget/ImageView;->setImageResource()V",
        "Landroid/widget/ImageView;->setLayoutParams()V"
    ],
    "Lcom/waps/AnimationType;": [
        "Lcom/waps/AnimationType;->getAnimationList()Ljava/util/List;",
        "Lcom/waps/AnimationType;->startAnimation()V",
        "Lcom/waps/AnimationType;->getAnimation()Ljava/util/Map;",
        "Lcom/waps/AnimationType;->getAnimationList2()Ljava/util/List;"
    ],
    "Lcom/waps/o;": [
        "Lcom/waps/o;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/o;->a()Ljava/lang/Boolean;"
    ],
    "Ljava/util/concurrent/ScheduledExecutorService;": [
        "Ljava/util/concurrent/ScheduledExecutorService;->schedule()Ljava/util/concurrent/ScheduledFuture;"
    ],
    "Lcom/waps/r;": [
        "Lcom/waps/r;->a()V",
        "Lcom/waps/r;->a()Ljava/lang/Boolean;",
        "Lcom/waps/r;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/waps/m;": [
        "Lcom/waps/m;->a()Ljava/lang/Boolean;",
        "Lcom/waps/m;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/waps/x;": [
        "Lcom/waps/x;->a()V",
        "Lcom/waps/x;->a()Landroid/widget/ImageView;"
    ],
    "Ljava/util/concurrent/Executors;": [
        "Ljava/util/concurrent/Executors;->newScheduledThreadPool()Ljava/util/concurrent/ScheduledExecutorService;"
    ],
    "Landroid/util/Xml;": [
        "Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;"
    ],
    "Lorg/xmlpull/v1/XmlPullParser;": [
        "Lorg/xmlpull/v1/XmlPullParser;->getEventType()I",
        "Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;",
        "Lorg/xmlpull/v1/XmlPullParser;->nextText()Ljava/lang/String;",
        "Lorg/xmlpull/v1/XmlPullParser;->setInput()V",
        "Lorg/xmlpull/v1/XmlPullParser;->next()I"
    ],
    "Lcom/waps/AdInfo;": [
        "Lcom/waps/AdInfo;->a()V"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->getShortClassName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->getClassName()Ljava/lang/String;"
    ],
    "Lorg/w3c/dom/Document;": [
        "Lorg/w3c/dom/Document;->getElementsByTagName()Lorg/w3c/dom/NodeList;"
    ],
    "Lcom/waps/ag;": [
        "Lcom/waps/ag;->a()Ljava/util/Map;"
    ],
    "Lcom/waps/v;": [
        "Lcom/waps/v;->a()Ljava/lang/Boolean;",
        "Lcom/waps/v;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/v;->a()V"
    ],
    "Lcom/waps/n;": [
        "Lcom/waps/n;->a()Ljava/lang/Boolean;",
        "Lcom/waps/n;->execute()Landroid/os/AsyncTask;"
    ],
    "Ljavax/xml/parsers/DocumentBuilderFactory;": [
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newInstance()Ljavax/xml/parsers/DocumentBuilderFactory;",
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;"
    ],
    "Ljavax/xml/parsers/DocumentBuilder;": [
        "Ljavax/xml/parsers/DocumentBuilder;->parse()Lorg/w3c/dom/Document;"
    ],
    "Lcom/waps/l;": [
        "Lcom/waps/l;->a()Ljava/lang/Boolean;",
        "Lcom/waps/l;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/waps/DisplayAdNotifier;": [
        "Lcom/waps/DisplayAdNotifier;->getDisplayAdResponseFailed()V",
        "Lcom/waps/DisplayAdNotifier;->getDisplayAdResponse()V"
    ],
    "Lcom/waps/af;": [
        "Lcom/waps/af;->execute()Landroid/os/AsyncTask;",
        "Lcom/waps/af;->a()Ljava/lang/Boolean;"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->setProgress()V",
        "Landroid/widget/ProgressBar;->setIndeterminateDrawable()V",
        "Landroid/widget/ProgressBar;->setIndeterminate()V",
        "Landroid/widget/ProgressBar;->setLayoutParams()V",
        "Landroid/widget/ProgressBar;->setVisibility()V",
        "Landroid/widget/ProgressBar;->setEnabled()V"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->onPageStarted()V",
        "Landroid/webkit/WebViewClient;->onPageFinished()V",
        "Landroid/webkit/WebViewClient;->onReceivedError()V"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->notify()V",
        "Landroid/app/NotificationManager;->cancel()V"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->setImageViewBitmap()V",
        "Landroid/widget/RemoteViews;->getLayoutId()I",
        "Landroid/widget/RemoteViews;->setTextViewText()V"
    ],
    "Lcom/waps/ai;": [
        "Lcom/waps/ai;->sleep()V"
    ],
    "Lcom/waps/f;": [
        "Lcom/waps/f;->setFillAfter()V",
        "Lcom/waps/f;->setInterpolator()V",
        "Lcom/waps/f;->setDuration()V"
    ],
    "Ljava/text/NumberFormat;": [
        "Ljava/text/NumberFormat;->format()Ljava/lang/String;"
    ],
    "Lcom/waps/b;": [
        "Lcom/waps/b;->sleep()V"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setHeader()V",
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->setHeader()V"
    ],
    "Ljava/util/zip/GZIPOutputStream;": [
        "Ljava/util/zip/GZIPOutputStream;->write()V",
        "Ljava/util/zip/GZIPOutputStream;->close()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->size()I",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B"
    ],
    "Landroid/os/StrictMode$ThreadPolicy$Builder;": [
        "Landroid/os/StrictMode$ThreadPolicy$Builder;->permitAll()Landroid/os/StrictMode$ThreadPolicy$Builder;",
        "Landroid/os/StrictMode$ThreadPolicy$Builder;->build()Landroid/os/StrictMode$ThreadPolicy;"
    ],
    "Landroid/os/StrictMode;": [
        "Landroid/os/StrictMode;->setThreadPolicy()V"
    ],
    "Lcom/bHgVKpN/l;": [
        "Lcom/bHgVKpN/l;->a()V",
        "Lcom/bHgVKpN/l;->a()I"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Lcom/bHgVKpN/a;": [
        "Lcom/bHgVKpN/a;->a()[B",
        "Lcom/bHgVKpN/a;->a()Ljava/lang/String;"
    ],
    "Lcom/bHgVKpN/n;": [
        "Lcom/bHgVKpN/n;->a()V",
        "Lcom/bHgVKpN/n;->a()Ljava/lang/String;",
        "Lcom/bHgVKpN/n;->a()I"
    ],
    "Landroid/content/pm/PackageManager$NameNotFoundException;": [
        "Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V"
    ],
    "Lcom/bHgVKpN/b;": [
        "Lcom/bHgVKpN/b;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/conn/ClientConnectionManager;": [
        "Lorg/apache/http/conn/ClientConnectionManager;->shutdown()V"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->printStackTrace()V"
    ],
    "Lcom/bHgVKpN/qThESORoSUK;": [
        "Lcom/bHgVKpN/qThESORoSUK;->a()[Z",
        "Lcom/bHgVKpN/qThESORoSUK;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/bHgVKpN/qThESORoSUK;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/bHgVKpN/qThESORoSUK;->a()Z",
        "Lcom/bHgVKpN/qThESORoSUK;->a()V",
        "Lcom/bHgVKpN/qThESORoSUK;->startActivity()V",
        "Lcom/bHgVKpN/qThESORoSUK;->setContentView()V",
        "Lcom/bHgVKpN/qThESORoSUK;->finish()V",
        "Lcom/bHgVKpN/qThESORoSUK;->a()Ljava/lang/String;"
    ],
    "Landroid/os/Message;": [
        "Landroid/os/Message;->obtain()Landroid/os/Message;",
        "Landroid/os/Message;->sendToTarget()V",
        "Landroid/os/Message;->setData()V",
        "Landroid/os/Message;->getData()Landroid/os/Bundle;"
    ],
    "Lcom/bHgVKpN/MfoPVLJLC;": [
        "Lcom/bHgVKpN/MfoPVLJLC;->a()Landroid/os/Handler;",
        "Lcom/bHgVKpN/MfoPVLJLC;->findViewById()Landroid/view/View;",
        "Lcom/bHgVKpN/MfoPVLJLC;->a()Landroid/widget/ProgressBar;",
        "Lcom/bHgVKpN/MfoPVLJLC;->a()Z",
        "Lcom/bHgVKpN/MfoPVLJLC;->getPackageName()Ljava/lang/String;",
        "Lcom/bHgVKpN/MfoPVLJLC;->a()Ljava/util/ArrayList;",
        "Lcom/bHgVKpN/MfoPVLJLC;->a()Ljava/lang/String;",
        "Lcom/bHgVKpN/MfoPVLJLC;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/bHgVKpN/MfoPVLJLC;->requestWindowFeature()Z",
        "Lcom/bHgVKpN/MfoPVLJLC;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/bHgVKpN/MfoPVLJLC;->setContentView()V",
        "Lcom/bHgVKpN/MfoPVLJLC;->a()Landroid/widget/TextView;",
        "Lcom/bHgVKpN/MfoPVLJLC;->startActivity()V",
        "Lcom/bHgVKpN/MfoPVLJLC;->finish()V",
        "Lcom/bHgVKpN/MfoPVLJLC;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Lcom/bHgVKpN/MfoPVLJLC;->a()V",
        "Lcom/bHgVKpN/MfoPVLJLC;->getBaseContext()Landroid/content/Context;"
    ],
    "Lcom/bHgVKpN/SaRQoTwKlqtoPk;": [
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()I",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()Landroid/widget/ProgressBar;",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->setRequestedOrientation()V",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->finish()V",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()Z",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->requestWindowFeature()Z",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()Landroid/widget/TextView;",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()Ljava/lang/String;",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()D",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->findViewById()Landroid/view/View;",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->startActivity()V",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->setContentView()V",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()V",
        "Lcom/bHgVKpN/SaRQoTwKlqtoPk;->a()Landroid/os/Handler;"
    ],
    "Lcom/bHgVKpN/h;": [
        "Lcom/bHgVKpN/h;->start()V"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Landroid/content/pm/ApplicationInfo;": [
        "Landroid/content/pm/ApplicationInfo;->loadIcon()Landroid/graphics/drawable/Drawable;"
    ],
    "Lorg/json/JSONTokener;": [
        "Lorg/json/JSONTokener;->nextValue()Ljava/lang/Object;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->get()Ljava/lang/Object;"
    ],
    "Lcom/bHgVKpN/j;": [
        "Lcom/bHgVKpN/j;->start()V"
    ],
    "Ljava/text/DecimalFormat;": [
        "Ljava/text/DecimalFormat;->format()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/OpenFeintInternal;": [
        "Lcom/openfeint/internal/OpenFeintInternal;->clearPrefs()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->saveUser()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->loginUser()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->loadPropertiesFromXMLResource()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->showOfflineNotification()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getInstance()Lcom/openfeint/internal/OpenFeintInternal;",
        "Lcom/openfeint/internal/OpenFeintInternal;->userLoggedOut()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->userDeclinedFeint()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getPrefs()Lcom/openfeint/internal/SyncedStore;",
        "Lcom/openfeint/internal/OpenFeintInternal;->_makeRequest()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->saveUserApproval()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getCurrentUser()Lcom/openfeint/api/resource/CurrentUser;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getModelString()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getScreenInfo()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->userApprovedFeint()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getResource()I",
        "Lcom/openfeint/internal/OpenFeintInternal;->setCurrentActivity()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->submitIntent()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->cat()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->validateManifest()Z",
        "Lcom/openfeint/internal/OpenFeintInternal;->makeRequest()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->login()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getCurrentActivity()Landroid/app/Activity;",
        "Lcom/openfeint/internal/OpenFeintInternal;->loadUser()Lcom/openfeint/api/resource/User;",
        "Lcom/openfeint/internal/OpenFeintInternal;->log()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getAppVersion()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getProcessorInfo()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getAppContext()Landroid/content/Context;",
        "Lcom/openfeint/internal/OpenFeintInternal;->userLoggedIn()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getInternalProperties()Ljava/util/Properties;",
        "Lcom/openfeint/internal/OpenFeintInternal;->logoutUser()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->_getResource()I",
        "Lcom/openfeint/internal/OpenFeintInternal;->findUDID()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->currentlyLoggingIn()Z",
        "Lcom/openfeint/internal/OpenFeintInternal;->getClient()Lorg/apache/http/impl/client/AbstractHttpClient;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getAppID()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->createDeviceSession()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getUDID()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getOFVersion()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->clearUser()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->isUserLoggedIn()Z",
        "Lcom/openfeint/internal/OpenFeintInternal;->getAnalytics()Lcom/openfeint/internal/Analytics;",
        "Lcom/openfeint/internal/OpenFeintInternal;->getDelegate()Lcom/openfeint/api/OpenFeintDelegate;",
        "Lcom/openfeint/internal/OpenFeintInternal;->launchIntroFlow()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getDeviceParams()Ljava/util/Map;",
        "Lcom/openfeint/internal/OpenFeintInternal;->uploadFile()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->checkBan()Z",
        "Lcom/openfeint/internal/OpenFeintInternal;->displayErrorDialog()V",
        "Lcom/openfeint/internal/OpenFeintInternal;->getOSVersionString()Ljava/lang/String;",
        "Lcom/openfeint/internal/OpenFeintInternal;->isFeintServerReachable()Z",
        "Lcom/openfeint/internal/OpenFeintInternal;->getServerUrl()Ljava/lang/String;"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->setProperty()Ljava/lang/Object;",
        "Ljava/util/Properties;->getProperty()Ljava/lang/String;",
        "Ljava/util/Properties;->put()Ljava/lang/Object;",
        "Ljava/util/Properties;->get()Ljava/lang/Object;"
    ],
    "Lcom/openfeint/api/ui/Dashboard;": [
        "Lcom/openfeint/api/ui/Dashboard;->open()V",
        "Lcom/openfeint/api/ui/Dashboard;->finish()V",
        "Lcom/openfeint/api/ui/Dashboard;->getMenuInflater()Landroid/view/MenuInflater;",
        "Lcom/openfeint/api/ui/Dashboard;->getIntent()Landroid/content/Intent;",
        "Lcom/openfeint/api/ui/Dashboard;->executeJavascript()V"
    ],
    "Lcom/openfeint/internal/notifications/TwoLineNotification;": [
        "Lcom/openfeint/internal/notifications/TwoLineNotification;->createViewWithHeight()V",
        "Lcom/openfeint/internal/notifications/TwoLineNotification;->getText()Ljava/lang/String;",
        "Lcom/openfeint/internal/notifications/TwoLineNotification;->getUserData()Ljava/util/Map;",
        "Lcom/openfeint/internal/notifications/TwoLineNotification;->checkDelegateAndView()V",
        "Lcom/openfeint/internal/notifications/TwoLineNotification;->show()V",
        "Lcom/openfeint/internal/notifications/TwoLineNotification;->getResourceDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcom/openfeint/internal/Analytics;": [
        "Lcom/openfeint/internal/Analytics;->markDashboardOpen()V",
        "Lcom/openfeint/internal/Analytics;->update()V",
        "Lcom/openfeint/internal/Analytics;->markDashboardClose()V",
        "Lcom/openfeint/internal/Analytics;->markSessionClose()V",
        "Lcom/openfeint/internal/Analytics;->markSessionOpen()V"
    ],
    "Lcom/openfeint/internal/ui/WebNav;": [
        "Lcom/openfeint/internal/ui/WebNav;->onCreate()V",
        "Lcom/openfeint/internal/ui/WebNav;->setContentView()V",
        "Lcom/openfeint/internal/ui/WebNav;->createActionHandler()Lcom/openfeint/internal/ui/WebNav$ActionHandler;",
        "Lcom/openfeint/internal/ui/WebNav;->onOptionsItemSelected()Z",
        "Lcom/openfeint/internal/ui/WebNav;->onActivityResult()V",
        "Lcom/openfeint/internal/ui/WebNav;->findViewById()Landroid/view/View;",
        "Lcom/openfeint/internal/ui/WebNav;->getIntent()Landroid/content/Intent;",
        "Lcom/openfeint/internal/ui/WebNav;->executeJavascript()V",
        "Lcom/openfeint/internal/ui/WebNav;->onResume()V",
        "Lcom/openfeint/internal/ui/WebNav;->onDestroy()V"
    ],
    "Lcom/openfeint/internal/ImagePicker;": [
        "Lcom/openfeint/internal/ImagePicker;->preScaleImage()Landroid/graphics/Bitmap;",
        "Lcom/openfeint/internal/ImagePicker;->upload()V",
        "Lcom/openfeint/internal/ImagePicker;->resize()Landroid/graphics/Bitmap;",
        "Lcom/openfeint/internal/ImagePicker;->onActivityResult()Z"
    ],
    "Landroid/view/MenuInflater;": [
        "Landroid/view/MenuInflater;->inflate()V"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->setVisible()Landroid/view/MenuItem;",
        "Landroid/view/MenuItem;->getItemId()I"
    ],
    "Landroid/view/Menu;": [
        "Landroid/view/Menu;->findItem()Landroid/view/MenuItem;"
    ],
    "Lcom/openfeint/api/resource/Leaderboard;": [
        "Lcom/openfeint/api/resource/Leaderboard;->setResourceID()V",
        "Lcom/openfeint/api/resource/Leaderboard;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;",
        "Lcom/openfeint/api/resource/Leaderboard;->getScores()V",
        "Lcom/openfeint/api/resource/Leaderboard;->resourceID()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/request/OrderedArgList;": [
        "Lcom/openfeint/internal/request/OrderedArgList;->getArgString()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/OrderedArgList;->accumulate()V",
        "Lcom/openfeint/internal/request/OrderedArgList;->getArgs()Ljava/util/List;",
        "Lcom/openfeint/internal/request/OrderedArgList;->stringObjectMap()Ljava/util/Map;",
        "Lcom/openfeint/internal/request/OrderedArgList;->put()V",
        "Lcom/openfeint/internal/request/OrderedArgList;->getArgsSorted()Ljava/util/List;"
    ],
    "Lcom/openfeint/internal/request/JSONRequest;": [
        "Lcom/openfeint/internal/request/JSONRequest;->launch()V",
        "Lcom/openfeint/internal/request/JSONRequest;->isResponseJSON()Z",
        "Lcom/openfeint/internal/request/JSONRequest;->onFailure()V",
        "Lcom/openfeint/internal/request/JSONRequest;->getResponseEncoding()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/JSONRequest;->notJSONError()Lcom/openfeint/internal/resource/ServerException;",
        "Lcom/openfeint/internal/request/JSONRequest;->onResponse()V",
        "Lcom/openfeint/internal/request/JSONRequest;->onSuccess()V"
    ],
    "Lcom/openfeint/api/resource/User;": [
        "Lcom/openfeint/api/resource/User;->setResourceID()V",
        "Lcom/openfeint/api/resource/User;->resourceID()Ljava/lang/String;",
        "Lcom/openfeint/api/resource/User;->generate()Ljava/lang/String;",
        "Lcom/openfeint/api/resource/User;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;"
    ],
    "Lcom/openfeint/api/resource/User$DownloadProfilePictureCB;": [
        "Lcom/openfeint/api/resource/User$DownloadProfilePictureCB;->onFailure()V"
    ],
    "Lcom/openfeint/internal/request/BitmapRequest;": [
        "Lcom/openfeint/internal/request/BitmapRequest;->onFailure()V",
        "Lcom/openfeint/internal/request/BitmapRequest;->onSuccess()V",
        "Lcom/openfeint/internal/request/BitmapRequest;->launch()V"
    ],
    "Lcom/openfeint/api/resource/Achievement;": [
        "Lcom/openfeint/api/resource/Achievement;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;",
        "Lcom/openfeint/api/resource/Achievement;->setResourceID()V",
        "Lcom/openfeint/api/resource/Achievement;->resourceID()Ljava/lang/String;"
    ],
    "Lcom/openfeint/api/resource/Achievement$DownloadIconCB;": [
        "Lcom/openfeint/api/resource/Achievement$DownloadIconCB;->onFailure()V"
    ],
    "Lcom/openfeint/api/resource/Achievement$LoadCB;": [
        "Lcom/openfeint/api/resource/Achievement$LoadCB;->onFailure()V"
    ],
    "Lcom/openfeint/api/resource/Achievement$UnlockCB;": [
        "Lcom/openfeint/api/resource/Achievement$UnlockCB;->onFailure()V",
        "Lcom/openfeint/api/resource/Achievement$UnlockCB;->onSuccess()V"
    ],
    "Lcom/openfeint/internal/AchievementUnlockCache;": [
        "Lcom/openfeint/internal/AchievementUnlockCache;->isUnlocked()Z",
        "Lcom/openfeint/internal/AchievementUnlockCache;->reset()V"
    ],
    "Lcom/openfeint/internal/SyncedStore;": [
        "Lcom/openfeint/internal/SyncedStore;->load()V",
        "Lcom/openfeint/internal/SyncedStore;->read()Lcom/openfeint/internal/SyncedStore$Reader;",
        "Lcom/openfeint/internal/SyncedStore;->save()V",
        "Lcom/openfeint/internal/SyncedStore;->edit()Lcom/openfeint/internal/SyncedStore$Editor;"
    ],
    "Lcom/openfeint/internal/SyncedStore$Reader;": [
        "Lcom/openfeint/internal/SyncedStore$Reader;->keySet()Ljava/util/Set;",
        "Lcom/openfeint/internal/SyncedStore$Reader;->complete()V",
        "Lcom/openfeint/internal/SyncedStore$Reader;->getString()Ljava/lang/String;"
    ],
    "Lcom/openfeint/api/OpenFeintSettings;": [
        "Lcom/openfeint/api/OpenFeintSettings;->verify()V",
        "Lcom/openfeint/api/OpenFeintSettings;->applyOverrides()V"
    ],
    "Lcom/openfeint/internal/ui/WebViewCache;": [
        "Lcom/openfeint/internal/ui/WebViewCache;->copyDefaultItems()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->getManifestPath()Ljava/lang/String;",
        "Lcom/openfeint/internal/ui/WebViewCache;->deleteAll()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->getInstance()Lcom/openfeint/internal/ui/WebViewCache;",
        "Lcom/openfeint/internal/ui/WebViewCache;->getRootUri()Ljava/lang/String;",
        "Lcom/openfeint/internal/ui/WebViewCache;->copyDirectory()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->prioritize()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->sync()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->getDefaultClientManifest()Ljava/util/Map;",
        "Lcom/openfeint/internal/ui/WebViewCache;->stripUnused()Ljava/util/Set;",
        "Lcom/openfeint/internal/ui/WebViewCache;->copyDefaultBackground()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->copySpecific()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->prioritizeInner()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->loadedManifest()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->submitToSQL()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->trackPath()Z",
        "Lcom/openfeint/internal/ui/WebViewCache;->start()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->loadNextItem()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->copySingleItem()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->_getDpiName()Ljava/lang/String;",
        "Lcom/openfeint/internal/ui/WebViewCache;->isLoadedInner()Z",
        "Lcom/openfeint/internal/ui/WebViewCache;->finishItem()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->trackPathInner()Z",
        "Lcom/openfeint/internal/ui/WebViewCache;->getServerURI()Ljava/net/URI;",
        "Lcom/openfeint/internal/ui/WebViewCache;->gatherDefaultItems()V",
        "Lcom/openfeint/internal/ui/WebViewCache;->getDpiName()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/request/Client;": [
        "Lcom/openfeint/internal/request/Client;->setCookieStore()V",
        "Lcom/openfeint/internal/request/Client;->makeRequest()V",
        "Lcom/openfeint/internal/request/Client;->makeCCM()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lcom/openfeint/internal/request/Client;->addResponseInterceptor()V",
        "Lcom/openfeint/internal/request/Client;->addRequestInterceptor()V"
    ],
    "Lcom/openfeint/internal/SyncedStore$Editor;": [
        "Lcom/openfeint/internal/SyncedStore$Editor;->remove()V",
        "Lcom/openfeint/internal/SyncedStore$Editor;->putString()V",
        "Lcom/openfeint/internal/SyncedStore$Editor;->keySet()Ljava/util/Set;",
        "Lcom/openfeint/internal/SyncedStore$Editor;->commit()V"
    ],
    "Landroid/content/res/XmlResourceParser;": [
        "Landroid/content/res/XmlResourceParser;->next()I",
        "Landroid/content/res/XmlResourceParser;->getEventType()I",
        "Landroid/content/res/XmlResourceParser;->getName()Ljava/lang/String;",
        "Landroid/content/res/XmlResourceParser;->getText()Ljava/lang/String;",
        "Landroid/content/res/XmlResourceParser;->close()V"
    ],
    "Lcom/openfeint/internal/JsonResourceParser;": [
        "Lcom/openfeint/internal/JsonResourceParser;->parseResource()Lcom/openfeint/internal/resource/Resource;",
        "Lcom/openfeint/internal/JsonResourceParser;->parse()Ljava/lang/Object;",
        "Lcom/openfeint/internal/JsonResourceParser;->parseArray()Ljava/util/ArrayList;",
        "Lcom/openfeint/internal/JsonResourceParser;->parseOpenedResource()Lcom/openfeint/internal/resource/Resource;",
        "Lcom/openfeint/internal/JsonResourceParser;->parseOpenedArray()Ljava/util/ArrayList;"
    ],
    "Lcom/openfeint/internal/resource/ServerException;": [
        "Lcom/openfeint/internal/resource/ServerException;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;",
        "Lcom/openfeint/internal/resource/ServerException;->generate()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/request/BaseRequest;": [
        "Lcom/openfeint/internal/request/BaseRequest;->generateRequest()Lorg/apache/http/client/methods/HttpUriRequest;",
        "Lcom/openfeint/internal/request/BaseRequest;->setArgs()V",
        "Lcom/openfeint/internal/request/BaseRequest;->url()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/BaseRequest;->signed()Z",
        "Lcom/openfeint/internal/request/BaseRequest;->path()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/BaseRequest;->timeout()J",
        "Lcom/openfeint/internal/request/BaseRequest;->setFuture()V",
        "Lcom/openfeint/internal/request/BaseRequest;->numRetries()I",
        "Lcom/openfeint/internal/request/BaseRequest;->onResponse()V",
        "Lcom/openfeint/internal/request/BaseRequest;->addParams()V",
        "Lcom/openfeint/internal/request/BaseRequest;->method()Ljava/lang/String;"
    ],
    "Lcom/openfeint/api/resource/CurrentUser;": [
        "Lcom/openfeint/api/resource/CurrentUser;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;",
        "Lcom/openfeint/api/resource/CurrentUser;->resourceID()Ljava/lang/String;",
        "Lcom/openfeint/api/resource/CurrentUser;->shallowCopyAncestorType()V"
    ],
    "Lcom/openfeint/api/OpenFeintDelegate;": [
        "Lcom/openfeint/api/OpenFeintDelegate;->userLoggedIn()V",
        "Lcom/openfeint/api/OpenFeintDelegate;->onDashboardAppear()V",
        "Lcom/openfeint/api/OpenFeintDelegate;->onDashboardDisappear()V",
        "Lcom/openfeint/api/OpenFeintDelegate;->userLoggedOut()V",
        "Lcom/openfeint/api/OpenFeintDelegate;->showCustomApprovalFlow()Z"
    ],
    "Lcom/openfeint/internal/request/RawRequest;": [
        "Lcom/openfeint/internal/request/RawRequest;->setDelegate()V",
        "Lcom/openfeint/internal/request/RawRequest;->notJSONError()Lcom/openfeint/internal/resource/ServerException;",
        "Lcom/openfeint/internal/request/RawRequest;->isResponseJSON()Z",
        "Lcom/openfeint/internal/request/RawRequest;->slurp()Ljava/lang/String;"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Lcom/openfeint/internal/request/IRawRequestDelegate;": [
        "Lcom/openfeint/internal/request/IRawRequestDelegate;->onResponse()V"
    ],
    "Lcom/openfeint/internal/resource/ResourceClass;": [
        "Lcom/openfeint/internal/resource/ResourceClass;->mixinParentProperties()V",
        "Lcom/openfeint/internal/resource/ResourceClass;->factory()Lcom/openfeint/internal/resource/Resource;"
    ],
    "Lcom/openfeint/internal/resource/PrimitiveResourceProperty;": [
        "Lcom/openfeint/internal/resource/PrimitiveResourceProperty;->copy()V",
        "Lcom/openfeint/internal/resource/PrimitiveResourceProperty;->parse()V",
        "Lcom/openfeint/internal/resource/PrimitiveResourceProperty;->generate()V"
    ],
    "Lcom/openfeint/internal/resource/NestedResourceProperty;": [
        "Lcom/openfeint/internal/resource/NestedResourceProperty;->set()V",
        "Lcom/openfeint/internal/resource/NestedResourceProperty;->get()Lcom/openfeint/internal/resource/Resource;",
        "Lcom/openfeint/internal/resource/NestedResourceProperty;->getType()Ljava/lang/Class;"
    ],
    "Lcom/openfeint/internal/resource/Resource;": [
        "Lcom/openfeint/internal/resource/Resource;->generate()V",
        "Lcom/openfeint/internal/resource/Resource;->registerSubclass()V",
        "Lcom/openfeint/internal/resource/Resource;->getKlass()Lcom/openfeint/internal/resource/ResourceClass;",
        "Lcom/openfeint/internal/resource/Resource;->unguardedShallowCopy()V",
        "Lcom/openfeint/internal/resource/Resource;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;"
    ],
    "Lcom/openfeint/internal/resource/ArrayResourceProperty;": [
        "Lcom/openfeint/internal/resource/ArrayResourceProperty;->set()V",
        "Lcom/openfeint/internal/resource/ArrayResourceProperty;->elementType()Ljava/lang/Class;",
        "Lcom/openfeint/internal/resource/ArrayResourceProperty;->get()Ljava/util/List;"
    ],
    "Lcom/openfeint/internal/CookieStore;": [
        "Lcom/openfeint/internal/CookieStore;->stringFromDate()Ljava/lang/String;",
        "Lcom/openfeint/internal/CookieStore;->cookieFromPrefs()Lorg/apache/http/impl/cookie/BasicClientCookie;",
        "Lcom/openfeint/internal/CookieStore;->dateFromString()Ljava/util/Date;"
    ],
    "Lorg/apache/http/impl/client/BasicCookieStore;": [
        "Lorg/apache/http/impl/client/BasicCookieStore;->clear()V",
        "Lorg/apache/http/impl/client/BasicCookieStore;->addCookie()V"
    ],
    "Lorg/apache/http/impl/cookie/BasicClientCookie;": [
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setExpiryDate()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setDomain()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setPath()V"
    ],
    "Lorg/apache/http/impl/cookie/DateUtils;": [
        "Lorg/apache/http/impl/cookie/DateUtils;->parseDate()Ljava/util/Date;",
        "Lorg/apache/http/impl/cookie/DateUtils;->formatDate()Ljava/lang/String;"
    ],
    "Lorg/apache/http/cookie/Cookie;": [
        "Lorg/apache/http/cookie/Cookie;->getName()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getPath()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getExpiryDate()Ljava/util/Date;",
        "Lorg/apache/http/cookie/Cookie;->getDomain()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getValue()Ljava/lang/String;"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->toString()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/ImagePicker$ImagePickerCB;": [
        "Lcom/openfeint/internal/ImagePicker$ImagePickerCB;->onPictureChosen()V",
        "Lcom/openfeint/internal/ImagePicker$ImagePickerCB;->onAbort()V"
    ],
    "Ljava/util/concurrent/locks/ReentrantReadWriteLock;": [
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock;->writeLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;",
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock;->readLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;"
    ],
    "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;": [
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;->unlock()V",
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;->lock()V"
    ],
    "Ljava/io/ObjectInputStream;": [
        "Ljava/io/ObjectInputStream;->readObject()Ljava/lang/Object;",
        "Ljava/io/ObjectInputStream;->close()V"
    ],
    "Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;": [
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;->lock()V",
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;->unlock()V"
    ],
    "Ljava/io/ObjectOutputStream;": [
        "Ljava/io/ObjectOutputStream;->close()V",
        "Ljava/io/ObjectOutputStream;->writeObject()V"
    ],
    "Lcom/openfeint/internal/request/NVPComparator;": [
        "Lcom/openfeint/internal/request/NVPComparator;->compare()I"
    ],
    "Lorg/apache/http/NameValuePair;": [
        "Lorg/apache/http/NameValuePair;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/NameValuePair;->getName()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/methods/HttpUriRequest;": [
        "Lorg/apache/http/client/methods/HttpUriRequest;->abort()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->setParams()V"
    ],
    "Lcom/openfeint/internal/request/JSONContentRequest;": [
        "Lcom/openfeint/internal/request/JSONContentRequest;->numRetries()I",
        "Lcom/openfeint/internal/request/JSONContentRequest;->timeout()J",
        "Lcom/openfeint/internal/request/JSONContentRequest;->getResponseType()Ljava/lang/String;"
    ],
    "Ljavax/crypto/Mac;": [
        "Ljavax/crypto/Mac;->getInstance()Ljavax/crypto/Mac;",
        "Ljavax/crypto/Mac;->doFinal()[B"
    ],
    "Lcom/openfeint/internal/request/BlobPostRequest;": [
        "Lcom/openfeint/internal/request/BlobPostRequest;->url()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/BlobPostRequest;->addParams()V",
        "Lcom/openfeint/internal/request/BlobPostRequest;->slurp()Ljava/lang/String;"
    ],
    "Lorg/apache/http/conn/scheme/PlainSocketFactory;": [
        "Lorg/apache/http/conn/scheme/PlainSocketFactory;->getSocketFactory()Lorg/apache/http/conn/scheme/PlainSocketFactory;"
    ],
    "Lorg/apache/http/conn/scheme/SchemeRegistry;": [
        "Lorg/apache/http/conn/scheme/SchemeRegistry;->register()Lorg/apache/http/conn/scheme/Scheme;"
    ],
    "Lorg/apache/http/conn/ssl/SSLSocketFactory;": [
        "Lorg/apache/http/conn/ssl/SSLSocketFactory;->getSocketFactory()Lorg/apache/http/conn/ssl/SSLSocketFactory;"
    ],
    "Ljava/util/concurrent/ExecutorService;": [
        "Ljava/util/concurrent/ExecutorService;->submit()Ljava/util/concurrent/Future;"
    ],
    "Lcom/openfeint/internal/request/GenericRequest;": [
        "Lcom/openfeint/internal/request/GenericRequest;->getHttpParams()Lorg/apache/http/params/HttpParams;",
        "Lcom/openfeint/internal/request/GenericRequest;->setDelegate()V",
        "Lcom/openfeint/internal/request/GenericRequest;->notJSONError()Lcom/openfeint/internal/resource/ServerException;",
        "Lcom/openfeint/internal/request/GenericRequest;->slurp()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/GenericRequest;->setArgs()V",
        "Lcom/openfeint/internal/request/GenericRequest;->isResponseJSON()Z"
    ],
    "Ljava/lang/IllegalStateException;": [
        "Ljava/lang/IllegalStateException;->printStackTrace()V"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->get()Ljava/lang/Object;"
    ],
    "Ljava/lang/Iterable;": [
        "Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;"
    ],
    "Lorg/apache/http/impl/client/AbstractHttpClient;": [
        "Lorg/apache/http/impl/client/AbstractHttpClient;->execute()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/client/entity/UrlEncodedFormEntity;": [
        "Lorg/apache/http/client/entity/UrlEncodedFormEntity;->setContentType()V"
    ],
    "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;": [
        "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;->setEntity()V"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->println()V"
    ],
    "Lcom/openfeint/internal/request/Signer;": [
        "Lcom/openfeint/internal/request/Signer;->getKey()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/Signer;->sign()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/request/multipart/EncodingUtil;": [
        "Lcom/openfeint/internal/request/multipart/EncodingUtil;->getBytes()[B",
        "Lcom/openfeint/internal/request/multipart/EncodingUtil;->getAsciiBytes()[B",
        "Lcom/openfeint/internal/request/multipart/EncodingUtil;->getAsciiString()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/request/multipart/Part;": [
        "Lcom/openfeint/internal/request/multipart/Part;->setPartBoundary()V",
        "Lcom/openfeint/internal/request/multipart/Part;->getTransferEncoding()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/multipart/Part;->sendContentTypeHeader()V",
        "Lcom/openfeint/internal/request/multipart/Part;->getContentType()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/multipart/Part;->getName()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/multipart/Part;->sendEnd()V",
        "Lcom/openfeint/internal/request/multipart/Part;->isRepeatable()Z",
        "Lcom/openfeint/internal/request/multipart/Part;->sendData()V",
        "Lcom/openfeint/internal/request/multipart/Part;->getLengthOfParts()J",
        "Lcom/openfeint/internal/request/multipart/Part;->sendEndOfHeader()V",
        "Lcom/openfeint/internal/request/multipart/Part;->getCharSet()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/multipart/Part;->length()J",
        "Lcom/openfeint/internal/request/multipart/Part;->sendTransferEncodingHeader()V",
        "Lcom/openfeint/internal/request/multipart/Part;->send()V",
        "Lcom/openfeint/internal/request/multipart/Part;->sendParts()V",
        "Lcom/openfeint/internal/request/multipart/Part;->sendDispositionHeader()V",
        "Lcom/openfeint/internal/request/multipart/Part;->lengthOfData()J",
        "Lcom/openfeint/internal/request/multipart/Part;->getPartBoundary()[B",
        "Lcom/openfeint/internal/request/multipart/Part;->sendStart()V"
    ],
    "Lcom/openfeint/internal/request/multipart/MultipartHttpEntity;": [
        "Lcom/openfeint/internal/request/multipart/MultipartHttpEntity;->generateMultipartBoundary()[B",
        "Lcom/openfeint/internal/request/multipart/MultipartHttpEntity;->getMultipartBoundary()[B",
        "Lcom/openfeint/internal/request/multipart/MultipartHttpEntity;->getContentLength()J"
    ],
    "Lcom/openfeint/internal/request/multipart/StringPart;": [
        "Lcom/openfeint/internal/request/multipart/StringPart;->getCharSet()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/multipart/StringPart;->getContent()[B"
    ],
    "Lcom/openfeint/internal/request/multipart/PartBase;": [
        "Lcom/openfeint/internal/request/multipart/PartBase;->setCharSet()V",
        "Lcom/openfeint/internal/request/multipart/PartBase;->sendDispositionHeader()V"
    ],
    "Lcom/openfeint/internal/request/multipart/PartSource;": [
        "Lcom/openfeint/internal/request/multipart/PartSource;->getFileName()Ljava/lang/String;",
        "Lcom/openfeint/internal/request/multipart/PartSource;->createInputStream()Ljava/io/InputStream;",
        "Lcom/openfeint/internal/request/multipart/PartSource;->getLength()J"
    ],
    "Lcom/openfeint/internal/request/multipart/FilePart;": [
        "Lcom/openfeint/internal/request/multipart/FilePart;->lengthOfData()J"
    ],
    "Lcom/openfeint/internal/resource/DoubleResourceProperty;": [
        "Lcom/openfeint/internal/resource/DoubleResourceProperty;->set()V",
        "Lcom/openfeint/internal/resource/DoubleResourceProperty;->get()D"
    ],
    "Lcom/openfeint/internal/resource/DateResourceProperty;": [
        "Lcom/openfeint/internal/resource/DateResourceProperty;->get()Ljava/util/Date;",
        "Lcom/openfeint/internal/resource/DateResourceProperty;->set()V"
    ],
    "Ljava/text/DateFormat;": [
        "Ljava/text/DateFormat;->format()Ljava/lang/String;",
        "Ljava/text/DateFormat;->parse()Ljava/util/Date;"
    ],
    "Lcom/openfeint/internal/resource/BooleanResourceProperty;": [
        "Lcom/openfeint/internal/resource/BooleanResourceProperty;->get()Z",
        "Lcom/openfeint/internal/resource/BooleanResourceProperty;->set()V"
    ],
    "Lcom/openfeint/internal/resource/IntResourceProperty;": [
        "Lcom/openfeint/internal/resource/IntResourceProperty;->set()V",
        "Lcom/openfeint/internal/resource/IntResourceProperty;->get()I"
    ],
    "Lcom/openfeint/internal/resource/BlobUploadParameters;": [
        "Lcom/openfeint/internal/resource/BlobUploadParameters;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;"
    ],
    "Lcom/openfeint/api/resource/Score;": [
        "Lcom/openfeint/api/resource/Score;->getResourceClass()Lcom/openfeint/internal/resource/ResourceClass;"
    ],
    "Lcom/openfeint/internal/resource/FloatResourceProperty;": [
        "Lcom/openfeint/internal/resource/FloatResourceProperty;->set()V",
        "Lcom/openfeint/internal/resource/FloatResourceProperty;->get()F"
    ],
    "Lcom/openfeint/internal/resource/LongResourceProperty;": [
        "Lcom/openfeint/internal/resource/LongResourceProperty;->get()J",
        "Lcom/openfeint/internal/resource/LongResourceProperty;->set()V"
    ],
    "Lcom/openfeint/internal/resource/StringResourceProperty;": [
        "Lcom/openfeint/internal/resource/StringResourceProperty;->get()Ljava/lang/String;",
        "Lcom/openfeint/internal/resource/StringResourceProperty;->set()V"
    ],
    "Lcom/openfeint/internal/resource/EnumResourceProperty;": [
        "Lcom/openfeint/internal/resource/EnumResourceProperty;->get()Ljava/lang/Enum;",
        "Lcom/openfeint/internal/resource/EnumResourceProperty;->set()V"
    ],
    "Lcom/openfeint/api/OpenFeint;": [
        "Lcom/openfeint/api/OpenFeint;->getCurrentUser()Lcom/openfeint/api/resource/CurrentUser;",
        "Lcom/openfeint/api/OpenFeint;->setCurrentActivity()V"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->read()I",
        "Ljava/io/DataInputStream;->close()V"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->close()V",
        "Ljava/io/DataOutputStream;->write()V"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->add()Z"
    ],
    "Lcom/openfeint/internal/ui/WebViewCacheCallback;": [
        "Lcom/openfeint/internal/ui/WebViewCacheCallback;->pathLoaded()V",
        "Lcom/openfeint/internal/ui/WebViewCacheCallback;->onTrackingNeeded()V"
    ],
    "Lcom/openfeint/internal/ui/WebViewCache$DataStorageHelper;": [
        "Lcom/openfeint/internal/ui/WebViewCache$DataStorageHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcom/openfeint/internal/ui/WebViewCache$DataStorageHelper;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Ljavax/xml/parsers/SAXParserFactory;": [
        "Ljavax/xml/parsers/SAXParserFactory;->newSAXParser()Ljavax/xml/parsers/SAXParser;",
        "Ljavax/xml/parsers/SAXParserFactory;->newInstance()Ljavax/xml/parsers/SAXParserFactory;"
    ],
    "Ljavax/xml/parsers/SAXParser;": [
        "Ljavax/xml/parsers/SAXParser;->getXMLReader()Lorg/xml/sax/XMLReader;"
    ],
    "Lorg/xml/sax/XMLReader;": [
        "Lorg/xml/sax/XMLReader;->parse()V",
        "Lorg/xml/sax/XMLReader;->setContentHandler()V"
    ],
    "Lcom/openfeint/internal/ui/WebViewCache$SaxHandler;": [
        "Lcom/openfeint/internal/ui/WebViewCache$SaxHandler;->getOutputMap()Ljava/util/Map;"
    ],
    "Lcom/openfeint/internal/ui/WebViewCache$4;": [
        "Lcom/openfeint/internal/ui/WebViewCache$4;->launch()V"
    ],
    "Landroid/database/SQLException;": [
        "Landroid/database/SQLException;->toString()Ljava/lang/String;"
    ],
    "Lcom/openfeint/internal/ui/WebViewCache$2;": [
        "Lcom/openfeint/internal/ui/WebViewCache$2;->launch()V"
    ],
    "Lcom/openfeint/internal/ui/IntroFlow;": [
        "Lcom/openfeint/internal/ui/IntroFlow;->getIntent()Landroid/content/Intent;"
    ],
    "Landroid/app/Dialog;": [
        "Landroid/app/Dialog;->show()V",
        "Landroid/app/Dialog;->findViewById()Landroid/view/View;",
        "Landroid/app/Dialog;->setCancelable()V",
        "Landroid/app/Dialog;->setOnCancelListener()V",
        "Landroid/app/Dialog;->setContentView()V"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->getIntrinsicWidth()I",
        "Landroid/graphics/drawable/Drawable;->draw()V",
        "Landroid/graphics/drawable/Drawable;->setBounds()V",
        "Landroid/graphics/drawable/Drawable;->getIntrinsicHeight()I"
    ],
    "Lcom/openfeint/internal/notifications/NotificationBase;": [
        "Lcom/openfeint/internal/notifications/NotificationBase;->showToast()V",
        "Lcom/openfeint/internal/notifications/NotificationBase;->createViewWithHeight()V",
        "Lcom/openfeint/internal/notifications/NotificationBase;->getDelegate()Lcom/openfeint/api/Notification$Delegate;",
        "Lcom/openfeint/internal/notifications/NotificationBase;->getResourceDrawable()Landroid/graphics/drawable/Drawable;",
        "Lcom/openfeint/internal/notifications/NotificationBase;->createView()Z"
    ],
    "Lcom/openfeint/api/Notification$Delegate;": [
        "Lcom/openfeint/api/Notification$Delegate;->displayNotification()V",
        "Lcom/openfeint/api/Notification$Delegate;->notificationWillShow()V",
        "Lcom/openfeint/api/Notification$Delegate;->canShowNotification()Z"
    ],
    "Lcom/openfeint/internal/notifications/AchievementNotification;": [
        "Lcom/openfeint/internal/notifications/AchievementNotification;->clippedText()Ljava/lang/String;",
        "Lcom/openfeint/internal/notifications/AchievementNotification;->getResourceDrawable()Landroid/graphics/drawable/Drawable;",
        "Lcom/openfeint/internal/notifications/AchievementNotification;->getUserData()Ljava/util/Map;",
        "Lcom/openfeint/internal/notifications/AchievementNotification;->checkDelegateAndView()V"
    ],
    "Lcom/openfeint/internal/notifications/SimpleNotification;": [
        "Lcom/openfeint/internal/notifications/SimpleNotification;->checkDelegateAndView()V",
        "Lcom/openfeint/internal/notifications/SimpleNotification;->show()V",
        "Lcom/openfeint/internal/notifications/SimpleNotification;->getResourceDrawable()Landroid/graphics/drawable/Drawable;",
        "Lcom/openfeint/internal/notifications/SimpleNotification;->getText()Ljava/lang/String;"
    ]
}