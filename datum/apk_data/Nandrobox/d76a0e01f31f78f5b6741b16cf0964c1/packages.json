{
    "Ljava/lang/System;": [
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->setProperty()Ljava/lang/String;",
        "Ljava/lang/System;->gc()V",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->exit()V",
        "Ljava/lang/System;->arraycopy()V"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readChar()C",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->read()I",
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readLong()J",
        "Ljava/io/DataInputStream;->close()V"
    ],
    "Ljava/io/ByteArrayInputStream;": [
        "Ljava/io/ByteArrayInputStream;->close()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;",
        "Ljava/lang/Thread;->isAlive()Z",
        "Ljava/lang/Thread;->yield()V"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->close()V",
        "Ljava/io/DataOutputStream;->flush()V",
        "Ljava/io/DataOutputStream;->writeLong()V",
        "Ljava/io/DataOutputStream;->writeUTF()V",
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->write()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->close()V",
        "Ljava/io/ByteArrayOutputStream;->flush()V",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B",
        "Ljava/io/ByteArrayOutputStream;->write()V"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuffer;->delete()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->length()I"
    ],
    "La;": [
        "La;->a()V",
        "La;->a()Z"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->set()V",
        "Ljava/lang/reflect/Array;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->getLength()I",
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->clone()Ljava/lang/Object;",
        "Ljava/lang/Object;->hashCode()I",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->notify()V",
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->notifyAll()V",
        "Ljava/lang/Object;->wait()V"
    ],
    "Ljavax/microedition/enhance/MIDPHelper;": [
        "Ljavax/microedition/enhance/MIDPHelper;->a()Landroid/graphics/Bitmap;",
        "Ljavax/microedition/enhance/MIDPHelper;->a()V",
        "Ljavax/microedition/enhance/MIDPHelper;->a()Landroid/graphics/Canvas;",
        "Ljavax/microedition/enhance/MIDPHelper;->a()Ljava/io/InputStream;"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->available()I",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->read()I"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->println()V"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->printStackTrace()V",
        "Ljava/lang/Throwable;->getMessage()Ljava/lang/String;"
    ],
    "Ljavax/microedition/media/Manager;": [
        "Ljavax/microedition/media/Manager;->a()Ljavax/microedition/media/Player;"
    ],
    "Ljavax/microedition/media/Player;": [
        "Ljavax/microedition/media/Player;->close()V",
        "Ljavax/microedition/media/Player;->start()V",
        "Ljavax/microedition/media/Player;->stop()V",
        "Ljavax/microedition/media/Player;->ai()V"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->length()I"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextInt()I"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->sqrt()D",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->toDegrees()D",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->abs()D",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->atan()D",
        "Ljava/lang/Math;->round()J",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->abs()F"
    ],
    "Ljavax/microedition/midlet/MIDlet;": [
        "Ljavax/microedition/midlet/MIDlet;->dv()V",
        "Ljavax/microedition/midlet/MIDlet;->a()V"
    ],
    "Lorg/meteoroid/core/e;": [
        "Lorg/meteoroid/core/e;->a()V",
        "Lorg/meteoroid/core/e;->a()Landroid/graphics/Bitmap;",
        "Lorg/meteoroid/core/e;->fo()V",
        "Lorg/meteoroid/core/e;->onDestroy()V",
        "Lorg/meteoroid/core/e;->a()D"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->recycle()V",
        "Landroid/graphics/Bitmap;->getPixel()I",
        "Landroid/graphics/Bitmap;->isRecycled()Z",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getPixels()V",
        "Landroid/graphics/Bitmap;->eraseColor()V",
        "Landroid/graphics/Bitmap;->getHeight()I"
    ],
    "Landroid/graphics/ColorMatrix;": [
        "Landroid/graphics/ColorMatrix;->setSaturation()V"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->setFilterBitmap()V",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->reset()V",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->setColorFilter()Landroid/graphics/ColorFilter;",
        "Landroid/graphics/Paint;->setAlpha()V",
        "Landroid/graphics/Paint;->setColor()V"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->scale()V",
        "Landroid/graphics/Canvas;->getWidth()I",
        "Landroid/graphics/Canvas;->getHeight()I",
        "Landroid/graphics/Canvas;->restoreToCount()V",
        "Landroid/graphics/Canvas;->save()I",
        "Landroid/graphics/Canvas;->drawColor()V",
        "Landroid/graphics/Canvas;->restore()V",
        "Landroid/graphics/Canvas;->translate()V",
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->drawRect()V"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->set()V",
        "Landroid/graphics/Rect;->width()I",
        "Landroid/graphics/Rect;->contains()Z",
        "Landroid/graphics/Rect;->height()I"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->deleteCharAt()Ljava/lang/StringBuilder;"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->a()I"
    ],
    "Lorg/meteoroid/core/l;": [
        "Lorg/meteoroid/core/l;->fR()I",
        "Lorg/meteoroid/core/l;->aA()Ljava/lang/String;",
        "Lorg/meteoroid/core/l;->fJ()Landroid/app/ActivityManager;",
        "Lorg/meteoroid/core/l;->fE()V",
        "Lorg/meteoroid/core/l;->fU()I",
        "Lorg/meteoroid/core/l;->fH()V",
        "Lorg/meteoroid/core/l;->getString()Ljava/lang/String;",
        "Lorg/meteoroid/core/l;->aD()Z",
        "Lorg/meteoroid/core/l;->ay()Ljava/io/InputStream;",
        "Lorg/meteoroid/core/l;->aE()Z",
        "Lorg/meteoroid/core/l;->bd()V",
        "Lorg/meteoroid/core/l;->getTelephonyManager()Landroid/telephony/TelephonyManager;",
        "Lorg/meteoroid/core/l;->fP()V",
        "Lorg/meteoroid/core/l;->isWifiEnable()Z",
        "Lorg/meteoroid/core/l;->onDestroy()V",
        "Lorg/meteoroid/core/l;->be()V",
        "Lorg/meteoroid/core/l;->fQ()I",
        "Lorg/meteoroid/core/l;->fG()Ljava/lang/String;",
        "Lorg/meteoroid/core/l;->pause()V",
        "Lorg/meteoroid/core/l;->fF()Ljava/lang/String;",
        "Lorg/meteoroid/core/l;->fS()I",
        "Lorg/meteoroid/core/l;->fT()Ljava/util/Timer;",
        "Lorg/meteoroid/core/l;->fO()Landroid/location/LocationManager;",
        "Lorg/meteoroid/core/l;->getActivity()Landroid/app/Activity;",
        "Lorg/meteoroid/core/l;->aC()Z",
        "Lorg/meteoroid/core/l;->resume()V",
        "Lorg/meteoroid/core/l;->a()V",
        "Lorg/meteoroid/core/l;->fK()Landroid/net/wifi/WifiManager;",
        "Lorg/meteoroid/core/l;->fM()Landroid/view/inputmethod/InputMethodManager;",
        "Lorg/meteoroid/core/l;->getConnectivityManager()Landroid/net/ConnectivityManager;",
        "Lorg/meteoroid/core/l;->getHandler()Landroid/os/Handler;",
        "Lorg/meteoroid/core/l;->isConnect()Z",
        "Lorg/meteoroid/core/l;->fV()Ljava/lang/String;",
        "Lorg/meteoroid/core/l;->launchExternalApplication()Z",
        "Lorg/meteoroid/core/l;->isDataConnectionEnable()Z"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningTasks()Ljava/util/List;",
        "Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;",
        "Landroid/app/ActivityManager;->getMemoryInfo()V"
    ],
    "Lorg/meteoroid/plugin/device/MIDPDevice$d;": [
        "Lorg/meteoroid/plugin/device/MIDPDevice$d;->gy()Landroid/graphics/Canvas;",
        "Lorg/meteoroid/plugin/device/MIDPDevice$d;->bU()V"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Lorg/meteoroid/core/a;": [
        "Lorg/meteoroid/core/a;->start()V",
        "Lorg/meteoroid/core/a;->bp()Z",
        "Lorg/meteoroid/core/a;->ao()Ljava/lang/String;",
        "Lorg/meteoroid/core/a;->an()V",
        "Lorg/meteoroid/core/a;->resume()V",
        "Lorg/meteoroid/core/a;->pause()V",
        "Lorg/meteoroid/core/a;->onDestroy()V",
        "Lorg/meteoroid/core/a;->a()V",
        "Lorg/meteoroid/core/a;->quit()V"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getDeclaredFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getTypeParameters()[Ljava/lang/reflect/TypeVariable;",
        "Ljava/lang/Class;->isAnonymousClass()Z",
        "Ljava/lang/Class;->isAssignableFrom()Z",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->isInterface()Z",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/Class;->getMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->isMemberClass()Z",
        "Ljava/lang/Class;->getField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Ljava/lang/Class;->getSimpleName()Ljava/lang/String;",
        "Ljava/lang/Class;->getModifiers()I",
        "Ljava/lang/Class;->getGenericSuperclass()Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->isLocalClass()Z",
        "Ljava/lang/Class;->getDeclaredConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getGenericInterfaces()[Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->getConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getDeclaredField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->isArray()Z",
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->cast()Ljava/lang/Object;"
    ],
    "Lorg/meteoroid/core/h;": [
        "Lorg/meteoroid/core/h;->bb()V",
        "Lorg/meteoroid/core/h;->a()V",
        "Lorg/meteoroid/core/h;->fz()V",
        "Lorg/meteoroid/core/h;->onDestroy()V",
        "Lorg/meteoroid/core/h;->a()Landroid/os/Message;"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->toString()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V",
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->getStackTrace()[Ljava/lang/StackTraceElement;"
    ],
    "Lorg/meteoroid/core/g;": [
        "Lorg/meteoroid/core/g;->ft()Lorg/meteoroid/core/g$a;",
        "Lorg/meteoroid/core/g;->fu()I",
        "Lorg/meteoroid/core/g;->fs()I",
        "Lorg/meteoroid/core/g;->aW()V",
        "Lorg/meteoroid/core/g;->onDestroy()V",
        "Lorg/meteoroid/core/g;->a()Lorg/meteoroid/core/g$a;",
        "Lorg/meteoroid/core/g;->aX()V",
        "Lorg/meteoroid/core/g;->aY()V",
        "Lorg/meteoroid/core/g;->a()V"
    ],
    "Lorg/meteoroid/core/a$a;": [
        "Lorg/meteoroid/core/a$a;->dy()V",
        "Lorg/meteoroid/core/a$a;->onResume()V",
        "Lorg/meteoroid/core/a$a;->onPause()V",
        "Lorg/meteoroid/core/a$a;->getState()I",
        "Lorg/meteoroid/core/a$a;->onDestroy()V",
        "Lorg/meteoroid/core/a$a;->onStart()V"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->isEmpty()Z",
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->containsValue()Z",
        "Ljava/util/HashMap;->values()Ljava/util/Collection;",
        "Ljava/util/HashMap;->size()I",
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->clear()V"
    ],
    "Landroid/widget/FrameLayout;": [
        "Landroid/widget/FrameLayout;->setBackgroundColor()V",
        "Landroid/widget/FrameLayout;->setLayoutParams()V",
        "Landroid/widget/FrameLayout;->setId()V",
        "Landroid/widget/FrameLayout;->requestFocus()Z"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->postDelayed()Z"
    ],
    "Lorg/meteoroid/core/m;": [
        "Lorg/meteoroid/core/m;->aU()Z",
        "Lorg/meteoroid/core/m;->onDestroy()V",
        "Lorg/meteoroid/core/m;->gd()V",
        "Lorg/meteoroid/core/m;->gh()V",
        "Lorg/meteoroid/core/m;->a()V"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->setNeutralButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setView()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setItems()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setOnCancelListener()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;"
    ],
    "Lorg/meteoroid/core/m$a;": [
        "Lorg/meteoroid/core/m$a;->aU()Z",
        "Lorg/meteoroid/core/m$a;->getView()Landroid/view/View;"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/app/Activity;->getBaseContext()Landroid/content/Context;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->deleteFile()Z",
        "Landroid/app/Activity;->onActivityResult()V",
        "Landroid/app/Activity;->onLowMemory()V",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->closeOptionsMenu()V",
        "Landroid/app/Activity;->onPostResume()V",
        "Landroid/app/Activity;->getString()Ljava/lang/String;",
        "Landroid/app/Activity;->addContentView()V",
        "Landroid/app/Activity;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/app/Activity;->getFilesDir()Ljava/io/File;",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->onRestart()V",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->getSystemService()Ljava/lang/Object;",
        "Landroid/app/Activity;->fileList()[Ljava/lang/String;",
        "Landroid/app/Activity;->getWindow()Landroid/view/Window;",
        "Landroid/app/Activity;->getPackageName()Ljava/lang/String;",
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/app/Activity;->setRequestedOrientation()V",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->openOptionsMenu()V",
        "Landroid/app/Activity;->unregisterReceiver()V",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->finish()V",
        "Landroid/app/Activity;->onOptionsItemSelected()Z",
        "Landroid/app/Activity;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/app/Activity;->registerReceiver()Landroid/content/Intent;",
        "Landroid/app/Activity;->checkCallingOrSelfPermission()I"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getResourcePackageName()Ljava/lang/String;",
        "Landroid/content/res/Resources;->openRawResource()Ljava/io/InputStream;",
        "Landroid/content/res/Resources;->getResourceEntryName()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getResourceTypeName()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->size()I",
        "Ljava/util/Properties;->get()Ljava/lang/Object;",
        "Ljava/util/Properties;->store()V",
        "Ljava/util/Properties;->containsKey()Z",
        "Ljava/util/Properties;->load()V",
        "Ljava/util/Properties;->keySet()Ljava/util/Set;",
        "Ljava/util/Properties;->clear()V",
        "Ljava/util/Properties;->put()Ljava/lang/Object;",
        "Ljava/util/Properties;->getProperty()Ljava/lang/String;"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;",
        "Ljava/lang/Boolean;->booleanValue()Z"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setFlags()V",
        "Landroid/view/Window;->setBackgroundDrawable()V",
        "Landroid/view/Window;->requestFeature()Z"
    ],
    "Lorg/meteoroid/core/d;": [
        "Lorg/meteoroid/core/d;->a()V",
        "Lorg/meteoroid/core/d;->fm()Ljava/util/LinkedHashSet;",
        "Lorg/meteoroid/core/d;->onDestroy()V"
    ],
    "Lorg/meteoroid/core/f;": [
        "Lorg/meteoroid/core/f;->onTrackballEvent()Z",
        "Lorg/meteoroid/core/f;->a()V",
        "Lorg/meteoroid/core/f;->a()Z",
        "Lorg/meteoroid/core/f;->onDestroy()V"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->intValue()I"
    ],
    "Lorg/meteoroid/core/i;": [
        "Lorg/meteoroid/core/i;->a()V",
        "Lorg/meteoroid/core/i;->onPrepareOptionsMenu()V",
        "Lorg/meteoroid/core/i;->onDestroy()V"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getInstalledPackages()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getApplicationLabel()Ljava/lang/CharSequence;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getLaunchIntentForPackage()Landroid/content/Intent;",
        "Landroid/content/pm/PackageManager;->checkPermission()I"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->get()Ljava/lang/Object;",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;"
    ],
    "Landroid/content/pm/PackageManager$NameNotFoundException;": [
        "Landroid/content/pm/PackageManager$NameNotFoundException;->getMessage()Ljava/lang/String;",
        "Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->fromFile()Landroid/net/Uri;",
        "Landroid/net/Uri;->withAppendedPath()Landroid/net/Uri;",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->vibrate()V"
    ],
    "Landroid/os/Process;": [
        "Landroid/os/Process;->killProcess()V",
        "Landroid/os/Process;->myPid()I"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getNetworkOperatorName()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDataState()I",
        "Landroid/telephony/TelephonyManager;->getSimState()I",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getSimOperator()Ljava/lang/String;"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->getString()Ljava/lang/String;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->getWallpaperDesiredMinimumHeight()I",
        "Landroid/content/Context;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->bindService()Z",
        "Landroid/content/Context;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->deleteFile()Z",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->getCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->getFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->getWallpaperDesiredMinimumWidth()I",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->setComponent()Landroid/content/Intent;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getDataString()Ljava/lang/String;",
        "Landroid/content/Intent;->resolveActivityInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setClass()Landroid/content/Intent;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->setPackage()Landroid/content/Intent;"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->removeAll()Z",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->addAll()Z",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->isEmpty()Z",
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->set()Ljava/lang/Object;",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->hasNext()Z",
        "Ljava/util/Iterator;->next()Ljava/lang/Object;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getHeight()I",
        "Landroid/view/Display;->getWidth()I"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->digest()[B",
        "Ljava/security/MessageDigest;->reset()V"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;",
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;",
        "Landroid/location/LocationManager;->getProviders()Ljava/util/List;",
        "Landroid/location/LocationManager;->requestLocationUpdates()V"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->getSubtypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->getType()I",
        "Landroid/net/NetworkInfo;->getTypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;",
        "Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnectedOrConnecting()Z"
    ],
    "Ljava/util/Timer;": [
        "Ljava/util/Timer;->cancel()V",
        "Ljava/util/Timer;->schedule()V",
        "Ljava/util/Timer;->purge()I"
    ],
    "Lorg/meteoroid/core/c;": [
        "Lorg/meteoroid/core/c;->onDestroy()V"
    ],
    "Lorg/meteoroid/core/n;": [
        "Lorg/meteoroid/core/n;->gn()V",
        "Lorg/meteoroid/core/n;->onDestroy()V",
        "Lorg/meteoroid/core/n;->gr()V",
        "Lorg/meteoroid/core/n;->gp()V"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->setWifiEnabled()Z",
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->setAccessible()V"
    ],
    "Ljava/lang/SecurityException;": [
        "Ljava/lang/SecurityException;->printStackTrace()V"
    ],
    "Ljava/lang/IllegalArgumentException;": [
        "Ljava/lang/IllegalArgumentException;->printStackTrace()V"
    ],
    "Ljava/lang/ClassNotFoundException;": [
        "Ljava/lang/ClassNotFoundException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/ClassNotFoundException;->printStackTrace()V"
    ],
    "Ljava/lang/NoSuchMethodException;": [
        "Ljava/lang/NoSuchMethodException;->printStackTrace()V"
    ],
    "Ljava/lang/IllegalAccessException;": [
        "Ljava/lang/IllegalAccessException;->printStackTrace()V"
    ],
    "Ljava/lang/reflect/InvocationTargetException;": [
        "Ljava/lang/reflect/InvocationTargetException;->printStackTrace()V"
    ],
    "Lorg/meteoroid/core/b;": [
        "Lorg/meteoroid/core/b;->at()Ljava/io/InputStream;",
        "Lorg/meteoroid/core/b;->au()Z",
        "Lorg/meteoroid/core/b;->ap()Ljava/util/List;",
        "Lorg/meteoroid/core/b;->as()Ljava/io/OutputStream;",
        "Lorg/meteoroid/core/b;->aq()Ljava/lang/String;",
        "Lorg/meteoroid/core/b;->ar()Z"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->remove()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->add()V",
        "Ljava/util/ArrayList;->isEmpty()Z",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->set()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;",
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->contains()Z"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->getItemId()I"
    ],
    "Lorg/meteoroid/core/i$c;": [
        "Lorg/meteoroid/core/i$c;->bc()V",
        "Lorg/meteoroid/core/i$c;->aZ()Ljava/lang/String;",
        "Lorg/meteoroid/core/i$c;->getId()I"
    ],
    "Landroid/view/Menu;": [
        "Landroid/view/Menu;->clear()V",
        "Landroid/view/Menu;->add()Landroid/view/MenuItem;"
    ],
    "Ljava/util/LinkedList;": [
        "Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedList;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->contains()Z",
        "Ljava/util/LinkedList;->size()I",
        "Ljava/util/LinkedList;->remove()Z",
        "Ljava/util/LinkedList;->clear()V",
        "Ljava/util/LinkedList;->add()Z"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeResource()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeFile()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;"
    ],
    "Landroid/view/SurfaceView;": [
        "Landroid/view/SurfaceView;->setLongClickable()V",
        "Landroid/view/SurfaceView;->setId()V",
        "Landroid/view/SurfaceView;->setFocusableInTouchMode()V",
        "Landroid/view/SurfaceView;->getHolder()Landroid/view/SurfaceHolder;",
        "Landroid/view/SurfaceView;->setFocusable()V",
        "Landroid/view/SurfaceView;->setLayoutParams()V"
    ],
    "Landroid/view/SurfaceHolder;": [
        "Landroid/view/SurfaceHolder;->addCallback()V",
        "Landroid/view/SurfaceHolder;->removeCallback()V",
        "Landroid/view/SurfaceHolder;->unlockCanvasAndPost()V",
        "Landroid/view/SurfaceHolder;->setType()V",
        "Landroid/view/SurfaceHolder;->lockCanvas()Landroid/graphics/Canvas;"
    ],
    "Lorg/meteoroid/core/e$a;": [
        "Lorg/meteoroid/core/e$a;->onDraw()V"
    ],
    "Landroid/os/Message;": [
        "Landroid/os/Message;->getData()Landroid/os/Bundle;",
        "Landroid/os/Message;->obtain()Landroid/os/Message;",
        "Landroid/os/Message;->recycle()V",
        "Landroid/os/Message;->setData()V"
    ],
    "Ljava/util/concurrent/ConcurrentLinkedQueue;": [
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->size()I",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->poll()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->clear()V",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->add()Z",
        "Ljava/util/concurrent/ConcurrentLinkedQueue;->contains()Z"
    ],
    "Lorg/meteoroid/core/h$a;": [
        "Lorg/meteoroid/core/h$a;->a()Z"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->sleep()V"
    ],
    "Ljava/util/LinkedHashSet;": [
        "Ljava/util/LinkedHashSet;->remove()Z",
        "Ljava/util/LinkedHashSet;->clear()V",
        "Ljava/util/LinkedHashSet;->isEmpty()Z",
        "Ljava/util/LinkedHashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedHashSet;->contains()Z",
        "Ljava/util/LinkedHashSet;->add()Z"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->reset()V",
        "Landroid/media/MediaPlayer;->release()V"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->close()V",
        "Ljava/io/FileOutputStream;->flush()V",
        "Ljava/io/FileOutputStream;->write()V"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->getParent()Ljava/lang/String;",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->listRoots()[Ljava/io/File;",
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->getCanonicalPath()Ljava/lang/String;",
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->renameTo()Z",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->deleteOnExit()V",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->canWrite()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->getCanonicalFile()Ljava/io/File;"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->setStreamVolume()V",
        "Landroid/media/AudioManager;->getStreamVolume()I",
        "Landroid/media/AudioManager;->getStreamMaxVolume()I"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->toArray()[Ljava/lang/Object;",
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->getDefaultSensor()Landroid/hardware/Sensor;",
        "Landroid/hardware/SensorManager;->unregisterListener()V",
        "Landroid/hardware/SensorManager;->registerListener()Z"
    ],
    "Lorg/meteoroid/core/f$a;": [
        "Lorg/meteoroid/core/f$a;->a()Z"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->getTag()Ljava/lang/Object;",
        "Landroid/view/View;->getRight()I",
        "Landroid/view/View;->getTop()I",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->setTag()V",
        "Landroid/view/View;->setOnKeyListener()V",
        "Landroid/view/View;->setOnTouchListener()V",
        "Landroid/view/View;->postInvalidate()V",
        "Landroid/view/View;->findViewById()Landroid/view/View;",
        "Landroid/view/View;->dispatchTouchEvent()Z",
        "Landroid/view/View;->setVisibility()V"
    ],
    "Lorg/meteoroid/core/f$b;": [
        "Lorg/meteoroid/core/f$b;->a()Z"
    ],
    "Lorg/meteoroid/core/f$f;": [
        "Lorg/meteoroid/core/f$f;->onTrackballEvent()Z"
    ],
    "Lorg/meteoroid/core/f$e;": [
        "Lorg/meteoroid/core/f$e;->onFling()Z"
    ],
    "Landroid/view/GestureDetector;": [
        "Landroid/view/GestureDetector;->onTouchEvent()Z"
    ],
    "Lorg/meteoroid/core/f$d;": [
        "Lorg/meteoroid/core/f$d;->a()V"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->setLocation()V",
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->getY()F"
    ],
    "Lorg/meteoroid/core/MeteoroidActivity;": [
        "Lorg/meteoroid/core/MeteoroidActivity;->getIntent()Landroid/content/Intent;",
        "Lorg/meteoroid/core/MeteoroidActivity;->getWindow()Landroid/view/Window;"
    ],
    "Lorg/meteoroid/plugin/vd/AbstractRoundWidget;": [
        "Lorg/meteoroid/plugin/vd/AbstractRoundWidget;->a()V",
        "Lorg/meteoroid/plugin/vd/AbstractRoundWidget;->reset()V"
    ],
    "Landroid/util/AttributeSet;": [
        "Landroid/util/AttributeSet;->getAttributeIntValue()I",
        "Landroid/util/AttributeSet;->getAttributeValue()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getAttributeBooleanValue()Z"
    ],
    "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;": [
        "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;->release()V",
        "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;->a()Lorg/meteoroid/plugin/vd/VirtualKey;",
        "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;->reset()V",
        "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;->a()Z",
        "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;->a()F",
        "Lorg/meteoroid/plugin/vd/ArcadeJoyStick;->a()I"
    ],
    "Lorg/meteoroid/plugin/vd/VirtualKey;": [
        "Lorg/meteoroid/plugin/vd/VirtualKey;->a()V",
        "Lorg/meteoroid/plugin/vd/VirtualKey;->hz()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/vd/VirtualKey;->hk()I"
    ],
    "Lorg/meteoroid/plugin/vd/ScreenWidget;": [
        "Lorg/meteoroid/plugin/vd/ScreenWidget;->hx()V",
        "Lorg/meteoroid/plugin/vd/ScreenWidget;->hu()Landroid/graphics/Rect;",
        "Lorg/meteoroid/plugin/vd/ScreenWidget;->gv()Landroid/graphics/Bitmap;",
        "Lorg/meteoroid/plugin/vd/ScreenWidget;->a()V"
    ],
    "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;": [
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->hq()Ljava/util/Properties;",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->onCreate()V",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->onDestroy()V",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->hr()Ljava/util/LinkedHashSet;",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->hs()Lorg/meteoroid/plugin/vd/ScreenWidget;",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->ht()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->a()V"
    ],
    "Lorg/meteoroid/plugin/vd/SensorSwitcher;": [
        "Lorg/meteoroid/plugin/vd/SensorSwitcher;->ho()V",
        "Lorg/meteoroid/plugin/vd/SensorSwitcher;->a()V",
        "Lorg/meteoroid/plugin/vd/SensorSwitcher;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/vd/SensorSwitcher;->hy()V"
    ],
    "Lorg/meteoroid/plugin/vd/BooleanSwitcher;": [
        "Lorg/meteoroid/plugin/vd/BooleanSwitcher;->hn()Z",
        "Lorg/meteoroid/plugin/vd/BooleanSwitcher;->a()V",
        "Lorg/meteoroid/plugin/vd/BooleanSwitcher;->ho()V",
        "Lorg/meteoroid/plugin/vd/BooleanSwitcher;->hp()V",
        "Lorg/meteoroid/plugin/vd/BooleanSwitcher;->hm()V"
    ],
    "Lorg/meteoroid/plugin/vd/SteeringWheel;": [
        "Lorg/meteoroid/plugin/vd/SteeringWheel;->release()V",
        "Lorg/meteoroid/plugin/vd/SteeringWheel;->reset()V",
        "Lorg/meteoroid/plugin/vd/SteeringWheel;->a()F"
    ],
    "Landroid/graphics/Matrix;": [
        "Landroid/graphics/Matrix;->setRotate()V",
        "Landroid/graphics/Matrix;->preRotate()Z",
        "Landroid/graphics/Matrix;->setTranslate()V",
        "Landroid/graphics/Matrix;->reset()V",
        "Landroid/graphics/Matrix;->preScale()Z"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->parseFloat()F"
    ],
    "Lorg/meteoroid/plugin/vd/Background;": [
        "Lorg/meteoroid/plugin/vd/Background;->onDraw()V"
    ],
    "Lorg/meteoroid/plugin/vd/SimpleButton;": [
        "Lorg/meteoroid/plugin/vd/SimpleButton;->onClick()V",
        "Lorg/meteoroid/plugin/vd/SimpleButton;->a()V"
    ],
    "Lorg/meteoroid/plugin/vd/CommandButton;": [
        "Lorg/meteoroid/plugin/vd/CommandButton;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/vd/CommandButton;->aM()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;": [
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->aI()V",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->gA()V",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->gC()V",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->bk()V",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->a()V",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->gz()Ljava/util/List;",
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall;->gB()V"
    ],
    "Lorg/meteoroid/plugin/vd/Joystick;": [
        "Lorg/meteoroid/plugin/vd/Joystick;->a()Z",
        "Lorg/meteoroid/plugin/vd/Joystick;->onDraw()V",
        "Lorg/meteoroid/plugin/vd/Joystick;->a()V",
        "Lorg/meteoroid/plugin/vd/Joystick;->release()V",
        "Lorg/meteoroid/plugin/vd/Joystick;->a()F",
        "Lorg/meteoroid/plugin/vd/Joystick;->a()Lorg/meteoroid/plugin/vd/VirtualKey;",
        "Lorg/meteoroid/plugin/vd/Joystick;->reset()V"
    ],
    "Lorg/meteoroid/plugin/vd/DynamicJoystick;": [
        "Lorg/meteoroid/plugin/vd/DynamicJoystick;->a()F",
        "Lorg/meteoroid/plugin/vd/DynamicJoystick;->release()V",
        "Lorg/meteoroid/plugin/vd/DynamicJoystick;->a()Lorg/meteoroid/plugin/vd/VirtualKey;"
    ],
    "Lorg/meteoroid/plugin/vd/AbstractButton;": [
        "Lorg/meteoroid/plugin/vd/AbstractButton;->a()V",
        "Lorg/meteoroid/plugin/vd/AbstractButton;->a()Z"
    ],
    "Lorg/meteoroid/plugin/vd/Switcher;": [
        "Lorg/meteoroid/plugin/vd/Switcher;->a()V"
    ],
    "Lorg/meteoroid/plugin/sns/SocialNetworkPlatform;": [
        "Lorg/meteoroid/plugin/sns/SocialNetworkPlatform;->eU()V",
        "Lorg/meteoroid/plugin/sns/SocialNetworkPlatform;->a()V",
        "Lorg/meteoroid/plugin/sns/SocialNetworkPlatform;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/sns/SocialNetworkPlatform;->update()V"
    ],
    "Lorg/meteoroid/plugin/sns/c;": [
        "Lorg/meteoroid/plugin/sns/c;->hi()Lorg/meteoroid/plugin/sns/c$a;",
        "Lorg/meteoroid/plugin/sns/c;->a()V"
    ],
    "Lorg/meteoroid/plugin/sns/b;": [
        "Lorg/meteoroid/plugin/sns/b;->hh()Lorg/meteoroid/plugin/sns/b$a;"
    ],
    "Lorg/meteoroid/plugin/sns/b$a;": [
        "Lorg/meteoroid/plugin/sns/b$a;->a()V"
    ],
    "Lorg/meteoroid/plugin/device/MIDPDevice;": [
        "Lorg/meteoroid/plugin/device/MIDPDevice;->aJ()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->aO()Z",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->hx()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->bf()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->lock()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->gu()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->aH()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->aR()Z",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->aQ()Z",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->setTouchable()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getWidth()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->a()Lorg/meteoroid/plugin/device/MIDPDevice$d;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->a()Landroid/graphics/Matrix;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->isTouchable()Z",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->hu()Landroid/graphics/Rect;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->bg()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->bi()Z",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->bh()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->a()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->a()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->gw()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->a()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getHeight()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->aP()Z",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->unlock()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->a()Z"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;",
        "Ljava/io/BufferedReader;->close()V",
        "Ljava/io/BufferedReader;->read()I"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;",
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->find()Z"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->toArray()[Ljava/lang/Object;",
        "Ljava/util/Set;->size()I",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->add()Z"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getAction()I",
        "Landroid/view/KeyEvent;->getRepeatCount()I",
        "Landroid/view/KeyEvent;->getKeyCode()I",
        "Landroid/view/KeyEvent;->getCharacters()Ljava/lang/String;"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Landroid/bluetooth/BluetoothAdapter;": [
        "Landroid/bluetooth/BluetoothAdapter;->getRemoteDevice()Landroid/bluetooth/BluetoothDevice;",
        "Landroid/bluetooth/BluetoothAdapter;->getName()Ljava/lang/String;",
        "Landroid/bluetooth/BluetoothAdapter;->getAddress()Ljava/lang/String;",
        "Landroid/bluetooth/BluetoothAdapter;->cancelDiscovery()Z",
        "Landroid/bluetooth/BluetoothAdapter;->setName()Z",
        "Landroid/bluetooth/BluetoothAdapter;->startDiscovery()Z",
        "Landroid/bluetooth/BluetoothAdapter;->getDefaultAdapter()Landroid/bluetooth/BluetoothAdapter;",
        "Landroid/bluetooth/BluetoothAdapter;->getBondedDevices()Ljava/util/Set;"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractOptionMenuItemFeature;": [
        "Lorg/meteoroid/plugin/feature/AbstractOptionMenuItemFeature;->aZ()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/AbstractOptionMenuItemFeature;->aI()V"
    ],
    "Lorg/meteoroid/plugin/feature/Umeng$1;": [
        "Lorg/meteoroid/plugin/feature/Umeng$1;->start()V"
    ],
    "Lcom/umeng/analytics/MobclickAgent;": [
        "Lcom/umeng/analytics/MobclickAgent;->a()Z",
        "Lcom/umeng/analytics/MobclickAgent;->a()[J",
        "Lcom/umeng/analytics/MobclickAgent;->a()V",
        "Lcom/umeng/analytics/MobclickAgent;->onError()V",
        "Lcom/umeng/analytics/MobclickAgent;->onPause()V",
        "Lcom/umeng/analytics/MobclickAgent;->a()Landroid/content/SharedPreferences;",
        "Lcom/umeng/analytics/MobclickAgent;->updateOnlineConfig()V",
        "Lcom/umeng/analytics/MobclickAgent;->a()I",
        "Lcom/umeng/analytics/MobclickAgent;->onResume()V",
        "Lcom/umeng/analytics/MobclickAgent;->a()Ljava/lang/String;",
        "Lcom/umeng/analytics/MobclickAgent;->getUmengHttpHeader()Ljava/lang/String;",
        "Lcom/umeng/analytics/MobclickAgent;->a()Lorg/json/JSONObject;",
        "Lcom/umeng/analytics/MobclickAgent;->a()Lorg/json/JSONArray;",
        "Lcom/umeng/analytics/MobclickAgent;->onEvent()V"
    ],
    "Lcom/umeng/update/UmengUpdateAgent;": [
        "Lcom/umeng/update/UmengUpdateAgent;->a()Lcom/umeng/update/UmengUpdateAgent;",
        "Lcom/umeng/update/UmengUpdateAgent;->setUpdateAutoPopup()V",
        "Lcom/umeng/update/UmengUpdateAgent;->a()V",
        "Lcom/umeng/update/UmengUpdateAgent;->a()Landroid/content/SharedPreferences;",
        "Lcom/umeng/update/UmengUpdateAgent;->update()V"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->toString()Ljava/lang/String;",
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->longValue()J",
        "Ljava/lang/Long;->parseLong()J"
    ],
    "Lorg/meteoroid/core/k;": [
        "Lorg/meteoroid/core/k;->bc()Lorg/meteoroid/core/k$c;"
    ],
    "Lorg/meteoroid/core/k$c;": [
        "Lorg/meteoroid/core/k$c;->getEditor()Landroid/content/SharedPreferences$Editor;",
        "Lorg/meteoroid/core/k$c;->getSharedPreferences()Landroid/content/SharedPreferences;"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->contains()Z",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->getLong()J"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->remove()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;"
    ],
    "Lorg/meteoroid/plugin/feature/Umeng;": [
        "Lorg/meteoroid/plugin/feature/Umeng;->hf()V",
        "Lorg/meteoroid/plugin/feature/Umeng;->getName()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;": [
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->a()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->onDestroy()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->gF()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->a()Z",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->gE()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->gH()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->aI()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->fail()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->gI()V",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager;->getName()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;": [
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->gR()V",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->gP()Z",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->aK()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->a()V",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->aI()V",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->gQ()V",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->fail()V",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->gE()V",
        "Lorg/meteoroid/plugin/feature/AbstractTrialActivation;->gO()Z"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractSMSPayment;": [
        "Lorg/meteoroid/plugin/feature/AbstractSMSPayment;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/AbstractSMSPayment;->a()Landroid/app/PendingIntent;",
        "Lorg/meteoroid/plugin/feature/AbstractSMSPayment;->a()V"
    ],
    "Landroid/telephony/SmsManager;": [
        "Landroid/telephony/SmsManager;->getDefault()Landroid/telephony/SmsManager;",
        "Landroid/telephony/SmsManager;->sendTextMessage()V",
        "Landroid/telephony/SmsManager;->divideMessage()Ljava/util/ArrayList;",
        "Landroid/telephony/SmsManager;->sendDataMessage()V"
    ],
    "Lorg/meteoroid/plugin/feature/TrialActivation;": [
        "Lorg/meteoroid/plugin/feature/TrialActivation;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/TrialActivation;->he()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/TrialActivation;->aK()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/TrialActivation;->gG()V",
        "Lorg/meteoroid/plugin/feature/TrialActivation;->hd()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/TrialActivation;->hc()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/feature/MoreGame;": [
        "Lorg/meteoroid/plugin/feature/MoreGame;->a()V",
        "Lorg/meteoroid/plugin/feature/MoreGame;->getValue()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractPaymentManager$Payment;": [
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager$Payment;->aZ()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/AbstractPaymentManager$Payment;->gJ()V"
    ],
    "Lorg/meteoroid/plugin/feature/Mercury;": [
        "Lorg/meteoroid/plugin/feature/Mercury;->gJ()V",
        "Lorg/meteoroid/plugin/feature/Mercury;->getName()Ljava/lang/String;"
    ],
    "Lme/gall/mercury/bean/AdAdvertisement;": [
        "Lme/gall/mercury/bean/AdAdvertisement;->setsIconUrl()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->isApkStart()Z",
        "Lme/gall/mercury/bean/AdAdvertisement;->setDetails()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->setApkName()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->setApkPackage()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->getApkName()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->setApkUrl()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->getlIconUrl()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->getId()I",
        "Lme/gall/mercury/bean/AdAdvertisement;->getApkPackage()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->getName()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->setName()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->getApkUrl()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->setApkInfo()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->setlIconUrl()V",
        "Lme/gall/mercury/bean/AdAdvertisement;->getsIconUrl()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->getSeparatePrice()D",
        "Lme/gall/mercury/bean/AdAdvertisement;->getApkInfo()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->getDetails()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdAdvertisement;->setbIconUrl()V"
    ],
    "Lme/gall/mercury/util/AdManager;": [
        "Lme/gall/mercury/util/AdManager;->isPingBan()Z",
        "Lme/gall/mercury/util/AdManager;->getDpiStr()Ljava/lang/String;",
        "Lme/gall/mercury/util/AdManager;->openConnect()V",
        "Lme/gall/mercury/util/AdManager;->getAd()V",
        "Lme/gall/mercury/util/AdManager;->adViewDestory()V",
        "Lme/gall/mercury/util/AdManager;->stopQuietlyDownload()V"
    ],
    "Lorg/meteoroid/plugin/feature/Advertisement;": [
        "Lorg/meteoroid/plugin/feature/Advertisement;->gY()V",
        "Lorg/meteoroid/plugin/feature/Advertisement;->getDuration()I",
        "Lorg/meteoroid/plugin/feature/Advertisement;->cancel()Z",
        "Lorg/meteoroid/plugin/feature/Advertisement;->gX()Landroid/view/View;",
        "Lorg/meteoroid/plugin/feature/Advertisement;->aK()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/Advertisement;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/Advertisement;->a()V",
        "Lorg/meteoroid/plugin/feature/Advertisement;->gT()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/feature/Advertisement;->gU()Z",
        "Lorg/meteoroid/plugin/feature/Advertisement;->isShown()Z"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->setLayoutParams()V",
        "Landroid/widget/RelativeLayout;->addView()V",
        "Landroid/widget/RelativeLayout;->setVisibility()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V"
    ],
    "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall$b;": [
        "Lorg/meteoroid/plugin/feature/AbstractDownloadAndInstall$b;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/content/IntentFilter;": [
        "Landroid/content/IntentFilter;->addDataScheme()V",
        "Landroid/content/IntentFilter;->addAction()V"
    ],
    "Lcom/samsung/util/SMS;": [
        "Lcom/samsung/util/SMS;->a()Z"
    ],
    "Lcom/samsung/util/SM;": [
        "Lcom/samsung/util/SM;->setData()V",
        "Lcom/samsung/util/SM;->a()Z",
        "Lcom/samsung/util/SM;->a()V",
        "Lcom/samsung/util/SM;->getData()Ljava/lang/String;"
    ],
    "Lcom/samsung/util/Vibration;": [
        "Lcom/samsung/util/Vibration;->a()Z"
    ],
    "Lcom/samsung/util/LCDLight;": [
        "Lcom/samsung/util/LCDLight;->a()Z"
    ],
    "Lcom/samsung/util/AudioClip;": [
        "Lcom/samsung/util/AudioClip;->a()Z",
        "Lcom/samsung/util/AudioClip;->a()[B"
    ],
    "Lcom/androidbox/midp/APIBridge;": [
        "Lcom/androidbox/midp/APIBridge;->isAvailable()Z",
        "Lcom/androidbox/midp/APIBridge;->a()V"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->add()Z",
        "Ljava/util/Vector;->elements()Ljava/util/Enumeration;",
        "Ljava/util/Vector;->get()Ljava/lang/Object;",
        "Ljava/util/Vector;->addElement()V",
        "Ljava/util/Vector;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Vector;->remove()Z",
        "Ljava/util/Vector;->insertElementAt()V",
        "Ljava/util/Vector;->size()I"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->clear()V",
        "Ljava/util/HashSet;->remove()Z",
        "Ljava/util/HashSet;->contains()Z"
    ],
    "Landroid/location/Criteria;": [
        "Landroid/location/Criteria;->setCostAllowed()V",
        "Landroid/location/Criteria;->setSpeedRequired()V",
        "Landroid/location/Criteria;->setBearingRequired()V",
        "Landroid/location/Criteria;->setAccuracy()V",
        "Landroid/location/Criteria;->setPowerRequirement()V",
        "Landroid/location/Criteria;->setAltitudeRequired()V"
    ],
    "Landroid/bluetooth/BluetoothClass;": [
        "Landroid/bluetooth/BluetoothClass;->getDeviceClass()I",
        "Landroid/bluetooth/BluetoothClass;->getMajorDeviceClass()I"
    ],
    "Landroid/bluetooth/BluetoothSocket;": [
        "Landroid/bluetooth/BluetoothSocket;->getOutputStream()Ljava/io/OutputStream;",
        "Landroid/bluetooth/BluetoothSocket;->getInputStream()Ljava/io/InputStream;"
    ],
    "Landroid/bluetooth/BluetoothDevice;": [
        "Landroid/bluetooth/BluetoothDevice;->getName()Ljava/lang/String;",
        "Landroid/bluetooth/BluetoothDevice;->getBondState()I",
        "Landroid/bluetooth/BluetoothDevice;->getAddress()Ljava/lang/String;"
    ],
    "Ljava/util/UUID;": [
        "Ljava/util/UUID;->fromString()Ljava/util/UUID;",
        "Ljava/util/UUID;->toString()Ljava/lang/String;"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->printStackTrace()V"
    ],
    "Ljava/lang/InstantiationException;": [
        "Ljava/lang/InstantiationException;->printStackTrace()V"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->removeViewAt()V",
        "Landroid/widget/LinearLayout;->setLayoutParams()V",
        "Landroid/widget/LinearLayout;->postInvalidate()V",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->removeView()V",
        "Landroid/widget/LinearLayout;->setOrientation()V",
        "Landroid/widget/LinearLayout;->getWidth()I"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->postInvalidate()V",
        "Landroid/widget/TextView;->setLayoutParams()V",
        "Landroid/widget/TextView;->getContext()Landroid/content/Context;",
        "Landroid/widget/TextView;->setTextSize()V",
        "Landroid/widget/TextView;->setTextAppearance()V",
        "Landroid/widget/TextView;->setOnClickListener()V"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setImageDrawable()V",
        "Landroid/widget/ImageView;->setBackgroundDrawable()V",
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->startAnimation()V",
        "Landroid/widget/ImageView;->postInvalidate()V",
        "Landroid/widget/ImageView;->setImageResource()V"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->asList()Ljava/util/List;",
        "Ljava/util/Arrays;->toString()Ljava/lang/String;"
    ],
    "Landroid/widget/ArrayAdapter;": [
        "Landroid/widget/ArrayAdapter;->add()V",
        "Landroid/widget/ArrayAdapter;->getItem()Ljava/lang/Object;",
        "Landroid/widget/ArrayAdapter;->insert()V",
        "Landroid/widget/ArrayAdapter;->setNotifyOnChange()V",
        "Landroid/widget/ArrayAdapter;->remove()V",
        "Landroid/widget/ArrayAdapter;->clear()V",
        "Landroid/widget/ArrayAdapter;->getCount()I"
    ],
    "Landroid/widget/Spinner;": [
        "Landroid/widget/Spinner;->getSelectedItemPosition()I",
        "Landroid/widget/Spinner;->setSelection()V",
        "Landroid/widget/Spinner;->setAdapter()V"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setOnItemClickListener()V",
        "Landroid/widget/ListView;->setEnabled()V",
        "Landroid/widget/ListView;->isItemChecked()Z",
        "Landroid/widget/ListView;->setBackgroundColor()V",
        "Landroid/widget/ListView;->setChoiceMode()V",
        "Landroid/widget/ListView;->setItemChecked()V",
        "Landroid/widget/ListView;->getCount()I",
        "Landroid/widget/ListView;->setDividerHeight()V",
        "Landroid/widget/ListView;->setOnKeyListener()V",
        "Landroid/widget/ListView;->setAdapter()V"
    ],
    "Ljava/util/Calendar;": [
        "Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;",
        "Ljava/util/Calendar;->get()I",
        "Ljava/util/Calendar;->getTimeZone()Ljava/util/TimeZone;"
    ],
    "Landroid/widget/TimePicker;": [
        "Landroid/widget/TimePicker;->setOnTimeChangedListener()V"
    ],
    "Landroid/widget/Button;": [
        "Landroid/widget/Button;->setOnClickListener()V",
        "Landroid/widget/Button;->setText()V"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->setFilters()V",
        "Landroid/widget/EditText;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/widget/EditText;->getText()Landroid/text/Editable;",
        "Landroid/widget/EditText;->clearFocus()V"
    ],
    "Landroid/view/inputmethod/InputMethodManager;": [
        "Landroid/view/inputmethod/InputMethodManager;->hideSoftInputFromWindow()Z"
    ],
    "Landroid/widget/ScrollView;": [
        "Landroid/widget/ScrollView;->setVerticalFadingEdgeEnabled()V",
        "Landroid/widget/ScrollView;->setVerticalScrollBarEnabled()V",
        "Landroid/widget/ScrollView;->addView()V"
    ],
    "Landroid/text/Html;": [
        "Landroid/text/Html;->fromHtml()Landroid/text/Spanned;"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->get()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->put()Ljava/lang/Object;"
    ],
    "Lorg/meteoroid/plugin/device/MIDPDevice$c;": [
        "Lorg/meteoroid/plugin/device/MIDPDevice$c;->a()I"
    ],
    "Landroid/widget/SeekBar;": [
        "Landroid/widget/SeekBar;->setMax()V",
        "Landroid/widget/SeekBar;->setProgress()V"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->setOnClickListener()V",
        "Landroid/widget/ProgressBar;->setMax()V",
        "Landroid/widget/ProgressBar;->setMinimumWidth()V",
        "Landroid/widget/ProgressBar;->setProgress()V",
        "Landroid/widget/ProgressBar;->setIndeterminate()V",
        "Landroid/widget/ProgressBar;->incrementProgressBy()V"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getAccuracy()F",
        "Landroid/location/Location;->getTime()J",
        "Landroid/location/Location;->getBearing()F",
        "Landroid/location/Location;->getAltitude()D",
        "Landroid/location/Location;->getSpeed()F",
        "Landroid/location/Location;->getLongitude()D"
    ],
    "Landroid/net/Uri$Builder;": [
        "Landroid/net/Uri$Builder;->build()Landroid/net/Uri;",
        "Landroid/net/Uri$Builder;->scheme()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->appendEncodedPath()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->encodedAuthority()Landroid/net/Uri$Builder;"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->getModifiers()I",
        "Ljava/lang/reflect/Field;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/Field;->getType()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->isSynthetic()Z",
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Field;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Field;->setAccessible()V",
        "Ljava/lang/reflect/Field;->getAnnotations()[Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/Field;->getGenericType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Field;->getInt()I",
        "Ljava/lang/reflect/Field;->getDeclaringClass()Ljava/lang/Class;"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->clearFocus()V"
    ],
    "Landroid/text/format/Time;": [
        "Landroid/text/format/Time;->setToNow()V"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;",
        "Landroid/content/ContentResolver;->query()Landroid/database/Cursor;",
        "Landroid/content/ContentResolver;->update()I",
        "Landroid/content/ContentResolver;->delete()I"
    ],
    "Landroid/content/ContentUris;": [
        "Landroid/content/ContentUris;->parseId()J",
        "Landroid/content/ContentUris;->withAppendedId()Landroid/net/Uri;"
    ],
    "Landroid/provider/Contacts$People;": [
        "Landroid/provider/Contacts$People;->addToMyContactsGroup()Landroid/net/Uri;"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->clear()V",
        "Landroid/content/ContentValues;->put()V"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->getInt()I",
        "Landroid/database/Cursor;->moveToFirst()Z",
        "Landroid/database/Cursor;->moveToNext()Z",
        "Landroid/database/Cursor;->getColumnIndex()I",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->isClosed()Z",
        "Landroid/database/Cursor;->moveToPosition()Z",
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->isAfterLast()Z"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->getTime()J",
        "Ljava/util/Date;->after()Z"
    ],
    "Ljava/io/FileReader;": [
        "Ljava/io/FileReader;->close()V"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;",
        "Ljava/text/SimpleDateFormat;->getDateInstance()Ljava/text/DateFormat;",
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->toString()Ljava/lang/String;",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;"
    ],
    "Ljavax/microedition/khronos/opengles/GL10;": [
        "Ljavax/microedition/khronos/opengles/GL10;->glGetString()Ljava/lang/String;"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;"
    ],
    "Lcom/umeng/common/b;": [
        "Lcom/umeng/common/b;->a()Ljava/lang/String;",
        "Lcom/umeng/common/b;->a()[Ljava/lang/String;",
        "Lcom/umeng/common/b;->a()Landroid/location/Location;",
        "Lcom/umeng/common/b;->a()I",
        "Lcom/umeng/common/b;->a()Z"
    ],
    "Landroid/text/TextUtils;": [
        "Landroid/text/TextUtils;->isEmpty()Z"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Lcom/umeng/common/b/g;": [
        "Lcom/umeng/common/b/g;->a()Ljava/lang/String;",
        "Lcom/umeng/common/b/g;->a()Z"
    ],
    "Landroid/provider/Settings$System;": [
        "Landroid/provider/Settings$System;->getConfiguration()V"
    ],
    "Ljava/util/TimeZone;": [
        "Ljava/util/TimeZone;->getTimeZone()Ljava/util/TimeZone;",
        "Ljava/util/TimeZone;->getRawOffset()I"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->toString()Ljava/lang/String;"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;"
    ],
    "Lcom/umeng/common/Log;": [
        "Lcom/umeng/common/Log;->a()V"
    ],
    "Lcom/umeng/common/c;": [
        "Lcom/umeng/common/c;->a()Lcom/umeng/common/c;",
        "Lcom/umeng/common/c;->a()I"
    ],
    "Ljava/lang/StackTraceElement;": [
        "Ljava/lang/StackTraceElement;->toString()Ljava/lang/String;"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->push()Ljava/lang/Object;",
        "Ljava/util/Stack;->pop()Ljava/lang/Object;",
        "Ljava/util/Stack;->isEmpty()Z",
        "Ljava/util/Stack;->clear()V"
    ],
    "Lcom/umeng/common/net/i;": [
        "Lcom/umeng/common/net/i;->a()Landroid/graphics/drawable/Drawable;",
        "Lcom/umeng/common/net/i;->a()Ljava/io/File;",
        "Lcom/umeng/common/net/i;->a()Ljava/lang/String;",
        "Lcom/umeng/common/net/i;->a()J",
        "Lcom/umeng/common/net/i;->a()V"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;"
    ],
    "Ljava/net/URLConnection;": [
        "Ljava/net/URLConnection;->getContent()Ljava/lang/Object;"
    ],
    "Lcom/umeng/common/net/i$a;": [
        "Lcom/umeng/common/net/i$a;->a()V"
    ],
    "Lcom/umeng/common/net/i$c;": [
        "Lcom/umeng/common/net/i$c;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->createFromPath()Landroid/graphics/drawable/Drawable;"
    ],
    "Ljava/lang/OutOfMemoryError;": [
        "Ljava/lang/OutOfMemoryError;->toString()Ljava/lang/String;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->length()I",
        "Lorg/json/JSONObject;->keys()Ljava/util/Iterator;",
        "Lorg/json/JSONObject;->optString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->isNull()Z",
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getInt()I",
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->get()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->remove()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->has()Z",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;"
    ],
    "Lcom/umeng/common/net/DownloadingService$a;": [
        "Lcom/umeng/common/net/DownloadingService$a;->start()V",
        "Lcom/umeng/common/net/DownloadingService$a;->a()Landroid/content/Context;",
        "Lcom/umeng/common/net/DownloadingService$a;->a()Lcom/umeng/common/net/a$a;",
        "Lcom/umeng/common/net/DownloadingService$a;->a()I",
        "Lcom/umeng/common/net/DownloadingService$a;->a()Lcom/umeng/common/net/DownloadingService;"
    ],
    "Lcom/umeng/common/net/DownloadingService;": [
        "Lcom/umeng/common/net/DownloadingService;->a()V",
        "Lcom/umeng/common/net/DownloadingService;->getSystemService()Ljava/lang/Object;",
        "Lcom/umeng/common/net/DownloadingService;->a()Ljava/lang/String;",
        "Lcom/umeng/common/net/DownloadingService;->getApplicationContext()Landroid/content/Context;",
        "Lcom/umeng/common/net/DownloadingService;->a()Z",
        "Lcom/umeng/common/net/DownloadingService;->a()Landroid/app/NotificationManager;"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->cancel()V",
        "Landroid/app/NotificationManager;->notify()V"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->size()I",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->containsKey()Z"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/client/HttpClient;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/HttpResponse;->getFirstHeader()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getStatusCode()I"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;"
    ],
    "Lorg/apache/http/Header;": [
        "Lorg/apache/http/Header;->getValue()Ljava/lang/String;"
    ],
    "Lcom/umeng/common/net/j;": [
        "Lcom/umeng/common/net/j;->a()Ljava/lang/String;",
        "Lcom/umeng/common/net/j;->a()Z",
        "Lcom/umeng/common/net/j;->a()V",
        "Lcom/umeng/common/net/j;->a()Lorg/json/JSONObject;"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->addHeader()V"
    ],
    "Ljava/nio/charset/Charset;": [
        "Ljava/nio/charset/Charset;->toString()Ljava/lang/String;",
        "Ljava/nio/charset/Charset;->defaultCharset()Ljava/nio/charset/Charset;"
    ],
    "Lcom/umeng/common/b/f;": [
        "Lcom/umeng/common/b/f;->a()[B"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpPost;->setHeader()V",
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V"
    ],
    "Lcom/umeng/common/net/k;": [
        "Lcom/umeng/common/net/k;->a()Lorg/json/JSONObject;",
        "Lcom/umeng/common/net/k;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->isAccessible()Z",
        "Ljava/lang/reflect/Constructor;->setAccessible()V",
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;"
    ],
    "Lcom/umeng/common/net/f;": [
        "Lcom/umeng/common/net/f;->a()Lcom/umeng/common/net/l;"
    ],
    "Lcom/umeng/common/net/f$b;": [
        "Lcom/umeng/common/net/f$b;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/umeng/common/net/c$a;": [
        "Lcom/umeng/common/net/c$a;->close()V",
        "Lcom/umeng/common/net/c$a;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Lcom/umeng/common/net/c$a;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;"
    ],
    "Landroid/database/sqlite/SQLiteDatabase;": [
        "Landroid/database/sqlite/SQLiteDatabase;->delete()I",
        "Landroid/database/sqlite/SQLiteDatabase;->execSQL()V",
        "Landroid/database/sqlite/SQLiteDatabase;->insert()J",
        "Landroid/database/sqlite/SQLiteDatabase;->query()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->update()I"
    ],
    "Landroid/os/Messenger;": [
        "Landroid/os/Messenger;->getBinder()Landroid/os/IBinder;",
        "Landroid/os/Messenger;->send()V"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onStart()V",
        "Landroid/app/Service;->onDestroy()V",
        "Landroid/app/Service;->onCreate()V",
        "Landroid/app/Service;->onStartCommand()I"
    ],
    "Lcom/umeng/common/net/c;": [
        "Lcom/umeng/common/net/c;->finalize()V",
        "Lcom/umeng/common/net/c;->a()Lcom/umeng/common/net/c;",
        "Lcom/umeng/common/net/c;->a()V"
    ],
    "Lcom/umeng/common/net/a;": [
        "Lcom/umeng/common/net/a;->a()Landroid/os/Messenger;",
        "Lcom/umeng/common/net/a;->a()Ljava/lang/String;",
        "Lcom/umeng/common/net/a;->a()V",
        "Lcom/umeng/common/net/a;->a()Lcom/umeng/common/net/e;"
    ],
    "Lcom/umeng/common/net/e;": [
        "Lcom/umeng/common/net/e;->a()V"
    ],
    "Lcom/umeng/common/net/a$a;": [
        "Lcom/umeng/common/net/a$a;->a()Landroid/os/Bundle;"
    ],
    "Lcom/umeng/common/b/d;": [
        "Lcom/umeng/common/b/d;->a()Z",
        "Lcom/umeng/common/b/d;->a()I",
        "Lcom/umeng/common/b/d;->a()[B",
        "Lcom/umeng/common/b/d;->a()V"
    ],
    "Lcom/umeng/common/b/a;": [
        "Lcom/umeng/common/b/a;->a()Ljava/lang/String;",
        "Lcom/umeng/common/b/a;->a()Ljava/lang/IllegalStateException;",
        "Lcom/umeng/common/b/a;->a()[B"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Lcom/umeng/common/b/i;": [
        "Lcom/umeng/common/b/i;->a()V"
    ],
    "Ljava/util/zip/Inflater;": [
        "Ljava/util/zip/Inflater;->needsInput()Z",
        "Ljava/util/zip/Inflater;->setInput()V",
        "Ljava/util/zip/Inflater;->end()V",
        "Ljava/util/zip/Inflater;->inflate()I"
    ],
    "Ljava/util/zip/Deflater;": [
        "Ljava/util/zip/Deflater;->end()V",
        "Ljava/util/zip/Deflater;->deflate()I",
        "Ljava/util/zip/Deflater;->setInput()V",
        "Ljava/util/zip/Deflater;->finished()Z",
        "Ljava/util/zip/Deflater;->finish()V"
    ],
    "Ljava/text/DecimalFormat;": [
        "Ljava/text/DecimalFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->parseByte()B",
        "Ljava/lang/Byte;->valueOf()Ljava/lang/Byte;"
    ],
    "Ljava/text/DateFormat;": [
        "Ljava/text/DateFormat;->setTimeZone()V",
        "Ljava/text/DateFormat;->getDateTimeInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->format()Ljava/lang/String;",
        "Ljava/text/DateFormat;->getDateInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->parse()Ljava/util/Date;"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->doFinal()[B",
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;"
    ],
    "Lcom/umeng/common/b/c;": [
        "Lcom/umeng/common/b/c;->a()J",
        "Lcom/umeng/common/b/c;->a()Z",
        "Lcom/umeng/common/b/c;->a()Ljava/lang/String;",
        "Lcom/umeng/common/b/c;->a()[B",
        "Lcom/umeng/common/b/c;->a()V"
    ],
    "Ljava/math/BigInteger;": [
        "Ljava/math/BigInteger;->toByteArray()[B",
        "Ljava/math/BigInteger;->intValue()I",
        "Ljava/math/BigInteger;->bitLength()I",
        "Ljava/math/BigInteger;->longValue()J"
    ],
    "Landroid/content/DialogInterface;": [
        "Landroid/content/DialogInterface;->cancel()V"
    ],
    "Lcom/umeng/update/UmengUpdateListener;": [
        "Lcom/umeng/update/UmengUpdateListener;->onUpdateReturned()V"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->show()V"
    ],
    "Landroid/os/HandlerThread;": [
        "Landroid/os/HandlerThread;->start()V",
        "Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;"
    ],
    "Lcom/umeng/analytics/b;": [
        "Lcom/umeng/analytics/b;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/params/HttpParams;": [
        "Lorg/apache/http/params/HttpParams;->setParameter()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->put()Lorg/json/JSONArray;",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->get()Ljava/lang/Object;",
        "Lorg/json/JSONArray;->toString()Ljava/lang/String;"
    ],
    "Lorg/json/JSONException;": [
        "Lorg/json/JSONException;->printStackTrace()V"
    ],
    "Lcom/umeng/analytics/MobclickAgent$a;": [
        "Lcom/umeng/analytics/MobclickAgent$a;->start()V"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->exec()Ljava/lang/Process;",
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;"
    ],
    "Ljava/lang/Process;": [
        "Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;"
    ],
    "Lcom/umeng/analytics/UmengOnlineConfigureListener;": [
        "Lcom/umeng/analytics/UmengOnlineConfigureListener;->onDataReceived()V"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->read()I",
        "Ljava/io/FileInputStream;->close()V"
    ],
    "Lcom/umeng/analytics/Gender;": [
        "Lcom/umeng/analytics/Gender;->ordinal()I"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;"
    ],
    "Lcom/google/gson/reflect/TypeToken;": [
        "Lcom/google/gson/reflect/TypeToken;->getType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/reflect/TypeToken;->get()Lcom/google/gson/reflect/TypeToken;",
        "Lcom/google/gson/reflect/TypeToken;->getSuperclassTypeParameter()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/reflect/TypeToken;->matches()Z",
        "Lcom/google/gson/reflect/TypeToken;->buildUnexpectedTypeError()Ljava/lang/AssertionError;",
        "Lcom/google/gson/reflect/TypeToken;->isAssignableFrom()Z",
        "Lcom/google/gson/reflect/TypeToken;->getRawType()Ljava/lang/Class;",
        "Lcom/google/gson/reflect/TypeToken;->typeEquals()Z"
    ],
    "Lcom/google/gson/TreeTypeAdapter;": [
        "Lcom/google/gson/TreeTypeAdapter;->newFactory()Lcom/google/gson/TypeAdapterFactory;",
        "Lcom/google/gson/TreeTypeAdapter;->delegate()Lcom/google/gson/TypeAdapter;",
        "Lcom/google/gson/TreeTypeAdapter;->newFactoryWithMatchRawType()Lcom/google/gson/TypeAdapterFactory;",
        "Lcom/google/gson/TreeTypeAdapter;->newTypeHierarchyFactory()Lcom/google/gson/TypeAdapterFactory;"
    ],
    "Lcom/google/gson/internal/Excluder;": [
        "Lcom/google/gson/internal/Excluder;->excludeField()Z",
        "Lcom/google/gson/internal/Excluder;->excludeClass()Z",
        "Lcom/google/gson/internal/Excluder;->isInnerClass()Z",
        "Lcom/google/gson/internal/Excluder;->excludeFieldsWithoutExposeAnnotation()Lcom/google/gson/internal/Excluder;",
        "Lcom/google/gson/internal/Excluder;->isValidVersion()Z",
        "Lcom/google/gson/internal/Excluder;->isValidSince()Z",
        "Lcom/google/gson/internal/Excluder;->clone()Lcom/google/gson/internal/Excluder;",
        "Lcom/google/gson/internal/Excluder;->isAnonymousOrLocal()Z",
        "Lcom/google/gson/internal/Excluder;->disableInnerClassSerialization()Lcom/google/gson/internal/Excluder;",
        "Lcom/google/gson/internal/Excluder;->withModifiers()Lcom/google/gson/internal/Excluder;",
        "Lcom/google/gson/internal/Excluder;->withVersion()Lcom/google/gson/internal/Excluder;",
        "Lcom/google/gson/internal/Excluder;->isValidUntil()Z",
        "Lcom/google/gson/internal/Excluder;->isStatic()Z",
        "Lcom/google/gson/internal/Excluder;->withExclusionStrategy()Lcom/google/gson/internal/Excluder;"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->unmodifiableList()Ljava/util/List;",
        "Ljava/util/Collections;->emptyList()Ljava/util/List;",
        "Ljava/util/Collections;->synchronizedMap()Ljava/util/Map;",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->reverse()V",
        "Ljava/util/Collections;->emptyMap()Ljava/util/Map;"
    ],
    "Lcom/google/gson/GsonBuilder;": [
        "Lcom/google/gson/GsonBuilder;->addTypeAdaptersForDate()V"
    ],
    "Lcom/google/gson/internal/$Gson$Preconditions;": [
        "Lcom/google/gson/internal/$Gson$Preconditions;->checkArgument()V",
        "Lcom/google/gson/internal/$Gson$Preconditions;->checkNotNull()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/internal/Primitives;": [
        "Lcom/google/gson/internal/Primitives;->add()V",
        "Lcom/google/gson/internal/Primitives;->wrap()Ljava/lang/Class;",
        "Lcom/google/gson/internal/Primitives;->isPrimitive()Z",
        "Lcom/google/gson/internal/Primitives;->isWrapperType()Z"
    ],
    "Lcom/google/gson/internal/bind/TypeAdapters;": [
        "Lcom/google/gson/internal/bind/TypeAdapters;->newFactoryForMultipleTypes()Lcom/google/gson/TypeAdapterFactory;",
        "Lcom/google/gson/internal/bind/TypeAdapters;->newTypeHierarchyFactory()Lcom/google/gson/TypeAdapterFactory;",
        "Lcom/google/gson/internal/bind/TypeAdapters;->newEnumTypeHierarchyFactory()Lcom/google/gson/TypeAdapterFactory;",
        "Lcom/google/gson/internal/bind/TypeAdapters;->newFactory()Lcom/google/gson/TypeAdapterFactory;"
    ],
    "Lcom/google/gson/stream/JsonReader;": [
        "Lcom/google/gson/stream/JsonReader;->setLenient()V",
        "Lcom/google/gson/stream/JsonReader;->fillBuffer()Z",
        "Lcom/google/gson/stream/JsonReader;->nextNull()V",
        "Lcom/google/gson/stream/JsonReader;->advance()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->checkLenient()V",
        "Lcom/google/gson/stream/JsonReader;->expect()V",
        "Lcom/google/gson/stream/JsonReader;->skipTo()Z",
        "Lcom/google/gson/stream/JsonReader;->nextName()Ljava/lang/String;",
        "Lcom/google/gson/stream/JsonReader;->peek()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->skipToEndOfLine()V",
        "Lcom/google/gson/stream/JsonReader;->endArray()V",
        "Lcom/google/gson/stream/JsonReader;->getLineNumber()I",
        "Lcom/google/gson/stream/JsonReader;->beginArray()V",
        "Lcom/google/gson/stream/JsonReader;->isLenient()Z",
        "Lcom/google/gson/stream/JsonReader;->nextDouble()D",
        "Lcom/google/gson/stream/JsonReader;->readLiteral()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->endObject()V",
        "Lcom/google/gson/stream/JsonReader;->objectValue()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->getSnippet()Ljava/lang/CharSequence;",
        "Lcom/google/gson/stream/JsonReader;->consumeNonExecutePrefix()V",
        "Lcom/google/gson/stream/JsonReader;->nextValue()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->readEscapeCharacter()C",
        "Lcom/google/gson/stream/JsonReader;->nextLiteral()Ljava/lang/String;",
        "Lcom/google/gson/stream/JsonReader;->nextString()Ljava/lang/String;",
        "Lcom/google/gson/stream/JsonReader;->decodeNumber()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->beginObject()V",
        "Lcom/google/gson/stream/JsonReader;->nextInArray()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->nextInObject()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->syntaxError()Ljava/io/IOException;",
        "Lcom/google/gson/stream/JsonReader;->push()V",
        "Lcom/google/gson/stream/JsonReader;->nextNonWhitespace()I",
        "Lcom/google/gson/stream/JsonReader;->nextBoolean()Z",
        "Lcom/google/gson/stream/JsonReader;->getColumnNumber()I",
        "Lcom/google/gson/stream/JsonReader;->decodeLiteral()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/stream/JsonReader;->hasNext()Z"
    ],
    "Lcom/google/gson/internal/Streams;": [
        "Lcom/google/gson/internal/Streams;->parse()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/internal/Streams;->writerForAppendable()Ljava/io/Writer;",
        "Lcom/google/gson/internal/Streams;->write()V"
    ],
    "Lcom/google/gson/JsonParseException;": [
        "Lcom/google/gson/JsonParseException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lcom/google/gson/JsonParser;": [
        "Lcom/google/gson/JsonParser;->parse()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/JsonElement;": [
        "Lcom/google/gson/JsonElement;->getAsString()Ljava/lang/String;",
        "Lcom/google/gson/JsonElement;->getAsLong()J",
        "Lcom/google/gson/JsonElement;->getAsFloat()F",
        "Lcom/google/gson/JsonElement;->getAsInt()I",
        "Lcom/google/gson/JsonElement;->isJsonObject()Z",
        "Lcom/google/gson/JsonElement;->getAsBigDecimal()Ljava/math/BigDecimal;",
        "Lcom/google/gson/JsonElement;->getAsBigInteger()Ljava/math/BigInteger;",
        "Lcom/google/gson/JsonElement;->getAsByte()B",
        "Lcom/google/gson/JsonElement;->getAsNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonElement;->isJsonArray()Z",
        "Lcom/google/gson/JsonElement;->isJsonNull()Z",
        "Lcom/google/gson/JsonElement;->getAsBoolean()Z",
        "Lcom/google/gson/JsonElement;->getAsCharacter()C",
        "Lcom/google/gson/JsonElement;->getAsDouble()D",
        "Lcom/google/gson/JsonElement;->isJsonPrimitive()Z",
        "Lcom/google/gson/JsonElement;->getAsShort()S"
    ],
    "[Lcom/google/gson/LongSerializationPolicy;": [
        "[Lcom/google/gson/LongSerializationPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonStreamParser;": [
        "Lcom/google/gson/JsonStreamParser;->hasNext()Z",
        "Lcom/google/gson/JsonStreamParser;->next()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/FieldNamingPolicy;": [
        "Lcom/google/gson/FieldNamingPolicy;->modifyString()Ljava/lang/String;",
        "Lcom/google/gson/FieldNamingPolicy;->upperCaseFirstLetter()Ljava/lang/String;",
        "Lcom/google/gson/FieldNamingPolicy;->separateCamelCase()Ljava/lang/String;"
    ],
    "Ljava/lang/Character;": [
        "Ljava/lang/Character;->isUpperCase()Z",
        "Ljava/lang/Character;->charValue()C",
        "Ljava/lang/Character;->isLetter()Z",
        "Ljava/lang/Character;->toUpperCase()C"
    ],
    "[Lcom/google/gson/FieldNamingPolicy;": [
        "[Lcom/google/gson/FieldNamingPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonPrimitive;": [
        "Lcom/google/gson/JsonPrimitive;->getAsNumber()Ljava/lang/Number;",
        "Lcom/google/gson/JsonPrimitive;->isNumber()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsLong()J",
        "Lcom/google/gson/JsonPrimitive;->getAsBoolean()Z",
        "Lcom/google/gson/JsonPrimitive;->setValue()V",
        "Lcom/google/gson/JsonPrimitive;->getAsInt()I",
        "Lcom/google/gson/JsonPrimitive;->isString()Z",
        "Lcom/google/gson/JsonPrimitive;->isIntegral()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsDouble()D",
        "Lcom/google/gson/JsonPrimitive;->getAsString()Ljava/lang/String;",
        "Lcom/google/gson/JsonPrimitive;->isPrimitiveOrString()Z",
        "Lcom/google/gson/JsonPrimitive;->isBoolean()Z",
        "Lcom/google/gson/JsonPrimitive;->getAsBooleanWrapper()Ljava/lang/Boolean;"
    ],
    "Ljava/lang/Number;": [
        "Ljava/lang/Number;->shortValue()S",
        "Ljava/lang/Number;->byteValue()B",
        "Ljava/lang/Number;->doubleValue()D",
        "Ljava/lang/Number;->floatValue()F",
        "Ljava/lang/Number;->intValue()I",
        "Ljava/lang/Number;->longValue()J"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->parseDouble()D",
        "Ljava/lang/Double;->isNaN()Z",
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;",
        "Ljava/lang/Double;->doubleToLongBits()J",
        "Ljava/lang/Double;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->parseShort()S"
    ],
    "Lcom/google/gson/Gson;": [
        "Lcom/google/gson/Gson;->assertFullConsumption()V",
        "Lcom/google/gson/Gson;->toJsonTree()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/Gson;->getAdapter()Lcom/google/gson/TypeAdapter;",
        "Lcom/google/gson/Gson;->toJson()Ljava/lang/String;",
        "Lcom/google/gson/Gson;->doubleAdapter()Lcom/google/gson/TypeAdapter;",
        "Lcom/google/gson/Gson;->fromJson()Ljava/lang/Object;",
        "Lcom/google/gson/Gson;->newJsonWriter()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/Gson;->toJson()V",
        "Lcom/google/gson/Gson;->checkValidFloatingPoint()V",
        "Lcom/google/gson/Gson;->longAdapter()Lcom/google/gson/TypeAdapter;",
        "Lcom/google/gson/Gson;->floatAdapter()Lcom/google/gson/TypeAdapter;"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->flush()V",
        "Ljava/io/Writer;->append()Ljava/io/Writer;",
        "Ljava/io/Writer;->write()V"
    ],
    "Lcom/google/gson/stream/JsonWriter;": [
        "Lcom/google/gson/stream/JsonWriter;->value()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->setSerializeNulls()V",
        "Lcom/google/gson/stream/JsonWriter;->newline()V",
        "Lcom/google/gson/stream/JsonWriter;->setIndent()V",
        "Lcom/google/gson/stream/JsonWriter;->open()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->peek()Lcom/google/gson/stream/JsonScope;",
        "Lcom/google/gson/stream/JsonWriter;->endObject()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->setHtmlSafe()V",
        "Lcom/google/gson/stream/JsonWriter;->writeDeferredName()V",
        "Lcom/google/gson/stream/JsonWriter;->endArray()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->nullValue()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->setLenient()V",
        "Lcom/google/gson/stream/JsonWriter;->getSerializeNulls()Z",
        "Lcom/google/gson/stream/JsonWriter;->string()V",
        "Lcom/google/gson/stream/JsonWriter;->beforeValue()V",
        "Lcom/google/gson/stream/JsonWriter;->isLenient()Z",
        "Lcom/google/gson/stream/JsonWriter;->beginObject()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->replaceTop()V",
        "Lcom/google/gson/stream/JsonWriter;->isHtmlSafe()Z",
        "Lcom/google/gson/stream/JsonWriter;->beforeName()V",
        "Lcom/google/gson/stream/JsonWriter;->beginArray()Lcom/google/gson/stream/JsonWriter;",
        "Lcom/google/gson/stream/JsonWriter;->close()Lcom/google/gson/stream/JsonWriter;"
    ],
    "Lcom/google/gson/TypeAdapter;": [
        "Lcom/google/gson/TypeAdapter;->read()Ljava/lang/Object;",
        "Lcom/google/gson/TypeAdapter;->toJson()V",
        "Lcom/google/gson/TypeAdapter;->fromJson()Ljava/lang/Object;",
        "Lcom/google/gson/TypeAdapter;->write()V"
    ],
    "Ljava/lang/ThreadLocal;": [
        "Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/TypeAdapterFactory;": [
        "Lcom/google/gson/TypeAdapterFactory;->create()Lcom/google/gson/TypeAdapter;"
    ],
    "Lcom/google/gson/Gson$FutureTypeAdapter;": [
        "Lcom/google/gson/Gson$FutureTypeAdapter;->setDelegate()V"
    ],
    "Ljava/io/StringWriter;": [
        "Ljava/io/StringWriter;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/gson/internal/bind/JsonTreeWriter;": [
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->put()V",
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->setLenient()V",
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->getSerializeNulls()Z",
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->get()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->isLenient()Z",
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->peek()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/internal/bind/JsonTreeWriter;->nullValue()Lcom/google/gson/stream/JsonWriter;"
    ],
    "Lcom/google/gson/JsonObject;": [
        "Lcom/google/gson/JsonObject;->add()V",
        "Lcom/google/gson/JsonObject;->entrySet()Ljava/util/Set;",
        "Lcom/google/gson/JsonObject;->createJsonElement()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/internal/GsonInternalAccess;": [
        "Lcom/google/gson/internal/GsonInternalAccess;->getNextAdapter()Lcom/google/gson/TypeAdapter;"
    ],
    "Lcom/google/gson/JsonDeserializer;": [
        "Lcom/google/gson/JsonDeserializer;->deserialize()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/JsonSerializer;": [
        "Lcom/google/gson/JsonSerializer;->serialize()Lcom/google/gson/JsonElement;"
    ],
    "Lcom/google/gson/DefaultDateTypeAdapter;": [
        "Lcom/google/gson/DefaultDateTypeAdapter;->deserialize()Ljava/util/Date;",
        "Lcom/google/gson/DefaultDateTypeAdapter;->serialize()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/DefaultDateTypeAdapter;->deserializeToDate()Ljava/util/Date;"
    ],
    "Lcom/google/gson/internal/$Gson$Types;": [
        "Lcom/google/gson/internal/$Gson$Types;->getRawType()Ljava/lang/Class;",
        "Lcom/google/gson/internal/$Gson$Types;->getMapKeyAndValueTypes()[Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->equals()Z",
        "Lcom/google/gson/internal/$Gson$Types;->getCollectionElementType()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->canonicalize()Ljava/lang/reflect/Type;",
        "Lcom/google/gson/internal/$Gson$Types;->typeToString()Ljava/lang/String;",
        "Lcom/google/gson/internal/$Gson$Types;->resolve()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/reflect/ParameterizedType;": [
        "Ljava/lang/reflect/ParameterizedType;->getActualTypeArguments()[Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/ParameterizedType;->getRawType()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/reflect/GenericArrayType;": [
        "Ljava/lang/reflect/GenericArrayType;->getGenericComponentType()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/reflect/TypeVariable;": [
        "Ljava/lang/reflect/TypeVariable;->getName()Ljava/lang/String;"
    ],
    "Lcom/google/gson/annotations/Since;": [
        "Lcom/google/gson/annotations/Since;->value()D"
    ],
    "Lcom/google/gson/annotations/Until;": [
        "Lcom/google/gson/annotations/Until;->value()D"
    ],
    "Lcom/google/gson/ExclusionStrategy;": [
        "Lcom/google/gson/ExclusionStrategy;->shouldSkipClass()Z",
        "Lcom/google/gson/ExclusionStrategy;->shouldSkipField()Z"
    ],
    "Lcom/google/gson/annotations/Expose;": [
        "Lcom/google/gson/annotations/Expose;->deserialize()Z",
        "Lcom/google/gson/annotations/Expose;->serialize()Z"
    ],
    "Lcom/google/gson/internal/ConstructorConstructor;": [
        "Lcom/google/gson/internal/ConstructorConstructor;->newDefaultImplementationConstructor()Lcom/google/gson/internal/ObjectConstructor;",
        "Lcom/google/gson/internal/ConstructorConstructor;->getConstructor()Lcom/google/gson/internal/ObjectConstructor;",
        "Lcom/google/gson/internal/ConstructorConstructor;->newDefaultConstructor()Lcom/google/gson/internal/ObjectConstructor;",
        "Lcom/google/gson/internal/ConstructorConstructor;->newUnsafeAllocator()Lcom/google/gson/internal/ObjectConstructor;"
    ],
    "Lcom/google/gson/internal/Pair;": [
        "Lcom/google/gson/internal/Pair;->equal()Z"
    ],
    "Lcom/google/gson/internal/bind/TimeTypeAdapter;": [
        "Lcom/google/gson/internal/bind/TimeTypeAdapter;->read()Ljava/sql/Time;",
        "Lcom/google/gson/internal/bind/TimeTypeAdapter;->write()V"
    ],
    "Lcom/google/gson/JsonArray;": [
        "Lcom/google/gson/JsonArray;->add()V",
        "Lcom/google/gson/JsonArray;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper;": [
        "Lcom/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper;->getRuntimeTypeIfMoreSpecific()Ljava/lang/reflect/Type;"
    ],
    "Lcom/google/gson/internal/bind/SqlDateTypeAdapter;": [
        "Lcom/google/gson/internal/bind/SqlDateTypeAdapter;->read()Ljava/sql/Date;",
        "Lcom/google/gson/internal/bind/SqlDateTypeAdapter;->write()V"
    ],
    "Lcom/google/gson/internal/bind/BigDecimalTypeAdapter;": [
        "Lcom/google/gson/internal/bind/BigDecimalTypeAdapter;->read()Ljava/math/BigDecimal;",
        "Lcom/google/gson/internal/bind/BigDecimalTypeAdapter;->write()V"
    ],
    "Lcom/google/gson/internal/bind/BigIntegerTypeAdapter;": [
        "Lcom/google/gson/internal/bind/BigIntegerTypeAdapter;->read()Ljava/math/BigInteger;",
        "Lcom/google/gson/internal/bind/BigIntegerTypeAdapter;->write()V"
    ],
    "Lcom/google/gson/stream/JsonToken;": [
        "Lcom/google/gson/stream/JsonToken;->ordinal()I"
    ],
    "Lcom/google/gson/internal/bind/ObjectTypeAdapter;": [
        "Lcom/google/gson/internal/bind/ObjectTypeAdapter;->read()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/internal/bind/MapTypeAdapterFactory;": [
        "Lcom/google/gson/internal/bind/MapTypeAdapterFactory;->toJsonTree()Lcom/google/gson/JsonElement;",
        "Lcom/google/gson/internal/bind/MapTypeAdapterFactory;->getKeyAdapter()Lcom/google/gson/TypeAdapter;"
    ],
    "Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory;": [
        "Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory;->getFieldName()Ljava/lang/String;",
        "Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory;->createBoundField()Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory$BoundField;",
        "Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory;->getBoundFields()Ljava/util/Map;",
        "Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory;->excludeField()Z"
    ],
    "Lcom/google/gson/FieldNamingStrategy;": [
        "Lcom/google/gson/FieldNamingStrategy;->translateName()Ljava/lang/String;"
    ],
    "Lcom/google/gson/annotations/SerializedName;": [
        "Lcom/google/gson/annotations/SerializedName;->value()Ljava/lang/String;"
    ],
    "Lcom/google/gson/internal/bind/JsonTreeReader;": [
        "Lcom/google/gson/internal/bind/JsonTreeReader;->expect()V",
        "Lcom/google/gson/internal/bind/JsonTreeReader;->nextName()Ljava/lang/String;",
        "Lcom/google/gson/internal/bind/JsonTreeReader;->peekStack()Ljava/lang/Object;",
        "Lcom/google/gson/internal/bind/JsonTreeReader;->peek()Lcom/google/gson/stream/JsonToken;",
        "Lcom/google/gson/internal/bind/JsonTreeReader;->isLenient()Z",
        "Lcom/google/gson/internal/bind/JsonTreeReader;->popStack()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/internal/bind/DateTypeAdapter;": [
        "Lcom/google/gson/internal/bind/DateTypeAdapter;->deserializeToDate()Ljava/util/Date;",
        "Lcom/google/gson/internal/bind/DateTypeAdapter;->buildIso8601Format()Ljava/text/DateFormat;",
        "Lcom/google/gson/internal/bind/DateTypeAdapter;->write()V",
        "Lcom/google/gson/internal/bind/DateTypeAdapter;->read()Ljava/util/Date;"
    ],
    "[Lcom/google/gson/stream/JsonToken;": [
        "[Lcom/google/gson/stream/JsonToken;->clone()Ljava/lang/Object;"
    ],
    "[Lcom/google/gson/stream/JsonScope;": [
        "[Lcom/google/gson/stream/JsonScope;->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/gson/stream/StringPool;": [
        "Lcom/google/gson/stream/StringPool;->get()Ljava/lang/String;"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->read()I",
        "Ljava/io/Reader;->close()V"
    ],
    "Lcom/google/gson/stream/JsonScope;": [
        "Lcom/google/gson/stream/JsonScope;->ordinal()I"
    ],
    "Lme/gall/mercury/activity/AdView;": [
        "Lme/gall/mercury/activity/AdView;->setContentView()V",
        "Lme/gall/mercury/activity/AdView;->findViewById()Landroid/view/View;",
        "Lme/gall/mercury/activity/AdView;->getListItem()Ljava/util/List;",
        "Lme/gall/mercury/activity/AdView;->setAdapter()V"
    ],
    "Lme/gall/mercury/util/CheckNet;": [
        "Lme/gall/mercury/util/CheckNet;->isConnect()Z",
        "Lme/gall/mercury/util/CheckNet;->isDataConnectionEnable()Z",
        "Lme/gall/mercury/util/CheckNet;->isWifiEnable()Z",
        "Lme/gall/mercury/util/CheckNet;->getConnectivityManager()Landroid/net/ConnectivityManager;",
        "Lme/gall/mercury/util/CheckNet;->getTelephonyManager()Landroid/telephony/TelephonyManager;"
    ],
    "Lme/gall/mercury/util/ToastUtil;": [
        "Lme/gall/mercury/util/ToastUtil;->toast()V"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->setOnClickListener()V",
        "Landroid/widget/ImageButton;->setTag()V",
        "Landroid/widget/ImageButton;->setBackgroundResource()V"
    ],
    "Lme/gall/mercury/listenerinterface/OnAdStateListener;": [
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->onActivateSucceed()V",
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->onActivateFailed()V",
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->onBack()V",
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->onInstallFail()V",
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->notifyAdViewType()V",
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->onAutoStartFail()V",
        "Lme/gall/mercury/listenerinterface/OnAdStateListener;->onUnavailableAds()V"
    ],
    "Lme/gall/mercury/activity/AdViewList;": [
        "Lme/gall/mercury/activity/AdViewList;->setAdapter()V",
        "Lme/gall/mercury/activity/AdViewList;->getListItem()Ljava/util/List;",
        "Lme/gall/mercury/activity/AdViewList;->setContentView()V",
        "Lme/gall/mercury/activity/AdViewList;->findViewById()Landroid/view/View;"
    ],
    "Lme/gall/mercury/activity/AdViewThree;": [
        "Lme/gall/mercury/activity/AdViewThree;->setContentView()V",
        "Lme/gall/mercury/activity/AdViewThree;->setAdapter()V",
        "Lme/gall/mercury/activity/AdViewThree;->getListItem()Ljava/util/List;",
        "Lme/gall/mercury/activity/AdViewThree;->findViewById()Landroid/view/View;"
    ],
    "Lme/gall/mercury/activity/DownloadService;": [
        "Lme/gall/mercury/activity/DownloadService;->getSystemService()Ljava/lang/Object;",
        "Lme/gall/mercury/activity/DownloadService;->getPackageName()Ljava/lang/String;"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->setProgressBar()V"
    ],
    "Lme/gall/mercury/activity/DownloadService$DownloadThread;": [
        "Lme/gall/mercury/activity/DownloadService$DownloadThread;->start()V"
    ],
    "Lme/gall/mercury/util/UserInfo;": [
        "Lme/gall/mercury/util/UserInfo;->isLastConnect()Z",
        "Lme/gall/mercury/util/UserInfo;->checkAd()Ljava/lang/Object;",
        "Lme/gall/mercury/util/UserInfo;->getVersion()Ljava/lang/String;",
        "Lme/gall/mercury/util/UserInfo;->setLastConnect()V",
        "Lme/gall/mercury/util/UserInfo;->getGamePackage()Ljava/lang/String;",
        "Lme/gall/mercury/util/UserInfo;->setFirst()V"
    ],
    "Lme/gall/mercury/util/ApkUtil;": [
        "Lme/gall/mercury/util/ApkUtil;->quietlyDown()V",
        "Lme/gall/mercury/util/ApkUtil;->getKindOfApkName()Ljava/lang/String;",
        "Lme/gall/mercury/util/ApkUtil;->isDownloding()Z",
        "Lme/gall/mercury/util/ApkUtil;->filterAd()Ljava/util/List;",
        "Lme/gall/mercury/util/ApkUtil;->setNullAd()Lme/gall/mercury/bean/AdAdvertisement;",
        "Lme/gall/mercury/util/ApkUtil;->launchExternalApplication()Z"
    ],
    "Lme/gall/mercury/connect/HttpUtil;": [
        "Lme/gall/mercury/connect/HttpUtil;->getOnLineAd()Ljava/util/List;",
        "Lme/gall/mercury/connect/HttpUtil;->sendInfo()V",
        "Lme/gall/mercury/connect/HttpUtil;->sendInedAd()V"
    ],
    "Lme/gall/mercury/activity/AdViewPackage;": [
        "Lme/gall/mercury/activity/AdViewPackage;->findViewById()Landroid/view/View;",
        "Lme/gall/mercury/activity/AdViewPackage;->getListItem()Ljava/util/List;",
        "Lme/gall/mercury/activity/AdViewPackage;->requestWindowFeature()Z",
        "Lme/gall/mercury/activity/AdViewPackage;->setContentView()V",
        "Lme/gall/mercury/activity/AdViewPackage;->setAdapter()V",
        "Lme/gall/mercury/activity/AdViewPackage;->getWindow()Landroid/view/Window;",
        "Lme/gall/mercury/activity/AdViewPackage;->setPackageImage()V"
    ],
    "Lme/gall/mercury/activity/QuietlyDownService$QuietltDownloadThread;": [
        "Lme/gall/mercury/activity/QuietlyDownService$QuietltDownloadThread;->start()V"
    ],
    "Lme/gall/mercury/activity/AdViewBanner$AdViewBannerTask;": [
        "Lme/gall/mercury/activity/AdViewBanner$AdViewBannerTask;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->toString()Ljava/lang/String;"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;",
        "Landroid/view/LayoutInflater;->from()Landroid/view/LayoutInflater;"
    ],
    "Lme/gall/mercury/bean/AdInfo;": [
        "Lme/gall/mercury/bean/AdInfo;->getShowType()Ljava/lang/String;",
        "Lme/gall/mercury/bean/AdInfo;->getAds()Ljava/util/List;"
    ],
    "Lme/gall/mercury/util/ThreeAdapter;": [
        "Lme/gall/mercury/util/ThreeAdapter;->notifyDataSetChanged()V",
        "Lme/gall/mercury/util/ThreeAdapter;->getItemId()J"
    ],
    "Lme/gall/mercury/util/ListAdapter;": [
        "Lme/gall/mercury/util/ListAdapter;->notifyDataSetChanged()V",
        "Lme/gall/mercury/util/ListAdapter;->getItemId()J"
    ],
    "Lme/gall/mercury/util/NativeAd;": [
        "Lme/gall/mercury/util/NativeAd;->isInstalled()Z",
        "Lme/gall/mercury/util/NativeAd;->serchNvAd()Ljava/util/List;"
    ],
    "Lme/gall/mercury/util/SystemProject;": [
        "Lme/gall/mercury/util/SystemProject;->checkSDcard()Z",
        "Lme/gall/mercury/util/SystemProject;->getApplicationContext()Landroid/content/Context;"
    ],
    "Lme/gall/mercury/util/DeviceInfo;": [
        "Lme/gall/mercury/util/DeviceInfo;->getLocalMacAddress()Ljava/lang/String;",
        "Lme/gall/mercury/util/DeviceInfo;->getConnectType()Ljava/lang/String;",
        "Lme/gall/mercury/util/DeviceInfo;->getPhoneImei()Ljava/lang/String;",
        "Lme/gall/mercury/util/DeviceInfo;->getName()Ljava/lang/String;",
        "Lme/gall/mercury/util/DeviceInfo;->getManufacturer()Ljava/lang/String;",
        "Lme/gall/mercury/util/DeviceInfo;->getSdkVersion()Ljava/lang/String;",
        "Lme/gall/mercury/util/DeviceInfo;->getSimOperatorName()Ljava/lang/String;"
    ],
    "Lme/gall/mercury/util/AdManager$GetAdTask;": [
        "Lme/gall/mercury/util/AdManager$GetAdTask;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->show()V",
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->printStackTrace()V"
    ],
    "Lme/gall/mercury/bean/OffLineAdvertisement;": [
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setImei()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setGameVersion()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setMid()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setMobile()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setNetworkType()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setGamePackage()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setManufacturer()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setImsi()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setMacAddress()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setInstallAds()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->setOsVersion()V",
        "Lme/gall/mercury/bean/OffLineAdvertisement;->getInstallAds()Ljava/util/Map;"
    ],
    "Lme/gall/mercury/util/UserInfo$1;": [
        "Lme/gall/mercury/util/UserInfo$1;->getType()Ljava/lang/reflect/Type;"
    ],
    "Lme/gall/mercury/util/ImageLoader;": [
        "Lme/gall/mercury/util/ImageLoader;->loadBitmap()V"
    ],
    "Lme/gall/mercury/util/ImageLoader$2;": [
        "Lme/gall/mercury/util/ImageLoader$2;->start()V"
    ],
    "Landroid/app/Application;": [
        "Landroid/app/Application;->onLowMemory()V",
        "Landroid/app/Application;->onCreate()V"
    ],
    "Ljava/net/NetworkInterface;": [
        "Ljava/net/NetworkInterface;->getNetworkInterfaces()Ljava/util/Enumeration;",
        "Ljava/net/NetworkInterface;->getInetAddresses()Ljava/util/Enumeration;"
    ],
    "Ljava/util/Enumeration;": [
        "Ljava/util/Enumeration;->hasMoreElements()Z",
        "Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->isLoopbackAddress()Z",
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ]
}