{
    "Lcom/badlogic/gdx/physics/box2d/World;": [
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetBodyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDestroyBody()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetAutoClearForces()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->getJoints()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/physics/box2d/World;->setAutoClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->destroyJoint()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateWeldJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateGearJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetProxyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->rayCast()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateMouseJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetJointcount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniIsLocked()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->setDestructionListener()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->isLocked()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->setContinuousPhysics()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getJointCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateFrictionJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->newWorld()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetAutoClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getContactCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniStep()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateRevoluteJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetContactList()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getBodies()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/physics/box2d/World;->getAutoClearForces()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->setGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetContiousPhysics()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->createProperJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->setContactFilter()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->step()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->destroyBody()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateLineJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniQueryAABB()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->clearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->createJoint()Lcom/badlogic/gdx/physics/box2d/Joint;",
        "Lcom/badlogic/gdx/physics/box2d/World;->setContactListener()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetWarmStarting()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreatePulleyJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->getBodyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetContactCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->getContactList()Ljava/util/List;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDispose()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->QueryAABB()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->createBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateBody()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniRayCast()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getGravity()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDestroyJoint()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateDistanceJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->getProxyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreatePrismaticJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->setWarmStarting()V"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->remove()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->add()V",
        "Ljava/util/ArrayList;->set()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->isEmpty()Z",
        "Ljava/util/ArrayList;->contains()Z",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clone()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->addAll()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactListener;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->postSolve()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->beginContact()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->preSolve()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->endContact()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap;": [
        "Lcom/badlogic/gdx/utils/LongMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/LongMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->resize()V",
        "Lcom/badlogic/gdx/utils/LongMap;->push()V",
        "Lcom/badlogic/gdx/utils/LongMap;->entries()Lcom/badlogic/gdx/utils/LongMap$Entries;",
        "Lcom/badlogic/gdx/utils/LongMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/LongMap;->values()Lcom/badlogic/gdx/utils/LongMap$Values;",
        "Lcom/badlogic/gdx/utils/LongMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/LongMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/LongMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/LongMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/LongMap;->get()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactFilter;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactFilter;->shouldCollide()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Fixture;": [
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniTestPoint()Z",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getFilterData()Lcom/badlogic/gdx/physics/box2d/Filter;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetShape()J",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetDensity()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetFilterData()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetFilterData()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetRestitution()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniIsSensor()Z",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetRestitution()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetDensity()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetSensor()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetFriction()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetFriction()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/QueryCallback;": [
        "Lcom/badlogic/gdx/physics/box2d/QueryCallback;->reportFixture()Z"
    ],
    "Lcom/badlogic/gdx/math/Vector2;": [
        "Lcom/badlogic/gdx/math/Vector2;->set()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->add()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->dst()F",
        "Lcom/badlogic/gdx/math/Vector2;->lenManhattan()F",
        "Lcom/badlogic/gdx/math/Vector2;->sub()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->len()F",
        "Lcom/badlogic/gdx/math/Vector2;->cross()F",
        "Lcom/badlogic/gdx/math/Vector2;->mul()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/RayCastCallback;": [
        "Lcom/badlogic/gdx/physics/box2d/RayCastCallback;->reportRayFixture()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;": [
        "Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;->getValue()I"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Body;": [
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsAwake()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setUserData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalVector()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getWorldCenter()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocityFromLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAngularDamping()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAwake()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngularVelocity()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetFixedRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetActive()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLocalVector()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setActive()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocityFromWorldPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetMass()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngularDamping()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniResetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLocalPoint()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetType()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getUserData()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->createFixture()Lcom/badlogic/gdx/physics/box2d/Fixture;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetSleepingAllowed()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetInertia()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearDamping()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniDestroyFixture()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsFixedRotation()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getPosition()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsBullet()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyAngularImpulse()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyLinearImpulse()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAngularVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsSleepingAllowed()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setFixedRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetBullet()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldVector()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getJointList()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniCreateFixture()J",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetLinearDamping()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLinearVelocity()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getFixtureList()Ljava/util/ArrayList;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;->jniGetNormalImpulses()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;->jniGetTangentImpulses()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Shape;": [
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetRadius()F",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniSetRadius()V",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniDispose()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Contact;": [
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniSetEnabled()V",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniIsEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFixtureA()J",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniIsTouching()Z",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->getFixtureB()Lcom/badlogic/gdx/physics/box2d/Fixture;",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetWorldManifold()I",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFixtureB()J",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->getFixtureA()Lcom/badlogic/gdx/physics/box2d/Fixture;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/CircleShape;": [
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->jniGetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->setRadius()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->jniSetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->newCircleShape()J"
    ],
    "Lcom/badlogic/gdx/physics/box2d/PolygonShape;": [
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSetAsEdge()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniGetVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniGetVertexCount()I",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->setAsBox()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->set()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSetAsBox()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->setAsEdge()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->newPolygonShape()J",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSet()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Joint;": [
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetBodyB()J",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetBodyA()J",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetAnchorA()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniIsActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetReactionTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetReactionForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetAnchorB()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Transform;": [
        "Lcom/badlogic/gdx/physics/box2d/Transform;->setRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->setPosition()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->min()J",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->min()F",
        "Ljava/lang/Math;->round()I",
        "Ljava/lang/Math;->signum()F",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->min()D",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->floor()D",
        "Ljava/lang/Math;->log()D",
        "Ljava/lang/Math;->round()J",
        "Ljava/lang/Math;->max()J",
        "Ljava/lang/Math;->random()D",
        "Ljava/lang/Math;->sqrt()D",
        "Ljava/lang/Math;->sin()D",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->max()D",
        "Ljava/lang/Math;->tan()D",
        "Ljava/lang/Math;->ceil()D",
        "Ljava/lang/Math;->atan2()D",
        "Ljava/lang/Math;->cos()D"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Manifold;": [
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetPointCount()I",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetPoint()I",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetLocalNormal()V",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetType()I"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniSetMaxTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniGetMaxForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniGetMaxTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniSetMaxForce()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetFrequency()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetLength()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetLength()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetDampingRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetFrequency()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetMaxForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetFrequency()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetMaxForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetTarget()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetFrequency()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetTarget()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetDampingRatio()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetMaxMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetJointTranslation()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniSetMaxMotorForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniSetLimits()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetJointTranslation()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetMaxMotorForce()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;->jniGetRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;->jniSetRatio()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetGroundAnchorB()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetLength2()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetGroundAnchorA()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetLength1()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetJointAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetMaxMotorTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetMotorTorque()F"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->delete()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/math/MathUtils;": [
        "Lorg/andengine/util/math/MathUtils;->bringToBounds()I",
        "Lorg/andengine/util/math/MathUtils;->scaleAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->factorial()I",
        "Lorg/andengine/util/math/MathUtils;->isPowerOfTwo()Z",
        "Lorg/andengine/util/math/MathUtils;->nextPowerOfTwo()I",
        "Lorg/andengine/util/math/MathUtils;->revertRotateAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->max()I",
        "Lorg/andengine/util/math/MathUtils;->random()F",
        "Lorg/andengine/util/math/MathUtils;->revertScaleAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->min()I",
        "Lorg/andengine/util/math/MathUtils;->radToDeg()F",
        "Lorg/andengine/util/math/MathUtils;->bringToBounds()F",
        "Lorg/andengine/util/math/MathUtils;->length()F",
        "Lorg/andengine/util/math/MathUtils;->random()I",
        "Lorg/andengine/util/math/MathUtils;->distance()F",
        "Lorg/andengine/util/math/MathUtils;->randomSign()I",
        "Lorg/andengine/util/math/MathUtils;->atan2()F",
        "Lorg/andengine/util/math/MathUtils;->rotateAroundCenter()[F",
        "Lorg/andengine/util/math/MathUtils;->degToRad()F"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->intValue()I",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->numberOfLeadingZeros()I",
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->numberOfTrailingZeros()I"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->notifyAll()V",
        "Ljava/lang/Object;->hashCode()I",
        "Ljava/lang/Object;->wait()V",
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->finalize()V",
        "Ljava/lang/Object;->notify()V",
        "Ljava/lang/Object;->clone()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Entries;": [
        "Lcom/badlogic/gdx/utils/LongMap$Entries;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/LongMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Keys;": [
        "Lcom/badlogic/gdx/utils/LongMap$Keys;->reset()V"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->hasNext()Z",
        "Ljava/util/Iterator;->remove()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Values;": [
        "Lcom/badlogic/gdx/utils/LongMap$Values;->reset()V"
    ],
    "Lorg/andengine/opengl/font/FontFactory;": [
        "Lorg/andengine/opengl/font/FontFactory;->setAssetBasePath()V",
        "Lorg/andengine/opengl/font/FontFactory;->create()Lorg/andengine/opengl/font/Font;",
        "Lorg/andengine/opengl/font/FontFactory;->createFromAsset()Lorg/andengine/opengl/font/Font;",
        "Lorg/andengine/opengl/font/FontFactory;->onCreate()V",
        "Lorg/andengine/opengl/font/FontFactory;->createStroke()Lorg/andengine/opengl/font/StrokeFont;",
        "Lorg/andengine/opengl/font/FontFactory;->createStrokeFromAsset()Lorg/andengine/opengl/font/StrokeFont;"
    ],
    "Lcom/comicsraja/floppyshelly/GameActivity;": [
        "Lcom/comicsraja/floppyshelly/GameActivity;->setContentView()V",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getFontManager()Lorg/andengine/opengl/font/FontManager;",
        "Lcom/comicsraja/floppyshelly/GameActivity;->setHighScore()V",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getHighScore()I",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getEngine()Lorg/andengine/engine/Engine;",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getTextureManager()Lorg/andengine/opengl/texture/TextureManager;",
        "Lcom/comicsraja/floppyshelly/GameActivity;->startActivity()V",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lcom/comicsraja/floppyshelly/GameActivity;->getString()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/font/Font;": [
        "Lorg/andengine/opengl/font/Font;->invalidateLetters()V",
        "Lorg/andengine/opengl/font/Font;->getLetter()Lorg/andengine/opengl/font/Letter;",
        "Lorg/andengine/opengl/font/Font;->getLetterBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/font/Font;->updateTextBounds()V",
        "Lorg/andengine/opengl/font/Font;->getAscent()F",
        "Lorg/andengine/opengl/font/Font;->update()V",
        "Lorg/andengine/opengl/font/Font;->load()V",
        "Lorg/andengine/opengl/font/Font;->drawLetter()V",
        "Lorg/andengine/opengl/font/Font;->createLetter()Lorg/andengine/opengl/font/Letter;",
        "Lorg/andengine/opengl/font/Font;->getDescent()F",
        "Lorg/andengine/opengl/font/Font;->getLetterAdvance()F",
        "Lorg/andengine/opengl/font/Font;->unload()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createTiledFromAsset()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->setAssetBasePath()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createTiledFromResource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->reset()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createFromSource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createFromResource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createTiledFromSource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlasTextureRegionFactory;->createFromAsset()Lorg/andengine/opengl/texture/region/TextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->addTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->load()V",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BitmapTextureAtlas;->getTextureAtlasStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/BuildableBitmapTextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/BuildableBitmapTextureAtlas;->build()Lorg/andengine/opengl/texture/atlas/buildable/IBuildableTextureAtlas;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/BuildableBitmapTextureAtlas;->load()V"
    ],
    "Lorg/andengine/engine/Engine;": [
        "Lorg/andengine/engine/Engine;->throwOnDestroyed()V",
        "Lorg/andengine/engine/Engine;->enableOrientationSensor()Z",
        "Lorg/andengine/engine/Engine;->getShaderProgramManager()Lorg/andengine/opengl/shader/ShaderProgramManager;",
        "Lorg/andengine/engine/Engine;->enableAccelerationSensor()Z",
        "Lorg/andengine/engine/Engine;->getCameraFromSurfaceTouchEvent()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/Engine;->setTouchController()V",
        "Lorg/andengine/engine/Engine;->disableAccelerationSensor()Z",
        "Lorg/andengine/engine/Engine;->getFontManager()Lorg/andengine/opengl/font/FontManager;",
        "Lorg/andengine/engine/Engine;->onDrawFrame()V",
        "Lorg/andengine/engine/Engine;->onUpdateUpdateHandlers()V",
        "Lorg/andengine/engine/Engine;->startUpdateThread()V",
        "Lorg/andengine/engine/Engine;->disableLocationSensor()V",
        "Lorg/andengine/engine/Engine;->runOnUpdateThread()V",
        "Lorg/andengine/engine/Engine;->setSurfaceSize()V",
        "Lorg/andengine/engine/Engine;->onLocationChanged()V",
        "Lorg/andengine/engine/Engine;->onUpdateCameraSurface()V",
        "Lorg/andengine/engine/Engine;->releaseDefaultDisplay()V",
        "Lorg/andengine/engine/Engine;->onDestroy()V",
        "Lorg/andengine/engine/Engine;->getSceneFromSurfaceTouchEvent()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/engine/Engine;->onTouchHUD()Z",
        "Lorg/andengine/engine/Engine;->getMusicManager()Lorg/andengine/audio/music/MusicManager;",
        "Lorg/andengine/engine/Engine;->onReloadResources()V",
        "Lorg/andengine/engine/Engine;->disableOrientationSensor()Z",
        "Lorg/andengine/engine/Engine;->getCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/Engine;->getSoundManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lorg/andengine/engine/Engine;->enableLocationSensor()V",
        "Lorg/andengine/engine/Engine;->getNanosecondsElapsed()J",
        "Lorg/andengine/engine/Engine;->start()V",
        "Lorg/andengine/engine/Engine;->onUpdate()V",
        "Lorg/andengine/engine/Engine;->registerSelfAsSensorListener()V",
        "Lorg/andengine/engine/Engine;->getScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/engine/Engine;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lorg/andengine/engine/Engine;->convertSurfaceTouchEventToSceneTouchEvent()V",
        "Lorg/andengine/engine/Engine;->getEngineOptions()Lorg/andengine/engine/options/EngineOptions;",
        "Lorg/andengine/engine/Engine;->enableVibrator()Z",
        "Lorg/andengine/engine/Engine;->onUpdateDrawHandlers()V",
        "Lorg/andengine/engine/Engine;->onUpdateScene()V",
        "Lorg/andengine/engine/Engine;->setScene()V",
        "Lorg/andengine/engine/Engine;->onDrawScene()V",
        "Lorg/andengine/engine/Engine;->getTextureManager()Lorg/andengine/opengl/texture/TextureManager;",
        "Lorg/andengine/engine/Engine;->onTouchScene()Z",
        "Lorg/andengine/engine/Engine;->unregisterSelfAsSensorListener()V",
        "Lorg/andengine/engine/Engine;->getDisplayOrientation()I",
        "Lorg/andengine/engine/Engine;->isSensorSupported()Z",
        "Lorg/andengine/engine/Engine;->stop()V"
    ],
    "Lorg/andengine/audio/sound/SoundFactory;": [
        "Lorg/andengine/audio/sound/SoundFactory;->onCreate()V",
        "Lorg/andengine/audio/sound/SoundFactory;->setAssetBasePath()V",
        "Lorg/andengine/audio/sound/SoundFactory;->createSoundFromPath()Lorg/andengine/audio/sound/Sound;",
        "Lorg/andengine/audio/sound/SoundFactory;->createSoundFromAsset()Lorg/andengine/audio/sound/Sound;"
    ],
    "Lorg/andengine/extension/physics/box2d/PhysicsFactory;": [
        "Lorg/andengine/extension/physics/box2d/PhysicsFactory;->createLineBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lorg/andengine/extension/physics/box2d/PhysicsFactory;->createTrianglulatedBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lorg/andengine/extension/physics/box2d/PhysicsFactory;->createBoxBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lorg/andengine/extension/physics/box2d/PhysicsFactory;->createFixtureDef()Lcom/badlogic/gdx/physics/box2d/FixtureDef;",
        "Lorg/andengine/extension/physics/box2d/PhysicsFactory;->createPolygonBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lorg/andengine/extension/physics/box2d/PhysicsFactory;->createCircleBody()Lcom/badlogic/gdx/physics/box2d/Body;"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->onPreparePanel()Z",
        "Landroid/app/Activity;->dump()V",
        "Landroid/app/Activity;->getCallingPackage()Ljava/lang/String;",
        "Landroid/app/Activity;->setContentView()V",
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->requestWindowFeature()Z",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->getRequestedOrientation()I",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/app/Activity;->getCallingActivity()Landroid/content/ComponentName;",
        "Landroid/app/Activity;->onPostResume()V",
        "Landroid/app/Activity;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/app/Activity;->invalidateOptionsMenu()V",
        "Landroid/app/Activity;->getWindow()Landroid/view/Window;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->getIntent()Landroid/content/Intent;",
        "Landroid/app/Activity;->onBackPressed()V",
        "Landroid/app/Activity;->obtainStyledAttributes()Landroid/content/res/TypedArray;",
        "Landroid/app/Activity;->startActivityForResult()V",
        "Landroid/app/Activity;->navigateUpTo()Z",
        "Landroid/app/Activity;->finish()V",
        "Landroid/app/Activity;->runOnUiThread()V",
        "Landroid/app/Activity;->setRequestedOrientation()V",
        "Landroid/app/Activity;->onCreateView()Landroid/view/View;",
        "Landroid/app/Activity;->getComponentName()Landroid/content/ComponentName;",
        "Landroid/app/Activity;->onAttachedToWindow()V",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->onUserLeaveHint()V",
        "Landroid/app/Activity;->onPanelClosed()V",
        "Landroid/app/Activity;->onNewIntent()V",
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->getPackageName()Ljava/lang/String;",
        "Landroid/app/Activity;->getApplicationContext()Landroid/content/Context;",
        "Landroid/app/Activity;->onSaveInstanceState()V",
        "Landroid/app/Activity;->startIntentSenderForResult()V",
        "Landroid/app/Activity;->onMenuItemSelected()Z",
        "Landroid/app/Activity;->isFinishing()Z",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->onLowMemory()V",
        "Landroid/app/Activity;->getActionBar()Landroid/app/ActionBar;",
        "Landroid/app/Activity;->onRestart()V",
        "Landroid/app/Activity;->shouldUpRecreateTask()Z",
        "Landroid/app/Activity;->onActivityResult()V",
        "Landroid/app/Activity;->onCreatePanelMenu()Z",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->getParentActivityIntent()Landroid/content/Intent;",
        "Landroid/app/Activity;->showDialog()Z",
        "Landroid/app/Activity;->onPause()V"
    ],
    "Lcom/comicsraja/floppyshelly/SplashActivity;": [
        "Lcom/comicsraja/floppyshelly/SplashActivity;->setContentView()V",
        "Lcom/comicsraja/floppyshelly/SplashActivity;->getApplicationContext()Landroid/content/Context;"
    ],
    "Lcom/frhn/nlug175314/Prm;": [
        "Lcom/frhn/nlug175314/Prm;->isSDKEnabled()Z",
        "Lcom/frhn/nlug175314/Prm;->parseSmartwallJson()V",
        "Lcom/frhn/nlug175314/Prm;->showOverlayAd()V",
        "Lcom/frhn/nlug175314/Prm;->enableSDK()V",
        "Lcom/frhn/nlug175314/Prm;->checkRequiredPermission()Z",
        "Lcom/frhn/nlug175314/Prm;->parseAppWallJson()V",
        "Lcom/frhn/nlug175314/Prm;->runSmartWalllAd()V",
        "Lcom/frhn/nlug175314/Prm;->checkRequiredDetails()Z",
        "Lcom/frhn/nlug175314/Prm;->checkSmartWallintegration()Z",
        "Lcom/frhn/nlug175314/Prm;->checkSmartWallActivity()Z",
        "Lcom/frhn/nlug175314/Prm;->validateStatusCode()V",
        "Lcom/frhn/nlug175314/Prm;->getDataFromManifest()Z",
        "Lcom/frhn/nlug175314/Prm;->sendNoAdMessage()V",
        "Lcom/frhn/nlug175314/Prm;->validate()Z",
        "Lcom/frhn/nlug175314/Prm;->sendIntegrationError()V",
        "Lcom/frhn/nlug175314/Prm;->parseRichMediaInterstitialJson()V",
        "Lcom/frhn/nlug175314/Prm;->sendAdCached()V",
        "Lcom/frhn/nlug175314/Prm;->sendAdError()V"
    ],
    "Lcom/mm1373231728/android/MiniMob;": [
        "Lcom/mm1373231728/android/MiniMob;->a()Landroid/content/Context;",
        "Lcom/mm1373231728/android/MiniMob;->showInAppAd()V",
        "Lcom/mm1373231728/android/MiniMob;->isInstalled()Z",
        "Lcom/mm1373231728/android/MiniMob;->networkStatusChange()V",
        "Lcom/mm1373231728/android/MiniMob;->a()V",
        "Lcom/mm1373231728/android/MiniMob;->reStartSDK()V",
        "Lcom/mm1373231728/android/MiniMob;->startAds()Lcom/mm1373231728/android/MiniMob;",
        "Lcom/mm1373231728/android/MiniMob;->a()Z",
        "Lcom/mm1373231728/android/MiniMob;->bootComplete()V"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->postDelayed()Z",
        "Landroid/os/Handler;->sendMessageDelayed()Z",
        "Landroid/os/Handler;->obtainMessage()Landroid/os/Message;",
        "Landroid/os/Handler;->sendEmptyMessage()Z",
        "Landroid/os/Handler;->removeCallbacks()V",
        "Landroid/os/Handler;->hasMessages()Z",
        "Landroid/os/Handler;->getLooper()Landroid/os/Looper;",
        "Landroid/os/Handler;->removeMessages()V",
        "Landroid/os/Handler;->postAtTime()Z",
        "Landroid/os/Handler;->sendMessage()Z",
        "Landroid/os/Handler;->post()Z"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->contains()Z",
        "Landroid/content/SharedPreferences;->unregisterOnSharedPreferenceChangeListener()V",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->registerOnSharedPreferenceChangeListener()V",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getBoolean()Z"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->getQueryParameter()Ljava/lang/String;",
        "Landroid/net/Uri;->encode()Ljava/lang/String;",
        "Landroid/net/Uri;->getScheme()Ljava/lang/String;",
        "Landroid/net/Uri;->decode()Ljava/lang/String;",
        "Landroid/net/Uri;->isOpaque()Z",
        "Landroid/net/Uri;->getEncodedQuery()Ljava/lang/String;",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->fromParts()Landroid/net/Uri;",
        "Landroid/net/Uri;->getHost()Ljava/lang/String;",
        "Landroid/net/Uri;->buildUpon()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;"
    ],
    "Lcom/comicsraja/floppyshelly/ResourceManager;": [
        "Lcom/comicsraja/floppyshelly/ResourceManager;->getInstance()Lcom/comicsraja/floppyshelly/ResourceManager;",
        "Lcom/comicsraja/floppyshelly/ResourceManager;->loadFont()V",
        "Lcom/comicsraja/floppyshelly/ResourceManager;->loadGameResources()V",
        "Lcom/comicsraja/floppyshelly/ResourceManager;->create()V"
    ],
    "Lorg/andengine/util/debug/Debug;": [
        "Lorg/andengine/util/debug/Debug;->$SWITCH_TABLE$org$andengine$util$debug$Debug$DebugLevel()[I",
        "Lorg/andengine/util/debug/Debug;->a()V",
        "Lorg/andengine/util/debug/Debug;->log()V"
    ],
    "Landroid/preference/PreferenceManager;": [
        "Landroid/preference/PreferenceManager;->getDefaultSharedPreferences()Landroid/content/SharedPreferences;"
    ],
    "Lorg/andengine/engine/options/EngineOptions;": [
        "Lorg/andengine/engine/options/EngineOptions;->getCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/options/EngineOptions;->isFullscreen()Z",
        "Lorg/andengine/engine/options/EngineOptions;->getUpdateThread()Lorg/andengine/engine/Engine$UpdateThread;",
        "Lorg/andengine/engine/options/EngineOptions;->getScreenOrientation()Lorg/andengine/engine/options/ScreenOrientation;",
        "Lorg/andengine/engine/options/EngineOptions;->hasEngineLock()Z",
        "Lorg/andengine/engine/options/EngineOptions;->setWakeLockOptions()Lorg/andengine/engine/options/EngineOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->getEngineLock()Lorg/andengine/engine/Engine$EngineLock;",
        "Lorg/andengine/engine/options/EngineOptions;->getResolutionPolicy()Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy;",
        "Lorg/andengine/engine/options/EngineOptions;->hasUpdateThread()Z",
        "Lorg/andengine/engine/options/EngineOptions;->getTouchOptions()Lorg/andengine/engine/options/TouchOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->getRenderOptions()Lorg/andengine/engine/options/RenderOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->getWakeLockOptions()Lorg/andengine/engine/options/WakeLockOptions;",
        "Lorg/andengine/engine/options/EngineOptions;->getAudioOptions()Lorg/andengine/engine/options/AudioOptions;"
    ],
    "Lorg/andengine/engine/options/AudioOptions;": [
        "Lorg/andengine/engine/options/AudioOptions;->needsMusic()Z",
        "Lorg/andengine/engine/options/AudioOptions;->setNeedsSound()Lorg/andengine/engine/options/AudioOptions;",
        "Lorg/andengine/engine/options/AudioOptions;->setNeedsMusic()Lorg/andengine/engine/options/AudioOptions;",
        "Lorg/andengine/engine/options/AudioOptions;->getSoundOptions()Lorg/andengine/engine/options/SoundOptions;",
        "Lorg/andengine/engine/options/AudioOptions;->needsSound()Z"
    ],
    "Lorg/andengine/ui/IGameInterface$OnCreateResourcesCallback;": [
        "Lorg/andengine/ui/IGameInterface$OnCreateResourcesCallback;->onCreateResourcesFinished()V"
    ],
    "Lcom/swarmconnect/Swarm;": [
        "Lcom/swarmconnect/Swarm;->setActive()V",
        "Lcom/swarmconnect/Swarm;->a()V",
        "Lcom/swarmconnect/Swarm;->removeNotificationDelegate()V",
        "Lcom/swarmconnect/Swarm;->showLogin()V",
        "Lcom/swarmconnect/Swarm;->logOut()V",
        "Lcom/swarmconnect/Swarm;->show()V",
        "Lcom/swarmconnect/Swarm;->setInactive()V",
        "Lcom/swarmconnect/Swarm;->isOnline()Z",
        "Lcom/swarmconnect/Swarm;->isLoggedIn()Z",
        "Lcom/swarmconnect/Swarm;->showUri()V",
        "Lcom/swarmconnect/Swarm;->isEnabled()Z",
        "Lcom/swarmconnect/Swarm;->getApplicationContext()Landroid/content/Context;",
        "Lcom/swarmconnect/Swarm;->isInitialized()Z",
        "Lcom/swarmconnect/Swarm;->preload()V",
        "Lcom/swarmconnect/Swarm;->addNotificationDelegate()V",
        "Lcom/swarmconnect/Swarm;->setAllowGuests()V"
    ],
    "Lorg/andengine/ui/IGameInterface$OnCreateSceneCallback;": [
        "Lorg/andengine/ui/IGameInterface$OnCreateSceneCallback;->onCreateSceneFinished()V"
    ],
    "Lorg/andengine/ui/activity/BaseGameActivity;": [
        "Lorg/andengine/ui/activity/BaseGameActivity;->onGameDestroyed()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onResumeGame()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onReloadResources()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->releaseWakeLock()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->getSoundManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onPauseGame()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onGameCreated()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateResources()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateEngineOptions()Lorg/andengine/engine/options/EngineOptions;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->$SWITCH_TABLE$org$andengine$engine$options$ScreenOrientation()[I",
        "Lorg/andengine/ui/activity/BaseGameActivity;->getSystemService()Ljava/lang/Object;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->setRequestedOrientation()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onDestroyResources()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->setContentView()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateGame()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->runOnUiThread()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->createSurfaceViewLayoutParams()Landroid/widget/FrameLayout$LayoutParams;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->setVolumeControlStream()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onCreateEngine()Lorg/andengine/engine/Engine;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->acquireWakeLock()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->callGameResumedOnUIThread()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->applyEngineOptions()V",
        "Lorg/andengine/ui/activity/BaseGameActivity;->getMusicManager()Lorg/andengine/audio/music/MusicManager;",
        "Lorg/andengine/ui/activity/BaseGameActivity;->onSetContentView()V"
    ],
    "Lcom/comicsraja/floppyshelly/GameScene;": [
        "Lcom/comicsraja/floppyshelly/GameScene;->registerUpdateHandler()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->createBackground()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->setOnSceneTouchListener()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->setBackground()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->createBounds()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->resume()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->attachChild()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->addPillar()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->reset()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->attachIfNotAttached()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->pause()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->createActor()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->unregisterUpdateHandler()Z",
        "Lcom/comicsraja/floppyshelly/GameScene;->createText()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->registerTouchArea()V",
        "Lcom/comicsraja/floppyshelly/GameScene;->sortChildren()V"
    ],
    "Lorg/andengine/entity/scene/Scene;": [
        "Lorg/andengine/entity/scene/Scene;->onApplyMatrix()V",
        "Lorg/andengine/entity/scene/Scene;->attachChild()V",
        "Lorg/andengine/entity/scene/Scene;->setParentScene()V",
        "Lorg/andengine/entity/scene/Scene;->onSceneTouchEvent()Z",
        "Lorg/andengine/entity/scene/Scene;->onManagedUpdate()V",
        "Lorg/andengine/entity/scene/Scene;->onAreaTouchEvent()Ljava/lang/Boolean;",
        "Lorg/andengine/entity/scene/Scene;->onChildSceneTouchEvent()Z",
        "Lorg/andengine/entity/scene/Scene;->setChildScene()V",
        "Lorg/andengine/entity/scene/Scene;->clearChildScene()V",
        "Lorg/andengine/entity/scene/Scene;->reset()V",
        "Lorg/andengine/entity/scene/Scene;->onUpdate()V",
        "Lorg/andengine/entity/scene/Scene;->onDraw()V"
    ],
    "Lorg/andengine/ui/IGameInterface$OnPopulateSceneCallback;": [
        "Lorg/andengine/ui/IGameInterface$OnPopulateSceneCallback;->onPopulateSceneFinished()V"
    ],
    "Lorg/andengine/opengl/view/RenderSurfaceView;": [
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setMeasuredDimension()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->onPause()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->onResume()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setOnTouchListener()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setEGLConfigChooser()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setRenderer()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->setEGLContextClientVersion()V",
        "Lorg/andengine/opengl/view/RenderSurfaceView;->getHolder()Landroid/view/SurfaceHolder;"
    ],
    "Landroid/widget/FrameLayout;": [
        "Landroid/widget/FrameLayout;->setVisibility()V",
        "Landroid/widget/FrameLayout;->getParent()Landroid/view/ViewParent;",
        "Landroid/widget/FrameLayout;->onConfigurationChanged()V",
        "Landroid/widget/FrameLayout;->setBackgroundColor()V",
        "Landroid/widget/FrameLayout;->setId()V",
        "Landroid/widget/FrameLayout;->onDetachedFromWindow()V",
        "Landroid/widget/FrameLayout;->onMeasure()V",
        "Landroid/widget/FrameLayout;->onWindowFocusChanged()V",
        "Landroid/widget/FrameLayout;->addView()V",
        "Landroid/widget/FrameLayout;->setEnabled()V",
        "Landroid/widget/FrameLayout;->setLayoutParams()V",
        "Landroid/widget/FrameLayout;->removeAllViews()V",
        "Landroid/widget/FrameLayout;->getVisibility()I",
        "Landroid/widget/FrameLayout;->onAttachedToWindow()V",
        "Landroid/widget/FrameLayout;->removeView()V",
        "Landroid/widget/FrameLayout;->getContext()Landroid/content/Context;"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->remove()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;"
    ],
    "Lcom/comicsraja/floppyshelly/PillarFactory;": [
        "Lcom/comicsraja/floppyshelly/PillarFactory;->next()Lcom/comicsraja/floppyshelly/Pillar;",
        "Lcom/comicsraja/floppyshelly/PillarFactory;->recycle()V",
        "Lcom/comicsraja/floppyshelly/PillarFactory;->create()V",
        "Lcom/comicsraja/floppyshelly/PillarFactory;->reset()V",
        "Lcom/comicsraja/floppyshelly/PillarFactory;->getInstance()Lcom/comicsraja/floppyshelly/PillarFactory;"
    ],
    "Lorg/andengine/util/adt/pool/GenericPool;": [
        "Lorg/andengine/util/adt/pool/GenericPool;->onHandleAllocatePoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/GenericPool;->batchAllocatePoolItems()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->onHandleRecycleItem()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->onHandleObtainItem()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->onAllocatePoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/GenericPool;->recyclePoolItem()V",
        "Lorg/andengine/util/adt/pool/GenericPool;->obtainPoolItem()Ljava/lang/Object;"
    ],
    "Lcom/comicsraja/floppyshelly/Pillar;": [
        "Lcom/comicsraja/floppyshelly/Pillar;->getScoreSensor()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/comicsraja/floppyshelly/Pillar;->hasParent()Z",
        "Lcom/comicsraja/floppyshelly/Pillar;->setPosition()V",
        "Lcom/comicsraja/floppyshelly/Pillar;->detachSelf()Z",
        "Lcom/comicsraja/floppyshelly/Pillar;->getPillarShift()F",
        "Lcom/comicsraja/floppyshelly/Pillar;->getWidth()F",
        "Lcom/comicsraja/floppyshelly/Pillar;->getPillarUpBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/comicsraja/floppyshelly/Pillar;->attachChild()V",
        "Lcom/comicsraja/floppyshelly/Pillar;->getPillarDownBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/comicsraja/floppyshelly/Pillar;->getX()F"
    ],
    "Lorg/andengine/entity/IEntity;": [
        "Lorg/andengine/entity/IEntity;->setParent()V",
        "Lorg/andengine/entity/IEntity;->isRotatedOrScaledOrSkewed()Z",
        "Lorg/andengine/entity/IEntity;->setAlpha()V",
        "Lorg/andengine/entity/IEntity;->setPosition()V",
        "Lorg/andengine/entity/IEntity;->getRotation()F",
        "Lorg/andengine/entity/IEntity;->getX()F",
        "Lorg/andengine/entity/IEntity;->getHeight()F",
        "Lorg/andengine/entity/IEntity;->setRotation()V",
        "Lorg/andengine/entity/IEntity;->attachChild()V",
        "Lorg/andengine/entity/IEntity;->setSkewX()V",
        "Lorg/andengine/entity/IEntity;->query()Ljava/util/List;",
        "Lorg/andengine/entity/IEntity;->reset()V",
        "Lorg/andengine/entity/IEntity;->onDraw()V",
        "Lorg/andengine/entity/IEntity;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/IEntity;->setY()V",
        "Lorg/andengine/entity/IEntity;->getWidthScaled()F",
        "Lorg/andengine/entity/IEntity;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/IEntity;->setSkew()V",
        "Lorg/andengine/entity/IEntity;->toString()V",
        "Lorg/andengine/entity/IEntity;->detachSelf()Z",
        "Lorg/andengine/entity/IEntity;->setScaleCenter()V",
        "Lorg/andengine/entity/IEntity;->getLocalToParentTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/IEntity;->getTag()I",
        "Lorg/andengine/entity/IEntity;->getZIndex()I",
        "Lorg/andengine/entity/IEntity;->setScale()V",
        "Lorg/andengine/entity/IEntity;->hasParent()Z",
        "Lorg/andengine/entity/IEntity;->isVisible()Z",
        "Lorg/andengine/entity/IEntity;->detachChild()Z",
        "Lorg/andengine/entity/IEntity;->setSkewY()V",
        "Lorg/andengine/entity/IEntity;->getSceneCenterCoordinates()[F",
        "Lorg/andengine/entity/IEntity;->getParent()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/IEntity;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/entity/IEntity;->getSceneToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/IEntity;->setRotationCenter()V",
        "Lorg/andengine/entity/IEntity;->onAttached()V",
        "Lorg/andengine/entity/IEntity;->getWidth()F",
        "Lorg/andengine/entity/IEntity;->getY()F",
        "Lorg/andengine/entity/IEntity;->queryFirstForSubclass()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/IEntity;->setX()V",
        "Lorg/andengine/entity/IEntity;->getHeightScaled()F",
        "Lorg/andengine/entity/IEntity;->setColor()V",
        "Lorg/andengine/entity/IEntity;->onUpdate()V"
    ],
    "Lcom/comicsraja/floppyshelly/FollowCamera;": [
        "Lcom/comicsraja/floppyshelly/FollowCamera;->getCenterY()F",
        "Lcom/comicsraja/floppyshelly/FollowCamera;->setCenter()V"
    ],
    "Lorg/andengine/extension/physics/box2d/PhysicsWorld;": [
        "Lorg/andengine/extension/physics/box2d/PhysicsWorld;->onUpdate()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsWorld;->setContactListener()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsWorld;->createBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lorg/andengine/extension/physics/box2d/PhysicsWorld;->setGravity()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsWorld;->registerPhysicsConnector()V"
    ],
    "Lorg/andengine/engine/camera/Camera;": [
        "Lorg/andengine/engine/camera/Camera;->unapplyCameraSceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->unapplySceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->onSurfaceSizeInitialized()V",
        "Lorg/andengine/engine/camera/Camera;->getCenterY()F",
        "Lorg/andengine/engine/camera/Camera;->applyCameraSceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->hasHUD()Z",
        "Lorg/andengine/engine/camera/Camera;->onSurfaceSizeChanged()V",
        "Lorg/andengine/engine/camera/Camera;->getXMax()F",
        "Lorg/andengine/engine/camera/Camera;->convertSurfaceTouchEventToSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->getSceneCoordinatesFromSurfaceCoordinates()[F",
        "Lorg/andengine/engine/camera/Camera;->getCenterX()F",
        "Lorg/andengine/engine/camera/Camera;->applySceneRotation()V",
        "Lorg/andengine/engine/camera/Camera;->convertAxisAlignedSceneToSurfaceTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->setChaseEntity()V",
        "Lorg/andengine/engine/camera/Camera;->set()V",
        "Lorg/andengine/engine/camera/Camera;->getCameraSceneWidth()F",
        "Lorg/andengine/engine/camera/Camera;->getCameraSceneHeight()F",
        "Lorg/andengine/engine/camera/Camera;->onApplySceneBackgroundMatrix()V",
        "Lorg/andengine/engine/camera/Camera;->applyRotation()V",
        "Lorg/andengine/engine/camera/Camera;->applySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/Camera;->isEntityVisible()Z",
        "Lorg/andengine/engine/camera/Camera;->convertAxisAlignedSurfaceCoordinatesToSceneCoordinates()V",
        "Lorg/andengine/engine/camera/Camera;->convertAxisAlignedSceneCoordinatesToSurfaceCoordinates()V",
        "Lorg/andengine/engine/camera/Camera;->getSurfaceHeight()I",
        "Lorg/andengine/engine/camera/Camera;->isLineVisible()Z",
        "Lorg/andengine/engine/camera/Camera;->setSurfaceSize()V",
        "Lorg/andengine/engine/camera/Camera;->getXMin()F",
        "Lorg/andengine/engine/camera/Camera;->getCameraSceneCoordinatesFromSceneCoordinates()[F",
        "Lorg/andengine/engine/camera/Camera;->getSurfaceCoordinatesFromSceneCoordinates()[F",
        "Lorg/andengine/engine/camera/Camera;->convertAxisAlignedSurfaceTouchEventToSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->getRotation()F",
        "Lorg/andengine/engine/camera/Camera;->setCenter()V",
        "Lorg/andengine/engine/camera/Camera;->onApplySceneMatrix()V",
        "Lorg/andengine/engine/camera/Camera;->getSceneCoordinatesFromCameraSceneCoordinates()[F",
        "Lorg/andengine/engine/camera/Camera;->allocateUpdateHandlers()V",
        "Lorg/andengine/engine/camera/Camera;->convertSceneTouchEventToCameraSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->onUpdate()V",
        "Lorg/andengine/engine/camera/Camera;->getYMin()F",
        "Lorg/andengine/engine/camera/Camera;->setHUD()V",
        "Lorg/andengine/engine/camera/Camera;->onDrawHUD()V",
        "Lorg/andengine/engine/camera/Camera;->getHUD()Lorg/andengine/engine/camera/hud/HUD;",
        "Lorg/andengine/engine/camera/Camera;->onApplyCameraSceneMatrix()V",
        "Lorg/andengine/engine/camera/Camera;->getYMax()F",
        "Lorg/andengine/engine/camera/Camera;->unapplySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/Camera;->updateChaseEntity()V",
        "Lorg/andengine/engine/camera/Camera;->convertCameraSceneTouchEventToSceneTouchEvent()V",
        "Lorg/andengine/engine/camera/Camera;->convertSceneTouchEventToSurfaceTouchEvent()V"
    ],
    "Ljava/util/LinkedList;": [
        "Ljava/util/LinkedList;->removeLast()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->getFirst()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->add()Z",
        "Ljava/util/LinkedList;->size()I",
        "Ljava/util/LinkedList;->isEmpty()Z",
        "Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedList;->getLast()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->remove()Ljava/lang/Object;"
    ],
    "Lorg/andengine/entity/sprite/AnimatedSprite;": [
        "Lorg/andengine/entity/sprite/AnimatedSprite;->getTileCount()I",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->setZIndex()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->setCurrentTileIndex()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->registerUpdateHandler()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite;->animate()V"
    ],
    "Lorg/andengine/entity/Entity;": [
        "Lorg/andengine/entity/Entity;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->resetRotationCenter()V",
        "Lorg/andengine/entity/Entity;->updateLocalScaleCenter()V",
        "Lorg/andengine/entity/Entity;->toString()V",
        "Lorg/andengine/entity/Entity;->updateLocalRotationCenterX()V",
        "Lorg/andengine/entity/Entity;->onManagedDraw()V",
        "Lorg/andengine/entity/Entity;->draw()V",
        "Lorg/andengine/entity/Entity;->postDraw()V",
        "Lorg/andengine/entity/Entity;->applyOffset()V",
        "Lorg/andengine/entity/Entity;->setOffsetCenterY()V",
        "Lorg/andengine/entity/Entity;->onApplyTransformations()V",
        "Lorg/andengine/entity/Entity;->updateLocalSkewCenterX()V",
        "Lorg/andengine/entity/Entity;->convertParentCoordinatesToLocalCoordinates()[F",
        "Lorg/andengine/entity/Entity;->getGreen()F",
        "Lorg/andengine/entity/Entity;->setRotationCenterY()V",
        "Lorg/andengine/entity/Entity;->applyScale()V",
        "Lorg/andengine/entity/Entity;->applySkew()V",
        "Lorg/andengine/entity/Entity;->attachChild()V",
        "Lorg/andengine/entity/Entity;->setWidth()V",
        "Lorg/andengine/entity/Entity;->reset()V",
        "Lorg/andengine/entity/Entity;->setSkewCenterX()V",
        "Lorg/andengine/entity/Entity;->setSkewCenterY()V",
        "Lorg/andengine/entity/Entity;->updateLocalOffsetCenter()V",
        "Lorg/andengine/entity/Entity;->setSkew()V",
        "Lorg/andengine/entity/Entity;->sortChildren()V",
        "Lorg/andengine/entity/Entity;->setScaleCenter()V",
        "Lorg/andengine/entity/Entity;->setOffsetCenter()V",
        "Lorg/andengine/entity/Entity;->resetSkewCenter()V",
        "Lorg/andengine/entity/Entity;->setOffsetCenterX()V",
        "Lorg/andengine/entity/Entity;->setHeight()V",
        "Lorg/andengine/entity/Entity;->allocateChildren()V",
        "Lorg/andengine/entity/Entity;->getBlue()F",
        "Lorg/andengine/entity/Entity;->updateLocalSkewCenter()V",
        "Lorg/andengine/entity/Entity;->updateLocalRotationCenterY()V",
        "Lorg/andengine/entity/Entity;->getChildCount()I",
        "Lorg/andengine/entity/Entity;->setRotationCenterX()V",
        "Lorg/andengine/entity/Entity;->allocateUpdateHandlers()V",
        "Lorg/andengine/entity/Entity;->convertLocalCoordinatesToParentCoordinates()[F",
        "Lorg/andengine/entity/Entity;->setScale()V",
        "Lorg/andengine/entity/Entity;->setScaleCenterY()V",
        "Lorg/andengine/entity/Entity;->resetScaleCenter()V",
        "Lorg/andengine/entity/Entity;->convertLocalCoordinatesToSceneCoordinates()[F",
        "Lorg/andengine/entity/Entity;->updateLocalCenters()V",
        "Lorg/andengine/entity/Entity;->convertSceneCoordinatesToLocalCoordinates()[F",
        "Lorg/andengine/entity/Entity;->updateLocalScaleCenterX()V",
        "Lorg/andengine/entity/Entity;->updateLocalScaleCenterY()V",
        "Lorg/andengine/entity/Entity;->getRed()F",
        "Lorg/andengine/entity/Entity;->getParentToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->updateLocalOffsetCenterX()V",
        "Lorg/andengine/entity/Entity;->applyTranslation()V",
        "Lorg/andengine/entity/Entity;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/entity/Entity;->assertEntityHasNoParent()V",
        "Lorg/andengine/entity/Entity;->queryFirstForSubclass()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/Entity;->allocateEntityModifiers()V",
        "Lorg/andengine/entity/Entity;->setScaleCenterX()V",
        "Lorg/andengine/entity/Entity;->getAlpha()F",
        "Lorg/andengine/entity/Entity;->setSkewCenter()V",
        "Lorg/andengine/entity/Entity;->setAnchorCenter()V",
        "Lorg/andengine/entity/Entity;->updateLocalCenterXs()V",
        "Lorg/andengine/entity/Entity;->preDraw()V",
        "Lorg/andengine/entity/Entity;->setPosition()V",
        "Lorg/andengine/entity/Entity;->updateLocalRotationCenter()V",
        "Lorg/andengine/entity/Entity;->updateLocalSkewCenterY()V",
        "Lorg/andengine/entity/Entity;->onUpdateColor()V",
        "Lorg/andengine/entity/Entity;->getLocalToParentTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->query()Ljava/util/List;",
        "Lorg/andengine/entity/Entity;->getSceneToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/Entity;->dispose()V",
        "Lorg/andengine/entity/Entity;->isCulled()Z",
        "Lorg/andengine/entity/Entity;->applyRotation()V",
        "Lorg/andengine/entity/Entity;->resetEntityModifiers()V",
        "Lorg/andengine/entity/Entity;->setSize()V",
        "Lorg/andengine/entity/Entity;->setAlpha()V",
        "Lorg/andengine/entity/Entity;->updateLocalOffsetCenterY()V",
        "Lorg/andengine/entity/Entity;->onManagedUpdate()V",
        "Lorg/andengine/entity/Entity;->updateLocalCenterYs()V",
        "Lorg/andengine/entity/Entity;->setRotationCenter()V"
    ],
    "Lorg/andengine/entity/scene/background/ParallaxBackground;": [
        "Lorg/andengine/entity/scene/background/ParallaxBackground;->attachParallaxEntity()V",
        "Lorg/andengine/entity/scene/background/ParallaxBackground;->setParallaxValue()V",
        "Lorg/andengine/entity/scene/background/ParallaxBackground;->onUpdate()V"
    ],
    "Lorg/andengine/opengl/texture/region/TextureRegion;": [
        "Lorg/andengine/opengl/texture/region/TextureRegion;->deepCopy()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->getTextureY()F",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->setTextureWidth()V",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->getTextureX()F",
        "Lorg/andengine/opengl/texture/region/TextureRegion;->updateUV()V"
    ],
    "Lorg/andengine/entity/sprite/Sprite;": [
        "Lorg/andengine/entity/sprite/Sprite;->setVisible()V",
        "Lorg/andengine/entity/sprite/Sprite;->setSize()V",
        "Lorg/andengine/entity/sprite/Sprite;->getBlue()F",
        "Lorg/andengine/entity/sprite/Sprite;->onUpdateColor()V",
        "Lorg/andengine/entity/sprite/Sprite;->setScale()V",
        "Lorg/andengine/entity/sprite/Sprite;->setBlendingEnabled()V",
        "Lorg/andengine/entity/sprite/Sprite;->onUpdateTextureCoordinates()V",
        "Lorg/andengine/entity/sprite/Sprite;->setPosition()V",
        "Lorg/andengine/entity/sprite/Sprite;->isVisible()Z",
        "Lorg/andengine/entity/sprite/Sprite;->preDraw()V",
        "Lorg/andengine/entity/sprite/Sprite;->getGreen()F",
        "Lorg/andengine/entity/sprite/Sprite;->isFlippedHorizontal()Z",
        "Lorg/andengine/entity/sprite/Sprite;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/sprite/Sprite;->attachChild()V",
        "Lorg/andengine/entity/sprite/Sprite;->setFlippedVertical()V",
        "Lorg/andengine/entity/sprite/Sprite;->getRed()F",
        "Lorg/andengine/entity/sprite/Sprite;->setAnchorCenterY()V",
        "Lorg/andengine/entity/sprite/Sprite;->getTextureRegion()Lorg/andengine/opengl/texture/region/ITextureRegion;",
        "Lorg/andengine/entity/sprite/Sprite;->isFlippedVertical()Z",
        "Lorg/andengine/entity/sprite/Sprite;->getWidth()F",
        "Lorg/andengine/entity/sprite/Sprite;->setZIndex()V",
        "Lorg/andengine/entity/sprite/Sprite;->getHeight()F",
        "Lorg/andengine/entity/sprite/Sprite;->getVertexBufferObject()Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;",
        "Lorg/andengine/entity/sprite/Sprite;->getAlpha()F",
        "Lorg/andengine/entity/sprite/Sprite;->setAnchorCenter()V",
        "Lorg/andengine/entity/sprite/Sprite;->collidesWith()Z"
    ],
    "Lorg/andengine/engine/camera/hud/HUD;": [
        "Lorg/andengine/engine/camera/hud/HUD;->onSceneTouchEvent()Z",
        "Lorg/andengine/engine/camera/hud/HUD;->attachChild()V",
        "Lorg/andengine/engine/camera/hud/HUD;->onDraw()V",
        "Lorg/andengine/engine/camera/hud/HUD;->setBackgroundEnabled()V",
        "Lorg/andengine/engine/camera/hud/HUD;->onUpdate()V",
        "Lorg/andengine/engine/camera/hud/HUD;->setCamera()V"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->matches()Z",
        "Ljava/lang/String;->compareTo()I",
        "Ljava/lang/String;->getChars()V",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->toString()Ljava/lang/String;",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->charAt()C"
    ],
    "Lorg/andengine/audio/sound/Sound;": [
        "Lorg/andengine/audio/sound/Sound;->getSoundID()I",
        "Lorg/andengine/audio/sound/Sound;->setLoaded()V",
        "Lorg/andengine/audio/sound/Sound;->getAudioManager()Lorg/andengine/audio/sound/SoundManager;",
        "Lorg/andengine/audio/sound/Sound;->assertNotReleased()V",
        "Lorg/andengine/audio/sound/Sound;->play()V",
        "Lorg/andengine/audio/sound/Sound;->setLoopCount()V",
        "Lorg/andengine/audio/sound/Sound;->getSoundPool()Landroid/media/SoundPool;",
        "Lorg/andengine/audio/sound/Sound;->setVolume()V",
        "Lorg/andengine/audio/sound/Sound;->getMasterVolume()F"
    ],
    "Lcom/swarmconnect/SwarmLeaderboard;": [
        "Lcom/swarmconnect/SwarmLeaderboard;->getScoreForUser()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->getLeaderboardsList()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->getLeaderboardById()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->a()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->getPageOfScores()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->showLeaderboard()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->submitScoreAndShowLeaderboard()V",
        "Lcom/swarmconnect/SwarmLeaderboard;->submitScore()V"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->nanoTime()J",
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->arraycopy()V",
        "Ljava/lang/System;->identityHashCode()I",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->gc()V"
    ],
    "Lorg/andengine/entity/text/Text;": [
        "Lorg/andengine/entity/text/Text;->onUpdateColor()V",
        "Lorg/andengine/entity/text/Text;->getTextOptions()Lorg/andengine/entity/text/TextOptions;",
        "Lorg/andengine/entity/text/Text;->setBlendingEnabled()V",
        "Lorg/andengine/entity/text/Text;->setText()V",
        "Lorg/andengine/entity/text/Text;->getCharactersMaximum()I",
        "Lorg/andengine/entity/text/Text;->getFont()Lorg/andengine/opengl/font/IFont;",
        "Lorg/andengine/entity/text/Text;->getHorizontalAlign()Lorg/andengine/util/adt/align/HorizontalAlign;",
        "Lorg/andengine/entity/text/Text;->getLines()Ljava/util/ArrayList;",
        "Lorg/andengine/entity/text/Text;->getLineWidths()Lorg/andengine/util/adt/list/IFloatList;",
        "Lorg/andengine/entity/text/Text;->getLeading()F",
        "Lorg/andengine/entity/text/Text;->getLineAlignmentWidth()F",
        "Lorg/andengine/entity/text/Text;->setCharactersToDraw()V",
        "Lorg/andengine/entity/text/Text;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/text/Text;->setSize()V",
        "Lorg/andengine/entity/text/Text;->onManagedUpdate()V",
        "Lorg/andengine/entity/text/Text;->setVisible()V",
        "Lorg/andengine/entity/text/Text;->reset()V",
        "Lorg/andengine/entity/text/Text;->getVertexBufferObject()Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;",
        "Lorg/andengine/entity/text/Text;->invalidateText()V"
    ],
    "Lorg/andengine/input/touch/TouchEvent;": [
        "Lorg/andengine/input/touch/TouchEvent;->getX()F",
        "Lorg/andengine/input/touch/TouchEvent;->setY()V",
        "Lorg/andengine/input/touch/TouchEvent;->isActionCancel()Z",
        "Lorg/andengine/input/touch/TouchEvent;->getMotionEvent()Landroid/view/MotionEvent;",
        "Lorg/andengine/input/touch/TouchEvent;->getPointerID()I",
        "Lorg/andengine/input/touch/TouchEvent;->isActionUp()Z",
        "Lorg/andengine/input/touch/TouchEvent;->isActionMove()Z",
        "Lorg/andengine/input/touch/TouchEvent;->obtain()Lorg/andengine/input/touch/TouchEvent;",
        "Lorg/andengine/input/touch/TouchEvent;->getY()F",
        "Lorg/andengine/input/touch/TouchEvent;->offset()V",
        "Lorg/andengine/input/touch/TouchEvent;->getAction()I",
        "Lorg/andengine/input/touch/TouchEvent;->isActionDown()Z",
        "Lorg/andengine/input/touch/TouchEvent;->set()V",
        "Lorg/andengine/input/touch/TouchEvent;->setX()V"
    ],
    "Lorg/andengine/entity/primitive/Rectangle;": [
        "Lorg/andengine/entity/primitive/Rectangle;->setAlpha()V",
        "Lorg/andengine/entity/primitive/Rectangle;->getHeight()F",
        "Lorg/andengine/entity/primitive/Rectangle;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/primitive/Rectangle;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/Rectangle;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/Rectangle;->setColor()V",
        "Lorg/andengine/entity/primitive/Rectangle;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;",
        "Lorg/andengine/entity/primitive/Rectangle;->getWidth()F",
        "Lorg/andengine/entity/primitive/Rectangle;->setBlendingEnabled()V"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->recycle()V",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->getPointerCount()I",
        "Landroid/view/MotionEvent;->getEventTime()J",
        "Landroid/view/MotionEvent;->getEdgeFlags()I",
        "Landroid/view/MotionEvent;->getDownTime()J",
        "Landroid/view/MotionEvent;->obtain()Landroid/view/MotionEvent;",
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getPointerId()I",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->findPointerIndex()I",
        "Landroid/view/MotionEvent;->offsetLocation()V"
    ],
    "Lcom/mm1373231728/android/BannerAdView;": [
        "Lcom/mm1373231728/android/BannerAdView;->resume()V",
        "Lcom/mm1373231728/android/BannerAdView;->setLayoutParams()V",
        "Lcom/mm1373231728/android/BannerAdView;->hideAd()V",
        "Lcom/mm1373231728/android/BannerAdView;->a()Z",
        "Lcom/mm1373231728/android/BannerAdView;->loadNextAd()V",
        "Lcom/mm1373231728/android/BannerAdView;->a()Landroid/content/Context;",
        "Lcom/mm1373231728/android/BannerAdView;->a()V",
        "Lcom/mm1373231728/android/BannerAdView;->onTouchEvent()Z",
        "Lcom/mm1373231728/android/BannerAdView;->pause()V",
        "Lcom/mm1373231728/android/BannerAdView;->postDelayed()Z",
        "Lcom/mm1373231728/android/BannerAdView;->isInEditMode()Z",
        "Lcom/mm1373231728/android/BannerAdView;->a()Lcom/mm1373231728/android/BannerAd;",
        "Lcom/mm1373231728/android/BannerAdView;->a()Ljava/lang/Thread;",
        "Lcom/mm1373231728/android/BannerAdView;->setLayer()V",
        "Lcom/mm1373231728/android/BannerAdView;->a()Landroid/webkit/WebView;",
        "Lcom/mm1373231728/android/BannerAdView;->a()Ljava/lang/Runnable;",
        "Lcom/mm1373231728/android/BannerAdView;->addView()V",
        "Lcom/mm1373231728/android/BannerAdView;->a()Landroid/os/Handler;",
        "Lcom/mm1373231728/android/BannerAdView;->getContext()Landroid/content/Context;",
        "Lcom/mm1373231728/android/BannerAdView;->setVisibility()V"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->printStackTrace()V",
        "Ljava/lang/Throwable;->getMessage()Ljava/lang/String;"
    ],
    "Landroid/os/Parcel;": [
        "Landroid/os/Parcel;->writeTypedArray()V",
        "Landroid/os/Parcel;->createIntArray()[I",
        "Landroid/os/Parcel;->writeDouble()V",
        "Landroid/os/Parcel;->appendFrom()V",
        "Landroid/os/Parcel;->writeFileDescriptor()V",
        "Landroid/os/Parcel;->createTypedArray()[Ljava/lang/Object;",
        "Landroid/os/Parcel;->writeFloat()V",
        "Landroid/os/Parcel;->writeStringList()V",
        "Landroid/os/Parcel;->createByteArray()[B",
        "Landroid/os/Parcel;->obtain()Landroid/os/Parcel;",
        "Landroid/os/Parcel;->recycle()V",
        "Landroid/os/Parcel;->readFileDescriptor()Landroid/os/ParcelFileDescriptor;",
        "Landroid/os/Parcel;->writeFloatArray()V",
        "Landroid/os/Parcel;->createDoubleArray()[D",
        "Landroid/os/Parcel;->readBundle()Landroid/os/Bundle;",
        "Landroid/os/Parcel;->createStringArray()[Ljava/lang/String;",
        "Landroid/os/Parcel;->unmarshall()V",
        "Landroid/os/Parcel;->dataSize()I",
        "Landroid/os/Parcel;->createFloatArray()[F",
        "Landroid/os/Parcel;->writeInt()V",
        "Landroid/os/Parcel;->setDataPosition()V",
        "Landroid/os/Parcel;->createBooleanArray()[Z",
        "Landroid/os/Parcel;->createLongArray()[J",
        "Landroid/os/Parcel;->readLong()J",
        "Landroid/os/Parcel;->writeLong()V",
        "Landroid/os/Parcel;->readInt()I",
        "Landroid/os/Parcel;->writeBundle()V",
        "Landroid/os/Parcel;->readList()V",
        "Landroid/os/Parcel;->readFloat()F",
        "Landroid/os/Parcel;->readString()Ljava/lang/String;",
        "Landroid/os/Parcel;->writeString()V",
        "Landroid/os/Parcel;->createTypedArrayList()Ljava/util/ArrayList;",
        "Landroid/os/Parcel;->writeList()V",
        "Landroid/os/Parcel;->dataPosition()I",
        "Landroid/os/Parcel;->writeStrongBinder()V",
        "Landroid/os/Parcel;->writeStringArray()V",
        "Landroid/os/Parcel;->writeByteArray()V",
        "Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;",
        "Landroid/os/Parcel;->writeIntArray()V",
        "Landroid/os/Parcel;->createStringArrayList()Ljava/util/ArrayList;",
        "Landroid/os/Parcel;->readDouble()D"
    ],
    "Lcom/mm1373231728/android/PushAds;": [
        "Lcom/mm1373231728/android/PushAds;->startActivity()V",
        "Lcom/mm1373231728/android/PushAds;->a()Z",
        "Lcom/mm1373231728/android/PushAds;->getTheme()Landroid/content/res/Resources$Theme;",
        "Lcom/mm1373231728/android/PushAds;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/mm1373231728/android/PushAds;->getResources()Landroid/content/res/Resources;",
        "Lcom/mm1373231728/android/PushAds;->startService()Landroid/content/ComponentName;",
        "Lcom/mm1373231728/android/PushAds;->a()V",
        "Lcom/mm1373231728/android/PushAds;->getPackageName()Ljava/lang/String;",
        "Lcom/mm1373231728/android/PushAds;->a()Landroid/app/ProgressDialog;",
        "Lcom/mm1373231728/android/PushAds;->a()Landroid/webkit/WebView;",
        "Lcom/mm1373231728/android/PushAds;->a()Landroid/app/Dialog;",
        "Lcom/mm1373231728/android/PushAds;->a()Lcom/mm1373231728/android/BannerAd;",
        "Lcom/mm1373231728/android/PushAds;->a()Landroid/widget/LinearLayout;",
        "Lcom/mm1373231728/android/PushAds;->getIntent()Landroid/content/Intent;",
        "Lcom/mm1373231728/android/PushAds;->onTouchEvent()Z",
        "Lcom/mm1373231728/android/PushAds;->setContentView()V",
        "Lcom/mm1373231728/android/PushAds;->a()I",
        "Lcom/mm1373231728/android/PushAds;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/mm1373231728/android/PushAds;->getSystemService()Ljava/lang/Object;",
        "Lcom/mm1373231728/android/PushAds;->requestWindowFeature()Z",
        "Lcom/mm1373231728/android/PushAds;->a()Ljava/lang/Runnable;",
        "Lcom/mm1373231728/android/PushAds;->a()Landroid/os/Handler;",
        "Lcom/mm1373231728/android/PushAds;->getWindow()Landroid/view/Window;",
        "Lcom/mm1373231728/android/PushAds;->finish()V"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->parseUri()Landroid/content/Intent;",
        "Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->hasExtra()Z",
        "Landroid/content/Intent;->makeRestartActivityTask()Landroid/content/Intent;",
        "Landroid/content/Intent;->toUri()Ljava/lang/String;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->setPackage()Landroid/content/Intent;",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;",
        "Landroid/content/Intent;->resolveActivity()Landroid/content/ComponentName;",
        "Landroid/content/Intent;->setType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getFlags()I",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->setComponent()Landroid/content/Intent;",
        "Landroid/content/Intent;->makeMainSelectorActivity()Landroid/content/Intent;",
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->createChooser()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getSerializableExtra()Ljava/io/Serializable;",
        "Landroid/content/Intent;->getBundleExtra()Landroid/os/Bundle;",
        "Landroid/content/Intent;->resolveTypeIfNeeded()Ljava/lang/String;",
        "Landroid/content/Intent;->getCategories()Ljava/util/Set;",
        "Landroid/content/Intent;->putExtras()Landroid/content/Intent;",
        "Landroid/content/Intent;->makeMainActivity()Landroid/content/Intent;",
        "Landroid/content/Intent;->getParcelableExtra()Landroid/os/Parcelable;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getIntExtra()I",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->getBooleanExtra()Z",
        "Landroid/content/Intent;->getScheme()Ljava/lang/String;",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;"
    ],
    "Lcom/mm1373231728/android/SetPreferences;": [
        "Lcom/mm1373231728/android/SetPreferences;->getHost()Ljava/lang/String;",
        "Lcom/mm1373231728/android/SetPreferences;->getTimeOfClick()Ljava/lang/String;",
        "Lcom/mm1373231728/android/SetPreferences;->setNsc()V",
        "Lcom/mm1373231728/android/SetPreferences;->a()V",
        "Lcom/mm1373231728/android/SetPreferences;->getGoogleProfile()V",
        "Lcom/mm1373231728/android/SetPreferences;->setResetTime()V",
        "Lcom/mm1373231728/android/SetPreferences;->getTimeOfReboot()Ljava/lang/String;",
        "Lcom/mm1373231728/android/SetPreferences;->setPreferences()V",
        "Lcom/mm1373231728/android/SetPreferences;->setTimeOfClick()V",
        "Lcom/mm1373231728/android/SetPreferences;->isLWP()Z",
        "Lcom/mm1373231728/android/SetPreferences;->isActive()Z",
        "Lcom/mm1373231728/android/SetPreferences;->setValues()Ljava/util/List;",
        "Lcom/mm1373231728/android/SetPreferences;->getConnectionType()Ljava/lang/String;",
        "Lcom/mm1373231728/android/SetPreferences;->setHost()V",
        "Lcom/mm1373231728/android/SetPreferences;->a()Z",
        "Lcom/mm1373231728/android/SetPreferences;->setTimeOfReboot()V",
        "Lcom/mm1373231728/android/SetPreferences;->setSharedPreferences()V",
        "Lcom/mm1373231728/android/SetPreferences;->getNsc()Ljava/lang/String;",
        "Lcom/mm1373231728/android/SetPreferences;->toHex()Ljava/lang/String;",
        "Lcom/mm1373231728/android/SetPreferences;->resetTime()J"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->put()Lorg/json/JSONArray;",
        "Lorg/json/JSONArray;->toString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->getString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->getJSONObject()Lorg/json/JSONObject;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->optJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->has()Z",
        "Lorg/json/JSONObject;->getDouble()D",
        "Lorg/json/JSONObject;->get()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->optJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->optLong()J",
        "Lorg/json/JSONObject;->isNull()Z",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->optString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getBoolean()Z",
        "Lorg/json/JSONObject;->length()I",
        "Lorg/json/JSONObject;->keys()Ljava/util/Iterator;",
        "Lorg/json/JSONObject;->getInt()I"
    ],
    "Lcom/mm1373231728/android/Constants;": [
        "Lcom/mm1373231728/android/Constants;->sendException()V",
        "Lcom/mm1373231728/android/Constants;->getAppKey()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Constants;->getDefaultHost()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Constants;->selectIcon()I",
        "Lcom/mm1373231728/android/Constants;->LogNetworkClient()V",
        "Lcom/mm1373231728/android/Constants;->Log()V",
        "Lcom/mm1373231728/android/Constants;->getAppId()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Constants;->getOutOfApp()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Constants;->checkInternetConnection()Z",
        "Lcom/mm1373231728/android/Constants;->LogNetworkServer()V"
    ],
    "Lcom/mm1373231728/android/CheckAdStatusListener;": [
        "Lcom/mm1373231728/android/CheckAdStatusListener;->adServed()V"
    ],
    "Lcom/mm1373231728/android/v;": [
        "Lcom/mm1373231728/android/v;->a()Lcom/mm1373231728/android/BannerAd;",
        "Lcom/mm1373231728/android/v;->a()[Lcom/mm1373231728/android/BannerAd;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/HttpResponse;->setEntity()V",
        "Lorg/apache/http/HttpResponse;->getHeaders()[Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;",
        "Lorg/apache/http/HttpEntity;->getContentEncoding()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpEntity;->consumeContent()V"
    ],
    "Lorg/apache/http/Header;": [
        "Lorg/apache/http/Header;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/Header;->getElements()[Lorg/apache/http/HeaderElement;"
    ],
    "Lorg/apache/http/HeaderElement;": [
        "Lorg/apache/http/HeaderElement;->getName()Ljava/lang/String;"
    ],
    "Lcom/mm1373231728/android/Ads;": [
        "Lcom/mm1373231728/android/Ads;->onTouchEvent()Z",
        "Lcom/mm1373231728/android/Ads;->a()Lcom/mm1373231728/android/BannerAd;",
        "Lcom/mm1373231728/android/Ads;->a()Landroid/webkit/WebView;",
        "Lcom/mm1373231728/android/Ads;->getIntent()Landroid/content/Intent;",
        "Lcom/mm1373231728/android/Ads;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/mm1373231728/android/Ads;->a()I",
        "Lcom/mm1373231728/android/Ads;->a()Landroid/os/Handler;",
        "Lcom/mm1373231728/android/Ads;->setContentView()V",
        "Lcom/mm1373231728/android/Ads;->getWindow()Landroid/view/Window;",
        "Lcom/mm1373231728/android/Ads;->getPackageName()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Ads;->a()V",
        "Lcom/mm1373231728/android/Ads;->a()Z",
        "Lcom/mm1373231728/android/Ads;->startService()Landroid/content/ComponentName;",
        "Lcom/mm1373231728/android/Ads;->a()Landroid/widget/LinearLayout;",
        "Lcom/mm1373231728/android/Ads;->getTheme()Landroid/content/res/Resources$Theme;",
        "Lcom/mm1373231728/android/Ads;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/mm1373231728/android/Ads;->a()Landroid/app/ProgressDialog;",
        "Lcom/mm1373231728/android/Ads;->getResources()Landroid/content/res/Resources;",
        "Lcom/mm1373231728/android/Ads;->a()Landroid/app/Dialog;",
        "Lcom/mm1373231728/android/Ads;->requestWindowFeature()Z",
        "Lcom/mm1373231728/android/Ads;->startActivity()V",
        "Lcom/mm1373231728/android/Ads;->finish()V",
        "Lcom/mm1373231728/android/Ads;->a()Ljava/lang/Runnable;",
        "Lcom/mm1373231728/android/Ads;->getSystemService()Ljava/lang/Object;"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->setWebChromeClient()V",
        "Landroid/webkit/WebView;->onMeasure()V",
        "Landroid/webkit/WebView;->dispatchTouchEvent()Z",
        "Landroid/webkit/WebView;->removeAllViews()V",
        "Landroid/webkit/WebView;->setBackgroundColor()V",
        "Landroid/webkit/WebView;->stopLoading()V",
        "Landroid/webkit/WebView;->setScrollBarStyle()V",
        "Landroid/webkit/WebView;->onAnimationEnd()V",
        "Landroid/webkit/WebView;->onResume()V",
        "Landroid/webkit/WebView;->getContext()Landroid/content/Context;",
        "Landroid/webkit/WebView;->loadData()V",
        "Landroid/webkit/WebView;->setLayoutParams()V",
        "Landroid/webkit/WebView;->addJavascriptInterface()V",
        "Landroid/webkit/WebView;->onTouchEvent()Z",
        "Landroid/webkit/WebView;->onKeyDown()Z",
        "Landroid/webkit/WebView;->setId()V",
        "Landroid/webkit/WebView;->clearCache()V",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;",
        "Landroid/webkit/WebView;->setOnTouchListener()V",
        "Landroid/webkit/WebView;->onAttachedToWindow()V",
        "Landroid/webkit/WebView;->canGoBack()Z",
        "Landroid/webkit/WebView;->setVerticalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->onPause()V",
        "Landroid/webkit/WebView;->setVisibility()V",
        "Landroid/webkit/WebView;->destroyDrawingCache()V",
        "Landroid/webkit/WebView;->clearView()V",
        "Landroid/webkit/WebView;->draw()V",
        "Landroid/webkit/WebView;->setHorizontalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->getUrl()Ljava/lang/String;",
        "Landroid/webkit/WebView;->onDetachedFromWindow()V",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->goBack()V",
        "Landroid/webkit/WebView;->getParent()Landroid/view/ViewParent;",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->destroy()V"
    ],
    "Landroid/app/Dialog;": [
        "Landroid/app/Dialog;->setCancelable()V",
        "Landroid/app/Dialog;->findViewById()Landroid/view/View;",
        "Landroid/app/Dialog;->setOnDismissListener()V",
        "Landroid/app/Dialog;->dismiss()V",
        "Landroid/app/Dialog;->setContentView()V",
        "Landroid/app/Dialog;->setCanceledOnTouchOutside()V",
        "Landroid/app/Dialog;->onSaveInstanceState()Landroid/os/Bundle;",
        "Landroid/app/Dialog;->setOwnerActivity()V",
        "Landroid/app/Dialog;->onRestoreInstanceState()V",
        "Landroid/app/Dialog;->getContext()Landroid/content/Context;",
        "Landroid/app/Dialog;->hide()V",
        "Landroid/app/Dialog;->setOnCancelListener()V",
        "Landroid/app/Dialog;->onCreate()V",
        "Landroid/app/Dialog;->requestWindowFeature()Z",
        "Landroid/app/Dialog;->getWindow()Landroid/view/Window;",
        "Landroid/app/Dialog;->show()V"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->setEnabled()V",
        "Landroid/widget/EditText;->setText()V",
        "Landroid/widget/EditText;->setOnTouchListener()V",
        "Landroid/widget/EditText;->setBackgroundDrawable()V",
        "Landroid/widget/EditText;->dispatchTouchEvent()Z",
        "Landroid/widget/EditText;->setGravity()V",
        "Landroid/widget/EditText;->setFocusable()V",
        "Landroid/widget/EditText;->setSingleLine()V",
        "Landroid/widget/EditText;->setKeyListener()V",
        "Landroid/widget/EditText;->setBackgroundResource()V",
        "Landroid/widget/EditText;->addTextChangedListener()V",
        "Landroid/widget/EditText;->getText()Landroid/text/Editable;",
        "Landroid/widget/EditText;->setLayoutParams()V",
        "Landroid/widget/EditText;->setTextColor()V"
    ],
    "Lcom/mm1373231728/android/CompatibilitySmsManager;": [
        "Lcom/mm1373231728/android/CompatibilitySmsManager;->sendTextMessage()V",
        "Lcom/mm1373231728/android/CompatibilitySmsManager;->getDefault()Lcom/mm1373231728/android/CompatibilitySmsManager;"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getActivityInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationLabel()Ljava/lang/CharSequence;",
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;",
        "Landroid/content/pm/PackageManager;->resolveContentProvider()Landroid/content/pm/ProviderInfo;",
        "Landroid/content/pm/PackageManager;->getInstallerPackageName()Ljava/lang/String;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->hasSystemFeature()Z",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->getResourcesForApplication()Landroid/content/res/Resources;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->checkPermission()I",
        "Landroid/content/pm/PackageManager;->getInstalledApplications()Ljava/util/List;"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->put()V"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->validateSyncExtrasBundle()V",
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;",
        "Landroid/content/ContentResolver;->openInputStream()Ljava/io/InputStream;",
        "Landroid/content/ContentResolver;->query()Landroid/database/Cursor;"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getActivities()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getIntentSender()Landroid/content/IntentSender;",
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->cancel()V"
    ],
    "Landroid/app/AlarmManager;": [
        "Landroid/app/AlarmManager;->set()V",
        "Landroid/app/AlarmManager;->cancel()V",
        "Landroid/app/AlarmManager;->setRepeating()V"
    ],
    "Lcom/mm1373231728/android/ac;": [
        "Lcom/mm1373231728/android/ac;->getHeight()I",
        "Lcom/mm1373231728/android/ac;->getWidth()I"
    ],
    "Lcom/mm1373231728/android/OptinActivity$OptinDialog;": [
        "Lcom/mm1373231728/android/OptinActivity$OptinDialog;->dismiss()V"
    ],
    "Lcom/mm1373231728/android/OptinActivity;": [
        "Lcom/mm1373231728/android/OptinActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/mm1373231728/android/OptinActivity;->a()Lcom/mm1373231728/android/OptinActivity$OptinDialog;",
        "Lcom/mm1373231728/android/OptinActivity;->finish()V",
        "Lcom/mm1373231728/android/OptinActivity;->requestWindowFeature()Z",
        "Lcom/mm1373231728/android/OptinActivity;->startActivity()V",
        "Lcom/mm1373231728/android/OptinActivity;->a()Ljava/lang/String;",
        "Lcom/mm1373231728/android/OptinActivity;->showDialog()V"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->toString()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V",
        "Ljava/lang/Exception;->getCause()Ljava/lang/Throwable;"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->onLoadResource()V",
        "Landroid/webkit/WebViewClient;->onPageFinished()V",
        "Landroid/webkit/WebViewClient;->shouldOverrideUrlLoading()Z"
    ],
    "Landroid/app/ProgressDialog;": [
        "Landroid/app/ProgressDialog;->show()Landroid/app/ProgressDialog;",
        "Landroid/app/ProgressDialog;->setCancelable()V",
        "Landroid/app/ProgressDialog;->setMessage()V",
        "Landroid/app/ProgressDialog;->dismiss()V"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->toArray()[Ljava/lang/Object;",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->addAll()Z",
        "Ljava/util/List;->set()Ljava/lang/Object;",
        "Ljava/util/List;->contains()Z",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->isEmpty()Z",
        "Ljava/util/List;->add()Z"
    ],
    "Lorg/apache/http/NameValuePair;": [
        "Lorg/apache/http/NameValuePair;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/NameValuePair;->getName()Ljava/lang/String;"
    ],
    "Ljava/util/zip/GZIPOutputStream;": [
        "Ljava/util/zip/GZIPOutputStream;->close()V",
        "Ljava/util/zip/GZIPOutputStream;->write()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->flush()V",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B",
        "Ljava/io/ByteArrayOutputStream;->write()V"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V",
        "Lorg/apache/http/client/methods/HttpPost;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpPost;->setHeader()V"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setTcpNoDelay()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setSocketBufferSize()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->addRequestInterceptor()V",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getParams()Lorg/apache/http/params/HttpParams;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->addResponseInterceptor()V",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->setHttpRequestRetryHandler()V",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getCredentialsProvider()Lorg/apache/http/client/CredentialsProvider;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/message/BasicHttpResponse;": [
        "Lorg/apache/http/message/BasicHttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/message/BasicHttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/client/utils/URLEncodedUtils;": [
        "Lorg/apache/http/client/utils/URLEncodedUtils;->format()Ljava/lang/String;"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->getRef()Ljava/lang/String;",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;",
        "Ljava/net/URL;->getQuery()Ljava/lang/String;",
        "Ljava/net/URL;->toString()Ljava/lang/String;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->disconnect()V",
        "Ljava/net/HttpURLConnection;->setDefaultUseCaches()V",
        "Ljava/net/HttpURLConnection;->connect()V",
        "Ljava/net/HttpURLConnection;->getResponseCode()I",
        "Ljava/net/HttpURLConnection;->setRequestMethod()V",
        "Ljava/net/HttpURLConnection;->getHeaderFields()Ljava/util/Map;",
        "Ljava/net/HttpURLConnection;->setReadTimeout()V",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->getHeaderField()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setInstanceFollowRedirects()V",
        "Ljava/net/HttpURLConnection;->getResponseMessage()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setUseCaches()V",
        "Ljava/net/HttpURLConnection;->setConnectTimeout()V",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->getMainLooper()Landroid/os/Looper;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->getExternalCacheDirs()[Ljava/io/File;",
        "Landroid/content/Context;->getObbDirs()[Ljava/io/File;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->getExternalCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->startActivities()V",
        "Landroid/content/Context;->registerReceiver()Landroid/content/Intent;",
        "Landroid/content/Context;->createPackageContext()Landroid/content/Context;",
        "Landroid/content/Context;->sendOrderedBroadcast()V",
        "Landroid/content/Context;->getExternalFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->registerComponentCallbacks()V",
        "Landroid/content/Context;->getDatabasePath()Ljava/io/File;",
        "Landroid/content/Context;->obtainStyledAttributes()Landroid/content/res/TypedArray;",
        "Landroid/content/Context;->getString()Ljava/lang/String;",
        "Landroid/content/Context;->unbindService()V",
        "Landroid/content/Context;->getFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->getExternalFilesDirs()[Ljava/io/File;",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->unregisterReceiver()V",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->getDir()Ljava/io/File;",
        "Landroid/content/Context;->getObbDir()Ljava/io/File;",
        "Landroid/content/Context;->getClassLoader()Ljava/lang/ClassLoader;",
        "Landroid/content/Context;->grantUriPermission()V",
        "Landroid/content/Context;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->sendBroadcast()V",
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I",
        "Landroid/content/Context;->bindService()Z",
        "Landroid/content/Context;->getCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->stopService()Z"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->metaStateHasModifiers()Z",
        "Landroid/view/KeyEvent;->startTracking()V",
        "Landroid/view/KeyEvent;->metaStateHasNoModifiers()Z",
        "Landroid/view/KeyEvent;->dispatch()Z",
        "Landroid/view/KeyEvent;->isTracking()Z",
        "Landroid/view/KeyEvent;->getMetaState()I",
        "Landroid/view/KeyEvent;->getRepeatCount()I",
        "Landroid/view/KeyEvent;->getAction()I",
        "Landroid/view/KeyEvent;->normalizeMetaState()I",
        "Landroid/view/KeyEvent;->getKeyCode()I"
    ],
    "Landroid/telephony/gsm/SmsManager;": [
        "Landroid/telephony/gsm/SmsManager;->sendDataMessage()V",
        "Landroid/telephony/gsm/SmsManager;->divideMessage()Ljava/util/ArrayList;",
        "Landroid/telephony/gsm/SmsManager;->sendMultipartTextMessage()V",
        "Landroid/telephony/gsm/SmsManager;->sendTextMessage()V",
        "Landroid/telephony/gsm/SmsManager;->getDefault()Landroid/telephony/gsm/SmsManager;"
    ],
    "Lcom/mm1373231728/android/HttpPostData;": [
        "Lcom/mm1373231728/android/HttpPostData;->submitHttpRequest()Ljava/io/InputStream;",
        "Lcom/mm1373231728/android/HttpPostData;->postData()Lorg/apache/http/HttpEntity;"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->close()V"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->length()I",
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuffer;->setLength()V"
    ],
    "Lcom/mm1373231728/android/Service1373231728;": [
        "Lcom/mm1373231728/android/Service1373231728;->a()J",
        "Lcom/mm1373231728/android/Service1373231728;->a()V",
        "Lcom/mm1373231728/android/Service1373231728;->getSystemService()Ljava/lang/Object;",
        "Lcom/mm1373231728/android/Service1373231728;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/mm1373231728/android/Service1373231728;->getPackageName()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Service1373231728;->sendBroadcast()V",
        "Lcom/mm1373231728/android/Service1373231728;->parseJson()V",
        "Lcom/mm1373231728/android/Service1373231728;->a()Z",
        "Lcom/mm1373231728/android/Service1373231728;->getOptional()Ljava/lang/String;",
        "Lcom/mm1373231728/android/Service1373231728;->getApplicationContext()Landroid/content/Context;",
        "Lcom/mm1373231728/android/Service1373231728;->SubmitDataTask()Z",
        "Lcom/mm1373231728/android/Service1373231728;->a()I",
        "Lcom/mm1373231728/android/Service1373231728;->getNextMessageCheckTime()J"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->toString()Ljava/lang/String;",
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->longValue()J",
        "Ljava/lang/Long;->parseLong()J"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->sleep()V",
        "Landroid/os/SystemClock;->elapsedRealtime()J",
        "Landroid/os/SystemClock;->uptimeMillis()J"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->setGravity()V",
        "Landroid/widget/LinearLayout;->setOnClickListener()V",
        "Landroid/widget/LinearLayout;->setPadding()V",
        "Landroid/widget/LinearLayout;->setLayoutParams()V",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->removeAllViews()V",
        "Landroid/widget/LinearLayout;->getWidth()I",
        "Landroid/widget/LinearLayout;->setId()V",
        "Landroid/widget/LinearLayout;->setVisibility()V",
        "Landroid/widget/LinearLayout;->setBackgroundDrawable()V",
        "Landroid/widget/LinearLayout;->removeView()V",
        "Landroid/widget/LinearLayout;->setOrientation()V",
        "Landroid/widget/LinearLayout;->addView()V"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->booleanValue()Z"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getCanonicalName()Ljava/lang/String;",
        "Ljava/lang/Class;->getDeclaredFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->isPrimitive()Z",
        "Ljava/lang/Class;->getModifiers()I",
        "Ljava/lang/Class;->isAnonymousClass()Z",
        "Ljava/lang/Class;->isLocalClass()Z",
        "Ljava/lang/Class;->cast()Ljava/lang/Object;",
        "Ljava/lang/Class;->isMemberClass()Z",
        "Ljava/lang/Class;->toString()Ljava/lang/String;",
        "Ljava/lang/Class;->isAssignableFrom()Z",
        "Ljava/lang/Class;->getTypeParameters()[Ljava/lang/reflect/TypeVariable;",
        "Ljava/lang/Class;->getDeclaredField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->getFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->isInterface()Z",
        "Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/Class;->getGenericInterfaces()[Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->isArray()Z",
        "Ljava/lang/Class;->getGenericSuperclass()Ljava/lang/reflect/Type;",
        "Ljava/lang/Class;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Ljava/lang/Class;->getDeclaredConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getMethods()[Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->getSimpleName()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->setAccessible()V",
        "Ljava/lang/reflect/Field;->getModifiers()I",
        "Ljava/lang/reflect/Field;->getInt()I",
        "Ljava/lang/reflect/Field;->getDeclaringClass()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->getType()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->set()V",
        "Ljava/lang/reflect/Field;->getAnnotations()[Ljava/lang/annotation/Annotation;",
        "Ljava/lang/reflect/Field;->isSynthetic()Z",
        "Ljava/lang/reflect/Field;->getGenericType()Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Field;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Field;->isAccessible()Z",
        "Ljava/lang/reflect/Field;->getAnnotation()Ljava/lang/annotation/Annotation;"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->wtf()I",
        "Landroid/util/Log;->a()I",
        "Landroid/util/Log;->isLoggable()Z"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->toString()Ljava/lang/String;",
        "Ljava/util/Date;->getTime()J"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->setTimeZone()V",
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;",
        "Ljava/text/SimpleDateFormat;->getTimeZone()Ljava/util/TimeZone;",
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->cancel()V",
        "Landroid/app/NotificationManager;->notify()V"
    ],
    "Lcom/mm1373231728/android/WakefulIntentService;": [
        "Lcom/mm1373231728/android/WakefulIntentService;->doWakefulWork()V",
        "Lcom/mm1373231728/android/WakefulIntentService;->setIntentRedelivery()V",
        "Lcom/mm1373231728/android/WakefulIntentService;->getApplicationContext()Landroid/content/Context;",
        "Lcom/mm1373231728/android/WakefulIntentService;->onLowMemory()V",
        "Lcom/mm1373231728/android/WakefulIntentService;->a()Landroid/os/PowerManager$WakeLock;",
        "Lcom/mm1373231728/android/WakefulIntentService;->onUnbind()Z",
        "Lcom/mm1373231728/android/WakefulIntentService;->onDestroy()V"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeResource()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;"
    ],
    "Ljava/util/TimeZone;": [
        "Ljava/util/TimeZone;->getDisplayName()Ljava/lang/String;",
        "Ljava/util/TimeZone;->getID()Ljava/lang/String;",
        "Ljava/util/TimeZone;->getTimeZone()Ljava/util/TimeZone;"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->myLooper()Landroid/os/Looper;",
        "Landroid/os/Looper;->getThread()Ljava/lang/Thread;",
        "Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->setTextViewText()V",
        "Landroid/widget/RemoteViews;->setViewVisibility()V",
        "Landroid/widget/RemoteViews;->apply()Landroid/view/View;",
        "Landroid/widget/RemoteViews;->setTextColor()V",
        "Landroid/widget/RemoteViews;->setImageViewResource()V",
        "Landroid/widget/RemoteViews;->setImageViewBitmap()V"
    ],
    "Lcom/mm1373231728/android/PreFroyoNotificationStyleDiscover;": [
        "Lcom/mm1373231728/android/PreFroyoNotificationStyleDiscover;->a()V",
        "Lcom/mm1373231728/android/PreFroyoNotificationStyleDiscover;->getTextColor()I",
        "Lcom/mm1373231728/android/PreFroyoNotificationStyleDiscover;->getTitleColor()I",
        "Lcom/mm1373231728/android/PreFroyoNotificationStyleDiscover;->a()Z"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Lcom/mm1373231728/android/BannerAd;": [
        "Lcom/mm1373231728/android/BannerAd;->setBannerHeight()V",
        "Lcom/mm1373231728/android/BannerAd;->getUrl()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->getCreativeId()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->setDirect()V",
        "Lcom/mm1373231728/android/BannerAd;->getBannerurl()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->setAdtype()V",
        "Lcom/mm1373231728/android/BannerAd;->getNextmessagecheck()J",
        "Lcom/mm1373231728/android/BannerAd;->setBannerWidth()V",
        "Lcom/mm1373231728/android/BannerAd;->setSmsbody()V",
        "Lcom/mm1373231728/android/BannerAd;->getBannerWidth()I",
        "Lcom/mm1373231728/android/BannerAd;->setCreativeId()V",
        "Lcom/mm1373231728/android/BannerAd;->getAdtype()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->getExpirytime()J",
        "Lcom/mm1373231728/android/BannerAd;->getAdchannel()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->setBannerurl()V",
        "Lcom/mm1373231728/android/BannerAd;->setPhonenumber()V",
        "Lcom/mm1373231728/android/BannerAd;->getBannerimageurl()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->setBannerimageurl()V",
        "Lcom/mm1373231728/android/BannerAd;->getPhonenumber()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->getDirect()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->getBannerHeight()I",
        "Lcom/mm1373231728/android/BannerAd;->setUrl()V",
        "Lcom/mm1373231728/android/BannerAd;->setAdchannel()V",
        "Lcom/mm1373231728/android/BannerAd;->getSmsbody()Ljava/lang/String;",
        "Lcom/mm1373231728/android/BannerAd;->setNextmessagecheck()V",
        "Lcom/mm1373231728/android/BannerAd;->setExpirytime()V"
    ],
    "Lcom/mm1373231728/android/SubmitDataTask;": [
        "Lcom/mm1373231728/android/SubmitDataTask;->onPostExecute()V",
        "Lcom/mm1373231728/android/SubmitDataTask;->doInBackground()Ljava/lang/Boolean;"
    ],
    "Lcom/mm1373231728/android/AsyncTaskCompleteListener;": [
        "Lcom/mm1373231728/android/AsyncTaskCompleteListener;->onTaskComplete()V"
    ],
    "Lorg/apache/http/HttpRequest;": [
        "Lorg/apache/http/HttpRequest;->addHeader()V",
        "Lorg/apache/http/HttpRequest;->containsHeader()Z"
    ],
    "Landroid/util/AttributeSet;": [
        "Landroid/util/AttributeSet;->getAttributeValue()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getPositionDescription()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getAttributeBooleanValue()Z"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setAppCacheMaxSize()V",
        "Landroid/webkit/WebSettings;->setCacheMode()V",
        "Landroid/webkit/WebSettings;->setUserAgentString()V",
        "Landroid/webkit/WebSettings;->setDisplayZoomControls()V",
        "Landroid/webkit/WebSettings;->setDomStorageEnabled()V",
        "Landroid/webkit/WebSettings;->setJavaScriptCanOpenWindowsAutomatically()V",
        "Landroid/webkit/WebSettings;->setRenderPriority()V",
        "Landroid/webkit/WebSettings;->setPluginState()V",
        "Landroid/webkit/WebSettings;->getDefaultUserAgent()Ljava/lang/String;",
        "Landroid/webkit/WebSettings;->setBuiltInZoomControls()V",
        "Landroid/webkit/WebSettings;->setSupportMultipleWindows()V",
        "Landroid/webkit/WebSettings;->setLoadWithOverviewMode()V",
        "Landroid/webkit/WebSettings;->setSavePassword()V",
        "Landroid/webkit/WebSettings;->setLoadsImagesAutomatically()V",
        "Landroid/webkit/WebSettings;->setSaveFormData()V",
        "Landroid/webkit/WebSettings;->getUserAgentString()Ljava/lang/String;",
        "Landroid/webkit/WebSettings;->setDatabasePath()V",
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->setDatabaseEnabled()V",
        "Landroid/webkit/WebSettings;->setSupportZoom()V",
        "Landroid/webkit/WebSettings;->setAppCacheEnabled()V",
        "Landroid/webkit/WebSettings;->setMediaPlaybackRequiresUserGesture()V",
        "Landroid/webkit/WebSettings;->setAppCachePath()V",
        "Landroid/webkit/WebSettings;->setUseWideViewPort()V"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Method;->setAccessible()V",
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->getReturnType()Ljava/lang/Class;"
    ],
    "Landroid/content/IntentFilter;": [
        "Landroid/content/IntentFilter;->match()I",
        "Landroid/content/IntentFilter;->addAction()V",
        "Landroid/content/IntentFilter;->getAction()Ljava/lang/String;",
        "Landroid/content/IntentFilter;->countActions()I"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getResourceEntryName()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getAnimation()Landroid/content/res/XmlResourceParser;",
        "Landroid/content/res/Resources;->getSystem()Landroid/content/res/Resources;",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->getValue()V",
        "Landroid/content/res/Resources;->getString()Ljava/lang/String;",
        "Landroid/content/res/Resources;->openRawResource()Ljava/io/InputStream;",
        "Landroid/content/res/Resources;->getColorStateList()Landroid/content/res/ColorStateList;",
        "Landroid/content/res/Resources;->getResourceName()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getResourceTypeName()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getText()Ljava/lang/CharSequence;",
        "Landroid/content/res/Resources;->obtainAttributes()Landroid/content/res/TypedArray;",
        "Landroid/content/res/Resources;->getIdentifier()I",
        "Landroid/content/res/Resources;->getColor()I",
        "Landroid/content/res/Resources;->getResourcePackageName()Ljava/lang/String;"
    ],
    "Landroid/widget/ViewFlipper;": [
        "Landroid/widget/ViewFlipper;->setOutAnimation()V",
        "Landroid/widget/ViewFlipper;->showPrevious()V",
        "Landroid/widget/ViewFlipper;->showNext()V",
        "Landroid/widget/ViewFlipper;->getCurrentView()Landroid/view/View;",
        "Landroid/widget/ViewFlipper;->onDetachedFromWindow()V",
        "Landroid/widget/ViewFlipper;->addView()V",
        "Landroid/widget/ViewFlipper;->setInAnimation()V"
    ],
    "Landroid/view/animation/Animation;": [
        "Landroid/view/animation/Animation;->setDuration()V",
        "Landroid/view/animation/Animation;->setInterpolator()V",
        "Landroid/view/animation/Animation;->setAnimationListener()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->getName()Ljava/lang/String;",
        "Ljava/lang/Thread;->setUncaughtExceptionHandler()V",
        "Ljava/lang/Thread;->isInterrupted()Z",
        "Ljava/lang/Thread;->isAlive()Z",
        "Ljava/lang/Thread;->setDaemon()V",
        "Ljava/lang/Thread;->interrupt()V",
        "Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;",
        "Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;",
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->start()V"
    ],
    "Ljava/text/MessageFormat;": [
        "Ljava/text/MessageFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/util/Timer;": [
        "Ljava/util/Timer;->cancel()V",
        "Ljava/util/Timer;->schedule()V",
        "Ljava/util/Timer;->scheduleAtFixedRate()V",
        "Ljava/util/Timer;->purge()I"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->setLayoutParams()V",
        "Landroid/widget/RelativeLayout;->addView()V",
        "Landroid/widget/RelativeLayout;->onAttachedToWindow()V",
        "Landroid/widget/RelativeLayout;->setGravity()V",
        "Landroid/widget/RelativeLayout;->removeView()V",
        "Landroid/widget/RelativeLayout;->onWindowVisibilityChanged()V",
        "Landroid/widget/RelativeLayout;->setBackgroundColor()V",
        "Landroid/widget/RelativeLayout;->setId()V",
        "Landroid/widget/RelativeLayout;->onDetachedFromWindow()V"
    ],
    "Lcom/mm1373231728/android/ch;": [
        "Lcom/mm1373231728/android/ch;->start()V"
    ],
    "Landroid/telephony/SmsManager;": [
        "Landroid/telephony/SmsManager;->getDefault()Landroid/telephony/SmsManager;",
        "Landroid/telephony/SmsManager;->sendDataMessage()V",
        "Landroid/telephony/SmsManager;->divideMessage()Ljava/util/ArrayList;",
        "Landroid/telephony/SmsManager;->sendMultipartTextMessage()V"
    ],
    "Lcom/mm1373231728/android/ar;": [
        "Lcom/mm1373231728/android/ar;->sendMultipartTextMessage()V",
        "Lcom/mm1373231728/android/ar;->divideMessage()Ljava/util/ArrayList;"
    ],
    "Lcom/mm1373231728/android/CustomWebView;": [
        "Lcom/mm1373231728/android/CustomWebView;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/mm1373231728/android/CustomWebView;->clearHistory()V",
        "Lcom/mm1373231728/android/CustomWebView;->clearCache()V",
        "Lcom/mm1373231728/android/CustomWebView;->goBack()V",
        "Lcom/mm1373231728/android/CustomWebView;->clearFormData()V",
        "Lcom/mm1373231728/android/CustomWebView;->setWebViewClient()V",
        "Lcom/mm1373231728/android/CustomWebView;->loadUrl()V",
        "Lcom/mm1373231728/android/CustomWebView;->requestFocus()Z",
        "Lcom/mm1373231728/android/CustomWebView;->canGoBack()Z"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->offsetLeftAndRight()V",
        "Landroid/view/View;->setAnimation()V",
        "Landroid/view/View;->setScaleX()V",
        "Landroid/view/View;->inflate()Landroid/view/View;",
        "Landroid/view/View;->layout()V",
        "Landroid/view/View;->postOnAnimationDelayed()V",
        "Landroid/view/View;->getLabelFor()I",
        "Landroid/view/View;->getScrollY()I",
        "Landroid/view/View;->getRotation()F",
        "Landroid/view/View;->setAccessibilityLiveRegion()V",
        "Landroid/view/View;->setLayoutDirection()V",
        "Landroid/view/View;->clearAnimation()V",
        "Landroid/view/View;->saveHierarchyState()V",
        "Landroid/view/View;->getScaleY()F",
        "Landroid/view/View;->findViewById()Landroid/view/View;",
        "Landroid/view/View;->isFocused()Z",
        "Landroid/view/View;->setTag()V",
        "Landroid/view/View;->isSelected()Z",
        "Landroid/view/View;->addFocusables()V",
        "Landroid/view/View;->offsetTopAndBottom()V",
        "Landroid/view/View;->setEnabled()V",
        "Landroid/view/View;->getImportantForAccessibility()I",
        "Landroid/view/View;->canScrollVertically()Z",
        "Landroid/view/View;->isDrawingCacheEnabled()Z",
        "Landroid/view/View;->onDraw()V",
        "Landroid/view/View;->getMeasuredWidth()I",
        "Landroid/view/View;->getTag()Ljava/lang/Object;",
        "Landroid/view/View;->setX()V",
        "Landroid/view/View;->getTranslationX()F",
        "Landroid/view/View;->addTouchables()V",
        "Landroid/view/View;->performAccessibilityAction()Z",
        "Landroid/view/View;->postInvalidate()V",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->resolveSizeAndState()I",
        "Landroid/view/View;->isLongClickable()Z",
        "Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;",
        "Landroid/view/View;->getAnimation()Landroid/view/animation/Animation;",
        "Landroid/view/View;->setRotation()V",
        "Landroid/view/View;->getAccessibilityLiveRegion()I",
        "Landroid/view/View;->setImportantForAccessibility()V",
        "Landroid/view/View;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/view/View;->getId()I",
        "Landroid/view/View;->getMeasuredWidthAndState()I",
        "Landroid/view/View;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/view/View;->getX()F",
        "Landroid/view/View;->getLeft()I",
        "Landroid/view/View;->setTranslationX()V",
        "Landroid/view/View;->getMeasuredHeightAndState()I",
        "Landroid/view/View;->setLayoutParams()V",
        "Landroid/view/View;->isClickable()Z",
        "Landroid/view/View;->getWindowVisibleDisplayFrame()V",
        "Landroid/view/View;->getOverScrollMode()I",
        "Landroid/view/View;->setY()V",
        "Landroid/view/View;->getAlpha()F",
        "Landroid/view/View;->setScaleY()V",
        "Landroid/view/View;->getLayoutDirection()I",
        "Landroid/view/View;->restoreHierarchyState()V",
        "Landroid/view/View;->getTop()I",
        "Landroid/view/View;->getParentForAccessibility()Landroid/view/ViewParent;",
        "Landroid/view/View;->getBottom()I",
        "Landroid/view/View;->onTouchEvent()Z",
        "Landroid/view/View;->setRotationX()V",
        "Landroid/view/View;->getMeasuredHeight()I",
        "Landroid/view/View;->getLocationOnScreen()V",
        "Landroid/view/View;->setLayerPaint()V",
        "Landroid/view/View;->getViewTreeObserver()Landroid/view/ViewTreeObserver;",
        "Landroid/view/View;->getY()F",
        "Landroid/view/View;->hasTransientState()Z",
        "Landroid/view/View;->getResources()Landroid/content/res/Resources;",
        "Landroid/view/View;->invalidate()V",
        "Landroid/view/View;->setRotationY()V",
        "Landroid/view/View;->setVisibility()V",
        "Landroid/view/View;->getRight()I",
        "Landroid/view/View;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/view/View;->willNotDraw()Z",
        "Landroid/view/View;->removeCallbacks()Z",
        "Landroid/view/View;->setLabelFor()V",
        "Landroid/view/View;->getLocalVisibleRect()Z",
        "Landroid/view/View;->getScaleX()F",
        "Landroid/view/View;->getTranslationY()F",
        "Landroid/view/View;->resolveSize()I",
        "Landroid/view/View;->onPopulateAccessibilityEvent()V",
        "Landroid/view/View;->isFocusable()Z",
        "Landroid/view/View;->isShown()Z",
        "Landroid/view/View;->scrollTo()V",
        "Landroid/view/View;->setHasTransientState()V",
        "Landroid/view/View;->setBackgroundDrawable()V",
        "Landroid/view/View;->setBackgroundColor()V",
        "Landroid/view/View;->setTranslationY()V",
        "Landroid/view/View;->measure()V",
        "Landroid/view/View;->postOnAnimation()V",
        "Landroid/view/View;->getMeasuredState()I",
        "Landroid/view/View;->getDrawingCache()Landroid/graphics/Bitmap;",
        "Landroid/view/View;->getRotationX()F",
        "Landroid/view/View;->setOnCreateContextMenuListener()V",
        "Landroid/view/View;->setId()V",
        "Landroid/view/View;->canScrollHorizontally()Z",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->getLayerType()I",
        "Landroid/view/View;->dispatchTouchEvent()Z",
        "Landroid/view/View;->isHorizontalScrollBarEnabled()Z",
        "Landroid/view/View;->getVisibility()I",
        "Landroid/view/View;->getScrollX()I",
        "Landroid/view/View;->postInvalidateOnAnimation()V",
        "Landroid/view/View;->getAccessibilityNodeProvider()Landroid/view/accessibility/AccessibilityNodeProvider;",
        "Landroid/view/View;->setLayerType()V",
        "Landroid/view/View;->requestFocus()Z",
        "Landroid/view/View;->setDrawingCacheEnabled()V",
        "Landroid/view/View;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/View;->setAccessibilityDelegate()V",
        "Landroid/view/View;->isPressed()Z",
        "Landroid/view/View;->getRotationY()F",
        "Landroid/view/View;->onInitializeAccessibilityEvent()V",
        "Landroid/view/View;->setOverScrollMode()V",
        "Landroid/view/View;->isVerticalScrollBarEnabled()Z",
        "Landroid/view/View;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/view/View;->startAnimation()V",
        "Landroid/view/View;->setAlpha()V",
        "Landroid/view/View;->animate()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/View;->isOpaque()Z",
        "Landroid/view/View;->getKeyDispatcherState()Landroid/view/KeyEvent$DispatcherState;",
        "Landroid/view/View;->post()Z",
        "Landroid/view/View;->setOnClickListener()V",
        "Landroid/view/View;->sendAccessibilityEvent()V",
        "Landroid/view/View;->getWindowVisibility()I",
        "Landroid/view/View;->isEnabled()Z",
        "Landroid/view/View;->getContext()Landroid/content/Context;"
    ],
    "Landroid/content/res/Resources$Theme;": [
        "Landroid/content/res/Resources$Theme;->obtainStyledAttributes()Landroid/content/res/TypedArray;"
    ],
    "Landroid/content/res/TypedArray;": [
        "Landroid/content/res/TypedArray;->recycle()V",
        "Landroid/content/res/TypedArray;->hasValue()Z",
        "Landroid/content/res/TypedArray;->peekValue()Landroid/util/TypedValue;",
        "Landroid/content/res/TypedArray;->getBoolean()Z",
        "Landroid/content/res/TypedArray;->getValue()Z",
        "Landroid/content/res/TypedArray;->getResourceId()I",
        "Landroid/content/res/TypedArray;->getDimensionPixelSize()I",
        "Landroid/content/res/TypedArray;->getString()Ljava/lang/String;",
        "Landroid/content/res/TypedArray;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/res/TypedArray;->getColor()I",
        "Landroid/content/res/TypedArray;->getDimension()F",
        "Landroid/content/res/TypedArray;->getInteger()I",
        "Landroid/content/res/TypedArray;->getInt()I",
        "Landroid/content/res/TypedArray;->getFloat()F"
    ],
    "Landroid/widget/LinearLayout$LayoutParams;": [
        "Landroid/widget/LinearLayout$LayoutParams;->setMargins()V"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->setPadding()V",
        "Landroid/widget/ImageButton;->setVisibility()V",
        "Landroid/widget/ImageButton;->setImageResource()V",
        "Landroid/widget/ImageButton;->setLayoutParams()V",
        "Landroid/widget/ImageButton;->setOnClickListener()V",
        "Landroid/widget/ImageButton;->setSelected()V",
        "Landroid/widget/ImageButton;->setBackgroundDrawable()V",
        "Landroid/widget/ImageButton;->setBackgroundResource()V",
        "Landroid/widget/ImageButton;->setBackgroundColor()V"
    ],
    "Landroid/graphics/drawable/GradientDrawable;": [
        "Landroid/graphics/drawable/GradientDrawable;->setStroke()V",
        "Landroid/graphics/drawable/GradientDrawable;->setShape()V",
        "Landroid/graphics/drawable/GradientDrawable;->setCornerRadii()V",
        "Landroid/graphics/drawable/GradientDrawable;->setCornerRadius()V"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setBackgroundDrawable()V",
        "Landroid/view/Window;->setAttributes()V",
        "Landroid/view/Window;->addFlags()V",
        "Landroid/view/Window;->clearFlags()V",
        "Landroid/view/Window;->findViewById()Landroid/view/View;",
        "Landroid/view/Window;->requestFeature()Z",
        "Landroid/view/Window;->setFlags()V",
        "Landroid/view/Window;->getDecorView()Landroid/view/View;",
        "Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;",
        "Landroid/view/Window;->setLayout()V",
        "Landroid/view/Window;->setFormat()V"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setView()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setOnCancelListener()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setIcon()Landroid/app/AlertDialog$Builder;"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->dismiss()V",
        "Landroid/app/AlertDialog;->show()V",
        "Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->vibrate()V"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->putStringArray()V",
        "Landroid/os/Bundle;->getParcelableArray()[Landroid/os/Parcelable;",
        "Landroid/os/Bundle;->putAll()V",
        "Landroid/os/Bundle;->putParcelableArrayList()V",
        "Landroid/os/Bundle;->putParcelableArray()V",
        "Landroid/os/Bundle;->isEmpty()Z",
        "Landroid/os/Bundle;->remove()V",
        "Landroid/os/Bundle;->getSerializable()Ljava/io/Serializable;",
        "Landroid/os/Bundle;->putLong()V",
        "Landroid/os/Bundle;->putBundle()V",
        "Landroid/os/Bundle;->putSparseParcelableArray()V",
        "Landroid/os/Bundle;->putString()V",
        "Landroid/os/Bundle;->getParcelable()Landroid/os/Parcelable;",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->keySet()Ljava/util/Set;",
        "Landroid/os/Bundle;->putParcelable()V",
        "Landroid/os/Bundle;->setClassLoader()V",
        "Landroid/os/Bundle;->getParcelableArrayList()Ljava/util/ArrayList;",
        "Landroid/os/Bundle;->containsKey()Z",
        "Landroid/os/Bundle;->clear()V",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->getFloat()F",
        "Landroid/os/Bundle;->getBoolean()Z",
        "Landroid/os/Bundle;->getLong()J",
        "Landroid/os/Bundle;->get()Ljava/lang/Object;",
        "Landroid/os/Bundle;->getSparseParcelableArray()Landroid/util/SparseArray;",
        "Landroid/os/Bundle;->getByteArray()[B",
        "Landroid/os/Bundle;->getBundle()Landroid/os/Bundle;",
        "Landroid/os/Bundle;->putBoolean()V",
        "Landroid/os/Bundle;->clone()Ljava/lang/Object;"
    ],
    "Landroid/view/ViewGroup;": [
        "Landroid/view/ViewGroup;->getTop()I",
        "Landroid/view/ViewGroup;->setVisibility()V",
        "Landroid/view/ViewGroup;->getContext()Landroid/content/Context;",
        "Landroid/view/ViewGroup;->getChildAt()Landroid/view/View;",
        "Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent()V",
        "Landroid/view/ViewGroup;->getRight()I",
        "Landroid/view/ViewGroup;->getLayoutMode()I",
        "Landroid/view/ViewGroup;->setLayoutMode()V",
        "Landroid/view/ViewGroup;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/view/ViewGroup;->onKeyUp()Z",
        "Landroid/view/ViewGroup;->drawableStateChanged()V",
        "Landroid/view/ViewGroup;->onTouchEvent()Z",
        "Landroid/view/ViewGroup;->post()Z",
        "Landroid/view/ViewGroup;->onSaveInstanceState()Landroid/os/Parcelable;",
        "Landroid/view/ViewGroup;->removeViewAt()V",
        "Landroid/view/ViewGroup;->onRequestSendAccessibilityEvent()Z",
        "Landroid/view/ViewGroup;->isInEditMode()Z",
        "Landroid/view/ViewGroup;->removeView()V",
        "Landroid/view/ViewGroup;->setMotionEventSplittingEnabled()V",
        "Landroid/view/ViewGroup;->onRestoreInstanceState()V",
        "Landroid/view/ViewGroup;->requestChildFocus()V",
        "Landroid/view/ViewGroup;->checkLayoutParams()Z",
        "Landroid/view/ViewGroup;->verifyDrawable()Z",
        "Landroid/view/ViewGroup;->getWidth()I",
        "Landroid/view/ViewGroup;->onDraw()V",
        "Landroid/view/ViewGroup;->getId()I",
        "Landroid/view/ViewGroup;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/ViewGroup;->onInterceptTouchEvent()Z",
        "Landroid/view/ViewGroup;->draw()V",
        "Landroid/view/ViewGroup;->onKeyDown()Z",
        "Landroid/view/ViewGroup;->addView()V",
        "Landroid/view/ViewGroup;->onAttachedToWindow()V",
        "Landroid/view/ViewGroup;->drawChild()Z",
        "Landroid/view/ViewGroup;->onDetachedFromWindow()V",
        "Landroid/view/ViewGroup;->getChildCount()I",
        "Landroid/view/ViewGroup;->dispatchKeyEvent()Z",
        "Landroid/view/ViewGroup;->requestLayout()V",
        "Landroid/view/ViewGroup;->getBottom()I",
        "Landroid/view/ViewGroup;->getLeft()I",
        "Landroid/view/ViewGroup;->onSizeChanged()V"
    ],
    "Ljava/util/UUID;": [
        "Ljava/util/UUID;->randomUUID()Ljava/util/UUID;",
        "Ljava/util/UUID;->getLeastSignificantBits()J",
        "Ljava/util/UUID;->fromString()Ljava/util/UUID;",
        "Ljava/util/UUID;->nameUUIDFromBytes()Ljava/util/UUID;",
        "Ljava/util/UUID;->toString()Ljava/lang/String;",
        "Ljava/util/UUID;->getMostSignificantBits()J"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getNetworkCountryIso()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getPhoneType()I",
        "Landroid/telephony/TelephonyManager;->getSimOperator()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkOperatorName()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getSimState()I",
        "Landroid/telephony/TelephonyManager;->getSimOperatorName()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkType()I",
        "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->requestLocationUpdates()V",
        "Landroid/location/LocationManager;->getAllProviders()Ljava/util/List;",
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getAccuracy()F",
        "Landroid/location/Location;->getProvider()Ljava/lang/String;",
        "Landroid/location/Location;->getTime()J",
        "Landroid/location/Location;->getLatitude()D"
    ],
    "Landroid/location/Criteria;": [
        "Landroid/location/Criteria;->setCostAllowed()V",
        "Landroid/location/Criteria;->setAccuracy()V"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->getTypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->getType()I",
        "Landroid/net/NetworkInfo;->getSubtype()I",
        "Landroid/net/NetworkInfo;->getSubtypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnectedOrConnecting()Z",
        "Landroid/net/NetworkInfo;->isAvailable()Z"
    ],
    "Landroid/content/pm/PackageManager$NameNotFoundException;": [
        "Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V"
    ],
    "Landroid/accounts/AccountManager;": [
        "Landroid/accounts/AccountManager;->get()Landroid/accounts/AccountManager;",
        "Landroid/accounts/AccountManager;->getAccountsByType()[Landroid/accounts/Account;",
        "Landroid/accounts/AccountManager;->invalidateAuthToken()V",
        "Landroid/accounts/AccountManager;->getAuthToken()Landroid/accounts/AccountManagerFuture;"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;",
        "Landroid/os/PowerManager;->isScreenOn()Z"
    ],
    "Landroid/app/KeyguardManager;": [
        "Landroid/app/KeyguardManager;->inKeyguardRestrictedInputMode()Z"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningTasks()Ljava/util/List;",
        "Landroid/app/ActivityManager;->getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->getClassName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->toString()Ljava/lang/String;",
        "Ljava/util/Locale;->equals()Z",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->getDisplayLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getDisplayName()Ljava/lang/String;"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->isWifiEnabled()Z",
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;",
        "Landroid/net/wifi/WifiManager;->createMulticastLock()Landroid/net/wifi/WifiManager$MulticastLock;",
        "Landroid/net/wifi/WifiManager;->getDhcpInfo()Landroid/net/DhcpInfo;",
        "Landroid/net/wifi/WifiManager;->setWifiEnabled()Z"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;",
        "Landroid/net/wifi/WifiInfo;->getIpAddress()I",
        "Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->reset()V",
        "Ljava/security/MessageDigest;->digest()[B",
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->freeMemory()J",
        "Ljava/lang/Runtime;->exec()Ljava/lang/Process;",
        "Ljava/lang/Runtime;->maxMemory()J",
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;",
        "Ljava/lang/Runtime;->totalMemory()J"
    ],
    "Ljava/lang/Process;": [
        "Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->split()[Ljava/lang/String;",
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;",
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->group()Ljava/lang/String;",
        "Ljava/util/regex/Matcher;->find()Z",
        "Ljava/util/regex/Matcher;->appendReplacement()Ljava/util/regex/Matcher;",
        "Ljava/util/regex/Matcher;->appendTail()Ljava/lang/StringBuffer;",
        "Ljava/util/regex/Matcher;->matches()Z"
    ],
    "Landroid/text/TextUtils;": [
        "Landroid/text/TextUtils;->writeToParcel()V",
        "Landroid/text/TextUtils;->isEmpty()Z",
        "Landroid/text/TextUtils;->join()Ljava/lang/String;",
        "Landroid/text/TextUtils;->indexOf()I",
        "Landroid/text/TextUtils;->split()[Ljava/lang/String;",
        "Landroid/text/TextUtils;->isDigitsOnly()Z"
    ],
    "Lcom/mm1373231728/android/ci;": [
        "Lcom/mm1373231728/android/ci;->a()Ljava/util/UUID;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getHeight()I",
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getSize()V",
        "Landroid/view/Display;->getOrientation()I",
        "Landroid/view/Display;->getMetrics()V"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextInt()I",
        "Ljava/util/Random;->nextBoolean()Z",
        "Ljava/util/Random;->nextFloat()F"
    ],
    "Landroid/accounts/AccountManagerFuture;": [
        "Landroid/accounts/AccountManagerFuture;->getResult()Ljava/lang/Object;"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setTypeface()V",
        "Landroid/widget/TextView;->getCompoundDrawablesRelative()[Landroid/graphics/drawable/Drawable;",
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->setId()V",
        "Landroid/widget/TextView;->setBackgroundColor()V",
        "Landroid/widget/TextView;->setShadowLayer()V",
        "Landroid/widget/TextView;->layout()V",
        "Landroid/widget/TextView;->setTextAppearance()V",
        "Landroid/widget/TextView;->getTextSize()F",
        "Landroid/widget/TextView;->getText()Ljava/lang/CharSequence;",
        "Landroid/widget/TextView;->setEllipsize()V",
        "Landroid/widget/TextView;->setPadding()V",
        "Landroid/widget/TextView;->getTextColors()Landroid/content/res/ColorStateList;",
        "Landroid/widget/TextView;->setGravity()V",
        "Landroid/widget/TextView;->setMovementMethod()V",
        "Landroid/widget/TextView;->setTransformationMethod()V",
        "Landroid/widget/TextView;->setLayoutParams()V",
        "Landroid/widget/TextView;->setVisibility()V",
        "Landroid/widget/TextView;->getContext()Landroid/content/Context;",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setSingleLine()V",
        "Landroid/widget/TextView;->setCompoundDrawablesWithIntrinsicBounds()V",
        "Landroid/widget/TextView;->setBackgroundResource()V",
        "Landroid/widget/TextView;->measure()V",
        "Landroid/widget/TextView;->getMeasuredHeight()I",
        "Landroid/widget/TextView;->setOnClickListener()V",
        "Landroid/widget/TextView;->getMeasuredWidth()I",
        "Landroid/widget/TextView;->getBaseline()I",
        "Landroid/widget/TextView;->setFocusable()V",
        "Landroid/widget/TextView;->setLinksClickable()V",
        "Landroid/widget/TextView;->getRight()I",
        "Landroid/widget/TextView;->getCompoundDrawables()[Landroid/graphics/drawable/Drawable;",
        "Landroid/widget/TextView;->getLeft()I",
        "Landroid/widget/TextView;->setCompoundDrawablesRelativeWithIntrinsicBounds()V",
        "Landroid/widget/TextView;->setTextSize()V"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->subSequence()Ljava/lang/CharSequence;",
        "Ljava/lang/CharSequence;->charAt()C",
        "Ljava/lang/CharSequence;->toString()Ljava/lang/String;",
        "Ljava/lang/CharSequence;->length()I"
    ],
    "Landroid/content/res/ColorStateList;": [
        "Landroid/content/res/ColorStateList;->getDefaultColor()I"
    ],
    "Lcom/mm1373231728/android/ae;": [
        "Lcom/mm1373231728/android/ae;->stopFlipping()V"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->release()V",
        "Landroid/os/PowerManager$WakeLock;->isHeld()Z",
        "Landroid/os/PowerManager$WakeLock;->acquire()V",
        "Landroid/os/PowerManager$WakeLock;->setReferenceCounted()V"
    ],
    "Landroid/app/IntentService;": [
        "Landroid/app/IntentService;->onStartCommand()I"
    ],
    "Lcom/google/android/gms/ads/AdSize;": [
        "Lcom/google/android/gms/ads/AdSize;->getHeight()I",
        "Lcom/google/android/gms/ads/AdSize;->equals()Z",
        "Lcom/google/android/gms/ads/AdSize;->getWidth()I",
        "Lcom/google/android/gms/ads/AdSize;->getWidthInPixels()I",
        "Lcom/google/android/gms/ads/AdSize;->hashCode()I",
        "Lcom/google/android/gms/ads/AdSize;->toString()Ljava/lang/String;",
        "Lcom/google/android/gms/ads/AdSize;->getHeightInPixels()I",
        "Lcom/google/android/gms/ads/AdSize;->isFullWidth()Z",
        "Lcom/google/android/gms/ads/AdSize;->isAutoHeight()Z"
    ],
    "Lcom/google/ads/AdSize;": [
        "Lcom/google/ads/AdSize;->getWidth()I",
        "Lcom/google/ads/AdSize;->getWidthInPixels()I",
        "Lcom/google/ads/AdSize;->isSizeAppropriate()Z",
        "Lcom/google/ads/AdSize;->getHeightInPixels()I",
        "Lcom/google/ads/AdSize;->getHeight()I"
    ],
    "Lcom/google/ads/mediation/MediationServerParameters$Parameter;": [
        "Lcom/google/ads/mediation/MediationServerParameters$Parameter;->required()Z",
        "Lcom/google/ads/mediation/MediationServerParameters$Parameter;->name()Ljava/lang/String;"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->clear()V",
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->containsKey()Z",
        "Ljava/util/Map;->size()I"
    ],
    "Lcom/google/android/gms/internal/cs;": [
        "Lcom/google/android/gms/internal/cs;->a()V",
        "Lcom/google/android/gms/internal/cs;->a()Z"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->size()I",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->isEmpty()Z",
        "Ljava/util/Set;->containsAll()Z",
        "Ljava/util/Set;->contains()Z",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Collection;->size()I",
        "Ljava/util/Collection;->contains()Z"
    ],
    "Lcom/google/ads/mediation/MediationServerParameters;": [
        "Lcom/google/ads/mediation/MediationServerParameters;->load()V",
        "Lcom/google/ads/mediation/MediationServerParameters;->a()V"
    ],
    "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;": [
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->getWebViewWidth()I",
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->shouldStopAdCheck()Z",
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->requestBannerAd()V",
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->sendAdNotReceivedUpdate()V",
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->startCheckingForAd()V",
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->getWebViewHeight()I",
        "Lcom/google/ads/mediation/jsadapter/JavascriptAdapter;->getWebView()Landroid/webkit/WebView;"
    ],
    "Lcom/google/ads/mediation/MediationBannerListener;": [
        "Lcom/google/ads/mediation/MediationBannerListener;->onReceivedAd()V",
        "Lcom/google/ads/mediation/MediationBannerListener;->onFailedToReceiveAd()V"
    ],
    "Lcom/google/ads/mediation/jsadapter/AdViewCheckTask;": [
        "Lcom/google/ads/mediation/jsadapter/AdViewCheckTask;->start()V"
    ],
    "Lcom/google/ads/mediation/jsadapter/BannerWebViewClient;": [
        "Lcom/google/ads/mediation/jsadapter/BannerWebViewClient;->a()Z",
        "Lcom/google/ads/mediation/jsadapter/BannerWebViewClient;->a()Ljava/lang/String;",
        "Lcom/google/ads/mediation/jsadapter/BannerWebViewClient;->equals()Z"
    ],
    "Ljava/net/URI;": [
        "Ljava/net/URI;->getHost()Ljava/lang/String;",
        "Ljava/net/URI;->getPath()Ljava/lang/String;",
        "Ljava/net/URI;->getScheme()Ljava/lang/String;"
    ],
    "Ljava/net/URISyntaxException;": [
        "Ljava/net/URISyntaxException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/IndexOutOfBoundsException;": [
        "Ljava/lang/IndexOutOfBoundsException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/ads/mediation/jsadapter/AdViewCheckTask$a;": [
        "Lcom/google/ads/mediation/jsadapter/AdViewCheckTask$a;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventAdapter;": [
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->requestInterstitialAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->a()Ljava/lang/Object;",
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->requestBannerAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->a()V"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventBanner;": [
        "Lcom/google/ads/mediation/customevent/CustomEventBanner;->requestBannerAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventBanner;->destroy()V"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;": [
        "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;->requestInterstitialAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;->showInterstitial()V",
        "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;->destroy()V"
    ],
    "Lcom/google/android/gms/ads/mediation/customevent/CustomEventExtras;": [
        "Lcom/google/android/gms/ads/mediation/customevent/CustomEventExtras;->getExtra()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/mediation/MediationInterstitialListener;": [
        "Lcom/google/ads/mediation/MediationInterstitialListener;->onFailedToReceiveAd()V"
    ],
    "Lcom/google/ads/mediation/MediationAdRequest;": [
        "Lcom/google/ads/mediation/MediationAdRequest;->getBirthday()Ljava/util/Date;",
        "Lcom/google/ads/mediation/MediationAdRequest;->getGender()Lcom/google/ads/AdRequest$Gender;",
        "Lcom/google/ads/mediation/MediationAdRequest;->isTesting()Z",
        "Lcom/google/ads/mediation/MediationAdRequest;->getKeywords()Ljava/util/Set;"
    ],
    "Lcom/google/android/gms/ads/AdRequest$Builder;": [
        "Lcom/google/android/gms/ads/AdRequest$Builder;->tagForChildDirectedTreatment()Lcom/google/android/gms/ads/AdRequest$Builder;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->setGender()Lcom/google/android/gms/ads/AdRequest$Builder;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->addNetworkExtras()Lcom/google/android/gms/ads/AdRequest$Builder;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->setBirthday()Lcom/google/android/gms/ads/AdRequest$Builder;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->addTestDevice()Lcom/google/android/gms/ads/AdRequest$Builder;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->addKeyword()Lcom/google/android/gms/ads/AdRequest$Builder;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->build()Lcom/google/android/gms/ads/AdRequest;",
        "Lcom/google/android/gms/ads/AdRequest$Builder;->a()Lcom/google/android/gms/internal/af$a;"
    ],
    "Lcom/google/android/gms/internal/bg;": [
        "Lcom/google/android/gms/internal/bg;->a()Lcom/google/ads/AdSize;",
        "Lcom/google/android/gms/internal/bg;->a()I",
        "Lcom/google/android/gms/internal/bg;->a()Lcom/google/ads/AdRequest$Gender;",
        "Lcom/google/android/gms/internal/bg;->a()Lcom/google/ads/mediation/MediationAdRequest;"
    ],
    "Lcom/google/android/gms/internal/cr;": [
        "Lcom/google/android/gms/internal/cr;->ax()Z",
        "Lcom/google/android/gms/internal/cr;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/cr;->a()V",
        "Lcom/google/android/gms/internal/cr;->aw()Z",
        "Lcom/google/android/gms/internal/cr;->a()I"
    ],
    "Lcom/google/android/gms/ads/mediation/admob/AdMobExtras;": [
        "Lcom/google/android/gms/ads/mediation/admob/AdMobExtras;->getExtras()Landroid/os/Bundle;"
    ],
    "Lcom/google/android/gms/ads/AdView;": [
        "Lcom/google/android/gms/ads/AdView;->setAdUnitId()V",
        "Lcom/google/android/gms/ads/AdView;->setAdSize()V",
        "Lcom/google/android/gms/ads/AdView;->getSuggestedMinimumWidth()I",
        "Lcom/google/android/gms/ads/AdView;->getSuggestedMinimumHeight()I",
        "Lcom/google/android/gms/ads/AdView;->getAdSize()Lcom/google/android/gms/ads/AdSize;",
        "Lcom/google/android/gms/ads/AdView;->destroy()V",
        "Lcom/google/android/gms/ads/AdView;->loadAd()V",
        "Lcom/google/android/gms/ads/AdView;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/ads/AdView;->measureChild()V",
        "Lcom/google/android/gms/ads/AdView;->getChildAt()Landroid/view/View;",
        "Lcom/google/android/gms/ads/AdView;->setAdListener()V",
        "Lcom/google/android/gms/ads/AdView;->setMeasuredDimension()V"
    ],
    "Lcom/google/ads/mediation/admob/AdMobAdapter;": [
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->requestInterstitialAd()V",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->requestBannerAd()V",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->a()Lcom/google/android/gms/ads/AdRequest;"
    ],
    "Lcom/google/android/gms/ads/InterstitialAd;": [
        "Lcom/google/android/gms/ads/InterstitialAd;->setAdListener()V",
        "Lcom/google/android/gms/ads/InterstitialAd;->loadAd()V",
        "Lcom/google/android/gms/ads/InterstitialAd;->show()V",
        "Lcom/google/android/gms/ads/InterstitialAd;->setAdUnitId()V"
    ],
    "Lcom/google/android/gms/internal/ds;": [
        "Lcom/google/android/gms/internal/ds;->equal()Z",
        "Lcom/google/android/gms/internal/ds;->hashCode()I",
        "Lcom/google/android/gms/internal/ds;->a()Lcom/google/android/gms/internal/ds$a;"
    ],
    "Lcom/google/android/gms/internal/ds$a;": [
        "Lcom/google/android/gms/internal/ds$a;->a()Lcom/google/android/gms/internal/ds$a;",
        "Lcom/google/android/gms/internal/ds$a;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/gu;": [
        "Lcom/google/android/gms/internal/gu;->ai()Lcom/google/android/gms/internal/gs;",
        "Lcom/google/android/gms/internal/gu;->aQ()[Lcom/google/android/gms/internal/gs;",
        "Lcom/google/android/gms/internal/gu;->a()V"
    ],
    "Lcom/google/android/gms/internal/j;": [
        "Lcom/google/android/gms/internal/j;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/j;->a()[B"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->asFloatBuffer()Ljava/nio/FloatBuffer;",
        "Ljava/nio/ByteBuffer;->put()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->allocateDirect()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->putFloat()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->getShort()S",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->slice()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->capacity()I",
        "Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->wrap()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->limit()I",
        "Ljava/nio/ByteBuffer;->allocate()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->putInt()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->get()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->getInt()I",
        "Ljava/nio/ByteBuffer;->putShort()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->array()[B",
        "Ljava/nio/ByteBuffer;->get()B"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->doFinal()[B",
        "Ljavax/crypto/Cipher;->getBlockSize()I",
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;"
    ],
    "Lcom/google/android/gms/internal/l;": [
        "Lcom/google/android/gms/internal/l;->a()[B",
        "Lcom/google/android/gms/internal/l;->a()V"
    ],
    "Lcom/google/android/gms/internal/bo;": [
        "Lcom/google/android/gms/internal/bo;->addView()V",
        "Lcom/google/android/gms/internal/bo;->setLayoutParams()V",
        "Lcom/google/android/gms/internal/bo;->setVisibility()V",
        "Lcom/google/android/gms/internal/bo;->pause()V",
        "Lcom/google/android/gms/internal/bo;->destroy()V",
        "Lcom/google/android/gms/internal/bo;->play()V",
        "Lcom/google/android/gms/internal/bo;->seekTo()V",
        "Lcom/google/android/gms/internal/bo;->a()V",
        "Lcom/google/android/gms/internal/bo;->af()V"
    ],
    "Lcom/google/android/gms/internal/bo$a;": [
        "Lcom/google/android/gms/internal/bo$a;->cancel()V",
        "Lcom/google/android/gms/internal/bo$a;->ah()V"
    ],
    "Landroid/widget/VideoView;": [
        "Landroid/widget/VideoView;->stopPlayback()V",
        "Landroid/widget/VideoView;->start()V",
        "Landroid/widget/VideoView;->setOnTouchListener()V",
        "Landroid/widget/VideoView;->getCurrentPosition()I",
        "Landroid/widget/VideoView;->setVideoPath()V",
        "Landroid/widget/VideoView;->setOnCompletionListener()V",
        "Landroid/widget/VideoView;->dispatchTouchEvent()Z",
        "Landroid/widget/VideoView;->isPlaying()Z",
        "Landroid/widget/VideoView;->setOnErrorListener()V",
        "Landroid/widget/VideoView;->requestFocus()Z",
        "Landroid/widget/VideoView;->getDuration()I",
        "Landroid/widget/VideoView;->setMediaController()V",
        "Landroid/widget/VideoView;->setVideoURI()V",
        "Landroid/widget/VideoView;->seekTo()V",
        "Landroid/widget/VideoView;->setKeepScreenOn()V",
        "Landroid/widget/VideoView;->setOnPreparedListener()V",
        "Landroid/widget/VideoView;->pause()V"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->size()I",
        "Ljava/util/HashMap;->toString()Ljava/lang/String;",
        "Ljava/util/HashMap;->clone()Ljava/lang/Object;",
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->isEmpty()Z",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->clear()V",
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->values()Ljava/util/Collection;",
        "Ljava/util/HashMap;->putAll()V"
    ],
    "Lcom/google/android/gms/internal/cv;": [
        "Lcom/google/android/gms/internal/cv;->setMeasuredDimension()V",
        "Lcom/google/android/gms/internal/cv;->ay()V",
        "Lcom/google/android/gms/internal/cv;->willNotDraw()Z",
        "Lcom/google/android/gms/internal/cv;->aH()V",
        "Lcom/google/android/gms/internal/cv;->a()Lcom/google/android/gms/internal/x;",
        "Lcom/google/android/gms/internal/cv;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/google/android/gms/internal/cv;->stopLoading()V",
        "Lcom/google/android/gms/internal/cv;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/internal/cv;->destroy()V",
        "Lcom/google/android/gms/internal/cv;->loadUrl()V",
        "Lcom/google/android/gms/internal/cv;->setContext()V",
        "Lcom/google/android/gms/internal/cv;->aF()V",
        "Lcom/google/android/gms/internal/cv;->getVisibility()I",
        "Lcom/google/android/gms/internal/cv;->setWebChromeClient()V",
        "Lcom/google/android/gms/internal/cv;->aB()Lcom/google/android/gms/internal/cw;",
        "Lcom/google/android/gms/internal/cv;->requestLayout()V",
        "Lcom/google/android/gms/internal/cv;->setWebViewClient()V",
        "Lcom/google/android/gms/internal/cv;->setBackgroundColor()V",
        "Lcom/google/android/gms/internal/cv;->loadDataWithBaseURL()V",
        "Lcom/google/android/gms/internal/cv;->a()Lcom/google/android/gms/internal/cv;",
        "Lcom/google/android/gms/internal/cv;->aA()Lcom/google/android/gms/internal/bk;",
        "Lcom/google/android/gms/internal/cv;->aE()Z",
        "Lcom/google/android/gms/internal/cv;->setDownloadListener()V",
        "Lcom/google/android/gms/internal/cv;->isInEditMode()Z",
        "Lcom/google/android/gms/internal/cv;->a()V",
        "Lcom/google/android/gms/internal/cv;->aD()Lcom/google/android/gms/internal/ct;",
        "Lcom/google/android/gms/internal/cv;->aG()V",
        "Lcom/google/android/gms/internal/cv;->setVisibility()V",
        "Lcom/google/android/gms/internal/cv;->az()V",
        "Lcom/google/android/gms/internal/cv;->aC()Lcom/google/android/gms/internal/h;"
    ],
    "Landroid/widget/MediaController;": [
        "Landroid/widget/MediaController;->hide()V"
    ],
    "Lcom/google/android/gms/internal/do;": [
        "Lcom/google/android/gms/internal/do;->a()Z",
        "Lcom/google/android/gms/internal/do;->a()V"
    ],
    "Lcom/google/android/gms/internal/fm;": [
        "Lcom/google/android/gms/internal/fm;->requestActivityUpdates()V",
        "Lcom/google/android/gms/internal/fm;->requestLocationUpdates()V",
        "Lcom/google/android/gms/internal/fm;->removeLocationUpdates()V",
        "Lcom/google/android/gms/internal/fm;->bB()V",
        "Lcom/google/android/gms/internal/fm;->a()Lcom/google/android/gms/internal/fk;",
        "Lcom/google/android/gms/internal/fm;->isConnected()Z",
        "Lcom/google/android/gms/internal/fm;->isConnectionFailedListenerRegistered()Z",
        "Lcom/google/android/gms/internal/fm;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/fm;->connect()V",
        "Lcom/google/android/gms/internal/fm;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/fm;->disconnect()V",
        "Lcom/google/android/gms/internal/fm;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/fm;->isConnecting()Z",
        "Lcom/google/android/gms/internal/fm;->addGeofences()V",
        "Lcom/google/android/gms/internal/fm;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/fm;->setMockMode()V",
        "Lcom/google/android/gms/internal/fm;->getLastLocation()Landroid/location/Location;",
        "Lcom/google/android/gms/internal/fm;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/internal/fm;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/fm;->removeActivityUpdates()V",
        "Lcom/google/android/gms/internal/fm;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/fm;->setMockLocation()V",
        "Lcom/google/android/gms/internal/fm;->removeGeofences()V"
    ],
    "Lcom/google/android/gms/internal/fk$a;": [
        "Lcom/google/android/gms/internal/fk$a;->a()Lcom/google/android/gms/internal/fk;"
    ],
    "Lcom/google/android/gms/internal/dq;": [
        "Lcom/google/android/gms/internal/dq;->a()V"
    ],
    "Lcom/google/android/gms/internal/du;": [
        "Lcom/google/android/gms/internal/du;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/du;->a()V",
        "Lcom/google/android/gms/internal/du;->a()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/fk;": [
        "Lcom/google/android/gms/internal/fk;->dp()Landroid/location/Location;",
        "Lcom/google/android/gms/internal/fk;->a()V",
        "Lcom/google/android/gms/internal/fk;->removeActivityUpdates()V",
        "Lcom/google/android/gms/internal/fk;->setMockLocation()V",
        "Lcom/google/android/gms/internal/fk;->setMockMode()V"
    ],
    "Lcom/google/android/gms/internal/fl;": [
        "Lcom/google/android/gms/internal/fl;->getLastLocation()Landroid/location/Location;",
        "Lcom/google/android/gms/internal/fl;->removeAllListeners()V",
        "Lcom/google/android/gms/internal/fl;->removeLocationUpdates()V",
        "Lcom/google/android/gms/internal/fl;->setMockLocation()V",
        "Lcom/google/android/gms/internal/fl;->dq()V",
        "Lcom/google/android/gms/internal/fl;->requestLocationUpdates()V",
        "Lcom/google/android/gms/internal/fl;->setMockMode()V"
    ],
    "Lcom/google/android/gms/internal/dk;": [
        "Lcom/google/android/gms/internal/dk;->isConnected()Z",
        "Lcom/google/android/gms/internal/dk;->a()V",
        "Lcom/google/android/gms/internal/dk;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/dk;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/dk;->bB()V",
        "Lcom/google/android/gms/internal/dk;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/dk;->am()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/dk;->connect()V",
        "Lcom/google/android/gms/internal/dk;->disconnect()V"
    ],
    "Lcom/google/android/gms/internal/cn;": [
        "Lcom/google/android/gms/internal/cn;->a()Lorg/json/JSONArray;",
        "Lcom/google/android/gms/internal/cn;->a()Z",
        "Lcom/google/android/gms/internal/cn;->a()Lorg/json/JSONObject;",
        "Lcom/google/android/gms/internal/cn;->as()Z",
        "Lcom/google/android/gms/internal/cn;->a()V",
        "Lcom/google/android/gms/internal/cn;->au()I",
        "Lcom/google/android/gms/internal/cn;->at()I",
        "Lcom/google/android/gms/internal/cn;->a()Ljava/lang/String;"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->printStackTrace()V",
        "Ljava/io/IOException;->toString()Ljava/lang/String;",
        "Ljava/io/IOException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/dl$b;": [
        "Lcom/google/android/gms/internal/dl$b;->bb()Z",
        "Lcom/google/android/gms/internal/dl$b;->bc()Landroid/os/Bundle;",
        "Lcom/google/android/gms/internal/dl$b;->isConnected()Z"
    ],
    "Lcom/google/android/gms/common/GooglePlayServicesClient$OnConnectionFailedListener;": [
        "Lcom/google/android/gms/common/GooglePlayServicesClient$OnConnectionFailedListener;->onConnectionFailed()V"
    ],
    "Lcom/google/android/gms/common/GooglePlayServicesClient$ConnectionCallbacks;": [
        "Lcom/google/android/gms/common/GooglePlayServicesClient$ConnectionCallbacks;->onConnected()V",
        "Lcom/google/android/gms/common/GooglePlayServicesClient$ConnectionCallbacks;->onDisconnected()V"
    ],
    "Lcom/google/android/gms/internal/dl;": [
        "Lcom/google/android/gms/internal/dl;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/dl;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/dl;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/dl;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/dl;->bG()V",
        "Lcom/google/android/gms/internal/dl;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/dl;->a()V",
        "Lcom/google/android/gms/internal/dl;->isConnectionFailedListenerRegistered()Z"
    ],
    "Lcom/google/android/gms/internal/hr;": [
        "Lcom/google/android/gms/internal/hr;->bw()I",
        "Lcom/google/android/gms/internal/hr;->a()I",
        "Lcom/google/android/gms/internal/hr;->bx()V",
        "Lcom/google/android/gms/internal/hr;->bv()V",
        "Lcom/google/android/gms/internal/hr;->by()I",
        "Lcom/google/android/gms/internal/hr;->fJ()I",
        "Lcom/google/android/gms/internal/hr;->fK()V",
        "Lcom/google/android/gms/internal/hr;->a()V",
        "Lcom/google/android/gms/internal/hr;->am()V",
        "Lcom/google/android/gms/internal/hr;->a()J",
        "Lcom/google/android/gms/internal/hr;->bt()V",
        "Lcom/google/android/gms/internal/hr;->a()Lcom/google/android/gms/internal/hr;",
        "Lcom/google/android/gms/internal/hr;->an()I",
        "Lcom/google/android/gms/internal/hr;->bu()I"
    ],
    "Lcom/google/android/gms/internal/hv;": [
        "Lcom/google/android/gms/internal/hv;->a()I",
        "Lcom/google/android/gms/internal/hv;->bz()I",
        "Lcom/google/android/gms/internal/hv;->a()Z",
        "Lcom/google/android/gms/internal/hv;->bA()I"
    ],
    "Lcom/google/android/gms/internal/ap;": [
        "Lcom/google/android/gms/internal/ap;->a()I"
    ],
    "Lcom/google/android/gms/internal/bk;": [
        "Lcom/google/android/gms/internal/bk;->a()Landroid/widget/RelativeLayout$LayoutParams;",
        "Lcom/google/android/gms/internal/bk;->setRequestedOrientation()V",
        "Lcom/google/android/gms/internal/bk;->a()Lcom/google/android/gms/internal/bo;",
        "Lcom/google/android/gms/internal/bk;->close()V",
        "Lcom/google/android/gms/internal/bk;->a()V"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->toString()Ljava/lang/String;",
        "Ljava/lang/Float;->parseFloat()F",
        "Ljava/lang/Float;->floatToIntBits()I",
        "Ljava/lang/Float;->intBitsToFloat()F",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;"
    ],
    "Lcom/google/android/gms/common/internal/safeparcel/b;": [
        "Lcom/google/android/gms/common/internal/safeparcel/b;->a()I",
        "Lcom/google/android/gms/common/internal/safeparcel/b;->a()V"
    ],
    "Lcom/google/android/gms/internal/dh$a;": [
        "Lcom/google/android/gms/internal/dh$a;->bu()Ljava/util/List;",
        "Lcom/google/android/gms/internal/dh$a;->getAccountName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/dh$a;->bw()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/dh$a;->getVersionCode()I",
        "Lcom/google/android/gms/internal/dh$a;->bt()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/dh$a;->bv()I"
    ],
    "Lcom/google/android/gms/internal/dt;": [
        "Lcom/google/android/gms/internal/dt;->a()[Lcom/google/android/gms/internal/dh$a;",
        "Lcom/google/android/gms/internal/dt;->a()Lcom/google/android/gms/internal/dh$a;"
    ],
    "Lcom/google/android/gms/common/internal/safeparcel/a;": [
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[Ljava/math/BigDecimal;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Ljava/math/BigInteger;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()F",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()D",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[Landroid/os/Parcel;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()V",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Ljava/math/BigDecimal;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()B",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[B",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[Ljava/lang/String;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Landroid/os/Parcel;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Ljava/lang/Boolean;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Landroid/os/Bundle;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[Z",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[I",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[Ljava/lang/Object;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[D",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Landroid/os/IBinder;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()J",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[Ljava/math/BigInteger;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Landroid/os/Parcelable;",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[F",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()I",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()S",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()Z",
        "Lcom/google/android/gms/common/internal/safeparcel/a;->a()[J"
    ],
    "Lcom/google/android/gms/internal/ha$g;": [
        "Lcom/google/android/gms/internal/ha$g;->isPrimary()Z",
        "Lcom/google/android/gms/internal/ha$g;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$g;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$g;->getValue()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/hj;": [
        "Lcom/google/android/gms/internal/hj;->bb()[Lcom/google/android/gms/internal/ha$g;",
        "Lcom/google/android/gms/internal/hj;->at()Lcom/google/android/gms/internal/ha$g;"
    ],
    "Lcom/google/android/gms/internal/gh;": [
        "Lcom/google/android/gms/internal/gh;->ah()Lcom/google/android/gms/internal/gg;",
        "Lcom/google/android/gms/internal/gh;->a()V",
        "Lcom/google/android/gms/internal/gh;->aN()[Lcom/google/android/gms/internal/gg;"
    ],
    "Lcom/google/android/gms/internal/x;": [
        "Lcom/google/android/gms/internal/x;->a()I",
        "Lcom/google/android/gms/internal/x;->a()Lcom/google/android/gms/ads/AdSize;"
    ],
    "Lcom/google/android/gms/ads/a;": [
        "Lcom/google/android/gms/ads/a;->a()Lcom/google/android/gms/ads/AdSize;"
    ],
    "Lcom/google/android/gms/internal/y;": [
        "Lcom/google/android/gms/internal/y;->a()V",
        "Lcom/google/android/gms/internal/y;->a()Lcom/google/android/gms/internal/x;",
        "Lcom/google/android/gms/internal/y;->a()[Lcom/google/android/gms/internal/x;"
    ],
    "Lcom/google/android/gms/internal/ah;": [
        "Lcom/google/android/gms/internal/ah;->getAppEventListener()Lcom/google/android/gms/ads/doubleclick/AppEventListener;",
        "Lcom/google/android/gms/internal/ah;->setAdUnitId()V",
        "Lcom/google/android/gms/internal/ah;->show()V",
        "Lcom/google/android/gms/internal/ah;->setAdListener()V",
        "Lcom/google/android/gms/internal/ah;->isLoaded()Z",
        "Lcom/google/android/gms/internal/ah;->setAppEventListener()V",
        "Lcom/google/android/gms/internal/ah;->getAdUnitId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ah;->getAdListener()Lcom/google/android/gms/ads/AdListener;",
        "Lcom/google/android/gms/internal/ah;->a()V"
    ],
    "Lcom/google/android/gms/internal/u;": [
        "Lcom/google/android/gms/internal/u;->a()Lcom/google/android/gms/internal/ac;",
        "Lcom/google/android/gms/internal/u;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/u;->a()Lcom/google/android/gms/internal/ad;"
    ],
    "Lcom/google/android/gms/internal/ac;": [
        "Lcom/google/android/gms/internal/ac;->isReady()Z",
        "Lcom/google/android/gms/internal/ac;->showInterstitial()V",
        "Lcom/google/android/gms/internal/ac;->a()Lcom/google/android/gms/internal/x;",
        "Lcom/google/android/gms/internal/ac;->a()V",
        "Lcom/google/android/gms/internal/ac;->a()Z",
        "Lcom/google/android/gms/internal/ac;->destroy()V",
        "Lcom/google/android/gms/internal/ac;->pause()V",
        "Lcom/google/android/gms/internal/ac;->a()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/internal/ac;->resume()V"
    ],
    "Lcom/google/android/gms/internal/af;": [
        "Lcom/google/android/gms/internal/af;->getNetworkExtras()Lcom/google/android/gms/ads/mediation/NetworkExtras;",
        "Lcom/google/android/gms/internal/af;->a()I",
        "Lcom/google/android/gms/internal/af;->getGender()I",
        "Lcom/google/android/gms/internal/af;->isTestDevice()Z",
        "Lcom/google/android/gms/internal/af;->getBirthday()Ljava/util/Date;",
        "Lcom/google/android/gms/internal/af;->getManualImpressionsEnabled()Z",
        "Lcom/google/android/gms/internal/af;->getPublisherProvidedId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/af;->getKeywords()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/af;->a()Ljava/util/Map;",
        "Lcom/google/android/gms/internal/af;->a()Lcom/google/android/gms/ads/search/SearchAdRequest;",
        "Lcom/google/android/gms/internal/af;->getLocation()Landroid/location/Location;"
    ],
    "Lcom/google/android/gms/internal/ba;": [
        "Lcom/google/android/gms/internal/ba;->a()V",
        "Lcom/google/android/gms/internal/ba;->a()Lcom/google/android/gms/internal/bc;"
    ],
    "Lcom/google/android/gms/location/LocationRequest;": [
        "Lcom/google/android/gms/location/LocationRequest;->aB()V",
        "Lcom/google/android/gms/location/LocationRequest;->aC()Ljava/lang/String;",
        "Lcom/google/android/gms/location/LocationRequest;->a()V",
        "Lcom/google/android/gms/location/LocationRequest;->getVersionCode()I",
        "Lcom/google/android/gms/location/LocationRequest;->equals()Z"
    ],
    "Lcom/google/android/gms/internal/fs;": [
        "Lcom/google/android/gms/internal/fs;->dx()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fs;->dz()Z",
        "Lcom/google/android/gms/internal/fs;->dw()I",
        "Lcom/google/android/gms/internal/fs;->dy()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fs;->equals()Z"
    ],
    "Lcom/google/android/gms/internal/fv;": [
        "Lcom/google/android/gms/internal/fv;->ac()Lcom/google/android/gms/internal/fu;",
        "Lcom/google/android/gms/internal/fv;->aI()[Lcom/google/android/gms/internal/fu;",
        "Lcom/google/android/gms/internal/fv;->a()V"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->getStreamVolume()I",
        "Landroid/media/AudioManager;->abandonAudioFocus()I",
        "Landroid/media/AudioManager;->requestAudioFocus()I",
        "Landroid/media/AudioManager;->isMusicActive()Z",
        "Landroid/media/AudioManager;->unregisterRemoteControlClient()V",
        "Landroid/media/AudioManager;->registerRemoteControlClient()V",
        "Landroid/media/AudioManager;->getMode()I",
        "Landroid/media/AudioManager;->registerMediaButtonEventReceiver()V",
        "Landroid/media/AudioManager;->isSpeakerphoneOn()Z",
        "Landroid/media/AudioManager;->unregisterMediaButtonEventReceiver()V",
        "Landroid/media/AudioManager;->getRingerMode()I",
        "Landroid/media/AudioManager;->setStreamMute()V"
    ],
    "Lcom/google/android/gms/internal/ci;": [
        "Lcom/google/android/gms/internal/ci;->a()I",
        "Lcom/google/android/gms/internal/ci;->a()Landroid/content/pm/ResolveInfo;",
        "Lcom/google/android/gms/internal/ci;->a()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ee$a;": [
        "Lcom/google/android/gms/internal/ee$a;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ee$a;->a()V",
        "Lcom/google/android/gms/internal/ee$a;->bV()Z",
        "Lcom/google/android/gms/internal/ee$a;->bO()I",
        "Lcom/google/android/gms/internal/ee$a;->cc()Ljava/util/HashMap;",
        "Lcom/google/android/gms/internal/ee$a;->bZ()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ee$a;->bT()Lcom/google/android/gms/internal/ee$a;",
        "Lcom/google/android/gms/internal/ee$a;->bW()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ee$a;->bY()Ljava/lang/Class;",
        "Lcom/google/android/gms/internal/ee$a;->bX()I",
        "Lcom/google/android/gms/internal/ee$a;->cb()Lcom/google/android/gms/internal/dz;",
        "Lcom/google/android/gms/internal/ee$a;->ca()Z",
        "Lcom/google/android/gms/internal/ee$a;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/ee$a;->a()Lcom/google/android/gms/internal/ee$a;",
        "Lcom/google/android/gms/internal/ee$a;->bP()I",
        "Lcom/google/android/gms/internal/ee$a;->a()Lcom/google/android/gms/internal/ee$b;",
        "Lcom/google/android/gms/internal/ee$a;->bU()Z"
    ],
    "Lcom/google/android/gms/internal/ef;": [
        "Lcom/google/android/gms/internal/ef;->a()[Lcom/google/android/gms/internal/ee$a;",
        "Lcom/google/android/gms/internal/ef;->a()Lcom/google/android/gms/internal/ee$a;"
    ],
    "Lcom/google/android/gms/internal/cf;": [
        "Lcom/google/android/gms/internal/cf;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/cf;->a()Ljava/lang/Integer;",
        "Lcom/google/android/gms/internal/cf;->a()Lcom/google/android/gms/internal/cb;",
        "Lcom/google/android/gms/internal/cf;->a()V"
    ],
    "Lcom/google/android/gms/internal/aq;": [
        "Lcom/google/android/gms/internal/aq;->a()Landroid/location/Location;"
    ],
    "Lcom/google/android/gms/internal/cg;": [
        "Lcom/google/android/gms/internal/cg;->getErrorCode()I",
        "Lcom/google/android/gms/internal/cg;->ap()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ce;": [
        "Lcom/google/android/gms/internal/ce;->a()Lcom/google/android/gms/internal/cb;",
        "Lcom/google/android/gms/internal/ce;->a()V"
    ],
    "Lcom/google/android/gms/internal/ch;": [
        "Lcom/google/android/gms/internal/ch;->aq()Lcom/google/android/gms/internal/cb;",
        "Lcom/google/android/gms/internal/ch;->a()Ljava/util/List;",
        "Lcom/google/android/gms/internal/ch;->a()J",
        "Lcom/google/android/gms/internal/ch;->a()V"
    ],
    "Lcom/google/android/gms/internal/ej;": [
        "Lcom/google/android/gms/internal/ej;->a()[Lcom/google/android/gms/internal/eh$a;",
        "Lcom/google/android/gms/internal/ej;->a()Lcom/google/android/gms/internal/eh$a;"
    ],
    "Lcom/google/android/gms/internal/ha$b$b;": [
        "Lcom/google/android/gms/internal/ha$b$b;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$b$b;->getWidth()I",
        "Lcom/google/android/gms/internal/ha$b$b;->getUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$b$b;->getHeight()I",
        "Lcom/google/android/gms/internal/ha$b$b;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/internal/hf;": [
        "Lcom/google/android/gms/internal/hf;->ap()Lcom/google/android/gms/internal/ha$b$b;",
        "Lcom/google/android/gms/internal/hf;->aX()[Lcom/google/android/gms/internal/ha$b$b;"
    ],
    "Lcom/google/android/gms/internal/gk;": [
        "Lcom/google/android/gms/internal/gk;->isConnecting()Z",
        "Lcom/google/android/gms/internal/gk;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/gk;->connect()V",
        "Lcom/google/android/gms/internal/gk;->aq()Lcom/google/android/gms/internal/gj;",
        "Lcom/google/android/gms/internal/gk;->bB()V",
        "Lcom/google/android/gms/internal/gk;->isConnectionFailedListenerRegistered()Z",
        "Lcom/google/android/gms/internal/gk;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/gk;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/gk;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/gk;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/internal/gk;->a()V",
        "Lcom/google/android/gms/internal/gk;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/gk;->disconnect()V",
        "Lcom/google/android/gms/internal/gk;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/gk;->isConnected()Z"
    ],
    "Lcom/google/android/gms/internal/gj;": [
        "Lcom/google/android/gms/internal/gj;->a()V"
    ],
    "Lcom/google/android/gms/internal/gk$b;": [
        "Lcom/google/android/gms/internal/gk$b;->a()V"
    ],
    "Lcom/google/android/gms/internal/gj$a;": [
        "Lcom/google/android/gms/internal/gj$a;->ap()Lcom/google/android/gms/internal/gj;"
    ],
    "Lcom/google/android/gms/ads/AdListener;": [
        "Lcom/google/android/gms/ads/AdListener;->onAdLeftApplication()V",
        "Lcom/google/android/gms/ads/AdListener;->onAdClosed()V",
        "Lcom/google/android/gms/ads/AdListener;->onAdLoaded()V",
        "Lcom/google/android/gms/ads/AdListener;->onAdFailedToLoad()V",
        "Lcom/google/android/gms/ads/AdListener;->onAdOpened()V"
    ],
    "Lcom/google/android/gms/internal/bw;": [
        "Lcom/google/android/gms/internal/bw;->a()Lcom/google/android/gms/internal/cl;"
    ],
    "Lcom/google/android/gms/internal/bx$a;": [
        "Lcom/google/android/gms/internal/bx$a;->start()V"
    ],
    "Lcom/google/android/gms/common/GooglePlayServicesUtil;": [
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()V",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()I",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()[B",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->aU()Z",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->isGooglePlayServicesAvailable()I",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()Landroid/app/Dialog;",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->getRemoteContext()Landroid/content/Context;",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()Z",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()Landroid/content/Intent;",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->getErrorPendingIntent()Landroid/app/PendingIntent;",
        "Lcom/google/android/gms/common/GooglePlayServicesUtil;->a()[[B"
    ],
    "Lcom/google/android/gms/internal/gr;": [
        "Lcom/google/android/gms/internal/gr;->a()Lcom/google/android/gms/internal/gn;",
        "Lcom/google/android/gms/internal/gr;->a()Landroid/view/View;"
    ],
    "Lcom/google/android/gms/dynamic/c;": [
        "Lcom/google/android/gms/dynamic/c;->a()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/dynamic/c;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/internal/gn;": [
        "Lcom/google/android/gms/internal/gn;->a()Lcom/google/android/gms/dynamic/b;"
    ],
    "Ljava/lang/ClassLoader;": [
        "Ljava/lang/ClassLoader;->loadClass()Ljava/lang/Class;"
    ],
    "Lcom/google/android/gms/internal/gn$a;": [
        "Lcom/google/android/gms/internal/gn$a;->as()Lcom/google/android/gms/internal/gn;"
    ],
    "Lcom/google/android/gms/internal/m;": [
        "Lcom/google/android/gms/internal/m;->reset()V"
    ],
    "Lcom/google/android/gms/internal/es;": [
        "Lcom/google/android/gms/internal/es;->ck()Z",
        "Lcom/google/android/gms/internal/es;->cl()Z",
        "Lcom/google/android/gms/internal/es;->a()Z",
        "Lcom/google/android/gms/internal/es;->cm()Z",
        "Lcom/google/android/gms/internal/es;->cp()Z",
        "Lcom/google/android/gms/internal/es;->cn()Z"
    ],
    "Lcom/google/android/gms/internal/co;": [
        "Lcom/google/android/gms/internal/co;->a()V"
    ],
    "Lcom/google/android/gms/internal/fp;": [
        "Lcom/google/android/gms/internal/fp;->bB()V",
        "Lcom/google/android/gms/internal/fp;->bC()Landroid/os/IInterface;"
    ],
    "Landroid/content/ContentProviderClient;": [
        "Landroid/content/ContentProviderClient;->release()Z"
    ],
    "Lcom/google/android/gms/internal/fl$b;": [
        "Lcom/google/android/gms/internal/fl$b;->release()V"
    ],
    "Landroid/util/Base64;": [
        "Landroid/util/Base64;->decode()[B",
        "Landroid/util/Base64;->encodeToString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/dm$a;": [
        "Lcom/google/android/gms/internal/dm$a;->bJ()Z",
        "Lcom/google/android/gms/internal/dm$a;->a()Z",
        "Lcom/google/android/gms/internal/dm$a;->isBound()Z",
        "Lcom/google/android/gms/internal/dm$a;->bH()Lcom/google/android/gms/internal/dm$a$a;",
        "Lcom/google/android/gms/internal/dm$a;->getBinder()Landroid/os/IBinder;",
        "Lcom/google/android/gms/internal/dm$a;->bI()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/dm$a;->a()V",
        "Lcom/google/android/gms/internal/dm$a;->getComponentName()Landroid/content/ComponentName;",
        "Lcom/google/android/gms/internal/dm$a;->getState()I"
    ],
    "Lcom/google/android/gms/internal/dk$e;": [
        "Lcom/google/android/gms/internal/dk$e;->onServiceConnected()V"
    ],
    "Ljava/util/concurrent/BlockingQueue;": [
        "Ljava/util/concurrent/BlockingQueue;->poll()Ljava/lang/Object;",
        "Ljava/util/concurrent/BlockingQueue;->put()V",
        "Ljava/util/concurrent/BlockingQueue;->take()Ljava/lang/Object;",
        "Ljava/util/concurrent/BlockingQueue;->offer()Z",
        "Ljava/util/concurrent/BlockingQueue;->clear()V"
    ],
    "Lcom/google/android/gms/internal/ha$h;": [
        "Lcom/google/android/gms/internal/ha$h;->getType()I",
        "Lcom/google/android/gms/internal/ha$h;->getValue()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$h;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$h;->getLabel()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$h;->fs()I",
        "Lcom/google/android/gms/internal/ha$h;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/internal/hk;": [
        "Lcom/google/android/gms/internal/hk;->bc()[Lcom/google/android/gms/internal/ha$h;",
        "Lcom/google/android/gms/internal/hk;->au()Lcom/google/android/gms/internal/ha$h;"
    ],
    "Lcom/google/android/gms/ads/search/SearchAdRequest;": [
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getBorderThickness()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getHeaderTextSize()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getQuery()Ljava/lang/String;",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getBackgroundGradientTop()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->a()Lcom/google/android/gms/internal/af;",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getHeaderTextColor()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getBorderType()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getBackgroundColor()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getBorderColor()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getBackgroundGradientBottom()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getCallButtonColor()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getDescriptionTextColor()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getAnchorTextColor()I",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getFontFace()Ljava/lang/String;",
        "Lcom/google/android/gms/ads/search/SearchAdRequest;->getCustomChannels()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/aj;": [
        "Lcom/google/android/gms/internal/aj;->a()[Lcom/google/android/gms/internal/ai;",
        "Lcom/google/android/gms/internal/aj;->a()V",
        "Lcom/google/android/gms/internal/aj;->a()Lcom/google/android/gms/internal/ai;"
    ],
    "Lcom/google/android/gms/internal/ca;": [
        "Lcom/google/android/gms/internal/ca;->a()V",
        "Lcom/google/android/gms/internal/ca;->a()Lcom/google/android/gms/internal/bz;",
        "Lcom/google/android/gms/internal/ca;->a()[Lcom/google/android/gms/internal/bz;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->hashCode()I",
        "Ljava/util/Arrays;->sort()V",
        "Ljava/util/Arrays;->equals()Z",
        "Ljava/util/Arrays;->asList()Ljava/util/List;",
        "Ljava/util/Arrays;->fill()V",
        "Ljava/util/Arrays;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/eg;": [
        "Lcom/google/android/gms/internal/eg;->a()Lcom/google/android/gms/internal/eh$b;",
        "Lcom/google/android/gms/internal/eg;->a()[Lcom/google/android/gms/internal/eh$b;"
    ],
    "Lcom/google/android/gms/internal/ft;": [
        "Lcom/google/android/gms/internal/ft;->ab()Lcom/google/android/gms/internal/fs;",
        "Lcom/google/android/gms/internal/ft;->a()V",
        "Lcom/google/android/gms/internal/ft;->aH()[Lcom/google/android/gms/internal/fs;"
    ],
    "Lcom/google/android/gms/internal/fx;": [
        "Lcom/google/android/gms/internal/fx;->a()V",
        "Lcom/google/android/gms/internal/fx;->ad()Lcom/google/android/gms/internal/fw;",
        "Lcom/google/android/gms/internal/fx;->aJ()[Lcom/google/android/gms/internal/fw;"
    ],
    "Lcom/google/android/gms/internal/eh;": [
        "Lcom/google/android/gms/internal/eh;->a()V",
        "Lcom/google/android/gms/internal/eh;->a()Z",
        "Lcom/google/android/gms/internal/eh;->ce()V",
        "Lcom/google/android/gms/internal/eh;->cg()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/eh;->getVersionCode()I",
        "Lcom/google/android/gms/internal/eh;->a()Ljava/util/HashMap;",
        "Lcom/google/android/gms/internal/eh;->cd()V",
        "Lcom/google/android/gms/internal/eh;->cf()Ljava/util/ArrayList;"
    ],
    "Lcom/google/android/gms/common/internal/safeparcel/SafeParcelable;": [
        "Lcom/google/android/gms/common/internal/safeparcel/SafeParcelable;->writeToParcel()V"
    ],
    "Lcom/google/android/gms/internal/ek;": [
        "Lcom/google/android/gms/internal/ek;->a()Lcom/google/android/gms/internal/eh;",
        "Lcom/google/android/gms/internal/ek;->a()V",
        "Lcom/google/android/gms/internal/ek;->cj()Lcom/google/android/gms/internal/eh;",
        "Lcom/google/android/gms/internal/ek;->a()Ljava/util/HashMap;",
        "Lcom/google/android/gms/internal/ek;->a()Lcom/google/android/gms/internal/ek;",
        "Lcom/google/android/gms/internal/ek;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ek;->ci()Landroid/os/Parcel;",
        "Lcom/google/android/gms/internal/ek;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/internal/ee;": [
        "Lcom/google/android/gms/internal/ee;->toString()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ee;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/ee;->bQ()Ljava/util/HashMap;",
        "Lcom/google/android/gms/internal/ee;->a()V",
        "Lcom/google/android/gms/internal/ee;->a()Z",
        "Lcom/google/android/gms/internal/ee;->bS()Ljava/util/HashMap;",
        "Lcom/google/android/gms/internal/ee;->bR()Ljava/util/HashMap;"
    ],
    "Lcom/google/android/gms/internal/eq;": [
        "Lcom/google/android/gms/internal/eq;->a()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/en;": [
        "Lcom/google/android/gms/internal/en;->a()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/er;": [
        "Lcom/google/android/gms/internal/er;->a()V"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->parseDouble()D",
        "Ljava/lang/Double;->toString()Ljava/lang/String;",
        "Ljava/lang/Double;->isNaN()Z",
        "Ljava/lang/Double;->doubleToLongBits()J",
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;",
        "Ljava/lang/Double;->doubleValue()D"
    ],
    "Lcom/google/android/gms/internal/em;": [
        "Lcom/google/android/gms/internal/em;->a()V"
    ],
    "Lcom/google/android/gms/internal/el;": [
        "Lcom/google/android/gms/internal/el;->a()Lcom/google/android/gms/internal/ek;",
        "Lcom/google/android/gms/internal/el;->a()V",
        "Lcom/google/android/gms/internal/el;->a()[Lcom/google/android/gms/internal/ek;"
    ],
    "Lcom/google/android/gms/internal/as;": [
        "Lcom/google/android/gms/internal/as;->cancel()V",
        "Lcom/google/android/gms/internal/as;->a()Lcom/google/android/gms/internal/ay;"
    ],
    "Lcom/google/android/gms/internal/bv;": [
        "Lcom/google/android/gms/internal/bv;->a()Lcom/google/android/gms/internal/x;",
        "Lcom/google/android/gms/internal/bv;->a()Z",
        "Lcom/google/android/gms/internal/bv;->aj()V",
        "Lcom/google/android/gms/internal/bv;->start()V",
        "Lcom/google/android/gms/internal/bv;->a()V"
    ],
    "Lcom/google/android/gms/internal/h;": [
        "Lcom/google/android/gms/internal/h;->a()Z",
        "Lcom/google/android/gms/internal/h;->a()Landroid/net/Uri;",
        "Lcom/google/android/gms/internal/h;->a()Lcom/google/android/gms/internal/d;",
        "Lcom/google/android/gms/internal/h;->a()V"
    ],
    "Lcom/google/android/gms/internal/d;": [
        "Lcom/google/android/gms/internal/d;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/d;->a()V"
    ],
    "Lcom/google/android/gms/internal/bv$a;": [
        "Lcom/google/android/gms/internal/bv$a;->getErrorCode()I",
        "Lcom/google/android/gms/internal/bv$a;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/cl;": [
        "Lcom/google/android/gms/internal/cl;->onStop()V",
        "Lcom/google/android/gms/internal/cl;->cancel()V"
    ],
    "Lcom/google/android/gms/internal/dy;": [
        "Lcom/google/android/gms/internal/dy;->a()I",
        "Lcom/google/android/gms/internal/dy;->sizeOf()I",
        "Lcom/google/android/gms/internal/dy;->trimToSize()V",
        "Lcom/google/android/gms/internal/dy;->entryRemoved()V",
        "Lcom/google/android/gms/internal/dy;->create()Ljava/lang/Object;"
    ],
    "Ljava/util/LinkedHashMap;": [
        "Ljava/util/LinkedHashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->values()Ljava/util/Collection;",
        "Ljava/util/LinkedHashMap;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->isEmpty()Z",
        "Ljava/util/LinkedHashMap;->put()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->entrySet()Ljava/util/Set;"
    ],
    "Lcom/google/android/gms/internal/ha$c;": [
        "Lcom/google/android/gms/internal/ha$c;->getUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$c;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$c;->eF()Ljava/util/Set;"
    ],
    "Lcom/google/android/gms/internal/hg;": [
        "Lcom/google/android/gms/internal/hg;->aq()Lcom/google/android/gms/internal/ha$c;",
        "Lcom/google/android/gms/internal/hg;->aY()[Lcom/google/android/gms/internal/ha$c;"
    ],
    "Lcom/google/android/gms/internal/ad;": [
        "Lcom/google/android/gms/internal/ad;->a()Landroid/os/IBinder;"
    ],
    "Lcom/google/android/gms/internal/ac$a;": [
        "Lcom/google/android/gms/internal/ac$a;->a()Lcom/google/android/gms/internal/ac;"
    ],
    "Lcom/google/android/gms/internal/ad$a;": [
        "Lcom/google/android/gms/internal/ad$a;->a()Lcom/google/android/gms/internal/ad;"
    ],
    "Lcom/google/android/gms/internal/gs;": [
        "Lcom/google/android/gms/internal/gs;->getVersionCode()I",
        "Lcom/google/android/gms/internal/gs;->ew()[Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->eC()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->getAccountName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->ey()[Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->ez()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->eB()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->ex()[Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gs;->eA()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ha;": [
        "Lcom/google/android/gms/internal/ha;->getTagline()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->getCircledByCount()I",
        "Lcom/google/android/gms/internal/ha;->getRelationshipStatus()I",
        "Lcom/google/android/gms/internal/ha;->a()Z",
        "Lcom/google/android/gms/internal/ha;->getNickname()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->getObjectType()I",
        "Lcom/google/android/gms/internal/ha;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha;->fe()Ljava/util/List;",
        "Lcom/google/android/gms/internal/ha;->getPlusOneCount()I",
        "Lcom/google/android/gms/internal/ha;->isVerified()Z",
        "Lcom/google/android/gms/internal/ha;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha;->getBirthday()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->fd()Lcom/google/android/gms/internal/ha$d;",
        "Lcom/google/android/gms/internal/ha;->ff()Ljava/util/List;",
        "Lcom/google/android/gms/internal/ha;->a()Lcom/google/android/gms/internal/ha;",
        "Lcom/google/android/gms/internal/ha;->getGender()I",
        "Lcom/google/android/gms/internal/ha;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->getAboutMe()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->fc()Lcom/google/android/gms/internal/ha$c;",
        "Lcom/google/android/gms/internal/ha;->getCurrentLocation()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->isPlusUser()Z",
        "Lcom/google/android/gms/internal/ha;->fb()Lcom/google/android/gms/internal/ha$b;",
        "Lcom/google/android/gms/internal/ha;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/ha;->fh()Lcom/google/android/gms/internal/ha;",
        "Lcom/google/android/gms/internal/ha;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->getLanguage()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->fg()Ljava/util/List;",
        "Lcom/google/android/gms/internal/ha;->fa()Lcom/google/android/gms/internal/ha$a;",
        "Lcom/google/android/gms/internal/ha;->getUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha;->getBraggingRights()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/gq;": [
        "Lcom/google/android/gms/internal/gq;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/gq;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/gq;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/gq;->revokeAccessAndDisconnect()V",
        "Lcom/google/android/gms/internal/gq;->isConnectionFailedListenerRegistered()Z",
        "Lcom/google/android/gms/internal/gq;->removeMoment()V",
        "Lcom/google/android/gms/internal/gq;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/gq;->isConnected()Z",
        "Lcom/google/android/gms/internal/gq;->av()Lcom/google/android/gms/internal/gp;",
        "Lcom/google/android/gms/internal/gq;->bB()V",
        "Lcom/google/android/gms/internal/gq;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/gq;->loadVisiblePeople()V",
        "Lcom/google/android/gms/internal/gq;->connect()V",
        "Lcom/google/android/gms/internal/gq;->a()V",
        "Lcom/google/android/gms/internal/gq;->writeMoment()V",
        "Lcom/google/android/gms/internal/gq;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/gq;->isConnecting()Z",
        "Lcom/google/android/gms/internal/gq;->getCurrentPerson()Lcom/google/android/gms/plus/model/people/Person;",
        "Lcom/google/android/gms/internal/gq;->bA()[Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gq;->loadMoments()V",
        "Lcom/google/android/gms/internal/gq;->getAccountName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gq;->clearDefaultAccount()V",
        "Lcom/google/android/gms/internal/gq;->disconnect()V"
    ],
    "Lcom/google/android/gms/internal/gp;": [
        "Lcom/google/android/gms/internal/gp;->a()V",
        "Lcom/google/android/gms/internal/gp;->removeMoment()V",
        "Lcom/google/android/gms/internal/gp;->getAccountName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gp;->clearDefaultAccount()V"
    ],
    "Lcom/google/android/gms/common/data/DataHolder;": [
        "Lcom/google/android/gms/common/data/DataHolder;->a()[Landroid/database/CursorWindow;",
        "Lcom/google/android/gms/common/data/DataHolder;->close()V",
        "Lcom/google/android/gms/common/data/DataHolder;->isClosed()Z",
        "Lcom/google/android/gms/common/data/DataHolder;->copyToBuffer()V",
        "Lcom/google/android/gms/common/data/DataHolder;->getStatusCode()I",
        "Lcom/google/android/gms/common/data/DataHolder;->bi()[Ljava/lang/String;",
        "Lcom/google/android/gms/common/data/DataHolder;->parseUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/common/data/DataHolder;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/common/data/DataHolder;->a()V",
        "Lcom/google/android/gms/common/data/DataHolder;->builder()Lcom/google/android/gms/common/data/DataHolder$Builder;",
        "Lcom/google/android/gms/common/data/DataHolder;->getLong()J",
        "Lcom/google/android/gms/common/data/DataHolder;->getBoolean()Z",
        "Lcom/google/android/gms/common/data/DataHolder;->hasNull()Z",
        "Lcom/google/android/gms/common/data/DataHolder;->getCount()I",
        "Lcom/google/android/gms/common/data/DataHolder;->a()I",
        "Lcom/google/android/gms/common/data/DataHolder;->validateContents()V",
        "Lcom/google/android/gms/common/data/DataHolder;->getMetadata()Landroid/os/Bundle;",
        "Lcom/google/android/gms/common/data/DataHolder;->getByteArray()[B",
        "Lcom/google/android/gms/common/data/DataHolder;->bj()[Landroid/database/CursorWindow;",
        "Lcom/google/android/gms/common/data/DataHolder;->getInteger()I",
        "Lcom/google/android/gms/common/data/DataHolder;->empty()Lcom/google/android/gms/common/data/DataHolder;",
        "Lcom/google/android/gms/common/data/DataHolder;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/internal/gq$c;": [
        "Lcom/google/android/gms/internal/gq$c;->a()V"
    ],
    "Lcom/google/android/gms/internal/gp$a;": [
        "Lcom/google/android/gms/internal/gp$a;->au()Lcom/google/android/gms/internal/gp;"
    ],
    "Lcom/google/android/gms/internal/gq$a;": [
        "Lcom/google/android/gms/internal/gq$a;->a()V"
    ],
    "Lcom/google/android/gms/internal/gq$e;": [
        "Lcom/google/android/gms/internal/gq$e;->a()V"
    ],
    "Lcom/google/android/gms/internal/db;": [
        "Lcom/google/android/gms/internal/db;->isConnected()Z",
        "Lcom/google/android/gms/internal/db;->disconnect()V",
        "Lcom/google/android/gms/internal/db;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/db;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/db;->connect()V",
        "Lcom/google/android/gms/internal/db;->bA()[Ljava/lang/String;",
        "Lcom/google/android/gms/internal/db;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/db;->a()Lcom/google/android/gms/internal/dd;",
        "Lcom/google/android/gms/internal/db;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/db;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/db;->getMaxNumKeys()I",
        "Lcom/google/android/gms/internal/db;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/internal/db;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/db;->isConnectionFailedListenerRegistered()Z",
        "Lcom/google/android/gms/internal/db;->isConnecting()Z",
        "Lcom/google/android/gms/internal/db;->a()V",
        "Lcom/google/android/gms/internal/db;->getMaxStateSize()I"
    ],
    "Lcom/google/android/gms/internal/dd;": [
        "Lcom/google/android/gms/internal/dd;->getMaxNumKeys()I",
        "Lcom/google/android/gms/internal/dd;->getMaxStateSize()I",
        "Lcom/google/android/gms/internal/dd;->a()V"
    ],
    "Lcom/google/android/gms/internal/dd$a;": [
        "Lcom/google/android/gms/internal/dd$a;->a()Lcom/google/android/gms/internal/dd;"
    ],
    "Lcom/google/android/gms/dynamic/b$a;": [
        "Lcom/google/android/gms/dynamic/b$a;->a()Lcom/google/android/gms/dynamic/b;"
    ],
    "Lcom/google/android/gms/dynamic/b;": [
        "Lcom/google/android/gms/dynamic/b;->asBinder()Landroid/os/IBinder;"
    ],
    "Lcom/google/android/gms/internal/bl;": [
        "Lcom/google/android/gms/internal/bl;->a()Lcom/google/android/gms/internal/bm;",
        "Lcom/google/android/gms/internal/bl;->a()[Lcom/google/android/gms/internal/bm;",
        "Lcom/google/android/gms/internal/bl;->a()V"
    ],
    "Landroid/net/Uri$Builder;": [
        "Landroid/net/Uri$Builder;->query()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->appendPath()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->build()Landroid/net/Uri;",
        "Landroid/net/Uri$Builder;->authority()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->appendQueryParameter()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->scheme()Landroid/net/Uri$Builder;"
    ],
    "Lcom/google/android/gms/internal/dn;": [
        "Lcom/google/android/gms/internal/dn;->a()Landroid/net/Uri;",
        "Lcom/google/android/gms/internal/dn;->a()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/dn;->bK()Landroid/content/Intent;"
    ],
    "Lcom/google/ads/mediation/MediationAdapter;": [
        "Lcom/google/ads/mediation/MediationAdapter;->getAdditionalParametersType()Ljava/lang/Class;",
        "Lcom/google/ads/mediation/MediationAdapter;->destroy()V",
        "Lcom/google/ads/mediation/MediationAdapter;->getServerParametersType()Ljava/lang/Class;"
    ],
    "Lcom/google/android/gms/internal/b$a;": [
        "Lcom/google/android/gms/internal/b$a;->a()V"
    ],
    "Lcom/google/android/gms/internal/fn;": [
        "Lcom/google/android/gms/internal/fn;->aa()V",
        "Lcom/google/android/gms/internal/fn;->aF()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fn;->aE()I",
        "Lcom/google/android/gms/internal/fn;->getExpirationTime()J",
        "Lcom/google/android/gms/internal/fn;->ds()S",
        "Lcom/google/android/gms/internal/fn;->getLongitude()D",
        "Lcom/google/android/gms/internal/fn;->a()V",
        "Lcom/google/android/gms/internal/fn;->getVersionCode()I",
        "Lcom/google/android/gms/internal/fn;->du()I",
        "Lcom/google/android/gms/internal/fn;->getLatitude()D",
        "Lcom/google/android/gms/internal/fn;->dt()F",
        "Lcom/google/android/gms/internal/fn;->dv()I",
        "Lcom/google/android/gms/internal/fn;->a()Lcom/google/android/gms/internal/fn;",
        "Lcom/google/android/gms/internal/fn;->getRequestId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fn;->getNotificationResponsiveness()I"
    ],
    "Lcom/google/android/gms/internal/fo;": [
        "Lcom/google/android/gms/internal/fo;->aa()Lcom/google/android/gms/internal/fn;",
        "Lcom/google/android/gms/internal/fo;->a()V",
        "Lcom/google/android/gms/internal/fo;->aG()[Lcom/google/android/gms/internal/fn;"
    ],
    "Lcom/google/android/gms/internal/fw;": [
        "Lcom/google/android/gms/internal/fw;->ab()Lcom/google/android/gms/internal/fw;"
    ],
    "Lcom/google/android/gms/internal/ed;": [
        "Lcom/google/android/gms/internal/ed;->a()[Lcom/google/android/gms/internal/eb$a;",
        "Lcom/google/android/gms/internal/ed;->a()Lcom/google/android/gms/internal/eb$a;"
    ],
    "Ljava/math/BigInteger;": [
        "Ljava/math/BigInteger;->toString()Ljava/lang/String;",
        "Ljava/math/BigInteger;->toByteArray()[B",
        "Ljava/math/BigInteger;->add()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->longValue()J",
        "Ljava/math/BigInteger;->valueOf()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->intValue()I"
    ],
    "Lcom/google/android/gms/internal/dv;": [
        "Lcom/google/android/gms/internal/dv;->a()Landroid/view/View;",
        "Lcom/google/android/gms/internal/dv;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/dv;->a()Lcom/google/android/gms/internal/dr;"
    ],
    "Lcom/google/android/gms/internal/dr;": [
        "Lcom/google/android/gms/internal/dr;->a()Lcom/google/android/gms/dynamic/b;"
    ],
    "Lcom/google/android/gms/internal/dr$a;": [
        "Lcom/google/android/gms/internal/dr$a;->a()Lcom/google/android/gms/internal/dr;"
    ],
    "Lcom/google/android/gms/internal/by;": [
        "Lcom/google/android/gms/internal/by;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/internal/by;->a()Lcom/google/android/gms/internal/cd;"
    ],
    "Lcom/google/android/gms/internal/cd$a;": [
        "Lcom/google/android/gms/internal/cd$a;->a()Lcom/google/android/gms/internal/cd;"
    ],
    "Lcom/google/android/gms/ads/doubleclick/AppEventListener;": [
        "Lcom/google/android/gms/ads/doubleclick/AppEventListener;->onAppEvent()V"
    ],
    "Lcom/google/android/gms/internal/ha$d;": [
        "Lcom/google/android/gms/internal/ha$d;->getHonorificPrefix()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$d;->getMiddleName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$d;->getFamilyName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$d;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$d;->getGivenName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$d;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$d;->getFormatted()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$d;->getHonorificSuffix()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/hh;": [
        "Lcom/google/android/gms/internal/hh;->ar()Lcom/google/android/gms/internal/ha$d;",
        "Lcom/google/android/gms/internal/hh;->aZ()[Lcom/google/android/gms/internal/ha$d;"
    ],
    "Lcom/google/android/gms/internal/ge;": [
        "Lcom/google/android/gms/internal/ge;->aM()[Lcom/google/android/gms/internal/gd;",
        "Lcom/google/android/gms/internal/ge;->ag()Lcom/google/android/gms/internal/gd;",
        "Lcom/google/android/gms/internal/ge;->a()V"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->unmodifiableList()Ljava/util/List;",
        "Ljava/util/Collections;->unmodifiableSet()Ljava/util/Set;",
        "Ljava/util/Collections;->singleton()Ljava/util/Set;",
        "Ljava/util/Collections;->unmodifiableCollection()Ljava/util/Collection;",
        "Ljava/util/Collections;->singletonList()Ljava/util/List;",
        "Ljava/util/Collections;->sort()V",
        "Ljava/util/Collections;->emptyList()Ljava/util/List;",
        "Ljava/util/Collections;->emptyMap()Ljava/util/Map;",
        "Ljava/util/Collections;->shuffle()V",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->emptySet()Ljava/util/Set;",
        "Ljava/util/Collections;->synchronizedMap()Ljava/util/Map;",
        "Ljava/util/Collections;->reverse()V"
    ],
    "Lcom/google/android/gms/internal/w;": [
        "Lcom/google/android/gms/internal/w;->a()V",
        "Lcom/google/android/gms/internal/w;->a()[Lcom/google/android/gms/internal/v;",
        "Lcom/google/android/gms/internal/w;->a()Lcom/google/android/gms/internal/v;"
    ],
    "Lcom/google/android/gms/internal/af$a;": [
        "Lcom/google/android/gms/internal/af$a;->a()Ljava/util/Date;",
        "Lcom/google/android/gms/internal/af$a;->a()I",
        "Lcom/google/android/gms/internal/af$a;->a()Ljava/util/HashSet;",
        "Lcom/google/android/gms/internal/af$a;->a()Z",
        "Lcom/google/android/gms/internal/af$a;->a()Ljava/util/HashMap;",
        "Lcom/google/android/gms/internal/af$a;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/af$a;->a()Landroid/location/Location;"
    ],
    "Lcom/google/android/gms/internal/ha$b;": [
        "Lcom/google/android/gms/internal/ha$b;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$b;->fj()Lcom/google/android/gms/internal/ha$b$a;",
        "Lcom/google/android/gms/internal/ha$b;->getLayout()I",
        "Lcom/google/android/gms/internal/ha$b;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$b;->fk()Lcom/google/android/gms/internal/ha$b$b;"
    ],
    "Lcom/google/android/gms/internal/hd;": [
        "Lcom/google/android/gms/internal/hd;->aV()[Lcom/google/android/gms/internal/ha$b;",
        "Lcom/google/android/gms/internal/hd;->an()Lcom/google/android/gms/internal/ha$b;"
    ],
    "Lcom/google/android/gms/internal/ea;": [
        "Lcom/google/android/gms/internal/ea;->a()V",
        "Lcom/google/android/gms/internal/ea;->a()Lcom/google/android/gms/internal/dz;",
        "Lcom/google/android/gms/internal/ea;->a()[Lcom/google/android/gms/internal/dz;"
    ],
    "Lcom/google/android/gms/internal/eh$a;": [
        "Lcom/google/android/gms/internal/eh$a;->ch()Ljava/util/HashMap;"
    ],
    "Lcom/google/android/gms/internal/ei;": [
        "Lcom/google/android/gms/internal/ei;->a()[Lcom/google/android/gms/internal/eh;",
        "Lcom/google/android/gms/internal/ei;->a()Lcom/google/android/gms/internal/eh;",
        "Lcom/google/android/gms/internal/ei;->a()V"
    ],
    "Lcom/google/android/gms/internal/bm;": [
        "Lcom/google/android/gms/internal/bm;->ab()Landroid/os/IBinder;",
        "Lcom/google/android/gms/internal/bm;->a()V",
        "Lcom/google/android/gms/internal/bm;->a()Lcom/google/android/gms/internal/bm;",
        "Lcom/google/android/gms/internal/bm;->ad()Landroid/os/IBinder;",
        "Lcom/google/android/gms/internal/bm;->ac()Landroid/os/IBinder;",
        "Lcom/google/android/gms/internal/bm;->aa()Landroid/os/IBinder;",
        "Lcom/google/android/gms/internal/bm;->ae()Landroid/os/IBinder;"
    ],
    "Lcom/google/android/gms/internal/ax;": [
        "Lcom/google/android/gms/internal/ax;->a()Lcom/google/android/gms/internal/ay;",
        "Lcom/google/android/gms/internal/ax;->cancel()V",
        "Lcom/google/android/gms/internal/ax;->a()V",
        "Lcom/google/android/gms/internal/ax;->a()Lcom/google/android/gms/internal/bc;"
    ],
    "Lcom/google/android/gms/internal/hs;": [
        "Lcom/google/android/gms/internal/hs;->fL()Lcom/google/android/gms/internal/hs;",
        "Lcom/google/android/gms/internal/hs;->fP()Lcom/google/android/gms/internal/hs;",
        "Lcom/google/android/gms/internal/hs;->fM()Lcom/google/android/gms/internal/hs;",
        "Lcom/google/android/gms/internal/hs;->fQ()Lcom/google/android/gms/internal/hs;",
        "Lcom/google/android/gms/internal/hs;->fN()Lcom/google/android/gms/internal/hs;",
        "Lcom/google/android/gms/internal/hs;->fO()Lcom/google/android/gms/internal/hs;"
    ],
    "Lcom/google/android/gms/internal/hq;": [
        "Lcom/google/android/gms/internal/hq;->fz()I",
        "Lcom/google/android/gms/internal/hq;->bq()Z",
        "Lcom/google/android/gms/internal/hq;->fE()J",
        "Lcom/google/android/gms/internal/hq;->br()[B",
        "Lcom/google/android/gms/internal/hq;->fF()I",
        "Lcom/google/android/gms/internal/hq;->a()Lcom/google/android/gms/internal/hq;",
        "Lcom/google/android/gms/internal/hq;->fC()J",
        "Lcom/google/android/gms/internal/hq;->a()J",
        "Lcom/google/android/gms/internal/hq;->fD()I",
        "Lcom/google/android/gms/internal/hq;->bs()V",
        "Lcom/google/android/gms/internal/hq;->fG()J",
        "Lcom/google/android/gms/internal/hq;->bp()V",
        "Lcom/google/android/gms/internal/hq;->fI()B",
        "Lcom/google/android/gms/internal/hq;->fB()I",
        "Lcom/google/android/gms/internal/hq;->fA()V",
        "Lcom/google/android/gms/internal/hq;->readString()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hq;->fH()Z"
    ],
    "Landroid/util/TypedValue;": [
        "Landroid/util/TypedValue;->applyDimension()F"
    ],
    "Ljava/lang/Character;": [
        "Ljava/lang/Character;->isLetter()Z",
        "Ljava/lang/Character;->digit()I",
        "Ljava/lang/Character;->toString()Ljava/lang/String;",
        "Ljava/lang/Character;->charValue()C",
        "Ljava/lang/Character;->getDirectionality()B",
        "Ljava/lang/Character;->isUpperCase()Z",
        "Ljava/lang/Character;->toUpperCase()C",
        "Ljava/lang/Character;->toLowerCase()C",
        "Ljava/lang/Character;->isWhitespace()Z"
    ],
    "Lcom/google/android/gms/internal/fu;": [
        "Lcom/google/android/gms/internal/fu;->dA()Lcom/google/android/gms/location/LocationRequest;",
        "Lcom/google/android/gms/internal/fu;->dB()Lcom/google/android/gms/internal/fs;"
    ],
    "Lcom/google/android/gms/internal/al;": [
        "Lcom/google/android/gms/internal/al;->onAppEvent()V"
    ],
    "Lcom/google/android/gms/internal/ha$f;": [
        "Lcom/google/android/gms/internal/ha$f;->getEndDate()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$f;->getTitle()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$f;->getDescription()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$f;->isPrimary()Z",
        "Lcom/google/android/gms/internal/ha$f;->getLocation()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$f;->getStartDate()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$f;->getType()I",
        "Lcom/google/android/gms/internal/ha$f;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$f;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$f;->getName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ha$f;->getDepartment()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/hi;": [
        "Lcom/google/android/gms/internal/hi;->ba()[Lcom/google/android/gms/internal/ha$f;",
        "Lcom/google/android/gms/internal/hi;->as()Lcom/google/android/gms/internal/ha$f;"
    ],
    "Lcom/google/android/gms/internal/dw;": [
        "Lcom/google/android/gms/internal/dw;->a()V",
        "Lcom/google/android/gms/internal/dw;->setBackgroundDrawable()V",
        "Lcom/google/android/gms/internal/dw;->setMinHeight()V",
        "Lcom/google/android/gms/internal/dw;->setMinWidth()V",
        "Lcom/google/android/gms/internal/dw;->a()I",
        "Lcom/google/android/gms/internal/dw;->setTypeface()V",
        "Lcom/google/android/gms/internal/dw;->setText()V",
        "Lcom/google/android/gms/internal/dw;->setTextSize()V",
        "Lcom/google/android/gms/internal/dw;->setTextColor()V"
    ],
    "Lcom/google/android/gms/internal/cd;": [
        "Lcom/google/android/gms/internal/cd;->a()Lcom/google/android/gms/internal/cb;"
    ],
    "Lcom/google/android/gms/internal/bx;": [
        "Lcom/google/android/gms/internal/bx;->ak()V",
        "Lcom/google/android/gms/internal/bx;->al()Lcom/google/android/gms/internal/cd;",
        "Lcom/google/android/gms/internal/bx;->a()Lcom/google/android/gms/internal/cb;"
    ],
    "Lcom/google/android/gms/internal/bw$a;": [
        "Lcom/google/android/gms/internal/bw$a;->a()V"
    ],
    "Lcom/google/android/gms/internal/aa;": [
        "Lcom/google/android/gms/internal/aa;->a()[Lcom/google/android/gms/ads/AdSize;",
        "Lcom/google/android/gms/internal/aa;->getAdUnitId()Ljava/lang/String;"
    ],
    "Ljava/lang/IllegalArgumentException;": [
        "Ljava/lang/IllegalArgumentException;->printStackTrace()V",
        "Ljava/lang/IllegalArgumentException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ag;": [
        "Lcom/google/android/gms/internal/ag;->getAppEventListener()Lcom/google/android/gms/ads/doubleclick/AppEventListener;",
        "Lcom/google/android/gms/internal/ag;->a()V",
        "Lcom/google/android/gms/internal/ag;->recordManualImpression()V",
        "Lcom/google/android/gms/internal/ag;->getAdSize()Lcom/google/android/gms/ads/AdSize;",
        "Lcom/google/android/gms/internal/ag;->getAdListener()Lcom/google/android/gms/ads/AdListener;",
        "Lcom/google/android/gms/internal/ag;->setAdListener()V",
        "Lcom/google/android/gms/internal/ag;->setAppEventListener()V",
        "Lcom/google/android/gms/internal/ag;->pause()V",
        "Lcom/google/android/gms/internal/ag;->getAdSizes()[Lcom/google/android/gms/ads/AdSize;",
        "Lcom/google/android/gms/internal/ag;->setAdSizes()V",
        "Lcom/google/android/gms/internal/ag;->setAdUnitId()V",
        "Lcom/google/android/gms/internal/ag;->resume()V",
        "Lcom/google/android/gms/internal/ag;->getAdUnitId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ag;->destroy()V"
    ],
    "Lcom/google/android/gms/internal/ha$b$a;": [
        "Lcom/google/android/gms/internal/ha$b$a;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$b$a;->getLeftImageOffset()I",
        "Lcom/google/android/gms/internal/ha$b$a;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$b$a;->getTopImageOffset()I"
    ],
    "Lcom/google/android/gms/internal/he;": [
        "Lcom/google/android/gms/internal/he;->aW()[Lcom/google/android/gms/internal/ha$b$a;",
        "Lcom/google/android/gms/internal/he;->ao()Lcom/google/android/gms/internal/ha$b$a;"
    ],
    "Lcom/google/android/gms/internal/gb;": [
        "Lcom/google/android/gms/internal/gb;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gb;->dM()Landroid/os/Bundle;",
        "Lcom/google/android/gms/internal/gb;->dI()Landroid/net/Uri;",
        "Lcom/google/android/gms/internal/gb;->toString()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gb;->dG()F",
        "Lcom/google/android/gms/internal/gb;->dO()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gb;->ac()V",
        "Lcom/google/android/gms/internal/gb;->dJ()Z",
        "Lcom/google/android/gms/internal/gb;->dN()Lcom/google/android/gms/internal/gd;",
        "Lcom/google/android/gms/internal/gb;->getRating()F",
        "Lcom/google/android/gms/internal/gb;->dF()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/internal/gb;->dE()Ljava/util/List;",
        "Lcom/google/android/gms/internal/gb;->dH()Lcom/google/android/gms/maps/model/LatLngBounds;",
        "Lcom/google/android/gms/internal/gb;->dK()I",
        "Lcom/google/android/gms/internal/gb;->dL()J"
    ],
    "Lcom/google/android/gms/internal/ga;": [
        "Lcom/google/android/gms/internal/ga;->ae()Lcom/google/android/gms/internal/fz;",
        "Lcom/google/android/gms/internal/ga;->aK()[Lcom/google/android/gms/internal/fz;",
        "Lcom/google/android/gms/internal/ga;->a()V"
    ],
    "Lorg/json/JSONException;": [
        "Lorg/json/JSONException;->getMessage()Ljava/lang/String;",
        "Lorg/json/JSONException;->printStackTrace()V"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->HSVToColor()I",
        "Landroid/graphics/Color;->alpha()I",
        "Landroid/graphics/Color;->parseColor()I"
    ],
    "Lcom/google/android/gms/internal/cu;": [
        "Lcom/google/android/gms/internal/cu;->a()V",
        "Lcom/google/android/gms/internal/cu;->a()Lcom/google/android/gms/internal/ct;",
        "Lcom/google/android/gms/internal/cu;->a()[Lcom/google/android/gms/internal/ct;"
    ],
    "Lcom/google/android/gms/internal/fa;": [
        "Lcom/google/android/gms/internal/fa;->a()V"
    ],
    "Lcom/google/android/gms/internal/az;": [
        "Lcom/google/android/gms/internal/az;->a()V",
        "Lcom/google/android/gms/internal/az;->a()Ljava/util/List;"
    ],
    "Lcom/google/ads/AdRequest$ErrorCode;": [
        "Lcom/google/ads/AdRequest$ErrorCode;->ordinal()I"
    ],
    "Lcom/google/ads/AdRequest$Gender;": [
        "Lcom/google/ads/AdRequest$Gender;->ordinal()I"
    ],
    "Lcom/google/android/gms/internal/bn;": [
        "Lcom/google/android/gms/internal/bn;->a()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->setMargins()V",
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V"
    ],
    "Lcom/google/android/gms/internal/cw;": [
        "Lcom/google/android/gms/internal/cw;->reset()V",
        "Lcom/google/android/gms/internal/cw;->aI()Z",
        "Lcom/google/android/gms/internal/cw;->a()Z",
        "Lcom/google/android/gms/internal/cw;->shouldInterceptRequest()Landroid/webkit/WebResourceResponse;",
        "Lcom/google/android/gms/internal/cw;->a()V"
    ],
    "Landroid/webkit/WebChromeClient$CustomViewCallback;": [
        "Landroid/webkit/WebChromeClient$CustomViewCallback;->onCustomViewHidden()V"
    ],
    "Lcom/google/android/gms/internal/bp;": [
        "Lcom/google/android/gms/internal/bp;->addView()V",
        "Lcom/google/android/gms/internal/bp;->setOnClickListener()V",
        "Lcom/google/android/gms/internal/bp;->a()V"
    ],
    "Lcom/google/android/gms/internal/bk$a;": [
        "Lcom/google/android/gms/internal/bk$a;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/q;": [
        "Lcom/google/android/gms/internal/q;->a()V"
    ],
    "Lcom/google/android/gms/internal/bh;": [
        "Lcom/google/android/gms/internal/bh;->a()Z"
    ],
    "Lcom/google/android/gms/internal/bb;": [
        "Lcom/google/android/gms/internal/bb;->a()Lcom/google/android/gms/internal/bc;"
    ],
    "Lcom/google/android/gms/internal/bc;": [
        "Lcom/google/android/gms/internal/bc;->destroy()V",
        "Lcom/google/android/gms/internal/bc;->a()V",
        "Lcom/google/android/gms/internal/bc;->getView()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/internal/bc;->showInterstitial()V"
    ],
    "Lcom/google/android/gms/internal/gv;": [
        "Lcom/google/android/gms/internal/gv;->getFamilyName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getRatingValue()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getStreetAddress()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->a()Z",
        "Lcom/google/android/gms/internal/gv;->getAdditionalName()Ljava/util/List;",
        "Lcom/google/android/gms/internal/gv;->eO()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getThumbnailUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getCaption()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eJ()Ljava/util/List;",
        "Lcom/google/android/gms/internal/gv;->getPostOfficeBoxNumber()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getContentUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getGivenName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getBestRating()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getLongitude()D",
        "Lcom/google/android/gms/internal/gv;->eQ()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getWorstRating()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getAddressRegion()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getGender()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/gv;->getAttendeeCount()I",
        "Lcom/google/android/gms/internal/gv;->getType()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eI()Ljava/util/List;",
        "Lcom/google/android/gms/internal/gv;->getHeight()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getDateCreated()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eS()Ljava/util/List;",
        "Lcom/google/android/gms/internal/gv;->getAddressCountry()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getLatitude()D",
        "Lcom/google/android/gms/internal/gv;->getPostalCode()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getTickerSymbol()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getImage()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eR()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->eM()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getStartDate()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eT()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->eG()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->eN()Ljava/util/List;",
        "Lcom/google/android/gms/internal/gv;->eK()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getWidth()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getText()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getDatePublished()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eH()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getAddressLocality()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getBirthDate()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getDateModified()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getDescription()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getEndDate()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eP()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->eU()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getVersionCode()I",
        "Lcom/google/android/gms/internal/gv;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/gv;->getContentSize()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getPlayerType()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eV()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gv;->getDuration()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->getEmbedUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gv;->eL()Ljava/util/List;"
    ],
    "Lcom/google/android/gms/internal/gw;": [
        "Lcom/google/android/gms/internal/gw;->aR()[Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gw;->a()V",
        "Lcom/google/android/gms/internal/gw;->aj()Lcom/google/android/gms/internal/gv;"
    ],
    "Landroid/net/LocalSocket;": [
        "Landroid/net/LocalSocket;->getInputStream()Ljava/io/InputStream;",
        "Landroid/net/LocalSocket;->getFileDescriptor()Ljava/io/FileDescriptor;",
        "Landroid/net/LocalSocket;->getOutputStream()Ljava/io/OutputStream;",
        "Landroid/net/LocalSocket;->connect()V",
        "Landroid/net/LocalSocket;->isConnected()Z",
        "Landroid/net/LocalSocket;->close()V",
        "Landroid/net/LocalSocket;->isBound()Z"
    ],
    "Lcom/google/android/gms/internal/fe;": [
        "Lcom/google/android/gms/internal/fe;->isClosed()Z",
        "Lcom/google/android/gms/internal/fe;->close()V"
    ],
    "Lcom/google/android/gms/internal/ev;": [
        "Lcom/google/android/gms/internal/ev;->a()Lcom/google/android/gms/drive/DriveId;"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->getCanonicalPath()Ljava/lang/String;",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->isFile()Z",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->createTempFile()Ljava/io/File;",
        "Ljava/io/File;->renameTo()Z",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->getName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/cy;": [
        "Lcom/google/android/gms/internal/cy;->a()Landroid/webkit/WebResourceResponse;"
    ],
    "Lcom/google/android/gms/internal/hb;": [
        "Lcom/google/android/gms/internal/hb;->al()Lcom/google/android/gms/internal/ha;",
        "Lcom/google/android/gms/internal/hb;->a()V",
        "Lcom/google/android/gms/internal/hb;->aT()[Lcom/google/android/gms/internal/ha;"
    ],
    "Lcom/google/android/gms/internal/gc;": [
        "Lcom/google/android/gms/internal/gc;->af()Lcom/google/android/gms/internal/gb;",
        "Lcom/google/android/gms/internal/gc;->aL()[Lcom/google/android/gms/internal/gb;",
        "Lcom/google/android/gms/internal/gc;->a()V"
    ],
    "Lcom/google/android/gms/internal/eb;": [
        "Lcom/google/android/gms/internal/eb;->getVersionCode()I",
        "Lcom/google/android/gms/internal/eb;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/eb;->bN()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/internal/eb;->a()Lcom/google/android/gms/internal/eb;",
        "Lcom/google/android/gms/internal/eb;->a()V"
    ],
    "Lcom/google/android/gms/internal/ec;": [
        "Lcom/google/android/gms/internal/ec;->a()Lcom/google/android/gms/internal/eb;",
        "Lcom/google/android/gms/internal/ec;->a()V",
        "Lcom/google/android/gms/internal/ec;->a()[Lcom/google/android/gms/internal/eb;"
    ],
    "Ljava/util/concurrent/ThreadPoolExecutor;": [
        "Ljava/util/concurrent/ThreadPoolExecutor;->execute()V",
        "Ljava/util/concurrent/ThreadPoolExecutor;->submit()Ljava/util/concurrent/Future;"
    ],
    "Landroid/content/DialogInterface;": [
        "Landroid/content/DialogInterface;->dismiss()V"
    ],
    "Lcom/google/android/gms/internal/bd;": [
        "Lcom/google/android/gms/internal/bd;->onAdOpened()V",
        "Lcom/google/android/gms/internal/bd;->onAdFailedToLoad()V",
        "Lcom/google/android/gms/internal/bd;->onAdLeftApplication()V",
        "Lcom/google/android/gms/internal/bd;->onAdClosed()V",
        "Lcom/google/android/gms/internal/bd;->a()V",
        "Lcom/google/android/gms/internal/bd;->onAdLoaded()V"
    ],
    "Lcom/google/android/gms/internal/e;": [
        "Lcom/google/android/gms/internal/e;->a()V",
        "Lcom/google/android/gms/internal/e;->a()[B",
        "Lcom/google/android/gms/internal/e;->a()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/k;": [
        "Lcom/google/android/gms/internal/k;->a()[B",
        "Lcom/google/android/gms/internal/k;->a()V",
        "Lcom/google/android/gms/internal/k;->reset()V"
    ],
    "Ljava/security/SecureRandom;": [
        "Ljava/security/SecureRandom;->nextBytes()V"
    ],
    "Lcom/google/android/gms/internal/b;": [
        "Lcom/google/android/gms/internal/b;->a()V"
    ],
    "Lcom/google/android/gms/internal/hp;": [
        "Lcom/google/android/gms/internal/hp;->a()V"
    ],
    "Lcom/google/android/gms/internal/gz;": [
        "Lcom/google/android/gms/internal/gz;->eZ()Lcom/google/android/gms/internal/gx;",
        "Lcom/google/android/gms/internal/gz;->getByteArray()[B",
        "Lcom/google/android/gms/internal/gz;->eY()Lcom/google/android/gms/internal/gx;"
    ],
    "Lcom/google/android/gms/internal/gy;": [
        "Lcom/google/android/gms/internal/gy;->aS()[Lcom/google/android/gms/internal/gx;",
        "Lcom/google/android/gms/internal/gy;->a()V",
        "Lcom/google/android/gms/internal/gy;->ak()Lcom/google/android/gms/internal/gx;"
    ],
    "Lcom/google/android/gms/internal/gx;": [
        "Lcom/google/android/gms/internal/gx;->eW()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gx;->a()Z",
        "Lcom/google/android/gms/internal/gx;->hasStartDate()Z",
        "Lcom/google/android/gms/internal/gx;->hasTarget()Z",
        "Lcom/google/android/gms/internal/gx;->hasId()Z",
        "Lcom/google/android/gms/internal/gx;->getResult()Lcom/google/android/gms/plus/model/moments/ItemScope;",
        "Lcom/google/android/gms/internal/gx;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/gx;->eY()Lcom/google/android/gms/internal/gx;",
        "Lcom/google/android/gms/internal/gx;->getType()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gx;->eX()Lcom/google/android/gms/internal/gv;",
        "Lcom/google/android/gms/internal/gx;->getStartDate()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gx;->getVersionCode()I",
        "Lcom/google/android/gms/internal/gx;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/gx;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/gx;->hasType()Z",
        "Lcom/google/android/gms/internal/gx;->getTarget()Lcom/google/android/gms/plus/model/moments/ItemScope;"
    ],
    "Lcom/google/android/gms/internal/de$a;": [
        "Lcom/google/android/gms/internal/de$a;->br()Lcom/google/android/gms/internal/de$a;"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->getIntrinsicWidth()I",
        "Landroid/graphics/drawable/Drawable;->setBounds()V",
        "Landroid/graphics/drawable/Drawable;->setState()Z",
        "Landroid/graphics/drawable/Drawable;->isStateful()Z",
        "Landroid/graphics/drawable/Drawable;->isAutoMirrored()Z",
        "Landroid/graphics/drawable/Drawable;->setColorFilter()V",
        "Landroid/graphics/drawable/Drawable;->getConstantState()Landroid/graphics/drawable/Drawable$ConstantState;",
        "Landroid/graphics/drawable/Drawable;->setAlpha()V",
        "Landroid/graphics/drawable/Drawable;->resolveOpacity()I",
        "Landroid/graphics/drawable/Drawable;->setCallback()V",
        "Landroid/graphics/drawable/Drawable;->getIntrinsicHeight()I",
        "Landroid/graphics/drawable/Drawable;->mutate()Landroid/graphics/drawable/Drawable;",
        "Landroid/graphics/drawable/Drawable;->jumpToCurrentState()V",
        "Landroid/graphics/drawable/Drawable;->getOpacity()I",
        "Landroid/graphics/drawable/Drawable;->setAutoMirrored()V",
        "Landroid/graphics/drawable/Drawable;->draw()V",
        "Landroid/graphics/drawable/Drawable;->getChangingConfigurations()I"
    ],
    "Lcom/google/android/gms/internal/de;": [
        "Lcom/google/android/gms/internal/de;->bq()Landroid/graphics/drawable/Drawable;",
        "Lcom/google/android/gms/internal/de;->startTransition()V",
        "Lcom/google/android/gms/internal/de;->getChangingConfigurations()I",
        "Lcom/google/android/gms/internal/de;->invalidateSelf()V",
        "Lcom/google/android/gms/internal/de;->getCallback()Landroid/graphics/drawable/Drawable$Callback;",
        "Lcom/google/android/gms/internal/de;->canConstantState()Z"
    ],
    "Landroid/graphics/drawable/Drawable$Callback;": [
        "Landroid/graphics/drawable/Drawable$Callback;->scheduleDrawable()V",
        "Landroid/graphics/drawable/Drawable$Callback;->unscheduleDrawable()V",
        "Landroid/graphics/drawable/Drawable$Callback;->invalidateDrawable()V"
    ],
    "Lcom/google/android/gms/internal/bi;": [
        "Lcom/google/android/gms/internal/bi;->a()Lcom/google/android/gms/internal/bj;",
        "Lcom/google/android/gms/internal/bi;->a()V",
        "Lcom/google/android/gms/internal/bi;->a()[Lcom/google/android/gms/internal/bj;"
    ],
    "Lcom/google/android/gms/internal/cx;": [
        "Lcom/google/android/gms/internal/cx;->a()Z",
        "Lcom/google/android/gms/internal/cx;->a()V"
    ],
    "Landroid/webkit/ConsoleMessage;": [
        "Landroid/webkit/ConsoleMessage;->sourceId()Ljava/lang/String;",
        "Landroid/webkit/ConsoleMessage;->message()Ljava/lang/String;",
        "Landroid/webkit/ConsoleMessage;->lineNumber()I",
        "Landroid/webkit/ConsoleMessage;->messageLevel()Landroid/webkit/ConsoleMessage$MessageLevel;"
    ],
    "Landroid/webkit/ConsoleMessage$MessageLevel;": [
        "Landroid/webkit/ConsoleMessage$MessageLevel;->ordinal()I"
    ],
    "Landroid/webkit/WebChromeClient;": [
        "Landroid/webkit/WebChromeClient;->onConsoleMessage()Z"
    ],
    "Landroid/webkit/WebView$WebViewTransport;": [
        "Landroid/webkit/WebView$WebViewTransport;->setWebView()V"
    ],
    "Landroid/os/Message;": [
        "Landroid/os/Message;->sendToTarget()V"
    ],
    "Landroid/webkit/WebStorage$QuotaUpdater;": [
        "Landroid/webkit/WebStorage$QuotaUpdater;->updateQuota()V"
    ],
    "Lcom/google/android/gms/internal/fd;": [
        "Lcom/google/android/gms/internal/fd;->setGravity()V",
        "Lcom/google/android/gms/internal/fd;->db()Landroid/os/IBinder;",
        "Lcom/google/android/gms/internal/fd;->a()V",
        "Lcom/google/android/gms/internal/fd;->cZ()V",
        "Lcom/google/android/gms/internal/fd;->a()Lcom/google/android/gms/internal/fd;",
        "Lcom/google/android/gms/internal/fd;->as()V",
        "Lcom/google/android/gms/internal/fd;->da()Landroid/os/Bundle;"
    ],
    "Lcom/google/android/gms/internal/fd$a;": [
        "Lcom/google/android/gms/internal/fd$a;->dc()Landroid/os/Bundle;"
    ],
    "Lcom/google/android/gms/internal/ex;": [
        "Lcom/google/android/gms/internal/ex;->getCurrentGame()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/internal/ex;->cM()V",
        "Lcom/google/android/gms/internal/ex;->getPlayerSearchIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->a()Lcom/google/android/gms/internal/fc;",
        "Lcom/google/android/gms/internal/ex;->getRealTimeSocketForParticipant()Lcom/google/android/gms/games/multiplayer/realtime/RealTimeSocket;",
        "Lcom/google/android/gms/internal/ex;->leaveRoom()V",
        "Lcom/google/android/gms/internal/ex;->getAchievementsIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/internal/ex;->getAllLeaderboardsIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->getCurrentPlayer()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/internal/ex;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/ex;->sendUnreliableRealTimeMessageToAll()I",
        "Lcom/google/android/gms/internal/ex;->a()Lcom/google/android/gms/internal/fe;",
        "Lcom/google/android/gms/internal/ex;->getSelectPlayersIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->getLeaderboardIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->registerInvitationListener()V",
        "Lcom/google/android/gms/internal/ex;->setViewForPopups()V",
        "Lcom/google/android/gms/internal/ex;->isConnectionFailedListenerRegistered()Z",
        "Lcom/google/android/gms/internal/ex;->getSettingsIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->isConnected()Z",
        "Lcom/google/android/gms/internal/ex;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/ex;->dismissTurnBasedMatch()V",
        "Lcom/google/android/gms/internal/ex;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/ex;->connect()V",
        "Lcom/google/android/gms/internal/ex;->getAppId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ex;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/ex;->getMatchInboxIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->getInvitationInboxIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->setGravityForPopups()V",
        "Lcom/google/android/gms/internal/ex;->a()I",
        "Lcom/google/android/gms/internal/ex;->joinRoom()V",
        "Lcom/google/android/gms/internal/ex;->isConnecting()Z",
        "Lcom/google/android/gms/internal/ex;->getCurrentPlayerId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ex;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/ex;->unregisterMatchUpdateListener()V",
        "Lcom/google/android/gms/internal/ex;->clearNotifications()V",
        "Lcom/google/android/gms/internal/ex;->getMaxTurnBasedMatchDataSize()I",
        "Lcom/google/android/gms/internal/ex;->a()Lcom/google/android/gms/games/multiplayer/realtime/Room;",
        "Lcom/google/android/gms/internal/ex;->registerMatchUpdateListener()V",
        "Lcom/google/android/gms/internal/ex;->createRoom()V",
        "Lcom/google/android/gms/internal/ex;->bA()[Ljava/lang/String;",
        "Lcom/google/android/gms/internal/ex;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/ex;->bB()V",
        "Lcom/google/android/gms/internal/ex;->getRealTimeWaitingRoomIntent()Landroid/content/Intent;",
        "Lcom/google/android/gms/internal/ex;->a()V",
        "Lcom/google/android/gms/internal/ex;->cL()V",
        "Lcom/google/android/gms/internal/ex;->disconnect()V",
        "Lcom/google/android/gms/internal/ex;->unregisterInvitationListener()V",
        "Lcom/google/android/gms/internal/ex;->getCurrentAccountName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ha$a;": [
        "Lcom/google/android/gms/internal/ha$a;->getVersionCode()I",
        "Lcom/google/android/gms/internal/ha$a;->eF()Ljava/util/Set;",
        "Lcom/google/android/gms/internal/ha$a;->getMin()I",
        "Lcom/google/android/gms/internal/ha$a;->getMax()I"
    ],
    "Lcom/google/android/gms/internal/hc;": [
        "Lcom/google/android/gms/internal/hc;->aU()[Lcom/google/android/gms/internal/ha$a;",
        "Lcom/google/android/gms/internal/hc;->am()Lcom/google/android/gms/internal/ha$a;"
    ],
    "Lcom/google/android/gms/internal/br;": [
        "Lcom/google/android/gms/internal/br;->a()Lcom/google/android/gms/internal/bs;",
        "Lcom/google/android/gms/internal/br;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/internal/br;->a()Z",
        "Lcom/google/android/gms/internal/br;->a()Lcom/google/android/gms/internal/bt;"
    ],
    "Lcom/google/android/gms/internal/br$a;": [
        "Lcom/google/android/gms/internal/br$a;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/bt;": [
        "Lcom/google/android/gms/internal/bt;->a()Landroid/os/IBinder;"
    ],
    "Lcom/google/android/gms/internal/bs$a;": [
        "Lcom/google/android/gms/internal/bs$a;->a()Lcom/google/android/gms/internal/bs;"
    ],
    "Lcom/google/android/gms/internal/bt$a;": [
        "Lcom/google/android/gms/internal/bt$a;->a()Lcom/google/android/gms/internal/bt;"
    ],
    "Lcom/google/android/gms/internal/hm$a;": [
        "Lcom/google/android/gms/internal/hm$a;->aw()Lcom/google/android/gms/internal/hm;"
    ],
    "Lcom/google/android/gms/internal/ho;": [
        "Lcom/google/android/gms/internal/ho;->unregisterConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/ho;->connect()V",
        "Lcom/google/android/gms/internal/ho;->isConnecting()Z",
        "Lcom/google/android/gms/internal/ho;->disconnect()V",
        "Lcom/google/android/gms/internal/ho;->changeMaskedWallet()V",
        "Lcom/google/android/gms/internal/ho;->fy()Landroid/os/Bundle;",
        "Lcom/google/android/gms/internal/ho;->isConnectionCallbacksRegistered()Z",
        "Lcom/google/android/gms/internal/ho;->isConnectionFailedListenerRegistered()Z",
        "Lcom/google/android/gms/internal/ho;->loadFullWallet()V",
        "Lcom/google/android/gms/internal/ho;->unregisterConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/ho;->checkForPreAuthorization()V",
        "Lcom/google/android/gms/internal/ho;->registerConnectionCallbacks()V",
        "Lcom/google/android/gms/internal/ho;->registerConnectionFailedListener()V",
        "Lcom/google/android/gms/internal/ho;->ay()Lcom/google/android/gms/internal/hm;",
        "Lcom/google/android/gms/internal/ho;->isConnected()Z",
        "Lcom/google/android/gms/internal/ho;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/internal/ho;->loadMaskedWallet()V",
        "Lcom/google/android/gms/internal/ho;->notifyTransactionStatus()V"
    ],
    "Lcom/google/android/gms/internal/hm;": [
        "Lcom/google/android/gms/internal/hm;->a()V"
    ],
    "Lcom/google/android/gms/internal/ho$a;": [
        "Lcom/google/android/gms/internal/ho$a;->a()V"
    ],
    "Lcom/google/android/gms/internal/gf;": [
        "Lcom/google/android/gms/internal/gf;->a()V"
    ],
    "Lcom/google/android/gms/internal/cm;": [
        "Lcom/google/android/gms/internal/cm;->execute()V"
    ],
    "Lcom/google/android/gms/internal/ht;": [
        "Lcom/google/android/gms/internal/ht;->a()V",
        "Lcom/google/android/gms/internal/ht;->cw()I",
        "Lcom/google/android/gms/internal/ht;->a()Lcom/google/android/gms/internal/ht;",
        "Lcom/google/android/gms/internal/ht;->a()[B"
    ],
    "Lcom/google/android/gms/internal/hu;": [
        "Lcom/google/android/gms/internal/hu;->ao()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hu;->ap()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hu;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hu;->a()V"
    ],
    "Lcom/google/android/gms/internal/f;": [
        "Lcom/google/android/gms/internal/f;->a()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/internal/f;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/f;->a()Ljava/lang/Long;",
        "Lcom/google/android/gms/internal/f;->a()V"
    ],
    "Lcom/google/android/gms/internal/n;": [
        "Lcom/google/android/gms/internal/n;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/n;->getKey()Ljava/lang/String;"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->getFD()Ljava/io/FileDescriptor;",
        "Ljava/io/FileOutputStream;->write()V",
        "Ljava/io/FileOutputStream;->close()V"
    ],
    "Ldalvik/system/DexClassLoader;": [
        "Ldalvik/system/DexClassLoader;->loadClass()Ljava/lang/Class;"
    ],
    "Lcom/google/android/gms/internal/be;": [
        "Lcom/google/android/gms/internal/be;->a()V",
        "Lcom/google/android/gms/internal/be;->a()Lcom/google/ads/mediation/MediationServerParameters;"
    ],
    "Lcom/google/ads/mediation/MediationInterstitialAdapter;": [
        "Lcom/google/ads/mediation/MediationInterstitialAdapter;->requestInterstitialAd()V",
        "Lcom/google/ads/mediation/MediationInterstitialAdapter;->showInterstitial()V"
    ],
    "Lcom/google/ads/mediation/MediationBannerAdapter;": [
        "Lcom/google/ads/mediation/MediationBannerAdapter;->requestBannerAd()V",
        "Lcom/google/ads/mediation/MediationBannerAdapter;->getBannerView()Landroid/view/View;"
    ],
    "Lcom/google/android/gms/internal/dj;": [
        "Lcom/google/android/gms/internal/dj;->bx()Ljava/lang/ClassLoader;",
        "Lcom/google/android/gms/internal/dj;->a()Z"
    ],
    "Landroid/net/UrlQuerySanitizer;": [
        "Landroid/net/UrlQuerySanitizer;->parseUrl()V",
        "Landroid/net/UrlQuerySanitizer;->setAllowUnregisteredParamaters()V",
        "Landroid/net/UrlQuerySanitizer;->getParameterList()Ljava/util/List;",
        "Landroid/net/UrlQuerySanitizer;->getAllButNulLegal()Landroid/net/UrlQuerySanitizer$ValueSanitizer;",
        "Landroid/net/UrlQuerySanitizer;->setUnregisteredParameterValueSanitizer()V"
    ],
    "Lcom/google/android/gms/internal/an;": [
        "Lcom/google/android/gms/internal/an;->a()V"
    ],
    "Lcom/google/android/gms/internal/cw$a;": [
        "Lcom/google/android/gms/internal/cw$a;->a()V"
    ],
    "Lcom/google/android/gms/games/multiplayer/realtime/b;": [
        "Lcom/google/android/gms/games/multiplayer/realtime/b;->getCount()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/b;->close()V",
        "Lcom/google/android/gms/games/multiplayer/realtime/b;->a()Lcom/google/android/gms/games/multiplayer/realtime/Room;",
        "Lcom/google/android/gms/games/multiplayer/realtime/b;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/games/multiplayer/realtime/Room;": [
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getAutoMatchWaitEstimateSeconds()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getDescription()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getCreationTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getStatus()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getCreatorId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getRoomId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->freeze()Ljava/lang/Object;",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/Room;->getParticipants()Ljava/util/ArrayList;"
    ],
    "Lcom/google/android/gms/internal/fc;": [
        "Lcom/google/android/gms/internal/fc;->a()V",
        "Lcom/google/android/gms/internal/fc;->getAppId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fc;->getCurrentAccountName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fc;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fc;->clearNotifications()V",
        "Lcom/google/android/gms/internal/fc;->getCurrentPlayerId()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/fc;->cV()Lcom/google/android/gms/common/data/DataHolder;",
        "Lcom/google/android/gms/internal/fc;->a()I",
        "Lcom/google/android/gms/internal/fc;->cN()V",
        "Lcom/google/android/gms/internal/fc;->bc()Landroid/os/Bundle;",
        "Lcom/google/android/gms/internal/fc;->getMaxTurnBasedMatchDataSize()I",
        "Lcom/google/android/gms/internal/fc;->cX()Lcom/google/android/gms/common/data/DataHolder;"
    ],
    "Lcom/google/android/gms/internal/fc$a;": [
        "Lcom/google/android/gms/internal/fc$a;->a()Lcom/google/android/gms/internal/fc;"
    ],
    "Lcom/google/android/gms/games/leaderboard/LeaderboardScoreBuffer;": [
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScoreBuffer;->de()Lcom/google/android/gms/games/leaderboard/c;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScoreBuffer;->get()Lcom/google/android/gms/games/leaderboard/LeaderboardScore;"
    ],
    "Lcom/google/android/gms/games/leaderboard/c;": [
        "Lcom/google/android/gms/games/leaderboard/c;->df()Landroid/os/Bundle;"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchConfig;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchConfig;->getInvitedPlayerIds()[Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchConfig;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchConfig;->createAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchConfig;->getAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchConfig;->getMinPlayers()I"
    ],
    "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;": [
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getRoomUpdateListener()Lcom/google/android/gms/games/multiplayer/realtime/RoomUpdateListener;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->isSocketEnabled()Z",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getRoomStatusUpdateListener()Lcom/google/android/gms/games/multiplayer/realtime/RoomStatusUpdateListener;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->createAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getInvitationId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getMessageReceivedListener()Lcom/google/android/gms/games/multiplayer/realtime/RealTimeMessageReceivedListener;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomConfig;->getInvitedPlayerIds()[Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ez;": [
        "Lcom/google/android/gms/internal/ez;->a()Landroid/content/Intent;"
    ],
    "Lcom/google/android/gms/games/GameBuffer;": [
        "Lcom/google/android/gms/games/GameBuffer;->get()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/games/GameBuffer;->close()V",
        "Lcom/google/android/gms/games/GameBuffer;->getCount()I"
    ],
    "Lcom/google/android/gms/games/Game;": [
        "Lcom/google/android/gms/games/Game;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getLeaderboardCount()I",
        "Lcom/google/android/gms/games/Game;->getInstancePackageName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getPrimaryCategory()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getApplicationId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getDescription()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getFeaturedImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/Game;->getAchievementTotalCount()I",
        "Lcom/google/android/gms/games/Game;->isTurnBasedMultiplayerEnabled()Z",
        "Lcom/google/android/gms/games/Game;->isRealTimeMultiplayerEnabled()Z",
        "Lcom/google/android/gms/games/Game;->getDeveloperName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/Game;->isPlayEnabledGame()Z",
        "Lcom/google/android/gms/games/Game;->freeze()Ljava/lang/Object;",
        "Lcom/google/android/gms/games/Game;->getSecondaryCategory()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Game;->getGameplayAclStatus()I",
        "Lcom/google/android/gms/games/Game;->isInstanceInstalled()Z",
        "Lcom/google/android/gms/games/Game;->getHiResImageUri()Landroid/net/Uri;"
    ],
    "Lcom/google/android/gms/games/PlayerBuffer;": [
        "Lcom/google/android/gms/games/PlayerBuffer;->getCount()I",
        "Lcom/google/android/gms/games/PlayerBuffer;->get()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/games/PlayerBuffer;->close()V"
    ],
    "Lcom/google/android/gms/games/Player;": [
        "Lcom/google/android/gms/games/Player;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/Player;->getRetrievedTimestamp()J",
        "Lcom/google/android/gms/games/Player;->freeze()Ljava/lang/Object;",
        "Lcom/google/android/gms/games/Player;->getHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/Player;->getPlayerId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/Player;->getDisplayName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/multiplayer/ParticipantUtils;": [
        "Lcom/google/android/gms/games/multiplayer/ParticipantUtils;->a()Z"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setImageDrawable()V",
        "Landroid/widget/ImageView;->setId()V",
        "Landroid/widget/ImageView;->setVisibility()V",
        "Landroid/widget/ImageView;->setImageURI()V",
        "Landroid/widget/ImageView;->setImageResource()V",
        "Landroid/widget/ImageView;->setOnClickListener()V",
        "Landroid/widget/ImageView;->onDraw()V",
        "Landroid/widget/ImageView;->setLayoutParams()V",
        "Landroid/widget/ImageView;->setScaleType()V",
        "Landroid/widget/ImageView;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->setBitmap()V",
        "Landroid/graphics/Canvas;->drawRoundRect()V",
        "Landroid/graphics/Canvas;->translate()V",
        "Landroid/graphics/Canvas;->drawText()V",
        "Landroid/graphics/Canvas;->rotate()V",
        "Landroid/graphics/Canvas;->getHeight()I",
        "Landroid/graphics/Canvas;->scale()V",
        "Landroid/graphics/Canvas;->drawColor()V",
        "Landroid/graphics/Canvas;->drawArc()V",
        "Landroid/graphics/Canvas;->drawOval()V",
        "Landroid/graphics/Canvas;->restoreToCount()V",
        "Landroid/graphics/Canvas;->getClipBounds()Z",
        "Landroid/graphics/Canvas;->clipRect()Z",
        "Landroid/graphics/Canvas;->save()I",
        "Landroid/graphics/Canvas;->getWidth()I",
        "Landroid/graphics/Canvas;->drawRect()V",
        "Landroid/graphics/Canvas;->drawPath()V",
        "Landroid/graphics/Canvas;->drawCircle()V"
    ],
    "Lcom/google/android/gms/internal/cq;": [
        "Lcom/google/android/gms/internal/cq;->start()V"
    ],
    "Lcom/google/android/gms/internal/ab;": [
        "Lcom/google/android/gms/internal/ab;->onAdClosed()V",
        "Lcom/google/android/gms/internal/ab;->onAdLeftApplication()V",
        "Lcom/google/android/gms/internal/ab;->onAdLoaded()V",
        "Lcom/google/android/gms/internal/ab;->onAdFailedToLoad()V",
        "Lcom/google/android/gms/internal/ab;->onAdOpened()V"
    ],
    "Landroid/widget/ViewSwitcher;": [
        "Landroid/widget/ViewSwitcher;->getWidth()I",
        "Landroid/widget/ViewSwitcher;->setMinimumHeight()V",
        "Landroid/widget/ViewSwitcher;->getLocationOnScreen()V",
        "Landroid/widget/ViewSwitcher;->showNext()V",
        "Landroid/widget/ViewSwitcher;->removeAllViews()V",
        "Landroid/widget/ViewSwitcher;->setMinimumWidth()V",
        "Landroid/widget/ViewSwitcher;->setVisibility()V",
        "Landroid/widget/ViewSwitcher;->getHeight()I",
        "Landroid/widget/ViewSwitcher;->isShown()Z",
        "Landroid/widget/ViewSwitcher;->requestLayout()V",
        "Landroid/widget/ViewSwitcher;->removeView()V",
        "Landroid/widget/ViewSwitcher;->getParent()Landroid/view/ViewParent;",
        "Landroid/widget/ViewSwitcher;->addView()V",
        "Landroid/widget/ViewSwitcher;->getChildCount()I",
        "Landroid/widget/ViewSwitcher;->getNextView()Landroid/view/View;"
    ],
    "Lcom/google/android/gms/internal/r;": [
        "Lcom/google/android/gms/internal/r;->a()V",
        "Lcom/google/android/gms/internal/r;->stopLoading()V",
        "Lcom/google/android/gms/internal/r;->a()Lcom/google/android/gms/internal/bz$a;",
        "Lcom/google/android/gms/internal/r;->a()Z"
    ],
    "Lcom/google/android/gms/internal/ck;": [
        "Lcom/google/android/gms/internal/ck;->ar()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/s;": [
        "Lcom/google/android/gms/internal/s;->a()V",
        "Lcom/google/android/gms/internal/s;->cancel()V"
    ],
    "Lcom/google/android/gms/internal/aw;": [
        "Lcom/google/android/gms/internal/aw;->a()V"
    ],
    "Lcom/google/android/gms/internal/bu;": [
        "Lcom/google/android/gms/internal/bu;->a()Lcom/google/android/gms/internal/cl;"
    ],
    "Lcom/google/android/gms/internal/ae;": [
        "Lcom/google/android/gms/internal/ae;->onAppEvent()V"
    ],
    "Lcom/google/android/gms/internal/cc;": [
        "Lcom/google/android/gms/internal/cc;->a()Lcom/google/android/gms/internal/cb;",
        "Lcom/google/android/gms/internal/cc;->a()V",
        "Lcom/google/android/gms/internal/cc;->a()[Lcom/google/android/gms/internal/cb;"
    ],
    "Lcom/google/android/gms/internal/fz;": [
        "Lcom/google/android/gms/internal/fz;->dD()[F",
        "Lcom/google/android/gms/internal/fz;->dC()[Lcom/google/android/gms/internal/gb;"
    ],
    "Lcom/google/android/gms/internal/hl;": [
        "Lcom/google/android/gms/internal/hl;->getUrl()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hl;->fu()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/internal/hl;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hl;->fx()Lcom/google/android/gms/plus/model/people/Person;",
        "Lcom/google/android/gms/internal/hl;->getImage()Lcom/google/android/gms/plus/model/people/Person$Image;",
        "Lcom/google/android/gms/internal/hl;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/internal/hl;->getObjectType()I",
        "Lcom/google/android/gms/internal/hl;->fw()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/internal/hl;->fv()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/internal/hl;->getId()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ha$e;": [
        "Lcom/google/android/gms/internal/ha$e;->al()I"
    ],
    "Lcom/google/android/gms/internal/dm;": [
        "Lcom/google/android/gms/internal/dm;->a()Z",
        "Lcom/google/android/gms/internal/dm;->a()V",
        "Lcom/google/android/gms/internal/dm;->a()Lcom/google/android/gms/internal/dm;"
    ],
    "Lcom/google/android/gms/internal/dk$b;": [
        "Lcom/google/android/gms/internal/dk$b;->bE()V"
    ],
    "Lcom/google/android/gms/internal/dq$a;": [
        "Lcom/google/android/gms/internal/dq$a;->a()Lcom/google/android/gms/internal/dq;"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->set()V",
        "Ljava/lang/reflect/Array;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->getLength()I"
    ],
    "Ljava/lang/IllegalAccessException;": [
        "Ljava/lang/IllegalAccessException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/IllegalAccessException;->toString()Ljava/lang/String;",
        "Ljava/lang/IllegalAccessException;->printStackTrace()V"
    ],
    "Lcom/google/android/gms/internal/av;": [
        "Lcom/google/android/gms/internal/av;->a()V"
    ],
    "Lcom/google/android/gms/internal/ay$a;": [
        "Lcom/google/android/gms/internal/ay$a;->a()V"
    ],
    "Lcom/google/android/gms/internal/g;": [
        "Lcom/google/android/gms/internal/g;->a()Lcom/google/android/gms/internal/g$a;",
        "Lcom/google/android/gms/internal/g;->a()V"
    ],
    "Lcom/google/android/gms/internal/g$a;": [
        "Lcom/google/android/gms/internal/g$a;->isLimitAdTrackingEnabled()Z",
        "Lcom/google/android/gms/internal/g$a;->getId()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/ads/identifier/AdvertisingIdClient;": [
        "Lcom/google/android/gms/ads/identifier/AdvertisingIdClient;->a()Lcom/google/android/gms/common/a;",
        "Lcom/google/android/gms/ads/identifier/AdvertisingIdClient;->getAdvertisingIdInfo()Lcom/google/android/gms/ads/identifier/AdvertisingIdClient$Info;"
    ],
    "Lcom/google/android/gms/ads/identifier/AdvertisingIdClient$Info;": [
        "Lcom/google/android/gms/ads/identifier/AdvertisingIdClient$Info;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/ads/identifier/AdvertisingIdClient$Info;->isLimitAdTrackingEnabled()Z"
    ],
    "Lcom/google/android/gms/internal/cp;": [
        "Lcom/google/android/gms/internal/cp;->a()V",
        "Lcom/google/android/gms/internal/cp;->getDefaultUserAgent()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/cv$a;": [
        "Lcom/google/android/gms/internal/cv$a;->setBaseContext()V"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getMode()I",
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->makeMeasureSpec()I"
    ],
    "Lcom/google/android/gms/internal/ep;": [
        "Lcom/google/android/gms/internal/ep;->a()Z"
    ],
    "Lcom/google/android/gms/internal/cz;": [
        "Lcom/google/android/gms/internal/cz;->a()V"
    ],
    "Lcom/google/android/gms/internal/bq;": [
        "Lcom/google/android/gms/internal/bq;->a()V"
    ],
    "Landroid/content/ActivityNotFoundException;": [
        "Landroid/content/ActivityNotFoundException;->printStackTrace()V",
        "Landroid/content/ActivityNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/nio/CharBuffer;": [
        "Ljava/nio/CharBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/CharBuffer;->allocate()Ljava/nio/CharBuffer;"
    ],
    "Ljava/lang/Readable;": [
        "Ljava/lang/Readable;->read()I"
    ],
    "Ljava/lang/ClassCastException;": [
        "Ljava/lang/ClassCastException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/dz;": [
        "Lcom/google/android/gms/internal/dz;->bL()Lcom/google/android/gms/internal/eb;",
        "Lcom/google/android/gms/internal/dz;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/internal/ao;": [
        "Lcom/google/android/gms/internal/ao;->a()I",
        "Lcom/google/android/gms/internal/ao;->a()Z"
    ],
    "Lcom/google/android/gms/maps/MapFragment;": [
        "Lcom/google/android/gms/maps/MapFragment;->setArguments()V",
        "Lcom/google/android/gms/maps/MapFragment;->ea()Lcom/google/android/gms/maps/internal/IMapFragmentDelegate;"
    ],
    "Lcom/google/android/gms/maps/MapFragment$b;": [
        "Lcom/google/android/gms/maps/MapFragment$b;->a()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onResume()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onDestroyView()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onCreate()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->cG()Lcom/google/android/gms/dynamic/LifecycleDelegate;",
        "Lcom/google/android/gms/maps/MapFragment$b;->onCreateView()Landroid/view/View;",
        "Lcom/google/android/gms/maps/MapFragment$b;->onDestroy()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onInflate()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onSaveInstanceState()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onPause()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->onLowMemory()V",
        "Lcom/google/android/gms/maps/MapFragment$b;->eb()V"
    ],
    "Lcom/google/android/gms/maps/MapFragment$a;": [
        "Lcom/google/android/gms/maps/MapFragment$a;->ea()Lcom/google/android/gms/maps/internal/IMapFragmentDelegate;"
    ],
    "Lcom/google/android/gms/maps/internal/IMapFragmentDelegate;": [
        "Lcom/google/android/gms/maps/internal/IMapFragmentDelegate;->getMap()Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;"
    ],
    "Lcom/google/android/gms/maps/GoogleMap;": [
        "Lcom/google/android/gms/maps/GoogleMap;->dR()Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;",
        "Lcom/google/android/gms/maps/GoogleMap;->snapshot()V"
    ],
    "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;": [
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->addCircle()Lcom/google/android/gms/maps/model/internal/b;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setMyLocationEnabled()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnInfoWindowClickListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setIndoorEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getMaxZoomLevel()F",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->isBuildingsEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getMyLocation()Landroid/location/Location;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->moveCamera()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setBuildingsEnabled()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->snapshot()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMapLongClickListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->asBinder()Landroid/os/IBinder;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->isTrafficEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setMapType()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMyLocationChangeListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->isMyLocationEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->animateCameraWithDurationAndCallback()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->addPolygon()Lcom/google/android/gms/maps/model/internal/e;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getCameraPosition()Lcom/google/android/gms/maps/model/CameraPosition;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->addMarker()Lcom/google/android/gms/maps/model/internal/d;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->animateCameraWithCallback()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMapClickListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->animateCamera()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMarkerDragListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setPadding()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getProjection()Lcom/google/android/gms/maps/internal/IProjectionDelegate;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->isIndoorEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->stopAnimation()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getUiSettings()Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnCameraChangeListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->addGroundOverlay()Lcom/google/android/gms/maps/model/internal/c;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMapLoadedCallback()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMarkerClickListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setInfoWindowAdapter()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getMinZoomLevel()F",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setTrafficEnabled()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->addPolyline()Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setOnMyLocationButtonClickListener()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->setLocationSource()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->clear()V",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->addTileOverlay()Lcom/google/android/gms/maps/model/internal/f;",
        "Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getMapType()I"
    ],
    "Landroid/app/Fragment;": [
        "Landroid/app/Fragment;->onDestroyView()V",
        "Landroid/app/Fragment;->onPause()V",
        "Landroid/app/Fragment;->onResume()V",
        "Landroid/app/Fragment;->onAttach()V",
        "Landroid/app/Fragment;->setArguments()V",
        "Landroid/app/Fragment;->onLowMemory()V",
        "Landroid/app/Fragment;->onInflate()V",
        "Landroid/app/Fragment;->onSaveInstanceState()V",
        "Landroid/app/Fragment;->onCreate()V",
        "Landroid/app/Fragment;->onActivityCreated()V",
        "Landroid/app/Fragment;->onDestroy()V"
    ],
    "Lcom/google/android/gms/maps/GoogleMapOptions;": [
        "Lcom/google/android/gms/maps/GoogleMapOptions;->createFromAttributes()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dZ()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->tiltGesturesEnabled()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->zoomGesturesEnabled()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dY()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->getCamera()Lcom/google/android/gms/maps/model/CameraPosition;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->camera()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dT()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->getVersionCode()I",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dX()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->compassEnabled()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dU()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dV()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->scrollGesturesEnabled()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dS()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->useViewLifecycleInFragment()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->zoomControlsEnabled()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->getMapType()I",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->zOrderOnTop()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->mapType()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->dW()B",
        "Lcom/google/android/gms/maps/GoogleMapOptions;->rotateGesturesEnabled()Lcom/google/android/gms/maps/GoogleMapOptions;"
    ],
    "Lcom/google/android/gms/maps/GoogleMapOptionsCreator;": [
        "Lcom/google/android/gms/maps/GoogleMapOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/GoogleMapOptions;",
        "Lcom/google/android/gms/maps/GoogleMapOptionsCreator;->a()V",
        "Lcom/google/android/gms/maps/GoogleMapOptionsCreator;->newArray()[Lcom/google/android/gms/maps/GoogleMapOptions;"
    ],
    "Lcom/google/android/gms/maps/CameraUpdate;": [
        "Lcom/google/android/gms/maps/CameraUpdate;->dP()Lcom/google/android/gms/dynamic/b;"
    ],
    "Lcom/google/android/gms/maps/CameraUpdateFactory;": [
        "Lcom/google/android/gms/maps/CameraUpdateFactory;->dQ()Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;",
        "Lcom/google/android/gms/maps/CameraUpdateFactory;->a()V"
    ],
    "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;": [
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->newLatLngBounds()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->zoomIn()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->newLatLngBoundsWithSize()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->scrollBy()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->zoomTo()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->zoomByWithFocus()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->newLatLngZoom()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->zoomOut()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->newLatLng()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->zoomBy()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;->newCameraPosition()Lcom/google/android/gms/dynamic/b;"
    ],
    "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;": [
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isTiltGesturesEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setZoomControlsEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isCompassEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isMyLocationButtonEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setCompassEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setMyLocationButtonEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setTiltGesturesEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isScrollGesturesEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setRotateGesturesEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isZoomGesturesEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setScrollGesturesEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isZoomControlsEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setAllGesturesEnabled()V",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->isRotateGesturesEnabled()Z",
        "Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;->setZoomGesturesEnabled()V"
    ],
    "Lcom/google/android/gms/maps/MapView$b;": [
        "Lcom/google/android/gms/maps/MapView$b;->onSaveInstanceState()V",
        "Lcom/google/android/gms/maps/MapView$b;->cG()Lcom/google/android/gms/dynamic/LifecycleDelegate;",
        "Lcom/google/android/gms/maps/MapView$b;->onResume()V",
        "Lcom/google/android/gms/maps/MapView$b;->a()V",
        "Lcom/google/android/gms/maps/MapView$b;->onCreate()V",
        "Lcom/google/android/gms/maps/MapView$b;->onDestroy()V",
        "Lcom/google/android/gms/maps/MapView$b;->onPause()V",
        "Lcom/google/android/gms/maps/MapView$b;->eb()V",
        "Lcom/google/android/gms/maps/MapView$b;->onLowMemory()V"
    ],
    "Lcom/google/android/gms/maps/MapView$a;": [
        "Lcom/google/android/gms/maps/MapView$a;->ec()Lcom/google/android/gms/maps/internal/IMapViewDelegate;"
    ],
    "Lcom/google/android/gms/maps/internal/IMapViewDelegate;": [
        "Lcom/google/android/gms/maps/internal/IMapViewDelegate;->getMap()Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;"
    ],
    "Lcom/google/android/gms/maps/internal/a;": [
        "Lcom/google/android/gms/maps/internal/a;->a()Ljava/lang/Boolean;",
        "Lcom/google/android/gms/maps/internal/a;->a()B"
    ],
    "Lcom/google/android/gms/maps/model/CameraPosition;": [
        "Lcom/google/android/gms/maps/model/CameraPosition;->createFromAttributes()Lcom/google/android/gms/maps/model/CameraPosition;",
        "Lcom/google/android/gms/maps/model/CameraPosition;->getVersionCode()I",
        "Lcom/google/android/gms/maps/model/CameraPosition;->builder()Lcom/google/android/gms/maps/model/CameraPosition$Builder;"
    ],
    "Lcom/google/android/gms/maps/internal/r;": [
        "Lcom/google/android/gms/maps/internal/r;->eh()Z"
    ],
    "Lcom/google/android/gms/maps/a;": [
        "Lcom/google/android/gms/maps/a;->a()V"
    ],
    "Lcom/google/android/gms/maps/internal/q;": [
        "Lcom/google/android/gms/maps/internal/q;->a()V",
        "Lcom/google/android/gms/maps/internal/q;->ef()Z",
        "Lcom/google/android/gms/maps/internal/q;->a()Lcom/google/android/gms/maps/internal/c;",
        "Lcom/google/android/gms/maps/internal/q;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/maps/internal/q;->eg()Ljava/lang/Class;",
        "Lcom/google/android/gms/maps/internal/q;->getRemoteContext()Landroid/content/Context;"
    ],
    "Lcom/google/android/gms/maps/internal/c;": [
        "Lcom/google/android/gms/maps/internal/c;->a()V",
        "Lcom/google/android/gms/maps/internal/c;->ee()Lcom/google/android/gms/maps/model/internal/a;",
        "Lcom/google/android/gms/maps/internal/c;->ed()Lcom/google/android/gms/maps/internal/ICameraUpdateFactoryDelegate;"
    ],
    "Lcom/google/android/gms/maps/model/BitmapDescriptorFactory;": [
        "Lcom/google/android/gms/maps/model/BitmapDescriptorFactory;->ei()Lcom/google/android/gms/maps/model/internal/a;",
        "Lcom/google/android/gms/maps/model/BitmapDescriptorFactory;->a()V"
    ],
    "Lcom/google/android/gms/maps/internal/IProjectionDelegate;": [
        "Lcom/google/android/gms/maps/internal/IProjectionDelegate;->getVisibleRegion()Lcom/google/android/gms/maps/model/VisibleRegion;",
        "Lcom/google/android/gms/maps/internal/IProjectionDelegate;->toScreenLocation()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/internal/IProjectionDelegate;->fromScreenLocation()Lcom/google/android/gms/maps/model/LatLng;"
    ],
    "Lcom/google/android/gms/maps/SupportMapFragment;": [
        "Lcom/google/android/gms/maps/SupportMapFragment;->setArguments()V",
        "Lcom/google/android/gms/maps/SupportMapFragment;->ea()Lcom/google/android/gms/maps/internal/IMapFragmentDelegate;"
    ],
    "Lcom/google/android/gms/maps/SupportMapFragment$b;": [
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onInflate()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onDestroy()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->a()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onLowMemory()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onResume()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onSaveInstanceState()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->eb()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->cG()Lcom/google/android/gms/dynamic/LifecycleDelegate;",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onCreate()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onDestroyView()V",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onCreateView()Landroid/view/View;",
        "Lcom/google/android/gms/maps/SupportMapFragment$b;->onPause()V"
    ],
    "Lcom/google/android/gms/maps/SupportMapFragment$a;": [
        "Lcom/google/android/gms/maps/SupportMapFragment$a;->ea()Lcom/google/android/gms/maps/internal/IMapFragmentDelegate;"
    ],
    "Landroid/support/v4/app/Fragment;": [
        "Landroid/support/v4/app/Fragment;->getResources()Landroid/content/res/Resources;",
        "Landroid/support/v4/app/Fragment;->performSaveInstanceState()V",
        "Landroid/support/v4/app/Fragment;->onConfigurationChanged()V",
        "Landroid/support/v4/app/Fragment;->performCreate()V",
        "Landroid/support/v4/app/Fragment;->performReallyStop()V",
        "Landroid/support/v4/app/Fragment;->onDestroyView()V",
        "Landroid/support/v4/app/Fragment;->onResume()V",
        "Landroid/support/v4/app/Fragment;->onViewCreated()V",
        "Landroid/support/v4/app/Fragment;->performDestroyView()V",
        "Landroid/support/v4/app/Fragment;->performPrepareOptionsMenu()Z",
        "Landroid/support/v4/app/Fragment;->performStart()V",
        "Landroid/support/v4/app/Fragment;->onCreateAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/Fragment;->setArguments()V",
        "Landroid/support/v4/app/Fragment;->isSupportFragmentClass()Z",
        "Landroid/support/v4/app/Fragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Landroid/support/v4/app/Fragment;->onContextItemSelected()Z",
        "Landroid/support/v4/app/Fragment;->setMenuVisibility()V",
        "Landroid/support/v4/app/Fragment;->isInBackStack()Z",
        "Landroid/support/v4/app/Fragment;->findFragmentByWho()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/Fragment;->getLayoutInflater()Landroid/view/LayoutInflater;",
        "Landroid/support/v4/app/Fragment;->onStop()V",
        "Landroid/support/v4/app/Fragment;->setUserVisibleHint()V",
        "Landroid/support/v4/app/Fragment;->onHiddenChanged()V",
        "Landroid/support/v4/app/Fragment;->performStop()V",
        "Landroid/support/v4/app/Fragment;->onPause()V",
        "Landroid/support/v4/app/Fragment;->performOptionsMenuClosed()V",
        "Landroid/support/v4/app/Fragment;->performCreateOptionsMenu()Z",
        "Landroid/support/v4/app/Fragment;->onLowMemory()V",
        "Landroid/support/v4/app/Fragment;->performCreateView()Landroid/view/View;",
        "Landroid/support/v4/app/Fragment;->onActivityCreated()V",
        "Landroid/support/v4/app/Fragment;->dump()V",
        "Landroid/support/v4/app/Fragment;->onCreateView()Landroid/view/View;",
        "Landroid/support/v4/app/Fragment;->onActivityResult()V",
        "Landroid/support/v4/app/Fragment;->performLowMemory()V",
        "Landroid/support/v4/app/Fragment;->isAdded()Z",
        "Landroid/support/v4/app/Fragment;->onSaveInstanceState()V",
        "Landroid/support/v4/app/Fragment;->restoreViewState()V",
        "Landroid/support/v4/app/Fragment;->instantiateChildFragmentManager()V",
        "Landroid/support/v4/app/Fragment;->onDestroyOptionsMenu()V",
        "Landroid/support/v4/app/Fragment;->performOptionsItemSelected()Z",
        "Landroid/support/v4/app/Fragment;->onOptionsItemSelected()Z",
        "Landroid/support/v4/app/Fragment;->onViewStateRestored()V",
        "Landroid/support/v4/app/Fragment;->performContextItemSelected()Z",
        "Landroid/support/v4/app/Fragment;->toString()Ljava/lang/String;",
        "Landroid/support/v4/app/Fragment;->performConfigurationChanged()V",
        "Landroid/support/v4/app/Fragment;->setIndex()V",
        "Landroid/support/v4/app/Fragment;->onStart()V",
        "Landroid/support/v4/app/Fragment;->onDestroy()V",
        "Landroid/support/v4/app/Fragment;->getView()Landroid/view/View;",
        "Landroid/support/v4/app/Fragment;->onDetach()V",
        "Landroid/support/v4/app/Fragment;->performDestroy()V",
        "Landroid/support/v4/app/Fragment;->isHidden()Z",
        "Landroid/support/v4/app/Fragment;->onCreateOptionsMenu()V",
        "Landroid/support/v4/app/Fragment;->onOptionsMenuClosed()V",
        "Landroid/support/v4/app/Fragment;->performPause()V",
        "Landroid/support/v4/app/Fragment;->onInflate()V",
        "Landroid/support/v4/app/Fragment;->onCreate()V",
        "Landroid/support/v4/app/Fragment;->performResume()V",
        "Landroid/support/v4/app/Fragment;->instantiate()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/Fragment;->onAttach()V",
        "Landroid/support/v4/app/Fragment;->isDetached()Z",
        "Landroid/support/v4/app/Fragment;->performActivityCreated()V",
        "Landroid/support/v4/app/Fragment;->setInitialSavedState()V",
        "Landroid/support/v4/app/Fragment;->onPrepareOptionsMenu()V"
    ],
    "Lcom/google/android/gms/maps/internal/c$a;": [
        "Lcom/google/android/gms/maps/internal/c$a;->a()Lcom/google/android/gms/maps/internal/c;"
    ],
    "Lcom/google/android/gms/maps/model/LatLngBounds;": [
        "Lcom/google/android/gms/maps/model/LatLngBounds;->equals()Z",
        "Lcom/google/android/gms/maps/model/LatLngBounds;->a()D",
        "Lcom/google/android/gms/maps/model/LatLngBounds;->getVersionCode()I",
        "Lcom/google/android/gms/maps/model/LatLngBounds;->a()Z"
    ],
    "Lcom/google/android/gms/maps/model/LatLngBoundsCreator;": [
        "Lcom/google/android/gms/maps/model/LatLngBoundsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/LatLngBounds;",
        "Lcom/google/android/gms/maps/model/LatLngBoundsCreator;->a()V",
        "Lcom/google/android/gms/maps/model/LatLngBoundsCreator;->newArray()[Lcom/google/android/gms/maps/model/LatLngBounds;"
    ],
    "Lcom/google/android/gms/maps/model/LatLng;": [
        "Lcom/google/android/gms/maps/model/LatLng;->equals()Z",
        "Lcom/google/android/gms/maps/model/LatLng;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/maps/model/LatLngCreator;": [
        "Lcom/google/android/gms/maps/model/LatLngCreator;->a()V",
        "Lcom/google/android/gms/maps/model/LatLngCreator;->newArray()[Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/LatLngCreator;->createFromParcel()Lcom/google/android/gms/maps/model/LatLng;"
    ],
    "Lcom/google/android/gms/maps/model/PolygonOptions;": [
        "Lcom/google/android/gms/maps/model/PolygonOptions;->getPoints()Ljava/util/List;",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->isGeodesic()Z",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->el()Ljava/util/List;",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->getStrokeWidth()F",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->getFillColor()I",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->getVersionCode()I",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->getStrokeColor()I",
        "Lcom/google/android/gms/maps/model/PolygonOptions;->getZIndex()F"
    ],
    "Lcom/google/android/gms/maps/model/VisibleRegion;": [
        "Lcom/google/android/gms/maps/model/VisibleRegion;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/maps/model/PolylineOptions;": [
        "Lcom/google/android/gms/maps/model/PolylineOptions;->getWidth()F",
        "Lcom/google/android/gms/maps/model/PolylineOptions;->isGeodesic()Z",
        "Lcom/google/android/gms/maps/model/PolylineOptions;->getColor()I",
        "Lcom/google/android/gms/maps/model/PolylineOptions;->getPoints()Ljava/util/List;",
        "Lcom/google/android/gms/maps/model/PolylineOptions;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/PolylineOptions;->getVersionCode()I",
        "Lcom/google/android/gms/maps/model/PolylineOptions;->isVisible()Z"
    ],
    "Lcom/google/android/gms/maps/model/PolylineOptionsCreator;": [
        "Lcom/google/android/gms/maps/model/PolylineOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/PolylineOptions;",
        "Lcom/google/android/gms/maps/model/PolylineOptionsCreator;->newArray()[Lcom/google/android/gms/maps/model/PolylineOptions;",
        "Lcom/google/android/gms/maps/model/PolylineOptionsCreator;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;": [
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->remove()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->setGeodesic()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->setVisible()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->equalsRemote()Z",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->setZIndex()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->setPoints()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->isGeodesic()Z",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->getWidth()F",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->getColor()I",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->setColor()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->setWidth()V",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->getPoints()Ljava/util/List;",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/IPolylineDelegate;->hashCodeRemote()I"
    ],
    "Lcom/google/android/gms/maps/model/PolygonOptionsCreator;": [
        "Lcom/google/android/gms/maps/model/PolygonOptionsCreator;->newArray()[Lcom/google/android/gms/maps/model/PolygonOptions;",
        "Lcom/google/android/gms/maps/model/PolygonOptionsCreator;->a()V",
        "Lcom/google/android/gms/maps/model/PolygonOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/PolygonOptions;"
    ],
    "Lcom/google/android/gms/maps/model/internal/f;": [
        "Lcom/google/android/gms/maps/model/internal/f;->hashCodeRemote()I",
        "Lcom/google/android/gms/maps/model/internal/f;->setZIndex()V",
        "Lcom/google/android/gms/maps/model/internal/f;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/f;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/internal/f;->remove()V",
        "Lcom/google/android/gms/maps/model/internal/f;->setFadeIn()V",
        "Lcom/google/android/gms/maps/model/internal/f;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/internal/f;->a()Z",
        "Lcom/google/android/gms/maps/model/internal/f;->clearTileCache()V",
        "Lcom/google/android/gms/maps/model/internal/f;->getFadeIn()Z",
        "Lcom/google/android/gms/maps/model/internal/f;->setVisible()V"
    ],
    "Lcom/google/android/gms/maps/model/MarkerOptions;": [
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getInfoWindowAnchorV()F",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getPosition()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getInfoWindowAnchorU()F",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->ek()Landroid/os/IBinder;",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getTitle()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getSnippet()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getAnchorV()F",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getVersionCode()I",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getRotation()F",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getAlpha()F",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->getAnchorU()F",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->isDraggable()Z",
        "Lcom/google/android/gms/maps/model/MarkerOptions;->isFlat()Z"
    ],
    "Lcom/google/android/gms/maps/model/TileOverlayOptions;": [
        "Lcom/google/android/gms/maps/model/TileOverlayOptions;->getFadeIn()Z",
        "Lcom/google/android/gms/maps/model/TileOverlayOptions;->em()Landroid/os/IBinder;",
        "Lcom/google/android/gms/maps/model/TileOverlayOptions;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/TileOverlayOptions;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/TileOverlayOptions;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/maps/model/b;": [
        "Lcom/google/android/gms/maps/model/b;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/CircleOptionsCreator;": [
        "Lcom/google/android/gms/maps/model/CircleOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/CircleOptions;",
        "Lcom/google/android/gms/maps/model/CircleOptionsCreator;->newArray()[Lcom/google/android/gms/maps/model/CircleOptions;",
        "Lcom/google/android/gms/maps/model/CircleOptionsCreator;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/BitmapDescriptor;": [
        "Lcom/google/android/gms/maps/model/BitmapDescriptor;->dP()Lcom/google/android/gms/dynamic/b;"
    ],
    "Lcom/google/android/gms/maps/model/GroundOverlayOptions;": [
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getHeight()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->a()Lcom/google/android/gms/maps/model/GroundOverlayOptions;",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getBounds()Lcom/google/android/gms/maps/model/LatLngBounds;",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getBearing()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getLocation()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getTransparency()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getAnchorU()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getAnchorV()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->ej()Landroid/os/IBinder;",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getWidth()F",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptions;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/maps/model/c;": [
        "Lcom/google/android/gms/maps/model/c;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/GroundOverlayOptionsCreator;": [
        "Lcom/google/android/gms/maps/model/GroundOverlayOptionsCreator;->newArray()[Lcom/google/android/gms/maps/model/GroundOverlayOptions;",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/GroundOverlayOptions;",
        "Lcom/google/android/gms/maps/model/GroundOverlayOptionsCreator;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/Tile;": [
        "Lcom/google/android/gms/maps/model/Tile;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/maps/model/k;": [
        "Lcom/google/android/gms/maps/model/k;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/VisibleRegionCreator;": [
        "Lcom/google/android/gms/maps/model/VisibleRegionCreator;->a()V",
        "Lcom/google/android/gms/maps/model/VisibleRegionCreator;->newArray()[Lcom/google/android/gms/maps/model/VisibleRegion;",
        "Lcom/google/android/gms/maps/model/VisibleRegionCreator;->createFromParcel()Lcom/google/android/gms/maps/model/VisibleRegion;"
    ],
    "Lcom/google/android/gms/maps/model/internal/e;": [
        "Lcom/google/android/gms/maps/model/internal/e;->getFillColor()I",
        "Lcom/google/android/gms/maps/model/internal/e;->getHoles()Ljava/util/List;",
        "Lcom/google/android/gms/maps/model/internal/e;->getStrokeColor()I",
        "Lcom/google/android/gms/maps/model/internal/e;->isGeodesic()Z",
        "Lcom/google/android/gms/maps/model/internal/e;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/internal/e;->a()Z",
        "Lcom/google/android/gms/maps/model/internal/e;->setStrokeWidth()V",
        "Lcom/google/android/gms/maps/model/internal/e;->hashCodeRemote()I",
        "Lcom/google/android/gms/maps/model/internal/e;->setHoles()V",
        "Lcom/google/android/gms/maps/model/internal/e;->getPoints()Ljava/util/List;",
        "Lcom/google/android/gms/maps/model/internal/e;->getStrokeWidth()F",
        "Lcom/google/android/gms/maps/model/internal/e;->setPoints()V",
        "Lcom/google/android/gms/maps/model/internal/e;->setVisible()V",
        "Lcom/google/android/gms/maps/model/internal/e;->setZIndex()V",
        "Lcom/google/android/gms/maps/model/internal/e;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/e;->remove()V",
        "Lcom/google/android/gms/maps/model/internal/e;->setGeodesic()V",
        "Lcom/google/android/gms/maps/model/internal/e;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/internal/e;->setStrokeColor()V",
        "Lcom/google/android/gms/maps/model/internal/e;->setFillColor()V"
    ],
    "Lcom/google/android/gms/maps/model/CircleOptions;": [
        "Lcom/google/android/gms/maps/model/CircleOptions;->getCenter()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/CircleOptions;->getStrokeWidth()F",
        "Lcom/google/android/gms/maps/model/CircleOptions;->getVersionCode()I",
        "Lcom/google/android/gms/maps/model/CircleOptions;->getFillColor()I",
        "Lcom/google/android/gms/maps/model/CircleOptions;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/CircleOptions;->getRadius()D",
        "Lcom/google/android/gms/maps/model/CircleOptions;->getStrokeColor()I",
        "Lcom/google/android/gms/maps/model/CircleOptions;->isVisible()Z"
    ],
    "Lcom/google/android/gms/maps/model/CameraPositionCreator;": [
        "Lcom/google/android/gms/maps/model/CameraPositionCreator;->a()V",
        "Lcom/google/android/gms/maps/model/CameraPositionCreator;->newArray()[Lcom/google/android/gms/maps/model/CameraPosition;",
        "Lcom/google/android/gms/maps/model/CameraPositionCreator;->createFromParcel()Lcom/google/android/gms/maps/model/CameraPosition;"
    ],
    "Ljava/lang/Iterable;": [
        "Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/google/android/gms/maps/model/g;": [
        "Lcom/google/android/gms/maps/model/g;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/h;": [
        "Lcom/google/android/gms/maps/model/h;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/internal/b;": [
        "Lcom/google/android/gms/maps/model/internal/b;->setVisible()V",
        "Lcom/google/android/gms/maps/model/internal/b;->setZIndex()V",
        "Lcom/google/android/gms/maps/model/internal/b;->setStrokeWidth()V",
        "Lcom/google/android/gms/maps/model/internal/b;->getStrokeWidth()F",
        "Lcom/google/android/gms/maps/model/internal/b;->setRadius()V",
        "Lcom/google/android/gms/maps/model/internal/b;->a()Z",
        "Lcom/google/android/gms/maps/model/internal/b;->setFillColor()V",
        "Lcom/google/android/gms/maps/model/internal/b;->getCenter()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/internal/b;->getStrokeColor()I",
        "Lcom/google/android/gms/maps/model/internal/b;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/internal/b;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/b;->setCenter()V",
        "Lcom/google/android/gms/maps/model/internal/b;->setStrokeColor()V",
        "Lcom/google/android/gms/maps/model/internal/b;->getFillColor()I",
        "Lcom/google/android/gms/maps/model/internal/b;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/internal/b;->remove()V",
        "Lcom/google/android/gms/maps/model/internal/b;->getRadius()D",
        "Lcom/google/android/gms/maps/model/internal/b;->hashCodeRemote()I"
    ],
    "Lcom/google/android/gms/maps/model/f;": [
        "Lcom/google/android/gms/maps/model/f;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/MarkerOptionsCreator;": [
        "Lcom/google/android/gms/maps/model/MarkerOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/MarkerOptions;",
        "Lcom/google/android/gms/maps/model/MarkerOptionsCreator;->newArray()[Lcom/google/android/gms/maps/model/MarkerOptions;",
        "Lcom/google/android/gms/maps/model/MarkerOptionsCreator;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/internal/c;": [
        "Lcom/google/android/gms/maps/model/internal/c;->setBearing()V",
        "Lcom/google/android/gms/maps/model/internal/c;->setPositionFromBounds()V",
        "Lcom/google/android/gms/maps/model/internal/c;->setDimensions()V",
        "Lcom/google/android/gms/maps/model/internal/c;->setVisible()V",
        "Lcom/google/android/gms/maps/model/internal/c;->a()Z",
        "Lcom/google/android/gms/maps/model/internal/c;->getHeight()F",
        "Lcom/google/android/gms/maps/model/internal/c;->getBounds()Lcom/google/android/gms/maps/model/LatLngBounds;",
        "Lcom/google/android/gms/maps/model/internal/c;->getPosition()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/internal/c;->getWidth()F",
        "Lcom/google/android/gms/maps/model/internal/c;->getZIndex()F",
        "Lcom/google/android/gms/maps/model/internal/c;->setPosition()V",
        "Lcom/google/android/gms/maps/model/internal/c;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/c;->setZIndex()V",
        "Lcom/google/android/gms/maps/model/internal/c;->getTransparency()F",
        "Lcom/google/android/gms/maps/model/internal/c;->setTransparency()V",
        "Lcom/google/android/gms/maps/model/internal/c;->hashCodeRemote()I",
        "Lcom/google/android/gms/maps/model/internal/c;->a()V",
        "Lcom/google/android/gms/maps/model/internal/c;->remove()V",
        "Lcom/google/android/gms/maps/model/internal/c;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/internal/c;->getBearing()F"
    ],
    "Lcom/google/android/gms/maps/model/internal/d;": [
        "Lcom/google/android/gms/maps/model/internal/d;->getTitle()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/d;->isDraggable()Z",
        "Lcom/google/android/gms/maps/model/internal/d;->getId()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/d;->isVisible()Z",
        "Lcom/google/android/gms/maps/model/internal/d;->getAlpha()F",
        "Lcom/google/android/gms/maps/model/internal/d;->setTitle()V",
        "Lcom/google/android/gms/maps/model/internal/d;->remove()V",
        "Lcom/google/android/gms/maps/model/internal/d;->getSnippet()Ljava/lang/String;",
        "Lcom/google/android/gms/maps/model/internal/d;->isFlat()Z",
        "Lcom/google/android/gms/maps/model/internal/d;->setSnippet()V",
        "Lcom/google/android/gms/maps/model/internal/d;->setRotation()V",
        "Lcom/google/android/gms/maps/model/internal/d;->setAnchor()V",
        "Lcom/google/android/gms/maps/model/internal/d;->setPosition()V",
        "Lcom/google/android/gms/maps/model/internal/d;->hashCodeRemote()I",
        "Lcom/google/android/gms/maps/model/internal/d;->a()V",
        "Lcom/google/android/gms/maps/model/internal/d;->getPosition()Lcom/google/android/gms/maps/model/LatLng;",
        "Lcom/google/android/gms/maps/model/internal/d;->setFlat()V",
        "Lcom/google/android/gms/maps/model/internal/d;->getRotation()F",
        "Lcom/google/android/gms/maps/model/internal/d;->setVisible()V",
        "Lcom/google/android/gms/maps/model/internal/d;->showInfoWindow()V",
        "Lcom/google/android/gms/maps/model/internal/d;->hideInfoWindow()V",
        "Lcom/google/android/gms/maps/model/internal/d;->setDraggable()V",
        "Lcom/google/android/gms/maps/model/internal/d;->setAlpha()V",
        "Lcom/google/android/gms/maps/model/internal/d;->setInfoWindowAnchor()V",
        "Lcom/google/android/gms/maps/model/internal/d;->isInfoWindowShown()Z",
        "Lcom/google/android/gms/maps/model/internal/d;->a()Z"
    ],
    "Lcom/google/android/gms/maps/model/CameraPosition$Builder;": [
        "Lcom/google/android/gms/maps/model/CameraPosition$Builder;->build()Lcom/google/android/gms/maps/model/CameraPosition;",
        "Lcom/google/android/gms/maps/model/CameraPosition$Builder;->bearing()Lcom/google/android/gms/maps/model/CameraPosition$Builder;",
        "Lcom/google/android/gms/maps/model/CameraPosition$Builder;->target()Lcom/google/android/gms/maps/model/CameraPosition$Builder;",
        "Lcom/google/android/gms/maps/model/CameraPosition$Builder;->tilt()Lcom/google/android/gms/maps/model/CameraPosition$Builder;",
        "Lcom/google/android/gms/maps/model/CameraPosition$Builder;->zoom()Lcom/google/android/gms/maps/model/CameraPosition$Builder;"
    ],
    "Lcom/google/android/gms/maps/model/a;": [
        "Lcom/google/android/gms/maps/model/a;->a()V"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->write()V",
        "Ljava/io/OutputStream;->flush()V"
    ],
    "Lcom/google/android/gms/maps/model/UrlTileProvider;": [
        "Lcom/google/android/gms/maps/model/UrlTileProvider;->getTileUrl()Ljava/net/URL;",
        "Lcom/google/android/gms/maps/model/UrlTileProvider;->a()J",
        "Lcom/google/android/gms/maps/model/UrlTileProvider;->a()[B"
    ],
    "Lcom/google/android/gms/maps/model/internal/a;": [
        "Lcom/google/android/gms/maps/model/internal/a;->a()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/model/internal/a;->ae()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/model/internal/a;->ad()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/model/internal/a;->aO()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/model/internal/a;->en()Lcom/google/android/gms/dynamic/b;",
        "Lcom/google/android/gms/maps/model/internal/a;->af()Lcom/google/android/gms/dynamic/b;"
    ],
    "Lcom/google/android/gms/maps/model/d;": [
        "Lcom/google/android/gms/maps/model/d;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/TileOverlayOptionsCreator;": [
        "Lcom/google/android/gms/maps/model/TileOverlayOptionsCreator;->a()V",
        "Lcom/google/android/gms/maps/model/TileOverlayOptionsCreator;->newArray()[Lcom/google/android/gms/maps/model/TileOverlayOptions;",
        "Lcom/google/android/gms/maps/model/TileOverlayOptionsCreator;->createFromParcel()Lcom/google/android/gms/maps/model/TileOverlayOptions;"
    ],
    "Lcom/google/android/gms/maps/model/internal/g$a;": [
        "Lcom/google/android/gms/maps/model/internal/g$a;->an()Lcom/google/android/gms/maps/model/internal/g;"
    ],
    "Lcom/google/android/gms/maps/model/internal/g;": [
        "Lcom/google/android/gms/maps/model/internal/g;->asBinder()Landroid/os/IBinder;"
    ],
    "Lcom/google/android/gms/maps/model/j;": [
        "Lcom/google/android/gms/maps/model/j;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/e;": [
        "Lcom/google/android/gms/maps/model/e;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/i;": [
        "Lcom/google/android/gms/maps/model/i;->a()V"
    ],
    "Lcom/google/android/gms/maps/model/TileCreator;": [
        "Lcom/google/android/gms/maps/model/TileCreator;->newArray()[Lcom/google/android/gms/maps/model/Tile;",
        "Lcom/google/android/gms/maps/model/TileCreator;->createFromParcel()Lcom/google/android/gms/maps/model/Tile;",
        "Lcom/google/android/gms/maps/model/TileCreator;->a()V"
    ],
    "Lcom/google/android/gms/common/ConnectionResult;": [
        "Lcom/google/android/gms/common/ConnectionResult;->aT()Ljava/lang/String;",
        "Lcom/google/android/gms/common/ConnectionResult;->hasResolution()Z"
    ],
    "Lcom/google/android/gms/common/AccountPicker;": [
        "Lcom/google/android/gms/common/AccountPicker;->a()Landroid/content/Intent;"
    ],
    "Lcom/google/android/gms/common/SignInButton;": [
        "Lcom/google/android/gms/common/SignInButton;->isEnabled()Z",
        "Lcom/google/android/gms/common/SignInButton;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/common/SignInButton;->addView()V",
        "Lcom/google/android/gms/common/SignInButton;->a()V",
        "Lcom/google/android/gms/common/SignInButton;->setStyle()V",
        "Lcom/google/android/gms/common/SignInButton;->a()Landroid/widget/Button;",
        "Lcom/google/android/gms/common/SignInButton;->removeView()V"
    ],
    "Landroid/view/View$OnClickListener;": [
        "Landroid/view/View$OnClickListener;->onClick()V"
    ],
    "Ljava/security/cert/CertificateFactory;": [
        "Ljava/security/cert/CertificateFactory;->generateCertificate()Ljava/security/cert/Certificate;",
        "Ljava/security/cert/CertificateFactory;->getInstance()Ljava/security/cert/CertificateFactory;"
    ],
    "Landroid/content/pm/Signature;": [
        "Landroid/content/pm/Signature;->toByteArray()[B"
    ],
    "Ljava/security/cert/X509Certificate;": [
        "Ljava/security/cert/X509Certificate;->checkValidity()V"
    ],
    "Ljava/util/Scanner;": [
        "Ljava/util/Scanner;->next()Ljava/lang/String;",
        "Ljava/util/Scanner;->findWithinHorizon()Ljava/lang/String;",
        "Ljava/util/Scanner;->useDelimiter()Ljava/util/Scanner;",
        "Ljava/util/Scanner;->match()Ljava/util/regex/MatchResult;"
    ],
    "Lcom/google/android/gms/common/data/DataBuffer;": [
        "Lcom/google/android/gms/common/data/DataBuffer;->isClosed()Z",
        "Lcom/google/android/gms/common/data/DataBuffer;->getCount()I",
        "Lcom/google/android/gms/common/data/DataBuffer;->close()V",
        "Lcom/google/android/gms/common/data/DataBuffer;->get()Ljava/lang/Object;",
        "Lcom/google/android/gms/common/data/DataBuffer;->getMetadata()Landroid/os/Bundle;",
        "Lcom/google/android/gms/common/data/DataBuffer;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/google/android/gms/common/data/Freezable;": [
        "Lcom/google/android/gms/common/data/Freezable;->freeze()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/common/data/a;": [
        "Lcom/google/android/gms/common/data/a;->hasNext()Z"
    ],
    "Lcom/google/android/gms/common/data/DataHolderCreator;": [
        "Lcom/google/android/gms/common/data/DataHolderCreator;->a()V",
        "Lcom/google/android/gms/common/data/DataHolderCreator;->newArray()[Lcom/google/android/gms/common/data/DataHolder;",
        "Lcom/google/android/gms/common/data/DataHolderCreator;->createFromParcel()Lcom/google/android/gms/common/data/DataHolder;"
    ],
    "Lcom/google/android/gms/internal/dg;": [
        "Lcom/google/android/gms/internal/dg;->a()V"
    ],
    "Lcom/google/android/gms/common/data/FilteredDataBuffer;": [
        "Lcom/google/android/gms/common/data/FilteredDataBuffer;->computeRealPosition()I"
    ],
    "Lcom/google/android/gms/common/data/c;": [
        "Lcom/google/android/gms/common/data/c;->a()Lcom/google/android/gms/common/internal/safeparcel/SafeParcelable;"
    ],
    "Landroid/os/Parcelable$Creator;": [
        "Landroid/os/Parcelable$Creator;->createFromParcel()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/common/data/d;": [
        "Lcom/google/android/gms/common/data/d;->getPrimaryDataMarkerColumn()Ljava/lang/String;",
        "Lcom/google/android/gms/common/data/d;->a()I",
        "Lcom/google/android/gms/common/data/d;->bl()V",
        "Lcom/google/android/gms/common/data/d;->a()Ljava/lang/Object;"
    ],
    "Landroid/database/AbstractWindowedCursor;": [
        "Landroid/database/AbstractWindowedCursor;->getColumnNames()[Ljava/lang/String;",
        "Landroid/database/AbstractWindowedCursor;->close()V",
        "Landroid/database/AbstractWindowedCursor;->getCount()I",
        "Landroid/database/AbstractWindowedCursor;->moveToPosition()Z",
        "Landroid/database/AbstractWindowedCursor;->getWindow()Landroid/database/CursorWindow;",
        "Landroid/database/AbstractWindowedCursor;->setWindow()V",
        "Landroid/database/AbstractWindowedCursor;->fillWindow()V"
    ],
    "Lcom/google/android/gms/common/data/DataHolder$Builder;": [
        "Lcom/google/android/gms/common/data/DataHolder$Builder;->a()[Ljava/lang/String;",
        "Lcom/google/android/gms/common/data/DataHolder$Builder;->build()Lcom/google/android/gms/common/data/DataHolder;",
        "Lcom/google/android/gms/common/data/DataHolder$Builder;->a()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/common/data/DataHolder$Builder;->withRow()Lcom/google/android/gms/common/data/DataHolder$Builder;"
    ],
    "Landroid/database/CursorWindow;": [
        "Landroid/database/CursorWindow;->getInt()I",
        "Landroid/database/CursorWindow;->putString()Z",
        "Landroid/database/CursorWindow;->isNull()Z",
        "Landroid/database/CursorWindow;->allocRow()Z",
        "Landroid/database/CursorWindow;->getLong()J",
        "Landroid/database/CursorWindow;->close()V",
        "Landroid/database/CursorWindow;->getStartPosition()I",
        "Landroid/database/CursorWindow;->setNumColumns()Z",
        "Landroid/database/CursorWindow;->getBlob()[B",
        "Landroid/database/CursorWindow;->putLong()Z",
        "Landroid/database/CursorWindow;->getString()Ljava/lang/String;",
        "Landroid/database/CursorWindow;->putNull()Z",
        "Landroid/database/CursorWindow;->copyStringToBuffer()V",
        "Landroid/database/CursorWindow;->freeLastRow()V",
        "Landroid/database/CursorWindow;->getNumRows()I",
        "Landroid/database/CursorWindow;->acquireReference()V",
        "Landroid/database/CursorWindow;->putBlob()Z"
    ],
    "Landroid/os/Parcelable;": [
        "Landroid/os/Parcelable;->writeToParcel()V"
    ],
    "Ljava/util/concurrent/Executors;": [
        "Ljava/util/concurrent/Executors;->newCachedThreadPool()Ljava/util/concurrent/ExecutorService;",
        "Ljava/util/concurrent/Executors;->newFixedThreadPool()Ljava/util/concurrent/ExecutorService;"
    ],
    "Lcom/google/android/gms/common/images/ImageManager;": [
        "Lcom/google/android/gms/common/images/ImageManager;->a()Z",
        "Lcom/google/android/gms/common/images/ImageManager;->bm()V",
        "Lcom/google/android/gms/common/images/ImageManager;->a()Landroid/graphics/Bitmap;",
        "Lcom/google/android/gms/common/images/ImageManager;->a()Lcom/google/android/gms/common/images/ImageManager;",
        "Lcom/google/android/gms/common/images/ImageManager;->a()V"
    ],
    "Lcom/google/android/gms/common/images/ImageManager$b;": [
        "Lcom/google/android/gms/common/images/ImageManager$b;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/common/images/ImageManager$ImageReceiver;": [
        "Lcom/google/android/gms/common/images/ImageManager$ImageReceiver;->a()V"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Lcom/google/android/gms/common/images/a;": [
        "Lcom/google/android/gms/common/images/a;->hashCode()I",
        "Lcom/google/android/gms/common/images/a;->a()Z",
        "Lcom/google/android/gms/common/images/a;->a()Lcom/google/android/gms/internal/de;",
        "Lcom/google/android/gms/common/images/a;->a()V"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/common/images/ImageManager$OnImageLoadedListener;": [
        "Lcom/google/android/gms/common/images/ImageManager$OnImageLoadedListener;->onImageLoaded()V"
    ],
    "Lcom/google/android/gms/internal/df;": [
        "Lcom/google/android/gms/internal/df;->a()V",
        "Lcom/google/android/gms/internal/df;->bs()I"
    ],
    "Lcom/google/android/gms/common/api/Status;": [
        "Lcom/google/android/gms/common/api/Status;->hasResolution()Z",
        "Lcom/google/android/gms/common/api/Status;->aT()Ljava/lang/String;",
        "Lcom/google/android/gms/common/api/Status;->bf()Landroid/app/PendingIntent;",
        "Lcom/google/android/gms/common/api/Status;->getVersionCode()I",
        "Lcom/google/android/gms/common/api/Status;->bg()Ljava/lang/String;",
        "Lcom/google/android/gms/common/api/Status;->getStatusCode()I"
    ],
    "Lcom/google/android/gms/common/api/StatusCreator;": [
        "Lcom/google/android/gms/common/api/StatusCreator;->a()V",
        "Lcom/google/android/gms/common/api/StatusCreator;->createFromParcel()Lcom/google/android/gms/common/api/Status;",
        "Lcom/google/android/gms/common/api/StatusCreator;->newArray()[Lcom/google/android/gms/common/api/Status;"
    ],
    "Lcom/google/android/gms/common/api/Api;": [
        "Lcom/google/android/gms/common/api/Api;->aV()Lcom/google/android/gms/common/api/Api$b;"
    ],
    "Lcom/google/android/gms/common/api/Api$b;": [
        "Lcom/google/android/gms/common/api/Api$b;->a()Lcom/google/android/gms/common/api/Api$a;"
    ],
    "Lcom/google/android/gms/common/api/GoogleApiClient;": [
        "Lcom/google/android/gms/common/api/GoogleApiClient;->ba()V",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->disconnect()V",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->aY()V",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->a()V",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->connect()V",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->isConnecting()Z",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->aZ()V",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->a()Lcom/google/android/gms/common/api/a$a;",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->a()Lcom/google/android/gms/common/api/Api$a;",
        "Lcom/google/android/gms/common/api/GoogleApiClient;->isConnected()Z"
    ],
    "Lcom/google/android/gms/common/api/GoogleApiClient$a;": [
        "Lcom/google/android/gms/common/api/GoogleApiClient$a;->aV()Lcom/google/android/gms/common/api/Api$b;",
        "Lcom/google/android/gms/common/api/GoogleApiClient$a;->a()V"
    ],
    "Lcom/google/android/gms/common/api/Api$a;": [
        "Lcom/google/android/gms/common/api/Api$a;->connect()V",
        "Lcom/google/android/gms/common/api/Api$a;->disconnect()V"
    ],
    "Ljava/util/Queue;": [
        "Ljava/util/Queue;->isEmpty()Z",
        "Ljava/util/Queue;->add()Z",
        "Ljava/util/Queue;->clear()V",
        "Ljava/util/Queue;->remove()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/dynamic/a$a;": [
        "Lcom/google/android/gms/dynamic/a$a;->getState()I",
        "Lcom/google/android/gms/dynamic/a$a;->a()V"
    ],
    "Lcom/google/android/gms/dynamic/a;": [
        "Lcom/google/android/gms/dynamic/a;->a()V",
        "Lcom/google/android/gms/dynamic/a;->al()V"
    ],
    "Landroid/widget/Button;": [
        "Landroid/widget/Button;->setShadowLayer()V",
        "Landroid/widget/Button;->getContext()Landroid/content/Context;",
        "Landroid/widget/Button;->setGravity()V",
        "Landroid/widget/Button;->setEnabled()V",
        "Landroid/widget/Button;->setClickable()V",
        "Landroid/widget/Button;->setVisibility()V",
        "Landroid/widget/Button;->setLayoutParams()V",
        "Landroid/widget/Button;->setTextColor()V",
        "Landroid/widget/Button;->setTextAppearance()V",
        "Landroid/widget/Button;->setPadding()V",
        "Landroid/widget/Button;->setBackgroundResource()V",
        "Landroid/widget/Button;->setBackgroundDrawable()V",
        "Landroid/widget/Button;->setId()V",
        "Landroid/widget/Button;->setText()V",
        "Landroid/widget/Button;->setTypeface()V",
        "Landroid/widget/Button;->setBackgroundColor()V",
        "Landroid/widget/Button;->setOnClickListener()V"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->setFactory()V",
        "Landroid/view/LayoutInflater;->from()Landroid/view/LayoutInflater;",
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;",
        "Landroid/view/LayoutInflater;->getContext()Landroid/content/Context;",
        "Landroid/view/LayoutInflater;->getFactory()Landroid/view/LayoutInflater$Factory;"
    ],
    "Lcom/google/android/gms/dynamic/LifecycleDelegate;": [
        "Lcom/google/android/gms/dynamic/LifecycleDelegate;->onLowMemory()V",
        "Lcom/google/android/gms/dynamic/LifecycleDelegate;->onPause()V",
        "Lcom/google/android/gms/dynamic/LifecycleDelegate;->onDestroyView()V",
        "Lcom/google/android/gms/dynamic/LifecycleDelegate;->onDestroy()V",
        "Lcom/google/android/gms/dynamic/LifecycleDelegate;->onSaveInstanceState()V"
    ],
    "Lcom/google/android/gms/dynamic/e;": [
        "Lcom/google/android/gms/dynamic/e;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/ads/AdActivity;": [
        "Lcom/google/android/gms/ads/AdActivity;->finish()V"
    ],
    "Lcom/google/android/gms/internal/bs;": [
        "Lcom/google/android/gms/internal/bs;->onStop()V",
        "Lcom/google/android/gms/internal/bs;->onDestroy()V",
        "Lcom/google/android/gms/internal/bs;->onPause()V",
        "Lcom/google/android/gms/internal/bs;->onStart()V",
        "Lcom/google/android/gms/internal/bs;->onSaveInstanceState()V",
        "Lcom/google/android/gms/internal/bs;->onRestart()V",
        "Lcom/google/android/gms/internal/bs;->onCreate()V",
        "Lcom/google/android/gms/internal/bs;->onResume()V"
    ],
    "Lcom/google/android/gms/ads/AdRequest;": [
        "Lcom/google/android/gms/ads/AdRequest;->a()Lcom/google/android/gms/internal/af;"
    ],
    "Lcom/google/android/gms/common/a;": [
        "Lcom/google/android/gms/common/a;->aS()Landroid/os/IBinder;"
    ],
    "Lcom/google/android/gms/internal/p$a;": [
        "Lcom/google/android/gms/internal/p$a;->a()Lcom/google/android/gms/internal/p;"
    ],
    "Lcom/google/android/gms/internal/p;": [
        "Lcom/google/android/gms/internal/p;->a()Z",
        "Lcom/google/android/gms/internal/p;->getId()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/ads/doubleclick/PublisherAdRequest;": [
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdRequest;->a()Lcom/google/android/gms/internal/af;"
    ],
    "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;": [
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->getChildAt()Landroid/view/View;",
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->measureChild()V",
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->getAdSize()Lcom/google/android/gms/ads/AdSize;",
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->setMeasuredDimension()V",
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->getSuggestedMinimumHeight()I",
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdView;->getSuggestedMinimumWidth()I"
    ],
    "Lcom/google/android/gms/ads/doubleclick/PublisherAdRequest$Builder;": [
        "Lcom/google/android/gms/ads/doubleclick/PublisherAdRequest$Builder;->a()Lcom/google/android/gms/internal/af$a;"
    ],
    "Lcom/google/android/gms/ads/search/SearchAdRequest$Builder;": [
        "Lcom/google/android/gms/ads/search/SearchAdRequest$Builder;->a()Lcom/google/android/gms/internal/af$a;",
        "Lcom/google/android/gms/ads/search/SearchAdRequest$Builder;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/ads/search/SearchAdRequest$Builder;->a()I"
    ],
    "Lcom/google/android/gms/ads/search/SearchAdView;": [
        "Lcom/google/android/gms/ads/search/SearchAdView;->getSuggestedMinimumHeight()I",
        "Lcom/google/android/gms/ads/search/SearchAdView;->measureChild()V",
        "Lcom/google/android/gms/ads/search/SearchAdView;->getChildAt()Landroid/view/View;",
        "Lcom/google/android/gms/ads/search/SearchAdView;->getAdSize()Lcom/google/android/gms/ads/AdSize;",
        "Lcom/google/android/gms/ads/search/SearchAdView;->setMeasuredDimension()V",
        "Lcom/google/android/gms/ads/search/SearchAdView;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/ads/search/SearchAdView;->getSuggestedMinimumWidth()I"
    ],
    "Lcom/google/android/gms/wallet/d;": [
        "Lcom/google/android/gms/wallet/d;->ay()Lcom/google/android/gms/wallet/FullWallet;",
        "Lcom/google/android/gms/wallet/d;->a()V",
        "Lcom/google/android/gms/wallet/d;->bg()[Lcom/google/android/gms/wallet/FullWallet;"
    ],
    "Lcom/google/android/gms/wallet/f;": [
        "Lcom/google/android/gms/wallet/f;->a()V",
        "Lcom/google/android/gms/wallet/f;->aA()Lcom/google/android/gms/wallet/LineItem;",
        "Lcom/google/android/gms/wallet/f;->bi()[Lcom/google/android/gms/wallet/LineItem;"
    ],
    "Lcom/google/android/gms/wallet/Address;": [
        "Lcom/google/android/gms/wallet/Address;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/a;": [
        "Lcom/google/android/gms/wallet/a;->a()V",
        "Lcom/google/android/gms/wallet/a;->bd()[Lcom/google/android/gms/wallet/Address;",
        "Lcom/google/android/gms/wallet/a;->av()Lcom/google/android/gms/wallet/Address;"
    ],
    "Lcom/google/android/gms/wallet/ProxyCard;": [
        "Lcom/google/android/gms/wallet/ProxyCard;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/l;": [
        "Lcom/google/android/gms/wallet/l;->aG()Lcom/google/android/gms/wallet/ProxyCard;",
        "Lcom/google/android/gms/wallet/l;->bo()[Lcom/google/android/gms/wallet/ProxyCard;",
        "Lcom/google/android/gms/wallet/l;->a()V"
    ],
    "Lcom/google/android/gms/wallet/CountrySpecification;": [
        "Lcom/google/android/gms/wallet/CountrySpecification;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/c;": [
        "Lcom/google/android/gms/wallet/c;->ax()Lcom/google/android/gms/wallet/CountrySpecification;",
        "Lcom/google/android/gms/wallet/c;->a()V",
        "Lcom/google/android/gms/wallet/c;->bf()[Lcom/google/android/gms/wallet/CountrySpecification;"
    ],
    "Lcom/google/android/gms/wallet/j;": [
        "Lcom/google/android/gms/wallet/j;->aE()Lcom/google/android/gms/wallet/NotifyTransactionStatusRequest;",
        "Lcom/google/android/gms/wallet/j;->bm()[Lcom/google/android/gms/wallet/NotifyTransactionStatusRequest;",
        "Lcom/google/android/gms/wallet/j;->a()V"
    ],
    "Lcom/google/android/gms/wallet/e;": [
        "Lcom/google/android/gms/wallet/e;->a()V",
        "Lcom/google/android/gms/wallet/e;->bh()[Lcom/google/android/gms/wallet/FullWalletRequest;",
        "Lcom/google/android/gms/wallet/e;->az()Lcom/google/android/gms/wallet/FullWalletRequest;"
    ],
    "Lcom/google/android/gms/wallet/Cart;": [
        "Lcom/google/android/gms/wallet/Cart;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/b;": [
        "Lcom/google/android/gms/wallet/b;->a()V",
        "Lcom/google/android/gms/wallet/b;->be()[Lcom/google/android/gms/wallet/Cart;",
        "Lcom/google/android/gms/wallet/b;->aw()Lcom/google/android/gms/wallet/Cart;"
    ],
    "Lcom/google/android/gms/wallet/MaskedWalletRequest;": [
        "Lcom/google/android/gms/wallet/MaskedWalletRequest;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/i;": [
        "Lcom/google/android/gms/wallet/i;->aD()Lcom/google/android/gms/wallet/MaskedWalletRequest;",
        "Lcom/google/android/gms/wallet/i;->a()V",
        "Lcom/google/android/gms/wallet/i;->bl()[Lcom/google/android/gms/wallet/MaskedWalletRequest;"
    ],
    "Lcom/google/android/gms/wallet/FullWalletRequest;": [
        "Lcom/google/android/gms/wallet/FullWalletRequest;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/g;": [
        "Lcom/google/android/gms/wallet/g;->bj()[Lcom/google/android/gms/wallet/LoyaltyWalletObject;",
        "Lcom/google/android/gms/wallet/g;->aB()Lcom/google/android/gms/wallet/LoyaltyWalletObject;",
        "Lcom/google/android/gms/wallet/g;->a()V"
    ],
    "Lcom/google/android/gms/wallet/MaskedWallet;": [
        "Lcom/google/android/gms/wallet/MaskedWallet;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/h;": [
        "Lcom/google/android/gms/wallet/h;->a()V",
        "Lcom/google/android/gms/wallet/h;->bk()[Lcom/google/android/gms/wallet/MaskedWallet;",
        "Lcom/google/android/gms/wallet/h;->aC()Lcom/google/android/gms/wallet/MaskedWallet;"
    ],
    "Lcom/google/android/gms/wallet/FullWallet;": [
        "Lcom/google/android/gms/wallet/FullWallet;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/OfferWalletObject;": [
        "Lcom/google/android/gms/wallet/OfferWalletObject;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/k;": [
        "Lcom/google/android/gms/wallet/k;->a()V",
        "Lcom/google/android/gms/wallet/k;->bn()[Lcom/google/android/gms/wallet/OfferWalletObject;",
        "Lcom/google/android/gms/wallet/k;->aF()Lcom/google/android/gms/wallet/OfferWalletObject;"
    ],
    "Lcom/google/android/gms/wallet/LoyaltyWalletObject;": [
        "Lcom/google/android/gms/wallet/LoyaltyWalletObject;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/wallet/LineItem;": [
        "Lcom/google/android/gms/wallet/LineItem;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/drive/Metadata;": [
        "Lcom/google/android/gms/drive/Metadata;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/drive/Metadata;->getMimeType()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;": [
        "Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;->a()V",
        "Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;->a()Ljava/lang/Object;",
        "Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;->cF()Ljava/util/Set;",
        "Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;->cE()Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;",
        "Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;->a()Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;"
    ],
    "Lcom/google/android/gms/drive/b;": [
        "Lcom/google/android/gms/drive/b;->cr()Lcom/google/android/gms/drive/Metadata;"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/c;": [
        "Lcom/google/android/gms/drive/metadata/internal/c;->cD()Ljava/util/Collection;",
        "Lcom/google/android/gms/drive/metadata/internal/c;->a()V",
        "Lcom/google/android/gms/drive/metadata/internal/c;->a()Lcom/google/android/gms/drive/metadata/MetadataField;"
    ],
    "Lcom/google/android/gms/drive/metadata/MetadataField;": [
        "Lcom/google/android/gms/drive/metadata/MetadataField;->a()V",
        "Lcom/google/android/gms/drive/metadata/MetadataField;->getName()Ljava/lang/String;",
        "Lcom/google/android/gms/drive/metadata/MetadataField;->cC()Ljava/util/Collection;",
        "Lcom/google/android/gms/drive/metadata/MetadataField;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/drive/MetadataBuffer;": [
        "Lcom/google/android/gms/drive/MetadataBuffer;->get()Lcom/google/android/gms/drive/Metadata;"
    ],
    "Lcom/google/android/gms/drive/Contents;": [
        "Lcom/google/android/gms/drive/Contents;->cq()I",
        "Lcom/google/android/gms/drive/Contents;->getParcelFileDescriptor()Landroid/os/ParcelFileDescriptor;",
        "Lcom/google/android/gms/drive/Contents;->close()V"
    ],
    "Landroid/os/ParcelFileDescriptor;": [
        "Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;",
        "Landroid/os/ParcelFileDescriptor;->open()Landroid/os/ParcelFileDescriptor;",
        "Landroid/os/ParcelFileDescriptor;->close()V"
    ],
    "Lcom/google/android/gms/drive/internal/j;": [
        "Lcom/google/android/gms/drive/internal/j;->cv()Lcom/google/android/gms/drive/DriveId;",
        "Lcom/google/android/gms/drive/internal/j;->a()Lcom/google/android/gms/drive/internal/o;",
        "Lcom/google/android/gms/drive/internal/j;->bA()[Ljava/lang/String;",
        "Lcom/google/android/gms/drive/internal/j;->cu()Lcom/google/android/gms/drive/internal/o;",
        "Lcom/google/android/gms/drive/internal/j;->bC()Landroid/os/IInterface;",
        "Lcom/google/android/gms/drive/internal/j;->getContext()Landroid/content/Context;"
    ],
    "Lcom/google/android/gms/drive/MetadataChangeSet;": [
        "Lcom/google/android/gms/drive/MetadataChangeSet;->ct()Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;",
        "Lcom/google/android/gms/drive/MetadataChangeSet;->getMimeType()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/internal/o;": [
        "Lcom/google/android/gms/drive/internal/o;->a()Landroid/content/IntentSender;"
    ],
    "Lcom/google/android/gms/drive/c;": [
        "Lcom/google/android/gms/drive/c;->a()[Lcom/google/android/gms/drive/DriveId;",
        "Lcom/google/android/gms/drive/c;->a()Lcom/google/android/gms/drive/DriveId;",
        "Lcom/google/android/gms/drive/c;->a()V"
    ],
    "Lcom/google/android/gms/drive/a;": [
        "Lcom/google/android/gms/drive/a;->a()Lcom/google/android/gms/drive/Contents;",
        "Lcom/google/android/gms/drive/a;->a()V",
        "Lcom/google/android/gms/drive/a;->a()[Lcom/google/android/gms/drive/Contents;"
    ],
    "Lcom/google/android/gms/drive/internal/q;": [
        "Lcom/google/android/gms/drive/internal/q;->a()Lcom/google/android/gms/drive/internal/q;"
    ],
    "Lcom/google/android/gms/drive/DriveId;": [
        "Lcom/google/android/gms/drive/DriveId;->a()Lcom/google/android/gms/drive/DriveId;",
        "Lcom/google/android/gms/drive/DriveId;->cs()[B",
        "Lcom/google/android/gms/drive/DriveId;->encodeToString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/query/a;": [
        "Lcom/google/android/gms/drive/query/a;->a()V",
        "Lcom/google/android/gms/drive/query/a;->ad()[Lcom/google/android/gms/drive/query/Query;",
        "Lcom/google/android/gms/drive/query/a;->a()Lcom/google/android/gms/drive/query/Query;"
    ],
    "Lcom/google/android/gms/drive/query/internal/a;": [
        "Lcom/google/android/gms/drive/query/internal/a;->a()V",
        "Lcom/google/android/gms/drive/query/internal/a;->ae()[Lcom/google/android/gms/drive/query/internal/ComparisonFilter;",
        "Lcom/google/android/gms/drive/query/internal/a;->a()Lcom/google/android/gms/drive/query/internal/ComparisonFilter;"
    ],
    "Lcom/google/android/gms/drive/query/internal/c;": [
        "Lcom/google/android/gms/drive/query/internal/c;->a()Lcom/google/android/gms/drive/query/internal/FilterHolder;",
        "Lcom/google/android/gms/drive/query/internal/c;->a()V",
        "Lcom/google/android/gms/drive/query/internal/c;->ag()[Lcom/google/android/gms/drive/query/internal/FilterHolder;"
    ],
    "Lcom/google/android/gms/drive/query/internal/f;": [
        "Lcom/google/android/gms/drive/query/internal/f;->a()Lcom/google/android/gms/drive/query/internal/LogicalFilter;",
        "Lcom/google/android/gms/drive/query/internal/f;->a()V",
        "Lcom/google/android/gms/drive/query/internal/f;->ai()[Lcom/google/android/gms/drive/query/internal/LogicalFilter;"
    ],
    "Lcom/google/android/gms/drive/query/internal/h;": [
        "Lcom/google/android/gms/drive/query/internal/h;->ak()[Lcom/google/android/gms/drive/query/internal/Operator;",
        "Lcom/google/android/gms/drive/query/internal/h;->a()Lcom/google/android/gms/drive/query/internal/Operator;",
        "Lcom/google/android/gms/drive/query/internal/h;->a()V"
    ],
    "Lcom/google/android/gms/drive/query/internal/d;": [
        "Lcom/google/android/gms/drive/query/internal/d;->a()Lcom/google/android/gms/drive/metadata/MetadataField;"
    ],
    "Lcom/google/android/gms/drive/query/internal/b;": [
        "Lcom/google/android/gms/drive/query/internal/b;->a()V",
        "Lcom/google/android/gms/drive/query/internal/b;->af()[Lcom/google/android/gms/drive/query/internal/FieldOnlyFilter;",
        "Lcom/google/android/gms/drive/query/internal/b;->a()Lcom/google/android/gms/drive/query/internal/FieldOnlyFilter;"
    ],
    "Lcom/google/android/gms/drive/query/internal/e;": [
        "Lcom/google/android/gms/drive/query/internal/e;->a()V",
        "Lcom/google/android/gms/drive/query/internal/e;->a()Lcom/google/android/gms/drive/query/internal/InFilter;",
        "Lcom/google/android/gms/drive/query/internal/e;->ah()[Lcom/google/android/gms/drive/query/internal/InFilter;"
    ],
    "Lcom/google/android/gms/drive/query/internal/g;": [
        "Lcom/google/android/gms/drive/query/internal/g;->aj()[Lcom/google/android/gms/drive/query/internal/NotFilter;",
        "Lcom/google/android/gms/drive/query/internal/g;->a()V",
        "Lcom/google/android/gms/drive/query/internal/g;->a()Lcom/google/android/gms/drive/query/internal/NotFilter;"
    ],
    "Lcom/google/android/gms/drive/metadata/CollectionMetadataField;": [
        "Lcom/google/android/gms/drive/metadata/CollectionMetadataField;->a()Ljava/util/Collection;"
    ],
    "Lcom/google/android/gms/drive/metadata/StringMetadataField;": [
        "Lcom/google/android/gms/drive/metadata/StringMetadataField;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/drive/metadata/StringMetadataField;->getName()Ljava/lang/String;",
        "Lcom/google/android/gms/drive/metadata/StringMetadataField;->a()V"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/d;": [
        "Lcom/google/android/gms/drive/metadata/internal/d;->ac()[Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;",
        "Lcom/google/android/gms/drive/metadata/internal/d;->a()Lcom/google/android/gms/drive/metadata/internal/MetadataBundle;",
        "Lcom/google/android/gms/drive/metadata/internal/d;->a()V"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/b;": [
        "Lcom/google/android/gms/drive/metadata/internal/b;->getName()Ljava/lang/String;",
        "Lcom/google/android/gms/drive/metadata/internal/b;->a()V",
        "Lcom/google/android/gms/drive/metadata/internal/b;->a()Ljava/util/Date;"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/a;": [
        "Lcom/google/android/gms/drive/metadata/internal/a;->a()V",
        "Lcom/google/android/gms/drive/metadata/internal/a;->a()Ljava/lang/Boolean;",
        "Lcom/google/android/gms/drive/metadata/internal/a;->getName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/f;": [
        "Lcom/google/android/gms/drive/metadata/internal/f;->a()V",
        "Lcom/google/android/gms/drive/metadata/internal/f;->getName()Ljava/lang/String;",
        "Lcom/google/android/gms/drive/metadata/internal/f;->a()Landroid/os/Parcelable;"
    ],
    "Lcom/google/android/gms/drive/metadata/internal/e;": [
        "Lcom/google/android/gms/drive/metadata/internal/e;->a()Ljava/util/Collection;",
        "Lcom/google/android/gms/drive/metadata/internal/e;->a()V",
        "Lcom/google/android/gms/drive/metadata/internal/e;->getName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/internal/f;": [
        "Lcom/google/android/gms/drive/internal/f;->a()[Lcom/google/android/gms/drive/internal/CreateFolderRequest;",
        "Lcom/google/android/gms/drive/internal/f;->a()V",
        "Lcom/google/android/gms/drive/internal/f;->a()Lcom/google/android/gms/drive/internal/CreateFolderRequest;"
    ],
    "Lcom/google/android/gms/internal/dh;": [
        "Lcom/google/android/gms/internal/dh;->bt()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/internal/o$a;": [
        "Lcom/google/android/gms/drive/internal/o$a;->a()Lcom/google/android/gms/drive/internal/o;"
    ],
    "Lcom/google/android/gms/drive/internal/r;": [
        "Lcom/google/android/gms/drive/internal/r;->a()V",
        "Lcom/google/android/gms/drive/internal/r;->a()[Lcom/google/android/gms/drive/internal/OnContentsResponse;",
        "Lcom/google/android/gms/drive/internal/r;->a()Lcom/google/android/gms/drive/internal/OnContentsResponse;"
    ],
    "Lcom/google/android/gms/drive/internal/w;": [
        "Lcom/google/android/gms/drive/internal/w;->a()[Lcom/google/android/gms/drive/internal/OpenContentsRequest;",
        "Lcom/google/android/gms/drive/internal/w;->a()V",
        "Lcom/google/android/gms/drive/internal/w;->a()Lcom/google/android/gms/drive/internal/OpenContentsRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/g;": [
        "Lcom/google/android/gms/drive/internal/g;->cr()Lcom/google/android/gms/drive/Metadata;"
    ],
    "Lcom/google/android/gms/drive/internal/n;": [
        "Lcom/google/android/gms/drive/internal/n;->a()[Lcom/google/android/gms/drive/internal/GetMetadataRequest;",
        "Lcom/google/android/gms/drive/internal/n;->a()Lcom/google/android/gms/drive/internal/GetMetadataRequest;",
        "Lcom/google/android/gms/drive/internal/n;->a()V"
    ],
    "Lcom/google/android/gms/drive/DriveApi;": [
        "Lcom/google/android/gms/drive/DriveApi;->discardContents()Lcom/google/android/gms/common/api/PendingResult;"
    ],
    "Lcom/google/android/gms/drive/internal/s;": [
        "Lcom/google/android/gms/drive/internal/s;->a()[Lcom/google/android/gms/drive/internal/OnDownloadProgressResponse;",
        "Lcom/google/android/gms/drive/internal/s;->a()V",
        "Lcom/google/android/gms/drive/internal/s;->a()Lcom/google/android/gms/drive/internal/OnDownloadProgressResponse;"
    ],
    "Lcom/google/android/gms/drive/internal/b;": [
        "Lcom/google/android/gms/drive/internal/b;->a()V",
        "Lcom/google/android/gms/drive/internal/b;->a()[Lcom/google/android/gms/drive/internal/CloseContentsRequest;",
        "Lcom/google/android/gms/drive/internal/b;->a()Lcom/google/android/gms/drive/internal/CloseContentsRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/aa;": [
        "Lcom/google/android/gms/drive/internal/aa;->a()V",
        "Lcom/google/android/gms/drive/internal/aa;->ab()[Lcom/google/android/gms/drive/internal/UpdateMetadataRequest;",
        "Lcom/google/android/gms/drive/internal/aa;->a()Lcom/google/android/gms/drive/internal/UpdateMetadataRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/d;": [
        "Lcom/google/android/gms/drive/internal/d;->a()[Lcom/google/android/gms/drive/internal/CreateFileIntentSenderRequest;",
        "Lcom/google/android/gms/drive/internal/d;->a()V",
        "Lcom/google/android/gms/drive/internal/d;->a()Lcom/google/android/gms/drive/internal/CreateFileIntentSenderRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/x;": [
        "Lcom/google/android/gms/drive/internal/x;->a()V",
        "Lcom/google/android/gms/drive/internal/x;->a()[Lcom/google/android/gms/drive/internal/OpenFileIntentSenderRequest;",
        "Lcom/google/android/gms/drive/internal/x;->a()Lcom/google/android/gms/drive/internal/OpenFileIntentSenderRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/e;": [
        "Lcom/google/android/gms/drive/internal/e;->a()Lcom/google/android/gms/drive/internal/CreateFileRequest;",
        "Lcom/google/android/gms/drive/internal/e;->a()[Lcom/google/android/gms/drive/internal/CreateFileRequest;",
        "Lcom/google/android/gms/drive/internal/e;->a()V"
    ],
    "Lcom/google/android/gms/drive/internal/t;": [
        "Lcom/google/android/gms/drive/internal/t;->a()[Lcom/google/android/gms/drive/internal/OnDriveIdResponse;",
        "Lcom/google/android/gms/drive/internal/t;->a()V",
        "Lcom/google/android/gms/drive/internal/t;->a()Lcom/google/android/gms/drive/internal/OnDriveIdResponse;"
    ],
    "Lcom/google/android/gms/common/api/a$c;": [
        "Lcom/google/android/gms/common/api/a$c;->a()V"
    ],
    "Lcom/google/android/gms/drive/internal/v;": [
        "Lcom/google/android/gms/drive/internal/v;->a()V",
        "Lcom/google/android/gms/drive/internal/v;->a()[Lcom/google/android/gms/drive/internal/OnMetadataResponse;",
        "Lcom/google/android/gms/drive/internal/v;->a()Lcom/google/android/gms/drive/internal/OnMetadataResponse;"
    ],
    "Lcom/google/android/gms/drive/internal/u;": [
        "Lcom/google/android/gms/drive/internal/u;->a()V",
        "Lcom/google/android/gms/drive/internal/u;->a()[Lcom/google/android/gms/drive/internal/OnListEntriesResponse;",
        "Lcom/google/android/gms/drive/internal/u;->a()Lcom/google/android/gms/drive/internal/OnListEntriesResponse;"
    ],
    "Lcom/google/android/gms/drive/internal/c;": [
        "Lcom/google/android/gms/drive/internal/c;->a()[Lcom/google/android/gms/drive/internal/CreateContentsRequest;",
        "Lcom/google/android/gms/drive/internal/c;->a()V",
        "Lcom/google/android/gms/drive/internal/c;->a()Lcom/google/android/gms/drive/internal/CreateContentsRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/y;": [
        "Lcom/google/android/gms/drive/internal/y;->a()V",
        "Lcom/google/android/gms/drive/internal/y;->aa()[Lcom/google/android/gms/drive/internal/QueryRequest;",
        "Lcom/google/android/gms/drive/internal/y;->a()Lcom/google/android/gms/drive/internal/QueryRequest;"
    ],
    "Lcom/google/android/gms/drive/internal/l;": [
        "Lcom/google/android/gms/drive/internal/l;->queryChildren()Lcom/google/android/gms/common/api/PendingResult;",
        "Lcom/google/android/gms/drive/internal/l;->getDriveId()Lcom/google/android/gms/drive/DriveId;"
    ],
    "Lcom/google/android/gms/drive/query/Filters;": [
        "Lcom/google/android/gms/drive/query/Filters;->in()Lcom/google/android/gms/drive/query/Filter;"
    ],
    "Lcom/google/android/gms/drive/query/Query$Builder;": [
        "Lcom/google/android/gms/drive/query/Query$Builder;->addFilter()Lcom/google/android/gms/drive/query/Query$Builder;",
        "Lcom/google/android/gms/drive/query/Query$Builder;->build()Lcom/google/android/gms/drive/query/Query;",
        "Lcom/google/android/gms/drive/query/Query$Builder;->setPageToken()Lcom/google/android/gms/drive/query/Query$Builder;"
    ],
    "Lcom/google/android/gms/drive/query/Query;": [
        "Lcom/google/android/gms/drive/query/Query;->getFilter()Lcom/google/android/gms/drive/query/Filter;",
        "Lcom/google/android/gms/drive/query/Query;->getPageToken()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/drive/internal/h;": [
        "Lcom/google/android/gms/drive/internal/h;->query()Lcom/google/android/gms/common/api/PendingResult;"
    ],
    "Lcom/google/android/gms/drive/widget/DataBufferAdapter;": [
        "Lcom/google/android/gms/drive/widget/DataBufferAdapter;->getItem()Ljava/lang/Object;",
        "Lcom/google/android/gms/drive/widget/DataBufferAdapter;->a()Landroid/view/View;",
        "Lcom/google/android/gms/drive/widget/DataBufferAdapter;->getCount()I",
        "Lcom/google/android/gms/drive/widget/DataBufferAdapter;->notifyDataSetChanged()V"
    ],
    "Landroid/widget/BaseAdapter;": [
        "Landroid/widget/BaseAdapter;->notifyDataSetChanged()V"
    ],
    "Lcom/google/android/gms/auth/GoogleAuthUtil;": [
        "Lcom/google/android/gms/auth/GoogleAuthUtil;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/auth/GoogleAuthUtil;->a()V",
        "Lcom/google/android/gms/auth/GoogleAuthUtil;->getToken()Ljava/lang/String;",
        "Lcom/google/android/gms/auth/GoogleAuthUtil;->a()Z"
    ],
    "Lcom/google/android/gms/auth/GooglePlayServicesAvailabilityException;": [
        "Lcom/google/android/gms/auth/GooglePlayServicesAvailabilityException;->getConnectionStatusCode()I"
    ],
    "Lcom/google/android/gms/internal/o$a;": [
        "Lcom/google/android/gms/internal/o$a;->a()Lcom/google/android/gms/internal/o;"
    ],
    "Lcom/google/android/gms/internal/o;": [
        "Lcom/google/android/gms/internal/o;->a()Landroid/os/Bundle;"
    ],
    "Lcom/google/android/gms/common/GooglePlayServicesRepairableException;": [
        "Lcom/google/android/gms/common/GooglePlayServicesRepairableException;->getMessage()Ljava/lang/String;",
        "Lcom/google/android/gms/common/GooglePlayServicesRepairableException;->getConnectionStatusCode()I",
        "Lcom/google/android/gms/common/GooglePlayServicesRepairableException;->getIntent()Landroid/content/Intent;"
    ],
    "Lcom/google/android/gms/common/GooglePlayServicesNotAvailableException;": [
        "Lcom/google/android/gms/common/GooglePlayServicesNotAvailableException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/appstate/AppState;": [
        "Lcom/google/android/gms/appstate/AppState;->hasConflict()Z",
        "Lcom/google/android/gms/appstate/AppState;->getConflictVersion()Ljava/lang/String;",
        "Lcom/google/android/gms/appstate/AppState;->getLocalVersion()Ljava/lang/String;",
        "Lcom/google/android/gms/appstate/AppState;->getLocalData()[B",
        "Lcom/google/android/gms/appstate/AppState;->getConflictData()[B",
        "Lcom/google/android/gms/appstate/AppState;->getKey()I"
    ],
    "Lcom/google/android/gms/appstate/a;": [
        "Lcom/google/android/gms/appstate/a;->aJ()Lcom/google/android/gms/appstate/AppState;",
        "Lcom/google/android/gms/appstate/a;->a()Z",
        "Lcom/google/android/gms/appstate/a;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/appstate/a;->a()I"
    ],
    "Lcom/google/android/gms/appstate/AppStateBuffer;": [
        "Lcom/google/android/gms/appstate/AppStateBuffer;->get()Lcom/google/android/gms/appstate/AppState;"
    ],
    "Lcom/google/android/gms/appstate/c;": [
        "Lcom/google/android/gms/appstate/c;->aJ()Lcom/google/android/gms/appstate/AppState;",
        "Lcom/google/android/gms/appstate/c;->getInteger()I",
        "Lcom/google/android/gms/appstate/c;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/appstate/c;->getByteArray()[B",
        "Lcom/google/android/gms/appstate/c;->a()Z"
    ],
    "Lcom/google/android/gms/location/DetectedActivity;": [
        "Lcom/google/android/gms/location/DetectedActivity;->aA()I",
        "Lcom/google/android/gms/location/DetectedActivity;->getConfidence()I",
        "Lcom/google/android/gms/location/DetectedActivity;->getType()I",
        "Lcom/google/android/gms/location/DetectedActivity;->getVersionCode()I"
    ],
    "Lcom/google/android/gms/location/DetectedActivityCreator;": [
        "Lcom/google/android/gms/location/DetectedActivityCreator;->createFromParcel()Lcom/google/android/gms/location/DetectedActivity;",
        "Lcom/google/android/gms/location/DetectedActivityCreator;->a()V",
        "Lcom/google/android/gms/location/DetectedActivityCreator;->newArray()[Lcom/google/android/gms/location/DetectedActivity;"
    ],
    "Lcom/google/android/gms/location/ActivityRecognitionResult;": [
        "Lcom/google/android/gms/location/ActivityRecognitionResult;->getVersionCode()I",
        "Lcom/google/android/gms/location/ActivityRecognitionResult;->hasResult()Z"
    ],
    "Lcom/google/android/gms/location/ActivityRecognitionResultCreator;": [
        "Lcom/google/android/gms/location/ActivityRecognitionResultCreator;->a()V",
        "Lcom/google/android/gms/location/ActivityRecognitionResultCreator;->createFromParcel()Lcom/google/android/gms/location/ActivityRecognitionResult;",
        "Lcom/google/android/gms/location/ActivityRecognitionResultCreator;->newArray()[Lcom/google/android/gms/location/ActivityRecognitionResult;"
    ],
    "Lcom/google/android/gms/location/LocationRequestCreator;": [
        "Lcom/google/android/gms/location/LocationRequestCreator;->a()V",
        "Lcom/google/android/gms/location/LocationRequestCreator;->newArray()[Lcom/google/android/gms/location/LocationRequest;",
        "Lcom/google/android/gms/location/LocationRequestCreator;->createFromParcel()Lcom/google/android/gms/location/LocationRequest;"
    ],
    "Lcom/google/android/gms/gcm/GoogleCloudMessaging;": [
        "Lcom/google/android/gms/gcm/GoogleCloudMessaging;->dn()V",
        "Lcom/google/android/gms/gcm/GoogleCloudMessaging;->do()V",
        "Lcom/google/android/gms/gcm/GoogleCloudMessaging;->a()V",
        "Lcom/google/android/gms/gcm/GoogleCloudMessaging;->send()V",
        "Lcom/google/android/gms/gcm/GoogleCloudMessaging;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Lcom/google/android/gms/plus/PlusOneButton;": [
        "Lcom/google/android/gms/plus/PlusOneButton;->isInEditMode()Z",
        "Lcom/google/android/gms/plus/PlusOneButton;->a()V",
        "Lcom/google/android/gms/plus/PlusOneButton;->measureChild()V",
        "Lcom/google/android/gms/plus/PlusOneButton;->getSize()I",
        "Lcom/google/android/gms/plus/PlusOneButton;->removeView()V",
        "Lcom/google/android/gms/plus/PlusOneButton;->getAnnotation()I",
        "Lcom/google/android/gms/plus/PlusOneButton;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/plus/PlusOneButton;->setOnPlusOneClickListener()V",
        "Lcom/google/android/gms/plus/PlusOneButton;->addView()V",
        "Lcom/google/android/gms/plus/PlusOneButton;->setMeasuredDimension()V"
    ],
    "Lcom/google/android/gms/internal/dx;": [
        "Lcom/google/android/gms/internal/dx;->a()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;": [
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->removeView()V",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->setOnClickListener()V",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->eq()V",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->er()Lcom/google/android/gms/internal/go;",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->getPaddingRight()I",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->addView()V",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->getContext()Landroid/content/Context;",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->getPaddingBottom()I",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->getPaddingLeft()I",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->setMeasuredDimension()V",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->getPaddingTop()I",
        "Lcom/google/android/gms/plus/PlusOneButtonWithPopup;->a()I"
    ],
    "Lcom/google/android/gms/internal/go$a;": [
        "Lcom/google/android/gms/internal/go$a;->at()Lcom/google/android/gms/internal/go;"
    ],
    "Lcom/google/android/gms/internal/go;": [
        "Lcom/google/android/gms/internal/go;->cancelClick()V",
        "Lcom/google/android/gms/internal/go;->getResolution()Landroid/app/PendingIntent;"
    ],
    "Lcom/google/android/gms/plus/PlusOneDummyView;": [
        "Lcom/google/android/gms/plus/PlusOneDummyView;->aP()Landroid/graphics/Point;",
        "Lcom/google/android/gms/plus/PlusOneDummyView;->es()Lcom/google/android/gms/plus/PlusOneDummyView$d;",
        "Lcom/google/android/gms/plus/PlusOneDummyView;->addView()V",
        "Lcom/google/android/gms/plus/PlusOneDummyView;->getResources()Landroid/content/res/Resources;",
        "Lcom/google/android/gms/plus/PlusOneDummyView;->getContext()Landroid/content/Context;"
    ],
    "Lcom/google/android/gms/plus/PlusOneDummyView$d;": [
        "Lcom/google/android/gms/plus/PlusOneDummyView$d;->isValid()Z",
        "Lcom/google/android/gms/plus/PlusOneDummyView$d;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcom/google/android/gms/plus/model/people/PersonBuffer;": [
        "Lcom/google/android/gms/plus/model/people/PersonBuffer;->get()Lcom/google/android/gms/plus/model/people/Person;"
    ],
    "Lcom/google/android/gms/plus/model/moments/MomentBuffer;": [
        "Lcom/google/android/gms/plus/model/moments/MomentBuffer;->get()Lcom/google/android/gms/plus/model/moments/Moment;"
    ],
    "Lcom/google/android/gms/games/GameEntity;": [
        "Lcom/google/android/gms/games/GameEntity;->isPlayEnabledGame()Z",
        "Lcom/google/android/gms/games/GameEntity;->freeze()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/games/GameEntity;->getSecondaryCategory()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->getHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/GameEntity;->getAchievementTotalCount()I",
        "Lcom/google/android/gms/games/GameEntity;->getFeaturedImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/GameEntity;->getDeveloperName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->a()I",
        "Lcom/google/android/gms/games/GameEntity;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->getDescription()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->getPrimaryCategory()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->a()Z",
        "Lcom/google/android/gms/games/GameEntity;->getInstancePackageName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->bz()Z",
        "Lcom/google/android/gms/games/GameEntity;->isTurnBasedMultiplayerEnabled()Z",
        "Lcom/google/android/gms/games/GameEntity;->getVersionCode()I",
        "Lcom/google/android/gms/games/GameEntity;->isRealTimeMultiplayerEnabled()Z",
        "Lcom/google/android/gms/games/GameEntity;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->by()Ljava/lang/Integer;",
        "Lcom/google/android/gms/games/GameEntity;->isInstanceInstalled()Z",
        "Lcom/google/android/gms/games/GameEntity;->writeToParcel()V",
        "Lcom/google/android/gms/games/GameEntity;->getApplicationId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/GameEntity;->getLeaderboardCount()I",
        "Lcom/google/android/gms/games/GameEntity;->getGameplayAclStatus()I",
        "Lcom/google/android/gms/games/GameEntity;->getIconImageUri()Landroid/net/Uri;"
    ],
    "Lcom/google/android/gms/games/a;": [
        "Lcom/google/android/gms/games/a;->a()Lcom/google/android/gms/games/GameEntity;",
        "Lcom/google/android/gms/games/a;->am()[Lcom/google/android/gms/games/GameEntity;",
        "Lcom/google/android/gms/games/a;->a()V"
    ],
    "Lcom/google/android/gms/games/GamesClient;": [
        "Lcom/google/android/gms/games/GamesClient;->finishTurnBasedMatch()V"
    ],
    "Lcom/google/android/gms/games/b;": [
        "Lcom/google/android/gms/games/b;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/b;->getBoolean()Z",
        "Lcom/google/android/gms/games/b;->a()V",
        "Lcom/google/android/gms/games/b;->freeze()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/games/b;->a()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/b;->getInteger()I"
    ],
    "Lcom/google/android/gms/games/PlayerEntity;": [
        "Lcom/google/android/gms/games/PlayerEntity;->bz()Z",
        "Lcom/google/android/gms/games/PlayerEntity;->getPlayerId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/PlayerEntity;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/PlayerEntity;->writeToParcel()V",
        "Lcom/google/android/gms/games/PlayerEntity;->getRetrievedTimestamp()J",
        "Lcom/google/android/gms/games/PlayerEntity;->getHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/PlayerEntity;->freeze()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/games/PlayerEntity;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/PlayerEntity;->by()Ljava/lang/Integer;",
        "Lcom/google/android/gms/games/PlayerEntity;->a()I",
        "Lcom/google/android/gms/games/PlayerEntity;->a()Z",
        "Lcom/google/android/gms/games/PlayerEntity;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/PlayerEntity;->getVersionCode()I",
        "Lcom/google/android/gms/games/PlayerEntity;->getDisplayName()V"
    ],
    "Lcom/google/android/gms/games/d;": [
        "Lcom/google/android/gms/games/d;->a()V",
        "Lcom/google/android/gms/games/d;->a()Lcom/google/android/gms/games/PlayerEntity;",
        "Lcom/google/android/gms/games/d;->an()[Lcom/google/android/gms/games/PlayerEntity;"
    ],
    "Lcom/google/android/gms/internal/eo;": [
        "Lcom/google/android/gms/internal/eo;->a()V"
    ],
    "Lcom/google/android/gms/games/e;": [
        "Lcom/google/android/gms/games/e;->getLong()J",
        "Lcom/google/android/gms/games/e;->a()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/e;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/e;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/e;->getDisplayName()V",
        "Lcom/google/android/gms/games/e;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/e;->getHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/e;->freeze()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/games/e;->a()V"
    ],
    "Lcom/google/android/gms/games/multiplayer/Participant;": [
        "Lcom/google/android/gms/games/multiplayer/Participant;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getStatus()I",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getCapabilities()I",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getResult()Lcom/google/android/gms/games/multiplayer/ParticipantResult;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getPlayer()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->isConnectedToRoom()Z",
        "Lcom/google/android/gms/games/multiplayer/Participant;->dm()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->freeze()Ljava/lang/Object;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getParticipantId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/Participant;->getDisplayName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;": [
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->a()I",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->dm()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getCapabilities()I",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->by()Ljava/lang/Integer;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getStatus()I",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->writeToParcel()V",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getPlayer()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getVersionCode()I",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->freeze()Lcom/google/android/gms/games/multiplayer/Participant;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->bz()Z",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getParticipantId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->getResult()Lcom/google/android/gms/games/multiplayer/ParticipantResult;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->isConnectedToRoom()Z",
        "Lcom/google/android/gms/games/multiplayer/ParticipantEntity;->a()Z"
    ],
    "Lcom/google/android/gms/games/multiplayer/d;": [
        "Lcom/google/android/gms/games/multiplayer/d;->ax()[Lcom/google/android/gms/games/multiplayer/ParticipantEntity;",
        "Lcom/google/android/gms/games/multiplayer/d;->a()Lcom/google/android/gms/games/multiplayer/ParticipantEntity;",
        "Lcom/google/android/gms/games/multiplayer/d;->a()V"
    ],
    "Lcom/google/android/gms/games/multiplayer/ParticipantBuffer;": [
        "Lcom/google/android/gms/games/multiplayer/ParticipantBuffer;->get()Lcom/google/android/gms/games/multiplayer/Participant;"
    ],
    "Lcom/google/android/gms/games/multiplayer/e;": [
        "Lcom/google/android/gms/games/multiplayer/e;->getParticipantId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/e;->getInteger()I",
        "Lcom/google/android/gms/games/multiplayer/e;->a()Z",
        "Lcom/google/android/gms/games/multiplayer/e;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/e;->a()V",
        "Lcom/google/android/gms/games/multiplayer/e;->a()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/multiplayer/e;->freeze()Lcom/google/android/gms/games/multiplayer/Participant;"
    ],
    "Lcom/google/android/gms/games/multiplayer/b;": [
        "Lcom/google/android/gms/games/multiplayer/b;->getLong()J",
        "Lcom/google/android/gms/games/multiplayer/b;->freeze()Lcom/google/android/gms/games/multiplayer/Invitation;",
        "Lcom/google/android/gms/games/multiplayer/b;->getInteger()I",
        "Lcom/google/android/gms/games/multiplayer/b;->getString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/multiplayer/InvitationEntity;": [
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->by()Ljava/lang/Integer;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getInvitationType()I",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->writeToParcel()V",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->a()I",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getVersionCode()I",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getInvitationId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getGame()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getInviter()Lcom/google/android/gms/games/multiplayer/Participant;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->bz()Z",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->freeze()Lcom/google/android/gms/games/multiplayer/Invitation;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getParticipants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->getCreationTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/InvitationEntity;->a()Z"
    ],
    "Lcom/google/android/gms/games/multiplayer/Invitation;": [
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getCreationTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getInviter()Lcom/google/android/gms/games/multiplayer/Participant;",
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getParticipants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getInvitationId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getInvitationType()I",
        "Lcom/google/android/gms/games/multiplayer/Invitation;->getGame()Lcom/google/android/gms/games/Game;"
    ],
    "Lcom/google/android/gms/games/multiplayer/a;": [
        "Lcom/google/android/gms/games/multiplayer/a;->a()Lcom/google/android/gms/games/multiplayer/InvitationEntity;",
        "Lcom/google/android/gms/games/multiplayer/a;->a()V",
        "Lcom/google/android/gms/games/multiplayer/a;->aw()[Lcom/google/android/gms/games/multiplayer/InvitationEntity;"
    ],
    "Lcom/google/android/gms/games/multiplayer/InvitationBuffer;": [
        "Lcom/google/android/gms/games/multiplayer/InvitationBuffer;->getEntry()Lcom/google/android/gms/games/multiplayer/Invitation;"
    ],
    "Lcom/google/android/gms/games/multiplayer/ParticipantResult;": [
        "Lcom/google/android/gms/games/multiplayer/ParticipantResult;->getParticipantId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantResult;->getResult()I",
        "Lcom/google/android/gms/games/multiplayer/ParticipantResult;->getVersionCode()I",
        "Lcom/google/android/gms/games/multiplayer/ParticipantResult;->getPlacing()I"
    ],
    "Lcom/google/android/gms/games/multiplayer/ParticipantResultCreator;": [
        "Lcom/google/android/gms/games/multiplayer/ParticipantResultCreator;->createFromParcel()Lcom/google/android/gms/games/multiplayer/ParticipantResult;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantResultCreator;->newArray()[Lcom/google/android/gms/games/multiplayer/ParticipantResult;",
        "Lcom/google/android/gms/games/multiplayer/ParticipantResultCreator;->a()V"
    ],
    "Lcom/google/android/gms/internal/fg;": [
        "Lcom/google/android/gms/internal/fg;->isValid()Z"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/LoadMatchesResponse;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/LoadMatchesResponse;->a()Lcom/google/android/gms/common/data/DataHolder;"
    ],
    "Lcom/google/android/gms/internal/fi;": [
        "Lcom/google/android/gms/internal/fi;->at()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/a;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getLong()J",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getByteArray()[B",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getRematchId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getInteger()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->freeze()Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getParticipants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getBoolean()Z",
        "Lcom/google/android/gms/games/multiplayer/turnbased/a;->getTurnStatus()I"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getVersionCode()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->isLocallyModified()Z",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getVersion()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getLastUpdaterId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->a()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getStatus()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getGame()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getMatchId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getCreatorId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getMatchNumber()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getPendingParticipantId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->a()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getLastUpdatedTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getParticipants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getRematchId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getPreviousMatchData()[B",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->freeze()Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->a()Lcom/google/android/gms/games/multiplayer/Participant;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->writeToParcel()V",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->a()Z",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getCreationTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getData()[B",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;->getTurnStatus()I"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchBuffer;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchBuffer;->getEntry()Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getData()[B",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getGame()Lcom/google/android/gms/games/Game;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getMatchId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getMatchNumber()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getAvailableAutoMatchSlots()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getLastUpdaterId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getLastUpdatedTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getTurnStatus()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getRematchId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getPreviousMatchData()[B",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getCreatorId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->isLocallyModified()Z",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getParticipants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getVersion()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getPendingParticipantId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getStatus()I",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatch;->getCreationTimestamp()J"
    ],
    "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntityCreator;": [
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntityCreator;->createFromParcel()Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntityCreator;->newArray()[Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntity;",
        "Lcom/google/android/gms/games/multiplayer/turnbased/TurnBasedMatchEntityCreator;->a()V"
    ],
    "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;": [
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getParticipants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getRoomId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getDescription()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getVariant()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->freeze()Lcom/google/android/gms/games/multiplayer/realtime/Room;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getCreatorId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->by()Ljava/lang/Integer;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getAutoMatchCriteria()Landroid/os/Bundle;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->a()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getVersionCode()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->a()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getAutoMatchWaitEstimateSeconds()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->writeToParcel()V",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->a()Z",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getStatus()I",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->getCreationTimestamp()J",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->bz()Z",
        "Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;->a()Lcom/google/android/gms/games/multiplayer/Participant;"
    ],
    "Lcom/google/android/gms/games/multiplayer/realtime/c;": [
        "Lcom/google/android/gms/games/multiplayer/realtime/c;->a()V",
        "Lcom/google/android/gms/games/multiplayer/realtime/c;->a()Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;",
        "Lcom/google/android/gms/games/multiplayer/realtime/c;->az()[Lcom/google/android/gms/games/multiplayer/realtime/RoomEntity;"
    ],
    "Lcom/google/android/gms/games/multiplayer/realtime/d;": [
        "Lcom/google/android/gms/games/multiplayer/realtime/d;->a()V",
        "Lcom/google/android/gms/games/multiplayer/realtime/d;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/multiplayer/realtime/d;->getBoolean()Z",
        "Lcom/google/android/gms/games/multiplayer/realtime/d;->freeze()Lcom/google/android/gms/games/multiplayer/realtime/Room;",
        "Lcom/google/android/gms/games/multiplayer/realtime/d;->getLong()J",
        "Lcom/google/android/gms/games/multiplayer/realtime/d;->getInteger()I"
    ],
    "[B": [
        "[B->clone()Ljava/lang/Object;"
    ],
    "Lcom/google/android/gms/games/achievement/a;": [
        "Lcom/google/android/gms/games/achievement/a;->getLong()J",
        "Lcom/google/android/gms/games/achievement/a;->getInteger()I",
        "Lcom/google/android/gms/games/achievement/a;->getState()I",
        "Lcom/google/android/gms/games/achievement/a;->a()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/achievement/a;->getAchievementId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/achievement/a;->getCurrentSteps()I",
        "Lcom/google/android/gms/games/achievement/a;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/achievement/a;->getTotalSteps()I",
        "Lcom/google/android/gms/games/achievement/a;->a()V",
        "Lcom/google/android/gms/games/achievement/a;->getType()I",
        "Lcom/google/android/gms/games/achievement/a;->getName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/achievement/AchievementBuffer;": [
        "Lcom/google/android/gms/games/achievement/AchievementBuffer;->get()Lcom/google/android/gms/games/achievement/Achievement;"
    ],
    "Lcom/google/android/gms/games/leaderboard/a;": [
        "Lcom/google/android/gms/games/leaderboard/a;->a()I",
        "Lcom/google/android/gms/games/leaderboard/a;->dd()Lcom/google/android/gms/games/leaderboard/Leaderboard;",
        "Lcom/google/android/gms/games/leaderboard/a;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/a;->a()Z"
    ],
    "Lcom/google/android/gms/games/leaderboard/b;": [
        "Lcom/google/android/gms/games/leaderboard/b;->dd()Lcom/google/android/gms/games/leaderboard/Leaderboard;",
        "Lcom/google/android/gms/games/leaderboard/b;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/b;->getInteger()I",
        "Lcom/google/android/gms/games/leaderboard/b;->a()V",
        "Lcom/google/android/gms/games/leaderboard/b;->a()Landroid/net/Uri;"
    ],
    "Lcom/google/android/gms/games/leaderboard/Leaderboard;": [
        "Lcom/google/android/gms/games/leaderboard/Leaderboard;->getVariants()Ljava/util/ArrayList;",
        "Lcom/google/android/gms/games/leaderboard/Leaderboard;->getIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/leaderboard/Leaderboard;->getScoreOrder()I",
        "Lcom/google/android/gms/games/leaderboard/Leaderboard;->getLeaderboardId()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/Leaderboard;->getDisplayName()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;": [
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->freeze()Ljava/lang/Object;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getPlayerRank()J",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->di()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getCollection()I",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->dj()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->hasPlayerInfo()Z",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->dh()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getDisplayPlayerRank()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getNumScores()J",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getTimeSpan()I",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getRawPlayerScore()J",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getDisplayPlayerScore()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;->getPlayerScoreTag()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/fh;": [
        "Lcom/google/android/gms/internal/fh;->at()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/internal/ff;": [
        "Lcom/google/android/gms/internal/ff;->at()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/leaderboard/f;": [
        "Lcom/google/android/gms/games/leaderboard/f;->a()I",
        "Lcom/google/android/gms/games/leaderboard/f;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/f;->dk()Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;",
        "Lcom/google/android/gms/games/leaderboard/f;->a()Z"
    ],
    "Lcom/google/android/gms/games/leaderboard/g;": [
        "Lcom/google/android/gms/games/leaderboard/g;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/g;->getInteger()I",
        "Lcom/google/android/gms/games/leaderboard/g;->dk()Lcom/google/android/gms/games/leaderboard/LeaderboardVariant;",
        "Lcom/google/android/gms/games/leaderboard/g;->a()Z",
        "Lcom/google/android/gms/games/leaderboard/g;->getLong()J"
    ],
    "Lcom/google/android/gms/games/leaderboard/LeaderboardBuffer;": [
        "Lcom/google/android/gms/games/leaderboard/LeaderboardBuffer;->getEntry()Lcom/google/android/gms/games/leaderboard/Leaderboard;"
    ],
    "Lcom/google/android/gms/games/leaderboard/SubmitScoreResult;": [
        "Lcom/google/android/gms/games/leaderboard/SubmitScoreResult;->a()V"
    ],
    "Lcom/google/android/gms/games/leaderboard/SubmitScoreResult$Result;": [
        "Lcom/google/android/gms/games/leaderboard/SubmitScoreResult$Result;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;": [
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getRawScore()J",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getScoreHolderIconImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getDisplayScore()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getScoreHolder()Lcom/google/android/gms/games/Player;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getRank()J",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getDisplayRank()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getScoreHolderDisplayName()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getTimestampMillis()J",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getScoreHolderHiResImageUri()Landroid/net/Uri;",
        "Lcom/google/android/gms/games/leaderboard/LeaderboardScore;->getScoreTag()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/leaderboard/d;": [
        "Lcom/google/android/gms/games/leaderboard/d;->dg()Lcom/google/android/gms/games/leaderboard/LeaderboardScore;",
        "Lcom/google/android/gms/games/leaderboard/d;->a()Z",
        "Lcom/google/android/gms/games/leaderboard/d;->a()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/d;->a()I"
    ],
    "Lcom/google/android/gms/games/leaderboard/i;": [
        "Lcom/google/android/gms/games/leaderboard/i;->av()Lcom/google/android/gms/games/leaderboard/i$a;",
        "Lcom/google/android/gms/games/leaderboard/i;->au()Landroid/content/ContentValues;",
        "Lcom/google/android/gms/games/leaderboard/i;->a()V"
    ],
    "Lcom/google/android/gms/games/leaderboard/i$a;": [
        "Lcom/google/android/gms/games/leaderboard/i$a;->toString()Ljava/lang/String;"
    ],
    "Lcom/google/android/gms/games/leaderboard/e;": [
        "Lcom/google/android/gms/games/leaderboard/e;->dg()Lcom/google/android/gms/games/leaderboard/LeaderboardScore;",
        "Lcom/google/android/gms/games/leaderboard/e;->a()Z",
        "Lcom/google/android/gms/games/leaderboard/e;->a()V",
        "Lcom/google/android/gms/games/leaderboard/e;->getLong()J",
        "Lcom/google/android/gms/games/leaderboard/e;->getString()Ljava/lang/String;",
        "Lcom/google/android/gms/games/leaderboard/e;->a()Landroid/net/Uri;"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->println()V"
    ],
    "Lcom/frhn/nlug175314/Util;": [
        "Lcom/frhn/nlug175314/Util;->a()[Ljava/lang/String;",
        "Lcom/frhn/nlug175314/Util;->a()Lorg/json/JSONObject;",
        "Lcom/frhn/nlug175314/Util;->a()V",
        "Lcom/frhn/nlug175314/Util;->a()I",
        "Lcom/frhn/nlug175314/Util;->a()Z",
        "Lcom/frhn/nlug175314/Util;->a()F",
        "Lcom/frhn/nlug175314/Util;->a()J",
        "Lcom/frhn/nlug175314/Util;->a()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/AdListener$BannerAdListener;": [
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->noAdAvailableListener()V",
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->onAdClickListener()V",
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->onAdLoadingListener()V",
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->onCloseListener()V",
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->onAdExpandedListner()V",
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->onErrorListener()V",
        "Lcom/frhn/nlug175314/AdListener$BannerAdListener;->onAdLoadedListener()V"
    ],
    "Lcom/frhn/nlug175314/AdView;": [
        "Lcom/frhn/nlug175314/AdView;->setBackground()V",
        "Lcom/frhn/nlug175314/AdView;->getPlacementType()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/AdView;->getadHeight()I",
        "Lcom/frhn/nlug175314/AdView;->removeAllViews()V",
        "Lcom/frhn/nlug175314/AdView;->removeView()V",
        "Lcom/frhn/nlug175314/AdView;->a()Z",
        "Lcom/frhn/nlug175314/AdView;->a()Landroid/view/animation/Animation;",
        "Lcom/frhn/nlug175314/AdView;->getadWidth()I",
        "Lcom/frhn/nlug175314/AdView;->addView()V",
        "Lcom/frhn/nlug175314/AdView;->setDescendantFocusability()V",
        "Lcom/frhn/nlug175314/AdView;->getChildCount()I",
        "Lcom/frhn/nlug175314/AdView;->setBackgroundDrawable()V",
        "Lcom/frhn/nlug175314/AdView;->setMeasuredDimension()V",
        "Lcom/frhn/nlug175314/AdView;->post()Z",
        "Lcom/frhn/nlug175314/AdView;->getBackground()Landroid/graphics/drawable/Drawable;",
        "Lcom/frhn/nlug175314/AdView;->getChildAt()Landroid/view/View;",
        "Lcom/frhn/nlug175314/AdView;->getContext()Landroid/content/Context;",
        "Lcom/frhn/nlug175314/AdView;->getParent()Landroid/view/ViewParent;",
        "Lcom/frhn/nlug175314/AdView;->getAd()V",
        "Lcom/frhn/nlug175314/AdView;->setVisibility()V",
        "Lcom/frhn/nlug175314/AdView;->a()V",
        "Lcom/frhn/nlug175314/AdView;->setClickable()V",
        "Lcom/frhn/nlug175314/AdView;->setFocusable()V"
    ],
    "Lcom/frhn/nlug175314/o;": [
        "Lcom/frhn/nlug175314/o;->a()Landroid/location/Location;",
        "Lcom/frhn/nlug175314/o;->a()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/o;->a()Z"
    ],
    "Lcom/frhn/nlug175314/n;": [
        "Lcom/frhn/nlug175314/n;->a()Ljava/util/List;",
        "Lcom/frhn/nlug175314/n;->a()V",
        "Lcom/frhn/nlug175314/n;->a()J",
        "Lcom/frhn/nlug175314/n;->a()Z"
    ],
    "Lcom/frhn/nlug175314/JP$ParseMraidJson;": [
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->getWidth()I",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->isHtmlAd()Z",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->isJsAd()Z",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->getTag()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->getAd_url()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->getRefreshTime()I",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->isInlineScript()Z",
        "Lcom/frhn/nlug175314/JP$ParseMraidJson;->getHeight()I"
    ],
    "Lcom/frhn/nlug175314/a;": [
        "Lcom/frhn/nlug175314/a;->a()V"
    ],
    "Lcom/frhn/nlug175314/JP$ParseBannerAd;": [
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->removeEventUrl()V",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getEventUrl()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->isJsAd()Z",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getWidth()I",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getTag()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getHeight()I",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->a()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getBeaconUrl()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->a()Z",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->isHtmlAd()Z",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getRefreshTime()I",
        "Lcom/frhn/nlug175314/JP$ParseBannerAd;->getAdimage()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/IB;": [
        "Lcom/frhn/nlug175314/IB;->setScrollBarStyle()V",
        "Lcom/frhn/nlug175314/IB;->setVerticalScrollBarEnabled()V",
        "Lcom/frhn/nlug175314/IB;->setWebViewClient()V",
        "Lcom/frhn/nlug175314/IB;->loadUrl()V",
        "Lcom/frhn/nlug175314/IB;->clearView()V",
        "Lcom/frhn/nlug175314/IB;->setHorizontalScrollBarEnabled()V",
        "Lcom/frhn/nlug175314/IB;->setBackgroundColor()V",
        "Lcom/frhn/nlug175314/IB;->getContext()Landroid/content/Context;",
        "Lcom/frhn/nlug175314/IB;->setLayoutParams()V",
        "Lcom/frhn/nlug175314/IB;->loadDataWithBaseURL()V",
        "Lcom/frhn/nlug175314/IB;->startAnimation()V",
        "Lcom/frhn/nlug175314/IB;->a()V",
        "Lcom/frhn/nlug175314/IB;->getSettings()Landroid/webkit/WebSettings;"
    ],
    "Ljava/security/NoSuchAlgorithmException;": [
        "Ljava/security/NoSuchAlgorithmException;->printStackTrace()V",
        "Ljava/security/NoSuchAlgorithmException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/o$a;": [
        "Lcom/frhn/nlug175314/o$a;->a()Ljava/util/UUID;"
    ],
    "Lcom/frhn/nlug175314/AdListener$AdType;": [
        "Lcom/frhn/nlug175314/AdListener$AdType;->toString()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/AdListener$AdType;->ordinal()I"
    ],
    "Ljava/lang/reflect/InvocationTargetException;": [
        "Ljava/lang/reflect/InvocationTargetException;->toString()Ljava/lang/String;",
        "Ljava/lang/reflect/InvocationTargetException;->printStackTrace()V",
        "Ljava/lang/reflect/InvocationTargetException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lcom/frhn/nlug175314/c;": [
        "Lcom/frhn/nlug175314/c;->a()V"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/AdView$a;": [
        "Lcom/frhn/nlug175314/AdView$a;->a()V"
    ],
    "Lorg/xmlpull/v1/XmlPullParserFactory;": [
        "Lorg/xmlpull/v1/XmlPullParserFactory;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;",
        "Lorg/xmlpull/v1/XmlPullParserFactory;->newInstance()Lorg/xmlpull/v1/XmlPullParserFactory;",
        "Lorg/xmlpull/v1/XmlPullParserFactory;->setNamespaceAware()V"
    ],
    "Lorg/xmlpull/v1/XmlPullParser;": [
        "Lorg/xmlpull/v1/XmlPullParser;->setFeature()V",
        "Lorg/xmlpull/v1/XmlPullParser;->getDepth()I",
        "Lorg/xmlpull/v1/XmlPullParser;->isEmptyElementTag()Z",
        "Lorg/xmlpull/v1/XmlPullParser;->nextTag()I",
        "Lorg/xmlpull/v1/XmlPullParser;->nextText()Ljava/lang/String;",
        "Lorg/xmlpull/v1/XmlPullParser;->next()I",
        "Lorg/xmlpull/v1/XmlPullParser;->getEventType()I",
        "Lorg/xmlpull/v1/XmlPullParser;->require()V",
        "Lorg/xmlpull/v1/XmlPullParser;->setInput()V",
        "Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue()Ljava/lang/String;",
        "Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/XmlParser;": [
        "Lcom/frhn/nlug175314/XmlParser;->a()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/XmlParser;->a()Ljava/util/List;",
        "Lcom/frhn/nlug175314/XmlParser;->a()V"
    ],
    "Lcom/frhn/nlug175314/Base64;": [
        "Lcom/frhn/nlug175314/Base64;->encode()[C",
        "Lcom/frhn/nlug175314/Base64;->encodeLines()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/Base64;->decode()[B",
        "Lcom/frhn/nlug175314/Base64;->decodeString()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/m;": [
        "Lcom/frhn/nlug175314/m;->sendIntegrationError()V"
    ],
    "Ljava/util/StringTokenizer;": [
        "Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/AdListener;": [
        "Lcom/frhn/nlug175314/AdListener;->onAdCached()V",
        "Lcom/frhn/nlug175314/AdListener;->onAdError()V",
        "Lcom/frhn/nlug175314/AdListener;->onSmartWallAdShowing()V",
        "Lcom/frhn/nlug175314/AdListener;->noAdAvailableListener()V",
        "Lcom/frhn/nlug175314/AdListener;->onSmartWallAdClosed()V",
        "Lcom/frhn/nlug175314/AdListener;->onSDKIntegrationError()V"
    ],
    "Ljava/text/DateFormat;": [
        "Ljava/text/DateFormat;->getDateTimeInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;",
        "Ljava/text/DateFormat;->format()Ljava/lang/String;",
        "Ljava/text/DateFormat;->parse()Ljava/util/Date;",
        "Ljava/text/DateFormat;->setTimeZone()V"
    ],
    "Lcom/frhn/nlug175314/CE;": [
        "Lcom/frhn/nlug175314/CE;->a()V",
        "Lcom/frhn/nlug175314/CE;->a()J"
    ],
    "Lcom/frhn/nlug175314/CE$Recurrence;": [
        "Lcom/frhn/nlug175314/CE$Recurrence;->getRrule()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/CE$Recurrence;->a()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/MV;": [
        "Lcom/frhn/nlug175314/MV;->getLeft()I",
        "Lcom/frhn/nlug175314/MV;->onAnimationEnd()V",
        "Lcom/frhn/nlug175314/MV;->setBackgroundColor()V",
        "Lcom/frhn/nlug175314/MV;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/frhn/nlug175314/MV;->setWebViewClient()V",
        "Lcom/frhn/nlug175314/MV;->a()[I",
        "Lcom/frhn/nlug175314/MV;->getParent()Landroid/view/ViewParent;",
        "Lcom/frhn/nlug175314/MV;->getContext()Landroid/content/Context;",
        "Lcom/frhn/nlug175314/MV;->a()Landroid/widget/Button;",
        "Lcom/frhn/nlug175314/MV;->getX()F",
        "Lcom/frhn/nlug175314/MV;->getY()F",
        "Lcom/frhn/nlug175314/MV;->getRootView()Landroid/view/View;",
        "Lcom/frhn/nlug175314/MV;->getWidth()I",
        "Lcom/frhn/nlug175314/MV;->post()Z",
        "Lcom/frhn/nlug175314/MV;->setHorizontalScrollBarEnabled()V",
        "Lcom/frhn/nlug175314/MV;->setScrollBarStyle()V",
        "Lcom/frhn/nlug175314/MV;->setLayoutParams()V",
        "Lcom/frhn/nlug175314/MV;->setVerticalScrollBarEnabled()V",
        "Lcom/frhn/nlug175314/MV;->setButtonBackground()V",
        "Lcom/frhn/nlug175314/MV;->loadDataWithBaseURL()V",
        "Lcom/frhn/nlug175314/MV;->a()V",
        "Lcom/frhn/nlug175314/MV;->loadUrl()V",
        "Lcom/frhn/nlug175314/MV;->getTop()I",
        "Lcom/frhn/nlug175314/MV;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Lcom/frhn/nlug175314/MV;->getHeight()I",
        "Lcom/frhn/nlug175314/MV;->addJavascriptInterface()V",
        "Lcom/frhn/nlug175314/MV;->getResources()Landroid/content/res/Resources;",
        "Lcom/frhn/nlug175314/MV;->clearView()V",
        "Lcom/frhn/nlug175314/MV;->getTokenSize()I",
        "Lcom/frhn/nlug175314/MV;->getVisibility()I",
        "Lcom/frhn/nlug175314/MV;->setState()V",
        "Lcom/frhn/nlug175314/MV;->setWebChromeClient()V",
        "Lcom/frhn/nlug175314/MV;->setViewable()V"
    ],
    "Lcom/frhn/nlug175314/MV$a;": [
        "Lcom/frhn/nlug175314/MV$a;->a()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/MV$MraidAdUtil;": [
        "Lcom/frhn/nlug175314/MV$MraidAdUtil;->getResizeProperties()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/MV$MraidAdUtil;->getForceOrientation()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/MV$MraidAdUtil;->getGravity()I",
        "Lcom/frhn/nlug175314/MV$MraidAdUtil;->isOrientationChange()Z"
    ],
    "Lcom/frhn/nlug175314/VDActivity;": [
        "Lcom/frhn/nlug175314/VDActivity;->findViewById()Landroid/view/View;",
        "Lcom/frhn/nlug175314/VDActivity;->startActivity()V",
        "Lcom/frhn/nlug175314/VDActivity;->setRequestedOrientation()V",
        "Lcom/frhn/nlug175314/VDActivity;->setVolumeControlStream()V",
        "Lcom/frhn/nlug175314/VDActivity;->getWindow()Landroid/view/Window;",
        "Lcom/frhn/nlug175314/VDActivity;->setContentView()V",
        "Lcom/frhn/nlug175314/VDActivity;->requestWindowFeature()Z",
        "Lcom/frhn/nlug175314/VDActivity;->a()V",
        "Lcom/frhn/nlug175314/VDActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/frhn/nlug175314/VDActivity;->finish()V",
        "Lcom/frhn/nlug175314/VDActivity;->getSystemService()Ljava/lang/Object;"
    ],
    "Lcom/frhn/nlug175314/XmlParser$Creative;": [
        "Lcom/frhn/nlug175314/XmlParser$Creative;->getAdParams()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/XmlParser$Creative;->isAdLinearSkipable()Z",
        "Lcom/frhn/nlug175314/XmlParser$Creative;->getVideoCustomClickTracking()Ljava/util/List;",
        "Lcom/frhn/nlug175314/XmlParser$Creative;->getSkipOffSet()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/XmlParser$Creative;->getVideoClickTracking()Ljava/util/List;",
        "Lcom/frhn/nlug175314/XmlParser$Creative;->getMediaFiles()Ljava/util/List;",
        "Lcom/frhn/nlug175314/XmlParser$Creative;->getTrackingEventMap()Ljava/util/HashMap;"
    ],
    "Lcom/frhn/nlug175314/VU;": [
        "Lcom/frhn/nlug175314/VU;->a()J",
        "Lcom/frhn/nlug175314/VU;->a()V",
        "Lcom/frhn/nlug175314/VU;->a()Ljava/lang/String;"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->onAttachedToWindow()V",
        "Landroid/widget/ProgressBar;->onDetachedFromWindow()V",
        "Landroid/widget/ProgressBar;->setMax()V",
        "Landroid/widget/ProgressBar;->setLayoutParams()V",
        "Landroid/widget/ProgressBar;->setProgress()V",
        "Landroid/widget/ProgressBar;->setVisibility()V"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->create()Landroid/media/MediaPlayer;",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->stop()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->setOnCompletionListener()V",
        "Landroid/media/MediaPlayer;->setVolume()V",
        "Landroid/media/MediaPlayer;->isPlaying()Z"
    ],
    "Lcom/frhn/nlug175314/q;": [
        "Lcom/frhn/nlug175314/q;->onCreate()V",
        "Lcom/frhn/nlug175314/q;->onPause()V",
        "Lcom/frhn/nlug175314/q;->onStop()V",
        "Lcom/frhn/nlug175314/q;->onDestroy()V",
        "Lcom/frhn/nlug175314/q;->a()V"
    ],
    "Lcom/frhn/nlug175314/MainActivity;": [
        "Lcom/frhn/nlug175314/MainActivity;->getWindow()Landroid/view/Window;",
        "Lcom/frhn/nlug175314/MainActivity;->a()Z",
        "Lcom/frhn/nlug175314/MainActivity;->finish()V",
        "Lcom/frhn/nlug175314/MainActivity;->requestWindowFeature()Z",
        "Lcom/frhn/nlug175314/MainActivity;->a()V",
        "Lcom/frhn/nlug175314/MainActivity;->getIntent()Landroid/content/Intent;"
    ],
    "Lcom/frhn/nlug175314/p;": [
        "Lcom/frhn/nlug175314/p;->a()Lcom/frhn/nlug175314/XmlParser;",
        "Lcom/frhn/nlug175314/p;->a()V",
        "Lcom/frhn/nlug175314/p;->a()Z"
    ],
    "Lcom/frhn/nlug175314/b;": [
        "Lcom/frhn/nlug175314/b;->a()[Ljava/lang/String;",
        "Lcom/frhn/nlug175314/b;->a()V",
        "Lcom/frhn/nlug175314/b;->a()Z",
        "Lcom/frhn/nlug175314/b;->a()Ljava/lang/String;"
    ],
    "Ljava/lang/IllegalStateException;": [
        "Ljava/lang/IllegalStateException;->printStackTrace()V"
    ],
    "Lcom/frhn/nlug175314/l;": [
        "Lcom/frhn/nlug175314/l;->a()V"
    ],
    "Lcom/frhn/nlug175314/BrowserActivity;": [
        "Lcom/frhn/nlug175314/BrowserActivity;->setTheme()V",
        "Lcom/frhn/nlug175314/BrowserActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/frhn/nlug175314/BrowserActivity;->finish()V",
        "Lcom/frhn/nlug175314/BrowserActivity;->requestWindowFeature()Z",
        "Lcom/frhn/nlug175314/BrowserActivity;->a()V",
        "Lcom/frhn/nlug175314/BrowserActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/frhn/nlug175314/BrowserActivity;->startActivity()V",
        "Lcom/frhn/nlug175314/BrowserActivity;->setContentView()V",
        "Lcom/frhn/nlug175314/BrowserActivity;->getWindow()Landroid/view/Window;",
        "Lcom/frhn/nlug175314/BrowserActivity;->startActivityForResult()V"
    ],
    "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;": [
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->destroy()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->goBack()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->goForward()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->setLayoutParams()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->loadUrl()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->removeAllViews()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->canGoForward()Z",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->canGoBack()Z",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->reload()V",
        "Lcom/frhn/nlug175314/BrowserActivity$BrowserView;->stopLoading()V"
    ],
    "Landroid/webkit/CookieSyncManager;": [
        "Landroid/webkit/CookieSyncManager;->stopSync()V",
        "Landroid/webkit/CookieSyncManager;->startSync()V",
        "Landroid/webkit/CookieSyncManager;->getInstance()Landroid/webkit/CookieSyncManager;"
    ],
    "Lcom/frhn/nlug175314/k;": [
        "Lcom/frhn/nlug175314/k;->setContentView()V",
        "Lcom/frhn/nlug175314/k;->a()V",
        "Lcom/frhn/nlug175314/k;->getContext()Landroid/content/Context;",
        "Lcom/frhn/nlug175314/k;->getWindow()Landroid/view/Window;",
        "Lcom/frhn/nlug175314/k;->dismiss()V",
        "Lcom/frhn/nlug175314/k;->requestWindowFeature()Z",
        "Lcom/frhn/nlug175314/k;->setOnCancelListener()V",
        "Lcom/frhn/nlug175314/k;->setCancelable()V",
        "Lcom/frhn/nlug175314/k;->setOnDismissListener()V",
        "Lcom/frhn/nlug175314/k;->setCanceledOnTouchOutside()V"
    ],
    "Lcom/frhn/nlug175314/g;": [
        "Lcom/frhn/nlug175314/g;->a()V",
        "Lcom/frhn/nlug175314/g;->a()Ljava/lang/Void;"
    ],
    "Lcom/frhn/nlug175314/MainActivity$AppWall;": [
        "Lcom/frhn/nlug175314/MainActivity$AppWall;->dismiss()V"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;"
    ],
    "Landroid/location/Geocoder;": [
        "Landroid/location/Geocoder;->getFromLocation()Ljava/util/List;"
    ],
    "Landroid/location/Address;": [
        "Landroid/location/Address;->getCountryName()Ljava/lang/String;",
        "Landroid/location/Address;->getPostalCode()Ljava/lang/String;",
        "Landroid/location/Address;->getCountryCode()Ljava/lang/String;"
    ],
    "Landroid/provider/Settings$Global;": [
        "Landroid/provider/Settings$Global;->getString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getReasonPhrase()Ljava/lang/String;",
        "Lorg/apache/http/StatusLine;->getStatusCode()I"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toByteArray()[B",
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;"
    ],
    "Ljava/net/SocketTimeoutException;": [
        "Ljava/net/SocketTimeoutException;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->toString()Ljava/lang/String;"
    ],
    "Ljava/net/MalformedURLException;": [
        "Ljava/net/MalformedURLException;->toString()Ljava/lang/String;"
    ],
    "Ljavax/net/ssl/SSLPeerUnverifiedException;": [
        "Ljavax/net/ssl/SSLPeerUnverifiedException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/q$a;": [
        "Lcom/frhn/nlug175314/q$a;->ordinal()I"
    ],
    "Ljava/net/URLDecoder;": [
        "Ljava/net/URLDecoder;->decode()Ljava/lang/String;"
    ],
    "Lcom/frhn/nlug175314/XmlParser$VastException;": [
        "Lcom/frhn/nlug175314/XmlParser$VastException;->getMessage()Ljava/lang/String;",
        "Lcom/frhn/nlug175314/XmlParser$VastException;->getCode()I"
    ],
    "Lorg/xmlpull/v1/XmlPullParserException;": [
        "Lorg/xmlpull/v1/XmlPullParserException;->printStackTrace()V"
    ],
    "Lcom/swarmconnect/ui/AsyncImageView;": [
        "Lcom/swarmconnect/ui/AsyncImageView;->setScaleType()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setVisibility()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setImageBitmap()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setAdjustViewBounds()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setBackgroundColor()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setOnClickListener()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->clear()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setImageResource()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->getUrl()V",
        "Lcom/swarmconnect/ui/AsyncImageView;->setLayoutParams()V"
    ],
    "Lcom/swarmconnect/UiConf;": [
        "Lcom/swarmconnect/UiConf;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/UiConf;->a()F",
        "Lcom/swarmconnect/UiConf;->a()V",
        "Lcom/swarmconnect/UiConf;->a()I"
    ],
    "Lcom/swarmconnect/SwarmIO;": [
        "Lcom/swarmconnect/SwarmIO;->stopService()V",
        "Lcom/swarmconnect/SwarmIO;->removeGroup()V",
        "Lcom/swarmconnect/SwarmIO;->enablePush()V",
        "Lcom/swarmconnect/SwarmIO;->a()V",
        "Lcom/swarmconnect/SwarmIO;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmIO;->addGroup()V",
        "Lcom/swarmconnect/SwarmIO;->startService()V",
        "Lcom/swarmconnect/SwarmIO;->getPushEnabled()Z",
        "Lcom/swarmconnect/SwarmIO;->a()I"
    ],
    "Ljava/util/TreeSet;": [
        "Ljava/util/TreeSet;->remove()Z",
        "Ljava/util/TreeSet;->add()Z",
        "Ljava/util/TreeSet;->clear()V",
        "Ljava/util/TreeSet;->size()I",
        "Ljava/util/TreeSet;->first()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/a;": [
        "Lcom/swarmconnect/a;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/a;->invalidate()V",
        "Lcom/swarmconnect/a;->a()V",
        "Lcom/swarmconnect/a;->a()I"
    ],
    "Lcom/swarmconnect/ay;": [
        "Lcom/swarmconnect/ay;->onStart()V",
        "Lcom/swarmconnect/ay;->refresh()V",
        "Lcom/swarmconnect/ay;->a()V",
        "Lcom/swarmconnect/ay;->onCreate()V",
        "Lcom/swarmconnect/ay;->clearStack()V",
        "Lcom/swarmconnect/ay;->onDestroy()V",
        "Lcom/swarmconnect/ay;->setParent()V",
        "Lcom/swarmconnect/ay;->a()Landroid/view/View;",
        "Lcom/swarmconnect/ay;->onStop()V",
        "Lcom/swarmconnect/ay;->onConfigurationChanged()V",
        "Lcom/swarmconnect/ay;->finish()V",
        "Lcom/swarmconnect/ay;->onPause()V",
        "Lcom/swarmconnect/ay;->show()V",
        "Lcom/swarmconnect/ay;->a()Z",
        "Lcom/swarmconnect/ay;->reload()V",
        "Lcom/swarmconnect/ay;->onKeyDown()Z",
        "Lcom/swarmconnect/ay;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/ay;->onResume()V"
    ],
    "Lcom/swarmconnect/ui/SlideMenuView;": [
        "Lcom/swarmconnect/ui/SlideMenuView;->toggle()V",
        "Lcom/swarmconnect/ui/SlideMenuView;->showMenu()V",
        "Lcom/swarmconnect/ui/SlideMenuView;->setVisibility()V",
        "Lcom/swarmconnect/ui/SlideMenuView;->isVisible()Z",
        "Lcom/swarmconnect/ui/SlideMenuView;->hideMenu()V",
        "Lcom/swarmconnect/ui/SlideMenuView;->eatClicks()V",
        "Lcom/swarmconnect/ui/SlideMenuView;->findViewById()Landroid/view/View;",
        "Lcom/swarmconnect/ui/SlideMenuView;->addSection()V"
    ],
    "Lcom/swarmconnect/av;": [
        "Lcom/swarmconnect/av;->a()Lcom/swarmconnect/av;",
        "Lcom/swarmconnect/av;->a()V"
    ],
    "Lcom/swarmconnect/SwarmMainActivity;": [
        "Lcom/swarmconnect/SwarmMainActivity;->show()V",
        "Lcom/swarmconnect/SwarmMainActivity;->finish()V",
        "Lcom/swarmconnect/SwarmMainActivity;->runOnUiThread()V",
        "Lcom/swarmconnect/SwarmMainActivity;->addContentView()V",
        "Lcom/swarmconnect/SwarmMainActivity;->setContentView()V",
        "Lcom/swarmconnect/SwarmMainActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/swarmconnect/SwarmMainActivity;->startActivityForResult()V",
        "Lcom/swarmconnect/SwarmMainActivity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/swarmconnect/SwarmMainActivity;->findViewById()Landroid/view/View;",
        "Lcom/swarmconnect/SwarmMainActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/swarmconnect/SwarmMainActivity;->getFilesDir()Ljava/io/File;",
        "Lcom/swarmconnect/SwarmMainActivity;->startActivity()V",
        "Lcom/swarmconnect/SwarmMainActivity;->getString()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmMainActivity;->getPackageName()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmMainActivity;->refresh()V"
    ],
    "Lcom/swarmconnect/br;": [
        "Lcom/swarmconnect/br;->increment()V"
    ],
    "Lcom/swarmconnect/SwarmLoginManager;": [
        "Lcom/swarmconnect/SwarmLoginManager;->a()V",
        "Lcom/swarmconnect/SwarmLoginManager;->removeLoginListener()V",
        "Lcom/swarmconnect/SwarmLoginManager;->addLoginListener()V"
    ],
    "Lcom/swarmconnect/bx;": [
        "Lcom/swarmconnect/bx;->a()V",
        "Lcom/swarmconnect/bx;->getLeaderboardScoresDeepCopy()Ljava/util/List;"
    ],
    "Lcom/swarmconnect/cx;": [
        "Lcom/swarmconnect/cx;->getHost()V",
        "Lcom/swarmconnect/cx;->a()Lcom/swarmconnect/cx;",
        "Lcom/swarmconnect/cx;->a()V",
        "Lcom/swarmconnect/cx;->connect()V"
    ],
    "Lcom/swarmconnect/NotificationService;": [
        "Lcom/swarmconnect/NotificationService;->a()V",
        "Lcom/swarmconnect/NotificationService;->getApplicationContext()Landroid/content/Context;"
    ],
    "Lcom/swarmconnect/cz;": [
        "Lcom/swarmconnect/cz;->a()Z",
        "Lcom/swarmconnect/cz;->a()V"
    ],
    "Lcom/swarmconnect/cx$2;": [
        "Lcom/swarmconnect/cx$2;->start()V"
    ],
    "Lcom/swarmconnect/AsyncHttp;": [
        "Lcom/swarmconnect/AsyncHttp;->a()V"
    ],
    "Lcom/swarmconnect/cw;": [
        "Lcom/swarmconnect/cw;->a()V"
    ],
    "Lcom/swarmconnect/packets/PacketAuth;": [
        "Lcom/swarmconnect/packets/PacketAuth;->getPayload()[B"
    ],
    "Lcom/swarmconnect/packets/PacketPong;": [
        "Lcom/swarmconnect/packets/PacketPong;->getPayload()[B"
    ],
    "Lcom/swarmconnect/packets/Packet;": [
        "Lcom/swarmconnect/packets/Packet;->build()Lcom/swarmconnect/packets/Packet;",
        "Lcom/swarmconnect/packets/Packet;->fromPayload()V"
    ],
    "Lcom/swarmconnect/loopj/android/http/RequestParams;": [
        "Lcom/swarmconnect/loopj/android/http/RequestParams;->put()V",
        "Lcom/swarmconnect/loopj/android/http/RequestParams;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/loopj/android/http/RequestParams;->a()Ljava/util/List;",
        "Lcom/swarmconnect/loopj/android/http/RequestParams;->a()V",
        "Lcom/swarmconnect/loopj/android/http/RequestParams;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lcom/swarmconnect/au;": [
        "Lcom/swarmconnect/au;->a()V",
        "Lcom/swarmconnect/au;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/au;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/SwarmAchievement;": [
        "Lcom/swarmconnect/SwarmAchievement;->unlock()V",
        "Lcom/swarmconnect/SwarmAchievement;->getAchievementsList()V",
        "Lcom/swarmconnect/SwarmAchievement;->getAchievementsMap()V"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setSelection()V",
        "Landroid/widget/ListView;->getChildAt()Landroid/view/View;",
        "Landroid/widget/ListView;->getHeight()I",
        "Landroid/widget/ListView;->getCount()I",
        "Landroid/widget/ListView;->getSelectedItemId()J",
        "Landroid/widget/ListView;->setDrawSelectorOnTop()V",
        "Landroid/widget/ListView;->addHeaderView()V",
        "Landroid/widget/ListView;->onMeasure()V",
        "Landroid/widget/ListView;->getChildCount()I",
        "Landroid/widget/ListView;->setEnabled()V",
        "Landroid/widget/ListView;->setId()V",
        "Landroid/widget/ListView;->setAdapter()V",
        "Landroid/widget/ListView;->postDelayed()Z",
        "Landroid/widget/ListView;->addFooterView()V",
        "Landroid/widget/ListView;->setSelectionFromTop()V",
        "Landroid/widget/ListView;->setOnItemClickListener()V",
        "Landroid/widget/ListView;->setOnItemLongClickListener()V",
        "Landroid/widget/ListView;->setEmptyView()V",
        "Landroid/widget/ListView;->getFirstVisiblePosition()I",
        "Landroid/widget/ListView;->setClickable()V",
        "Landroid/widget/ListView;->getSelectedItemPosition()I"
    ],
    "Lcom/swarmconnect/bf;": [
        "Lcom/swarmconnect/bf;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bf;->a()V",
        "Lcom/swarmconnect/bf;->a()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/utils/SeparatedListAdapter;": [
        "Lcom/swarmconnect/utils/SeparatedListAdapter;->addSection()V",
        "Lcom/swarmconnect/utils/SeparatedListAdapter;->getItemViewType()I",
        "Lcom/swarmconnect/utils/SeparatedListAdapter;->notifyDataSetChanged()V"
    ],
    "Lcom/swarmconnect/SwarmLeaderboard$DateRange;": [
        "Lcom/swarmconnect/SwarmLeaderboard$DateRange;->toString()Ljava/lang/String;"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->remove()Z",
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->clear()V",
        "Ljava/util/HashSet;->removeAll()Z",
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->contains()Z",
        "Ljava/util/HashSet;->isEmpty()Z"
    ],
    "Lcom/swarmconnect/gson/GsonBuilder;": [
        "Lcom/swarmconnect/gson/GsonBuilder;->create()Lcom/swarmconnect/gson/Gson;",
        "Lcom/swarmconnect/gson/GsonBuilder;->a()V",
        "Lcom/swarmconnect/gson/GsonBuilder;->excludeFieldsWithModifiers()Lcom/swarmconnect/gson/GsonBuilder;"
    ],
    "Lcom/swarmconnect/gson/Gson;": [
        "Lcom/swarmconnect/gson/Gson;->toJson()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/Gson;->toJsonTree()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/Gson;->getAdapter()Lcom/swarmconnect/gson/TypeAdapter;",
        "Lcom/swarmconnect/gson/Gson;->a()Lcom/swarmconnect/gson/TypeAdapter;",
        "Lcom/swarmconnect/gson/Gson;->a()V",
        "Lcom/swarmconnect/gson/Gson;->fromJson()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/Gson;->a()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/Gson;->getDelegateAdapter()Lcom/swarmconnect/gson/TypeAdapter;",
        "Lcom/swarmconnect/gson/Gson;->toJson()V"
    ],
    "Lcom/swarmconnect/APICall;": [
        "Lcom/swarmconnect/APICall;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/APICall;->a()Lcom/swarmconnect/loopj/android/http/RequestParams;",
        "Lcom/swarmconnect/APICall;->a()Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;",
        "Lcom/swarmconnect/APICall;->a()Z",
        "Lcom/swarmconnect/APICall;->a()I",
        "Lcom/swarmconnect/APICall;->a()Lcom/swarmconnect/APICall;",
        "Lcom/swarmconnect/APICall;->a()V"
    ],
    "Lcom/swarmconnect/utils/EditorUtils;": [
        "Lcom/swarmconnect/utils/EditorUtils;->commitOrApply()V"
    ],
    "Lcom/swarmconnect/utils/AsyncHttp;": [
        "Lcom/swarmconnect/utils/AsyncHttp;->getBlocking()V",
        "Lcom/swarmconnect/utils/AsyncHttp;->getBlocking()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/b;": [
        "Lcom/swarmconnect/b;->a()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/APICall$APICallback;": [
        "Lcom/swarmconnect/APICall$APICallback;->gotAPI()V"
    ],
    "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;": [
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->getUrlWithQueryString()Ljava/lang/String;",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->get()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->put()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->post()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->a()Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->a()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->delete()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->a()Lorg/apache/http/HttpEntity;",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpClient;->setBasicAuth()V"
    ],
    "Lcom/swarmconnect/cn;": [
        "Lcom/swarmconnect/cn;->a()V"
    ],
    "Lcom/swarmconnect/cl;": [
        "Lcom/swarmconnect/cl;->a()V",
        "Lcom/swarmconnect/cl;->startActivity()V",
        "Lcom/swarmconnect/cl;->requestWindowFeature()Z",
        "Lcom/swarmconnect/cl;->finish()V",
        "Lcom/swarmconnect/cl;->setContentView()V",
        "Lcom/swarmconnect/cl;->getIntent()Landroid/content/Intent;"
    ],
    "Lcom/swarmconnect/cl$a;": [
        "Lcom/swarmconnect/cl$a;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/swarmconnect/d;": [
        "Lcom/swarmconnect/d;->run()V"
    ],
    "Lcom/swarmconnect/SwarmStoreListing;": [
        "Lcom/swarmconnect/SwarmStoreListing;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmStoreListing;->purchase()V",
        "Lcom/swarmconnect/SwarmStoreListing;->a()V"
    ],
    "Lcom/swarmconnect/am;": [
        "Lcom/swarmconnect/am;->run()V"
    ],
    "Lcom/swarmconnect/SwarmStore;": [
        "Lcom/swarmconnect/SwarmStore;->getListingById()V",
        "Lcom/swarmconnect/SwarmStore;->getStore()V"
    ],
    "Lcom/swarmconnect/SwarmStoreListing$ItemPurchaseCB;": [
        "Lcom/swarmconnect/SwarmStoreListing$ItemPurchaseCB;->purchaseFailed()V"
    ],
    "Lcom/swarmconnect/SwarmActiveUser;": [
        "Lcom/swarmconnect/SwarmActiveUser;->addFriend()V",
        "Lcom/swarmconnect/SwarmActiveUser;->getFriends()V",
        "Lcom/swarmconnect/SwarmActiveUser;->isGuestAccount()Z",
        "Lcom/swarmconnect/SwarmActiveUser;->getInventory()V",
        "Lcom/swarmconnect/SwarmActiveUser;->isOfflineGuest()Z",
        "Lcom/swarmconnect/SwarmActiveUser;->saveCloudData()V",
        "Lcom/swarmconnect/SwarmActiveUser;->getCoins()V",
        "Lcom/swarmconnect/SwarmActiveUser;->a()V",
        "Lcom/swarmconnect/SwarmActiveUser;->deleteFriend()V"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->createScaledBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->isMutable()Z",
        "Landroid/graphics/Bitmap;->compress()Z",
        "Landroid/graphics/Bitmap;->getPixels()V",
        "Landroid/graphics/Bitmap;->getConfig()Landroid/graphics/Bitmap$Config;",
        "Landroid/graphics/Bitmap;->copy()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->getHeight()I",
        "Landroid/graphics/Bitmap;->recycle()V",
        "Landroid/graphics/Bitmap;->getWidth()I"
    ],
    "Lcom/swarmconnect/m;": [
        "Lcom/swarmconnect/m;->run()V"
    ],
    "Lcom/swarmconnect/bk;": [
        "Lcom/swarmconnect/bk;->getGeoText()Ljava/lang/String;",
        "Lcom/swarmconnect/bk;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bk;->getAgeGenderText()Ljava/lang/String;",
        "Lcom/swarmconnect/bk;->a()V",
        "Lcom/swarmconnect/bk;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/ProfileBlock;": [
        "Lcom/swarmconnect/ProfileBlock;->a()Landroid/view/View$OnClickListener;",
        "Lcom/swarmconnect/ProfileBlock;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/utils/ImageUtils;": [
        "Lcom/swarmconnect/utils/ImageUtils;->centerCrop()Landroid/graphics/Bitmap;",
        "Lcom/swarmconnect/utils/ImageUtils;->decodeSampledBitmapFromUri()Landroid/graphics/Bitmap;",
        "Lcom/swarmconnect/utils/ImageUtils;->calculateInSampleSize()I"
    ],
    "Ljava/lang/Error;": [
        "Ljava/lang/Error;->printStackTrace()V"
    ],
    "Lcom/swarmconnect/SwarmUser$Gender;": [
        "Lcom/swarmconnect/SwarmUser$Gender;->toString()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmUser$Gender;->ordinal()I"
    ],
    "Lcom/swarmconnect/utils/StringUtils;": [
        "Lcom/swarmconnect/utils/StringUtils;->capFirst()Ljava/lang/String;",
        "Lcom/swarmconnect/utils/StringUtils;->join()Ljava/lang/String;",
        "Lcom/swarmconnect/utils/StringUtils;->getQueryParameterNames()Ljava/util/Set;"
    ],
    "Lcom/swarmconnect/SwarmUser$a;": [
        "Lcom/swarmconnect/SwarmUser$a;->getText()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/ag;": [
        "Lcom/swarmconnect/ag;->run()V"
    ],
    "Landroid/widget/ArrayAdapter;": [
        "Landroid/widget/ArrayAdapter;->getView()Landroid/view/View;",
        "Landroid/widget/ArrayAdapter;->remove()V",
        "Landroid/widget/ArrayAdapter;->setDropDownViewResource()V",
        "Landroid/widget/ArrayAdapter;->add()V",
        "Landroid/widget/ArrayAdapter;->createFromResource()Landroid/widget/ArrayAdapter;"
    ],
    "Landroid/widget/Spinner;": [
        "Landroid/widget/Spinner;->setAdapter()V",
        "Landroid/widget/Spinner;->setOnItemSelectedListener()V",
        "Landroid/widget/Spinner;->setSelection()V"
    ],
    "Lcom/swarmconnect/GeoSuggestionEditText;": [
        "Lcom/swarmconnect/GeoSuggestionEditText;->setOnItemClickListener()V",
        "Lcom/swarmconnect/GeoSuggestionEditText;->setTokenizer()V",
        "Lcom/swarmconnect/GeoSuggestionEditText;->setText()V",
        "Lcom/swarmconnect/GeoSuggestionEditText;->setVisibility()V",
        "Lcom/swarmconnect/GeoSuggestionEditText;->setThreshold()V",
        "Lcom/swarmconnect/GeoSuggestionEditText;->setAdapter()V",
        "Lcom/swarmconnect/GeoSuggestionEditText;->setGeo()V"
    ],
    "Lcom/swarmconnect/h;": [
        "Lcom/swarmconnect/h;->a()Z"
    ],
    "Lcom/swarmconnect/x;": [
        "Lcom/swarmconnect/x;->run()V"
    ],
    "Lcom/swarmconnect/v;": [
        "Lcom/swarmconnect/v;->run()V"
    ],
    "Lcom/swarmconnect/SwarmLeaderboard$GotScoreCB;": [
        "Lcom/swarmconnect/SwarmLeaderboard$GotScoreCB;->gotScore()V"
    ],
    "Lcom/swarmconnect/aq;": [
        "Lcom/swarmconnect/aq;->run()V"
    ],
    "Lcom/swarmconnect/n;": [
        "Lcom/swarmconnect/n;->run()V"
    ],
    "Lcom/swarmconnect/af;": [
        "Lcom/swarmconnect/af;->run()V"
    ],
    "Lcom/swarmconnect/ad;": [
        "Lcom/swarmconnect/ad;->run()V"
    ],
    "Lcom/swarmconnect/t;": [
        "Lcom/swarmconnect/t;->run()V"
    ],
    "Lcom/swarmconnect/SwarmUserInventory;": [
        "Lcom/swarmconnect/SwarmUserInventory;->a()V",
        "Lcom/swarmconnect/SwarmUserInventory;->refresh()V",
        "Lcom/swarmconnect/SwarmUserInventory;->getItemQuantity()I",
        "Lcom/swarmconnect/SwarmUserInventory;->a()Lcom/swarmconnect/SwarmUserInventory;",
        "Lcom/swarmconnect/SwarmUserInventory;->consumeItem()V",
        "Lcom/swarmconnect/SwarmUserInventory;->containsItem()Z"
    ],
    "Lcom/swarmconnect/SwarmActiveUser$SaveCloudDataCB;": [
        "Lcom/swarmconnect/SwarmActiveUser$SaveCloudDataCB;->dataSaved()V"
    ],
    "Lcom/swarmconnect/ar;": [
        "Lcom/swarmconnect/ar;->run()V"
    ],
    "Lcom/swarmconnect/SwarmMessageThread;": [
        "Lcom/swarmconnect/SwarmMessageThread;->markRead()V",
        "Lcom/swarmconnect/SwarmMessageThread;->getAllThreads()V",
        "Lcom/swarmconnect/SwarmMessageThread;->getMessages()V"
    ],
    "Lcom/swarmconnect/bg;": [
        "Lcom/swarmconnect/bg;->a()Landroid/content/Intent;",
        "Lcom/swarmconnect/bg;->a()V",
        "Lcom/swarmconnect/bg;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bg;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/at;": [
        "Lcom/swarmconnect/at;->setOnCancelListener()V",
        "Lcom/swarmconnect/at;->a()V",
        "Lcom/swarmconnect/at;->addContentView()V",
        "Lcom/swarmconnect/at;->show()V",
        "Lcom/swarmconnect/at;->getContext()Landroid/content/Context;",
        "Lcom/swarmconnect/at;->requestWindowFeature()Z",
        "Lcom/swarmconnect/at;->decodeUrl()Landroid/os/Bundle;",
        "Lcom/swarmconnect/at;->getWindow()Landroid/view/Window;"
    ],
    "Lcom/swarmconnect/utils/GeoUtils;": [
        "Lcom/swarmconnect/utils/GeoUtils;->getNonblockGeo()V"
    ],
    "Lcom/swarmconnect/bs;": [
        "Lcom/swarmconnect/bs;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bs;->a()V",
        "Lcom/swarmconnect/bs;->a()Ljava/lang/String;"
    ],
    "Ljava/net/Socket;": [
        "Ljava/net/Socket;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/Socket;->isClosed()Z",
        "Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/Socket;->setKeepAlive()V",
        "Ljava/net/Socket;->setTcpNoDelay()V",
        "Ljava/net/Socket;->close()V",
        "Ljava/net/Socket;->setSoTimeout()V",
        "Ljava/net/Socket;->connect()V"
    ],
    "Lcom/swarmconnect/da;": [
        "Lcom/swarmconnect/da;->onConnectionLost()V",
        "Lcom/swarmconnect/da;->onConnected()V",
        "Lcom/swarmconnect/da;->onPacketReceived()V"
    ],
    "Lcom/swarmconnect/cy;": [
        "Lcom/swarmconnect/cy;->a()[B",
        "Lcom/swarmconnect/cy;->a()V"
    ],
    "Lcom/swarmconnect/bh;": [
        "Lcom/swarmconnect/bh;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bh;->a()V"
    ],
    "Landroid/text/Editable;": [
        "Landroid/text/Editable;->toString()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/ai;": [
        "Lcom/swarmconnect/ai;->run()V"
    ],
    "Lcom/swarmconnect/k;": [
        "Lcom/swarmconnect/k;->run()V"
    ],
    "Lcom/swarmconnect/ax;": [
        "Lcom/swarmconnect/ax;->onCreate()V",
        "Lcom/swarmconnect/ax;->onResume()V"
    ],
    "Lcom/swarmconnect/Swarm$10;": [
        "Lcom/swarmconnect/Swarm$10;->start()V"
    ],
    "Lcom/swarmconnect/Swarm$a;": [
        "Lcom/swarmconnect/Swarm$a;->loginSuccess()V",
        "Lcom/swarmconnect/Swarm$a;->loginFailed()V"
    ],
    "Lcom/swarmconnect/bl;": [
        "Lcom/swarmconnect/bl;->a()V"
    ],
    "Lcom/swarmconnect/az;": [
        "Lcom/swarmconnect/az;->a()V",
        "Lcom/swarmconnect/az;->a()Lcom/swarmconnect/av;",
        "Lcom/swarmconnect/az;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/az;->a()Lcom/swarmconnect/bx;"
    ],
    "Lcom/swarmconnect/bo;": [
        "Lcom/swarmconnect/bo;->a()V"
    ],
    "Lcom/swarmconnect/SwarmSocial;": [
        "Lcom/swarmconnect/SwarmSocial;->a()V"
    ],
    "Lcom/swarmconnect/e;": [
        "Lcom/swarmconnect/e;->run()V"
    ],
    "Lcom/swarmconnect/aw;": [
        "Lcom/swarmconnect/aw;->fetchApp()V",
        "Lcom/swarmconnect/aw;->a()V",
        "Lcom/swarmconnect/aw;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/q;": [
        "Lcom/swarmconnect/q;->run()V"
    ],
    "Lcom/swarmconnect/bd;": [
        "Lcom/swarmconnect/bd;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bd;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bd;->a()V"
    ],
    "Lcom/swarmconnect/db;": [
        "Lcom/swarmconnect/db;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/db;->a()Z",
        "Lcom/swarmconnect/db;->a()V",
        "Lcom/swarmconnect/db;->a()I",
        "Lcom/swarmconnect/db;->a()Landroid/content/SharedPreferences;",
        "Lcom/swarmconnect/db;->a()J"
    ],
    "Lcom/swarmconnect/SwarmConnectivityReceiver$a;": [
        "Lcom/swarmconnect/SwarmConnectivityReceiver$a;->isInitialSticky()Z"
    ],
    "Lcom/swarmconnect/bp;": [
        "Lcom/swarmconnect/bp;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bp;->a()V",
        "Lcom/swarmconnect/bp;->a()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/ap;": [
        "Lcom/swarmconnect/ap;->run()V"
    ],
    "Lcom/swarmconnect/cc;": [
        "Lcom/swarmconnect/cc;->getVerifier()Ljava/lang/String;",
        "Lcom/swarmconnect/cc;->getCurrencyMultiplier()F",
        "Lcom/swarmconnect/cc;->getURLParams()Ljava/lang/String;",
        "Lcom/swarmconnect/cc;->getGenericURLParams()Ljava/lang/String;",
        "Lcom/swarmconnect/cc;->a()V",
        "Lcom/swarmconnect/cc;->getClientPackage()Ljava/lang/String;",
        "Lcom/swarmconnect/cc;->getAppID()Ljava/lang/String;",
        "Lcom/swarmconnect/cc;->saveTapPointsTotal()V",
        "Lcom/swarmconnect/cc;->requestTapjoyConnect()V",
        "Lcom/swarmconnect/cc;->setCurrencyMultiplier()V",
        "Lcom/swarmconnect/cc;->actionComplete()V",
        "Lcom/swarmconnect/cc;->getLocalTapPointsTotal()I",
        "Lcom/swarmconnect/cc;->getInstance()Lcom/swarmconnect/cc;",
        "Lcom/swarmconnect/cc;->a()Z",
        "Lcom/swarmconnect/cc;->enablePaidAppWithActionID()V",
        "Lcom/swarmconnect/cc;->getUserID()Ljava/lang/String;",
        "Lcom/swarmconnect/cc;->setUserID()V",
        "Lcom/swarmconnect/cc;->a()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/bz;": [
        "Lcom/swarmconnect/bz;->showOffers()V",
        "Lcom/swarmconnect/bz;->awardTapPoints()V",
        "Lcom/swarmconnect/bz;->setEarnedPointsNotifier()V",
        "Lcom/swarmconnect/bz;->showOffersWithCurrencyID()V",
        "Lcom/swarmconnect/bz;->a()Z",
        "Lcom/swarmconnect/bz;->spendTapPoints()V",
        "Lcom/swarmconnect/bz;->getTapPoints()V"
    ],
    "Lcom/swarmconnect/cd;": [
        "Lcom/swarmconnect/cd;->getDisplayAd()V",
        "Lcom/swarmconnect/cd;->setBannerAdSize()V",
        "Lcom/swarmconnect/cd;->a()V",
        "Lcom/swarmconnect/cd;->a()Z"
    ],
    "Lcom/swarmconnect/ci;": [
        "Lcom/swarmconnect/ci;->a()Z",
        "Lcom/swarmconnect/ci;->a()V",
        "Lcom/swarmconnect/ci;->showFeaturedAppFullScreenAd()V",
        "Lcom/swarmconnect/ci;->a()I",
        "Lcom/swarmconnect/ci;->getFeaturedApp()V",
        "Lcom/swarmconnect/ci;->setDisplayCount()V"
    ],
    "Lcom/swarmconnect/bi;": [
        "Lcom/swarmconnect/bi;->a()V",
        "Lcom/swarmconnect/bi;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/an;": [
        "Lcom/swarmconnect/an;->run()V"
    ],
    "Lcom/swarmconnect/be;": [
        "Lcom/swarmconnect/be;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/be;->a()V",
        "Lcom/swarmconnect/be;->a()Landroid/view/View;"
    ],
    "Landroid/widget/CheckBox;": [
        "Landroid/widget/CheckBox;->isChecked()Z"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;",
        "Landroid/content/res/AssetManager;->openFd()Landroid/content/res/AssetFileDescriptor;",
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/av$a;": [
        "Lcom/swarmconnect/av$a;->gotConfig()V"
    ],
    "Lcom/swarmconnect/p;": [
        "Lcom/swarmconnect/p;->run()V"
    ],
    "Lcom/swarmconnect/av$4;": [
        "Lcom/swarmconnect/av$4;->getType()Ljava/lang/reflect/Type;"
    ],
    "Lcom/swarmconnect/utils/Cloner;": [
        "Lcom/swarmconnect/utils/Cloner;->clone()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/av$2;": [
        "Lcom/swarmconnect/av$2;->getType()Ljava/lang/reflect/Type;"
    ],
    "Lcom/swarmconnect/av$3;": [
        "Lcom/swarmconnect/av$3;->getType()Ljava/lang/reflect/Type;"
    ],
    "Lcom/swarmconnect/av$5;": [
        "Lcom/swarmconnect/av$5;->getType()Ljava/lang/reflect/Type;"
    ],
    "Lcom/swarmconnect/SwarmNotification;": [
        "Lcom/swarmconnect/SwarmNotification;->a()Landroid/view/View;",
        "Lcom/swarmconnect/SwarmNotification;->getMessage()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmNotification;->getTitle()Ljava/lang/String;",
        "Lcom/swarmconnect/SwarmNotification;->getIconId()I",
        "Lcom/swarmconnect/SwarmNotification;->a()V",
        "Lcom/swarmconnect/SwarmNotification;->getLogoIconId()I"
    ],
    "Landroid/graphics/drawable/ShapeDrawable;": [
        "Landroid/graphics/drawable/ShapeDrawable;->getPaint()Landroid/graphics/Paint;"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->getFontMetrics()Landroid/graphics/Paint$FontMetrics;",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->setShadowLayer()V",
        "Landroid/graphics/Paint;->getTextWidths()I",
        "Landroid/graphics/Paint;->setColorFilter()Landroid/graphics/ColorFilter;",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->setStrokeWidth()V",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->setShader()Landroid/graphics/Shader;",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->getTextBounds()V",
        "Landroid/graphics/Paint;->setXfermode()Landroid/graphics/Xfermode;",
        "Landroid/graphics/Paint;->setTypeface()Landroid/graphics/Typeface;"
    ],
    "Lcom/swarmconnect/bq;": [
        "Lcom/swarmconnect/bq;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bq;->reload()V",
        "Lcom/swarmconnect/bq;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bq;->a()V"
    ],
    "Lcom/swarmconnect/cr;": [
        "Lcom/swarmconnect/cr;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/cr;->getNodeTrimValue()Ljava/lang/String;",
        "Lcom/swarmconnect/cr;->SHA256()Ljava/lang/String;",
        "Lcom/swarmconnect/cr;->buildDocument()Lorg/w3c/dom/Document;"
    ],
    "Lorg/w3c/dom/Document;": [
        "Lorg/w3c/dom/Document;->getElementsByTagName()Lorg/w3c/dom/NodeList;"
    ],
    "Lcom/swarmconnect/cm;": [
        "Lcom/swarmconnect/cm;->getSerial()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/cg;": [
        "Lcom/swarmconnect/cg;->getScreenLayoutSize()I",
        "Lcom/swarmconnect/cg;->getScreenDensity()I"
    ],
    "Lcom/swarmconnect/y;": [
        "Lcom/swarmconnect/y;->run()V"
    ],
    "Lcom/swarmconnect/z;": [
        "Lcom/swarmconnect/z;->run()V"
    ],
    "Lcom/swarmconnect/aa;": [
        "Lcom/swarmconnect/aa;->run()V"
    ],
    "Lcom/swarmconnect/aj;": [
        "Lcom/swarmconnect/aj;->run()V"
    ],
    "Lcom/swarmconnect/SwarmMessage;": [
        "Lcom/swarmconnect/SwarmMessage;->sendMessage()V"
    ],
    "Lcom/swarmconnect/SwarmActivity;": [
        "Lcom/swarmconnect/SwarmActivity;->finish()V",
        "Lcom/swarmconnect/SwarmActivity;->setTheme()V",
        "Lcom/swarmconnect/SwarmActivity;->onResume()V",
        "Lcom/swarmconnect/SwarmActivity;->onCreate()V",
        "Lcom/swarmconnect/SwarmActivity;->onPause()V",
        "Lcom/swarmconnect/SwarmActivity;->onDestroy()V",
        "Lcom/swarmconnect/SwarmActivity;->dispatchTouchEvent()Z",
        "Lcom/swarmconnect/SwarmActivity;->onKeyDown()Z",
        "Lcom/swarmconnect/SwarmActivity;->onConfigurationChanged()V",
        "Lcom/swarmconnect/SwarmActivity;->startActivity()V",
        "Lcom/swarmconnect/SwarmActivity;->onStart()V",
        "Lcom/swarmconnect/SwarmActivity;->onStop()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/ViewHelper;": [
        "Lcom/swarmconnect/nineoldandroids/view/ViewHelper;->getTranslationX()F"
    ],
    "Lcom/swarmconnect/SwarmMainActivity$a;": [
        "Lcom/swarmconnect/SwarmMainActivity$a;->overridePendingTransition()V"
    ],
    "Lcom/swarmconnect/ao;": [
        "Lcom/swarmconnect/ao;->onStop()V",
        "Lcom/swarmconnect/ao;->onStart()V"
    ],
    "Lcom/swarmconnect/SwarmLeaderboardScore;": [
        "Lcom/swarmconnect/SwarmLeaderboardScore;->compareTo()I"
    ],
    "Lcom/swarmconnect/w;": [
        "Lcom/swarmconnect/w;->run()V"
    ],
    "Lcom/swarmconnect/bb;": [
        "Lcom/swarmconnect/bb;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bb;->a()V",
        "Lcom/swarmconnect/bb;->a()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/i;": [
        "Lcom/swarmconnect/i;->run()V"
    ],
    "Lcom/swarmconnect/u;": [
        "Lcom/swarmconnect/u;->run()V"
    ],
    "Ljavax/xml/parsers/DocumentBuilderFactory;": [
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newInstance()Ljavax/xml/parsers/DocumentBuilderFactory;",
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;"
    ],
    "Ljavax/xml/parsers/DocumentBuilder;": [
        "Ljavax/xml/parsers/DocumentBuilder;->parse()Lorg/w3c/dom/Document;"
    ],
    "Lcom/swarmconnect/ce;": [
        "Lcom/swarmconnect/ce;->getDisplayAdResponse()V"
    ],
    "Lcom/swarmconnect/as;": [
        "Lcom/swarmconnect/as;->run()V"
    ],
    "Lcom/swarmconnect/SwarmSocial$GotAccountsCB;": [
        "Lcom/swarmconnect/SwarmSocial$GotAccountsCB;->gotAccounts()V"
    ],
    "Lcom/swarmconnect/s;": [
        "Lcom/swarmconnect/s;->run()V"
    ],
    "Landroid/text/method/LinkMovementMethod;": [
        "Landroid/text/method/LinkMovementMethod;->getInstance()Landroid/text/method/MovementMethod;"
    ],
    "Landroid/text/Html;": [
        "Landroid/text/Html;->fromHtml()Landroid/text/Spanned;",
        "Landroid/text/Html;->escapeHtml()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/utils/RichTextUtils;": [
        "Lcom/swarmconnect/utils/RichTextUtils;->replaceAll()Landroid/text/Spannable;"
    ],
    "Lcom/swarmconnect/AsyncHttp$AsyncCB;": [
        "Lcom/swarmconnect/AsyncHttp$AsyncCB;->requestFailed()V",
        "Lcom/swarmconnect/AsyncHttp$AsyncCB;->gotURL()V"
    ],
    "Lcom/swarmconnect/bv;": [
        "Lcom/swarmconnect/bv;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bv;->a()V",
        "Lcom/swarmconnect/bv;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/ch;": [
        "Lcom/swarmconnect/ch;->earnedTapPoints()V"
    ],
    "Lcom/swarmconnect/co;": [
        "Lcom/swarmconnect/co;->getUpdatePoints()V"
    ],
    "Lcom/swarmconnect/cp;": [
        "Lcom/swarmconnect/cp;->getSpendPointsResponse()V",
        "Lcom/swarmconnect/cp;->getSpendPointsResponseFailed()V"
    ],
    "Lcom/swarmconnect/ca;": [
        "Lcom/swarmconnect/ca;->getAwardPointsResponseFailed()V",
        "Lcom/swarmconnect/ca;->getAwardPointsResponse()V"
    ],
    "Lcom/swarmconnect/ah;": [
        "Lcom/swarmconnect/ah;->run()V"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->size()I",
        "Ljava/util/Hashtable;->entrySet()Ljava/util/Set;"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lcom/swarmconnect/bc;": [
        "Lcom/swarmconnect/bc;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bc;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bc;->a()V"
    ],
    "Lcom/swarmconnect/r;": [
        "Lcom/swarmconnect/r;->run()V"
    ],
    "Lcom/swarmconnect/ac;": [
        "Lcom/swarmconnect/ac;->run()V"
    ],
    "Lcom/swarmconnect/cb;": [
        "Lcom/swarmconnect/cb;->getFeaturedApp()V",
        "Lcom/swarmconnect/cb;->requestTapjoyConnect()V",
        "Lcom/swarmconnect/cb;->setUserID()V",
        "Lcom/swarmconnect/cb;->getTapjoyConnectInstance()Lcom/swarmconnect/cb;"
    ],
    "Lcom/swarmconnect/bn$a;": [
        "Lcom/swarmconnect/bn$a;->toString()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/bw;": [
        "Lcom/swarmconnect/bw;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bw;->a()V"
    ],
    "Lcom/swarmconnect/cu;": [
        "Lcom/swarmconnect/cu;->run()V"
    ],
    "Lcom/swarmconnect/cj;": [
        "Lcom/swarmconnect/cj;->getFeaturedAppResponse()V",
        "Lcom/swarmconnect/cj;->getFeaturedAppResponseFailed()V"
    ],
    "Lcom/swarmconnect/cv;": [
        "Lcom/swarmconnect/cv;->run()V"
    ],
    "Lcom/swarmconnect/SwarmUser;": [
        "Lcom/swarmconnect/SwarmUser;->a()V"
    ],
    "Lcom/swarmconnect/PushReceiver;": [
        "Lcom/swarmconnect/PushReceiver;->pushReceived()V"
    ],
    "Lorg/w3c/dom/NodeList;": [
        "Lorg/w3c/dom/NodeList;->item()Lorg/w3c/dom/Node;",
        "Lorg/w3c/dom/NodeList;->getLength()I"
    ],
    "Lorg/w3c/dom/Element;": [
        "Lorg/w3c/dom/Element;->getChildNodes()Lorg/w3c/dom/NodeList;"
    ],
    "Lorg/w3c/dom/Node;": [
        "Lorg/w3c/dom/Node;->getNodeValue()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/SwarmGetCoinsScreen;": [
        "Lcom/swarmconnect/SwarmGetCoinsScreen;->a()Landroid/view/View;",
        "Lcom/swarmconnect/SwarmGetCoinsScreen;->removeProvider()V",
        "Lcom/swarmconnect/SwarmGetCoinsScreen;->a()V"
    ],
    "Lcom/swarmconnect/dc$a;": [
        "Lcom/swarmconnect/dc$a;->a()V"
    ],
    "Lcom/swarmconnect/dc;": [
        "Lcom/swarmconnect/dc;->a()V"
    ],
    "Lcom/swarmconnect/ak;": [
        "Lcom/swarmconnect/ak;->run()V"
    ],
    "Lcom/swarmconnect/bt;": [
        "Lcom/swarmconnect/bt;->a()V",
        "Lcom/swarmconnect/bt;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bt;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/bx$a;": [
        "Lcom/swarmconnect/bx$a;->gotConfig()V"
    ],
    "Lcom/swarmconnect/ae;": [
        "Lcom/swarmconnect/ae;->run()V"
    ],
    "Lcom/swarmconnect/bx$2;": [
        "Lcom/swarmconnect/bx$2;->getType()Ljava/lang/reflect/Type;"
    ],
    "Lcom/swarmconnect/bj;": [
        "Lcom/swarmconnect/bj;->show()V"
    ],
    "Ljava/util/LinkedHashSet;": [
        "Ljava/util/LinkedHashSet;->add()Z",
        "Ljava/util/LinkedHashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedHashSet;->remove()Z",
        "Ljava/util/LinkedHashSet;->clone()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/delegates/SwarmLoginListener;": [
        "Lcom/swarmconnect/delegates/SwarmLoginListener;->userLoggedOut()V",
        "Lcom/swarmconnect/delegates/SwarmLoginListener;->loginCanceled()V",
        "Lcom/swarmconnect/delegates/SwarmLoginListener;->loginStarted()V",
        "Lcom/swarmconnect/delegates/SwarmLoginListener;->userLoggedIn()V"
    ],
    "Lcom/swarmconnect/ba;": [
        "Lcom/swarmconnect/ba;->a()V",
        "Lcom/swarmconnect/ba;->a()Landroid/view/View;"
    ],
    "Lcom/swarmconnect/j;": [
        "Lcom/swarmconnect/j;->run()V"
    ],
    "Lcom/swarmconnect/bm;": [
        "Lcom/swarmconnect/bm;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bm;->a()V"
    ],
    "Lcom/swarmconnect/bu;": [
        "Lcom/swarmconnect/bu;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/bu;->a()Landroid/view/View;",
        "Lcom/swarmconnect/bu;->a()V"
    ],
    "Lcom/swarmconnect/by;": [
        "Lcom/swarmconnect/by;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/by;->a()Landroid/view/View;",
        "Lcom/swarmconnect/by;->finish()V",
        "Lcom/swarmconnect/by;->a()V"
    ],
    "Lcom/swarmconnect/loopj/android/http/BinaryHttpResponseHandler;": [
        "Lcom/swarmconnect/loopj/android/http/BinaryHttpResponseHandler;->onFailure()V",
        "Lcom/swarmconnect/loopj/android/http/BinaryHttpResponseHandler;->a()Landroid/os/Message;",
        "Lcom/swarmconnect/loopj/android/http/BinaryHttpResponseHandler;->onSuccess()V",
        "Lcom/swarmconnect/loopj/android/http/BinaryHttpResponseHandler;->a()V"
    ],
    "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;": [
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;->onStart()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;->a()Landroid/os/Message;",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;->a()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;->onSuccess()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;->onFinish()V",
        "Lcom/swarmconnect/loopj/android/http/AsyncHttpResponseHandler;->onFailure()V"
    ],
    "Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;": [
        "Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;->a()Ljava/lang/Object;",
        "Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;->a()V",
        "Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;->onSuccess()V",
        "Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;->a()Landroid/os/Message;",
        "Lcom/swarmconnect/loopj/android/http/GsonHttpResponseHandler;->onFailure()V"
    ],
    "Lorg/apache/http/impl/client/AbstractHttpClient;": [
        "Lorg/apache/http/impl/client/AbstractHttpClient;->getHttpRequestRetryHandler()Lorg/apache/http/client/HttpRequestRetryHandler;",
        "Lorg/apache/http/impl/client/AbstractHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lcom/swarmconnect/loopj/android/http/a;": [
        "Lcom/swarmconnect/loopj/android/http/a;->a()V"
    ],
    "Lorg/apache/http/client/HttpRequestRetryHandler;": [
        "Lorg/apache/http/client/HttpRequestRetryHandler;->retryRequest()Z"
    ],
    "Ljava/lang/NullPointerException;": [
        "Ljava/lang/NullPointerException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/loopj/android/http/PersistentCookieStore;": [
        "Lcom/swarmconnect/loopj/android/http/PersistentCookieStore;->a()[B",
        "Lcom/swarmconnect/loopj/android/http/PersistentCookieStore;->clearExpired()Z",
        "Lcom/swarmconnect/loopj/android/http/PersistentCookieStore;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/loopj/android/http/PersistentCookieStore;->a()Lorg/apache/http/cookie/Cookie;"
    ],
    "Ljava/util/concurrent/ConcurrentHashMap;": [
        "Ljava/util/concurrent/ConcurrentHashMap;->put()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentHashMap;->values()Ljava/util/Collection;",
        "Ljava/util/concurrent/ConcurrentHashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/concurrent/ConcurrentHashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentHashMap;->clear()V",
        "Ljava/util/concurrent/ConcurrentHashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/concurrent/ConcurrentHashMap;->isEmpty()Z"
    ],
    "Ljava/io/ObjectOutputStream;": [
        "Ljava/io/ObjectOutputStream;->writeObject()V",
        "Ljava/io/ObjectOutputStream;->writeInt()V",
        "Ljava/io/ObjectOutputStream;->writeBoolean()V"
    ],
    "Ljava/io/ObjectInputStream;": [
        "Ljava/io/ObjectInputStream;->readInt()I",
        "Ljava/io/ObjectInputStream;->readObject()Ljava/lang/Object;",
        "Ljava/io/ObjectInputStream;->readBoolean()Z"
    ],
    "Lcom/swarmconnect/loopj/android/http/SerializableCookie;": [
        "Lcom/swarmconnect/loopj/android/http/SerializableCookie;->getCookie()Lorg/apache/http/cookie/Cookie;"
    ],
    "Lorg/apache/http/cookie/Cookie;": [
        "Lorg/apache/http/cookie/Cookie;->getComment()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getDomain()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getExpiryDate()Ljava/util/Date;",
        "Lorg/apache/http/cookie/Cookie;->isSecure()Z",
        "Lorg/apache/http/cookie/Cookie;->getPath()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getName()Ljava/lang/String;",
        "Lorg/apache/http/cookie/Cookie;->getVersion()I",
        "Lorg/apache/http/cookie/Cookie;->isExpired()Z",
        "Lorg/apache/http/cookie/Cookie;->getValue()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/loopj/android/http/c;": [
        "Lcom/swarmconnect/loopj/android/http/c;->addPart()V",
        "Lcom/swarmconnect/loopj/android/http/c;->writeFirstBoundaryIfNeeds()V",
        "Lcom/swarmconnect/loopj/android/http/c;->isStreaming()Z",
        "Lcom/swarmconnect/loopj/android/http/c;->writeLastBoundaryIfNeeds()V"
    ],
    "Lcom/swarmconnect/loopj/android/http/RequestParams$a;": [
        "Lcom/swarmconnect/loopj/android/http/RequestParams$a;->getFileName()Ljava/lang/String;"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->printStackTrace()V"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->printStackTrace()V"
    ],
    "Lorg/apache/http/impl/cookie/BasicClientCookie;": [
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setComment()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setSecure()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setVersion()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setDomain()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setExpiryDate()V",
        "Lorg/apache/http/impl/cookie/BasicClientCookie;->setPath()V"
    ],
    "Lorg/apache/http/protocol/HttpContext;": [
        "Lorg/apache/http/protocol/HttpContext;->setAttribute()V",
        "Lorg/apache/http/protocol/HttpContext;->getAttribute()Ljava/lang/Object;"
    ],
    "Lorg/apache/http/client/methods/HttpUriRequest;": [
        "Lorg/apache/http/client/methods/HttpUriRequest;->setHeaders()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->addHeader()V",
        "Lorg/apache/http/client/methods/HttpUriRequest;->getMethod()Ljava/lang/String;"
    ],
    "Lorg/apache/http/conn/params/ConnManagerParams;": [
        "Lorg/apache/http/conn/params/ConnManagerParams;->setTimeout()V",
        "Lorg/apache/http/conn/params/ConnManagerParams;->setMaxTotalConnections()V",
        "Lorg/apache/http/conn/params/ConnManagerParams;->setMaxConnectionsPerRoute()V"
    ],
    "Lorg/apache/http/params/HttpProtocolParams;": [
        "Lorg/apache/http/params/HttpProtocolParams;->setUserAgent()V",
        "Lorg/apache/http/params/HttpProtocolParams;->setVersion()V"
    ],
    "Lorg/apache/http/conn/scheme/PlainSocketFactory;": [
        "Lorg/apache/http/conn/scheme/PlainSocketFactory;->getSocketFactory()Lorg/apache/http/conn/scheme/PlainSocketFactory;"
    ],
    "Lorg/apache/http/conn/scheme/SchemeRegistry;": [
        "Lorg/apache/http/conn/scheme/SchemeRegistry;->register()Lorg/apache/http/conn/scheme/Scheme;"
    ],
    "Lorg/apache/http/conn/ssl/SSLSocketFactory;": [
        "Lorg/apache/http/conn/ssl/SSLSocketFactory;->getSocketFactory()Lorg/apache/http/conn/ssl/SSLSocketFactory;"
    ],
    "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;": [
        "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;->setEntity()V",
        "Lorg/apache/http/client/methods/HttpEntityEnclosingRequestBase;->setHeaders()V"
    ],
    "Ljava/util/concurrent/Future;": [
        "Ljava/util/concurrent/Future;->cancel()Z"
    ],
    "Lorg/apache/http/client/methods/HttpDelete;": [
        "Lorg/apache/http/client/methods/HttpDelete;->setHeaders()V"
    ],
    "Lorg/apache/http/client/CredentialsProvider;": [
        "Lorg/apache/http/client/CredentialsProvider;->setCredentials()V"
    ],
    "Lorg/apache/http/conn/ClientConnectionManager;": [
        "Lorg/apache/http/conn/ClientConnectionManager;->getSchemeRegistry()Lorg/apache/http/conn/scheme/SchemeRegistry;"
    ],
    "Lcom/swarmconnect/loopj/android/http/BitmapHttpResponseHandler;": [
        "Lcom/swarmconnect/loopj/android/http/BitmapHttpResponseHandler;->onSuccess()V",
        "Lcom/swarmconnect/loopj/android/http/BitmapHttpResponseHandler;->a()Landroid/os/Message;",
        "Lcom/swarmconnect/loopj/android/http/BitmapHttpResponseHandler;->a()V"
    ],
    "Lorg/json/JSONTokener;": [
        "Lorg/json/JSONTokener;->nextValue()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/loopj/android/http/JsonHttpResponseHandler;": [
        "Lcom/swarmconnect/loopj/android/http/JsonHttpResponseHandler;->onSuccess()V",
        "Lcom/swarmconnect/loopj/android/http/JsonHttpResponseHandler;->a()Ljava/lang/Object;",
        "Lcom/swarmconnect/loopj/android/http/JsonHttpResponseHandler;->a()V",
        "Lcom/swarmconnect/loopj/android/http/JsonHttpResponseHandler;->a()Landroid/os/Message;",
        "Lcom/swarmconnect/loopj/android/http/JsonHttpResponseHandler;->onFailure()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;": [
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->clone()Lcom/swarmconnect/nineoldandroids/animation/Keyframe;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->getFraction()F",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->setValue()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->getValue()Ljava/lang/Object;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->ofInt()Lcom/swarmconnect/nineoldandroids/animation/Keyframe;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->getType()Ljava/lang/Class;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->hasValue()Z",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->ofObject()Lcom/swarmconnect/nineoldandroids/animation/Keyframe;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->ofFloat()Lcom/swarmconnect/nineoldandroids/animation/Keyframe;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe;->getInterpolator()Landroid/view/animation/Interpolator;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/Animator;": [
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->setupEndValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->clone()Lcom/swarmconnect/nineoldandroids/animation/Animator;",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->isRunning()Z",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->setInterpolator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->setupStartValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->start()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->addListener()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->end()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->removeListener()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->cancel()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->getListeners()Ljava/util/ArrayList;",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator;->setDuration()Lcom/swarmconnect/nineoldandroids/animation/Animator;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;": [
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setEvaluator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setDuration()Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setFloatValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->clone()Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setObjectValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->a()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setIntValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->ofFloat()Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setTarget()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setPropertyName()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;->setProperty()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;": [
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->getCurrentPlayTime()J",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setIntValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->addListener()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setRepeatMode()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->isRunning()Z",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->cancel()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setStartDelay()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setFloatValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setInterpolator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->getDuration()J",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->start()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setEvaluator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setDuration()Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->addUpdateListener()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setCurrentPlayTime()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setRepeatCount()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->a()V",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->ofFloat()Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->clone()Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->a()Z",
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;->setObjectValues()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;": [
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->setProperty()V",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->a()Ljava/lang/reflect/Method;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->a()V",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->setIntValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->ofObject()Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->getPropertyName()Ljava/lang/String;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->toString()Ljava/lang/String;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->clone()Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->a()Ljava/lang/Object;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->ofInt()Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->setFloatValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->setObjectValues()V",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->setEvaluator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->ofFloat()Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;",
        "Lcom/swarmconnect/nineoldandroids/animation/PropertyValuesHolder;->setPropertyName()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/util/Property;": [
        "Lcom/swarmconnect/nineoldandroids/util/Property;->getName()Ljava/lang/String;",
        "Lcom/swarmconnect/nineoldandroids/util/Property;->set()V",
        "Lcom/swarmconnect/nineoldandroids/util/Property;->get()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;": [
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->start()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->playTogether()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->clone()Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->setDuration()Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->isStarted()Z",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->addListener()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->playSequentially()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->setInterpolator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->play()Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$Builder;",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->a()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet;->setTarget()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/Animator$AnimatorListener;": [
        "Lcom/swarmconnect/nineoldandroids/animation/Animator$AnimatorListener;->onAnimationEnd()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator$AnimatorListener;->onAnimationCancel()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator$AnimatorListener;->onAnimationStart()V",
        "Lcom/swarmconnect/nineoldandroids/animation/Animator$AnimatorListener;->onAnimationRepeat()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$d;": [
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$d;->addDependency()V",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$d;->clone()Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$d;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$Builder;": [
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$Builder;->with()Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$Builder;",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$Builder;->before()Lcom/swarmconnect/nineoldandroids/animation/AnimatorSet$Builder;"
    ],
    "Ljava/lang/ThreadLocal;": [
        "Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;",
        "Ljava/lang/ThreadLocal;->set()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator$a;": [
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator$a;->sendEmptyMessage()Z"
    ],
    "Landroid/view/animation/Interpolator;": [
        "Landroid/view/animation/Interpolator;->getInterpolation()F"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator$AnimatorUpdateListener;": [
        "Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator$AnimatorUpdateListener;->onAnimationUpdate()V"
    ],
    "Landroid/view/animation/AnimationUtils;": [
        "Landroid/view/animation/AnimationUtils;->loadAnimation()Landroid/view/animation/Animation;",
        "Landroid/view/animation/AnimationUtils;->loadInterpolator()Landroid/view/animation/Interpolator;",
        "Landroid/view/animation/AnimationUtils;->currentAnimationTimeMillis()J"
    ],
    "Ljava/lang/Number;": [
        "Ljava/lang/Number;->floatValue()F",
        "Ljava/lang/Number;->byteValue()B",
        "Ljava/lang/Number;->shortValue()S",
        "Ljava/lang/Number;->intValue()I",
        "Ljava/lang/Number;->longValue()J",
        "Ljava/lang/Number;->doubleValue()D"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/FloatEvaluator;": [
        "Lcom/swarmconnect/nineoldandroids/animation/FloatEvaluator;->evaluate()Ljava/lang/Float;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/a;": [
        "Lcom/swarmconnect/nineoldandroids/animation/a;->clone()Lcom/swarmconnect/nineoldandroids/animation/a;",
        "Lcom/swarmconnect/nineoldandroids/animation/a;->getFloatValue()F"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$a;": [
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$a;->getFloatValue()F",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$a;->getInterpolator()Landroid/view/animation/Interpolator;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$a;->getFraction()F"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/TypeEvaluator;": [
        "Lcom/swarmconnect/nineoldandroids/animation/TypeEvaluator;->evaluate()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/IntEvaluator;": [
        "Lcom/swarmconnect/nineoldandroids/animation/IntEvaluator;->evaluate()Ljava/lang/Integer;"
    ],
    "Landroid/util/Xml;": [
        "Landroid/util/Xml;->asAttributeSet()Landroid/util/AttributeSet;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/AnimatorInflater;": [
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorInflater;->a()Lcom/swarmconnect/nineoldandroids/animation/ValueAnimator;",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorInflater;->a()Lcom/swarmconnect/nineoldandroids/animation/Animator;",
        "Lcom/swarmconnect/nineoldandroids/animation/AnimatorInflater;->a()Lcom/swarmconnect/nineoldandroids/animation/ObjectAnimator;"
    ],
    "Landroid/content/res/XmlResourceParser;": [
        "Landroid/content/res/XmlResourceParser;->getName()Ljava/lang/String;",
        "Landroid/content/res/XmlResourceParser;->next()I",
        "Landroid/content/res/XmlResourceParser;->getAttributeValue()Ljava/lang/String;",
        "Landroid/content/res/XmlResourceParser;->close()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/TimeAnimator$TimeListener;": [
        "Lcom/swarmconnect/nineoldandroids/animation/TimeAnimator$TimeListener;->onTimeUpdate()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/c;": [
        "Lcom/swarmconnect/nineoldandroids/animation/c;->clone()Lcom/swarmconnect/nineoldandroids/animation/c;",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->ofKeyframe()Lcom/swarmconnect/nineoldandroids/animation/c;",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->getValue()Ljava/lang/Object;",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->ofObject()Lcom/swarmconnect/nineoldandroids/animation/c;",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->ofFloat()Lcom/swarmconnect/nineoldandroids/animation/c;",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->toString()Ljava/lang/String;",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->setEvaluator()V",
        "Lcom/swarmconnect/nineoldandroids/animation/c;->ofInt()Lcom/swarmconnect/nineoldandroids/animation/c;"
    ],
    "Ljava/util/concurrent/locks/ReentrantReadWriteLock;": [
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock;->writeLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;"
    ],
    "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;": [
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;->lock()V",
        "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;->unlock()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/b;": [
        "Lcom/swarmconnect/nineoldandroids/animation/b;->getIntValue()I",
        "Lcom/swarmconnect/nineoldandroids/animation/b;->clone()Lcom/swarmconnect/nineoldandroids/animation/b;"
    ],
    "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$b;": [
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$b;->getIntValue()I",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$b;->getInterpolator()Landroid/view/animation/Interpolator;",
        "Lcom/swarmconnect/nineoldandroids/animation/Keyframe$b;->getFraction()F"
    ],
    "Ljava/util/WeakHashMap;": [
        "Ljava/util/WeakHashMap;->put()Ljava/lang/Object;",
        "Ljava/util/WeakHashMap;->get()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;": [
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getPivotX()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setScrollX()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setScrollY()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setRotationY()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getScrollX()I",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getTranslationX()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getScaleY()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->a()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getScrollY()I",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getTranslationY()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setFillAfter()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getRotationY()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getPivotY()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getRotation()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setPivotY()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setX()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setTranslationY()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setY()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setScaleX()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setAlpha()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getScaleX()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getY()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getRotationX()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getX()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setRotationX()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setRotation()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setScaleY()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setDuration()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setTranslationX()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->getAlpha()F",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->setPivotX()V",
        "Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;->wrap()Lcom/swarmconnect/nineoldandroids/view/animation/AnimatorProxy;"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/c;": [
        "Lcom/swarmconnect/nineoldandroids/view/c;->a()V",
        "Lcom/swarmconnect/nineoldandroids/view/c;->a()F"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/c$c;": [
        "Lcom/swarmconnect/nineoldandroids/view/c$c;->a()Z"
    ],
    "Landroid/view/ViewPropertyAnimator;": [
        "Landroid/view/ViewPropertyAnimator;->setListener()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->rotationYBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->rotationX()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->getStartDelay()J",
        "Landroid/view/ViewPropertyAnimator;->translationXBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->scaleX()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->translationX()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->rotationY()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->rotationBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->setInterpolator()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->rotationXBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->scaleYBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->translationYBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->alphaBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->alpha()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->scaleXBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->start()V",
        "Landroid/view/ViewPropertyAnimator;->cancel()V",
        "Landroid/view/ViewPropertyAnimator;->yBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->translationY()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->setDuration()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->a()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->rotation()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->xBy()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->scaleY()Landroid/view/ViewPropertyAnimator;",
        "Landroid/view/ViewPropertyAnimator;->getDuration()J",
        "Landroid/view/ViewPropertyAnimator;->setStartDelay()Landroid/view/ViewPropertyAnimator;"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/a;": [
        "Lcom/swarmconnect/nineoldandroids/view/a;->a()V",
        "Lcom/swarmconnect/nineoldandroids/view/a;->a()F"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/a$c;": [
        "Lcom/swarmconnect/nineoldandroids/view/a$c;->a()Z"
    ],
    "Lcom/swarmconnect/nineoldandroids/view/ViewHelper$a;": [
        "Lcom/swarmconnect/nineoldandroids/view/ViewHelper$a;->a()V",
        "Lcom/swarmconnect/nineoldandroids/view/ViewHelper$a;->a()F"
    ],
    "Landroid/graphics/Camera;": [
        "Landroid/graphics/Camera;->getMatrix()V",
        "Landroid/graphics/Camera;->restore()V",
        "Landroid/graphics/Camera;->rotateY()V",
        "Landroid/graphics/Camera;->save()V",
        "Landroid/graphics/Camera;->rotateX()V",
        "Landroid/graphics/Camera;->rotateZ()V"
    ],
    "Landroid/graphics/Matrix;": [
        "Landroid/graphics/Matrix;->postScale()Z",
        "Landroid/graphics/Matrix;->postTranslate()Z",
        "Landroid/graphics/Matrix;->preTranslate()Z",
        "Landroid/graphics/Matrix;->reset()V",
        "Landroid/graphics/Matrix;->mapRect()Z"
    ],
    "Landroid/graphics/RectF;": [
        "Landroid/graphics/RectF;->set()V",
        "Landroid/graphics/RectF;->union()V",
        "Landroid/graphics/RectF;->offset()V"
    ],
    "Landroid/view/animation/Transformation;": [
        "Landroid/view/animation/Transformation;->getMatrix()Landroid/graphics/Matrix;",
        "Landroid/view/animation/Transformation;->setAlpha()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/util/IntProperty;": [
        "Lcom/swarmconnect/nineoldandroids/util/IntProperty;->set()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/util/FloatProperty;": [
        "Lcom/swarmconnect/nineoldandroids/util/FloatProperty;->setValue()V",
        "Lcom/swarmconnect/nineoldandroids/util/FloatProperty;->set()V"
    ],
    "Lcom/swarmconnect/nineoldandroids/util/a;": [
        "Lcom/swarmconnect/nineoldandroids/util/a;->a()Z",
        "Lcom/swarmconnect/nineoldandroids/util/a;->getName()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/utils/LruCache;": [
        "Lcom/swarmconnect/utils/LruCache;->trimToSize()V",
        "Lcom/swarmconnect/utils/LruCache;->a()Ljava/lang/Object;",
        "Lcom/swarmconnect/utils/LruCache;->get()Ljava/lang/Object;",
        "Lcom/swarmconnect/utils/LruCache;->a()V",
        "Lcom/swarmconnect/utils/LruCache;->a()I",
        "Lcom/swarmconnect/utils/LruCache;->evictAll()V",
        "Lcom/swarmconnect/utils/LruCache;->remove()Ljava/lang/Object;"
    ],
    "Landroid/text/SpannableString;": [
        "Landroid/text/SpannableString;->getSpanStart()I",
        "Landroid/text/SpannableString;->getSpanFlags()I",
        "Landroid/text/SpannableString;->getSpanEnd()I",
        "Landroid/text/SpannableString;->setSpan()V",
        "Landroid/text/SpannableString;->getSpans()[Ljava/lang/Object;",
        "Landroid/text/SpannableString;->length()I",
        "Landroid/text/SpannableString;->removeSpan()V"
    ],
    "Lcom/swarmconnect/utils/RichTextUtils$SpanConverter;": [
        "Lcom/swarmconnect/utils/RichTextUtils$SpanConverter;->convert()Landroid/text/style/CharacterStyle;"
    ],
    "Lcom/swarmconnect/utils/AsyncImage$AsyncImageCB;": [
        "Lcom/swarmconnect/utils/AsyncImage$AsyncImageCB;->gotImage()V"
    ],
    "Ljava/util/concurrent/ExecutorService;": [
        "Ljava/util/concurrent/ExecutorService;->execute()V"
    ],
    "Lcom/swarmconnect/utils/GeoUtils$GotGeoCB;": [
        "Lcom/swarmconnect/utils/GeoUtils$GotGeoCB;->gotGeo()V"
    ],
    "Lcom/swarmconnect/utils/AsyncHttp$AsyncCB;": [
        "Lcom/swarmconnect/utils/AsyncHttp$AsyncCB;->requestFailed()V",
        "Lcom/swarmconnect/utils/AsyncHttp$AsyncCB;->gotURL()V"
    ],
    "Landroid/widget/Adapter;": [
        "Landroid/widget/Adapter;->getItemViewType()I",
        "Landroid/widget/Adapter;->getView()Landroid/view/View;",
        "Landroid/widget/Adapter;->getCount()I",
        "Landroid/widget/Adapter;->getViewTypeCount()I",
        "Landroid/widget/Adapter;->getItem()Ljava/lang/Object;"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;"
    ],
    "[Lcom/swarmconnect/gson/LongSerializationPolicy;": [
        "[Lcom/swarmconnect/gson/LongSerializationPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/gson/JsonElement;": [
        "Lcom/swarmconnect/gson/JsonElement;->getAsShort()S",
        "Lcom/swarmconnect/gson/JsonElement;->isJsonNull()Z",
        "Lcom/swarmconnect/gson/JsonElement;->isJsonObject()Z",
        "Lcom/swarmconnect/gson/JsonElement;->getAsFloat()F",
        "Lcom/swarmconnect/gson/JsonElement;->isJsonArray()Z",
        "Lcom/swarmconnect/gson/JsonElement;->getAsBigInteger()Ljava/math/BigInteger;",
        "Lcom/swarmconnect/gson/JsonElement;->getAsDouble()D",
        "Lcom/swarmconnect/gson/JsonElement;->getAsLong()J",
        "Lcom/swarmconnect/gson/JsonElement;->getAsNumber()Ljava/lang/Number;",
        "Lcom/swarmconnect/gson/JsonElement;->getAsInt()I",
        "Lcom/swarmconnect/gson/JsonElement;->getAsBigDecimal()Ljava/math/BigDecimal;",
        "Lcom/swarmconnect/gson/JsonElement;->getAsByte()B",
        "Lcom/swarmconnect/gson/JsonElement;->getAsBoolean()Z",
        "Lcom/swarmconnect/gson/JsonElement;->getAsCharacter()C",
        "Lcom/swarmconnect/gson/JsonElement;->getAsString()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/JsonElement;->isJsonPrimitive()Z"
    ],
    "Lcom/swarmconnect/gson/FieldNamingPolicy;": [
        "Lcom/swarmconnect/gson/FieldNamingPolicy;->a()Ljava/lang/String;"
    ],
    "[Lcom/swarmconnect/gson/FieldNamingPolicy;": [
        "[Lcom/swarmconnect/gson/FieldNamingPolicy;->clone()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/gson/stream/JsonWriter;": [
        "Lcom/swarmconnect/gson/stream/JsonWriter;->setLenient()V",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->isLenient()Z",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->getSerializeNulls()Z",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->endObject()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->a()V",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->beginArray()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->setIndent()V",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->isHtmlSafe()Z",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->a()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->endArray()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->setSerializeNulls()V",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->nullValue()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->setHtmlSafe()V",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->a()Lcom/swarmconnect/gson/stream/a;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->value()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/stream/JsonWriter;->beginObject()Lcom/swarmconnect/gson/stream/JsonWriter;"
    ],
    "Lcom/swarmconnect/gson/internal/Streams;": [
        "Lcom/swarmconnect/gson/internal/Streams;->parse()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/internal/Streams;->write()V",
        "Lcom/swarmconnect/gson/internal/Streams;->writerForAppendable()Ljava/io/Writer;"
    ],
    "Ljava/io/StringWriter;": [
        "Ljava/io/StringWriter;->toString()Ljava/lang/String;",
        "Ljava/io/StringWriter;->write()V"
    ],
    "Lcom/swarmconnect/gson/stream/JsonReader;": [
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()Lcom/swarmconnect/gson/stream/JsonToken;",
        "Lcom/swarmconnect/gson/stream/JsonReader;->beginObject()V",
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()Ljava/io/IOException;",
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()I",
        "Lcom/swarmconnect/gson/stream/JsonReader;->nextString()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/stream/JsonReader;->nextName()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()C",
        "Lcom/swarmconnect/gson/stream/JsonReader;->setLenient()V",
        "Lcom/swarmconnect/gson/stream/JsonReader;->nextNull()V",
        "Lcom/swarmconnect/gson/stream/JsonReader;->beginArray()V",
        "Lcom/swarmconnect/gson/stream/JsonReader;->endArray()V",
        "Lcom/swarmconnect/gson/stream/JsonReader;->peek()Lcom/swarmconnect/gson/stream/JsonToken;",
        "Lcom/swarmconnect/gson/stream/JsonReader;->nextDouble()D",
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()Z",
        "Lcom/swarmconnect/gson/stream/JsonReader;->endObject()V",
        "Lcom/swarmconnect/gson/stream/JsonReader;->hasNext()Z",
        "Lcom/swarmconnect/gson/stream/JsonReader;->isLenient()Z",
        "Lcom/swarmconnect/gson/stream/JsonReader;->nextBoolean()Z",
        "Lcom/swarmconnect/gson/stream/JsonReader;->a()V"
    ],
    "Lcom/swarmconnect/gson/JsonStreamParser;": [
        "Lcom/swarmconnect/gson/JsonStreamParser;->next()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/JsonStreamParser;->hasNext()Z"
    ],
    "Lcom/swarmconnect/gson/JsonParseException;": [
        "Lcom/swarmconnect/gson/JsonParseException;->getCause()Ljava/lang/Throwable;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/TypeAdapters;": [
        "Lcom/swarmconnect/gson/internal/bind/TypeAdapters;->newTypeHierarchyFactory()Lcom/swarmconnect/gson/TypeAdapterFactory;",
        "Lcom/swarmconnect/gson/internal/bind/TypeAdapters;->newFactoryForMultipleTypes()Lcom/swarmconnect/gson/TypeAdapterFactory;",
        "Lcom/swarmconnect/gson/internal/bind/TypeAdapters;->newFactory()Lcom/swarmconnect/gson/TypeAdapterFactory;",
        "Lcom/swarmconnect/gson/internal/bind/TypeAdapters;->newEnumTypeHierarchyFactory()Lcom/swarmconnect/gson/TypeAdapterFactory;"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->append()Ljava/io/Writer;",
        "Ljava/io/Writer;->write()V",
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->flush()V"
    ],
    "Lcom/swarmconnect/gson/internal/Primitives;": [
        "Lcom/swarmconnect/gson/internal/Primitives;->wrap()Ljava/lang/Class;",
        "Lcom/swarmconnect/gson/internal/Primitives;->isPrimitive()Z",
        "Lcom/swarmconnect/gson/internal/Primitives;->a()V"
    ],
    "Lcom/swarmconnect/gson/reflect/TypeToken;": [
        "Lcom/swarmconnect/gson/reflect/TypeToken;->a()Ljava/lang/reflect/Type;",
        "Lcom/swarmconnect/gson/reflect/TypeToken;->get()Lcom/swarmconnect/gson/reflect/TypeToken;",
        "Lcom/swarmconnect/gson/reflect/TypeToken;->a()Z",
        "Lcom/swarmconnect/gson/reflect/TypeToken;->getRawType()Ljava/lang/Class;",
        "Lcom/swarmconnect/gson/reflect/TypeToken;->isAssignableFrom()Z",
        "Lcom/swarmconnect/gson/reflect/TypeToken;->getType()Ljava/lang/reflect/Type;",
        "Lcom/swarmconnect/gson/reflect/TypeToken;->a()Ljava/lang/AssertionError;"
    ],
    "Lcom/swarmconnect/gson/TypeAdapter;": [
        "Lcom/swarmconnect/gson/TypeAdapter;->toJson()V",
        "Lcom/swarmconnect/gson/TypeAdapter;->read()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/TypeAdapter;->fromJson()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/TypeAdapter;->write()V"
    ],
    "Lcom/swarmconnect/gson/TypeAdapterFactory;": [
        "Lcom/swarmconnect/gson/TypeAdapterFactory;->create()Lcom/swarmconnect/gson/TypeAdapter;"
    ],
    "Lcom/swarmconnect/gson/Gson$a;": [
        "Lcom/swarmconnect/gson/Gson$a;->setDelegate()V"
    ],
    "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;": [
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;->a()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;->get()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;->a()V",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;->getSerializeNulls()Z",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;->nullValue()Lcom/swarmconnect/gson/stream/JsonWriter;",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeWriter;->isLenient()Z"
    ],
    "Lcom/swarmconnect/gson/a;": [
        "Lcom/swarmconnect/gson/a;->a()Ljava/util/Date;",
        "Lcom/swarmconnect/gson/a;->serialize()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/a;->deserialize()Ljava/util/Date;"
    ],
    "Lcom/swarmconnect/gson/internal/$Gson$Preconditions;": [
        "Lcom/swarmconnect/gson/internal/$Gson$Preconditions;->checkNotNull()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/internal/$Gson$Preconditions;->checkArgument()V"
    ],
    "Lcom/swarmconnect/gson/internal/StringMap;": [
        "Lcom/swarmconnect/gson/internal/StringMap;->put()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/internal/StringMap;->get()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/internal/StringMap;->a()Lcom/swarmconnect/gson/internal/StringMap$c;",
        "Lcom/swarmconnect/gson/internal/StringMap;->containsKey()Z",
        "Lcom/swarmconnect/gson/internal/StringMap;->hashCode()I",
        "Lcom/swarmconnect/gson/internal/StringMap;->remove()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/internal/StringMap;->a()I",
        "Lcom/swarmconnect/gson/internal/StringMap;->a()Z",
        "Lcom/swarmconnect/gson/internal/StringMap;->a()V",
        "Lcom/swarmconnect/gson/internal/StringMap;->entrySet()Ljava/util/Set;",
        "Lcom/swarmconnect/gson/internal/StringMap;->equals()Z",
        "Lcom/swarmconnect/gson/internal/StringMap;->a()[Lcom/swarmconnect/gson/internal/StringMap$c;"
    ],
    "Lcom/swarmconnect/gson/JsonObject;": [
        "Lcom/swarmconnect/gson/JsonObject;->a()Lcom/swarmconnect/gson/JsonElement;",
        "Lcom/swarmconnect/gson/JsonObject;->add()V",
        "Lcom/swarmconnect/gson/JsonObject;->entrySet()Ljava/util/Set;"
    ],
    "Lcom/swarmconnect/gson/b;": [
        "Lcom/swarmconnect/gson/b;->newTypeHierarchyFactory()Lcom/swarmconnect/gson/TypeAdapterFactory;",
        "Lcom/swarmconnect/gson/b;->a()Lcom/swarmconnect/gson/TypeAdapter;",
        "Lcom/swarmconnect/gson/b;->newFactory()Lcom/swarmconnect/gson/TypeAdapterFactory;",
        "Lcom/swarmconnect/gson/b;->newFactoryWithMatchRawType()Lcom/swarmconnect/gson/TypeAdapterFactory;"
    ],
    "Lcom/swarmconnect/gson/JsonDeserializer;": [
        "Lcom/swarmconnect/gson/JsonDeserializer;->deserialize()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/gson/JsonSerializer;": [
        "Lcom/swarmconnect/gson/JsonSerializer;->serialize()Lcom/swarmconnect/gson/JsonElement;"
    ],
    "Lcom/swarmconnect/gson/internal/Excluder;": [
        "Lcom/swarmconnect/gson/internal/Excluder;->disableInnerClassSerialization()Lcom/swarmconnect/gson/internal/Excluder;",
        "Lcom/swarmconnect/gson/internal/Excluder;->withVersion()Lcom/swarmconnect/gson/internal/Excluder;",
        "Lcom/swarmconnect/gson/internal/Excluder;->excludeField()Z",
        "Lcom/swarmconnect/gson/internal/Excluder;->a()Z",
        "Lcom/swarmconnect/gson/internal/Excluder;->withModifiers()Lcom/swarmconnect/gson/internal/Excluder;",
        "Lcom/swarmconnect/gson/internal/Excluder;->withExclusionStrategy()Lcom/swarmconnect/gson/internal/Excluder;",
        "Lcom/swarmconnect/gson/internal/Excluder;->excludeFieldsWithoutExposeAnnotation()Lcom/swarmconnect/gson/internal/Excluder;",
        "Lcom/swarmconnect/gson/internal/Excluder;->excludeClass()Z",
        "Lcom/swarmconnect/gson/internal/Excluder;->a()Lcom/swarmconnect/gson/internal/Excluder;"
    ],
    "Lcom/swarmconnect/gson/JsonParser;": [
        "Lcom/swarmconnect/gson/JsonParser;->parse()Lcom/swarmconnect/gson/JsonElement;"
    ],
    "Lcom/swarmconnect/gson/JsonPrimitive;": [
        "Lcom/swarmconnect/gson/JsonPrimitive;->getAsString()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/JsonPrimitive;->getAsLong()J",
        "Lcom/swarmconnect/gson/JsonPrimitive;->getAsBoolean()Z",
        "Lcom/swarmconnect/gson/JsonPrimitive;->getAsDouble()D",
        "Lcom/swarmconnect/gson/JsonPrimitive;->a()Ljava/lang/Boolean;",
        "Lcom/swarmconnect/gson/JsonPrimitive;->isBoolean()Z",
        "Lcom/swarmconnect/gson/JsonPrimitive;->isString()Z",
        "Lcom/swarmconnect/gson/JsonPrimitive;->a()Z",
        "Lcom/swarmconnect/gson/JsonPrimitive;->getAsNumber()Ljava/lang/Number;",
        "Lcom/swarmconnect/gson/JsonPrimitive;->getAsInt()I",
        "Lcom/swarmconnect/gson/JsonPrimitive;->a()V",
        "Lcom/swarmconnect/gson/JsonPrimitive;->isNumber()Z"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->parseByte()B",
        "Ljava/lang/Byte;->byteValue()B"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->parseShort()S",
        "Ljava/lang/Short;->shortValue()S"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->setAccessible()V",
        "Ljava/lang/reflect/Constructor;->isAccessible()Z"
    ],
    "Lcom/swarmconnect/gson/internal/ConstructorConstructor;": [
        "Lcom/swarmconnect/gson/internal/ConstructorConstructor;->a()Lcom/swarmconnect/gson/internal/ObjectConstructor;",
        "Lcom/swarmconnect/gson/internal/ConstructorConstructor;->get()Lcom/swarmconnect/gson/internal/ObjectConstructor;"
    ],
    "Lcom/swarmconnect/gson/annotations/Since;": [
        "Lcom/swarmconnect/gson/annotations/Since;->value()D"
    ],
    "Lcom/swarmconnect/gson/annotations/Until;": [
        "Lcom/swarmconnect/gson/annotations/Until;->value()D"
    ],
    "Lcom/swarmconnect/gson/ExclusionStrategy;": [
        "Lcom/swarmconnect/gson/ExclusionStrategy;->shouldSkipField()Z",
        "Lcom/swarmconnect/gson/ExclusionStrategy;->shouldSkipClass()Z"
    ],
    "Lcom/swarmconnect/gson/annotations/Expose;": [
        "Lcom/swarmconnect/gson/annotations/Expose;->serialize()Z",
        "Lcom/swarmconnect/gson/annotations/Expose;->deserialize()Z"
    ],
    "Lcom/swarmconnect/gson/internal/$Gson$Types;": [
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->getRawType()Ljava/lang/Class;",
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->equals()Z",
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->canonicalize()Ljava/lang/reflect/Type;",
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->getCollectionElementType()Ljava/lang/reflect/Type;",
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->getMapKeyAndValueTypes()[Ljava/lang/reflect/Type;",
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->resolve()Ljava/lang/reflect/Type;",
        "Lcom/swarmconnect/gson/internal/$Gson$Types;->typeToString()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/MapTypeAdapterFactory;": [
        "Lcom/swarmconnect/gson/internal/bind/MapTypeAdapterFactory;->a()Lcom/swarmconnect/gson/TypeAdapter;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/a;": [
        "Lcom/swarmconnect/gson/internal/bind/a;->a()Ljava/lang/reflect/Type;"
    ],
    "Lcom/swarmconnect/gson/stream/JsonToken;": [
        "Lcom/swarmconnect/gson/stream/JsonToken;->ordinal()I"
    ],
    "Lcom/swarmconnect/gson/internal/bind/ObjectTypeAdapter;": [
        "Lcom/swarmconnect/gson/internal/bind/ObjectTypeAdapter;->read()Ljava/lang/Object;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/DateTypeAdapter;": [
        "Lcom/swarmconnect/gson/internal/bind/DateTypeAdapter;->a()Ljava/util/Date;",
        "Lcom/swarmconnect/gson/internal/bind/DateTypeAdapter;->a()Ljava/text/DateFormat;",
        "Lcom/swarmconnect/gson/internal/bind/DateTypeAdapter;->write()V",
        "Lcom/swarmconnect/gson/internal/bind/DateTypeAdapter;->read()Ljava/util/Date;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/JsonTreeReader;": [
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeReader;->a()Ljava/lang/Object;",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeReader;->isLenient()Z",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeReader;->peek()Lcom/swarmconnect/gson/stream/JsonToken;",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeReader;->a()V",
        "Lcom/swarmconnect/gson/internal/bind/JsonTreeReader;->nextName()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/gson/JsonArray;": [
        "Lcom/swarmconnect/gson/JsonArray;->iterator()Ljava/util/Iterator;",
        "Lcom/swarmconnect/gson/JsonArray;->add()V"
    ],
    "Lcom/swarmconnect/gson/FieldNamingStrategy;": [
        "Lcom/swarmconnect/gson/FieldNamingStrategy;->translateName()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/gson/annotations/SerializedName;": [
        "Lcom/swarmconnect/gson/annotations/SerializedName;->value()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/ReflectiveTypeAdapterFactory;": [
        "Lcom/swarmconnect/gson/internal/bind/ReflectiveTypeAdapterFactory;->a()Ljava/lang/String;",
        "Lcom/swarmconnect/gson/internal/bind/ReflectiveTypeAdapterFactory;->a()Ljava/util/Map;",
        "Lcom/swarmconnect/gson/internal/bind/ReflectiveTypeAdapterFactory;->excludeField()Z",
        "Lcom/swarmconnect/gson/internal/bind/ReflectiveTypeAdapterFactory;->a()Lcom/swarmconnect/gson/internal/bind/ReflectiveTypeAdapterFactory$a;"
    ],
    "Lcom/swarmconnect/gson/internal/bind/TimeTypeAdapter;": [
        "Lcom/swarmconnect/gson/internal/bind/TimeTypeAdapter;->read()Ljava/sql/Time;",
        "Lcom/swarmconnect/gson/internal/bind/TimeTypeAdapter;->write()V"
    ],
    "Lcom/swarmconnect/gson/internal/bind/SqlDateTypeAdapter;": [
        "Lcom/swarmconnect/gson/internal/bind/SqlDateTypeAdapter;->read()Ljava/sql/Date;",
        "Lcom/swarmconnect/gson/internal/bind/SqlDateTypeAdapter;->write()V"
    ],
    "Lcom/swarmconnect/gson/stream/b;": [
        "Lcom/swarmconnect/gson/stream/b;->get()Ljava/lang/String;"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->close()V",
        "Ljava/io/Reader;->read()I"
    ],
    "Lcom/swarmconnect/gson/stream/a;": [
        "Lcom/swarmconnect/gson/stream/a;->ordinal()I"
    ],
    "[Ljava/lang/String;": [
        "[Ljava/lang/String;->clone()Ljava/lang/Object;"
    ],
    "[Lcom/swarmconnect/gson/stream/a;": [
        "[Lcom/swarmconnect/gson/stream/a;->clone()Ljava/lang/Object;"
    ],
    "[Lcom/swarmconnect/gson/stream/JsonToken;": [
        "[Lcom/swarmconnect/gson/stream/JsonToken;->clone()Ljava/lang/Object;"
    ],
    "Ljava/lang/reflect/ParameterizedType;": [
        "Ljava/lang/reflect/ParameterizedType;->getActualTypeArguments()[Ljava/lang/reflect/Type;",
        "Ljava/lang/reflect/ParameterizedType;->getRawType()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/reflect/GenericArrayType;": [
        "Ljava/lang/reflect/GenericArrayType;->getGenericComponentType()Ljava/lang/reflect/Type;"
    ],
    "Ljava/lang/reflect/TypeVariable;": [
        "Ljava/lang/reflect/TypeVariable;->getName()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/packets/TypesReader;": [
        "Lcom/swarmconnect/packets/TypesReader;->readByte()I",
        "Lcom/swarmconnect/packets/TypesReader;->readByteString()[B",
        "Lcom/swarmconnect/packets/TypesReader;->readUINT32()I",
        "Lcom/swarmconnect/packets/TypesReader;->readString()Ljava/lang/String;"
    ],
    "Lcom/swarmconnect/packets/TypesWriter;": [
        "Lcom/swarmconnect/packets/TypesWriter;->a()V",
        "Lcom/swarmconnect/packets/TypesWriter;->getBytes()[B",
        "Lcom/swarmconnect/packets/TypesWriter;->writeBytes()V",
        "Lcom/swarmconnect/packets/TypesWriter;->writeByte()V",
        "Lcom/swarmconnect/packets/TypesWriter;->writeUINT32()V",
        "Lcom/swarmconnect/packets/TypesWriter;->writeString()V"
    ],
    "Lcom/swarmconnect/packets/PacketDisconnect;": [
        "Lcom/swarmconnect/packets/PacketDisconnect;->fromPayload()V"
    ],
    "Lcom/swarmconnect/packets/PacketPing;": [
        "Lcom/swarmconnect/packets/PacketPing;->getPayload()[B"
    ],
    "Landroid/graphics/Path;": [
        "Landroid/graphics/Path;->setFillType()V",
        "Landroid/graphics/Path;->moveTo()V",
        "Landroid/graphics/Path;->lineTo()V",
        "Landroid/graphics/Path;->close()V"
    ],
    "Lcom/swarmconnect/ui/TriangleView;": [
        "Lcom/swarmconnect/ui/TriangleView;->getWidth()I",
        "Lcom/swarmconnect/ui/TriangleView;->getHeight()I"
    ],
    "Lcom/swarmconnect/utils/AsyncImage;": [
        "Lcom/swarmconnect/utils/AsyncImage;->getImage()V"
    ],
    "Lcom/swarmconnect/ui/AsyncImageView$a;": [
        "Lcom/swarmconnect/ui/AsyncImageView$a;->a()V"
    ],
    "Lcom/swarmconnect/ui/SeparatedListAdapter;": [
        "Lcom/swarmconnect/ui/SeparatedListAdapter;->addSection()Lcom/swarmconnect/ui/SeparatedListAdapter;",
        "Lcom/swarmconnect/ui/SeparatedListAdapter;->getItemViewType()I",
        "Lcom/swarmconnect/ui/SeparatedListAdapter;->notifyDataSetChanged()V"
    ],
    "Lcom/swarmconnect/ui/NoScrollListView;": [
        "Lcom/swarmconnect/ui/NoScrollListView;->getChildCount()I",
        "Lcom/swarmconnect/ui/NoScrollListView;->setMeasuredDimension()V",
        "Lcom/swarmconnect/ui/NoScrollListView;->getListPaddingBottom()I",
        "Lcom/swarmconnect/ui/NoScrollListView;->getMeasuredHeight()I",
        "Lcom/swarmconnect/ui/NoScrollListView;->getCount()I",
        "Lcom/swarmconnect/ui/NoScrollListView;->getMeasuredWidth()I",
        "Lcom/swarmconnect/ui/NoScrollListView;->getVerticalFadingEdgeLength()I",
        "Lcom/swarmconnect/ui/NoScrollListView;->getChildAt()Landroid/view/View;",
        "Lcom/swarmconnect/ui/NoScrollListView;->getListPaddingTop()I"
    ],
    "Lorg/andengine/util/system/SystemUtils;": [
        "Lorg/andengine/util/system/SystemUtils;->hasCamera()Z",
        "Lorg/andengine/util/system/SystemUtils;->isAndroidVersion()Z",
        "Lorg/andengine/util/system/SystemUtils;->readSystemFileAsLong()J",
        "Lorg/andengine/util/system/SystemUtils;->getMetaData()Landroid/os/Bundle;",
        "Lorg/andengine/util/system/SystemUtils;->isAndroidVersionOrLower()Z",
        "Lorg/andengine/util/system/SystemUtils;->getPackageName()Ljava/lang/String;",
        "Lorg/andengine/util/system/SystemUtils;->isAndroidVersionOrHigher()Z",
        "Lorg/andengine/util/system/SystemUtils;->hasSystemFeature()Z",
        "Lorg/andengine/util/system/SystemUtils;->getDalvikHeapSize()J",
        "Lorg/andengine/util/system/SystemUtils;->getMemoryInfo()Landroid/os/Debug$MemoryInfo;",
        "Lorg/andengine/util/system/SystemUtils;->isGoogleTV()Z",
        "Lorg/andengine/util/system/SystemUtils;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Lorg/andengine/util/system/SystemUtils;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Lorg/andengine/util/system/SystemUtils;->matchSystemFile()Ljava/util/regex/MatchResult;",
        "Lorg/andengine/util/system/SystemUtils;->getDalvikHeapFreeSize()J"
    ],
    "Lorg/andengine/AndEngine;": [
        "Lorg/andengine/AndEngine;->checkEGLConfigChooserSupport()V",
        "Lorg/andengine/AndEngine;->checkDeviceSupported()V",
        "Lorg/andengine/AndEngine;->checkCodePathSupport()V",
        "Lorg/andengine/AndEngine;->checkOpenGLSupport()V",
        "Lorg/andengine/AndEngine;->checkGLES20Support()V"
    ],
    "Ljavax/microedition/khronos/egl/EGLContext;": [
        "Ljavax/microedition/khronos/egl/EGLContext;->getEGL()Ljavax/microedition/khronos/egl/EGL;"
    ],
    "Ljavax/microedition/khronos/egl/EGL10;": [
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetDisplay()Ljavax/microedition/khronos/egl/EGLDisplay;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglChooseConfig()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglInitialize()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigAttrib()Z"
    ],
    "Lorg/andengine/opengl/view/ConfigChooser;": [
        "Lorg/andengine/opengl/view/ConfigChooser;->getEGLConfigCount()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->getConfigAttrib()I",
        "Lorg/andengine/opengl/view/ConfigChooser;->chooseConfig()Ljavax/microedition/khronos/egl/EGLConfig;",
        "Lorg/andengine/opengl/view/ConfigChooser;->findEGLConfig()Ljavax/microedition/khronos/egl/EGLConfig;",
        "Lorg/andengine/opengl/view/ConfigChooser;->isActualCoverageMultiSampling()Z"
    ],
    "Lorg/andengine/ui/dialog/StringInputDialogBuilder;": [
        "Lorg/andengine/ui/dialog/StringInputDialogBuilder;->generateResult()Ljava/lang/String;"
    ],
    "Lorg/andengine/ui/dialog/GenericInputDialogBuilder;": [
        "Lorg/andengine/ui/dialog/GenericInputDialogBuilder;->setView()V"
    ],
    "Lorg/andengine/ui/activity/LayoutGameActivity;": [
        "Lorg/andengine/ui/activity/LayoutGameActivity;->getRenderSurfaceViewID()I",
        "Lorg/andengine/ui/activity/LayoutGameActivity;->findViewById()Landroid/view/View;",
        "Lorg/andengine/ui/activity/LayoutGameActivity;->getLayoutID()I"
    ],
    "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;": [
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onCreateResources()V",
        "Lorg/andengine/ui/activity/SimpleLayoutGameActivity;->onCreateScene()Lorg/andengine/entity/scene/Scene;"
    ],
    "Lorg/andengine/engine/options/ScreenOrientation;": [
        "Lorg/andengine/engine/options/ScreenOrientation;->values()[Lorg/andengine/engine/options/ScreenOrientation;",
        "Lorg/andengine/engine/options/ScreenOrientation;->ordinal()I"
    ],
    "Lorg/andengine/util/ActivityUtils;": [
        "Lorg/andengine/util/ActivityUtils;->keepScreenOn()V",
        "Lorg/andengine/util/ActivityUtils;->doAsync()V",
        "Lorg/andengine/util/ActivityUtils;->requestFullscreen()V",
        "Lorg/andengine/util/ActivityUtils;->doProgressAsync()V",
        "Lorg/andengine/util/ActivityUtils;->isOnUiThread()Z"
    ],
    "Lorg/andengine/engine/options/WakeLockOptions;": [
        "Lorg/andengine/engine/options/WakeLockOptions;->getFlag()I"
    ],
    "Lorg/andengine/ui/activity/BaseActivity;": [
        "Lorg/andengine/ui/activity/BaseActivity;->onResume()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onDestroy()V",
        "Lorg/andengine/ui/activity/BaseActivity;->runOnUiThread()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onPause()V",
        "Lorg/andengine/ui/activity/BaseActivity;->doAsync()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onWindowFocusChanged()V",
        "Lorg/andengine/ui/activity/BaseActivity;->onCreate()V",
        "Lorg/andengine/ui/activity/BaseActivity;->doProgressAsync()V",
        "Lorg/andengine/ui/activity/BaseActivity;->toastOnUiThread()V"
    ],
    "Lorg/andengine/audio/music/MusicManager;": [
        "Lorg/andengine/audio/music/MusicManager;->add()V",
        "Lorg/andengine/audio/music/MusicManager;->releaseAll()V",
        "Lorg/andengine/audio/music/MusicManager;->getMasterVolume()F",
        "Lorg/andengine/audio/music/MusicManager;->remove()Z"
    ],
    "Lorg/andengine/audio/sound/SoundManager;": [
        "Lorg/andengine/audio/sound/SoundManager;->getSoundPool()Landroid/media/SoundPool;",
        "Lorg/andengine/audio/sound/SoundManager;->onResume()V",
        "Lorg/andengine/audio/sound/SoundManager;->releaseAll()V",
        "Lorg/andengine/audio/sound/SoundManager;->onPause()V",
        "Lorg/andengine/audio/sound/SoundManager;->remove()Z",
        "Lorg/andengine/audio/sound/SoundManager;->add()V"
    ],
    "Lorg/andengine/ui/activity/SimpleAsyncGameActivity;": [
        "Lorg/andengine/ui/activity/SimpleAsyncGameActivity;->runOnUiThread()V"
    ],
    "Lorg/andengine/util/DialogUtils;": [
        "Lorg/andengine/util/DialogUtils;->showDialogOnUiThread()V"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->show()V",
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;"
    ],
    "Lorg/andengine/ui/activity/LegacyBaseGameActivity;": [
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadComplete()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onUnloadResources()V",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadEngine()Lorg/andengine/engine/Engine;",
        "Lorg/andengine/ui/activity/LegacyBaseGameActivity;->onLoadResources()V"
    ],
    "Lorg/andengine/ui/activity/SimpleBaseGameActivity;": [
        "Lorg/andengine/ui/activity/SimpleBaseGameActivity;->onCreateScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/ui/activity/SimpleBaseGameActivity;->onCreateResources()V"
    ],
    "Lorg/andengine/audio/BaseAudioEntity;": [
        "Lorg/andengine/audio/BaseAudioEntity;->release()V",
        "Lorg/andengine/audio/BaseAudioEntity;->resume()V",
        "Lorg/andengine/audio/BaseAudioEntity;->stop()V",
        "Lorg/andengine/audio/BaseAudioEntity;->throwOnReleased()V",
        "Lorg/andengine/audio/BaseAudioEntity;->pause()V",
        "Lorg/andengine/audio/BaseAudioEntity;->play()V",
        "Lorg/andengine/audio/BaseAudioEntity;->setLooping()V",
        "Lorg/andengine/audio/BaseAudioEntity;->getAudioManager()Lorg/andengine/audio/IAudioManager;",
        "Lorg/andengine/audio/BaseAudioEntity;->setVolume()V",
        "Lorg/andengine/audio/BaseAudioEntity;->assertNotReleased()V",
        "Lorg/andengine/audio/BaseAudioEntity;->getMasterVolume()F"
    ],
    "Lorg/andengine/audio/IAudioManager;": [
        "Lorg/andengine/audio/IAudioManager;->getMasterVolume()F"
    ],
    "Lorg/andengine/audio/IAudioEntity;": [
        "Lorg/andengine/audio/IAudioEntity;->stop()V",
        "Lorg/andengine/audio/IAudioEntity;->onMasterVolumeChanged()V",
        "Lorg/andengine/audio/IAudioEntity;->release()V"
    ],
    "Landroid/content/res/AssetFileDescriptor;": [
        "Landroid/content/res/AssetFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;",
        "Landroid/content/res/AssetFileDescriptor;->getLength()J",
        "Landroid/content/res/AssetFileDescriptor;->getStartOffset()J"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->getFD()Ljava/io/FileDescriptor;",
        "Ljava/io/FileInputStream;->close()V",
        "Ljava/io/FileInputStream;->read()I",
        "Ljava/io/FileInputStream;->available()I"
    ],
    "Lorg/andengine/util/StreamUtils;": [
        "Lorg/andengine/util/StreamUtils;->readFully()Ljava/lang/String;",
        "Lorg/andengine/util/StreamUtils;->copy()V",
        "Lorg/andengine/util/StreamUtils;->copyAndClose()Z",
        "Lorg/andengine/util/StreamUtils;->streamToBytes()V",
        "Lorg/andengine/util/StreamUtils;->flushAndCloseStream()V",
        "Lorg/andengine/util/StreamUtils;->streamToBytes()[B",
        "Lorg/andengine/util/StreamUtils;->readLines()[Ljava/lang/String;",
        "Lorg/andengine/util/StreamUtils;->close()V"
    ],
    "Lorg/andengine/audio/music/MusicFactory;": [
        "Lorg/andengine/audio/music/MusicFactory;->setAssetBasePath()V",
        "Lorg/andengine/audio/music/MusicFactory;->onCreate()V"
    ],
    "Lorg/andengine/audio/music/Music;": [
        "Lorg/andengine/audio/music/Music;->getAudioManager()Lorg/andengine/audio/music/MusicManager;",
        "Lorg/andengine/audio/music/Music;->setVolume()V",
        "Lorg/andengine/audio/music/Music;->assertNotReleased()V"
    ],
    "Landroid/media/SoundPool;": [
        "Landroid/media/SoundPool;->setLoop()V",
        "Landroid/media/SoundPool;->setPriority()V",
        "Landroid/media/SoundPool;->setOnLoadCompleteListener()V",
        "Landroid/media/SoundPool;->stop()V",
        "Landroid/media/SoundPool;->unload()Z",
        "Landroid/media/SoundPool;->setVolume()V",
        "Landroid/media/SoundPool;->autoPause()V",
        "Landroid/media/SoundPool;->setRate()V",
        "Landroid/media/SoundPool;->pause()V",
        "Landroid/media/SoundPool;->play()I",
        "Landroid/media/SoundPool;->autoResume()V",
        "Landroid/media/SoundPool;->load()I",
        "Landroid/media/SoundPool;->resume()V",
        "Landroid/media/SoundPool;->release()V"
    ],
    "Lorg/andengine/audio/BaseAudioManager;": [
        "Lorg/andengine/audio/BaseAudioManager;->remove()Z",
        "Lorg/andengine/audio/BaseAudioManager;->releaseAll()V",
        "Lorg/andengine/audio/BaseAudioManager;->add()V"
    ],
    "Landroid/util/SparseArray;": [
        "Landroid/util/SparseArray;->valueAt()Ljava/lang/Object;",
        "Landroid/util/SparseArray;->size()I",
        "Landroid/util/SparseArray;->keyAt()I",
        "Landroid/util/SparseArray;->remove()V",
        "Landroid/util/SparseArray;->get()Ljava/lang/Object;",
        "Landroid/util/SparseArray;->clear()V",
        "Landroid/util/SparseArray;->put()V"
    ],
    "Lorg/andengine/opengl/GLES20Fix;": [
        "Lorg/andengine/opengl/GLES20Fix;->glVertexAttribPointerFix()V",
        "Lorg/andengine/opengl/GLES20Fix;->glVertexAttribPointer()V",
        "Lorg/andengine/opengl/GLES20Fix;->glDrawElements()V"
    ],
    "Landroid/opengl/GLES20;": [
        "Landroid/opengl/GLES20;->glUniform4f()V",
        "Landroid/opengl/GLES20;->glGetShaderiv()V",
        "Landroid/opengl/GLES20;->glFramebufferTexture2D()V",
        "Landroid/opengl/GLES20;->glBufferData()V",
        "Landroid/opengl/GLES20;->glLineWidth()V",
        "Landroid/opengl/GLES20;->glBindTexture()V",
        "Landroid/opengl/GLES20;->glActiveTexture()V",
        "Landroid/opengl/GLES20;->glUniform1f()V",
        "Landroid/opengl/GLES20;->glDeleteProgram()V",
        "Landroid/opengl/GLES20;->glGetProgramiv()V",
        "Landroid/opengl/GLES20;->glDeleteTextures()V",
        "Landroid/opengl/GLES20;->glGetFloatv()V",
        "Landroid/opengl/GLES20;->glLinkProgram()V",
        "Landroid/opengl/GLES20;->glUniform2f()V",
        "Landroid/opengl/GLES20;->glAttachShader()V",
        "Landroid/opengl/GLES20;->glDeleteBuffers()V",
        "Landroid/opengl/GLES20;->glDrawArrays()V",
        "Landroid/opengl/GLES20;->glTexImage2D()V",
        "Landroid/opengl/GLES20;->glGetActiveUniform()V",
        "Landroid/opengl/GLES20;->glUniform3f()V",
        "Landroid/opengl/GLES20;->glScissor()V",
        "Landroid/opengl/GLES20;->glGetProgramInfoLog()Ljava/lang/String;",
        "Landroid/opengl/GLES20;->glClear()V",
        "Landroid/opengl/GLES20;->glGetError()I",
        "Landroid/opengl/GLES20;->glEnableVertexAttribArray()V",
        "Landroid/opengl/GLES20;->glGenTextures()V",
        "Landroid/opengl/GLES20;->glGetIntegerv()V",
        "Landroid/opengl/GLES20;->glDisableVertexAttribArray()V",
        "Landroid/opengl/GLES20;->glShaderSource()V",
        "Landroid/opengl/GLES20;->glGetAttribLocation()I",
        "Landroid/opengl/GLES20;->glBlendFunc()V",
        "Landroid/opengl/GLES20;->glClearColor()V",
        "Landroid/opengl/GLES20;->glFinish()V",
        "Landroid/opengl/GLES20;->glReadPixels()V",
        "Landroid/opengl/GLES20;->glViewport()V",
        "Landroid/opengl/GLES20;->glVertexAttribPointer()V",
        "Landroid/opengl/GLES20;->glGetUniformLocation()I",
        "Landroid/opengl/GLES20;->glUniformMatrix4fv()V",
        "Landroid/opengl/GLES20;->glGenFramebuffers()V",
        "Landroid/opengl/GLES20;->glCreateShader()I",
        "Landroid/opengl/GLES20;->glUseProgram()V",
        "Landroid/opengl/GLES20;->glDeleteShader()V",
        "Landroid/opengl/GLES20;->glTexParameterf()V",
        "Landroid/opengl/GLES20;->glDeleteFramebuffers()V",
        "Landroid/opengl/GLES20;->glBindFramebuffer()V",
        "Landroid/opengl/GLES20;->glFlush()V",
        "Landroid/opengl/GLES20;->glGenBuffers()V",
        "Landroid/opengl/GLES20;->glBindBuffer()V",
        "Landroid/opengl/GLES20;->glGetActiveAttrib()V",
        "Landroid/opengl/GLES20;->glDrawElements()V",
        "Landroid/opengl/GLES20;->glPixelStorei()V",
        "Landroid/opengl/GLES20;->glTexSubImage2D()V",
        "Landroid/opengl/GLES20;->glCheckFramebufferStatus()I",
        "Landroid/opengl/GLES20;->glDisable()V",
        "Landroid/opengl/GLES20;->glCompileShader()V",
        "Landroid/opengl/GLES20;->glGetShaderInfoLog()Ljava/lang/String;",
        "Landroid/opengl/GLES20;->glGetString()Ljava/lang/String;",
        "Landroid/opengl/GLES20;->glBindAttribLocation()V",
        "Landroid/opengl/GLES20;->glIsTexture()Z",
        "Landroid/opengl/GLES20;->glCreateProgram()I",
        "Landroid/opengl/GLES20;->glEnable()V",
        "Landroid/opengl/GLES20;->glUniform1i()V"
    ],
    "Lorg/andengine/opengl/vbo/HighPerformanceVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/HighPerformanceVertexBufferObject;->getByteCapacity()I"
    ],
    "Ljava/nio/FloatBuffer;": [
        "Ljava/nio/FloatBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->put()Ljava/nio/FloatBuffer;"
    ],
    "Lorg/andengine/opengl/util/BufferUtils;": [
        "Lorg/andengine/opengl/util/BufferUtils;->jniFreeDirect()V",
        "Lorg/andengine/opengl/util/BufferUtils;->jniAllocateDirect()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/opengl/util/BufferUtils;->jniPut()V",
        "Lorg/andengine/opengl/util/BufferUtils;->allocateDirectByteBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/opengl/util/BufferUtils;->put()V",
        "Lorg/andengine/opengl/util/BufferUtils;->freeDirectByteBuffer()V"
    ],
    "Ljava/util/concurrent/locks/ReentrantLock;": [
        "Ljava/util/concurrent/locks/ReentrantLock;->lockInterruptibly()V",
        "Ljava/util/concurrent/locks/ReentrantLock;->lock()V",
        "Ljava/util/concurrent/locks/ReentrantLock;->newCondition()Ljava/util/concurrent/locks/Condition;",
        "Ljava/util/concurrent/locks/ReentrantLock;->unlock()V"
    ],
    "Lorg/andengine/opengl/vbo/SharedMemoryVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/SharedMemoryVertexBufferObject;->getByteCapacity()I"
    ],
    "Ljava/nio/ByteOrder;": [
        "Ljava/nio/ByteOrder;->nativeOrder()Ljava/nio/ByteOrder;"
    ],
    "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->bind()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->getByteCapacity()I",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->loadToHardware()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->aquireByteBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->dispose()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->onPopulateBufferData()V",
        "Lorg/andengine/opengl/vbo/ZeroMemoryVertexBufferObject;->releaseByteBuffer()V"
    ],
    "Lorg/andengine/opengl/vbo/IVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getGPUMemoryByteSize()I",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->unloadFromHardware()V",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->isDisposed()Z",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->dispose()V",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getNativeHeapMemoryByteSize()I",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->getHeapMemoryByteSize()I",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->isAutoDispose()Z",
        "Lorg/andengine/opengl/vbo/IVertexBufferObject;->setNotLoadedToHardware()V"
    ],
    "Lorg/andengine/opengl/vbo/LowMemoryVertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/LowMemoryVertexBufferObject;->getByteCapacity()I"
    ],
    "Lorg/andengine/opengl/vbo/DrawType;": [
        "Lorg/andengine/opengl/vbo/DrawType;->getUsage()I"
    ],
    "Lorg/andengine/opengl/util/GLState;": [
        "Lorg/andengine/opengl/util/GLState;->getModelViewProjectionGLMatrix()[F",
        "Lorg/andengine/opengl/util/GLState;->loadModelViewGLMatrixIdentity()V",
        "Lorg/andengine/opengl/util/GLState;->popModelViewGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->glTexSubImage2D()V",
        "Lorg/andengine/opengl/util/GLState;->disableDither()Z",
        "Lorg/andengine/opengl/util/GLState;->orthoProjectionGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->disableScissorTest()Z",
        "Lorg/andengine/opengl/util/GLState;->deleteTexture()V",
        "Lorg/andengine/opengl/util/GLState;->deleteFramebuffer()V",
        "Lorg/andengine/opengl/util/GLState;->glTexImage2D()V",
        "Lorg/andengine/opengl/util/GLState;->generateTexture()I",
        "Lorg/andengine/opengl/util/GLState;->popProjectionGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->getActiveFramebuffer()I",
        "Lorg/andengine/opengl/util/GLState;->pushProjectionGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->bindFramebuffer()V",
        "Lorg/andengine/opengl/util/GLState;->reset()V",
        "Lorg/andengine/opengl/util/GLState;->glPushScissor()V",
        "Lorg/andengine/opengl/util/GLState;->rotateProjectionGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->enableDepthTest()Z",
        "Lorg/andengine/opengl/util/GLState;->bindArrayBuffer()V",
        "Lorg/andengine/opengl/util/GLState;->translateModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->activeTexture()V",
        "Lorg/andengine/opengl/util/GLState;->enableScissorTest()Z",
        "Lorg/andengine/opengl/util/GLState;->blendFunction()V",
        "Lorg/andengine/opengl/util/GLState;->checkError()V",
        "Lorg/andengine/opengl/util/GLState;->getInteger()I",
        "Lorg/andengine/opengl/util/GLState;->getRenderer()Ljava/lang/String;",
        "Lorg/andengine/opengl/util/GLState;->scaleModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->enableCulling()Z",
        "Lorg/andengine/opengl/util/GLState;->finish()V",
        "Lorg/andengine/opengl/util/GLState;->pushModelViewGLMatrix()V",
        "Lorg/andengine/opengl/util/GLState;->checkFramebufferStatus()V",
        "Lorg/andengine/opengl/util/GLState;->loadProjectionGLMatrixIdentity()V",
        "Lorg/andengine/opengl/util/GLState;->getExtensions()Ljava/lang/String;",
        "Lorg/andengine/opengl/util/GLState;->skewModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->getVersion()Ljava/lang/String;",
        "Lorg/andengine/opengl/util/GLState;->deleteProgram()V",
        "Lorg/andengine/opengl/util/GLState;->useProgram()V",
        "Lorg/andengine/opengl/util/GLState;->setScissorTestEnabled()Z",
        "Lorg/andengine/opengl/util/GLState;->glPopScissor()V",
        "Lorg/andengine/opengl/util/GLState;->bindTexture()V",
        "Lorg/andengine/opengl/util/GLState;->disableDepthTest()Z",
        "Lorg/andengine/opengl/util/GLState;->enableBlend()Z",
        "Lorg/andengine/opengl/util/GLState;->getFramebufferStatus()I",
        "Lorg/andengine/opengl/util/GLState;->disableBlend()Z",
        "Lorg/andengine/opengl/util/GLState;->translateProjectionGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->rotateModelViewGLMatrixf()V",
        "Lorg/andengine/opengl/util/GLState;->disableCulling()Z",
        "Lorg/andengine/opengl/util/GLState;->setDitherEnabled()Z",
        "Lorg/andengine/opengl/util/GLState;->enableDither()Z",
        "Lorg/andengine/opengl/util/GLState;->generateFramebuffer()I",
        "Lorg/andengine/opengl/util/GLState;->lineWidth()V",
        "Lorg/andengine/opengl/util/GLState;->bindIndexBuffer()V",
        "Lorg/andengine/opengl/util/GLState;->deleteArrayBuffer()V",
        "Lorg/andengine/opengl/util/GLState;->generateBuffer()I",
        "Lorg/andengine/opengl/util/GLState;->flush()V"
    ],
    "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;": [
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onReload()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onCreate()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onUnloadVertexBufferObject()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onVertexBufferObjectLoaded()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->onDestroy()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObjectManager;->updateVertexBufferObjects()V"
    ],
    "Lorg/andengine/opengl/shader/ShaderProgram;": [
        "Lorg/andengine/opengl/shader/ShaderProgram;->bind()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->getUniformLocationOptional()I",
        "Lorg/andengine/opengl/shader/ShaderProgram;->compile()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->setCompiled()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/ShaderProgram;->unbind()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->compileShader()I",
        "Lorg/andengine/opengl/shader/ShaderProgram;->link()V",
        "Lorg/andengine/opengl/shader/ShaderProgram;->isCompiled()Z"
    ],
    "Lorg/andengine/opengl/vbo/VertexBufferObject;": [
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->bind()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->dispose()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->onBufferData()V",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->getByteCapacity()I",
        "Lorg/andengine/opengl/vbo/VertexBufferObject;->loadToHardware()V"
    ],
    "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttribute;": [
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttribute;->glVertexAttribPointer()V"
    ],
    "Lorg/andengine/opengl/texture/TextureManager;": [
        "Lorg/andengine/opengl/texture/TextureManager;->onReload()V",
        "Lorg/andengine/opengl/texture/TextureManager;->updateTextures()V",
        "Lorg/andengine/opengl/texture/TextureManager;->unloadTexture()Z",
        "Lorg/andengine/opengl/texture/TextureManager;->getMappedTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/texture/TextureManager;->onCreate()V",
        "Lorg/andengine/opengl/texture/TextureManager;->onDestroy()V",
        "Lorg/andengine/opengl/texture/TextureManager;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/texture/TextureManager;->loadTexture()Z",
        "Lorg/andengine/opengl/texture/TextureManager;->hasMappedTexture()Z",
        "Lorg/andengine/opengl/texture/TextureManager;->addMappedTexture()V"
    ],
    "Lorg/andengine/opengl/texture/ITexture;": [
        "Lorg/andengine/opengl/texture/ITexture;->getWidth()I",
        "Lorg/andengine/opengl/texture/ITexture;->reloadToHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/texture/ITexture;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->load()V",
        "Lorg/andengine/opengl/texture/ITexture;->loadToHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/ITexture;->unload()V",
        "Lorg/andengine/opengl/texture/ITexture;->isUpdateOnHardwareNeeded()Z",
        "Lorg/andengine/opengl/texture/ITexture;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/ITexture;->getTextureOptions()Lorg/andengine/opengl/texture/TextureOptions;",
        "Lorg/andengine/opengl/texture/ITexture;->getHeight()I",
        "Lorg/andengine/opengl/texture/ITexture;->bind()V",
        "Lorg/andengine/opengl/texture/ITexture;->getTextureMemorySize()I"
    ],
    "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;": [
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->bind()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->warmup()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->getByteCapacity()I",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->draw()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->unbind()V",
        "Lorg/andengine/opengl/texture/TextureWarmUpVertexBufferObject;->dispose()V"
    ],
    "Lorg/andengine/opengl/texture/PixelFormat;": [
        "Lorg/andengine/opengl/texture/PixelFormat;->getGLInternalFormat()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->getGLFormat()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->ordinal()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->getGLType()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->valueOf()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/PixelFormat;->getBitsPerPixel()I",
        "Lorg/andengine/opengl/texture/PixelFormat;->values()[Lorg/andengine/opengl/texture/PixelFormat;"
    ],
    "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;": [
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;->add()Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;",
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributesBuilder;->build()Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributes;"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesShaderProgram;"
    ],
    "Lorg/andengine/opengl/texture/Texture;": [
        "Lorg/andengine/opengl/texture/Texture;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/Texture;->loadToHardware()V",
        "Lorg/andengine/opengl/texture/Texture;->getTextureStateListener()Lorg/andengine/opengl/texture/ITextureStateListener;",
        "Lorg/andengine/opengl/texture/Texture;->getHeight()I",
        "Lorg/andengine/opengl/texture/Texture;->getWidth()I",
        "Lorg/andengine/opengl/texture/Texture;->writeTextureToHardware()V",
        "Lorg/andengine/opengl/texture/Texture;->setTextureStateListener()V",
        "Lorg/andengine/opengl/texture/Texture;->hasTextureStateListener()Z"
    ],
    "Lorg/andengine/opengl/texture/TextureOptions;": [
        "Lorg/andengine/opengl/texture/TextureOptions;->apply()V"
    ],
    "Lorg/andengine/opengl/texture/ITextureStateListener;": [
        "Lorg/andengine/opengl/texture/ITextureStateListener;->onUnloadedFromHardware()V",
        "Lorg/andengine/opengl/texture/ITextureStateListener;->onLoadedToHardware()V"
    ],
    "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture;": [
        "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture;->getInputStream()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture$ETC1TextureHeader;": [
        "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture$ETC1TextureHeader;->getWidth()I",
        "Lorg/andengine/opengl/texture/compressed/etc1/ETC1Texture$ETC1TextureHeader;->getHeight()I"
    ],
    "Landroid/opengl/ETC1Util;": [
        "Landroid/opengl/ETC1Util;->loadTexture()V"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRGZTexture;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRGZTexture;->getInputStream()Ljava/util/zip/GZIPInputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRGZTexture;->onGetInputStream()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;->isCompressed()Z",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;->fromPixelFormat()Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->getHeight()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->getWidth()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->hasMipMaps()Z",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->getInputStream()Ljava/io/InputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture;->onGetInputStream()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getPVRTextureFormat()Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureFormat;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getHeight()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getNumMipmaps()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getDataLength()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getBitsPerPixel()I",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRTexture$PVRTextureHeader;->getWidth()I"
    ],
    "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;": [
        "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;->ensureCapacity()V",
        "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;->grow()V",
        "Lorg/andengine/util/adt/io/out/ByteBufferOutputStream;->toByteBuffer()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy;->newPVRTexturePixelBufferStrategyManager()Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager;",
        "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy;->loadPVRTextureData()V"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture;->onGetInputStream()Ljava/io/InputStream;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture;->getInputStream()Ljava/util/zip/InflaterInputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZHeader;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZHeader;->getCCZCompressionFormat()Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZCompressionFormat;",
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZHeader;->getUncompressedSize()I"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZCompressionFormat;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/PVRCCZTexture$CCZCompressionFormat;->wrap()Ljava/util/zip/InflaterInputStream;"
    ],
    "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager;": [
        "Lorg/andengine/opengl/texture/compressed/pvr/pixelbufferstrategy/IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager;->getPixelBuffer()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->setTextureX()V",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->setTextureY()V",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureY()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureHeight()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureX()I",
        "Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;->getTextureWidth()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/TextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->addEmptyTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->addTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getTextureAtlasStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->checkTextureAtlasSourcePosition()V",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getWidth()I",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getTextureStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/TextureAtlas;->getHeight()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas;->getTextureStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas;->addTextureAtlasSource()V"
    ],
    "Lorg/andengine/opengl/texture/region/TiledTextureRegion;": [
        "Lorg/andengine/opengl/texture/region/TiledTextureRegion;->deepCopy()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/region/TiledTextureRegion;->create()Lorg/andengine/opengl/texture/region/TiledTextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;": [
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->addTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->clearTextureAtlasSources()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->addEmptyTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->unload()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->hasTextureAtlasStateListener()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->loadToHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->load()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->hasTextureStateListener()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->reloadToHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getWidth()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->isLoadedToHardware()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureMemorySize()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setUpdateOnHardwareNeeded()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getHeight()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->removeTextureAtlasSource()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureOptions()Lorg/andengine/opengl/texture/TextureOptions;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setTextureStateListener()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->isUpdateOnHardwareNeeded()Z",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setNotLoadedToHardware()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getHardwareTextureID()I",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->setTextureAtlasStateListener()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->getTextureAtlasStateListener()Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas;->bind()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/builder/ITextureAtlasBuilder;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/ITextureAtlasBuilder;->build()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;->getTextureAtlasSource()Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;->access$0()Lorg/andengine/opengl/texture/atlas/source/ITextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback;->getCallback()Lorg/andengine/util/call/Callback;"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;->insert()Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;",
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Node;->access$0()Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;->access$0()I",
        "Lorg/andengine/opengl/texture/atlas/buildable/builder/BlackPawnTextureAtlasBuilder$Rect;->access$1()I"
    ],
    "Lorg/andengine/util/call/Callback;": [
        "Lorg/andengine/util/call/Callback;->onCallback()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/source/BaseTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/source/BaseTextureAtlasSource;->getTextureHeight()I",
        "Lorg/andengine/opengl/texture/atlas/source/BaseTextureAtlasSource;->getTextureWidth()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;->create()Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/AssetBitmapTextureAtlasSource;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;->create()Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ResourceBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/opengl/texture/region/TextureRegionFactory;": [
        "Lorg/andengine/opengl/texture/region/TextureRegionFactory;->createFromSource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/region/TextureRegionFactory;->createTiledFromSource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;",
        "Lorg/andengine/opengl/texture/region/TextureRegionFactory;->extractFromTexture()Lorg/andengine/opengl/texture/region/TextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlasTextureRegionFactory;": [
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlasTextureRegionFactory;->createFromSource()Lorg/andengine/opengl/texture/region/TextureRegion;",
        "Lorg/andengine/opengl/texture/atlas/buildable/BuildableTextureAtlasTextureRegionFactory;->createTiledFromSource()Lorg/andengine/opengl/texture/region/TiledTextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;": [
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->$SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat()[I",
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->getPixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->getBitmapConfig()Landroid/graphics/Bitmap$Config;",
        "Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;->fromPixelFormat()Lorg/andengine/opengl/texture/bitmap/BitmapTextureFormat;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureHeight()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureY()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureWidth()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/IBitmapTextureAtlasSource;->getTextureX()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;": [
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;->onTextureAtlasSourceLoaded()V",
        "Lorg/andengine/opengl/texture/atlas/ITextureAtlas$ITextureAtlasStateListener;->onTextureAtlasSourceLoadExeption()V"
    ],
    "Landroid/opengl/GLUtils;": [
        "Landroid/opengl/GLUtils;->texImage2D()V",
        "Landroid/opengl/GLUtils;->texSubImage2D()V"
    ],
    "Lorg/andengine/util/BitmapUtils;": [
        "Lorg/andengine/util/BitmapUtils;->ensureBitmapIsMutable()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/BaseBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/BaseBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/BaseBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/BaseBitmapTextureAtlasSource;"
    ],
    "Landroid/graphics/Picture;": [
        "Landroid/graphics/Picture;->getWidth()I",
        "Landroid/graphics/Picture;->getHeight()I",
        "Landroid/graphics/Picture;->draw()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/PictureBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/PictureBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/PictureBitmapTextureAtlasSource;"
    ],
    "Landroid/graphics/Bitmap$Config;": [
        "Landroid/graphics/Bitmap$Config;->values()[Landroid/graphics/Bitmap$Config;",
        "Landroid/graphics/Bitmap$Config;->ordinal()I"
    ],
    "Lorg/andengine/util/adt/color/Color;": [
        "Lorg/andengine/util/adt/color/Color;->getARGBPackedInt()I",
        "Lorg/andengine/util/adt/color/Color;->packABGRGreen()V",
        "Lorg/andengine/util/adt/color/Color;->packABGRAlpha()V",
        "Lorg/andengine/util/adt/color/Color;->packABGR()V",
        "Lorg/andengine/util/adt/color/Color;->getABGRPackedFloat()F",
        "Lorg/andengine/util/adt/color/Color;->reset()V",
        "Lorg/andengine/util/adt/color/Color;->setBlueChecking()Z",
        "Lorg/andengine/util/adt/color/Color;->setChecking()Z",
        "Lorg/andengine/util/adt/color/Color;->setRedChecking()Z",
        "Lorg/andengine/util/adt/color/Color;->set()V",
        "Lorg/andengine/util/adt/color/Color;->getABGRPackedInt()I",
        "Lorg/andengine/util/adt/color/Color;->packABGRBlue()V",
        "Lorg/andengine/util/adt/color/Color;->packABGRRed()V",
        "Lorg/andengine/util/adt/color/Color;->setAlphaChecking()Z",
        "Lorg/andengine/util/adt/color/Color;->setGreenChecking()Z",
        "Lorg/andengine/util/adt/color/Color;->getAlpha()F",
        "Lorg/andengine/util/adt/color/Color;->getRed()F",
        "Lorg/andengine/util/adt/color/Color;->getGreen()F",
        "Lorg/andengine/util/adt/color/Color;->equals()Z",
        "Lorg/andengine/util/adt/color/Color;->getBlue()F"
    ],
    "Lorg/andengine/opengl/util/GLHelper;": [
        "Lorg/andengine/opengl/util/GLHelper;->getPixels()Ljava/nio/Buffer;",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toRGBA_8888()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertRGBA_8888toARGB_8888_FlippedVertical()[I",
        "Lorg/andengine/opengl/util/GLHelper;->$SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toRGB_565()[S",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toA_8()[B",
        "Lorg/andengine/opengl/util/GLHelper;->getPixelsARGB_8888()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertRGBA_8888toARGB_8888()[I",
        "Lorg/andengine/opengl/util/GLHelper;->convertARGB_8888toRGBA_4444()[S"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorSwapBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorSwapBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorSwapBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorSwapBitmapTextureAtlasSource;->swapColorARGB_8888()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorSwapBitmapTextureAtlasSource;->swapColor()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorSwapBitmapTextureAtlasSource;->$SWITCH_TABLE$android$graphics$Bitmap$Config()[I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;->create()Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/FileBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/util/FileUtils;": [
        "Lorg/andengine/util/FileUtils;->copyToInternalStorage()V",
        "Lorg/andengine/util/FileUtils;->delete()Z",
        "Lorg/andengine/util/FileUtils;->isExternalStorageReadable()Z",
        "Lorg/andengine/util/FileUtils;->getAbsolutePathOnInternalStorage()Ljava/lang/String;",
        "Lorg/andengine/util/FileUtils;->isExternalStorageWriteable()Z",
        "Lorg/andengine/util/FileUtils;->getAbsolutePathOnExternalStorage()Ljava/lang/String;",
        "Lorg/andengine/util/FileUtils;->isDirectoryExistingOnExternalStorage()Z",
        "Lorg/andengine/util/FileUtils;->copyToExternalStorage()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorKeyBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorKeyBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/ColorKeyBitmapTextureAtlasSource;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/EmptyBitmapTextureAtlasSource;->onLoadBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/OutlineBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/OutlineBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/OutlineBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;->values()[Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection;->ordinal()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/RadialGradientFillBitmapTextureAtlasSourceDecorator;->$SWITCH_TABLE$org$andengine$opengl$texture$atlas$bitmap$source$decorator$RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection()[I"
    ],
    "Lorg/andengine/util/adt/array/ArrayUtils;": [
        "Lorg/andengine/util/adt/array/ArrayUtils;->sum()F",
        "Lorg/andengine/util/adt/array/ArrayUtils;->sumCummulative()V",
        "Lorg/andengine/util/adt/array/ArrayUtils;->reverse()V",
        "Lorg/andengine/util/adt/array/ArrayUtils;->contains()Z",
        "Lorg/andengine/util/adt/array/ArrayUtils;->multiply()V",
        "Lorg/andengine/util/adt/array/ArrayUtils;->newArray()[Ljava/lang/Object;",
        "Lorg/andengine/util/adt/array/ArrayUtils;->idealByteArraySize()I",
        "Lorg/andengine/util/adt/array/ArrayUtils;->idealIntArraySize()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseShapeBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseShapeBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseShapeBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/shape/IBitmapTextureAtlasSourceDecoratorShape;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/shape/IBitmapTextureAtlasSourceDecoratorShape;->onDecorateBitmap()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetTop()F",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetBottom()F",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getAntiAliasing()Z",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetLeft()F",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions;->getInsetRight()F"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;->onLoadBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/BaseBitmapTextureAtlasSourceDecorator;->onDecorateBitmap()V"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/FillBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/FillBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/FillBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorKeyBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorKeyBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorKeyBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getFromY()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getToX()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getToY()I",
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection;->getFromX()I"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/LinearGradientFillBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorSwapBitmapTextureAtlasSourceDecorator;": [
        "Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorSwapBitmapTextureAtlasSourceDecorator;->deepCopy()Lorg/andengine/opengl/texture/atlas/bitmap/source/decorator/ColorSwapBitmapTextureAtlasSourceDecorator;"
    ],
    "Lorg/andengine/opengl/texture/region/ITextureRegion;": [
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getU()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getV2()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureY()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getScale()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureHeight()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureWidth()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getU2()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getTextureY()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->isRotated()Z",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->set()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTexturePosition()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getV()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureSize()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getWidth()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getHeight()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->setTextureX()V",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->isScaled()Z",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->getTextureX()F",
        "Lorg/andengine/opengl/texture/region/ITextureRegion;->deepCopy()Lorg/andengine/opengl/texture/region/ITextureRegion;"
    ],
    "Lorg/andengine/opengl/texture/region/TextureRegionLibrary;": [
        "Lorg/andengine/opengl/texture/region/TextureRegionLibrary;->get()Lorg/andengine/opengl/texture/region/TextureRegion;"
    ],
    "Lorg/andengine/util/adt/map/Library;": [
        "Lorg/andengine/util/adt/map/Library;->get()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/io/in/IInputStreamOpener;": [
        "Lorg/andengine/util/adt/io/in/IInputStreamOpener;->open()Ljava/io/InputStream;"
    ],
    "Lorg/andengine/opengl/texture/bitmap/BitmapTexture;": [
        "Lorg/andengine/opengl/texture/bitmap/BitmapTexture;->onGetBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lorg/andengine/opengl/texture/render/RenderTexture;": [
        "Lorg/andengine/opengl/texture/render/RenderTexture;->destroy()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->end()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->finish()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->begin()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->resotorePreviousViewport()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->savePreviousFramebufferObjectID()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->getPixelsARGB_8888()[I",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->loadToHardware()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->restorePreviousFramebufferObjectID()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->getBitmap()Landroid/graphics/Bitmap;",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->unloadFromHardware()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->flush()V",
        "Lorg/andengine/opengl/texture/render/RenderTexture;->savePreviousViewport()V"
    ],
    "Ljava/nio/IntBuffer;": [
        "Ljava/nio/IntBuffer;->wrap()Ljava/nio/IntBuffer;",
        "Ljava/nio/IntBuffer;->position()Ljava/nio/Buffer;"
    ],
    "Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy;": [
        "Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy;->onMeasure()V"
    ],
    "Lorg/andengine/engine/options/RenderOptions;": [
        "Lorg/andengine/engine/options/RenderOptions;->isDithering()Z",
        "Lorg/andengine/engine/options/RenderOptions;->getConfigChooserOptions()Lorg/andengine/engine/options/ConfigChooserOptions;"
    ],
    "Lorg/andengine/engine/options/ConfigChooserOptions;": [
        "Lorg/andengine/engine/options/ConfigChooserOptions;->isRequestedMultiSampling()Z",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->getRequestedRedSize()I",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->getRequestedAlphaSize()I",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->getRequestedDepthSize()I",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->getRequestedBlueSize()I",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->isRequestedRGB565()Z",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->getRequestedGreenSize()I",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->getRequestedStencilSize()I",
        "Lorg/andengine/engine/options/ConfigChooserOptions;->isRequestedRGBA8888()Z"
    ],
    "Landroid/view/SurfaceHolder;": [
        "Landroid/view/SurfaceHolder;->setFormat()V"
    ],
    "Lorg/andengine/opengl/view/IRendererListener;": [
        "Lorg/andengine/opengl/view/IRendererListener;->onSurfaceChanged()V",
        "Lorg/andengine/opengl/view/IRendererListener;->onSurfaceCreated()V"
    ],
    "Lorg/andengine/opengl/view/ConfigChooserMatcher;": [
        "Lorg/andengine/opengl/view/ConfigChooserMatcher;->matches()Z"
    ],
    "Lorg/andengine/opengl/exception/GLException;": [
        "Lorg/andengine/opengl/exception/GLException;->getErrorString()Ljava/lang/String;"
    ],
    "Landroid/opengl/GLU;": [
        "Landroid/opengl/GLU;->gluErrorString()Ljava/lang/String;"
    ],
    "Ljava/nio/ShortBuffer;": [
        "Ljava/nio/ShortBuffer;->wrap()Ljava/nio/ShortBuffer;"
    ],
    "Lorg/andengine/opengl/util/GLMatrixStack;": [
        "Lorg/andengine/opengl/util/GLMatrixStack;->glSkewf()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glScalef()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glRotatef()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glTranslatef()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->reset()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glPushMatrix()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glPopMatrix()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glLoadIdentity()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->getMatrix()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->setSkewM()V",
        "Lorg/andengine/opengl/util/GLMatrixStack;->glOrthof()V"
    ],
    "Landroid/opengl/Matrix;": [
        "Landroid/opengl/Matrix;->multiplyMM()V",
        "Landroid/opengl/Matrix;->setRotateM()V",
        "Landroid/opengl/Matrix;->orthoM()V",
        "Landroid/opengl/Matrix;->scaleM()V",
        "Landroid/opengl/Matrix;->setIdentityM()V",
        "Landroid/opengl/Matrix;->translateM()V"
    ],
    "Lorg/andengine/opengl/util/GLScissorStack;": [
        "Lorg/andengine/opengl/util/GLScissorStack;->reset()V",
        "Lorg/andengine/opengl/util/GLScissorStack;->glPushScissor()V",
        "Lorg/andengine/opengl/util/GLScissorStack;->glPopScissor()V"
    ],
    "Lorg/andengine/opengl/util/criteria/IGLCriteria;": [
        "Lorg/andengine/opengl/util/criteria/IGLCriteria;->isMet()Z"
    ],
    "Lorg/andengine/opengl/util/criteria/StringGLCriteria;": [
        "Lorg/andengine/opengl/util/criteria/StringGLCriteria;->getActualCriteria()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/adt/data/operator/StringOperator;": [
        "Lorg/andengine/util/adt/data/operator/StringOperator;->check()Z"
    ],
    "Lorg/andengine/opengl/util/criteria/IntGLCriteria;": [
        "Lorg/andengine/opengl/util/criteria/IntGLCriteria;->getActualCriteria()I"
    ],
    "Lorg/andengine/util/adt/data/operator/IntOperator;": [
        "Lorg/andengine/util/adt/data/operator/IntOperator;->check()Z"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesUniformColorShaderProgram;"
    ],
    "Lorg/andengine/opengl/shader/ShaderProgramManager;": [
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->onReload()V",
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->onDestroy()V",
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->onCreate()V",
        "Lorg/andengine/opengl/shader/ShaderProgramManager;->loadShaderProgram()V"
    ],
    "Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionColorTextureCoordinatesShaderProgram;"
    ],
    "Lorg/andengine/opengl/shader/PositionColorShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionColorShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionColorShaderProgram;",
        "Lorg/andengine/opengl/shader/PositionColorShaderProgram;->getUniformLocation()I"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;->getUniformLocation()I",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesTextureSelectShaderProgram;"
    ],
    "Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;": [
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;->getInstance()Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;",
        "Lorg/andengine/opengl/shader/PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram;->getUniformLocation()I"
    ],
    "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributes;": [
        "Lorg/andengine/opengl/vbo/attribute/VertexBufferObjectAttributes;->glVertexAttribPointers()V"
    ],
    "Lorg/andengine/opengl/shader/source/IShaderSource;": [
        "Lorg/andengine/opengl/shader/source/IShaderSource;->getShaderSource()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/shader/source/CriteriaShaderSource$CriteriaShaderSourceEntry;": [
        "Lorg/andengine/opengl/shader/source/CriteriaShaderSource$CriteriaShaderSourceEntry;->isMet()Z",
        "Lorg/andengine/opengl/shader/source/CriteriaShaderSource$CriteriaShaderSourceEntry;->getShaderSource()Ljava/lang/String;"
    ],
    "Lorg/andengine/opengl/font/FontManager;": [
        "Lorg/andengine/opengl/font/FontManager;->onCreate()V",
        "Lorg/andengine/opengl/font/FontManager;->unloadFont()V",
        "Lorg/andengine/opengl/font/FontManager;->onDestroy()V",
        "Lorg/andengine/opengl/font/FontManager;->loadFont()V",
        "Lorg/andengine/opengl/font/FontManager;->updateFonts()V",
        "Lorg/andengine/opengl/font/FontManager;->onReload()V"
    ],
    "Landroid/util/SparseIntArray;": [
        "Landroid/util/SparseIntArray;->valueAt()I",
        "Landroid/util/SparseIntArray;->get()I",
        "Landroid/util/SparseIntArray;->size()I",
        "Landroid/util/SparseIntArray;->put()V",
        "Landroid/util/SparseIntArray;->keyAt()I"
    ],
    "Lorg/andengine/entity/text/AutoWrap;": [
        "Lorg/andengine/entity/text/AutoWrap;->ordinal()I",
        "Lorg/andengine/entity/text/AutoWrap;->values()[Lorg/andengine/entity/text/AutoWrap;"
    ],
    "Lorg/andengine/opengl/font/IFont;": [
        "Lorg/andengine/opengl/font/IFont;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/opengl/font/IFont;->getAscent()F",
        "Lorg/andengine/opengl/font/IFont;->getLetter()Lorg/andengine/opengl/font/Letter;",
        "Lorg/andengine/opengl/font/IFont;->getLineHeight()F"
    ],
    "Lorg/andengine/opengl/font/FontUtils;": [
        "Lorg/andengine/opengl/font/FontUtils;->splitLinesByLetters()Ljava/util/List;",
        "Lorg/andengine/opengl/font/FontUtils;->$SWITCH_TABLE$org$andengine$entity$text$AutoWrap()[I",
        "Lorg/andengine/opengl/font/FontUtils;->splitLinesByCJK()Ljava/util/List;",
        "Lorg/andengine/opengl/font/FontUtils;->getAdvanceCorrection()F",
        "Lorg/andengine/opengl/font/FontUtils;->splitLines()Ljava/util/List;",
        "Lorg/andengine/opengl/font/FontUtils;->measureText()F",
        "Lorg/andengine/opengl/font/FontUtils;->splitLinesByWords()Ljava/util/List;"
    ],
    "Lorg/andengine/opengl/font/Letter;": [
        "Lorg/andengine/opengl/font/Letter;->getKerning()I",
        "Lorg/andengine/opengl/font/Letter;->addKerning()V",
        "Lorg/andengine/opengl/font/Letter;->isWhitespace()Z"
    ],
    "Lorg/andengine/util/TextUtils;": [
        "Lorg/andengine/util/TextUtils;->isEmpty()Z",
        "Lorg/andengine/util/TextUtils;->countOccurrences()I",
        "Lorg/andengine/util/TextUtils;->countCharacters()I",
        "Lorg/andengine/util/TextUtils;->padFront()Ljava/lang/CharSequence;",
        "Lorg/andengine/util/TextUtils;->split()Ljava/util/List;"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->height()I",
        "Landroid/graphics/Rect;->intersect()Z",
        "Landroid/graphics/Rect;->union()V",
        "Landroid/graphics/Rect;->offset()V",
        "Landroid/graphics/Rect;->inset()V",
        "Landroid/graphics/Rect;->set()V",
        "Landroid/graphics/Rect;->isEmpty()Z",
        "Landroid/graphics/Rect;->width()I"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->create()Landroid/graphics/Typeface;",
        "Landroid/graphics/Typeface;->createFromAsset()Landroid/graphics/Typeface;"
    ],
    "Lorg/andengine/opengl/font/BitmapFont;": [
        "Lorg/andengine/opengl/font/BitmapFont;->parseKernings()V",
        "Lorg/andengine/opengl/font/BitmapFont;->getIntAttribute()I",
        "Lorg/andengine/opengl/font/BitmapFont;->unloadTextures()V",
        "Lorg/andengine/opengl/font/BitmapFont;->parseCharacters()V",
        "Lorg/andengine/opengl/font/BitmapFont;->getAttribute()Ljava/lang/String;",
        "Lorg/andengine/opengl/font/BitmapFont;->getStringAttribute()Ljava/lang/String;",
        "Lorg/andengine/opengl/font/BitmapFont;->getBooleanAttribute()Z",
        "Lorg/andengine/opengl/font/BitmapFont;->getCharAttribute()C",
        "Lorg/andengine/opengl/font/BitmapFont;->loadTextures()V"
    ],
    "Lorg/andengine/opengl/font/BitmapFont$BitmapFontOptions;": [
        "Lorg/andengine/opengl/font/BitmapFont$BitmapFontOptions;->access$1()I",
        "Lorg/andengine/opengl/font/BitmapFont$BitmapFontOptions;->access$0()I"
    ],
    "Lorg/andengine/opengl/font/BitmapFont$BitmapFontPage;": [
        "Lorg/andengine/opengl/font/BitmapFont$BitmapFontPage;->getTexture()Lorg/andengine/opengl/texture/ITexture;"
    ],
    "Lorg/andengine/util/adt/map/SparseArrayUtils;": [
        "Lorg/andengine/util/adt/map/SparseArrayUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/andengine/extension/physics/box2d/PhysicsConnectorManager;": [
        "Lorg/andengine/extension/physics/box2d/PhysicsConnectorManager;->clear()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsConnectorManager;->onUpdate()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsConnectorManager;->add()Z",
        "Lorg/andengine/extension/physics/box2d/PhysicsConnectorManager;->reset()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsConnectorManager;->remove()Z"
    ],
    "Lorg/andengine/engine/handler/runnable/RunnableHandler;": [
        "Lorg/andengine/engine/handler/runnable/RunnableHandler;->postRunnable()V",
        "Lorg/andengine/engine/handler/runnable/RunnableHandler;->reset()V",
        "Lorg/andengine/engine/handler/runnable/RunnableHandler;->onUpdate()V"
    ],
    "Lorg/andengine/entity/primitive/Line;": [
        "Lorg/andengine/entity/primitive/Line;->convertLocalCoordinatesToSceneCoordinates()[F",
        "Lorg/andengine/entity/primitive/Line;->getX1()F",
        "Lorg/andengine/entity/primitive/Line;->setOffsetCenter()V",
        "Lorg/andengine/entity/primitive/Line;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/Line;->getY2()F",
        "Lorg/andengine/entity/primitive/Line;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;",
        "Lorg/andengine/entity/primitive/Line;->getY1()F",
        "Lorg/andengine/entity/primitive/Line;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/Line;->setBlendingEnabled()V",
        "Lorg/andengine/entity/primitive/Line;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/primitive/Line;->getX2()F",
        "Lorg/andengine/entity/primitive/Line;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;"
    ],
    "Lorg/andengine/extension/physics/box2d/PhysicsConnector;": [
        "Lorg/andengine/extension/physics/box2d/PhysicsConnector;->reset()V",
        "Lorg/andengine/extension/physics/box2d/PhysicsConnector;->onUpdate()V"
    ],
    "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;": [
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->isEarTip()Z",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->areVerticesClockwise()Z",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->computeSpannedAreaSign()I",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->computePreviousIndex()I",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->isAnyVertexInTriangle()Z",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->isTriangleConvex()Z",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->removeCollinearNeighborEarsAfterRemovingEarTip()V",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->classifyVertices()[I",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->cutEarTip()V",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->computeNextIndex()I",
        "Lorg/andengine/extension/physics/box2d/util/triangulation/EarClippingTriangulator;->isCollinear()Z"
    ],
    "Lorg/andengine/extension/physics/box2d/util/Vector2Pool;": [
        "Lorg/andengine/extension/physics/box2d/util/Vector2Pool;->recycle()V",
        "Lorg/andengine/extension/physics/box2d/util/Vector2Pool;->obtain()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;": [
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->area2()F",
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->isBetween()Z",
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->isLess()Z",
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->getManhattanDistance()F",
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->isRightOf()Z",
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->isLonger()Z",
        "Lorg/andengine/extension/physics/box2d/util/hull/Vector2Util;->isConvex()Z"
    ],
    "Lorg/andengine/extension/physics/box2d/util/hull/JarvisMarch;": [
        "Lorg/andengine/extension/physics/box2d/util/hull/JarvisMarch;->jarvisMarch()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/JarvisMarch;->indexOfLowestVertex()I",
        "Lorg/andengine/extension/physics/box2d/util/hull/JarvisMarch;->swap()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/JarvisMarch;->indexOfRightmostVertexOf()I"
    ],
    "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;": [
        "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;->quickHull()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;->indexOfFurthestVertex()I",
        "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;->indexOfLowestVertex()I",
        "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;->computeHullVertices()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;->swap()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/QuickHull;->partition()I"
    ],
    "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;": [
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->sort()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->indexOfLowestVertex()I",
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->quicksort()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->grahamScan()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->swap()V",
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->isConvex()Z",
        "Lorg/andengine/extension/physics/box2d/util/hull/GrahamScan;->makeAllVerticesRelativeTo()V"
    ],
    "Lorg/andengine/engine/options/TouchOptions;": [
        "Lorg/andengine/engine/options/TouchOptions;->needsMultiTouch()Z",
        "Lorg/andengine/engine/options/TouchOptions;->getTouchEventIntervalMilliseconds()J"
    ],
    "Lorg/andengine/engine/options/SoundOptions;": [
        "Lorg/andengine/engine/options/SoundOptions;->getMaxSimultaneousStreams()I",
        "Lorg/andengine/engine/options/SoundOptions;->setNeedsSound()Lorg/andengine/engine/options/SoundOptions;",
        "Lorg/andengine/engine/options/SoundOptions;->needsSound()Z"
    ],
    "Lorg/andengine/engine/Engine$UpdateThread;": [
        "Lorg/andengine/engine/Engine$UpdateThread;->setEngine()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->start()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->join()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->postRunnable()V",
        "Lorg/andengine/engine/Engine$UpdateThread;->interrupt()V"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->registerListener()Z",
        "Landroid/hardware/SensorManager;->getOrientation()[F",
        "Landroid/hardware/SensorManager;->unregisterListener()V",
        "Landroid/hardware/SensorManager;->getRotationMatrix()Z",
        "Landroid/hardware/SensorManager;->getSensorList()Ljava/util/List;",
        "Landroid/hardware/SensorManager;->remapCoordinateSystem()Z"
    ],
    "Lorg/andengine/input/sensor/SensorDelay;": [
        "Lorg/andengine/input/sensor/SensorDelay;->getDelay()I"
    ],
    "Lorg/andengine/engine/handler/DrawHandlerList;": [
        "Lorg/andengine/engine/handler/DrawHandlerList;->onDraw()V",
        "Lorg/andengine/engine/handler/DrawHandlerList;->add()Z",
        "Lorg/andengine/engine/handler/DrawHandlerList;->clear()V",
        "Lorg/andengine/engine/handler/DrawHandlerList;->get()Ljava/lang/Object;",
        "Lorg/andengine/engine/handler/DrawHandlerList;->size()I",
        "Lorg/andengine/engine/handler/DrawHandlerList;->remove()Z"
    ],
    "Lorg/andengine/engine/handler/UpdateHandlerList;": [
        "Lorg/andengine/engine/handler/UpdateHandlerList;->size()I",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->clear()V",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->get()Ljava/lang/Object;",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->add()Z",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->removeAll()Z",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->remove()Z",
        "Lorg/andengine/engine/handler/UpdateHandlerList;->onUpdate()V"
    ],
    "Lorg/andengine/input/sensor/acceleration/AccelerationSensorOptions;": [
        "Lorg/andengine/input/sensor/acceleration/AccelerationSensorOptions;->getSensorDelay()Lorg/andengine/input/sensor/SensorDelay;"
    ],
    "Lorg/andengine/input/sensor/location/LocationSensorOptions;": [
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->getMinimumTriggerTime()J",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setSpeedRequired()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setBearingRequired()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setAltitudeRequired()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setAccuracy()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->isEnabledOnly()Z",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setCostAllowed()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->setPowerRequirement()V",
        "Lorg/andengine/input/sensor/location/LocationSensorOptions;->getMinimumTriggerDistance()J"
    ],
    "Lorg/andengine/input/sensor/orientation/OrientationSensorOptions;": [
        "Lorg/andengine/input/sensor/orientation/OrientationSensorOptions;->getSensorDelay()Lorg/andengine/input/sensor/SensorDelay;"
    ],
    "Landroid/hardware/Sensor;": [
        "Landroid/hardware/Sensor;->getType()I"
    ],
    "Lorg/andengine/input/sensor/acceleration/AccelerationData;": [
        "Lorg/andengine/input/sensor/acceleration/AccelerationData;->setDisplayRotation()V",
        "Lorg/andengine/input/sensor/acceleration/AccelerationData;->setAccuracy()V",
        "Lorg/andengine/input/sensor/acceleration/AccelerationData;->setValues()V"
    ],
    "Lorg/andengine/input/sensor/acceleration/IAccelerationListener;": [
        "Lorg/andengine/input/sensor/acceleration/IAccelerationListener;->onAccelerationChanged()V",
        "Lorg/andengine/input/sensor/acceleration/IAccelerationListener;->onAccelerationAccuracyChanged()V"
    ],
    "Lorg/andengine/input/sensor/orientation/OrientationData;": [
        "Lorg/andengine/input/sensor/orientation/OrientationData;->updateOrientation()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setMagneticFieldValues()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setMagneticFieldAccuracy()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->getAccuracy()I",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setAccelerationValues()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setAccelerationAccuracy()V",
        "Lorg/andengine/input/sensor/orientation/OrientationData;->setDisplayRotation()V"
    ],
    "Lorg/andengine/input/sensor/orientation/IOrientationListener;": [
        "Lorg/andengine/input/sensor/orientation/IOrientationListener;->onOrientationChanged()V",
        "Lorg/andengine/input/sensor/orientation/IOrientationListener;->onOrientationAccuracyChanged()V"
    ],
    "Lorg/andengine/engine/Engine$EngineLock;": [
        "Lorg/andengine/engine/Engine$EngineLock;->notifyCanDraw()V",
        "Lorg/andengine/engine/Engine$EngineLock;->waitUntilCanUpdate()V",
        "Lorg/andengine/engine/Engine$EngineLock;->notifyCanUpdate()V",
        "Lorg/andengine/engine/Engine$EngineLock;->lock()V",
        "Lorg/andengine/engine/Engine$EngineLock;->waitUntilCanDraw()V",
        "Lorg/andengine/engine/Engine$EngineLock;->unlock()V"
    ],
    "Lorg/andengine/input/sensor/location/ILocationListener;": [
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationProviderDisabled()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationChanged()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationProviderStatusChanged()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationProviderEnabled()V",
        "Lorg/andengine/input/sensor/location/ILocationListener;->onLocationLost()V"
    ],
    "Lorg/andengine/input/touch/controller/ITouchController;": [
        "Lorg/andengine/input/touch/controller/ITouchController;->onHandleMotionEvent()V",
        "Lorg/andengine/input/touch/controller/ITouchController;->setTouchEventCallback()V",
        "Lorg/andengine/input/touch/controller/ITouchController;->onUpdate()V"
    ],
    "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;": [
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->setFirstScene()V",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getSecondCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getFirstScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getFirstCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/splitscreen/DoubleSceneSplitScreenEngine;->getSecondScene()Lorg/andengine/entity/scene/Scene;"
    ],
    "Lorg/andengine/engine/splitscreen/SingleSceneSplitScreenEngine;": [
        "Lorg/andengine/engine/splitscreen/SingleSceneSplitScreenEngine;->getSecondCamera()Lorg/andengine/engine/camera/Camera;",
        "Lorg/andengine/engine/splitscreen/SingleSceneSplitScreenEngine;->getFirstCamera()Lorg/andengine/engine/camera/Camera;"
    ],
    "Lorg/andengine/engine/handler/IDrawHandler;": [
        "Lorg/andengine/engine/handler/IDrawHandler;->onDraw()V"
    ],
    "Lorg/andengine/engine/handler/BaseEntityUpdateHandler;": [
        "Lorg/andengine/engine/handler/BaseEntityUpdateHandler;->onUpdate()V"
    ],
    "Lorg/andengine/engine/handler/IUpdateHandler;": [
        "Lorg/andengine/engine/handler/IUpdateHandler;->reset()V",
        "Lorg/andengine/engine/handler/IUpdateHandler;->onUpdate()V"
    ],
    "Lorg/andengine/util/adt/list/ListUtils;": [
        "Lorg/andengine/util/adt/list/ListUtils;->encodeInsertionIndex()I",
        "Lorg/andengine/util/adt/list/ListUtils;->toList()Ljava/util/ArrayList;",
        "Lorg/andengine/util/adt/list/ListUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/andengine/entity/shape/IShape;": [
        "Lorg/andengine/entity/shape/IShape;->setBlendFunction()V",
        "Lorg/andengine/entity/shape/IShape;->collidesWith()Z"
    ],
    "Lorg/andengine/engine/handler/collision/ICollisionCallback;": [
        "Lorg/andengine/engine/handler/collision/ICollisionCallback;->onCollision()Z"
    ],
    "Lorg/andengine/engine/handler/timer/ITimerCallback;": [
        "Lorg/andengine/engine/handler/timer/ITimerCallback;->onTimePassed()V"
    ],
    "Lorg/andengine/engine/options/MusicOptions;": [
        "Lorg/andengine/engine/options/MusicOptions;->setNeedsMusic()Lorg/andengine/engine/options/MusicOptions;",
        "Lorg/andengine/engine/options/MusicOptions;->needsMusic()Z"
    ],
    "Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy$Callback;": [
        "Lorg/andengine/engine/options/resolutionpolicy/IResolutionPolicy$Callback;->onResolutionChanged()V"
    ],
    "Lorg/andengine/engine/options/resolutionpolicy/BaseResolutionPolicy;": [
        "Lorg/andengine/engine/options/resolutionpolicy/BaseResolutionPolicy;->throwOnNotMeasureSpecEXACTLY()V"
    ],
    "Lorg/andengine/util/algorithm/collision/EntityCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/EntityCollisionChecker;->fillVertices()V",
        "Lorg/andengine/util/algorithm/collision/EntityCollisionChecker;->checkContains()Z",
        "Lorg/andengine/util/algorithm/collision/EntityCollisionChecker;->checkCollision()Z",
        "Lorg/andengine/util/algorithm/collision/EntityCollisionChecker;->isVisible()Z"
    ],
    "Lorg/andengine/engine/camera/CameraFactory;": [
        "Lorg/andengine/engine/camera/CameraFactory;->getDisplayMetrics()Landroid/util/DisplayMetrics;"
    ],
    "Lorg/andengine/engine/camera/ZoomCamera;": [
        "Lorg/andengine/engine/camera/ZoomCamera;->setCenter()V",
        "Lorg/andengine/engine/camera/ZoomCamera;->getCenterY()F",
        "Lorg/andengine/engine/camera/ZoomCamera;->ensureInBounds()V",
        "Lorg/andengine/engine/camera/ZoomCamera;->setZoomFactor()V",
        "Lorg/andengine/engine/camera/ZoomCamera;->getCenterX()F",
        "Lorg/andengine/engine/camera/ZoomCamera;->onUpdate()V"
    ],
    "Lorg/andengine/engine/camera/BoundCamera;": [
        "Lorg/andengine/engine/camera/BoundCamera;->unapplySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/BoundCamera;->getCenterY()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getHeight()F",
        "Lorg/andengine/engine/camera/BoundCamera;->setBounds()V",
        "Lorg/andengine/engine/camera/BoundCamera;->getXMin()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getYMin()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getBoundedX()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getYMax()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getXMax()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getCenterX()F",
        "Lorg/andengine/engine/camera/BoundCamera;->getWidth()F",
        "Lorg/andengine/engine/camera/BoundCamera;->ensureInBounds()V",
        "Lorg/andengine/engine/camera/BoundCamera;->applySceneToCameraSceneOffset()V",
        "Lorg/andengine/engine/camera/BoundCamera;->getBoundedY()F"
    ],
    "Lorg/andengine/engine/camera/SmoothCamera;": [
        "Lorg/andengine/engine/camera/SmoothCamera;->onSmoothZoomStarted()V",
        "Lorg/andengine/engine/camera/SmoothCamera;->getCenterY()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->getZoomFactor()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->limitToMaxVelocityX()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->limitToMaxVelocityY()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->limitToMaxZoomFactorChange()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->getCenterX()F",
        "Lorg/andengine/engine/camera/SmoothCamera;->onSmoothZoomFinished()V"
    ],
    "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;": [
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->setTouchAreaBindingOnActionDownEnabled()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onHandleControlBaseTouched()Z",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onUpdateControlKnob()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->getOnScreenControlListener()Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl$IOnScreenControlListener;",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onHandleControlBaseLeft()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->registerTouchArea()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->setCamera()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->updateControlKnob()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->setOnSceneTouchListener()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->onHandleControlKnobReleased()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->registerUpdateHandler()V",
        "Lorg/andengine/engine/camera/hud/controls/BaseOnScreenControl;->attachChild()V"
    ],
    "Lorg/andengine/engine/camera/hud/controls/DigitalOnScreenControl;": [
        "Lorg/andengine/engine/camera/hud/controls/DigitalOnScreenControl;->testDiagonalAngle()Z"
    ],
    "Lorg/andengine/input/touch/detector/ClickDetector;": [
        "Lorg/andengine/input/touch/detector/ClickDetector;->prepareClick()V",
        "Lorg/andengine/input/touch/detector/ClickDetector;->setEnabled()V",
        "Lorg/andengine/input/touch/detector/ClickDetector;->setTriggerClickMaximumMilliseconds()V",
        "Lorg/andengine/input/touch/detector/ClickDetector;->onSceneTouchEvent()Z"
    ],
    "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl;": [
        "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl;->getOnScreenControlListener()Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl$IAnalogOnScreenControlListener;"
    ],
    "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl$IAnalogOnScreenControlListener;": [
        "Lorg/andengine/engine/camera/hud/controls/AnalogOnScreenControl$IAnalogOnScreenControlListener;->onControlClick()V"
    ],
    "Lorg/andengine/entity/TagEntityMatcher;": [
        "Lorg/andengine/entity/TagEntityMatcher;->matches()Z"
    ],
    "Lorg/andengine/entity/ZIndexSorter;": [
        "Lorg/andengine/entity/ZIndexSorter;->getInstance()Lorg/andengine/entity/ZIndexSorter;",
        "Lorg/andengine/entity/ZIndexSorter;->sort()V"
    ],
    "Lorg/andengine/util/adt/list/SmartList;": [
        "Lorg/andengine/util/adt/list/SmartList;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/util/adt/list/SmartList;->size()I",
        "Lorg/andengine/util/adt/list/SmartList;->clear()V",
        "Lorg/andengine/util/adt/list/SmartList;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/list/SmartList;->removeAll()Z",
        "Lorg/andengine/util/adt/list/SmartList;->removeLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->call()V",
        "Lorg/andengine/util/adt/list/SmartList;->add()V",
        "Lorg/andengine/util/adt/list/SmartList;->add()Z",
        "Lorg/andengine/util/adt/list/SmartList;->getLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->remove()Z",
        "Lorg/andengine/util/adt/list/SmartList;->addLast()V",
        "Lorg/andengine/util/adt/list/SmartList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/SmartList;->isEmpty()Z"
    ],
    "Lorg/andengine/entity/modifier/EntityModifierList;": [
        "Lorg/andengine/entity/modifier/EntityModifierList;->clear()V",
        "Lorg/andengine/entity/modifier/EntityModifierList;->add()Z",
        "Lorg/andengine/entity/modifier/EntityModifierList;->onUpdate()V",
        "Lorg/andengine/entity/modifier/EntityModifierList;->remove()Z",
        "Lorg/andengine/entity/modifier/EntityModifierList;->size()I",
        "Lorg/andengine/entity/modifier/EntityModifierList;->reset()V",
        "Lorg/andengine/entity/modifier/EntityModifierList;->removeAll()Z"
    ],
    "Lorg/andengine/util/adt/transformation/Transformation;": [
        "Lorg/andengine/util/adt/transformation/Transformation;->postTranslate()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->transform()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postRotate()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postConcat()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postSkew()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->setToIdentity()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->setTo()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->preConcat()V",
        "Lorg/andengine/util/adt/transformation/Transformation;->postScale()V"
    ],
    "Lorg/andengine/util/call/ParameterCallable;": [
        "Lorg/andengine/util/call/ParameterCallable;->call()V"
    ],
    "Lorg/andengine/entity/IEntityMatcher;": [
        "Lorg/andengine/entity/IEntityMatcher;->matches()Z"
    ],
    "Lorg/andengine/util/adt/color/ColorUtils;": [
        "Lorg/andengine/util/adt/color/ColorUtils;->extractGreenFromARGBPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertHSVToARGBPackedInt()I",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractGreenFromABGRPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractRedFromABGRPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractAlphaFromABGRPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractBlueFromARGBPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractRedFromARGBPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertRGBAToABGRPackedInt()I",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertABGRPackedIntToColor()V",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractBlueFromABGRPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertARGBPackedIntToColor()V",
        "Lorg/andengine/util/adt/color/ColorUtils;->extractAlphaFromARGBPackedInt()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertARGBPackedIntToColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertRGBAToARGBPackedInt()I",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertPackedIntToPackedFloat()F",
        "Lorg/andengine/util/adt/color/ColorUtils;->convertRGBAToABGRPackedFloat()F"
    ],
    "Lorg/andengine/entity/util/FPSLogger;": [
        "Lorg/andengine/entity/util/FPSLogger;->onLogFPS()V"
    ],
    "Lorg/andengine/entity/util/AverageFPSCounter;": [
        "Lorg/andengine/entity/util/AverageFPSCounter;->onUpdate()V",
        "Lorg/andengine/entity/util/AverageFPSCounter;->reset()V",
        "Lorg/andengine/entity/util/AverageFPSCounter;->getFPS()F",
        "Lorg/andengine/entity/util/AverageFPSCounter;->onHandleAverageDurationElapsed()V"
    ],
    "Lorg/andengine/entity/util/TextureMemoryLogger;": [
        "Lorg/andengine/entity/util/TextureMemoryLogger;->onHandleAverageDurationElapsed()V"
    ],
    "Lorg/andengine/entity/util/MemoryLogger;": [
        "Lorg/andengine/entity/util/MemoryLogger;->onHandleLogDurationElapsed()V",
        "Lorg/andengine/entity/util/MemoryLogger;->formatRight()Ljava/lang/CharSequence;"
    ],
    "Lorg/andengine/entity/util/ScreenGrabber;": [
        "Lorg/andengine/entity/util/ScreenGrabber;->grab()Landroid/graphics/Bitmap;",
        "Lorg/andengine/entity/util/ScreenGrabber;->onManagedDraw()V",
        "Lorg/andengine/entity/util/ScreenGrabber;->grab()V"
    ],
    "Lorg/andengine/entity/util/ScreenCapture;": [
        "Lorg/andengine/entity/util/ScreenCapture;->capture()V",
        "Lorg/andengine/entity/util/ScreenCapture;->saveCapture()V"
    ],
    "Lorg/andengine/entity/util/ScreenCapture$IScreenCaptureCallback;": [
        "Lorg/andengine/entity/util/ScreenCapture$IScreenCaptureCallback;->onScreenCaptured()V",
        "Lorg/andengine/entity/util/ScreenCapture$IScreenCaptureCallback;->onScreenCaptureFailed()V"
    ],
    "Lorg/andengine/entity/util/ScreenGrabber$IScreenGrabberCallback;": [
        "Lorg/andengine/entity/util/ScreenGrabber$IScreenGrabberCallback;->onScreenGrabbed()V",
        "Lorg/andengine/entity/util/ScreenGrabber$IScreenGrabberCallback;->onScreenGrabFailed()V"
    ],
    "Lorg/andengine/entity/util/FPSCounter;": [
        "Lorg/andengine/entity/util/FPSCounter;->onUpdate()V"
    ],
    "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;": [
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/text/vbo/ITextVertexBufferObject;->draw()V"
    ],
    "Lorg/andengine/entity/text/TickerText;": [
        "Lorg/andengine/entity/text/TickerText;->getTextOptions()Lorg/andengine/entity/text/TickerText$TickerTextOptions;"
    ],
    "Lorg/andengine/entity/shape/Shape;": [
        "Lorg/andengine/entity/shape/Shape;->setColor()V",
        "Lorg/andengine/entity/shape/Shape;->getGreen()F",
        "Lorg/andengine/entity/shape/Shape;->setSize()V",
        "Lorg/andengine/entity/shape/Shape;->postDraw()V",
        "Lorg/andengine/entity/shape/Shape;->dispose()V",
        "Lorg/andengine/entity/shape/Shape;->setBlendFunction()V",
        "Lorg/andengine/entity/shape/Shape;->preDraw()V",
        "Lorg/andengine/entity/shape/Shape;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/shape/Shape;->getVertexBufferObject()Lorg/andengine/opengl/vbo/IVertexBufferObject;",
        "Lorg/andengine/entity/shape/Shape;->setX()V",
        "Lorg/andengine/entity/shape/Shape;->setGreen()V",
        "Lorg/andengine/entity/shape/Shape;->reset()V",
        "Lorg/andengine/entity/shape/Shape;->getX()F",
        "Lorg/andengine/entity/shape/Shape;->setPosition()V",
        "Lorg/andengine/entity/shape/Shape;->onUpdateVertices()V",
        "Lorg/andengine/entity/shape/Shape;->setY()V",
        "Lorg/andengine/entity/shape/Shape;->setRed()V",
        "Lorg/andengine/entity/shape/Shape;->setWidth()V",
        "Lorg/andengine/entity/shape/Shape;->collidesWith()Z",
        "Lorg/andengine/entity/shape/Shape;->setHeight()V",
        "Lorg/andengine/entity/shape/Shape;->getBlue()F",
        "Lorg/andengine/entity/shape/Shape;->getAlpha()F",
        "Lorg/andengine/entity/shape/Shape;->getRed()F",
        "Lorg/andengine/entity/shape/Shape;->getY()F",
        "Lorg/andengine/entity/shape/Shape;->setAlpha()V",
        "Lorg/andengine/entity/shape/Shape;->setBlue()V"
    ],
    "Lorg/andengine/util/adt/list/IFloatList;": [
        "Lorg/andengine/util/adt/list/IFloatList;->get()F",
        "Lorg/andengine/util/adt/list/IFloatList;->add()V",
        "Lorg/andengine/util/adt/list/IFloatList;->clear()V"
    ],
    "Lorg/andengine/util/adt/align/HorizontalAlign;": [
        "Lorg/andengine/util/adt/align/HorizontalAlign;->values()[Lorg/andengine/util/adt/align/HorizontalAlign;",
        "Lorg/andengine/util/adt/align/HorizontalAlign;->ordinal()I"
    ],
    "Lorg/andengine/entity/text/vbo/HighPerformanceTextVertexBufferObject;": [
        "Lorg/andengine/entity/text/vbo/HighPerformanceTextVertexBufferObject;->$SWITCH_TABLE$org$andengine$util$adt$align$HorizontalAlign()[I",
        "Lorg/andengine/entity/text/vbo/HighPerformanceTextVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/text/vbo/LowMemoryTextVertexBufferObject;": [
        "Lorg/andengine/entity/text/vbo/LowMemoryTextVertexBufferObject;->$SWITCH_TABLE$org$andengine$util$adt$align$HorizontalAlign()[I",
        "Lorg/andengine/entity/text/vbo/LowMemoryTextVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/clip/ClipEntity;": [
        "Lorg/andengine/entity/clip/ClipEntity;->convertLocalCoordinatesToSceneCoordinates()[F"
    ],
    "Lorg/andengine/entity/sprite/AnimationData;": [
        "Lorg/andengine/entity/sprite/AnimationData;->set()V",
        "Lorg/andengine/entity/sprite/AnimationData;->fillFrameDurations()[J"
    ],
    "Lorg/andengine/entity/sprite/IAnimationData;": [
        "Lorg/andengine/entity/sprite/IAnimationData;->getFirstFrameIndex()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getFrameDurations()[J",
        "Lorg/andengine/entity/sprite/IAnimationData;->calculateCurrentFrameIndex()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getLoopCount()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->set()V",
        "Lorg/andengine/entity/sprite/IAnimationData;->getFrameCount()I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getFrames()[I",
        "Lorg/andengine/entity/sprite/IAnimationData;->getAnimationDuration()J"
    ],
    "Lorg/andengine/entity/sprite/NineSliceSprite;": [
        "Lorg/andengine/entity/sprite/NineSliceSprite;->updateTextureRegions()V",
        "Lorg/andengine/entity/sprite/NineSliceSprite;->updateVertices()V",
        "Lorg/andengine/entity/sprite/NineSliceSprite;->attachChild()V"
    ],
    "Lorg/andengine/entity/sprite/batch/SpriteBatch;": [
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->assertTexture()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->reset()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->onDraw()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->end()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->dispose()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->setIndex()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->onSubmit()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->assertCapacity()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->addInner()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->getVertexBufferObject()Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->drawWithoutChecks()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->add()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->setBlendingEnabled()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->begin()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->submit()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->addWithPackedColor()V",
        "Lorg/andengine/entity/sprite/batch/SpriteBatch;->draw()V"
    ],
    "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;": [
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getTileCount()I",
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getWidth()F",
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getHeight()F",
        "Lorg/andengine/opengl/texture/region/ITiledTextureRegion;->getTextureRegion()Lorg/andengine/opengl/texture/region/ITextureRegion;"
    ],
    "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->onUpdateTextureCoordinates()V",
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;->onUpdateVertices()V"
    ],
    "Lorg/andengine/entity/sprite/TiledSprite;": [
        "Lorg/andengine/entity/sprite/TiledSprite;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/sprite/TiledSprite;->getTileCount()I",
        "Lorg/andengine/entity/sprite/TiledSprite;->contains()Z",
        "Lorg/andengine/entity/sprite/TiledSprite;->getTiledTextureRegion()Lorg/andengine/opengl/texture/region/ITiledTextureRegion;",
        "Lorg/andengine/entity/sprite/TiledSprite;->onManagedUpdate()V",
        "Lorg/andengine/entity/sprite/TiledSprite;->getWidth()F",
        "Lorg/andengine/entity/sprite/TiledSprite;->getHeight()F",
        "Lorg/andengine/entity/sprite/TiledSprite;->isFlippedHorizontal()Z",
        "Lorg/andengine/entity/sprite/TiledSprite;->getVertexBufferObject()Lorg/andengine/entity/sprite/vbo/ITiledSpriteVertexBufferObject;",
        "Lorg/andengine/entity/sprite/TiledSprite;->isFlippedVertical()Z"
    ],
    "Lorg/andengine/entity/sprite/ButtonSprite;": [
        "Lorg/andengine/entity/sprite/ButtonSprite;->setCurrentTileIndex()V",
        "Lorg/andengine/entity/sprite/ButtonSprite;->isEnabled()Z",
        "Lorg/andengine/entity/sprite/ButtonSprite;->changeState()V",
        "Lorg/andengine/entity/sprite/ButtonSprite;->isVisible()Z",
        "Lorg/andengine/entity/sprite/ButtonSprite;->contains()Z"
    ],
    "Lorg/andengine/entity/sprite/ButtonSprite$State;": [
        "Lorg/andengine/entity/sprite/ButtonSprite$State;->getTiledTextureRegionIndex()I",
        "Lorg/andengine/entity/sprite/ButtonSprite$State;->toString()Ljava/lang/String;"
    ],
    "Lorg/andengine/entity/sprite/ButtonSprite$OnClickListener;": [
        "Lorg/andengine/entity/sprite/ButtonSprite$OnClickListener;->onClick()V"
    ],
    "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;": [
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationLoopFinished()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationFrameChanged()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationFinished()V",
        "Lorg/andengine/entity/sprite/AnimatedSprite$IAnimationListener;->onAnimationStarted()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->onUpdateTextureCoordinates()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/sprite/vbo/ISpriteVertexBufferObject;->draw()V"
    ],
    "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->addWithPackedColor()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->isAutoDispose()Z",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->setDirtyOnHardware()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->isDisposed()Z",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->setBufferDataOffset()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/sprite/batch/vbo/ISpriteBatchVertexBufferObject;->dispose()V"
    ],
    "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;": [
        "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;->attachChild()V",
        "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;->onUpdateSpriteBatch()Z",
        "Lorg/andengine/entity/sprite/batch/DynamicSpriteBatch;->submit()V"
    ],
    "Lorg/andengine/entity/sprite/batch/SpriteGroup;": [
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->assertTexture()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->assertCapacity()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->getChildCount()I",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->attachChild()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->drawWithoutChecks()V",
        "Lorg/andengine/entity/sprite/batch/SpriteGroup;->setChildrenVisible()V"
    ],
    "Lorg/andengine/entity/sprite/batch/vbo/LowMemorySpriteBatchVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/batch/vbo/LowMemorySpriteBatchVertexBufferObject;->getFloatBuffer()Ljava/nio/FloatBuffer;"
    ],
    "Lorg/andengine/entity/sprite/batch/vbo/HighPerformanceSpriteBatchVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/batch/vbo/HighPerformanceSpriteBatchVertexBufferObject;->getBufferData()[F"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceDiamondSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceDiamondSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceUncoloredSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceUncoloredSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryUniformColorSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryUniformColorSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryDiamondSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryDiamondSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceUniformColorSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceUniformColorSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryUncoloredSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryUncoloredSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemoryTiledSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemoryTiledSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceTiledSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceTiledSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/LowMemorySpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/LowMemorySpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/sprite/vbo/HighPerformanceSpriteVertexBufferObject;": [
        "Lorg/andengine/entity/sprite/vbo/HighPerformanceSpriteVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/util/modifier/ease/EaseLinear;": [
        "Lorg/andengine/util/modifier/ease/EaseLinear;->getInstance()Lorg/andengine/util/modifier/ease/EaseLinear;"
    ],
    "Lorg/andengine/entity/modifier/SkewModifier;": [
        "Lorg/andengine/entity/modifier/SkewModifier;->deepCopy()Lorg/andengine/entity/modifier/SkewModifier;",
        "Lorg/andengine/entity/modifier/SkewModifier;->onSetValues()V",
        "Lorg/andengine/entity/modifier/SkewModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/entity/modifier/MoveByModifier;": [
        "Lorg/andengine/entity/modifier/MoveByModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveByModifier;",
        "Lorg/andengine/entity/modifier/MoveByModifier;->onChangeValues()V"
    ],
    "Lorg/andengine/entity/modifier/ScaleModifier;": [
        "Lorg/andengine/entity/modifier/ScaleModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/modifier/ScaleModifier;->deepCopy()Lorg/andengine/entity/modifier/ScaleModifier;",
        "Lorg/andengine/entity/modifier/ScaleModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/ScaleModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/modifier/MoveYModifier;": [
        "Lorg/andengine/entity/modifier/MoveYModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveYModifier;",
        "Lorg/andengine/entity/modifier/MoveYModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/MoveYModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/modifier/RotationAtModifier;": [
        "Lorg/andengine/entity/modifier/RotationAtModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/RotationAtModifier;->deepCopy()Lorg/andengine/entity/modifier/RotationAtModifier;"
    ],
    "Lorg/andengine/entity/modifier/RotationModifier;": [
        "Lorg/andengine/entity/modifier/RotationModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/RotationModifier;->deepCopy()Lorg/andengine/entity/modifier/RotationModifier;",
        "Lorg/andengine/entity/modifier/RotationModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/RotationModifier;->onSetInitialValue()V"
    ],
    "Lorg/andengine/entity/modifier/SkewXModifier;": [
        "Lorg/andengine/entity/modifier/SkewXModifier;->deepCopy()Lorg/andengine/entity/modifier/SkewXModifier;",
        "Lorg/andengine/entity/modifier/SkewXModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/SkewXModifier;->onSetInitialValue()V"
    ],
    "Lorg/andengine/entity/modifier/LoopEntityModifier;": [
        "Lorg/andengine/entity/modifier/LoopEntityModifier;->deepCopy()Lorg/andengine/entity/modifier/LoopEntityModifier;"
    ],
    "Lorg/andengine/entity/modifier/ScaleAtModifier;": [
        "Lorg/andengine/entity/modifier/ScaleAtModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/ScaleAtModifier;->deepCopy()Lorg/andengine/entity/modifier/ScaleAtModifier;"
    ],
    "Lorg/andengine/entity/modifier/AlphaModifier;": [
        "Lorg/andengine/entity/modifier/AlphaModifier;->deepCopy()Lorg/andengine/entity/modifier/AlphaModifier;",
        "Lorg/andengine/entity/modifier/AlphaModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/AlphaModifier;->setAutoUnregisterWhenFinished()V",
        "Lorg/andengine/entity/modifier/AlphaModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;": [
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->getSecondsElapsed()F",
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->onManagedUpdate()V",
        "Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;->deepCopy()Lorg/andengine/entity/modifier/CubicBezierCurveMoveModifier;"
    ],
    "Lorg/andengine/util/modifier/ease/IEaseFunction;": [
        "Lorg/andengine/util/modifier/ease/IEaseFunction;->getPercentage()F"
    ],
    "Lorg/andengine/entity/modifier/FadeInModifier;": [
        "Lorg/andengine/entity/modifier/FadeInModifier;->deepCopy()Lorg/andengine/entity/modifier/FadeInModifier;"
    ],
    "Lorg/andengine/entity/modifier/SequenceEntityModifier;": [
        "Lorg/andengine/entity/modifier/SequenceEntityModifier;->deepCopy()Lorg/andengine/entity/modifier/SequenceEntityModifier;"
    ],
    "Lorg/andengine/entity/modifier/MoveXModifier;": [
        "Lorg/andengine/entity/modifier/MoveXModifier;->onSetValue()V",
        "Lorg/andengine/entity/modifier/MoveXModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveXModifier;",
        "Lorg/andengine/entity/modifier/MoveXModifier;->onSetInitialValue()V"
    ],
    "Lorg/andengine/entity/modifier/SkewYModifier;": [
        "Lorg/andengine/entity/modifier/SkewYModifier;->deepCopy()Lorg/andengine/entity/modifier/SkewYModifier;",
        "Lorg/andengine/entity/modifier/SkewYModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/modifier/SkewYModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/modifier/RotationByModifier;": [
        "Lorg/andengine/entity/modifier/RotationByModifier;->deepCopy()Lorg/andengine/entity/modifier/RotationByModifier;",
        "Lorg/andengine/entity/modifier/RotationByModifier;->onChangeValue()V"
    ],
    "Lorg/andengine/entity/modifier/JumpModifier;": [
        "Lorg/andengine/entity/modifier/JumpModifier;->deepCopy()Lorg/andengine/entity/modifier/JumpModifier;"
    ],
    "Lorg/andengine/entity/modifier/MoveModifier;": [
        "Lorg/andengine/entity/modifier/MoveModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/modifier/MoveModifier;->deepCopy()Lorg/andengine/entity/modifier/MoveModifier;",
        "Lorg/andengine/entity/modifier/MoveModifier;->setAutoUnregisterWhenFinished()V",
        "Lorg/andengine/entity/modifier/MoveModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;": [
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->getSecondsElapsed()F",
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->deepCopy()Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;",
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/QuadraticBezierCurveMoveModifier;->onManagedUpdate()V"
    ],
    "Lorg/andengine/entity/modifier/DelayModifier;": [
        "Lorg/andengine/entity/modifier/DelayModifier;->deepCopy()Lorg/andengine/entity/modifier/DelayModifier;",
        "Lorg/andengine/entity/modifier/DelayModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/DelayModifier;->onManagedUpdate()V"
    ],
    "Lorg/andengine/entity/modifier/FadeOutModifier;": [
        "Lorg/andengine/entity/modifier/FadeOutModifier;->deepCopy()Lorg/andengine/entity/modifier/FadeOutModifier;"
    ],
    "Lorg/andengine/entity/modifier/ColorModifier;": [
        "Lorg/andengine/entity/modifier/ColorModifier;->deepCopy()Lorg/andengine/entity/modifier/ColorModifier;",
        "Lorg/andengine/entity/modifier/ColorModifier;->onSetValues()V",
        "Lorg/andengine/entity/modifier/ColorModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/entity/modifier/ParallelEntityModifier;": [
        "Lorg/andengine/entity/modifier/ParallelEntityModifier;->deepCopy()Lorg/andengine/entity/modifier/ParallelEntityModifier;"
    ],
    "Lorg/andengine/entity/modifier/PathModifier$Path;": [
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getLength()F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->deepCopy()Lorg/andengine/entity/modifier/PathModifier$Path;",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getCoordinatesY()[F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getCoordinatesX()[F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getSegmentLength()F",
        "Lorg/andengine/entity/modifier/PathModifier$Path;->getSize()I"
    ],
    "Lorg/andengine/util/modifier/SequenceModifier;": [
        "Lorg/andengine/util/modifier/SequenceModifier;->getDuration()F",
        "Lorg/andengine/util/modifier/SequenceModifier;->getSecondsElapsed()F",
        "Lorg/andengine/util/modifier/SequenceModifier;->deepCopy()Lorg/andengine/util/modifier/SequenceModifier;",
        "Lorg/andengine/util/modifier/SequenceModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/SequenceModifier;->onUpdate()F",
        "Lorg/andengine/util/modifier/SequenceModifier;->assertNoNullModifier()V",
        "Lorg/andengine/util/modifier/SequenceModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/SequenceModifier;->isFinished()Z",
        "Lorg/andengine/util/modifier/SequenceModifier;->reset()V"
    ],
    "Lorg/andengine/entity/modifier/PathModifier;": [
        "Lorg/andengine/entity/modifier/PathModifier;->deepCopy()Lorg/andengine/entity/modifier/PathModifier;",
        "Lorg/andengine/entity/modifier/PathModifier;->onModifierStarted()V",
        "Lorg/andengine/entity/modifier/PathModifier;->onModifierFinished()V",
        "Lorg/andengine/entity/modifier/PathModifier;->onUpdate()F"
    ],
    "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;": [
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->access$0()[F",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->access$1()[F",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->getControlPointCount()I",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->deepCopy()Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;->deepCopyReverse()Lorg/andengine/entity/modifier/CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig;"
    ],
    "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;": [
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->onManagedInitialize()V",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->onManagedUpdate()V",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->deepCopy()Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;",
        "Lorg/andengine/entity/modifier/CardinalSplineMoveModifier;->getSecondsElapsed()F"
    ],
    "Lorg/andengine/entity/primitive/DrawMode;": [
        "Lorg/andengine/entity/primitive/DrawMode;->getDrawMode()I"
    ],
    "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->getBufferData()[F",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->setDirtyOnHardware()V",
        "Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;->bind()V"
    ],
    "Lorg/andengine/entity/primitive/Mesh;": [
        "Lorg/andengine/entity/primitive/Mesh;->setBlendingEnabled()V",
        "Lorg/andengine/entity/primitive/Mesh;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/IMeshVertexBufferObject;",
        "Lorg/andengine/entity/primitive/Mesh;->getColor()Lorg/andengine/util/adt/color/Color;"
    ],
    "Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;->onUpdateColor()V"
    ],
    "Lorg/andengine/entity/primitive/Gradient;": [
        "Lorg/andengine/entity/primitive/Gradient;->getToRed()F",
        "Lorg/andengine/entity/primitive/Gradient;->getToGreen()F",
        "Lorg/andengine/entity/primitive/Gradient;->setGradientVector()V",
        "Lorg/andengine/entity/primitive/Gradient;->isGradientFitToBounds()Z",
        "Lorg/andengine/entity/primitive/Gradient;->getGradientVectorY()F",
        "Lorg/andengine/entity/primitive/Gradient;->getFromRed()F",
        "Lorg/andengine/entity/primitive/Gradient;->getWidth()F",
        "Lorg/andengine/entity/primitive/Gradient;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/Gradient;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;",
        "Lorg/andengine/entity/primitive/Gradient;->getToAlpha()F",
        "Lorg/andengine/entity/primitive/Gradient;->getFromGreen()F",
        "Lorg/andengine/entity/primitive/Gradient;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/Gradient;->getFromAlpha()F",
        "Lorg/andengine/entity/primitive/Gradient;->getToBlue()F",
        "Lorg/andengine/entity/primitive/Gradient;->setBlendingEnabled()V",
        "Lorg/andengine/entity/primitive/Gradient;->getHeight()F",
        "Lorg/andengine/entity/primitive/Gradient;->getFromBlue()F",
        "Lorg/andengine/entity/primitive/Gradient;->getGradientVectorX()F"
    ],
    "Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/IGradientVertexBufferObject;->unbind()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->unbind()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/IRectangleVertexBufferObject;->draw()V"
    ],
    "Lorg/andengine/util/algorithm/collision/LineCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/LineCollisionChecker;->checkLineCollision()Z",
        "Lorg/andengine/util/algorithm/collision/LineCollisionChecker;->fillVertices()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->draw()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->bind()V",
        "Lorg/andengine/entity/primitive/vbo/ILineVertexBufferObject;->unbind()V"
    ],
    "Lorg/andengine/entity/primitive/LineChain;": [
        "Lorg/andengine/entity/primitive/LineChain;->getCapacity()I",
        "Lorg/andengine/entity/primitive/LineChain;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/primitive/LineChain;->onUpdateVertices()V",
        "Lorg/andengine/entity/primitive/LineChain;->onUpdateColor()V",
        "Lorg/andengine/entity/primitive/LineChain;->getY()F",
        "Lorg/andengine/entity/primitive/LineChain;->assertIndex()V",
        "Lorg/andengine/entity/primitive/LineChain;->assertCapacity()V",
        "Lorg/andengine/entity/primitive/LineChain;->getX()F",
        "Lorg/andengine/entity/primitive/LineChain;->setBlendingEnabled()V",
        "Lorg/andengine/entity/primitive/LineChain;->getVertexBufferObject()Lorg/andengine/entity/primitive/vbo/ILineChainVertexBufferObject;"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceMeshVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceMeshVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceGradientVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceGradientVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceLineChainVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceLineChainVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceRectangleVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceRectangleVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/HighPerformanceLineVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/HighPerformanceLineVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/LowMemoryRectangleVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/LowMemoryRectangleVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/LowMemoryGradientVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/LowMemoryGradientVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/LowMemoryLineVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/LowMemoryLineVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/primitive/vbo/LowMemoryLineChainVertexBufferObject;": [
        "Lorg/andengine/entity/primitive/vbo/LowMemoryLineChainVertexBufferObject;->setDirtyOnHardware()V"
    ],
    "Lorg/andengine/entity/scene/ITouchArea;": [
        "Lorg/andengine/entity/scene/ITouchArea;->contains()Z",
        "Lorg/andengine/entity/scene/ITouchArea;->convertSceneCoordinatesToLocalCoordinates()[F",
        "Lorg/andengine/entity/scene/ITouchArea;->onAreaTouched()Z"
    ],
    "Lorg/andengine/entity/scene/IOnAreaTouchListener;": [
        "Lorg/andengine/entity/scene/IOnAreaTouchListener;->onAreaTouched()Z"
    ],
    "Lorg/andengine/entity/scene/background/IBackground;": [
        "Lorg/andengine/entity/scene/background/IBackground;->setColor()V",
        "Lorg/andengine/entity/scene/background/IBackground;->onUpdate()V",
        "Lorg/andengine/entity/scene/background/IBackground;->onDraw()V"
    ],
    "Lorg/andengine/entity/scene/IOnSceneTouchListener;": [
        "Lorg/andengine/entity/scene/IOnSceneTouchListener;->onSceneTouchEvent()Z"
    ],
    "Lorg/andengine/entity/scene/menu/MenuScene;": [
        "Lorg/andengine/entity/scene/menu/MenuScene;->getMenuItemCount()I",
        "Lorg/andengine/entity/scene/menu/MenuScene;->resetAnimations()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->back()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->attachChild()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->setOnSceneTouchListener()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->getWidth()F",
        "Lorg/andengine/entity/scene/menu/MenuScene;->setOnAreaTouchListener()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->getChildScene()Lorg/andengine/entity/scene/menu/MenuScene;",
        "Lorg/andengine/entity/scene/menu/MenuScene;->reset()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->getHeight()F",
        "Lorg/andengine/entity/scene/menu/MenuScene;->registerTouchArea()V",
        "Lorg/andengine/entity/scene/menu/MenuScene;->getMenuItem()Lorg/andengine/entity/scene/menu/item/IMenuItem;",
        "Lorg/andengine/entity/scene/menu/MenuScene;->unregisterTouchArea()Z",
        "Lorg/andengine/entity/scene/menu/MenuScene;->detachChild()Z"
    ],
    "Lorg/andengine/entity/scene/CameraScene;": [
        "Lorg/andengine/entity/scene/CameraScene;->back()V",
        "Lorg/andengine/entity/scene/CameraScene;->getChildScene()Lorg/andengine/entity/scene/Scene;",
        "Lorg/andengine/entity/scene/CameraScene;->setChildScene()V",
        "Lorg/andengine/entity/scene/CameraScene;->clearChildScene()V"
    ],
    "Lorg/andengine/entity/scene/menu/animator/IMenuSceneAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/IMenuSceneAnimator;->buildMenuSceneAnimations()V",
        "Lorg/andengine/entity/scene/menu/animator/IMenuSceneAnimator;->resetMenuSceneAnimations()V"
    ],
    "Lorg/andengine/entity/scene/menu/item/IMenuItem;": [
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getHeightScaled()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isSkewed()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isVisible()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setVisible()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getLocalToParentTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRotationCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->convertSceneCoordinatesToLocalCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isRotated()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->clearEntityModifiers()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onAttached()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setAlpha()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->contains()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->collidesWith()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkew()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getLastChild()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryFirst()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->registerUpdateHandler()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isScaled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setHeight()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRed()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setOffsetCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getZIndex()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->convertLocalCoordinatesToParentCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getVertexBufferObjectManager()Lorg/andengine/opengl/vbo/VertexBufferObjectManager;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setChildrenIgnoreUpdate()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->resetEntityModifiers()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterUpdateHandler()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getColor()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChildren()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onDetached()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onDraw()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getBlue()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotationCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getLocalToSceneTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getBlendFunctionDestination()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendFunctionDestination()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setColor()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setWidth()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSceneToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setPosition()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isChildrenVisible()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getOffsetCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isBlendingEnabled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotation()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterUpdateHandlers()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChildren()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setZIndex()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setAnchorCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getTag()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlue()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getID()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setGreen()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setCullingEnabled()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->dispose()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->convertLocalCoordinatesToSceneCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSize()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachSelf()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->query()Ljava/util/List;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotationCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setUserData()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isIgnoreUpdate()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRotation()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChild()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSceneCenterCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getWidth()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildByTag()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRotationCenterY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setShaderProgram()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isDisposed()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getGreen()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryForSubclass()Ljava/util/ArrayList;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setParent()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getWidthScaled()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->hasParent()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRotationCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isRotatedOrScaledOrSkewed()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getSkewY()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onAreaTouched()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getEntityModifierCount()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setOffsetCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScale()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->attachChild()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendFunction()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setChildrenVisible()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setOffsetCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->detachChild()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getParent()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleCenter()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->toString()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->clearUpdateHandlers()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterEntityModifiers()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->query()Ljava/util/ArrayList;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isCulled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->unregisterEntityModifier()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getFirstChild()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isChildrenIgnoreUpdate()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setScaleCenterY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildByMatcher()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getHeight()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getAlpha()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getBlendFunctionSource()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewX()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getScaleX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onSelected()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onUnselected()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getUserData()Ljava/lang/Object;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getUpdateHandlerCount()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getRootEntity()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setSkewY()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->isCullingEnabled()Z",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getParentToLocalTransformation()Lorg/andengine/util/adt/transformation/Transformation;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setIgnoreUpdate()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setRed()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendFunctionSource()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setTag()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->sortChildren()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->callOnChildren()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->convertParentCoordinatesToLocalCoordinates()[F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->onUpdate()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->registerEntityModifier()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getShaderProgram()Lorg/andengine/opengl/shader/ShaderProgram;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getVertexBufferObject()Lorg/andengine/opengl/vbo/IVertexBufferObject;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->setBlendingEnabled()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getOffsetCenterX()F",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->reset()V",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildCount()I",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->queryFirstForSubclass()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/scene/menu/item/IMenuItem;->getChildByIndex()Lorg/andengine/entity/IEntity;"
    ],
    "Lorg/andengine/entity/scene/menu/MenuScene$IOnMenuItemClickListener;": [
        "Lorg/andengine/entity/scene/menu/MenuScene$IOnMenuItemClickListener;->onMenuItemClicked()Z"
    ],
    "Lorg/andengine/util/adt/spatial/Direction;": [
        "Lorg/andengine/util/adt/spatial/Direction;->getDeltaX()I",
        "Lorg/andengine/util/adt/spatial/Direction;->$SWITCH_TABLE$org$andengine$util$adt$spatial$Direction()[I",
        "Lorg/andengine/util/adt/spatial/Direction;->fromDelta()Lorg/andengine/util/adt/spatial/Direction;",
        "Lorg/andengine/util/adt/spatial/Direction;->getDeltaY()I",
        "Lorg/andengine/util/adt/spatial/Direction;->isHorizontal()Z",
        "Lorg/andengine/util/adt/spatial/Direction;->values()[Lorg/andengine/util/adt/spatial/Direction;",
        "Lorg/andengine/util/adt/spatial/Direction;->ordinal()I",
        "Lorg/andengine/util/adt/spatial/Direction;->rotateRight()Lorg/andengine/util/adt/spatial/Direction;"
    ],
    "Lorg/andengine/entity/scene/menu/animator/SlideMenuSceneAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/SlideMenuSceneAnimator;->$SWITCH_TABLE$org$andengine$util$adt$spatial$Direction()[I",
        "Lorg/andengine/entity/scene/menu/animator/SlideMenuSceneAnimator;->getFromY()F",
        "Lorg/andengine/entity/scene/menu/animator/SlideMenuSceneAnimator;->getFromX()F"
    ],
    "Lorg/andengine/util/adt/align/VerticalAlign;": [
        "Lorg/andengine/util/adt/align/VerticalAlign;->values()[Lorg/andengine/util/adt/align/VerticalAlign;",
        "Lorg/andengine/util/adt/align/VerticalAlign;->ordinal()I"
    ],
    "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;": [
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->onMenuItemPositionBuilt()V",
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->$SWITCH_TABLE$org$andengine$util$adt$align$HorizontalAlign()[I",
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->getMenuItemY()F",
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->updateOverallHeight()V",
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->onMenuItemPositionReset()V",
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->$SWITCH_TABLE$org$andengine$util$adt$align$VerticalAlign()[I",
        "Lorg/andengine/entity/scene/menu/animator/MenuSceneAnimator;->getMenuItemX()F"
    ],
    "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;": [
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->onMenuItemUnselected()V",
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->onMenuItemReset()V",
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->onMenuItemSelected()V",
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->setAnchorCenterX()V",
        "Lorg/andengine/entity/scene/menu/item/decorator/BaseMenuItemDecorator;->setAnchorCenterY()V"
    ],
    "Lorg/andengine/entity/scene/menu/item/decorator/ScaleMenuItemDecorator;": [
        "Lorg/andengine/entity/scene/menu/item/decorator/ScaleMenuItemDecorator;->setScale()V"
    ],
    "Lorg/andengine/entity/scene/background/RepeatingSpriteBackground;": [
        "Lorg/andengine/entity/scene/background/RepeatingSpriteBackground;->createSprite()Lorg/andengine/entity/sprite/Sprite;"
    ],
    "Lorg/andengine/entity/scene/background/Background;": [
        "Lorg/andengine/entity/scene/background/Background;->allocateBackgroundModifiers()V",
        "Lorg/andengine/entity/scene/background/Background;->onDraw()V"
    ],
    "Lorg/andengine/entity/scene/background/ParallaxBackground$ParallaxEntity;": [
        "Lorg/andengine/entity/scene/background/ParallaxBackground$ParallaxEntity;->onDraw()V"
    ],
    "Lorg/andengine/util/modifier/ModifierList;": [
        "Lorg/andengine/util/modifier/ModifierList;->clear()V",
        "Lorg/andengine/util/modifier/ModifierList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/modifier/ModifierList;->size()I",
        "Lorg/andengine/util/modifier/ModifierList;->remove()Z",
        "Lorg/andengine/util/modifier/ModifierList;->add()Z",
        "Lorg/andengine/util/modifier/ModifierList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/modifier/ModifierList;->reset()V",
        "Lorg/andengine/util/modifier/ModifierList;->onUpdate()V"
    ],
    "Lorg/andengine/entity/scene/background/modifier/SequenceBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/SequenceBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/SequenceBackgroundModifier;"
    ],
    "Lorg/andengine/entity/scene/background/modifier/ParallelBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/ParallelBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/ParallelBackgroundModifier;"
    ],
    "Lorg/andengine/entity/scene/background/modifier/LoopBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/LoopBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/LoopBackgroundModifier;"
    ],
    "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;": [
        "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;->deepCopy()Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;",
        "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;->onSetValues()V",
        "Lorg/andengine/entity/scene/background/modifier/ColorBackgroundModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/entity/particle/Particle;": [
        "Lorg/andengine/entity/particle/Particle;->getPhysicsHandler()Lorg/andengine/engine/handler/physics/PhysicsHandler;",
        "Lorg/andengine/entity/particle/Particle;->getEntity()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/entity/particle/Particle;->setExpireTime()V",
        "Lorg/andengine/entity/particle/Particle;->setEntity()V",
        "Lorg/andengine/entity/particle/Particle;->onUpdate()V",
        "Lorg/andengine/entity/particle/Particle;->reset()V",
        "Lorg/andengine/entity/particle/Particle;->getLifeTime()F",
        "Lorg/andengine/entity/particle/Particle;->onDraw()V",
        "Lorg/andengine/entity/particle/Particle;->setExpired()V"
    ],
    "Lorg/andengine/entity/particle/ParticleSystem;": [
        "Lorg/andengine/entity/particle/ParticleSystem;->spawnParticles()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->registerUpdateHandler()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->moveParticleToEnd()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->isParticlesSpawnEnabled()Z",
        "Lorg/andengine/entity/particle/ParticleSystem;->spawnParticle()V",
        "Lorg/andengine/entity/particle/ParticleSystem;->determineCurrentRate()F"
    ],
    "Lorg/andengine/entity/particle/emitter/IParticleEmitter;": [
        "Lorg/andengine/entity/particle/emitter/IParticleEmitter;->getPositionOffset()V"
    ],
    "Lorg/andengine/entity/IEntityFactory;": [
        "Lorg/andengine/entity/IEntityFactory;->create()Lorg/andengine/entity/IEntity;"
    ],
    "Lorg/andengine/entity/particle/modifier/IParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/IParticleModifier;->onInitializeParticle()V",
        "Lorg/andengine/entity/particle/modifier/IParticleModifier;->onUpdateParticle()V"
    ],
    "Lorg/andengine/engine/handler/physics/PhysicsHandler;": [
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->onUpdate()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->setEntity()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->reset()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->accelerate()V",
        "Lorg/andengine/engine/handler/physics/PhysicsHandler;->setVelocity()V"
    ],
    "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;->onSetValues()V",
        "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/particle/modifier/BaseDoubleValueSpanParticleModifier;->reset()V"
    ],
    "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;->onSetInitialValue()V",
        "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;->reset()V",
        "Lorg/andengine/entity/particle/modifier/BaseSingleValueSpanParticleModifier;->onSetValue()V"
    ],
    "Lorg/andengine/entity/particle/modifier/BaseTripleValueSpanParticleModifier;": [
        "Lorg/andengine/entity/particle/modifier/BaseTripleValueSpanParticleModifier;->onSetInitialValues()V",
        "Lorg/andengine/entity/particle/modifier/BaseTripleValueSpanParticleModifier;->onSetValues()V"
    ],
    "Lorg/andengine/entity/particle/emitter/BaseRectangleParticleEmitter;": [
        "Lorg/andengine/entity/particle/emitter/BaseRectangleParticleEmitter;->setHeight()V",
        "Lorg/andengine/entity/particle/emitter/BaseRectangleParticleEmitter;->setWidth()V"
    ],
    "Lorg/andengine/entity/particle/emitter/BaseCircleParticleEmitter;": [
        "Lorg/andengine/entity/particle/emitter/BaseCircleParticleEmitter;->setRadiusY()V",
        "Lorg/andengine/entity/particle/emitter/BaseCircleParticleEmitter;->setRadiusX()V"
    ],
    "Lorg/andengine/input/touch/TouchEvent$TouchEventPool;": [
        "Lorg/andengine/input/touch/TouchEvent$TouchEventPool;->recyclePoolItem()V",
        "Lorg/andengine/input/touch/TouchEvent$TouchEventPool;->obtainPoolItem()Ljava/lang/Object;"
    ],
    "Lorg/andengine/input/touch/controller/SingleTouchController;": [
        "Lorg/andengine/input/touch/controller/SingleTouchController;->fireTouchEvent()V"
    ],
    "Lorg/andengine/input/touch/controller/MultiTouchController;": [
        "Lorg/andengine/input/touch/controller/MultiTouchController;->getPointerIndex()I",
        "Lorg/andengine/input/touch/controller/MultiTouchController;->onHandleTouchMove()V",
        "Lorg/andengine/input/touch/controller/MultiTouchController;->onHandleTouchAction()V",
        "Lorg/andengine/input/touch/controller/MultiTouchController;->fireTouchEvent()V"
    ],
    "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;": [
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->onHandlePoolItem()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->reset()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->postPoolItem()V",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->obtainPoolItem()Lorg/andengine/util/adt/pool/PoolItem;",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->onAllocatePoolItem()Lorg/andengine/util/adt/pool/RunnablePoolItem;",
        "Lorg/andengine/util/adt/pool/RunnablePoolUpdateHandler;->onUpdate()V"
    ],
    "Lorg/andengine/input/touch/controller/BaseTouchController$TouchEventRunnablePoolItem;": [
        "Lorg/andengine/input/touch/controller/BaseTouchController$TouchEventRunnablePoolItem;->set()V"
    ],
    "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;": [
        "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;->onScroll()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;->onScrollStarted()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector$IScrollDetectorListener;->onScrollFinished()V"
    ],
    "Lorg/andengine/input/touch/detector/ScrollDetector;": [
        "Lorg/andengine/input/touch/detector/ScrollDetector;->getX()F",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->prepareScroll()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->triggerOnScrollStarted()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->triggerOnScrollFinished()V",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->getY()F",
        "Lorg/andengine/input/touch/detector/ScrollDetector;->triggerOnScroll()V"
    ],
    "Lorg/andengine/input/touch/detector/HoldDetector;": [
        "Lorg/andengine/input/touch/detector/HoldDetector;->reset()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->triggerOnHold()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->setTriggerHoldMaximumDistance()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->triggerOnHoldFinished()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->prepareHold()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->setTriggerHoldMinimumMilliseconds()V",
        "Lorg/andengine/input/touch/detector/HoldDetector;->triggerOnHoldStarted()V"
    ],
    "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;": [
        "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;->onHoldFinished()V",
        "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;->onHoldStarted()V",
        "Lorg/andengine/input/touch/detector/HoldDetector$IHoldDetectorListener;->onHold()V"
    ],
    "Lorg/andengine/input/touch/detector/ClickDetector$IClickDetectorListener;": [
        "Lorg/andengine/input/touch/detector/ClickDetector$IClickDetectorListener;->onClick()V"
    ],
    "Lorg/andengine/input/touch/detector/BaseDetector;": [
        "Lorg/andengine/input/touch/detector/BaseDetector;->onManagedTouchEvent()Z",
        "Lorg/andengine/input/touch/detector/BaseDetector;->onTouchEvent()Z"
    ],
    "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;": [
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->prepareHold()V",
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->triggerOnHoldStarted()V",
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->triggerOnHoldFinished()V",
        "Lorg/andengine/input/touch/detector/ContinuousHoldDetector;->triggerOnHold()V"
    ],
    "Lorg/andengine/engine/handler/timer/TimerHandler;": [
        "Lorg/andengine/engine/handler/timer/TimerHandler;->reset()V",
        "Lorg/andengine/engine/handler/timer/TimerHandler;->onUpdate()V"
    ],
    "Landroid/view/GestureDetector;": [
        "Landroid/view/GestureDetector;->onTouchEvent()Z"
    ],
    "Lorg/andengine/input/touch/detector/PinchZoomDetector;": [
        "Lorg/andengine/input/touch/detector/PinchZoomDetector;->getZoomFactor()F",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector;->calculatePointerDistance()F",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector;->hasTwoOrMorePointers()Z"
    ],
    "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;": [
        "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;->onPinchZoomFinished()V",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;->onPinchZoom()V",
        "Lorg/andengine/input/touch/detector/PinchZoomDetector$IPinchZoomDetectorListener;->onPinchZoomStarted()V"
    ],
    "Lorg/andengine/input/sensor/BaseSensorData;": [
        "Lorg/andengine/input/sensor/BaseSensorData;->setAccuracy()V",
        "Lorg/andengine/input/sensor/BaseSensorData;->setValues()V"
    ],
    "Lorg/andengine/input/sensor/acceleration/AccelerationData$IAxisSwap;": [
        "Lorg/andengine/input/sensor/acceleration/AccelerationData$IAxisSwap;->swapAxis()V"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;",
        "Ljava/net/InetAddress;->getByName()Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->isLoopbackAddress()Z",
        "Ljava/net/InetAddress;->getAddress()[B",
        "Ljava/net/InetAddress;->getByAddress()Ljava/net/InetAddress;"
    ],
    "Lorg/andengine/util/WifiUtils;": [
        "Lorg/andengine/util/WifiUtils;->getEmulatorIPAddressRaw()[B",
        "Lorg/andengine/util/WifiUtils;->setWifiEnabled()V",
        "Lorg/andengine/util/WifiUtils;->isMulticastEnabled()Z",
        "Lorg/andengine/util/WifiUtils;->isWifiHotspotEnabled()Z",
        "Lorg/andengine/util/WifiUtils;->getWifiHotspotIPAddressRaw()[B",
        "Lorg/andengine/util/WifiUtils;->stripQuotes()Ljava/lang/String;",
        "Lorg/andengine/util/WifiUtils;->getWifiHotspotIPAddress()Ljava/lang/String;",
        "Lorg/andengine/util/WifiUtils;->aquireMulticastLock()Landroid/net/wifi/WifiManager$MulticastLock;",
        "Lorg/andengine/util/WifiUtils;->getWifiHotspotState()Lorg/andengine/util/WifiUtils$WifiHotspotState;",
        "Lorg/andengine/util/WifiUtils;->setWifiHostpotEnabled()Z",
        "Lorg/andengine/util/WifiUtils;->getWifiSSID()Ljava/lang/String;",
        "Lorg/andengine/util/WifiUtils;->getWifiManager()Landroid/net/wifi/WifiManager;",
        "Lorg/andengine/util/WifiUtils;->getWifiHotspotSSID()Ljava/lang/String;",
        "Lorg/andengine/util/WifiUtils;->getWifiIPv4AddressRaw()[B",
        "Lorg/andengine/util/WifiUtils;->getWifiHotspotConfiguration()Landroid/net/wifi/WifiConfiguration;",
        "Lorg/andengine/util/WifiUtils;->getEmulatorIPAddress()Ljava/lang/String;"
    ],
    "Landroid/net/wifi/WifiManager$MulticastLock;": [
        "Landroid/net/wifi/WifiManager$MulticastLock;->isHeld()Z",
        "Landroid/net/wifi/WifiManager$MulticastLock;->setReferenceCounted()V",
        "Landroid/net/wifi/WifiManager$MulticastLock;->release()V",
        "Landroid/net/wifi/WifiManager$MulticastLock;->acquire()V"
    ],
    "Lorg/andengine/util/IPUtils;": [
        "Lorg/andengine/util/IPUtils;->ipAddressToString()Ljava/lang/String;",
        "Lorg/andengine/util/IPUtils;->ipv4AddressToIPAddress()[B"
    ],
    "Ljava/net/NetworkInterface;": [
        "Ljava/net/NetworkInterface;->isLoopback()Z",
        "Ljava/net/NetworkInterface;->getName()Ljava/lang/String;",
        "Ljava/net/NetworkInterface;->getNetworkInterfaces()Ljava/util/Enumeration;",
        "Ljava/net/NetworkInterface;->getInetAddresses()Ljava/util/Enumeration;"
    ],
    "Ljava/util/Enumeration;": [
        "Ljava/util/Enumeration;->hasMoreElements()Z",
        "Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/WifiUtils$WifiHotspotState;": [
        "Lorg/andengine/util/WifiUtils$WifiHotspotState;->fromWifiApState()Lorg/andengine/util/WifiUtils$WifiHotspotState;"
    ],
    "Lorg/andengine/util/ProbabilityGenerator$Entry;": [
        "Lorg/andengine/util/ProbabilityGenerator$Entry;->getReturnValue()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/SAXUtils;": [
        "Lorg/andengine/util/SAXUtils;->getIntAttributeOrThrow()I",
        "Lorg/andengine/util/SAXUtils;->appendAttribute()V",
        "Lorg/andengine/util/SAXUtils;->getAttributeOrThrow()Ljava/lang/String;",
        "Lorg/andengine/util/SAXUtils;->getBooleanAttributeOrThrow()Z",
        "Lorg/andengine/util/SAXUtils;->getIntAttribute()I"
    ],
    "Lorg/xml/sax/Attributes;": [
        "Lorg/xml/sax/Attributes;->getValue()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/GooglePlayUtils;": [
        "Lorg/andengine/util/GooglePlayUtils;->getGooglePlayWebsiteIntent()Landroid/content/Intent;",
        "Lorg/andengine/util/GooglePlayUtils;->startGooglePlayActivityForResult()V",
        "Lorg/andengine/util/GooglePlayUtils;->startGooglePlayActivity()V",
        "Lorg/andengine/util/GooglePlayUtils;->getGooglePlayAppIntent()Landroid/content/Intent;"
    ],
    "Lorg/andengine/util/IntentUtils;": [
        "Lorg/andengine/util/IntentUtils;->isIntentResolvable()Z"
    ],
    "Ljava/io/Closeable;": [
        "Ljava/io/Closeable;->close()V"
    ],
    "Lorg/andengine/util/BezierCurveUtils;": [
        "Lorg/andengine/util/BezierCurveUtils;->getBezierCurveLength()F",
        "Lorg/andengine/util/BezierCurveUtils;->bernstein()F"
    ],
    "Lorg/andengine/util/BetaUtils;": [
        "Lorg/andengine/util/BetaUtils;->finishWhenExpired()Z"
    ],
    "Lorg/andengine/util/preferences/SimplePreferences;": [
        "Lorg/andengine/util/preferences/SimplePreferences;->getInstance()Landroid/content/SharedPreferences;",
        "Lorg/andengine/util/preferences/SimplePreferences;->getEditorInstance()Landroid/content/SharedPreferences$Editor;",
        "Lorg/andengine/util/preferences/SimplePreferences;->incrementAccessCount()I"
    ],
    "Ljava/util/GregorianCalendar;": [
        "Ljava/util/GregorianCalendar;->after()Z",
        "Ljava/util/GregorianCalendar;->setTimeInMillis()V"
    ],
    "Lorg/andengine/util/call/AsyncCallable;": [
        "Lorg/andengine/util/call/AsyncCallable;->call()V"
    ],
    "Lorg/andengine/util/AsyncTaskUtils;": [
        "Lorg/andengine/util/AsyncTaskUtils;->execute()V"
    ],
    "Landroid/os/AsyncTask;": [
        "Landroid/os/AsyncTask;->execute()Landroid/os/AsyncTask;",
        "Landroid/os/AsyncTask;->executeOnExecutor()Landroid/os/AsyncTask;"
    ],
    "Lorg/andengine/util/ThreadUtils;": [
        "Lorg/andengine/util/ThreadUtils;->dumpCurrentThreadInfo()V"
    ],
    "Ljava/lang/StackTraceElement;": [
        "Ljava/lang/StackTraceElement;->getFileName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getClassName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;",
        "Ljava/lang/StackTraceElement;->getLineNumber()I"
    ],
    "Lorg/andengine/util/mime/MIMEType;": [
        "Lorg/andengine/util/mime/MIMEType;->getTypeString()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/MailUtils;": [
        "Lorg/andengine/util/MailUtils;->sendMail()V",
        "Lorg/andengine/util/MailUtils;->getSendMailIntent()Landroid/content/Intent;"
    ],
    "Lorg/andengine/util/TimeUtils;": [
        "Lorg/andengine/util/TimeUtils;->formatSeconds()Ljava/lang/String;"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->getLong()J",
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->requery()Z",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->unregisterContentObserver()V",
        "Landroid/database/Cursor;->registerContentObserver()V",
        "Landroid/database/Cursor;->unregisterDataSetObserver()V",
        "Landroid/database/Cursor;->isClosed()Z",
        "Landroid/database/Cursor;->getColumnIndexOrThrow()I",
        "Landroid/database/Cursor;->registerDataSetObserver()V",
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->moveToPosition()Z"
    ],
    "Lorg/andengine/util/EthernetUtils;": [
        "Lorg/andengine/util/EthernetUtils;->getEthernetIPAddress()Ljava/lang/String;",
        "Lorg/andengine/util/EthernetUtils;->getEthernetIPAddressRaw()[B"
    ],
    "Lorg/andengine/util/ConnectivityUtils;": [
        "Lorg/andengine/util/ConnectivityUtils;->isNetworkAvailable()Z",
        "Lorg/andengine/util/ConnectivityUtils;->isNetworkConnectedOrConnecting()Z",
        "Lorg/andengine/util/ConnectivityUtils;->getConnectivityManager()Landroid/net/ConnectivityManager;",
        "Lorg/andengine/util/ConnectivityUtils;->isNetworkConnected()Z",
        "Lorg/andengine/util/ConnectivityUtils;->getNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Ljava/net/DatagramSocket;": [
        "Ljava/net/DatagramSocket;->close()V",
        "Ljava/net/DatagramSocket;->isClosed()Z"
    ],
    "Ljava/net/ServerSocket;": [
        "Ljava/net/ServerSocket;->isClosed()Z",
        "Ljava/net/ServerSocket;->close()V"
    ],
    "Ljava/util/regex/MatchResult;": [
        "Ljava/util/regex/MatchResult;->groupCount()I",
        "Ljava/util/regex/MatchResult;->group()Ljava/lang/String;"
    ],
    "Landroid/os/Debug;": [
        "Landroid/os/Debug;->getMemoryInfo()V",
        "Landroid/os/Debug;->getNativeHeapSize()J",
        "Landroid/os/Debug;->getNativeHeapFreeSize()J",
        "Landroid/os/Debug;->getNativeHeapAllocatedSize()J"
    ],
    "Ljava/lang/ProcessBuilder;": [
        "Ljava/lang/ProcessBuilder;->start()Ljava/lang/Process;"
    ],
    "Lorg/andengine/util/adt/map/SparseFloatArray;": [
        "Lorg/andengine/util/adt/map/SparseFloatArray;->keyAt()I",
        "Lorg/andengine/util/adt/map/SparseFloatArray;->valueAt()F",
        "Lorg/andengine/util/adt/map/SparseFloatArray;->binarySearch()I",
        "Lorg/andengine/util/adt/map/SparseFloatArray;->clone()Lorg/andengine/util/adt/map/SparseFloatArray;",
        "Lorg/andengine/util/adt/map/SparseFloatArray;->put()V",
        "Lorg/andengine/util/adt/map/SparseFloatArray;->size()I",
        "Lorg/andengine/util/adt/map/SparseFloatArray;->get()F"
    ],
    "[I": [
        "[I->clone()Ljava/lang/Object;"
    ],
    "[F": [
        "[F->clone()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/map/SparseLongArray;": [
        "Lorg/andengine/util/adt/map/SparseLongArray;->binarySearch()I",
        "Lorg/andengine/util/adt/map/SparseLongArray;->size()I",
        "Lorg/andengine/util/adt/map/SparseLongArray;->get()J",
        "Lorg/andengine/util/adt/map/SparseLongArray;->put()V",
        "Lorg/andengine/util/adt/map/SparseLongArray;->clone()Lorg/andengine/util/adt/map/SparseLongArray;",
        "Lorg/andengine/util/adt/map/SparseLongArray;->keyAt()I",
        "Lorg/andengine/util/adt/map/SparseLongArray;->valueAt()J"
    ],
    "[J": [
        "[J->clone()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/map/SparseByteArray;": [
        "Lorg/andengine/util/adt/map/SparseByteArray;->valueAt()B",
        "Lorg/andengine/util/adt/map/SparseByteArray;->clone()Lorg/andengine/util/adt/map/SparseByteArray;",
        "Lorg/andengine/util/adt/map/SparseByteArray;->put()V",
        "Lorg/andengine/util/adt/map/SparseByteArray;->keyAt()I",
        "Lorg/andengine/util/adt/map/SparseByteArray;->size()I",
        "Lorg/andengine/util/adt/map/SparseByteArray;->get()B",
        "Lorg/andengine/util/adt/map/SparseByteArray;->binarySearch()I"
    ],
    "Lorg/andengine/util/adt/map/LongSparseArray;": [
        "Lorg/andengine/util/adt/map/LongSparseArray;->clear()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->binarySearch()I",
        "Lorg/andengine/util/adt/map/LongSparseArray;->valueAt()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/map/LongSparseArray;->gc()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->remove()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->delete()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/map/LongSparseArray;->keyAt()J",
        "Lorg/andengine/util/adt/map/LongSparseArray;->put()V",
        "Lorg/andengine/util/adt/map/LongSparseArray;->size()I",
        "Lorg/andengine/util/adt/map/LongSparseArray;->indexOfKey()I"
    ],
    "Landroid/util/SparseBooleanArray;": [
        "Landroid/util/SparseBooleanArray;->size()I",
        "Landroid/util/SparseBooleanArray;->valueAt()Z",
        "Landroid/util/SparseBooleanArray;->keyAt()I"
    ],
    "Lorg/andengine/util/adt/map/SparseCharArray;": [
        "Lorg/andengine/util/adt/map/SparseCharArray;->size()I",
        "Lorg/andengine/util/adt/map/SparseCharArray;->clone()Lorg/andengine/util/adt/map/SparseCharArray;",
        "Lorg/andengine/util/adt/map/SparseCharArray;->valueAt()C",
        "Lorg/andengine/util/adt/map/SparseCharArray;->get()C",
        "Lorg/andengine/util/adt/map/SparseCharArray;->keyAt()I",
        "Lorg/andengine/util/adt/map/SparseCharArray;->binarySearch()I",
        "Lorg/andengine/util/adt/map/SparseCharArray;->put()V"
    ],
    "Lorg/andengine/util/adt/map/SparseDoubleArray;": [
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->keyAt()I",
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->get()D",
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->valueAt()D",
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->binarySearch()I",
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->put()V",
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->clone()Lorg/andengine/util/adt/map/SparseDoubleArray;",
        "Lorg/andengine/util/adt/map/SparseDoubleArray;->size()I"
    ],
    "Lorg/andengine/util/adt/list/BooleanArrayList;": [
        "Lorg/andengine/util/adt/list/BooleanArrayList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/BooleanArrayList;->add()V"
    ],
    "Lorg/andengine/util/adt/list/ByteArrayList;": [
        "Lorg/andengine/util/adt/list/ByteArrayList;->add()V",
        "Lorg/andengine/util/adt/list/ByteArrayList;->ensureCapacity()V"
    ],
    "Lorg/andengine/util/adt/list/CharArrayList;": [
        "Lorg/andengine/util/adt/list/CharArrayList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/CharArrayList;->add()V"
    ],
    "Lorg/andengine/util/adt/list/DoubleArrayList;": [
        "Lorg/andengine/util/adt/list/DoubleArrayList;->add()V",
        "Lorg/andengine/util/adt/list/DoubleArrayList;->ensureCapacity()V"
    ],
    "Lorg/andengine/util/adt/list/FloatArrayList;": [
        "Lorg/andengine/util/adt/list/FloatArrayList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/FloatArrayList;->add()V"
    ],
    "Lorg/andengine/util/adt/list/IntArrayList;": [
        "Lorg/andengine/util/adt/list/IntArrayList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/IntArrayList;->add()V"
    ],
    "Lorg/andengine/util/adt/list/LongArrayList;": [
        "Lorg/andengine/util/adt/list/LongArrayList;->clear()V",
        "Lorg/andengine/util/adt/list/LongArrayList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/LongArrayList;->toArray()[J",
        "Lorg/andengine/util/adt/list/LongArrayList;->add()V",
        "Lorg/andengine/util/adt/list/LongArrayList;->size()I"
    ],
    "Lorg/andengine/util/adt/map/MultiKey;": [
        "Lorg/andengine/util/adt/map/MultiKey;->hash()I",
        "Lorg/andengine/util/adt/map/MultiKey;->getKeys()[Ljava/lang/Object;",
        "Lorg/andengine/util/adt/map/MultiKey;->hashCode()I"
    ],
    "Lorg/andengine/util/adt/map/MultiKeyHashMap;": [
        "Lorg/andengine/util/adt/map/MultiKeyHashMap;->entrySet()Ljava/util/Set;",
        "Lorg/andengine/util/adt/map/MultiKeyHashMap;->isEqualKey()Z"
    ],
    "[C": [
        "[C->clone()Ljava/lang/Object;"
    ],
    "[D": [
        "[D->clone()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/bounds/IIntBounds;": [
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getYMin()I",
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getXMax()I",
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getXMin()I",
        "Lorg/andengine/util/adt/bounds/IIntBounds;->getYMax()I"
    ],
    "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;": [
        "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;->adjacent()Z",
        "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;->contains()Z",
        "Lorg/andengine/util/adt/spatial/bounds/util/IntBoundsUtils;->intersects()Z"
    ],
    "Lorg/andengine/util/adt/bounds/IFloatBounds;": [
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getYMin()F",
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getXMax()F",
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getYMax()F",
        "Lorg/andengine/util/adt/bounds/IFloatBounds;->getXMin()F"
    ],
    "Lorg/andengine/util/adt/spatial/bounds/util/FloatBoundsUtils;": [
        "Lorg/andengine/util/adt/spatial/bounds/util/FloatBoundsUtils;->intersects()Z",
        "Lorg/andengine/util/adt/spatial/bounds/util/FloatBoundsUtils;->contains()Z"
    ],
    "Lorg/andengine/util/adt/spatial/ISpatialItem;": [
        "Lorg/andengine/util/adt/spatial/ISpatialItem;->getBounds()Lorg/andengine/util/adt/bounds/IBounds;"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;": [
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->add()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->getItemCount()I",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree;->remove()Z"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;": [
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->clear()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->access$0()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->appendBoundsToString()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->add()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->callNodes()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->contains()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->callItems()V",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->containsAny()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->getItemCount()I",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->remove()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->toString()Ljava/lang/String;",
        "Lorg/andengine/util/adt/spatial/quadtree/QuadTree$QuadTreeNode;->queryForSubclass()Ljava/util/List;"
    ],
    "Lorg/andengine/util/adt/bounds/FloatBounds;": [
        "Lorg/andengine/util/adt/bounds/FloatBounds;->set()V"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;": [
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->query()Ljava/util/ArrayList;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->query()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->getRoot()Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree;->containsAny()Z"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;": [
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getXMin()F",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getYMax()F",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getYMin()F",
        "Lorg/andengine/util/adt/spatial/quadtree/FloatQuadTree$FloatQuadTreeNode;->getXMax()F"
    ],
    "Lorg/andengine/util/adt/bounds/IntBounds;": [
        "Lorg/andengine/util/adt/bounds/IntBounds;->set()V"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;": [
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->queryForSubclass()Ljava/util/List;",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->containsAny()Z",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->getRoot()Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->query()Ljava/util/ArrayList;",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree;->query()Ljava/util/List;"
    ],
    "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;": [
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getXMax()I",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getXMin()I",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getYMax()I",
        "Lorg/andengine/util/adt/spatial/quadtree/IntQuadTree$IntQuadTreeNode;->getYMin()I"
    ],
    "Lorg/andengine/util/adt/trie/Trie$TrieNode;": [
        "Lorg/andengine/util/adt/trie/Trie$TrieNode;->add()V",
        "Lorg/andengine/util/adt/trie/Trie$TrieNode;->contains()Z"
    ],
    "Lorg/andengine/util/IMatcher;": [
        "Lorg/andengine/util/IMatcher;->matches()Z"
    ],
    "Lorg/andengine/util/adt/list/IList;": [
        "Lorg/andengine/util/adt/list/IList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->remove()Z",
        "Lorg/andengine/util/adt/list/IList;->isEmpty()Z",
        "Lorg/andengine/util/adt/list/IList;->indexOf()I",
        "Lorg/andengine/util/adt/list/IList;->size()I",
        "Lorg/andengine/util/adt/list/IList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->clear()V",
        "Lorg/andengine/util/adt/list/IList;->removeFirst()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->set()V",
        "Lorg/andengine/util/adt/list/IList;->removeLast()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/IList;->add()V"
    ],
    "Ljava/lang/Comparable;": [
        "Ljava/lang/Comparable;->compareTo()I"
    ],
    "Lorg/andengine/util/adt/list/SortedList;": [
        "Lorg/andengine/util/adt/list/SortedList;->add()V",
        "Lorg/andengine/util/adt/list/SortedList;->binarySearch()I",
        "Lorg/andengine/util/adt/list/SortedList;->removeFirst()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->scanForEqualItem()I",
        "Lorg/andengine/util/adt/list/SortedList;->indexOf()I",
        "Lorg/andengine/util/adt/list/SortedList;->remove()Z",
        "Lorg/andengine/util/adt/list/SortedList;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->removeLast()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/SortedList;->set()V"
    ],
    "Lorg/andengine/util/adt/list/ShiftList;": [
        "Lorg/andengine/util/adt/list/ShiftList;->enterShiftingRight()V",
        "Lorg/andengine/util/adt/list/ShiftList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/ShiftList;->indexOf()I",
        "Lorg/andengine/util/adt/list/ShiftList;->shift()V",
        "Lorg/andengine/util/adt/list/ShiftList;->ensureShiftableLeft()V",
        "Lorg/andengine/util/adt/list/ShiftList;->enterShiftingLeft()V",
        "Lorg/andengine/util/adt/list/ShiftList;->ensureShiftableRight()V",
        "Lorg/andengine/util/adt/list/ShiftList;->enter()V",
        "Lorg/andengine/util/adt/list/ShiftList;->size()I"
    ],
    "Lorg/andengine/util/adt/list/CircularList;": [
        "Lorg/andengine/util/adt/list/CircularList;->ensureCapacity()V",
        "Lorg/andengine/util/adt/list/CircularList;->encodeToInternalIndex()I",
        "Lorg/andengine/util/adt/list/CircularList;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/CircularList;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/list/CircularList;->size()I",
        "Lorg/andengine/util/adt/list/CircularList;->indexOf()I"
    ],
    "Lorg/andengine/util/adt/list/UniqueList;": [
        "Lorg/andengine/util/adt/list/UniqueList;->set()V",
        "Lorg/andengine/util/adt/list/UniqueList;->removeLast()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->add()V",
        "Lorg/andengine/util/adt/list/UniqueList;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->indexOf()I",
        "Lorg/andengine/util/adt/list/UniqueList;->removeFirst()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/list/UniqueList;->remove()Z"
    ],
    "Lorg/andengine/util/adt/pool/Pool;": [
        "Lorg/andengine/util/adt/pool/Pool;->ownsPoolItem()Z",
        "Lorg/andengine/util/adt/pool/Pool;->recyclePoolItem()V",
        "Lorg/andengine/util/adt/pool/Pool;->recycle()V",
        "Lorg/andengine/util/adt/pool/Pool;->onHandleRecycleItem()V",
        "Lorg/andengine/util/adt/pool/Pool;->obtainPoolItem()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/pool/Pool;->onHandleAllocatePoolItem()Lorg/andengine/util/adt/pool/PoolItem;",
        "Lorg/andengine/util/adt/pool/Pool;->onHandleObtainItem()V"
    ],
    "Lorg/andengine/util/adt/pool/PoolItem;": [
        "Lorg/andengine/util/adt/pool/PoolItem;->isRecycled()Z",
        "Lorg/andengine/util/adt/pool/PoolItem;->onObtain()V",
        "Lorg/andengine/util/adt/pool/PoolItem;->isFromPool()Z",
        "Lorg/andengine/util/adt/pool/PoolItem;->onRecycle()V"
    ],
    "Lorg/andengine/util/adt/pool/RunnablePoolItem;": [
        "Lorg/andengine/util/adt/pool/RunnablePoolItem;->run()V"
    ],
    "Lorg/andengine/util/adt/queue/IQueue;": [
        "Lorg/andengine/util/adt/queue/IQueue;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->enter()V",
        "Lorg/andengine/util/adt/queue/IQueue;->size()I",
        "Lorg/andengine/util/adt/queue/IQueue;->add()V",
        "Lorg/andengine/util/adt/queue/IQueue;->peek()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->remove()Z",
        "Lorg/andengine/util/adt/queue/IQueue;->removeFirst()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->clear()V",
        "Lorg/andengine/util/adt/queue/IQueue;->indexOf()I",
        "Lorg/andengine/util/adt/queue/IQueue;->poll()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/IQueue;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/IQueue;->set()V",
        "Lorg/andengine/util/adt/queue/IQueue;->removeLast()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/pool/PoolUpdateHandler;": [
        "Lorg/andengine/util/adt/pool/PoolUpdateHandler;->onHandlePoolItem()V"
    ],
    "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;": [
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->postPoolItem()V",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->onAllocatePoolItem()Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->obtainPoolItem()Lorg/andengine/util/adt/pool/PoolItem;",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolUpdateHandler;->scheduleDetach()V"
    ],
    "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;": [
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;->setEntity()V",
        "Lorg/andengine/util/adt/pool/EntityDetachRunnablePoolItem;->setCallback()V"
    ],
    "Lorg/andengine/util/adt/bit/IBitVector;": [
        "Lorg/andengine/util/adt/bit/IBitVector;->getShort()S",
        "Lorg/andengine/util/adt/bit/IBitVector;->getBits()I",
        "Lorg/andengine/util/adt/bit/IBitVector;->save()V",
        "Lorg/andengine/util/adt/bit/IBitVector;->getInt()I",
        "Lorg/andengine/util/adt/bit/IBitVector;->getByte()B"
    ],
    "Lorg/andengine/util/adt/bit/ByteBackedBitVector;": [
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->getByte()B",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->getLongBits()J",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->setBits()V",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->fill()V",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->getBit()I",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->setByte()V",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->setBit()V",
        "Lorg/andengine/util/adt/bit/ByteBackedBitVector;->load()Lorg/andengine/util/adt/bit/ByteBackedBitVector;"
    ],
    "Lorg/andengine/util/adt/dictionary/Dictionary;": [
        "Lorg/andengine/util/adt/dictionary/Dictionary;->getEntry()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/adt/bit/BitVector;": [
        "Lorg/andengine/util/adt/bit/BitVector;->setBitInByte()B",
        "Lorg/andengine/util/adt/bit/BitVector;->getIndexInLong()I",
        "Lorg/andengine/util/adt/bit/BitVector;->setBitsInByte()B",
        "Lorg/andengine/util/adt/bit/BitVector;->calculateLongSize()I",
        "Lorg/andengine/util/adt/bit/BitVector;->getBitsInByte()I",
        "Lorg/andengine/util/adt/bit/BitVector;->getByteIndex()I",
        "Lorg/andengine/util/adt/bit/BitVector;->getIndexInByte()I",
        "Lorg/andengine/util/adt/bit/BitVector;->getBitInByte()I",
        "Lorg/andengine/util/adt/bit/BitVector;->calculateByteSize()I"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readFully()V",
        "Ljava/io/DataInputStream;->readInt()I"
    ],
    "Lorg/andengine/util/adt/bit/LongBackedBitVector;": [
        "Lorg/andengine/util/adt/bit/LongBackedBitVector;->getLongBits()J",
        "Lorg/andengine/util/adt/bit/LongBackedBitVector;->getBit()I",
        "Lorg/andengine/util/adt/bit/LongBackedBitVector;->getBits()I"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->write()V"
    ],
    "Lorg/andengine/util/adt/queue/UniqueQueue;": [
        "Lorg/andengine/util/adt/queue/UniqueQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->remove()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->enter()V",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->add()V",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->poll()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/UniqueQueue;->peek()Ljava/lang/Comparable;"
    ],
    "Lorg/andengine/util/adt/queue/SortedQueue;": [
        "Lorg/andengine/util/adt/queue/SortedQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/SortedQueue;->add()V",
        "Lorg/andengine/util/adt/queue/SortedQueue;->poll()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/SortedQueue;->peek()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/SortedQueue;->enter()V",
        "Lorg/andengine/util/adt/queue/SortedQueue;->get()Ljava/lang/Comparable;",
        "Lorg/andengine/util/adt/queue/SortedQueue;->remove()Ljava/lang/Comparable;"
    ],
    "Lorg/andengine/util/adt/queue/CircularQueue;": [
        "Lorg/andengine/util/adt/queue/CircularQueue;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/CircularQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/CircularQueue;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/CircularQueue;->add()V"
    ],
    "Lorg/andengine/util/adt/queue/ShiftQueue;": [
        "Lorg/andengine/util/adt/queue/ShiftQueue;->remove()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/ShiftQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/queue/ShiftQueue;->add()V",
        "Lorg/andengine/util/adt/queue/ShiftQueue;->get()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;": [
        "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;->clear()V",
        "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;->put()V",
        "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;->addQueue()V",
        "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;->extract()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;->offer()Z",
        "Lorg/andengine/util/adt/queue/concurrent/PriorityBlockingAggregatorQueue;->insert()V"
    ],
    "Ljava/util/concurrent/locks/Condition;": [
        "Ljava/util/concurrent/locks/Condition;->signal()V",
        "Ljava/util/concurrent/locks/Condition;->await()V"
    ],
    "Lorg/andengine/util/adt/color/ColorPool;": [
        "Lorg/andengine/util/adt/color/ColorPool;->onAllocatePoolItem()Lorg/andengine/util/adt/color/Color;",
        "Lorg/andengine/util/adt/color/ColorPool;->onHandleRecycleItem()V"
    ],
    "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;": [
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->moveToTail()V",
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->add()Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueueNode;",
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->poll()I",
        "Lorg/andengine/util/adt/cache/IntLRUCache$IntLRUCacheQueue;->isEmpty()Z"
    ],
    "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;": [
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->moveToTail()V",
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->add()Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueueNode;",
        "Lorg/andengine/util/adt/cache/LRUCache$LRUCacheQueue;->poll()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/adt/cache/IntLRUCache;": [
        "Lorg/andengine/util/adt/cache/IntLRUCache;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->get()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->put()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->getSize()I",
        "Lorg/andengine/util/adt/cache/IntLRUCache;->clear()V"
    ],
    "Lorg/andengine/util/adt/cache/LRUCache;": [
        "Lorg/andengine/util/adt/cache/LRUCache;->getSize()I",
        "Lorg/andengine/util/adt/cache/LRUCache;->isEmpty()Z",
        "Lorg/andengine/util/adt/cache/LRUCache;->put()Ljava/lang/Object;",
        "Lorg/andengine/util/adt/cache/LRUCache;->clear()V",
        "Lorg/andengine/util/adt/cache/LRUCache;->get()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/levelstats/LevelStatsDBConnector;": [
        "Lorg/andengine/util/levelstats/LevelStatsDBConnector;->submitAsync()V"
    ],
    "Lorg/andengine/util/debug/Debug$DebugLevel;": [
        "Lorg/andengine/util/debug/Debug$DebugLevel;->ordinal()I",
        "Lorg/andengine/util/debug/Debug$DebugLevel;->values()[Lorg/andengine/util/debug/Debug$DebugLevel;",
        "Lorg/andengine/util/debug/Debug$DebugLevel;->isSameOrLessThan()Z"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->peek()Ljava/lang/Object;",
        "Ljava/util/Stack;->clear()V",
        "Ljava/util/Stack;->add()Z",
        "Ljava/util/Stack;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Stack;->size()I",
        "Ljava/util/Stack;->pop()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/debug/DebugTimer$DebugTime;": [
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->access$0()Ljava/lang/String;",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->end()V",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->begin()V",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->split()V",
        "Lorg/andengine/util/debug/DebugTimer$DebugTime;->dump()V"
    ],
    "Lorg/andengine/util/debug/DebugTimer;": [
        "Lorg/andengine/util/debug/DebugTimer;->clear()V",
        "Lorg/andengine/util/debug/DebugTimer;->dump()V"
    ],
    "Lorg/andengine/util/modifier/BaseSingleValueChangeModifier;": [
        "Lorg/andengine/util/modifier/BaseSingleValueChangeModifier;->onChangeValue()V"
    ],
    "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->getFromValue()F",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->onSetInitialValue()V",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->onSetValue()V",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->getToValue()F",
        "Lorg/andengine/util/modifier/BaseSingleValueSpanModifier;->getSecondsElapsed()F"
    ],
    "Lorg/andengine/util/modifier/BaseDurationModifier;": [
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onManagedInitialize()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/BaseDurationModifier;->onManagedUpdate()V"
    ],
    "Lorg/andengine/util/modifier/BaseDoubleValueChangeModifier;": [
        "Lorg/andengine/util/modifier/BaseDoubleValueChangeModifier;->onChangeValues()V"
    ],
    "Lorg/andengine/util/modifier/BaseQuadrupelValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseQuadrupelValueSpanModifier;->onSetInitialValues()V",
        "Lorg/andengine/util/modifier/BaseQuadrupelValueSpanModifier;->onSetValues()V"
    ],
    "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;->onSetInitialValues()V",
        "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseTripleValueSpanModifier;->onSetValues()V"
    ],
    "Lorg/andengine/util/modifier/IModifier;": [
        "Lorg/andengine/util/modifier/IModifier;->removeModifierListener()Z",
        "Lorg/andengine/util/modifier/IModifier;->isAutoUnregisterWhenFinished()Z",
        "Lorg/andengine/util/modifier/IModifier;->addModifierListener()V",
        "Lorg/andengine/util/modifier/IModifier;->isFinished()Z",
        "Lorg/andengine/util/modifier/IModifier;->onUpdate()F",
        "Lorg/andengine/util/modifier/IModifier;->getDuration()F",
        "Lorg/andengine/util/modifier/IModifier;->deepCopy()Lorg/andengine/util/modifier/IModifier;",
        "Lorg/andengine/util/modifier/IModifier;->reset()V"
    ],
    "Lorg/andengine/util/modifier/ParallelModifier;": [
        "Lorg/andengine/util/modifier/ParallelModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/ParallelModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/ParallelModifier;->assertNoNullModifier()V",
        "Lorg/andengine/util/modifier/ParallelModifier;->deepCopy()Lorg/andengine/util/modifier/ParallelModifier;"
    ],
    "Lorg/andengine/util/modifier/util/ModifierUtils;": [
        "Lorg/andengine/util/modifier/util/ModifierUtils;->getSequenceDurationOfModifier()F"
    ],
    "Lorg/andengine/util/modifier/SequenceModifier$ISubSequenceModifierListener;": [
        "Lorg/andengine/util/modifier/SequenceModifier$ISubSequenceModifierListener;->onSubSequenceStarted()V",
        "Lorg/andengine/util/modifier/SequenceModifier$ISubSequenceModifierListener;->onSubSequenceFinished()V"
    ],
    "Lorg/andengine/util/modifier/LoopModifier;": [
        "Lorg/andengine/util/modifier/LoopModifier;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/LoopModifier;->onModifierFinished()V",
        "Lorg/andengine/util/modifier/LoopModifier;->deepCopy()Lorg/andengine/util/modifier/LoopModifier;",
        "Lorg/andengine/util/modifier/LoopModifier;->assertNoNullModifier()V"
    ],
    "Lorg/andengine/util/modifier/LoopModifier$ILoopModifierListener;": [
        "Lorg/andengine/util/modifier/LoopModifier$ILoopModifierListener;->onLoopStarted()V",
        "Lorg/andengine/util/modifier/LoopModifier$ILoopModifierListener;->onLoopFinished()V"
    ],
    "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;": [
        "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;->reset()V",
        "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;->onSetValues()V",
        "Lorg/andengine/util/modifier/BaseDoubleValueSpanModifier;->onSetInitialValues()V"
    ],
    "Lorg/andengine/util/modifier/BaseModifier;": [
        "Lorg/andengine/util/modifier/BaseModifier;->addModifierListener()V"
    ],
    "Lorg/andengine/util/modifier/IModifier$IModifierListener;": [
        "Lorg/andengine/util/modifier/IModifier$IModifierListener;->onModifierStarted()V",
        "Lorg/andengine/util/modifier/IModifier$IModifierListener;->onModifierFinished()V"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuintOut;": [
        "Lorg/andengine/util/modifier/ease/EaseQuintOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBounceOut;": [
        "Lorg/andengine/util/modifier/ease/EaseBounceOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBounceIn;": [
        "Lorg/andengine/util/modifier/ease/EaseBounceIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseStrongIn;": [
        "Lorg/andengine/util/modifier/ease/EaseStrongIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCircularOut;": [
        "Lorg/andengine/util/modifier/ease/EaseCircularOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseSineOut;": [
        "Lorg/andengine/util/modifier/ease/EaseSineOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuadIn;": [
        "Lorg/andengine/util/modifier/ease/EaseQuadIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuadOut;": [
        "Lorg/andengine/util/modifier/ease/EaseQuadOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseExponentialOut;": [
        "Lorg/andengine/util/modifier/ease/EaseExponentialOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseExponentialIn;": [
        "Lorg/andengine/util/modifier/ease/EaseExponentialIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuartOut;": [
        "Lorg/andengine/util/modifier/ease/EaseQuartOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCubicIn;": [
        "Lorg/andengine/util/modifier/ease/EaseCubicIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBackIn;": [
        "Lorg/andengine/util/modifier/ease/EaseBackIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseBackOut;": [
        "Lorg/andengine/util/modifier/ease/EaseBackOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuintIn;": [
        "Lorg/andengine/util/modifier/ease/EaseQuintIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseStrongOut;": [
        "Lorg/andengine/util/modifier/ease/EaseStrongOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseSineIn;": [
        "Lorg/andengine/util/modifier/ease/EaseSineIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseElasticIn;": [
        "Lorg/andengine/util/modifier/ease/EaseElasticIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseElasticOut;": [
        "Lorg/andengine/util/modifier/ease/EaseElasticOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCubicOut;": [
        "Lorg/andengine/util/modifier/ease/EaseCubicOut;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseQuartIn;": [
        "Lorg/andengine/util/modifier/ease/EaseQuartIn;->getValue()F"
    ],
    "Lorg/andengine/util/modifier/ease/EaseCircularIn;": [
        "Lorg/andengine/util/modifier/ease/EaseCircularIn;->getValue()F"
    ],
    "Lorg/andengine/util/adt/map/IIntLookupMap;": [
        "Lorg/andengine/util/adt/map/IIntLookupMap;->value()I"
    ],
    "Lorg/andengine/util/adt/map/IntLookupMap;": [
        "Lorg/andengine/util/adt/map/IntLookupMap;->item()Ljava/lang/Object;"
    ],
    "Lorg/andengine/util/escape/UnescaperEntityMap;": [
        "Lorg/andengine/util/escape/UnescaperEntityMap;->item()Ljava/lang/CharSequence;"
    ],
    "Lorg/andengine/util/escape/Unescaper;": [
        "Lorg/andengine/util/escape/Unescaper;->unescape()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/uuid/UUIDManager;": [
        "Lorg/andengine/util/uuid/UUIDManager;->getUUID()Ljava/util/UUID;"
    ],
    "Ljava/util/Comparator;": [
        "Ljava/util/Comparator;->compare()I"
    ],
    "Lorg/andengine/util/algorithm/sort/Sorter;": [
        "Lorg/andengine/util/algorithm/sort/Sorter;->sort()V"
    ],
    "Lorg/andengine/util/algorithm/collision/TriangleCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/TriangleCollisionChecker;->checkContains()Z"
    ],
    "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;": [
        "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;->checkCollision()Z",
        "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;->checkContains()Z",
        "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;->relativeCCW()I",
        "Lorg/andengine/util/algorithm/collision/BaseCollisionChecker;->checkCollisionSub()Z"
    ],
    "Lorg/andengine/opengl/util/VertexUtils;": [
        "Lorg/andengine/opengl/util/VertexUtils;->getVertex()F"
    ],
    "Lorg/andengine/util/algorithm/path/Path;": [
        "Lorg/andengine/util/algorithm/path/Path;->getX()I",
        "Lorg/andengine/util/algorithm/path/Path;->getY()I",
        "Lorg/andengine/util/algorithm/path/Path;->set()V",
        "Lorg/andengine/util/algorithm/path/Path;->getLength()I"
    ],
    "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder;": [
        "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder;->findPath()Lorg/andengine/util/algorithm/path/Path;"
    ],
    "Lorg/andengine/util/algorithm/path/IPathFinderMap;": [
        "Lorg/andengine/util/algorithm/path/IPathFinderMap;->isBlocked()Z"
    ],
    "Lorg/andengine/util/algorithm/path/astar/IAStarHeuristic;": [
        "Lorg/andengine/util/algorithm/path/astar/IAStarHeuristic;->getExpectedRestCost()F"
    ],
    "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder$Node;": [
        "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder$Node;->calculateID()J",
        "Lorg/andengine/util/algorithm/path/astar/AStarPathFinder$Node;->setParent()V"
    ],
    "Lorg/andengine/util/algorithm/path/ICostFunction;": [
        "Lorg/andengine/util/algorithm/path/ICostFunction;->getCost()F"
    ],
    "Lorg/andengine/util/algorithm/path/IPathFinder$IPathFinderListener;": [
        "Lorg/andengine/util/algorithm/path/IPathFinder$IPathFinderListener;->onVisited()V"
    ],
    "Lorg/andengine/util/algorithm/hull/HullUtils;": [
        "Lorg/andengine/util/algorithm/hull/HullUtils;->swap()V",
        "Lorg/andengine/util/algorithm/hull/HullUtils;->indexOfLowestVertex()I"
    ],
    "Lorg/andengine/util/algorithm/hull/JarvisMarch;": [
        "Lorg/andengine/util/algorithm/hull/JarvisMarch;->jarvisMarch()I"
    ],
    "Lorg/andengine/util/preferences/SecureSharedPreferences;": [
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->edit()Lorg/andengine/util/preferences/SecureSharedPreferences$Editor;",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->getIvParameterSpec()Ljavax/crypto/spec/IvParameterSpec;",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->crypt()[B",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->encrypt()Ljava/lang/String;",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->getSecretKeySpec()Ljavax/crypto/spec/SecretKeySpec;",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->encryptKey()Ljava/lang/String;",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->decryptValue()Ljava/lang/String;",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->createKeyBytes()[B",
        "Lorg/andengine/util/preferences/SecureSharedPreferences;->decrypt()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/progress/IProgressListener;": [
        "Lorg/andengine/util/progress/IProgressListener;->onProgressChanged()V"
    ],
    "Lorg/andengine/util/progress/ProgressMonitor;": [
        "Lorg/andengine/util/progress/ProgressMonitor;->addProgressListener()V",
        "Lorg/andengine/util/progress/ProgressMonitor;->removeProgressListener()V"
    ],
    "Lorg/andengine/util/level/IEntityLoader;": [
        "Lorg/andengine/util/level/IEntityLoader;->onLoadEntity()Lorg/andengine/entity/IEntity;",
        "Lorg/andengine/util/level/IEntityLoader;->getEntityNames()[Ljava/lang/String;"
    ],
    "Lorg/andengine/util/level/IEntityLoaderListener;": [
        "Lorg/andengine/util/level/IEntityLoaderListener;->onEntityLoaded()V"
    ],
    "Lorg/andengine/util/level/LevelLoader;": [
        "Lorg/andengine/util/level/LevelLoader;->onCreateLevelLoaderContentHandler()Lorg/andengine/util/level/LevelLoaderContentHandler;",
        "Lorg/andengine/util/level/LevelLoader;->loadLevelFromAsset()Lorg/andengine/util/level/ILevelLoaderResult;",
        "Lorg/andengine/util/level/LevelLoader;->loadLevelFromStream()Lorg/andengine/util/level/ILevelLoaderResult;",
        "Lorg/andengine/util/level/LevelLoader;->onCreateEntityLoaderData()Lorg/andengine/util/level/IEntityLoaderData;"
    ],
    "Ljavax/xml/parsers/SAXParserFactory;": [
        "Ljavax/xml/parsers/SAXParserFactory;->newSAXParser()Ljavax/xml/parsers/SAXParser;",
        "Ljavax/xml/parsers/SAXParserFactory;->newInstance()Ljavax/xml/parsers/SAXParserFactory;"
    ],
    "Ljavax/xml/parsers/SAXParser;": [
        "Ljavax/xml/parsers/SAXParser;->getXMLReader()Lorg/xml/sax/XMLReader;"
    ],
    "Lorg/xml/sax/XMLReader;": [
        "Lorg/xml/sax/XMLReader;->setContentHandler()V",
        "Lorg/xml/sax/XMLReader;->parse()V"
    ],
    "Lorg/andengine/util/level/LevelLoaderContentHandler;": [
        "Lorg/andengine/util/level/LevelLoaderContentHandler;->getLevelLoaderResult()Lorg/andengine/util/level/ILevelLoaderResult;"
    ],
    "Lorg/andengine/util/level/simple/SimpleLevelLoader;": [
        "Lorg/andengine/util/level/simple/SimpleLevelLoader;->onCreateLevelLoaderContentHandler()Lorg/andengine/util/level/simple/SimpleLevelLoaderContentHandler;",
        "Lorg/andengine/util/level/simple/SimpleLevelLoader;->onCreateEntityLoaderData()Lorg/andengine/util/level/simple/SimpleLevelEntityLoaderData;"
    ],
    "Lorg/andengine/util/level/simple/SimpleLevelLoaderContentHandler;": [
        "Lorg/andengine/util/level/simple/SimpleLevelLoaderContentHandler;->getLevelLoaderResult()Lorg/andengine/util/level/simple/SimpleLevelLoaderResult;"
    ],
    "Lorg/andengine/util/texturepack/TexturePackTextureRegion;": [
        "Lorg/andengine/util/texturepack/TexturePackTextureRegion;->getTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegion;->getSource()Ljava/lang/String;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegion;->getID()I"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegionLibrary;": [
        "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegionLibrary;->put()V"
    ],
    "Lorg/andengine/util/texturepack/TexturePackLoader;": [
        "Lorg/andengine/util/texturepack/TexturePackLoader;->loadFromAsset()Lorg/andengine/util/texturepack/TexturePack;",
        "Lorg/andengine/util/texturepack/TexturePackLoader;->load()Lorg/andengine/util/texturepack/TexturePack;"
    ],
    "Lorg/andengine/util/texturepack/TexturePackLibrary;": [
        "Lorg/andengine/util/texturepack/TexturePackLibrary;->put()V",
        "Lorg/andengine/util/texturepack/TexturePackLibrary;->getTexturePackTextureRegion()Lorg/andengine/util/texturepack/TexturePackTextureRegion;"
    ],
    "Lorg/andengine/util/texturepack/TexturePack;": [
        "Lorg/andengine/util/texturepack/TexturePack;->loadTexture()V",
        "Lorg/andengine/util/texturepack/TexturePack;->getTexturePackTextureRegionLibrary()Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegion;": [
        "Lorg/andengine/util/animationpack/AnimationPackTiledTextureRegion;->getAnimationName()Ljava/lang/String;"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackParser;": [
        "Lorg/andengine/util/animationpack/AnimationPackParser;->getAnimationPack()Lorg/andengine/util/animationpack/AnimationPack;"
    ],
    "Lorg/andengine/util/animationpack/AnimationPackLoader;": [
        "Lorg/andengine/util/animationpack/AnimationPackLoader;->load()Lorg/andengine/util/animationpack/AnimationPack;"
    ],
    "Lorg/andengine/util/texturepack/TexturePackParser;": [
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseMagFilter()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseMinFilter()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseWrap()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseTextureOptions()Lorg/andengine/opengl/texture/TextureOptions;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parsePixelFormat()Lorg/andengine/opengl/texture/PixelFormat;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseWrapT()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->getTexturePack()Lorg/andengine/util/texturepack/TexturePack;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseWrapS()I",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parseTexture()Lorg/andengine/opengl/texture/ITexture;",
        "Lorg/andengine/util/texturepack/TexturePackParser;->parsePremultiplyalpha()Z"
    ],
    "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;": [
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->getSourceMapping()Ljava/util/HashMap;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->put()V",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->get()Lorg/andengine/util/texturepack/TexturePackTextureRegion;",
        "Lorg/andengine/util/texturepack/TexturePackTextureRegionLibrary;->throwOnCollision()V"
    ],
    "Landroid/support/v4/util/MapCollections;": [
        "Landroid/support/v4/util/MapCollections;->getKeySet()Ljava/util/Set;",
        "Landroid/support/v4/util/MapCollections;->removeAllHelper()Z",
        "Landroid/support/v4/util/MapCollections;->colGetSize()I",
        "Landroid/support/v4/util/MapCollections;->getValues()Ljava/util/Collection;",
        "Landroid/support/v4/util/MapCollections;->containsAllHelper()Z",
        "Landroid/support/v4/util/MapCollections;->getEntrySet()Ljava/util/Set;",
        "Landroid/support/v4/util/MapCollections;->colGetEntry()Ljava/lang/Object;",
        "Landroid/support/v4/util/MapCollections;->retainAllHelper()Z"
    ],
    "Landroid/support/v4/util/ArrayMap;": [
        "Landroid/support/v4/util/ArrayMap;->put()Ljava/lang/Object;",
        "Landroid/support/v4/util/ArrayMap;->ensureCapacity()V",
        "Landroid/support/v4/util/ArrayMap;->getCollection()Landroid/support/v4/util/MapCollections;"
    ],
    "Ljava/io/FileDescriptor;": [
        "Ljava/io/FileDescriptor;->sync()V"
    ],
    "Landroid/support/v4/util/AtomicFile;": [
        "Landroid/support/v4/util/AtomicFile;->sync()Z",
        "Landroid/support/v4/util/AtomicFile;->openRead()Ljava/io/FileInputStream;"
    ],
    "Landroid/support/v4/util/LruCache;": [
        "Landroid/support/v4/util/LruCache;->sizeOf()I",
        "Landroid/support/v4/util/LruCache;->safeSizeOf()I",
        "Landroid/support/v4/util/LruCache;->create()Ljava/lang/Object;",
        "Landroid/support/v4/util/LruCache;->entryRemoved()V",
        "Landroid/support/v4/util/LruCache;->trimToSize()V"
    ],
    "Landroid/support/v4/util/ContainerHelpers;": [
        "Landroid/support/v4/util/ContainerHelpers;->idealLongArraySize()I",
        "Landroid/support/v4/util/ContainerHelpers;->idealByteArraySize()I",
        "Landroid/support/v4/util/ContainerHelpers;->binarySearch()I",
        "Landroid/support/v4/util/ContainerHelpers;->idealIntArraySize()I"
    ],
    "Landroid/support/v4/util/LongSparseArray;": [
        "Landroid/support/v4/util/LongSparseArray;->clone()Landroid/support/v4/util/LongSparseArray;",
        "Landroid/support/v4/util/LongSparseArray;->size()I",
        "Landroid/support/v4/util/LongSparseArray;->put()V",
        "Landroid/support/v4/util/LongSparseArray;->delete()V",
        "Landroid/support/v4/util/LongSparseArray;->gc()V",
        "Landroid/support/v4/util/LongSparseArray;->get()Ljava/lang/Object;",
        "Landroid/support/v4/util/LongSparseArray;->valueAt()Ljava/lang/Object;",
        "Landroid/support/v4/util/LongSparseArray;->keyAt()J"
    ],
    "[Ljava/lang/Object;": [
        "[Ljava/lang/Object;->clone()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/util/SimpleArrayMap;": [
        "Landroid/support/v4/util/SimpleArrayMap;->size()I",
        "Landroid/support/v4/util/SimpleArrayMap;->get()Ljava/lang/Object;",
        "Landroid/support/v4/util/SimpleArrayMap;->isEmpty()Z",
        "Landroid/support/v4/util/SimpleArrayMap;->allocArrays()V",
        "Landroid/support/v4/util/SimpleArrayMap;->ensureCapacity()V",
        "Landroid/support/v4/util/SimpleArrayMap;->put()Ljava/lang/Object;",
        "Landroid/support/v4/util/SimpleArrayMap;->indexOfNull()I",
        "Landroid/support/v4/util/SimpleArrayMap;->removeAt()Ljava/lang/Object;",
        "Landroid/support/v4/util/SimpleArrayMap;->remove()Ljava/lang/Object;",
        "Landroid/support/v4/util/SimpleArrayMap;->putAll()V",
        "Landroid/support/v4/util/SimpleArrayMap;->keyAt()Ljava/lang/Object;",
        "Landroid/support/v4/util/SimpleArrayMap;->indexOf()I",
        "Landroid/support/v4/util/SimpleArrayMap;->valueAt()Ljava/lang/Object;",
        "Landroid/support/v4/util/SimpleArrayMap;->freeArrays()V",
        "Landroid/support/v4/util/SimpleArrayMap;->indexOfValue()I"
    ],
    "Landroid/support/v4/util/LogWriter;": [
        "Landroid/support/v4/util/LogWriter;->flushBuilder()V"
    ],
    "Landroid/support/v4/util/SparseArrayCompat;": [
        "Landroid/support/v4/util/SparseArrayCompat;->gc()V",
        "Landroid/support/v4/util/SparseArrayCompat;->clone()Landroid/support/v4/util/SparseArrayCompat;",
        "Landroid/support/v4/util/SparseArrayCompat;->clear()V",
        "Landroid/support/v4/util/SparseArrayCompat;->get()Ljava/lang/Object;",
        "Landroid/support/v4/util/SparseArrayCompat;->delete()V",
        "Landroid/support/v4/util/SparseArrayCompat;->indexOfKey()I",
        "Landroid/support/v4/util/SparseArrayCompat;->put()V",
        "Landroid/support/v4/util/SparseArrayCompat;->keyAt()I",
        "Landroid/support/v4/util/SparseArrayCompat;->valueAt()Ljava/lang/Object;",
        "Landroid/support/v4/util/SparseArrayCompat;->size()I",
        "Landroid/support/v4/util/SparseArrayCompat;->removeAt()V"
    ],
    "Ljava/io/PrintWriter;": [
        "Ljava/io/PrintWriter;->print()V",
        "Ljava/io/PrintWriter;->println()V"
    ],
    "Landroid/support/v4/util/TimeUtils;": [
        "Landroid/support/v4/util/TimeUtils;->accumField()I",
        "Landroid/support/v4/util/TimeUtils;->formatDurationLocked()I",
        "Landroid/support/v4/util/TimeUtils;->printField()I",
        "Landroid/support/v4/util/TimeUtils;->formatDuration()V"
    ],
    "Landroid/accessibilityservice/AccessibilityServiceInfo;": [
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getCapabilities()I",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getSettingsActivityName()Ljava/lang/String;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getResolveInfo()Landroid/content/pm/ResolveInfo;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getCanRetrieveWindowContent()Z",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getDescription()Ljava/lang/String;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getId()Ljava/lang/String;"
    ],
    "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;": [
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getCanRetrieveWindowContent()Z",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getDescription()Ljava/lang/String;",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getId()Ljava/lang/String;",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getCapabilities()I",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getResolveInfo()Landroid/content/pm/ResolveInfo;",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getSettingsActivityName()Ljava/lang/String;"
    ],
    "Landroid/support/v4/content/ContextCompatKitKat;": [
        "Landroid/support/v4/content/ContextCompatKitKat;->getExternalCacheDirs()[Ljava/io/File;",
        "Landroid/support/v4/content/ContextCompatKitKat;->getExternalFilesDirs()[Ljava/io/File;",
        "Landroid/support/v4/content/ContextCompatKitKat;->getObbDirs()[Ljava/io/File;"
    ],
    "Landroid/support/v4/content/ContextCompatFroyo;": [
        "Landroid/support/v4/content/ContextCompatFroyo;->getExternalCacheDir()Ljava/io/File;",
        "Landroid/support/v4/content/ContextCompatFroyo;->getExternalFilesDir()Ljava/io/File;"
    ],
    "Landroid/support/v4/content/ContextCompat;": [
        "Landroid/support/v4/content/ContextCompat;->startActivities()Z",
        "Landroid/support/v4/content/ContextCompat;->buildPath()Ljava/io/File;"
    ],
    "Landroid/support/v4/content/ContextCompatHoneycomb;": [
        "Landroid/support/v4/content/ContextCompatHoneycomb;->getObbDir()Ljava/io/File;",
        "Landroid/support/v4/content/ContextCompatHoneycomb;->startActivities()V"
    ],
    "Landroid/support/v4/content/ContextCompatJellybean;": [
        "Landroid/support/v4/content/ContextCompatJellybean;->startActivities()V"
    ],
    "Landroid/support/v4/content/Loader;": [
        "Landroid/support/v4/content/Loader;->onReset()V",
        "Landroid/support/v4/content/Loader;->forceLoad()V",
        "Landroid/support/v4/content/Loader;->onStartLoading()V",
        "Landroid/support/v4/content/Loader;->onAbandon()V",
        "Landroid/support/v4/content/Loader;->dump()V",
        "Landroid/support/v4/content/Loader;->onStopLoading()V",
        "Landroid/support/v4/content/Loader;->onForceLoad()V",
        "Landroid/support/v4/content/Loader;->abandon()V"
    ],
    "Landroid/support/v4/util/DebugUtils;": [
        "Landroid/support/v4/util/DebugUtils;->buildShortClassTag()V"
    ],
    "Landroid/support/v4/content/Loader$OnLoadCompleteListener;": [
        "Landroid/support/v4/content/Loader$OnLoadCompleteListener;->onLoadComplete()V"
    ],
    "Landroid/support/v4/content/ModernAsyncTask;": [
        "Landroid/support/v4/content/ModernAsyncTask;->executeOnExecutor()Landroid/support/v4/content/ModernAsyncTask;",
        "Landroid/support/v4/content/ModernAsyncTask;->finish()V",
        "Landroid/support/v4/content/ModernAsyncTask;->onPostExecute()V",
        "Landroid/support/v4/content/ModernAsyncTask;->onPreExecute()V",
        "Landroid/support/v4/content/ModernAsyncTask;->postResult()Ljava/lang/Object;",
        "Landroid/support/v4/content/ModernAsyncTask;->onCancelled()V",
        "Landroid/support/v4/content/ModernAsyncTask;->postResultIfNotInvoked()V",
        "Landroid/support/v4/content/ModernAsyncTask;->isCancelled()Z"
    ],
    "Ljava/util/concurrent/Executor;": [
        "Ljava/util/concurrent/Executor;->execute()V"
    ],
    "Landroid/support/v4/content/ModernAsyncTask$InternalHandler;": [
        "Landroid/support/v4/content/ModernAsyncTask$InternalHandler;->obtainMessage()Landroid/os/Message;",
        "Landroid/support/v4/content/ModernAsyncTask$InternalHandler;->getLooper()Landroid/os/Looper;"
    ],
    "Ljava/util/concurrent/atomic/AtomicBoolean;": [
        "Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z"
    ],
    "Ljava/util/concurrent/FutureTask;": [
        "Ljava/util/concurrent/FutureTask;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/FutureTask;->cancel()Z",
        "Ljava/util/concurrent/FutureTask;->isCancelled()Z"
    ],
    "Landroid/support/v4/content/ModernAsyncTask$Status;": [
        "Landroid/support/v4/content/ModernAsyncTask$Status;->ordinal()I"
    ],
    "Landroid/support/v4/content/FileProvider;": [
        "Landroid/support/v4/content/FileProvider;->copyOf()[Ljava/lang/String;",
        "Landroid/support/v4/content/FileProvider;->parsePathStrategy()Landroid/support/v4/content/FileProvider$PathStrategy;",
        "Landroid/support/v4/content/FileProvider;->buildPath()Ljava/io/File;",
        "Landroid/support/v4/content/FileProvider;->copyOf()[Ljava/lang/Object;",
        "Landroid/support/v4/content/FileProvider;->modeToMode()I",
        "Landroid/support/v4/content/FileProvider;->getPathStrategy()Landroid/support/v4/content/FileProvider$PathStrategy;"
    ],
    "Landroid/support/v4/content/FileProvider$PathStrategy;": [
        "Landroid/support/v4/content/FileProvider$PathStrategy;->getFileForUri()Ljava/io/File;",
        "Landroid/support/v4/content/FileProvider$PathStrategy;->getUriForFile()Landroid/net/Uri;"
    ],
    "Landroid/content/pm/ProviderInfo;": [
        "Landroid/content/pm/ProviderInfo;->loadXmlMetaData()Landroid/content/res/XmlResourceParser;"
    ],
    "Landroid/support/v4/content/FileProvider$SimplePathStrategy;": [
        "Landroid/support/v4/content/FileProvider$SimplePathStrategy;->addRoot()V"
    ],
    "Landroid/content/ContentProvider;": [
        "Landroid/content/ContentProvider;->attachInfo()V"
    ],
    "Landroid/webkit/MimeTypeMap;": [
        "Landroid/webkit/MimeTypeMap;->getMimeTypeFromExtension()Ljava/lang/String;",
        "Landroid/webkit/MimeTypeMap;->getSingleton()Landroid/webkit/MimeTypeMap;"
    ],
    "Landroid/database/MatrixCursor;": [
        "Landroid/database/MatrixCursor;->addRow()V"
    ],
    "Landroid/support/v4/content/IntentCompat$IntentCompatImpl;": [
        "Landroid/support/v4/content/IntentCompat$IntentCompatImpl;->makeRestartActivityTask()Landroid/content/Intent;",
        "Landroid/support/v4/content/IntentCompat$IntentCompatImpl;->makeMainSelectorActivity()Landroid/content/Intent;",
        "Landroid/support/v4/content/IntentCompat$IntentCompatImpl;->makeMainActivity()Landroid/content/Intent;"
    ],
    "Landroid/support/v4/content/LocalBroadcastManager;": [
        "Landroid/support/v4/content/LocalBroadcastManager;->sendBroadcast()Z",
        "Landroid/support/v4/content/LocalBroadcastManager;->executePendingBroadcasts()V"
    ],
    "Landroid/content/BroadcastReceiver;": [
        "Landroid/content/BroadcastReceiver;->onReceive()V"
    ],
    "Landroid/support/v4/content/CursorLoader;": [
        "Landroid/support/v4/content/CursorLoader;->onCanceled()V",
        "Landroid/support/v4/content/CursorLoader;->deliverResult()V",
        "Landroid/support/v4/content/CursorLoader;->isStarted()Z",
        "Landroid/support/v4/content/CursorLoader;->loadInBackground()Landroid/database/Cursor;",
        "Landroid/support/v4/content/CursorLoader;->forceLoad()V",
        "Landroid/support/v4/content/CursorLoader;->cancelLoad()Z",
        "Landroid/support/v4/content/CursorLoader;->isReset()Z",
        "Landroid/support/v4/content/CursorLoader;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/content/CursorLoader;->onStopLoading()V",
        "Landroid/support/v4/content/CursorLoader;->takeContentChanged()Z"
    ],
    "Landroid/support/v4/content/AsyncTaskLoader;": [
        "Landroid/support/v4/content/AsyncTaskLoader;->cancelLoad()Z",
        "Landroid/support/v4/content/AsyncTaskLoader;->onReset()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->dump()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->onCanceled()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->rollbackContentChanged()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->executePendingTask()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->isAbandoned()Z",
        "Landroid/support/v4/content/AsyncTaskLoader;->deliverResult()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->dispatchOnCancelled()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->loadInBackground()Ljava/lang/Object;",
        "Landroid/support/v4/content/AsyncTaskLoader;->commitContentChanged()V"
    ],
    "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;": [
        "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;->access$000()Ljava/util/concurrent/CountDownLatch;",
        "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;->cancel()Z",
        "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;->executeOnExecutor()Landroid/support/v4/content/ModernAsyncTask;"
    ],
    "Ljava/util/concurrent/CountDownLatch;": [
        "Ljava/util/concurrent/CountDownLatch;->await()V"
    ],
    "Landroid/support/v4/text/BidiFormatter;": [
        "Landroid/support/v4/text/BidiFormatter;->unicodeWrap()Ljava/lang/String;",
        "Landroid/support/v4/text/BidiFormatter;->markAfter()Ljava/lang/String;",
        "Landroid/support/v4/text/BidiFormatter;->getStereoReset()Z",
        "Landroid/support/v4/text/BidiFormatter;->getExitDir()I",
        "Landroid/support/v4/text/BidiFormatter;->isRtlLocale()Z",
        "Landroid/support/v4/text/BidiFormatter;->markBefore()Ljava/lang/String;",
        "Landroid/support/v4/text/BidiFormatter;->getEntryDir()I"
    ],
    "Landroid/support/v4/text/BidiFormatter$DirectionalityEstimator;": [
        "Landroid/support/v4/text/BidiFormatter$DirectionalityEstimator;->getExitDir()I",
        "Landroid/support/v4/text/BidiFormatter$DirectionalityEstimator;->getEntryDir()I"
    ],
    "Landroid/support/v4/text/BidiFormatter$Builder;": [
        "Landroid/support/v4/text/BidiFormatter$Builder;->build()Landroid/support/v4/text/BidiFormatter;"
    ],
    "Landroid/support/v4/text/TextUtilsCompat;": [
        "Landroid/support/v4/text/TextUtilsCompat;->getLayoutDirectionFromFirstChar()I",
        "Landroid/support/v4/text/TextUtilsCompat;->getLayoutDirectionFromLocale()I"
    ],
    "Landroid/support/v4/text/TextDirectionHeuristicCompat;": [
        "Landroid/support/v4/text/TextDirectionHeuristicCompat;->isRtl()Z"
    ],
    "Landroid/support/v4/text/ICUCompat;": [
        "Landroid/support/v4/text/ICUCompat;->getScript()Ljava/lang/String;",
        "Landroid/support/v4/text/ICUCompat;->addLikelySubtags()Ljava/lang/String;"
    ],
    "Landroid/support/v4/text/TextDirectionHeuristicsCompat;": [
        "Landroid/support/v4/text/TextDirectionHeuristicsCompat;->isRtlTextOrFormat()I",
        "Landroid/support/v4/text/TextDirectionHeuristicsCompat;->isRtlText()I"
    ],
    "Landroid/support/v4/text/ICUCompat$ICUCompatImpl;": [
        "Landroid/support/v4/text/ICUCompat$ICUCompatImpl;->getScript()Ljava/lang/String;",
        "Landroid/support/v4/text/ICUCompat$ICUCompatImpl;->addLikelySubtags()Ljava/lang/String;"
    ],
    "Landroid/support/v4/print/PrintHelper;": [
        "Landroid/support/v4/print/PrintHelper;->systemSupportsPrint()Z"
    ],
    "Landroid/support/v4/print/PrintHelper$PrintHelperVersionImpl;": [
        "Landroid/support/v4/print/PrintHelper$PrintHelperVersionImpl;->setScaleMode()V",
        "Landroid/support/v4/print/PrintHelper$PrintHelperVersionImpl;->getColorMode()I",
        "Landroid/support/v4/print/PrintHelper$PrintHelperVersionImpl;->setColorMode()V",
        "Landroid/support/v4/print/PrintHelper$PrintHelperVersionImpl;->printBitmap()V",
        "Landroid/support/v4/print/PrintHelper$PrintHelperVersionImpl;->getScaleMode()I"
    ],
    "Landroid/support/v4/print/PrintHelperKitkat;": [
        "Landroid/support/v4/print/PrintHelperKitkat;->loadBitmap()Landroid/graphics/Bitmap;",
        "Landroid/support/v4/print/PrintHelperKitkat;->printBitmap()V",
        "Landroid/support/v4/print/PrintHelperKitkat;->loadConstrainedBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/print/PrintAttributes$Builder;": [
        "Landroid/print/PrintAttributes$Builder;->setColorMode()Landroid/print/PrintAttributes$Builder;",
        "Landroid/print/PrintAttributes$Builder;->setMediaSize()Landroid/print/PrintAttributes$Builder;",
        "Landroid/print/PrintAttributes$Builder;->build()Landroid/print/PrintAttributes;"
    ],
    "Landroid/print/PrintManager;": [
        "Landroid/print/PrintManager;->print()Landroid/print/PrintJob;"
    ],
    "Landroid/support/v4/graphics/drawable/DrawableCompat$DrawableImpl;": [
        "Landroid/support/v4/graphics/drawable/DrawableCompat$DrawableImpl;->setAutoMirrored()V",
        "Landroid/support/v4/graphics/drawable/DrawableCompat$DrawableImpl;->jumpToCurrentState()V",
        "Landroid/support/v4/graphics/drawable/DrawableCompat$DrawableImpl;->isAutoMirrored()Z"
    ],
    "Landroid/support/v4/widget/ExploreByTouchHelper;": [
        "Landroid/support/v4/widget/ExploreByTouchHelper;->invalidateVirtualView()V",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->performActionForChild()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->isAccessibilityFocused()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->getVisibleVirtualViews()V",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->createNode()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->onPopulateEventForVirtualView()V",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->intersectVisibleToUser()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->sendEventForVirtualView()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->createEventForHost()Landroid/view/accessibility/AccessibilityEvent;",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->createNodeForChild()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->getVirtualViewAt()I",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->createEvent()Landroid/view/accessibility/AccessibilityEvent;",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->requestAccessibilityFocus()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->performAction()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->performActionForHost()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->onPerformActionForVirtualView()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->createEventForChild()Landroid/view/accessibility/AccessibilityEvent;",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->updateHoveredVirtualView()V",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->clearAccessibilityFocus()Z",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->createNodeForHost()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->onPopulateNodeForVirtualView()V",
        "Landroid/support/v4/widget/ExploreByTouchHelper;->manageFocusForChild()Z"
    ],
    "Landroid/view/accessibility/AccessibilityEvent;": [
        "Landroid/view/accessibility/AccessibilityEvent;->getText()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityEvent;->getRecord()Landroid/view/accessibility/AccessibilityRecord;",
        "Landroid/view/accessibility/AccessibilityEvent;->getRecordCount()I",
        "Landroid/view/accessibility/AccessibilityEvent;->setPackageName()V",
        "Landroid/view/accessibility/AccessibilityEvent;->setClassName()V",
        "Landroid/view/accessibility/AccessibilityEvent;->setEnabled()V",
        "Landroid/view/accessibility/AccessibilityEvent;->appendRecord()V",
        "Landroid/view/accessibility/AccessibilityEvent;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityEvent;->getEventType()I",
        "Landroid/view/accessibility/AccessibilityEvent;->obtain()Landroid/view/accessibility/AccessibilityEvent;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityEventCompat;": [
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat;->asRecord()Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;": [
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;->setSource()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;->getImpl()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/ViewCompat;": [
        "Landroid/support/v4/view/ViewCompat;->setAccessibilityDelegate()V",
        "Landroid/support/v4/view/ViewCompat;->getLayerType()I",
        "Landroid/support/v4/view/ViewCompat;->getAlpha()F",
        "Landroid/support/v4/view/ViewCompat;->performAccessibilityAction()Z",
        "Landroid/support/v4/view/ViewCompat;->postInvalidateOnAnimation()V",
        "Landroid/support/v4/view/ViewCompat;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/support/v4/view/ViewCompat;->setLayerType()V",
        "Landroid/support/v4/view/ViewCompat;->getOverScrollMode()I",
        "Landroid/support/v4/view/ViewCompat;->postOnAnimationDelayed()V",
        "Landroid/support/v4/view/ViewCompat;->canScrollVertically()Z",
        "Landroid/support/v4/view/ViewCompat;->canScrollHorizontally()Z",
        "Landroid/support/v4/view/ViewCompat;->getLayoutDirection()I",
        "Landroid/support/v4/view/ViewCompat;->isOpaque()Z",
        "Landroid/support/v4/view/ViewCompat;->getImportantForAccessibility()I",
        "Landroid/support/v4/view/ViewCompat;->setImportantForAccessibility()V",
        "Landroid/support/v4/view/ViewCompat;->onInitializeAccessibilityEvent()V",
        "Landroid/support/v4/view/ViewCompat;->postOnAnimation()V"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;": [
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getPackageName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setPackageName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->obtain()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isFocused()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setEnabled()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getActionSymbolicName()Ljava/lang/String;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isClickable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->addAction()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isPassword()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setBoundsInScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getViewIdResourceName()Ljava/lang/String;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isChecked()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isFocusable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isScrollable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->addChild()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getBoundsInScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isSelected()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isCheckable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->wrapNonNullInstance()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getBoundsInParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setVisibleToUser()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->isLongClickable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setAccessibilityFocused()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->getActions()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setClassName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setBoundsInParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->setSource()V"
    ],
    "Landroid/view/accessibility/AccessibilityManager;": [
        "Landroid/view/accessibility/AccessibilityManager;->addAccessibilityStateChangeListener()Z",
        "Landroid/view/accessibility/AccessibilityManager;->getEnabledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityManager;->isTouchExplorationEnabled()Z",
        "Landroid/view/accessibility/AccessibilityManager;->getInstalledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityManager;->isEnabled()Z",
        "Landroid/view/accessibility/AccessibilityManager;->removeAccessibilityStateChangeListener()Z"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat;": [
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat;->isTouchExplorationEnabled()Z"
    ],
    "Landroid/support/v4/view/ViewParentCompat;": [
        "Landroid/support/v4/view/ViewParentCompat;->requestSendAccessibilityEvent()Z"
    ],
    "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;": [
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->changeCursor()V",
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->getCursor()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->runQueryOnBackgroundThread()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->convertToString()Ljava/lang/CharSequence;"
    ],
    "Landroid/view/ViewConfiguration;": [
        "Landroid/view/ViewConfiguration;->get()Landroid/view/ViewConfiguration;",
        "Landroid/view/ViewConfiguration;->getScaledMinimumFlingVelocity()I",
        "Landroid/view/ViewConfiguration;->getScaledMaximumFlingVelocity()I",
        "Landroid/view/ViewConfiguration;->getTapTimeout()I",
        "Landroid/view/ViewConfiguration;->getScaledPagingTouchSlop()I",
        "Landroid/view/ViewConfiguration;->getScaledTouchSlop()I"
    ],
    "Landroid/support/v4/widget/ScrollerCompat;": [
        "Landroid/support/v4/widget/ScrollerCompat;->abortAnimation()V",
        "Landroid/support/v4/widget/ScrollerCompat;->isFinished()Z",
        "Landroid/support/v4/widget/ScrollerCompat;->startScroll()V",
        "Landroid/support/v4/widget/ScrollerCompat;->getCurrY()I",
        "Landroid/support/v4/widget/ScrollerCompat;->fling()V",
        "Landroid/support/v4/widget/ScrollerCompat;->computeScrollOffset()Z",
        "Landroid/support/v4/widget/ScrollerCompat;->getFinalY()I",
        "Landroid/support/v4/widget/ScrollerCompat;->getCurrX()I",
        "Landroid/support/v4/widget/ScrollerCompat;->create()Landroid/support/v4/widget/ScrollerCompat;",
        "Landroid/support/v4/widget/ScrollerCompat;->getFinalX()I"
    ],
    "Landroid/support/v4/widget/ViewDragHelper$Callback;": [
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onViewDragStateChanged()V",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onViewReleased()V",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->clampViewPositionHorizontal()I",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->getViewVerticalDragRange()I",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onViewCaptured()V",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->getViewHorizontalDragRange()I",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onEdgeDragStarted()V",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->getOrderedChildIndex()I",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onEdgeLock()Z",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onViewPositionChanged()V",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->tryCaptureView()Z",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->clampViewPositionVertical()I",
        "Landroid/support/v4/widget/ViewDragHelper$Callback;->onEdgeTouched()V"
    ],
    "Landroid/support/v4/widget/ViewDragHelper;": [
        "Landroid/support/v4/widget/ViewDragHelper;->processTouchEvent()V",
        "Landroid/support/v4/widget/ViewDragHelper;->isPointerDown()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->forceSettleCapturedViewAt()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->checkTouchSlop()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->computeSettleDuration()I",
        "Landroid/support/v4/widget/ViewDragHelper;->getViewDragState()I",
        "Landroid/support/v4/widget/ViewDragHelper;->isEdgeTouched()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->clearMotionHistory()V",
        "Landroid/support/v4/widget/ViewDragHelper;->clampMag()I",
        "Landroid/support/v4/widget/ViewDragHelper;->isViewUnder()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->ensureMotionHistorySizeForId()V",
        "Landroid/support/v4/widget/ViewDragHelper;->setMinVelocity()V",
        "Landroid/support/v4/widget/ViewDragHelper;->isCapturedViewUnder()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->dragTo()V",
        "Landroid/support/v4/widget/ViewDragHelper;->dispatchViewReleased()V",
        "Landroid/support/v4/widget/ViewDragHelper;->clampMag()F",
        "Landroid/support/v4/widget/ViewDragHelper;->smoothSlideViewTo()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->computeAxisDuration()I",
        "Landroid/support/v4/widget/ViewDragHelper;->continueSettling()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->reportNewEdgeDrags()V",
        "Landroid/support/v4/widget/ViewDragHelper;->getEdgeSize()I",
        "Landroid/support/v4/widget/ViewDragHelper;->getTouchSlop()I",
        "Landroid/support/v4/widget/ViewDragHelper;->setDragState()V",
        "Landroid/support/v4/widget/ViewDragHelper;->getEdgesTouched()I",
        "Landroid/support/v4/widget/ViewDragHelper;->cancel()V",
        "Landroid/support/v4/widget/ViewDragHelper;->releaseViewForPointerUp()V",
        "Landroid/support/v4/widget/ViewDragHelper;->canScroll()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->abort()V",
        "Landroid/support/v4/widget/ViewDragHelper;->captureChildView()V",
        "Landroid/support/v4/widget/ViewDragHelper;->checkNewEdgeDrag()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->create()Landroid/support/v4/widget/ViewDragHelper;",
        "Landroid/support/v4/widget/ViewDragHelper;->shouldInterceptTouchEvent()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->tryCaptureViewForDrag()Z",
        "Landroid/support/v4/widget/ViewDragHelper;->saveInitialMotion()V",
        "Landroid/support/v4/widget/ViewDragHelper;->saveLastMotion()V",
        "Landroid/support/v4/widget/ViewDragHelper;->setEdgeTrackingEnabled()V",
        "Landroid/support/v4/widget/ViewDragHelper;->distanceInfluenceForSnapDuration()F",
        "Landroid/support/v4/widget/ViewDragHelper;->findTopChildUnder()Landroid/view/View;"
    ],
    "Landroid/view/VelocityTracker;": [
        "Landroid/view/VelocityTracker;->addMovement()V",
        "Landroid/view/VelocityTracker;->computeCurrentVelocity()V",
        "Landroid/view/VelocityTracker;->clear()V",
        "Landroid/view/VelocityTracker;->getYVelocity()F",
        "Landroid/view/VelocityTracker;->getXVelocity()F",
        "Landroid/view/VelocityTracker;->recycle()V",
        "Landroid/view/VelocityTracker;->obtain()Landroid/view/VelocityTracker;"
    ],
    "Landroid/support/v4/view/VelocityTrackerCompat;": [
        "Landroid/support/v4/view/VelocityTrackerCompat;->getXVelocity()F",
        "Landroid/support/v4/view/VelocityTrackerCompat;->getYVelocity()F"
    ],
    "Landroid/support/v4/view/MotionEventCompat;": [
        "Landroid/support/v4/view/MotionEventCompat;->getY()F",
        "Landroid/support/v4/view/MotionEventCompat;->getActionIndex()I",
        "Landroid/support/v4/view/MotionEventCompat;->findPointerIndex()I",
        "Landroid/support/v4/view/MotionEventCompat;->getPointerCount()I",
        "Landroid/support/v4/view/MotionEventCompat;->getActionMasked()I",
        "Landroid/support/v4/view/MotionEventCompat;->getX()F",
        "Landroid/support/v4/view/MotionEventCompat;->getPointerId()I"
    ],
    "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;": [
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->getFinalX()I",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->notifyVerticalEdgeReached()V",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->getCurrY()I",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->computeScrollOffset()Z",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->notifyHorizontalEdgeReached()V",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->abortAnimation()V",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->isFinished()Z",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->isOverScrolled()Z",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->getFinalY()I",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->startScroll()V",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->getCurrX()I",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->getCurrVelocity()F",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->createScroller()Ljava/lang/Object;",
        "Landroid/support/v4/widget/ScrollerCompat$ScrollerCompatImpl;->fling()V"
    ],
    "Landroid/support/v4/widget/DrawerLayout;": [
        "Landroid/support/v4/widget/DrawerLayout;->setMeasuredDimension()V",
        "Landroid/support/v4/widget/DrawerLayout;->gravityToString()Ljava/lang/String;",
        "Landroid/support/v4/widget/DrawerLayout;->setDrawerViewOffset()V",
        "Landroid/support/v4/widget/DrawerLayout;->setDrawerLockMode()V",
        "Landroid/support/v4/widget/DrawerLayout;->getDrawerLockMode()I",
        "Landroid/support/v4/widget/DrawerLayout;->findVisibleDrawer()Landroid/view/View;",
        "Landroid/support/v4/widget/DrawerLayout;->hasOpaqueBackground()Z",
        "Landroid/support/v4/widget/DrawerLayout;->getChildMeasureSpec()I",
        "Landroid/support/v4/widget/DrawerLayout;->getDrawerViewOffset()F",
        "Landroid/support/v4/widget/DrawerLayout;->checkDrawerViewAbsoluteGravity()Z",
        "Landroid/support/v4/widget/DrawerLayout;->getDrawerViewAbsoluteGravity()I",
        "Landroid/support/v4/widget/DrawerLayout;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/widget/DrawerLayout;->invalidate()V",
        "Landroid/support/v4/widget/DrawerLayout;->hasPeekingDrawer()Z",
        "Landroid/support/v4/widget/DrawerLayout;->sendAccessibilityEvent()V",
        "Landroid/support/v4/widget/DrawerLayout;->getChildCount()I",
        "Landroid/support/v4/widget/DrawerLayout;->getHeight()I",
        "Landroid/support/v4/widget/DrawerLayout;->isDrawerOpen()Z",
        "Landroid/support/v4/widget/DrawerLayout;->closeDrawer()V",
        "Landroid/support/v4/widget/DrawerLayout;->isInEditMode()Z",
        "Landroid/support/v4/widget/DrawerLayout;->closeDrawers()V",
        "Landroid/support/v4/widget/DrawerLayout;->hasVisibleDrawer()Z",
        "Landroid/support/v4/widget/DrawerLayout;->dispatchOnDrawerClosed()V",
        "Landroid/support/v4/widget/DrawerLayout;->dispatchOnDrawerOpened()V",
        "Landroid/support/v4/widget/DrawerLayout;->getResources()Landroid/content/res/Resources;",
        "Landroid/support/v4/widget/DrawerLayout;->findDrawerWithGravity()Landroid/view/View;",
        "Landroid/support/v4/widget/DrawerLayout;->getWidth()I",
        "Landroid/support/v4/widget/DrawerLayout;->isDrawerView()Z",
        "Landroid/support/v4/widget/DrawerLayout;->setDrawerShadow()V",
        "Landroid/support/v4/widget/DrawerLayout;->setFocusableInTouchMode()V",
        "Landroid/support/v4/widget/DrawerLayout;->getChildAt()Landroid/view/View;",
        "Landroid/support/v4/widget/DrawerLayout;->isDrawerVisible()Z",
        "Landroid/support/v4/widget/DrawerLayout;->isContentView()Z",
        "Landroid/support/v4/widget/DrawerLayout;->findOpenDrawer()Landroid/view/View;",
        "Landroid/support/v4/widget/DrawerLayout;->dispatchOnDrawerSlide()V",
        "Landroid/support/v4/widget/DrawerLayout;->openDrawer()V"
    ],
    "Landroid/support/v4/widget/DrawerLayout$ViewDragCallback;": [
        "Landroid/support/v4/widget/DrawerLayout$ViewDragCallback;->setDragger()V",
        "Landroid/support/v4/widget/DrawerLayout$ViewDragCallback;->removeCallbacks()V"
    ],
    "Landroid/support/v4/view/ViewGroupCompat;": [
        "Landroid/support/v4/view/ViewGroupCompat;->setMotionEventSplittingEnabled()V"
    ],
    "Landroid/support/v4/widget/DrawerLayout$DrawerListener;": [
        "Landroid/support/v4/widget/DrawerLayout$DrawerListener;->onDrawerStateChanged()V",
        "Landroid/support/v4/widget/DrawerLayout$DrawerListener;->onDrawerSlide()V",
        "Landroid/support/v4/widget/DrawerLayout$DrawerListener;->onDrawerClosed()V",
        "Landroid/support/v4/widget/DrawerLayout$DrawerListener;->onDrawerOpened()V"
    ],
    "Landroid/support/v4/view/GravityCompat;": [
        "Landroid/support/v4/view/GravityCompat;->getAbsoluteGravity()I"
    ],
    "Landroid/support/v4/view/KeyEventCompat;": [
        "Landroid/support/v4/view/KeyEventCompat;->getKeyDispatcherState()Ljava/lang/Object;",
        "Landroid/support/v4/view/KeyEventCompat;->hasNoModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat;->hasModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat;->dispatch()Z",
        "Landroid/support/v4/view/KeyEventCompat;->startTracking()V"
    ],
    "Landroid/support/v4/widget/DrawerLayout$SavedState;": [
        "Landroid/support/v4/widget/DrawerLayout$SavedState;->getSuperState()Landroid/os/Parcelable;"
    ],
    "Landroid/widget/OverScroller;": [
        "Landroid/widget/OverScroller;->isFinished()Z",
        "Landroid/widget/OverScroller;->getCurrVelocity()F",
        "Landroid/widget/OverScroller;->notifyHorizontalEdgeReached()V",
        "Landroid/widget/OverScroller;->computeScrollOffset()Z",
        "Landroid/widget/OverScroller;->abortAnimation()V",
        "Landroid/widget/OverScroller;->getCurrY()I",
        "Landroid/widget/OverScroller;->getFinalY()I",
        "Landroid/widget/OverScroller;->startScroll()V",
        "Landroid/widget/OverScroller;->fling()V",
        "Landroid/widget/OverScroller;->getCurrX()I",
        "Landroid/widget/OverScroller;->notifyVerticalEdgeReached()V",
        "Landroid/widget/OverScroller;->getFinalX()I",
        "Landroid/widget/OverScroller;->isOverScrolled()Z"
    ],
    "Landroid/widget/SearchView;": [
        "Landroid/widget/SearchView;->setOnQueryTextListener()V",
        "Landroid/widget/SearchView;->setInputType()V",
        "Landroid/widget/SearchView;->setQueryRefinementEnabled()V",
        "Landroid/widget/SearchView;->isIconified()Z",
        "Landroid/widget/SearchView;->setQueryHint()V",
        "Landroid/widget/SearchView;->setSubmitButtonEnabled()V",
        "Landroid/widget/SearchView;->getQuery()Ljava/lang/CharSequence;",
        "Landroid/widget/SearchView;->setMaxWidth()V",
        "Landroid/widget/SearchView;->setQuery()V",
        "Landroid/widget/SearchView;->isSubmitButtonEnabled()Z",
        "Landroid/widget/SearchView;->getContext()Landroid/content/Context;",
        "Landroid/widget/SearchView;->setIconified()V",
        "Landroid/widget/SearchView;->setOnCloseListener()V",
        "Landroid/widget/SearchView;->setSearchableInfo()V",
        "Landroid/widget/SearchView;->setImeOptions()V",
        "Landroid/widget/SearchView;->isQueryRefinementEnabled()Z"
    ],
    "Landroid/support/v4/widget/SimpleCursorAdapter;": [
        "Landroid/support/v4/widget/SimpleCursorAdapter;->setViewImage()V",
        "Landroid/support/v4/widget/SimpleCursorAdapter;->findColumns()V",
        "Landroid/support/v4/widget/SimpleCursorAdapter;->setViewText()V"
    ],
    "Landroid/support/v4/widget/SimpleCursorAdapter$ViewBinder;": [
        "Landroid/support/v4/widget/SimpleCursorAdapter$ViewBinder;->setViewValue()Z"
    ],
    "Landroid/support/v4/widget/ResourceCursorAdapter;": [
        "Landroid/support/v4/widget/ResourceCursorAdapter;->swapCursor()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/ResourceCursorAdapter;->convertToString()Ljava/lang/CharSequence;",
        "Landroid/support/v4/widget/ResourceCursorAdapter;->changeCursor()V"
    ],
    "Landroid/support/v4/widget/SimpleCursorAdapter$CursorToStringConverter;": [
        "Landroid/support/v4/widget/SimpleCursorAdapter$CursorToStringConverter;->convertToString()Ljava/lang/CharSequence;"
    ],
    "Landroid/support/v4/widget/AutoScrollHelper;": [
        "Landroid/support/v4/widget/AutoScrollHelper;->requestStop()V",
        "Landroid/support/v4/widget/AutoScrollHelper;->setMaximumVelocity()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->setMinimumVelocity()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->setRampDownDuration()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->cancelTargetTouch()V",
        "Landroid/support/v4/widget/AutoScrollHelper;->setActivationDelay()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->canTargetScrollVertically()Z",
        "Landroid/support/v4/widget/AutoScrollHelper;->computeTargetVelocity()F",
        "Landroid/support/v4/widget/AutoScrollHelper;->setRelativeVelocity()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->getEdgeValue()F",
        "Landroid/support/v4/widget/AutoScrollHelper;->constrain()I",
        "Landroid/support/v4/widget/AutoScrollHelper;->constrain()F",
        "Landroid/support/v4/widget/AutoScrollHelper;->canTargetScrollHorizontally()Z",
        "Landroid/support/v4/widget/AutoScrollHelper;->startAnimating()V",
        "Landroid/support/v4/widget/AutoScrollHelper;->setRelativeEdges()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->setEdgeType()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->constrainEdgeValue()F",
        "Landroid/support/v4/widget/AutoScrollHelper;->setRampUpDuration()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->setMaximumEdges()Landroid/support/v4/widget/AutoScrollHelper;",
        "Landroid/support/v4/widget/AutoScrollHelper;->shouldAnimate()Z"
    ],
    "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;": [
        "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;->getVerticalDirection()I",
        "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;->requestStop()V",
        "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;->setRampDownDuration()V",
        "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;->setRampUpDuration()V",
        "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;->setTargetVelocity()V",
        "Landroid/support/v4/widget/AutoScrollHelper$ClampedScroller;->getHorizontalDirection()I"
    ],
    "Landroid/support/v4/widget/CursorAdapter;": [
        "Landroid/support/v4/widget/CursorAdapter;->newDropDownView()Landroid/view/View;",
        "Landroid/support/v4/widget/CursorAdapter;->swapCursor()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/CursorAdapter;->notifyDataSetInvalidated()V",
        "Landroid/support/v4/widget/CursorAdapter;->notifyDataSetChanged()V",
        "Landroid/support/v4/widget/CursorAdapter;->bindView()V",
        "Landroid/support/v4/widget/CursorAdapter;->newView()Landroid/view/View;"
    ],
    "Landroid/widget/FilterQueryProvider;": [
        "Landroid/widget/FilterQueryProvider;->runQuery()Landroid/database/Cursor;"
    ],
    "Landroid/widget/EdgeEffect;": [
        "Landroid/widget/EdgeEffect;->onAbsorb()V",
        "Landroid/widget/EdgeEffect;->isFinished()Z",
        "Landroid/widget/EdgeEffect;->onPull()V",
        "Landroid/widget/EdgeEffect;->setSize()V",
        "Landroid/widget/EdgeEffect;->draw()Z",
        "Landroid/widget/EdgeEffect;->onRelease()V",
        "Landroid/widget/EdgeEffect;->finish()V"
    ],
    "Landroid/support/v4/widget/SlidingPaneLayout;": [
        "Landroid/support/v4/widget/SlidingPaneLayout;->getChildAt()Landroid/view/View;",
        "Landroid/support/v4/widget/SlidingPaneLayout;->isInEditMode()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->smoothSlideTo()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->dispatchOnPanelSlide()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getPaddingTop()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->openPane()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getPaddingRight()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getHeight()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->setWillNotDraw()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getChildCount()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->setShadowDrawable()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->parallaxOtherViews()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->sendAccessibilityEvent()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->isOpen()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getPaddingLeft()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getWidth()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->setMeasuredDimension()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->updateObscuredViewsVisibility()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->onPanelDragged()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->dimChildView()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->viewIsOpaque()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->invalidateChildRegion()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->requestLayout()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getPaddingBottom()I",
        "Landroid/support/v4/widget/SlidingPaneLayout;->closePane()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/widget/SlidingPaneLayout;->isSlideable()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->isInTouchMode()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->setAllChildrenVisible()V",
        "Landroid/support/v4/widget/SlidingPaneLayout;->canScroll()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->isDimmed()Z",
        "Landroid/support/v4/widget/SlidingPaneLayout;->getResources()Landroid/content/res/Resources;"
    ],
    "Landroid/support/v4/widget/SlidingPaneLayout$SlidingPanelLayoutImpl;": [
        "Landroid/support/v4/widget/SlidingPaneLayout$SlidingPanelLayoutImpl;->invalidateChildRegion()V"
    ],
    "Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;": [
        "Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;->onPanelOpened()V",
        "Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;->onPanelClosed()V",
        "Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;->onPanelSlide()V"
    ],
    "Landroid/support/v4/widget/SlidingPaneLayout$DisableLayerRunnable;": [
        "Landroid/support/v4/widget/SlidingPaneLayout$DisableLayerRunnable;->run()V"
    ],
    "Landroid/support/v4/widget/SlidingPaneLayout$SavedState;": [
        "Landroid/support/v4/widget/SlidingPaneLayout$SavedState;->getSuperState()Landroid/os/Parcelable;"
    ],
    "Landroid/widget/PopupMenu;": [
        "Landroid/widget/PopupMenu;->getDragToOpenListener()Landroid/view/View$OnTouchListener;"
    ],
    "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;": [
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->isSubmitButtonEnabled()Z",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setInputType()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->isQueryRefinementEnabled()Z",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setSearchableInfo()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->isIconified()Z",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setQueryRefinementEnabled()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setImeOptions()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->newSearchView()Landroid/view/View;",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setMaxWidth()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setOnCloseListener()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setSubmitButtonEnabled()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->getQuery()Ljava/lang/CharSequence;",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setQueryHint()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setOnQueryTextListener()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setQuery()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setIconified()V"
    ],
    "Landroid/app/SearchManager;": [
        "Landroid/app/SearchManager;->getSearchableInfo()Landroid/app/SearchableInfo;"
    ],
    "Landroid/support/v4/widget/ListPopupWindowCompat$ListPopupWindowImpl;": [
        "Landroid/support/v4/widget/ListPopupWindowCompat$ListPopupWindowImpl;->createDragToOpenListener()Landroid/view/View$OnTouchListener;"
    ],
    "Landroid/widget/ListPopupWindow;": [
        "Landroid/widget/ListPopupWindow;->createDragToOpenListener()Landroid/view/View$OnTouchListener;"
    ],
    "Landroid/support/v4/widget/PopupMenuCompat$PopupMenuImpl;": [
        "Landroid/support/v4/widget/PopupMenuCompat$PopupMenuImpl;->getDragToOpenListener()Landroid/view/View$OnTouchListener;"
    ],
    "Landroid/support/v4/widget/ContentLoadingProgressBar;": [
        "Landroid/support/v4/widget/ContentLoadingProgressBar;->removeCallbacks()V",
        "Landroid/support/v4/widget/ContentLoadingProgressBar;->removeCallbacks()Z",
        "Landroid/support/v4/widget/ContentLoadingProgressBar;->setVisibility()V",
        "Landroid/support/v4/widget/ContentLoadingProgressBar;->postDelayed()Z"
    ],
    "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;": [
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->onPull()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->onAbsorb()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->isFinished()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->newEdgeEffect()Ljava/lang/Object;",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->finish()V",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->setSize()V",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->draw()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->onRelease()Z"
    ],
    "Landroid/support/v4/internal/view/SupportMenuItem;": [
        "Landroid/support/v4/internal/view/SupportMenuItem;->setSupportActionProvider()Landroid/support/v4/internal/view/SupportMenuItem;",
        "Landroid/support/v4/internal/view/SupportMenuItem;->setActionView()Landroid/view/MenuItem;",
        "Landroid/support/v4/internal/view/SupportMenuItem;->setShowAsAction()V",
        "Landroid/support/v4/internal/view/SupportMenuItem;->setSupportOnActionExpandListener()Landroid/support/v4/internal/view/SupportMenuItem;",
        "Landroid/support/v4/internal/view/SupportMenuItem;->collapseActionView()Z",
        "Landroid/support/v4/internal/view/SupportMenuItem;->getSupportActionProvider()Landroid/support/v4/view/ActionProvider;",
        "Landroid/support/v4/internal/view/SupportMenuItem;->expandActionView()Z",
        "Landroid/support/v4/internal/view/SupportMenuItem;->isActionViewExpanded()Z",
        "Landroid/support/v4/internal/view/SupportMenuItem;->getActionView()Landroid/view/View;"
    ],
    "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;": [
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->expandActionView()Z",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->setActionView()Landroid/view/MenuItem;",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->setShowAsAction()V",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->isActionViewExpanded()Z",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->getActionView()Landroid/view/View;",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->setOnActionExpandListener()Landroid/view/MenuItem;",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->collapseActionView()Z"
    ],
    "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;": [
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->setLayoutDirection()V",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->getMarginStart()I",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->setMarginStart()V",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->getMarginEnd()I",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->resolveLayoutDirection()V",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->getLayoutDirection()I",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->isMarginRelative()Z",
        "Landroid/support/v4/view/MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl;->setMarginEnd()V"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->setShowAsAction()V",
        "Landroid/view/MenuItem;->getItemId()I",
        "Landroid/view/MenuItem;->collapseActionView()Z",
        "Landroid/view/MenuItem;->setOnActionExpandListener()Landroid/view/MenuItem;",
        "Landroid/view/MenuItem;->expandActionView()Z",
        "Landroid/view/MenuItem;->isActionViewExpanded()Z",
        "Landroid/view/MenuItem;->getActionView()Landroid/view/View;",
        "Landroid/view/MenuItem;->getActionProvider()Landroid/view/ActionProvider;",
        "Landroid/view/MenuItem;->setActionView()Landroid/view/MenuItem;",
        "Landroid/view/MenuItem;->setActionProvider()Landroid/view/MenuItem;"
    ],
    "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;": [
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getOverScrollMode()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getLayerType()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getAccessibilityLiveRegion()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getLayoutDirection()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getParentForAccessibility()Landroid/view/ViewParent;",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->hasTransientState()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setImportantForAccessibility()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getAccessibilityNodeProvider()Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->canScrollVertically()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->onPopulateAccessibilityEvent()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setLabelFor()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->performAccessibilityAction()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setLayoutDirection()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->resolveSizeAndState()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->onInitializeAccessibilityEvent()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setHasTransientState()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setAccessibilityDelegate()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->canScrollHorizontally()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getImportantForAccessibility()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setLayerType()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getMeasuredHeightAndState()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->isOpaque()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getMeasuredState()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->postInvalidateOnAnimation()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getAlpha()F",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setAccessibilityLiveRegion()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setOverScrollMode()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getMeasuredWidthAndState()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->postOnAnimationDelayed()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getLabelFor()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setLayerPaint()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->postOnAnimation()V"
    ],
    "Landroid/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImpl;": [
        "Landroid/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImpl;->setIsLongpressEnabled()V",
        "Landroid/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImpl;->onTouchEvent()Z",
        "Landroid/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImpl;->setOnDoubleTapListener()V",
        "Landroid/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImpl;->isLongpressEnabled()Z"
    ],
    "Landroid/support/v4/view/PagerTabStrip;": [
        "Landroid/support/v4/view/PagerTabStrip;->getBackground()Landroid/graphics/drawable/Drawable;",
        "Landroid/support/v4/view/PagerTabStrip;->setTextSpacing()V",
        "Landroid/support/v4/view/PagerTabStrip;->getHeight()I",
        "Landroid/support/v4/view/PagerTabStrip;->setWillNotDraw()V",
        "Landroid/support/v4/view/PagerTabStrip;->invalidate()V",
        "Landroid/support/v4/view/PagerTabStrip;->setPadding()V",
        "Landroid/support/v4/view/PagerTabStrip;->getWidth()I",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingRight()I",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingBottom()I",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingTop()I",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingLeft()I",
        "Landroid/support/v4/view/PagerTabStrip;->getTextSpacing()I",
        "Landroid/support/v4/view/PagerTabStrip;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/view/PagerTabStrip;->setTabIndicatorColor()V"
    ],
    "Landroid/support/v4/view/PagerTitleStrip;": [
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingBottom()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setBackgroundColor()V",
        "Landroid/support/v4/view/PagerTitleStrip;->requestLayout()V",
        "Landroid/support/v4/view/PagerTitleStrip;->onDraw()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getHeight()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setSingleLineAllCaps()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getParent()Landroid/view/ViewParent;",
        "Landroid/support/v4/view/PagerTitleStrip;->setBackgroundDrawable()V",
        "Landroid/support/v4/view/PagerTitleStrip;->updateTextPositions()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setTextSpacing()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setPadding()V",
        "Landroid/support/v4/view/PagerTitleStrip;->addView()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingRight()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setNonPrimaryAlpha()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getWidth()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setMeasuredDimension()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setBackgroundResource()V",
        "Landroid/support/v4/view/PagerTitleStrip;->updateAdapter()V",
        "Landroid/support/v4/view/PagerTitleStrip;->updateText()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setTextSize()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingTop()I",
        "Landroid/support/v4/view/PagerTitleStrip;->getMinHeight()I",
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingLeft()I",
        "Landroid/support/v4/view/PagerTitleStrip;->getBackground()Landroid/graphics/drawable/Drawable;"
    ],
    "Landroid/support/v4/view/ViewPager;": [
        "Landroid/support/v4/view/ViewPager;->pageScrolled()Z",
        "Landroid/support/v4/view/ViewPager;->infoForAnyChild()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->performDrag()Z",
        "Landroid/support/v4/view/ViewPager;->setPageMarginDrawable()V",
        "Landroid/support/v4/view/ViewPager;->isInTouchMode()Z",
        "Landroid/support/v4/view/ViewPager;->getClientWidth()I",
        "Landroid/support/v4/view/ViewPager;->requestLayout()V",
        "Landroid/support/v4/view/ViewPager;->addViewInLayout()Z",
        "Landroid/support/v4/view/ViewPager;->getId()I",
        "Landroid/support/v4/view/ViewPager;->getPaddingLeft()I",
        "Landroid/support/v4/view/ViewPager;->setScrollState()V",
        "Landroid/support/v4/view/ViewPager;->determineTargetPage()I",
        "Landroid/support/v4/view/ViewPager;->setDescendantFocusability()V",
        "Landroid/support/v4/view/ViewPager;->setMeasuredDimension()V",
        "Landroid/support/v4/view/ViewPager;->executeKeyEvent()Z",
        "Landroid/support/v4/view/ViewPager;->findFocus()Landroid/view/View;",
        "Landroid/support/v4/view/ViewPager;->removeViewAt()V",
        "Landroid/support/v4/view/ViewPager;->getParent()Landroid/view/ViewParent;",
        "Landroid/support/v4/view/ViewPager;->isFocusable()Z",
        "Landroid/support/v4/view/ViewPager;->setFocusable()V",
        "Landroid/support/v4/view/ViewPager;->getDescendantFocusability()I",
        "Landroid/support/v4/view/ViewPager;->sortChildDrawingOrder()V",
        "Landroid/support/v4/view/ViewPager;->calculatePageOffsets()V",
        "Landroid/support/v4/view/ViewPager;->endDrag()V",
        "Landroid/support/v4/view/ViewPager;->arrowScroll()Z",
        "Landroid/support/v4/view/ViewPager;->getChildAt()Landroid/view/View;",
        "Landroid/support/v4/view/ViewPager;->isFocusableInTouchMode()Z",
        "Landroid/support/v4/view/ViewPager;->setCurrentItemInternal()V",
        "Landroid/support/v4/view/ViewPager;->getDefaultSize()I",
        "Landroid/support/v4/view/ViewPager;->getScrollX()I",
        "Landroid/support/v4/view/ViewPager;->completeScroll()V",
        "Landroid/support/v4/view/ViewPager;->recomputeScrollPosition()V",
        "Landroid/support/v4/view/ViewPager;->invalidate()V",
        "Landroid/support/v4/view/ViewPager;->generateDefaultLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/support/v4/view/ViewPager;->setChildrenDrawingOrderEnabledCompat()V",
        "Landroid/support/v4/view/ViewPager;->getPaddingRight()I",
        "Landroid/support/v4/view/ViewPager;->getPaddingBottom()I",
        "Landroid/support/v4/view/ViewPager;->getChildRectInPagerCoordinates()Landroid/graphics/Rect;",
        "Landroid/support/v4/view/ViewPager;->enableLayers()V",
        "Landroid/support/v4/view/ViewPager;->checkLayoutParams()Z",
        "Landroid/support/v4/view/ViewPager;->getCurrentItem()I",
        "Landroid/support/v4/view/ViewPager;->getScrollY()I",
        "Landroid/support/v4/view/ViewPager;->removeViewInLayout()V",
        "Landroid/support/v4/view/ViewPager;->onPageScrolled()V",
        "Landroid/support/v4/view/ViewPager;->setCurrentItem()V",
        "Landroid/support/v4/view/ViewPager;->setScrollingCacheEnabled()V",
        "Landroid/support/v4/view/ViewPager;->setOnAdapterChangeListener()V",
        "Landroid/support/v4/view/ViewPager;->playSoundEffect()V",
        "Landroid/support/v4/view/ViewPager;->onSecondaryPointerUp()V",
        "Landroid/support/v4/view/ViewPager;->scrollToItem()V",
        "Landroid/support/v4/view/ViewPager;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/support/v4/view/ViewPager;->generateLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/support/v4/view/ViewPager;->scrollTo()V",
        "Landroid/support/v4/view/ViewPager;->getMeasuredHeight()I",
        "Landroid/support/v4/view/ViewPager;->pageRight()Z",
        "Landroid/support/v4/view/ViewPager;->distanceInfluenceForSnapDuration()F",
        "Landroid/support/v4/view/ViewPager;->infoForChild()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->getResources()Landroid/content/res/Resources;",
        "Landroid/support/v4/view/ViewPager;->removeNonDecorViews()V",
        "Landroid/support/v4/view/ViewPager;->getChildCount()I",
        "Landroid/support/v4/view/ViewPager;->setInternalPageChangeListener()Landroid/support/v4/view/ViewPager$OnPageChangeListener;",
        "Landroid/support/v4/view/ViewPager;->addNewItem()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->requestParentDisallowInterceptTouchEvent()V",
        "Landroid/support/v4/view/ViewPager;->populate()V",
        "Landroid/support/v4/view/ViewPager;->getPaddingTop()I",
        "Landroid/support/v4/view/ViewPager;->removeCallbacks()Z",
        "Landroid/support/v4/view/ViewPager;->getHeight()I",
        "Landroid/support/v4/view/ViewPager;->setWillNotDraw()V",
        "Landroid/support/v4/view/ViewPager;->getAdapter()Landroid/support/v4/view/PagerAdapter;",
        "Landroid/support/v4/view/ViewPager;->smoothScrollTo()V",
        "Landroid/support/v4/view/ViewPager;->pageLeft()Z",
        "Landroid/support/v4/view/ViewPager;->getMeasuredWidth()I",
        "Landroid/support/v4/view/ViewPager;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/view/ViewPager;->isGutterDrag()Z",
        "Landroid/support/v4/view/ViewPager;->hasFocus()Z",
        "Landroid/support/v4/view/ViewPager;->getDrawableState()[I",
        "Landroid/support/v4/view/ViewPager;->infoForPosition()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->refreshDrawableState()V",
        "Landroid/support/v4/view/ViewPager;->infoForCurrentScrollPosition()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->canScroll()Z",
        "Landroid/support/v4/view/ViewPager;->getWidth()I"
    ],
    "Landroid/support/v4/view/VelocityTrackerCompat$VelocityTrackerVersionImpl;": [
        "Landroid/support/v4/view/VelocityTrackerCompat$VelocityTrackerVersionImpl;->getYVelocity()F",
        "Landroid/support/v4/view/VelocityTrackerCompat$VelocityTrackerVersionImpl;->getXVelocity()F"
    ],
    "Landroid/support/v4/view/PagerAdapter;": [
        "Landroid/support/v4/view/PagerAdapter;->getCount()I",
        "Landroid/support/v4/view/PagerAdapter;->destroyItem()V",
        "Landroid/support/v4/view/PagerAdapter;->getItemPosition()I",
        "Landroid/support/v4/view/PagerAdapter;->startUpdate()V",
        "Landroid/support/v4/view/PagerAdapter;->getPageTitle()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/PagerAdapter;->isViewFromObject()Z",
        "Landroid/support/v4/view/PagerAdapter;->finishUpdate()V",
        "Landroid/support/v4/view/PagerAdapter;->unregisterDataSetObserver()V",
        "Landroid/support/v4/view/PagerAdapter;->restoreState()V",
        "Landroid/support/v4/view/PagerAdapter;->registerDataSetObserver()V",
        "Landroid/support/v4/view/PagerAdapter;->getPageWidth()F",
        "Landroid/support/v4/view/PagerAdapter;->saveState()Landroid/os/Parcelable;",
        "Landroid/support/v4/view/PagerAdapter;->instantiateItem()Ljava/lang/Object;",
        "Landroid/support/v4/view/PagerAdapter;->setPrimaryItem()V"
    ],
    "Landroid/database/DataSetObservable;": [
        "Landroid/database/DataSetObservable;->registerObserver()V",
        "Landroid/database/DataSetObservable;->notifyChanged()V",
        "Landroid/database/DataSetObservable;->unregisterObserver()V"
    ],
    "Landroid/animation/ValueAnimator;": [
        "Landroid/animation/ValueAnimator;->getFrameDelay()J"
    ],
    "Landroid/view/View$AccessibilityDelegate;": [
        "Landroid/view/View$AccessibilityDelegate;->onInitializeAccessibilityEvent()V",
        "Landroid/view/View$AccessibilityDelegate;->sendAccessibilityEventUnchecked()V",
        "Landroid/view/View$AccessibilityDelegate;->onPopulateAccessibilityEvent()V",
        "Landroid/view/View$AccessibilityDelegate;->performAccessibilityAction()Z",
        "Landroid/view/View$AccessibilityDelegate;->sendAccessibilityEvent()V",
        "Landroid/view/View$AccessibilityDelegate;->onRequestSendAccessibilityEvent()Z",
        "Landroid/view/View$AccessibilityDelegate;->getAccessibilityNodeProvider()Landroid/view/accessibility/AccessibilityNodeProvider;",
        "Landroid/view/View$AccessibilityDelegate;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/view/View$AccessibilityDelegate;->onInitializeAccessibilityNodeInfo()V"
    ],
    "Landroid/support/v4/view/MenuItemCompat;": [
        "Landroid/support/v4/view/MenuItemCompat;->setShowAsAction()V"
    ],
    "Landroid/view/ScaleGestureDetector;": [
        "Landroid/view/ScaleGestureDetector;->isQuickScaleEnabled()Z",
        "Landroid/view/ScaleGestureDetector;->setQuickScaleEnabled()V"
    ],
    "Landroid/support/v4/view/ViewParentCompat$ViewParentCompatImpl;": [
        "Landroid/support/v4/view/ViewParentCompat$ViewParentCompatImpl;->requestSendAccessibilityEvent()Z"
    ],
    "Landroid/support/v4/view/ActionProvider;": [
        "Landroid/support/v4/view/ActionProvider;->onCreateActionView()Landroid/view/View;",
        "Landroid/support/v4/view/ActionProvider;->isVisible()Z",
        "Landroid/support/v4/view/ActionProvider;->overridesItemVisibility()Z"
    ],
    "Landroid/support/v4/view/ActionProvider$VisibilityListener;": [
        "Landroid/support/v4/view/ActionProvider$VisibilityListener;->onActionProviderVisibilityChanged()V"
    ],
    "Landroid/support/v4/view/ActionProvider$SubUiVisibilityListener;": [
        "Landroid/support/v4/view/ActionProvider$SubUiVisibilityListener;->onSubUiVisibilityChanged()V"
    ],
    "Landroid/support/v4/view/ViewConfigurationCompat$ViewConfigurationVersionImpl;": [
        "Landroid/support/v4/view/ViewConfigurationCompat$ViewConfigurationVersionImpl;->getScaledPagingTouchSlop()I"
    ],
    "Landroid/support/v4/view/PagerTitleStrip$PagerTitleStripImpl;": [
        "Landroid/support/v4/view/PagerTitleStrip$PagerTitleStripImpl;->setSingleLineAllCaps()V"
    ],
    "Landroid/support/v4/view/GravityCompat$GravityCompatImpl;": [
        "Landroid/support/v4/view/GravityCompat$GravityCompatImpl;->getAbsoluteGravity()I",
        "Landroid/support/v4/view/GravityCompat$GravityCompatImpl;->apply()V",
        "Landroid/support/v4/view/GravityCompat$GravityCompatImpl;->applyDisplay()V"
    ],
    "Landroid/view/ViewParent;": [
        "Landroid/view/ViewParent;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/ViewParent;->requestSendAccessibilityEvent()Z",
        "Landroid/view/ViewParent;->requestDisallowInterceptTouchEvent()V"
    ],
    "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;": [
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->sendAccessibilityEventUnchecked()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->newAccessiblityDelegateBridge()Ljava/lang/Object;",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->getAccessibilityNodeProvider()Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onPopulateAccessibilityEvent()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->newAccessiblityDelegateDefaultImpl()Ljava/lang/Object;",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onRequestSendAccessibilityEvent()Z",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->performAccessibilityAction()Z",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onInitializeAccessibilityEvent()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->sendAccessibilityEvent()V"
    ],
    "Landroid/view/Gravity;": [
        "Landroid/view/Gravity;->getAbsoluteGravity()I",
        "Landroid/view/Gravity;->apply()V",
        "Landroid/view/Gravity;->applyDisplay()V"
    ],
    "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;": [
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getPointerCount()I",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getPointerId()I",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->findPointerIndex()I",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getY()F",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getX()F"
    ],
    "Landroid/view/ViewGroup$MarginLayoutParams;": [
        "Landroid/view/ViewGroup$MarginLayoutParams;->getMarginEnd()I",
        "Landroid/view/ViewGroup$MarginLayoutParams;->setMarginEnd()V",
        "Landroid/view/ViewGroup$MarginLayoutParams;->setMarginStart()V",
        "Landroid/view/ViewGroup$MarginLayoutParams;->setLayoutDirection()V",
        "Landroid/view/ViewGroup$MarginLayoutParams;->getMarginStart()I",
        "Landroid/view/ViewGroup$MarginLayoutParams;->isMarginRelative()Z",
        "Landroid/view/ViewGroup$MarginLayoutParams;->resolveLayoutDirection()V",
        "Landroid/view/ViewGroup$MarginLayoutParams;->getLayoutDirection()I"
    ],
    "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;": [
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->normalizeMetaState()I",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->startTracking()V",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->metaStateHasModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->isTracking()Z",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->metaStateHasNoModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->dispatch()Z",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->getKeyDispatcherState()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/ScaleGestureDetectorCompat$ScaleGestureDetectorImpl;": [
        "Landroid/support/v4/view/ScaleGestureDetectorCompat$ScaleGestureDetectorImpl;->setQuickScaleEnabled()V",
        "Landroid/support/v4/view/ScaleGestureDetectorCompat$ScaleGestureDetectorImpl;->isQuickScaleEnabled()Z"
    ],
    "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;": [
        "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;->setMotionEventSplittingEnabled()V",
        "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;->getLayoutMode()I",
        "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;->setLayoutMode()V",
        "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;->onRequestSendAccessibilityEvent()Z"
    ],
    "Landroid/widget/Scroller;": [
        "Landroid/widget/Scroller;->getFinalX()I",
        "Landroid/widget/Scroller;->getCurrX()I",
        "Landroid/widget/Scroller;->computeScrollOffset()Z",
        "Landroid/widget/Scroller;->startScroll()V",
        "Landroid/widget/Scroller;->abortAnimation()V",
        "Landroid/widget/Scroller;->getCurrY()I",
        "Landroid/widget/Scroller;->isFinished()Z",
        "Landroid/widget/Scroller;->getDuration()I",
        "Landroid/widget/Scroller;->timePassed()I"
    ],
    "Landroid/support/v4/widget/EdgeEffectCompat;": [
        "Landroid/support/v4/widget/EdgeEffectCompat;->isFinished()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->onRelease()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->setSize()V",
        "Landroid/support/v4/widget/EdgeEffectCompat;->onPull()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->draw()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->finish()V"
    ],
    "Landroid/support/v4/view/ViewPager$OnPageChangeListener;": [
        "Landroid/support/v4/view/ViewPager$OnPageChangeListener;->onPageSelected()V",
        "Landroid/support/v4/view/ViewPager$OnPageChangeListener;->onPageScrollStateChanged()V",
        "Landroid/support/v4/view/ViewPager$OnPageChangeListener;->onPageScrolled()V"
    ],
    "Landroid/view/FocusFinder;": [
        "Landroid/view/FocusFinder;->getInstance()Landroid/view/FocusFinder;",
        "Landroid/view/FocusFinder;->findNextFocus()Landroid/view/View;"
    ],
    "Landroid/view/SoundEffectConstants;": [
        "Landroid/view/SoundEffectConstants;->getContantForFocusDirection()I"
    ],
    "Landroid/support/v4/view/ViewConfigurationCompat;": [
        "Landroid/support/v4/view/ViewConfigurationCompat;->getScaledPagingTouchSlop()I"
    ],
    "Landroid/support/v4/view/ViewPager$PageTransformer;": [
        "Landroid/support/v4/view/ViewPager$PageTransformer;->transformPage()V"
    ],
    "Landroid/support/v4/view/ViewPager$SavedState;": [
        "Landroid/support/v4/view/ViewPager$SavedState;->getSuperState()Landroid/os/Parcelable;"
    ],
    "Landroid/support/v4/view/ViewPager$OnAdapterChangeListener;": [
        "Landroid/support/v4/view/ViewPager$OnAdapterChangeListener;->onAdapterChanged()V"
    ],
    "Landroid/view/accessibility/AccessibilityRecord;": [
        "Landroid/view/accessibility/AccessibilityRecord;->setChecked()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setScrollable()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setMaxScrollY()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getItemCount()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getRemovedCount()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setCurrentItemIndex()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getParcelableData()Landroid/os/Parcelable;",
        "Landroid/view/accessibility/AccessibilityRecord;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityRecord;->getToIndex()I",
        "Landroid/view/accessibility/AccessibilityRecord;->obtain()Landroid/view/accessibility/AccessibilityRecord;",
        "Landroid/view/accessibility/AccessibilityRecord;->setMaxScrollX()V",
        "Landroid/view/accessibility/AccessibilityRecord;->recycle()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getAddedCount()I",
        "Landroid/view/accessibility/AccessibilityRecord;->isChecked()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->setContentDescription()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setItemCount()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setPassword()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getFromIndex()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getWindowId()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setClassName()V",
        "Landroid/view/accessibility/AccessibilityRecord;->isEnabled()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->setFromIndex()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getBeforeText()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityRecord;->getScrollY()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityRecord;->getText()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityRecord;->setSource()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setRemovedCount()V",
        "Landroid/view/accessibility/AccessibilityRecord;->isScrollable()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->setFullScreen()V",
        "Landroid/view/accessibility/AccessibilityRecord;->isPassword()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->isFullScreen()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->setParcelableData()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setEnabled()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setBeforeText()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setScrollX()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getCurrentItemIndex()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getScrollX()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getSource()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityRecord;->setAddedCount()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setToIndex()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getMaxScrollX()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getMaxScrollY()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setScrollY()V"
    ],
    "Landroid/view/accessibility/AccessibilityNodeInfo;": [
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setLongClickable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isPassword()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setBoundsInParent()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setEnabled()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getChild()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isAccessibilityFocused()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->findAccessibilityNodeInfosByText()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isScrollable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getViewIdResourceName()Ljava/lang/String;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->recycle()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->addChild()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setCheckable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setMovementGranularities()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getText()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isFocusable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getBoundsInParent()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getBoundsInScreen()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->findFocus()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getChildCount()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setPackageName()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isClickable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getActions()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setSelected()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getLiveRegion()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->addAction()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->performAction()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isEnabled()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setFocused()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setFocusable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isCheckable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setText()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setSource()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setViewIdResourceName()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isChecked()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setLiveRegion()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setAccessibilityFocused()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getPackageName()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setClassName()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getMovementGranularities()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->obtain()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setContentDescription()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isFocused()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setParent()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isLongClickable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setBoundsInScreen()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setClickable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getParent()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isVisibleToUser()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getWindowId()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setVisibleToUser()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isSelected()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->focusSearch()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setScrollable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setPassword()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setChecked()V"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setEnabled()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setToIndex()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setBeforeText()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getText()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setCurrentItemIndex()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setFromIndex()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setScrollable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isScrollable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getWindowId()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getScrollY()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->recycle()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setScrollX()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getMaxScrollY()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getToIndex()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isFullScreen()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getItemCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setParcelableData()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->obtain()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getCurrentItemIndex()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isChecked()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setAddedCount()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getFromIndex()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setScrollY()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setMaxScrollY()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getRemovedCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getMaxScrollX()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getBeforeText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getScrollX()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setContentDescription()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setPassword()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setFullScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setItemCount()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setMaxScrollX()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setSource()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getSource()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getAddedCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setClassName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setRemovedCount()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getParcelableData()Landroid/os/Parcelable;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isPassword()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setChecked()V"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl;->newAccessibilityNodeProviderBridge()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->isTouchExplorationEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->getEnabledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->getInstalledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->addAccessibilityStateChangeListener()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->removeAccessibilityStateChangeListener()Z"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;->appendRecord()V",
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;->getRecordCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;->getRecord()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setChecked()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isCheckable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isVisibleToUser()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getActions()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isLongClickable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setAccessibilityFocused()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setFocusable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setMovementGranularities()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getMovementGranularities()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->obtain()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getViewIdResourceName()Ljava/lang/String;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isClickable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setSource()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getWindowId()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isPassword()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->recycle()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->performAction()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isFocused()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setCheckable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getLiveRegion()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isScrollable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isChecked()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setBoundsInScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setContentDescription()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->addChild()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setViewIdResourceName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setEnabled()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setText()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setVisibleToUser()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getParent()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getChild()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setClickable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->addAction()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->focusSearch()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getBoundsInParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setClassName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getChildCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getBoundsInScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setScrollable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->findFocus()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getPackageName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setLongClickable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setSelected()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setPassword()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setLiveRegion()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isFocusable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setPackageName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setFocused()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setBoundsInParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isSelected()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isAccessibilityFocused()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->findAccessibilityNodeInfosByText()Ljava/util/List;"
    ],
    "Landroid/hardware/display/DisplayManager;": [
        "Landroid/hardware/display/DisplayManager;->getDisplay()Landroid/view/Display;",
        "Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;"
    ],
    "Landroid/view/ViewTreeObserver;": [
        "Landroid/view/ViewTreeObserver;->removeOnWindowAttachListener()V",
        "Landroid/view/ViewTreeObserver;->addOnWindowFocusChangeListener()V",
        "Landroid/view/ViewTreeObserver;->addOnWindowAttachListener()V",
        "Landroid/view/ViewTreeObserver;->removeOnWindowFocusChangeListener()V"
    ],
    "Landroid/support/v4/media/TransportMediatorJellybeanMR2;": [
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->dropAudioFocus()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->refreshState()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->loseFocus()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->takeAudioFocus()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->startPlaying()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->stopPlaying()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->getRemoteControlClient()Ljava/lang/Object;",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->destroy()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->windowDetached()V",
        "Landroid/support/v4/media/TransportMediatorJellybeanMR2;->pausePlaying()V"
    ],
    "Landroid/support/v4/media/TransportMediatorCallback;": [
        "Landroid/support/v4/media/TransportMediatorCallback;->getPlaybackPosition()J",
        "Landroid/support/v4/media/TransportMediatorCallback;->playbackPositionUpdate()V"
    ],
    "Landroid/media/RemoteControlClient;": [
        "Landroid/media/RemoteControlClient;->setOnGetPlaybackPositionListener()V",
        "Landroid/media/RemoteControlClient;->setTransportControlFlags()V",
        "Landroid/media/RemoteControlClient;->setPlaybackState()V",
        "Landroid/media/RemoteControlClient;->setPlaybackPositionUpdateListener()V"
    ],
    "Landroid/support/v4/media/TransportPerformer;": [
        "Landroid/support/v4/media/TransportPerformer;->onGetCurrentPosition()J",
        "Landroid/support/v4/media/TransportPerformer;->onMediaButtonDown()Z",
        "Landroid/support/v4/media/TransportPerformer;->onStop()V",
        "Landroid/support/v4/media/TransportPerformer;->onStart()V",
        "Landroid/support/v4/media/TransportPerformer;->onSeekTo()V",
        "Landroid/support/v4/media/TransportPerformer;->onGetTransportControlFlags()I",
        "Landroid/support/v4/media/TransportPerformer;->onIsPlaying()Z",
        "Landroid/support/v4/media/TransportPerformer;->onGetBufferPercentage()I",
        "Landroid/support/v4/media/TransportPerformer;->onMediaButtonUp()Z",
        "Landroid/support/v4/media/TransportPerformer;->onGetDuration()J",
        "Landroid/support/v4/media/TransportPerformer;->onPause()V"
    ],
    "Landroid/support/v4/media/TransportMediator;": [
        "Landroid/support/v4/media/TransportMediator;->reportTransportControlsChanged()V",
        "Landroid/support/v4/media/TransportMediator;->reportPlayingChanged()V",
        "Landroid/support/v4/media/TransportMediator;->pushControllerState()V",
        "Landroid/support/v4/media/TransportMediator;->getListeners()[Landroid/support/v4/media/TransportStateListener;"
    ],
    "Landroid/support/v4/media/TransportStateListener;": [
        "Landroid/support/v4/media/TransportStateListener;->onTransportControlsChanged()V",
        "Landroid/support/v4/media/TransportStateListener;->onPlayingChanged()V"
    ],
    "Landroid/support/v4/net/ConnectivityManagerCompat$ConnectivityManagerCompatImpl;": [
        "Landroid/support/v4/net/ConnectivityManagerCompat$ConnectivityManagerCompatImpl;->isActiveNetworkMetered()Z"
    ],
    "Landroid/net/TrafficStats;": [
        "Landroid/net/TrafficStats;->setThreadStatsTag()V",
        "Landroid/net/TrafficStats;->tagSocket()V",
        "Landroid/net/TrafficStats;->clearThreadStatsTag()V",
        "Landroid/net/TrafficStats;->getThreadStatsTag()I",
        "Landroid/net/TrafficStats;->untagSocket()V",
        "Landroid/net/TrafficStats;->incrementOperationCount()V"
    ],
    "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;": [
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->setThreadStatsTag()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->getThreadStatsTag()I",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->untagSocket()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->clearThreadStatsTag()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->tagSocket()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->incrementOperationCount()V"
    ],
    "Landroid/app/Notification$Builder;": [
        "Landroid/app/Notification$Builder;->setContentIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setFullScreenIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setUsesChronometer()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setDefaults()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setTicker()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setLights()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->build()Landroid/app/Notification;",
        "Landroid/app/Notification$Builder;->setSound()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentInfo()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setDeleteIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setPriority()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setWhen()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setProgress()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentText()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setVibrate()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentTitle()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setNumber()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setSubText()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->addAction()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setLargeIcon()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setOnlyAlertOnce()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setSmallIcon()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setAutoCancel()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setOngoing()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->getNotification()Landroid/app/Notification;"
    ],
    "Landroid/support/v4/app/FragmentTabHost$TabInfo;": [
        "Landroid/support/v4/app/FragmentTabHost$TabInfo;->access$400()Landroid/os/Bundle;",
        "Landroid/support/v4/app/FragmentTabHost$TabInfo;->access$100()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentTabHost$TabInfo;->access$300()Ljava/lang/Class;",
        "Landroid/support/v4/app/FragmentTabHost$TabInfo;->access$200()Ljava/lang/String;",
        "Landroid/support/v4/app/FragmentTabHost$TabInfo;->access$102()Landroid/support/v4/app/Fragment;"
    ],
    "Landroid/support/v4/app/FragmentManager;": [
        "Landroid/support/v4/app/FragmentManager;->beginTransaction()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentManager;->findFragmentByTag()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManager;->getFragment()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManager;->saveFragmentInstanceState()Landroid/support/v4/app/Fragment$SavedState;",
        "Landroid/support/v4/app/FragmentManager;->executePendingTransactions()Z",
        "Landroid/support/v4/app/FragmentManager;->putFragment()V",
        "Landroid/support/v4/app/FragmentManager;->popBackStack()V"
    ],
    "Landroid/support/v4/app/FragmentTransaction;": [
        "Landroid/support/v4/app/FragmentTransaction;->remove()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->attach()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->detach()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->commit()I",
        "Landroid/support/v4/app/FragmentTransaction;->add()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->commitAllowingStateLoss()I"
    ],
    "Landroid/support/v4/app/FragmentTabHost;": [
        "Landroid/support/v4/app/FragmentTabHost;->getId()I",
        "Landroid/support/v4/app/FragmentTabHost;->findViewById()Landroid/view/View;",
        "Landroid/support/v4/app/FragmentTabHost;->setId()V",
        "Landroid/support/v4/app/FragmentTabHost;->setCurrentTabByTag()V",
        "Landroid/support/v4/app/FragmentTabHost;->ensureContent()V",
        "Landroid/support/v4/app/FragmentTabHost;->ensureHierarchy()V",
        "Landroid/support/v4/app/FragmentTabHost;->doTabChanged()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTabHost;->getCurrentTabTag()Ljava/lang/String;",
        "Landroid/support/v4/app/FragmentTabHost;->addTab()V",
        "Landroid/support/v4/app/FragmentTabHost;->addView()V"
    ],
    "Landroid/widget/TabWidget;": [
        "Landroid/widget/TabWidget;->setId()V",
        "Landroid/widget/TabWidget;->setOrientation()V"
    ],
    "Landroid/widget/TabHost;": [
        "Landroid/widget/TabHost;->onRestoreInstanceState()V",
        "Landroid/widget/TabHost;->setup()V",
        "Landroid/widget/TabHost;->onSaveInstanceState()Landroid/os/Parcelable;",
        "Landroid/widget/TabHost;->onDetachedFromWindow()V",
        "Landroid/widget/TabHost;->onAttachedToWindow()V",
        "Landroid/widget/TabHost;->setOnTabChangedListener()V"
    ],
    "Landroid/widget/TabHost$TabSpec;": [
        "Landroid/widget/TabHost$TabSpec;->setContent()Landroid/widget/TabHost$TabSpec;",
        "Landroid/widget/TabHost$TabSpec;->getTag()Ljava/lang/String;"
    ],
    "Landroid/support/v4/app/FragmentTabHost$SavedState;": [
        "Landroid/support/v4/app/FragmentTabHost$SavedState;->getSuperState()Landroid/os/Parcelable;"
    ],
    "Landroid/widget/TabHost$OnTabChangeListener;": [
        "Landroid/widget/TabHost$OnTabChangeListener;->onTabChanged()V"
    ],
    "Landroid/support/v4/app/FragmentActivity;": [
        "Landroid/support/v4/app/FragmentActivity;->getLoaderManager()Landroid/support/v4/app/LoaderManagerImpl;",
        "Landroid/support/v4/app/FragmentActivity;->onPrepareOptionsPanel()Z",
        "Landroid/support/v4/app/FragmentActivity;->dump()V",
        "Landroid/support/v4/app/FragmentActivity;->onResumeFragments()V",
        "Landroid/support/v4/app/FragmentActivity;->supportInvalidateOptionsMenu()V",
        "Landroid/support/v4/app/FragmentActivity;->getResources()Landroid/content/res/Resources;",
        "Landroid/support/v4/app/FragmentActivity;->onCreatePanelMenu()Z",
        "Landroid/support/v4/app/FragmentActivity;->onCreateContextMenu()V",
        "Landroid/support/v4/app/FragmentActivity;->onReallyStop()V",
        "Landroid/support/v4/app/FragmentActivity;->startActivityFromFragment()V",
        "Landroid/support/v4/app/FragmentActivity;->getText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/app/FragmentActivity;->getClassLoader()Ljava/lang/ClassLoader;",
        "Landroid/support/v4/app/FragmentActivity;->getSystemService()Ljava/lang/Object;",
        "Landroid/support/v4/app/FragmentActivity;->dumpViewHierarchy()V",
        "Landroid/support/v4/app/FragmentActivity;->viewToString()Ljava/lang/String;",
        "Landroid/support/v4/app/FragmentActivity;->finish()V",
        "Landroid/support/v4/app/FragmentActivity;->onBackPressed()V",
        "Landroid/support/v4/app/FragmentActivity;->getLastNonConfigurationInstance()Ljava/lang/Object;",
        "Landroid/support/v4/app/FragmentActivity;->getLayoutInflater()Landroid/view/LayoutInflater;",
        "Landroid/support/v4/app/FragmentActivity;->invalidateSupportFragment()V",
        "Landroid/support/v4/app/FragmentActivity;->getMenuInflater()Landroid/view/MenuInflater;",
        "Landroid/support/v4/app/FragmentActivity;->doReallyStop()V",
        "Landroid/support/v4/app/FragmentActivity;->getWindow()Landroid/view/Window;",
        "Landroid/support/v4/app/FragmentActivity;->isFinishing()Z",
        "Landroid/support/v4/app/FragmentActivity;->onAttachFragment()V",
        "Landroid/support/v4/app/FragmentActivity;->onRetainCustomNonConfigurationInstance()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/app/FragmentStatePagerAdapter;": [
        "Landroid/support/v4/app/FragmentStatePagerAdapter;->getItem()Landroid/support/v4/app/Fragment;"
    ],
    "Landroid/support/v4/app/ListFragment;": [
        "Landroid/support/v4/app/ListFragment;->getView()Landroid/view/View;",
        "Landroid/support/v4/app/ListFragment;->setListShown()V",
        "Landroid/support/v4/app/ListFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Landroid/support/v4/app/ListFragment;->setListAdapter()V",
        "Landroid/support/v4/app/ListFragment;->ensureList()V"
    ],
    "Landroid/support/v4/app/TaskStackBuilder;": [
        "Landroid/support/v4/app/TaskStackBuilder;->addParentStack()Landroid/support/v4/app/TaskStackBuilder;",
        "Landroid/support/v4/app/TaskStackBuilder;->addNextIntent()Landroid/support/v4/app/TaskStackBuilder;",
        "Landroid/support/v4/app/TaskStackBuilder;->create()Landroid/support/v4/app/TaskStackBuilder;",
        "Landroid/support/v4/app/TaskStackBuilder;->getPendingIntent()Landroid/app/PendingIntent;",
        "Landroid/support/v4/app/TaskStackBuilder;->editIntentAt()Landroid/content/Intent;",
        "Landroid/support/v4/app/TaskStackBuilder;->startActivities()V"
    ],
    "Landroid/support/v4/app/TaskStackBuilder$SupportParentable;": [
        "Landroid/support/v4/app/TaskStackBuilder$SupportParentable;->getSupportParentActivityIntent()Landroid/content/Intent;"
    ],
    "Landroid/support/v4/app/NavUtils;": [
        "Landroid/support/v4/app/NavUtils;->navigateUpTo()V",
        "Landroid/support/v4/app/NavUtils;->getParentActivityName()Ljava/lang/String;",
        "Landroid/support/v4/app/NavUtils;->getParentActivityIntent()Landroid/content/Intent;"
    ],
    "Landroid/support/v4/app/TaskStackBuilder$TaskStackBuilderImpl;": [
        "Landroid/support/v4/app/TaskStackBuilder$TaskStackBuilderImpl;->getPendingIntent()Landroid/app/PendingIntent;"
    ],
    "Landroid/app/Notification$BigPictureStyle;": [
        "Landroid/app/Notification$BigPictureStyle;->setBigContentTitle()Landroid/app/Notification$BigPictureStyle;",
        "Landroid/app/Notification$BigPictureStyle;->bigPicture()Landroid/app/Notification$BigPictureStyle;",
        "Landroid/app/Notification$BigPictureStyle;->bigLargeIcon()Landroid/app/Notification$BigPictureStyle;",
        "Landroid/app/Notification$BigPictureStyle;->setSummaryText()Landroid/app/Notification$BigPictureStyle;"
    ],
    "Landroid/app/Notification$BigTextStyle;": [
        "Landroid/app/Notification$BigTextStyle;->setBigContentTitle()Landroid/app/Notification$BigTextStyle;",
        "Landroid/app/Notification$BigTextStyle;->bigText()Landroid/app/Notification$BigTextStyle;",
        "Landroid/app/Notification$BigTextStyle;->setSummaryText()Landroid/app/Notification$BigTextStyle;"
    ],
    "Landroid/app/Notification$InboxStyle;": [
        "Landroid/app/Notification$InboxStyle;->setBigContentTitle()Landroid/app/Notification$InboxStyle;",
        "Landroid/app/Notification$InboxStyle;->addLine()Landroid/app/Notification$InboxStyle;",
        "Landroid/app/Notification$InboxStyle;->setSummaryText()Landroid/app/Notification$InboxStyle;"
    ],
    "Landroid/support/v4/app/ActivityOptionsCompatJB;": [
        "Landroid/support/v4/app/ActivityOptionsCompatJB;->makeScaleUpAnimation()Landroid/support/v4/app/ActivityOptionsCompatJB;",
        "Landroid/support/v4/app/ActivityOptionsCompatJB;->makeThumbnailScaleUpAnimation()Landroid/support/v4/app/ActivityOptionsCompatJB;",
        "Landroid/support/v4/app/ActivityOptionsCompatJB;->makeCustomAnimation()Landroid/support/v4/app/ActivityOptionsCompatJB;"
    ],
    "Landroid/support/v4/app/BackStackRecord;": [
        "Landroid/support/v4/app/BackStackRecord;->replace()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/BackStackRecord;->addOp()V",
        "Landroid/support/v4/app/BackStackRecord;->popFromBackStack()V",
        "Landroid/support/v4/app/BackStackRecord;->getName()Ljava/lang/String;",
        "Landroid/support/v4/app/BackStackRecord;->toString()Ljava/lang/String;",
        "Landroid/support/v4/app/BackStackRecord;->bumpBackStackNesting()V",
        "Landroid/support/v4/app/BackStackRecord;->setCustomAnimations()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/BackStackRecord;->commitInternal()I",
        "Landroid/support/v4/app/BackStackRecord;->doAddOp()V",
        "Landroid/support/v4/app/BackStackRecord;->dump()V"
    ],
    "Landroid/app/ActivityOptions;": [
        "Landroid/app/ActivityOptions;->update()V",
        "Landroid/app/ActivityOptions;->toBundle()Landroid/os/Bundle;",
        "Landroid/app/ActivityOptions;->makeScaleUpAnimation()Landroid/app/ActivityOptions;",
        "Landroid/app/ActivityOptions;->makeCustomAnimation()Landroid/app/ActivityOptions;",
        "Landroid/app/ActivityOptions;->makeThumbnailScaleUpAnimation()Landroid/app/ActivityOptions;"
    ],
    "Landroid/support/v4/app/NoSaveStateFrameLayout;": [
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->dispatchFreezeSelfOnly()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->setLayoutParams()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->addView()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->dispatchThawSelfOnly()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->wrap()Landroid/view/ViewGroup;"
    ],
    "Landroid/support/v4/app/FragmentManagerImpl;": [
        "Landroid/support/v4/app/FragmentManagerImpl;->attachFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->addFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->findFragmentById()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->reportBackStackChanged()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchOptionsMenuClosed()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->moveToState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchCreateOptionsMenu()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchReallyStop()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchStop()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->popBackStackState()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchStart()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeInactive()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeOpenCloseAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/FragmentManagerImpl;->restoreAllState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->setBackStackIndex()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchPause()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchPrepareOptionsMenu()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchLowMemory()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->putFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->transitToStyleIndex()I",
        "Landroid/support/v4/app/FragmentManagerImpl;->enqueueAction()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchConfigurationChanged()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->findFragmentByWho()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->reverseTransit()I",
        "Landroid/support/v4/app/FragmentManagerImpl;->addBackStackState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->removeFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->throwException()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->performPendingDeferredStart()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchContextItemSelected()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchResume()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchCreate()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchDestroy()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->saveAllState()Landroid/os/Parcelable;",
        "Landroid/support/v4/app/FragmentManagerImpl;->checkStateLoss()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->popBackStackImmediate()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->attachActivity()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->hideFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->detachFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->startPendingDeferredFragments()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->getFragment()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->showFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->retainNonConfig()Ljava/util/ArrayList;",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchActivityCreated()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeActive()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->loadAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/FragmentManagerImpl;->findFragmentByTag()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->executePendingTransactions()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeFadeAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/FragmentManagerImpl;->freeBackStackIndex()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchDestroyView()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->saveFragmentBasicState()Landroid/os/Bundle;",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchOptionsItemSelected()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dump()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->allocBackStackIndex()I",
        "Landroid/support/v4/app/FragmentManagerImpl;->noteStateNotSaved()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->saveFragmentViewState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->execPendingActions()Z"
    ],
    "Landroid/view/Menu;": [
        "Landroid/view/Menu;->findItem()Landroid/view/MenuItem;",
        "Landroid/view/Menu;->clear()V"
    ],
    "Landroid/support/v4/app/ShareCompat;": [
        "Landroid/support/v4/app/ShareCompat;->configureMenuItem()V"
    ],
    "Landroid/support/v4/app/ShareCompat$ShareCompatImpl;": [
        "Landroid/support/v4/app/ShareCompat$ShareCompatImpl;->configureMenuItem()V"
    ],
    "Landroid/support/v4/app/FragmentPagerAdapter;": [
        "Landroid/support/v4/app/FragmentPagerAdapter;->makeFragmentName()Ljava/lang/String;",
        "Landroid/support/v4/app/FragmentPagerAdapter;->getItem()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentPagerAdapter;->getItemId()J"
    ],
    "Landroid/support/v4/app/LoaderManagerImpl;": [
        "Landroid/support/v4/app/LoaderManagerImpl;->doDestroy()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->updateActivity()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doStop()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->installLoader()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doReportNextStart()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->createAndInstallLoader()Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;",
        "Landroid/support/v4/app/LoaderManagerImpl;->dump()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->createLoader()Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;",
        "Landroid/support/v4/app/LoaderManagerImpl;->doRetain()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->finishRetain()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doReportStart()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->hasRunningLoaders()Z",
        "Landroid/support/v4/app/LoaderManagerImpl;->doStart()V"
    ],
    "Landroid/view/animation/AlphaAnimation;": [
        "Landroid/view/animation/AlphaAnimation;->setInterpolator()V",
        "Landroid/view/animation/AlphaAnimation;->setDuration()V"
    ],
    "Landroid/view/animation/ScaleAnimation;": [
        "Landroid/view/animation/ScaleAnimation;->setDuration()V",
        "Landroid/view/animation/ScaleAnimation;->setInterpolator()V"
    ],
    "Landroid/view/animation/AnimationSet;": [
        "Landroid/view/animation/AnimationSet;->addAnimation()V"
    ],
    "Ljava/lang/RuntimeException;": [
        "Ljava/lang/RuntimeException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;"
    ],
    "Landroid/support/v4/app/FragmentContainer;": [
        "Landroid/support/v4/app/FragmentContainer;->findViewById()Landroid/view/View;"
    ],
    "Landroid/support/v4/app/FragmentManager$OnBackStackChangedListener;": [
        "Landroid/support/v4/app/FragmentManager$OnBackStackChangedListener;->onBackStackChanged()V"
    ],
    "Landroid/support/v4/app/FragmentState;": [
        "Landroid/support/v4/app/FragmentState;->instantiate()Landroid/support/v4/app/Fragment;"
    ],
    "Landroid/support/v4/app/BackStackState;": [
        "Landroid/support/v4/app/BackStackState;->instantiate()Landroid/support/v4/app/BackStackRecord;"
    ],
    "Landroid/support/v4/app/LoaderManager$LoaderCallbacks;": [
        "Landroid/support/v4/app/LoaderManager$LoaderCallbacks;->onCreateLoader()Landroid/support/v4/content/Loader;"
    ],
    "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;": [
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->stop()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->toString()Ljava/lang/String;",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->dump()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->callOnLoadFinished()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->destroy()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->start()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->finishRetain()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->retain()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->reportStart()V"
    ],
    "Landroid/support/v4/app/ActivityCompatHoneycomb;": [
        "Landroid/support/v4/app/ActivityCompatHoneycomb;->invalidateOptionsMenu()V"
    ],
    "Landroid/support/v4/app/ActivityCompatJB;": [
        "Landroid/support/v4/app/ActivityCompatJB;->startActivityForResult()V",
        "Landroid/support/v4/app/ActivityCompatJB;->startActivity()V"
    ],
    "Landroid/widget/ShareActionProvider;": [
        "Landroid/widget/ShareActionProvider;->setShareIntent()V",
        "Landroid/widget/ShareActionProvider;->setShareHistoryFileName()V"
    ],
    "Landroid/support/v4/app/NavUtils$NavUtilsImpl;": [
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->shouldUpRecreateTask()Z",
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->getParentActivityName()Ljava/lang/String;",
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->getParentActivityIntent()Landroid/content/Intent;",
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->navigateUpTo()V"
    ],
    "Landroid/support/v4/content/IntentCompat;": [
        "Landroid/support/v4/content/IntentCompat;->makeMainActivity()Landroid/content/Intent;"
    ],
    "Landroid/support/v4/app/ActionBarDrawerToggle$DelegateProvider;": [
        "Landroid/support/v4/app/ActionBarDrawerToggle$DelegateProvider;->getDrawerToggleDelegate()Landroid/support/v4/app/ActionBarDrawerToggle$Delegate;"
    ],
    "Landroid/support/v4/app/ActionBarDrawerToggle;": [
        "Landroid/support/v4/app/ActionBarDrawerToggle;->setActionBarDescription()V",
        "Landroid/support/v4/app/ActionBarDrawerToggle;->getThemeUpIndicator()Landroid/graphics/drawable/Drawable;",
        "Landroid/support/v4/app/ActionBarDrawerToggle;->setActionBarUpIndicator()V",
        "Landroid/support/v4/app/ActionBarDrawerToggle;->syncState()V"
    ],
    "Landroid/support/v4/app/ActionBarDrawerToggle$SlideDrawable;": [
        "Landroid/support/v4/app/ActionBarDrawerToggle$SlideDrawable;->setPosition()V",
        "Landroid/support/v4/app/ActionBarDrawerToggle$SlideDrawable;->setOffset()V",
        "Landroid/support/v4/app/ActionBarDrawerToggle$SlideDrawable;->getPosition()F"
    ],
    "Landroid/support/v4/app/ActionBarDrawerToggle$Delegate;": [
        "Landroid/support/v4/app/ActionBarDrawerToggle$Delegate;->getThemeUpIndicator()Landroid/graphics/drawable/Drawable;",
        "Landroid/support/v4/app/ActionBarDrawerToggle$Delegate;->setActionBarDescription()V",
        "Landroid/support/v4/app/ActionBarDrawerToggle$Delegate;->setActionBarUpIndicator()V"
    ],
    "Landroid/support/v4/app/ActionBarDrawerToggle$ActionBarDrawerToggleImpl;": [
        "Landroid/support/v4/app/ActionBarDrawerToggle$ActionBarDrawerToggleImpl;->setActionBarDescription()Ljava/lang/Object;",
        "Landroid/support/v4/app/ActionBarDrawerToggle$ActionBarDrawerToggleImpl;->getThemeUpIndicator()Landroid/graphics/drawable/Drawable;",
        "Landroid/support/v4/app/ActionBarDrawerToggle$ActionBarDrawerToggleImpl;->setActionBarUpIndicator()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/app/DialogFragment;": [
        "Landroid/support/v4/app/DialogFragment;->onCreateDialog()Landroid/app/Dialog;",
        "Landroid/support/v4/app/DialogFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Landroid/support/v4/app/DialogFragment;->getFragmentManager()Landroid/support/v4/app/FragmentManager;",
        "Landroid/support/v4/app/DialogFragment;->dismissInternal()V",
        "Landroid/support/v4/app/DialogFragment;->getView()Landroid/view/View;",
        "Landroid/support/v4/app/DialogFragment;->getTheme()I"
    ],
    "Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;": [
        "Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;->newArray()[Ljava/lang/Object;",
        "Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;->createFromParcel()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/os/EnvironmentCompatKitKat;": [
        "Landroid/support/v4/os/EnvironmentCompatKitKat;->getStorageState()Ljava/lang/String;"
    ],
    "Landroid/support/v4/os/ParcelableCompatCreatorHoneycombMR2Stub;": [
        "Landroid/support/v4/os/ParcelableCompatCreatorHoneycombMR2Stub;->instantiate()Landroid/os/Parcelable$Creator;"
    ]
}