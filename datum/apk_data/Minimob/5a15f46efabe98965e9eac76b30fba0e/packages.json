{
    "Ljapa/parser/JavaCharStream;": [
        "Ljapa/parser/JavaCharStream;->readChar()C",
        "Ljapa/parser/JavaCharStream;->FillBuff()V",
        "Ljapa/parser/JavaCharStream;->UpdateLineColumn()V",
        "Ljapa/parser/JavaCharStream;->getBeginLine()I",
        "Ljapa/parser/JavaCharStream;->AdjustBuffSize()V",
        "Ljapa/parser/JavaCharStream;->backup()V",
        "Ljapa/parser/JavaCharStream;->hexval()I",
        "Ljapa/parser/JavaCharStream;->getBeginColumn()I",
        "Ljapa/parser/JavaCharStream;->GetImage()Ljava/lang/String;",
        "Ljapa/parser/JavaCharStream;->ReInit()V",
        "Ljapa/parser/JavaCharStream;->getEndColumn()I",
        "Ljapa/parser/JavaCharStream;->getEndLine()I",
        "Ljapa/parser/JavaCharStream;->GetSuffix()[C",
        "Ljapa/parser/JavaCharStream;->BeginToken()C",
        "Ljapa/parser/JavaCharStream;->ExpandBuff()V",
        "Ljapa/parser/JavaCharStream;->ReadByte()C"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->setProperty()Ljava/lang/String;",
        "Ljava/lang/System;->arraycopy()V",
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->identityHashCode()I",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->nanoTime()J",
        "Ljava/lang/System;->load()V",
        "Ljava/lang/System;->getProperties()Ljava/util/Properties;",
        "Ljava/lang/System;->exit()V",
        "Ljava/lang/System;->gc()V"
    ],
    "Ljava/lang/Throwable;": [
        "Ljava/lang/Throwable;->printStackTrace()V",
        "Ljava/lang/Throwable;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->close()V",
        "Ljava/io/Reader;->read()I"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->getChars()V",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->replaceFirst()Ljava/lang/String;",
        "Ljava/lang/String;->toString()Ljava/lang/String;",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->concat()Ljava/lang/String;",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->trim()Ljava/lang/String;"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->delete()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->setLength()V",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->length()I",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->numberOfTrailingZeros()I",
        "Ljava/lang/Integer;->intValue()I",
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->bitCount()I",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->toString()Ljava/lang/String;",
        "Ljava/lang/Exception;->getCause()Ljava/lang/Throwable;",
        "Ljava/lang/Exception;->printStackTrace()V"
    ],
    "Ljapa/parser/ParseException;": [
        "Ljapa/parser/ParseException;->add_escapes()Ljava/lang/String;"
    ],
    "Ljapa/parser/TokenMgrError;": [
        "Ljapa/parser/TokenMgrError;->addEscapes()Ljava/lang/String;",
        "Ljapa/parser/TokenMgrError;->LexicalError()Ljava/lang/String;"
    ],
    "Ljava/lang/Error;": [
        "Ljava/lang/Error;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->contains()Z",
        "Ljava/util/List;->addAll()Z",
        "Ljava/util/List;->indexOf()I",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->toArray()[Ljava/lang/Object;",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->isEmpty()Z",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->set()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ASTParserTokenManager;": [
        "Ljapa/parser/ASTParserTokenManager;->jjStartNfa_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa2_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa0_2()I",
        "Ljapa/parser/ASTParserTokenManager;->jjStartNfaWithStates_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa1_1()I",
        "Ljapa/parser/ASTParserTokenManager;->ReInitRounds()V",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa8_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjCanMove_0()Z",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa5_0()I",
        "Ljapa/parser/ASTParserTokenManager;->popJavadoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa3_0()I",
        "Ljapa/parser/ASTParserTokenManager;->clearComments()V",
        "Ljapa/parser/ASTParserTokenManager;->MoreLexicalActions()V",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa4_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjFillToken()Ljapa/parser/Token;",
        "Ljapa/parser/ASTParserTokenManager;->jjCheckNAddStates()V",
        "Ljapa/parser/ASTParserTokenManager;->jjCanMove_2()Z",
        "Ljapa/parser/ASTParserTokenManager;->pushJavadoc()V",
        "Ljapa/parser/ASTParserTokenManager;->jjAddStates()V",
        "Ljapa/parser/ASTParserTokenManager;->getComments()Ljava/util/List;",
        "Ljapa/parser/ASTParserTokenManager;->SwitchTo()V",
        "Ljapa/parser/ASTParserTokenManager;->jjStopAtPos()I",
        "Ljapa/parser/ASTParserTokenManager;->getNextToken()Ljapa/parser/Token;",
        "Ljapa/parser/ASTParserTokenManager;->SkipLexicalActions()V",
        "Ljapa/parser/ASTParserTokenManager;->jjCanMove_1()Z",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa11_0()I",
        "Ljapa/parser/ASTParserTokenManager;->ReInit()V",
        "Ljapa/parser/ASTParserTokenManager;->jjCheckNAddTwoStates()V",
        "Ljapa/parser/ASTParserTokenManager;->TokenLexicalActions()V",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa1_2()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa9_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjCheckNAdd()V",
        "Ljapa/parser/ASTParserTokenManager;->jjStopStringLiteralDfa_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveNfa_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa1_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa10_0()I",
        "Ljapa/parser/ASTParserTokenManager;->CommonTokenAction()V",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa6_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa7_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa0_0()I",
        "Ljapa/parser/ASTParserTokenManager;->jjMoveStringLiteralDfa0_1()I"
    ],
    "Ljapa/parser/ASTParser;": [
        "Ljapa/parser/ASTParser;->PreDecrementExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->EnumDeclaration()Ljapa/parser/ast/body/EnumDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3R_85()Z",
        "Ljapa/parser/ASTParser;->jj_3R_116()Z",
        "Ljapa/parser/ASTParser;->jj_3_33()Z",
        "Ljapa/parser/ASTParser;->jj_3R_228()Z",
        "Ljapa/parser/ASTParser;->jj_3R_167()Z",
        "Ljapa/parser/ASTParser;->TypeBound()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_225()Z",
        "Ljapa/parser/ASTParser;->jj_3R_385()Z",
        "Ljapa/parser/ASTParser;->jj_3R_95()Z",
        "Ljapa/parser/ASTParser;->jj_3R_111()Z",
        "Ljapa/parser/ASTParser;->jj_3R_355()Z",
        "Ljapa/parser/ASTParser;->ResultType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ASTParser;->Statements()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->EnumConstantDeclaration()Ljapa/parser/ast/body/EnumConstantDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3R_376()Z",
        "Ljapa/parser/ASTParser;->jj_3R_282()Z",
        "Ljapa/parser/ASTParser;->jj_3R_209()Z",
        "Ljapa/parser/ASTParser;->jj_3_28()Z",
        "Ljapa/parser/ASTParser;->jj_2_37()Z",
        "Ljapa/parser/ASTParser;->jj_2_28()Z",
        "Ljapa/parser/ASTParser;->DoStatement()Ljapa/parser/ast/stmt/DoStmt;",
        "Ljapa/parser/ASTParser;->CastExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_rescan_token()V",
        "Ljapa/parser/ASTParser;->jj_3R_358()Z",
        "Ljapa/parser/ASTParser;->jj_2_10()Z",
        "Ljapa/parser/ASTParser;->jj_2_27()Z",
        "Ljapa/parser/ASTParser;->jj_3R_186()Z",
        "Ljapa/parser/ASTParser;->ReInit()V",
        "Ljapa/parser/ASTParser;->jj_3R_338()Z",
        "Ljapa/parser/ASTParser;->jj_3_10()Z",
        "Ljapa/parser/ASTParser;->jj_2_16()Z",
        "Ljapa/parser/ASTParser;->UnaryExpressionNotPlusMinus()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->SwitchEntry()Ljapa/parser/ast/stmt/SwitchEntryStmt;",
        "Ljapa/parser/ASTParser;->jj_2_1()Z",
        "Ljapa/parser/ASTParser;->Modifiers()Ljapa/parser/ASTParser$Modifier;",
        "Ljapa/parser/ASTParser;->AndExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->ClassOrInterfaceDeclaration()Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3R_202()Z",
        "Ljapa/parser/ASTParser;->jj_3R_173()Z",
        "Ljapa/parser/ASTParser;->jj_3R_93()Z",
        "Ljapa/parser/ASTParser;->jj_3R_339()Z",
        "Ljapa/parser/ASTParser;->jj_3R_242()Z",
        "Ljapa/parser/ASTParser;->ExclusiveOrExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_236()Z",
        "Ljapa/parser/ASTParser;->jj_3R_367()Z",
        "Ljapa/parser/ASTParser;->jj_3R_327()Z",
        "Ljapa/parser/ASTParser;->PackageDeclaration()Ljapa/parser/ast/PackageDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3_25()Z",
        "Ljapa/parser/ASTParser;->jj_3_3()Z",
        "Ljapa/parser/ASTParser;->jj_3R_315()Z",
        "Ljapa/parser/ASTParser;->ForInit()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_256()Z",
        "Ljapa/parser/ASTParser;->RelationalExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->RUNSIGNEDSHIFT()V",
        "Ljapa/parser/ASTParser;->jj_3_19()Z",
        "Ljapa/parser/ASTParser;->jj_3R_285()Z",
        "Ljapa/parser/ASTParser;->jj_3R_346()Z",
        "Ljapa/parser/ASTParser;->jj_3_13()Z",
        "Ljapa/parser/ASTParser;->jj_3R_290()Z",
        "Ljapa/parser/ASTParser;->ExplicitConstructorInvocation()Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;",
        "Ljapa/parser/ASTParser;->ClassOrInterfaceBody()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_58()Z",
        "Ljapa/parser/ASTParser;->jj_3_15()Z",
        "Ljapa/parser/ASTParser;->jj_3R_159()Z",
        "Ljapa/parser/ASTParser;->jj_consume_token()Ljapa/parser/Token;",
        "Ljapa/parser/ASTParser;->jj_3R_142()Z",
        "Ljapa/parser/ASTParser;->Statement()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ASTParser;->jj_3R_265()Z",
        "Ljapa/parser/ASTParser;->jj_3R_328()Z",
        "Ljapa/parser/ASTParser;->jj_3_14()Z",
        "Ljapa/parser/ASTParser;->jj_3R_124()Z",
        "Ljapa/parser/ASTParser;->jj_3R_175()Z",
        "Ljapa/parser/ASTParser;->EmptyStatement()Ljapa/parser/ast/stmt/EmptyStmt;",
        "Ljapa/parser/ASTParser;->jj_3_4()Z",
        "Ljapa/parser/ASTParser;->jj_3R_239()Z",
        "Ljapa/parser/ASTParser;->jj_3R_90()Z",
        "Ljapa/parser/ASTParser;->PostfixExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_289()Z",
        "Ljapa/parser/ASTParser;->jj_3R_245()Z",
        "Ljapa/parser/ASTParser;->jj_3R_200()Z",
        "Ljapa/parser/ASTParser;->jj_3R_174()Z",
        "Ljapa/parser/ASTParser;->jj_3R_54()Z",
        "Ljapa/parser/ASTParser;->jj_3R_276()Z",
        "Ljapa/parser/ASTParser;->jj_3R_203()Z",
        "Ljapa/parser/ASTParser;->jj_3R_275()Z",
        "Ljapa/parser/ASTParser;->AllocationExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_127()Z",
        "Ljapa/parser/ASTParser;->jj_3R_157()Z",
        "Ljapa/parser/ASTParser;->jj_3R_101()Z",
        "Ljapa/parser/ASTParser;->jj_3R_135()Z",
        "Ljapa/parser/ASTParser;->jj_3R_81()Z",
        "Ljapa/parser/ASTParser;->jj_3R_251()Z",
        "Ljapa/parser/ASTParser;->jj_3R_365()Z",
        "Ljapa/parser/ASTParser;->jj_3R_164()Z",
        "Ljapa/parser/ASTParser;->jj_3R_153()Z",
        "Ljapa/parser/ASTParser;->ShiftExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_234()Z",
        "Ljapa/parser/ASTParser;->jj_3R_375()Z",
        "Ljapa/parser/ASTParser;->jj_3R_244()Z",
        "Ljapa/parser/ASTParser;->jj_3R_360()Z",
        "Ljapa/parser/ASTParser;->jj_3R_88()Z",
        "Ljapa/parser/ASTParser;->jj_3_21()Z",
        "Ljapa/parser/ASTParser;->jj_3R_187()Z",
        "Ljapa/parser/ASTParser;->jj_3R_205()Z",
        "Ljapa/parser/ASTParser;->jj_3R_274()Z",
        "Ljapa/parser/ASTParser;->jj_3R_65()Z",
        "Ljapa/parser/ASTParser;->jj_3R_141()Z",
        "Ljapa/parser/ASTParser;->jj_3R_91()Z",
        "Ljapa/parser/ASTParser;->jj_3R_207()Z",
        "Ljapa/parser/ASTParser;->jj_2_7()Z",
        "Ljapa/parser/ASTParser;->TryStatement()Ljapa/parser/ast/stmt/TryStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_172()Z",
        "Ljapa/parser/ASTParser;->jj_3R_294()Z",
        "Ljapa/parser/ASTParser;->jj_3R_278()Z",
        "Ljapa/parser/ASTParser;->jj_3R_130()Z",
        "Ljapa/parser/ASTParser;->jj_3R_382()Z",
        "Ljapa/parser/ASTParser;->jj_3R_59()Z",
        "Ljapa/parser/ASTParser;->jj_2_13()Z",
        "Ljapa/parser/ASTParser;->jj_3R_230()Z",
        "Ljapa/parser/ASTParser;->jj_3R_377()Z",
        "Ljapa/parser/ASTParser;->jj_3R_321()Z",
        "Ljapa/parser/ASTParser;->MultiplicativeExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_67()Z",
        "Ljapa/parser/ASTParser;->jj_3R_96()Z",
        "Ljapa/parser/ASTParser;->jj_2_9()Z",
        "Ljapa/parser/ASTParser;->add()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_206()Z",
        "Ljapa/parser/ASTParser;->TypeParameter()Ljapa/parser/ast/TypeParameter;",
        "Ljapa/parser/ASTParser;->jj_3R_322()Z",
        "Ljapa/parser/ASTParser;->jj_3R_341()Z",
        "Ljapa/parser/ASTParser;->jj_3R_131()Z",
        "Ljapa/parser/ASTParser;->ThrowStatement()Ljapa/parser/ast/stmt/ThrowStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_286()Z",
        "Ljapa/parser/ASTParser;->jj_add_error_token()V",
        "Ljapa/parser/ASTParser;->jj_3R_238()Z",
        "Ljapa/parser/ASTParser;->jj_3R_308()Z",
        "Ljapa/parser/ASTParser;->NameList()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_save()V",
        "Ljapa/parser/ASTParser;->jj_3R_229()Z",
        "Ljapa/parser/ASTParser;->jj_3R_126()Z",
        "Ljapa/parser/ASTParser;->Type()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ASTParser;->jj_3R_53()Z",
        "Ljapa/parser/ASTParser;->jj_2_25()Z",
        "Ljapa/parser/ASTParser;->jj_3R_383()Z",
        "Ljapa/parser/ASTParser;->jj_3R_123()Z",
        "Ljapa/parser/ASTParser;->jj_3R_60()Z",
        "Ljapa/parser/ASTParser;->jj_3_39()Z",
        "Ljapa/parser/ASTParser;->FieldDeclaration()Ljapa/parser/ast/body/FieldDeclaration;",
        "Ljapa/parser/ASTParser;->jj_2_30()Z",
        "Ljapa/parser/ASTParser;->jj_3R_359()Z",
        "Ljapa/parser/ASTParser;->TypeArgument()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ASTParser;->jj_3R_170()Z",
        "Ljapa/parser/ASTParser;->MethodDeclaration()Ljapa/parser/ast/body/MethodDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3R_237()Z",
        "Ljapa/parser/ASTParser;->jj_2_22()Z",
        "Ljapa/parser/ASTParser;->jj_3R_176()Z",
        "Ljapa/parser/ASTParser;->jj_3R_119()Z",
        "Ljapa/parser/ASTParser;->jj_3R_160()Z",
        "Ljapa/parser/ASTParser;->jj_3_23()Z",
        "Ljapa/parser/ASTParser;->jj_3R_183()Z",
        "Ljapa/parser/ASTParser;->jj_3R_261()Z",
        "Ljapa/parser/ASTParser;->FormalParameters()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_2_33()Z",
        "Ljapa/parser/ASTParser;->jj_3R_301()Z",
        "Ljapa/parser/ASTParser;->jj_3R_56()Z",
        "Ljapa/parser/ASTParser;->jj_2_19()Z",
        "Ljapa/parser/ASTParser;->ArgumentList()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_2_40()Z",
        "Ljapa/parser/ASTParser;->jj_3_17()Z",
        "Ljapa/parser/ASTParser;->jj_3R_295()Z",
        "Ljapa/parser/ASTParser;->jj_3_22()Z",
        "Ljapa/parser/ASTParser;->jj_3R_262()Z",
        "Ljapa/parser/ASTParser;->jj_3R_146()Z",
        "Ljapa/parser/ASTParser;->jj_3R_312()Z",
        "Ljapa/parser/ASTParser;->jj_3R_316()Z",
        "Ljapa/parser/ASTParser;->jj_3R_293()Z",
        "Ljapa/parser/ASTParser;->jj_3R_99()Z",
        "Ljapa/parser/ASTParser;->jj_2_4()Z",
        "Ljapa/parser/ASTParser;->jj_3R_134()Z",
        "Ljapa/parser/ASTParser;->jj_3R_199()Z",
        "Ljapa/parser/ASTParser;->jj_3R_113()Z",
        "Ljapa/parser/ASTParser;->AnnotationTypeMemberDeclaration()Ljapa/parser/ast/body/AnnotationMemberDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3_35()Z",
        "Ljapa/parser/ASTParser;->jj_3R_80()Z",
        "Ljapa/parser/ASTParser;->jj_3R_219()Z",
        "Ljapa/parser/ASTParser;->jj_3R_372()Z",
        "Ljapa/parser/ASTParser;->jj_3R_340()Z",
        "Ljapa/parser/ASTParser;->jj_3R_78()Z",
        "Ljapa/parser/ASTParser;->jj_3R_354()Z",
        "Ljapa/parser/ASTParser;->jj_3R_279()Z",
        "Ljapa/parser/ASTParser;->jj_3R_87()Z",
        "Ljapa/parser/ASTParser;->jj_3R_51()Z",
        "Ljapa/parser/ASTParser;->jj_3R_193()Z",
        "Ljapa/parser/ASTParser;->jj_3R_233()Z",
        "Ljapa/parser/ASTParser;->jj_3R_212()Z",
        "Ljapa/parser/ASTParser;->Annotation()Ljapa/parser/ast/expr/AnnotationExpr;",
        "Ljapa/parser/ASTParser;->jj_3R_97()Z",
        "Ljapa/parser/ASTParser;->jj_2_32()Z",
        "Ljapa/parser/ASTParser;->jj_3R_74()Z",
        "Ljapa/parser/ASTParser;->NullLiteral()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_384()Z",
        "Ljapa/parser/ASTParser;->Name()Ljapa/parser/ast/expr/NameExpr;",
        "Ljapa/parser/ASTParser;->jj_2_29()Z",
        "Ljapa/parser/ASTParser;->jj_ntk()I",
        "Ljapa/parser/ASTParser;->jj_2_15()Z",
        "Ljapa/parser/ASTParser;->jj_3R_52()Z",
        "Ljapa/parser/ASTParser;->jj_3R_197()Z",
        "Ljapa/parser/ASTParser;->jj_3R_147()Z",
        "Ljapa/parser/ASTParser;->jj_3R_71()Z",
        "Ljapa/parser/ASTParser;->jj_3R_313()Z",
        "Ljapa/parser/ASTParser;->jj_2_35()Z",
        "Ljapa/parser/ASTParser;->jj_3R_363()Z",
        "Ljapa/parser/ASTParser;->jj_3R_260()Z",
        "Ljapa/parser/ASTParser;->popJavadoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ASTParser;->jj_3R_149()Z",
        "Ljapa/parser/ASTParser;->jj_3R_211()Z",
        "Ljapa/parser/ASTParser;->jj_3R_107()Z",
        "Ljapa/parser/ASTParser;->VariableDeclarationExpression()Ljapa/parser/ast/expr/VariableDeclarationExpr;",
        "Ljapa/parser/ASTParser;->jj_3_1()Z",
        "Ljapa/parser/ASTParser;->jj_3R_161()Z",
        "Ljapa/parser/ASTParser;->jj_3R_77()Z",
        "Ljapa/parser/ASTParser;->jj_3R_353()Z",
        "Ljapa/parser/ASTParser;->jj_3R_168()Z",
        "Ljapa/parser/ASTParser;->jj_3R_191()Z",
        "Ljapa/parser/ASTParser;->jj_3R_350()Z",
        "Ljapa/parser/ASTParser;->jj_3R_69()Z",
        "Ljapa/parser/ASTParser;->PrimarySuffix()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_296()Z",
        "Ljapa/parser/ASTParser;->ExpressionList()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_364()Z",
        "Ljapa/parser/ASTParser;->jj_3R_208()Z",
        "Ljapa/parser/ASTParser;->jj_3R_250()Z",
        "Ljapa/parser/ASTParser;->jj_3R_330()Z",
        "Ljapa/parser/ASTParser;->jj_3R_145()Z",
        "Ljapa/parser/ASTParser;->jj_3R_356()Z",
        "Ljapa/parser/ASTParser;->jj_3R_323()Z",
        "Ljapa/parser/ASTParser;->jj_3R_177()Z",
        "Ljapa/parser/ASTParser;->jj_3_41()Z",
        "Ljapa/parser/ASTParser;->AnnotationTypeBody()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3_12()Z",
        "Ljapa/parser/ASTParser;->jj_3R_267()Z",
        "Ljapa/parser/ASTParser;->jj_3R_288()Z",
        "Ljapa/parser/ASTParser;->ClassOrInterfaceBodyDeclaration()Ljapa/parser/ast/body/BodyDeclaration;",
        "Ljapa/parser/ASTParser;->getToken()Ljapa/parser/Token;",
        "Ljapa/parser/ASTParser;->jj_3R_319()Z",
        "Ljapa/parser/ASTParser;->jj_3R_156()Z",
        "Ljapa/parser/ASTParser;->jj_2_14()Z",
        "Ljapa/parser/ASTParser;->jj_3R_136()Z",
        "Ljapa/parser/ASTParser;->jj_3_38()Z",
        "Ljapa/parser/ASTParser;->getComments()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_263()Z",
        "Ljapa/parser/ASTParser;->jj_3R_378()Z",
        "Ljapa/parser/ASTParser;->jj_3R_214()Z",
        "Ljapa/parser/ASTParser;->jj_3_37()Z",
        "Ljapa/parser/ASTParser;->VariableDeclarator()Ljapa/parser/ast/body/VariableDeclarator;",
        "Ljapa/parser/ASTParser;->jj_3R_118()Z",
        "Ljapa/parser/ASTParser;->jj_3R_152()Z",
        "Ljapa/parser/ASTParser;->jj_2_39()Z",
        "Ljapa/parser/ASTParser;->jj_3R_105()Z",
        "Ljapa/parser/ASTParser;->jj_2_18()Z",
        "Ljapa/parser/ASTParser;->ReferenceType()Ljapa/parser/ast/type/ReferenceType;",
        "Ljapa/parser/ASTParser;->jj_3R_318()Z",
        "Ljapa/parser/ASTParser;->jj_3R_73()Z",
        "Ljapa/parser/ASTParser;->jj_2_23()Z",
        "Ljapa/parser/ASTParser;->jj_3R_248()Z",
        "Ljapa/parser/ASTParser;->jj_2_12()Z",
        "Ljapa/parser/ASTParser;->jj_3R_151()Z",
        "Ljapa/parser/ASTParser;->jj_3R_271()Z",
        "Ljapa/parser/ASTParser;->jj_3R_306()Z",
        "Ljapa/parser/ASTParser;->PrimarySuffixWithoutSuper()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_252()Z",
        "Ljapa/parser/ASTParser;->jj_3R_232()Z",
        "Ljapa/parser/ASTParser;->jj_3_11()Z",
        "Ljapa/parser/ASTParser;->jj_3R_297()Z",
        "Ljapa/parser/ASTParser;->jj_3R_79()Z",
        "Ljapa/parser/ASTParser;->jj_3R_63()Z",
        "Ljapa/parser/ASTParser;->BlockStatement()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ASTParser;->EqualityExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_270()Z",
        "Ljapa/parser/ASTParser;->InitializerDeclaration()Ljapa/parser/ast/body/InitializerDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3R_169()Z",
        "Ljapa/parser/ASTParser;->ReturnStatement()Ljapa/parser/ast/stmt/ReturnStmt;",
        "Ljapa/parser/ASTParser;->ImplementsList()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_218()Z",
        "Ljapa/parser/ASTParser;->jj_3R_371()Z",
        "Ljapa/parser/ASTParser;->jj_3R_333()Z",
        "Ljapa/parser/ASTParser;->MemberValuePairs()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_240()Z",
        "Ljapa/parser/ASTParser;->jj_3R_381()Z",
        "Ljapa/parser/ASTParser;->jj_3R_386()Z",
        "Ljapa/parser/ASTParser;->jj_3R_380()Z",
        "Ljapa/parser/ASTParser;->NormalAnnotation()Ljapa/parser/ast/expr/NormalAnnotationExpr;",
        "Ljapa/parser/ASTParser;->FormalParameter()Ljapa/parser/ast/body/Parameter;",
        "Ljapa/parser/ASTParser;->jj_3R_144()Z",
        "Ljapa/parser/ASTParser;->generateParseException()Ljapa/parser/ParseException;",
        "Ljapa/parser/ASTParser;->jj_3R_49()Z",
        "Ljapa/parser/ASTParser;->jj_3R_284()Z",
        "Ljapa/parser/ASTParser;->jj_3R_320()Z",
        "Ljapa/parser/ASTParser;->ContinueStatement()Ljapa/parser/ast/stmt/ContinueStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_272()Z",
        "Ljapa/parser/ASTParser;->jj_3R_220()Z",
        "Ljapa/parser/ASTParser;->jj_3R_68()Z",
        "Ljapa/parser/ASTParser;->jj_3R_213()Z",
        "Ljapa/parser/ASTParser;->jj_3R_298()Z",
        "Ljapa/parser/ASTParser;->jj_2_6()Z",
        "Ljapa/parser/ASTParser;->jj_3R_246()Z",
        "Ljapa/parser/ASTParser;->Block()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_257()Z",
        "Ljapa/parser/ASTParser;->jj_3R_133()Z",
        "Ljapa/parser/ASTParser;->jj_3R_103()Z",
        "Ljapa/parser/ASTParser;->jj_3R_117()Z",
        "Ljapa/parser/ASTParser;->jj_3R_125()Z",
        "Ljapa/parser/ASTParser;->jj_3R_314()Z",
        "Ljapa/parser/ASTParser;->jj_3R_94()Z",
        "Ljapa/parser/ASTParser;->jj_3R_342()Z",
        "Ljapa/parser/ASTParser;->jj_2_38()Z",
        "Ljapa/parser/ASTParser;->jj_3R_307()Z",
        "Ljapa/parser/ASTParser;->jj_3R_334()Z",
        "Ljapa/parser/ASTParser;->ArrayInitializer()Ljapa/parser/ast/expr/ArrayInitializerExpr;",
        "Ljapa/parser/ASTParser;->jj_3R_388()Z",
        "Ljapa/parser/ASTParser;->jj_3R_100()Z",
        "Ljapa/parser/ASTParser;->jj_3R_269()Z",
        "Ljapa/parser/ASTParser;->ExtendsList()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->PrimaryExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_311()Z",
        "Ljapa/parser/ASTParser;->jj_3R_305()Z",
        "Ljapa/parser/ASTParser;->Expression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_155()Z",
        "Ljapa/parser/ASTParser;->jj_3R_122()Z",
        "Ljapa/parser/ASTParser;->jj_3R_158()Z",
        "Ljapa/parser/ASTParser;->jj_3_16()Z",
        "Ljapa/parser/ASTParser;->jj_2_8()Z",
        "Ljapa/parser/ASTParser;->jj_2_3()Z",
        "Ljapa/parser/ASTParser;->jj_3R_329()Z",
        "Ljapa/parser/ASTParser;->jj_3_43()Z",
        "Ljapa/parser/ASTParser;->throwParseException()V",
        "Ljapa/parser/ASTParser;->jj_2_26()Z",
        "Ljapa/parser/ASTParser;->jj_3R_277()Z",
        "Ljapa/parser/ASTParser;->jj_3R_210()Z",
        "Ljapa/parser/ASTParser;->jj_3R_215()Z",
        "Ljapa/parser/ASTParser;->jj_3R_280()Z",
        "Ljapa/parser/ASTParser;->jj_3R_114()Z",
        "Ljapa/parser/ASTParser;->jj_3R_223()Z",
        "Ljapa/parser/ASTParser;->jj_3R_254()Z",
        "Ljapa/parser/ASTParser;->jj_3R_344()Z",
        "Ljapa/parser/ASTParser;->jj_3R_188()Z",
        "Ljapa/parser/ASTParser;->jj_3R_195()Z",
        "Ljapa/parser/ASTParser;->jj_3R_291()Z",
        "Ljapa/parser/ASTParser;->Wildcard()Ljapa/parser/ast/type/WildcardType;",
        "Ljapa/parser/ASTParser;->jj_3R_163()Z",
        "Ljapa/parser/ASTParser;->jj_3R_253()Z",
        "Ljapa/parser/ASTParser;->AssertStatement()Ljapa/parser/ast/stmt/AssertStmt;",
        "Ljapa/parser/ASTParser;->TypeDeclaration()Ljapa/parser/ast/body/TypeDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3R_98()Z",
        "Ljapa/parser/ASTParser;->ClassOrInterfaceType()Ljapa/parser/ast/type/ClassOrInterfaceType;",
        "Ljapa/parser/ASTParser;->jj_3R_64()Z",
        "Ljapa/parser/ASTParser;->jj_3R_349()Z",
        "Ljapa/parser/ASTParser;->pushJavadoc()V",
        "Ljapa/parser/ASTParser;->jj_3R_370()Z",
        "Ljapa/parser/ASTParser;->jj_3R_283()Z",
        "Ljapa/parser/ASTParser;->jj_3R_310()Z",
        "Ljapa/parser/ASTParser;->jj_3R_281()Z",
        "Ljapa/parser/ASTParser;->jj_3R_132()Z",
        "Ljapa/parser/ASTParser;->jj_3R_70()Z",
        "Ljapa/parser/ASTParser;->jj_3R_189()Z",
        "Ljapa/parser/ASTParser;->jj_3_31()Z",
        "Ljapa/parser/ASTParser;->jj_3_6()Z",
        "Ljapa/parser/ASTParser;->jj_3R_299()Z",
        "Ljapa/parser/ASTParser;->jj_3_7()Z",
        "Ljapa/parser/ASTParser;->jj_3R_324()Z",
        "Ljapa/parser/ASTParser;->jj_3R_198()Z",
        "Ljapa/parser/ASTParser;->jj_3R_373()Z",
        "Ljapa/parser/ASTParser;->jj_2_24()Z",
        "Ljapa/parser/ASTParser;->MarkerAnnotation()Ljapa/parser/ast/expr/MarkerAnnotationExpr;",
        "Ljapa/parser/ASTParser;->TypeParameters()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_76()Z",
        "Ljapa/parser/ASTParser;->jj_3R_335()Z",
        "Ljapa/parser/ASTParser;->jj_3_36()Z",
        "Ljapa/parser/ASTParser;->jj_3R_184()Z",
        "Ljapa/parser/ASTParser;->jj_3R_178()Z",
        "Ljapa/parser/ASTParser;->jj_3R_89()Z",
        "Ljapa/parser/ASTParser;->jj_3R_137()Z",
        "Ljapa/parser/ASTParser;->jj_3R_55()Z",
        "Ljapa/parser/ASTParser;->jj_3_26()Z",
        "Ljapa/parser/ASTParser;->jj_3R_224()Z",
        "Ljapa/parser/ASTParser;->jj_3_34()Z",
        "Ljapa/parser/ASTParser;->Arguments()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_292()Z",
        "Ljapa/parser/ASTParser;->jj_3R_196()Z",
        "Ljapa/parser/ASTParser;->jj_3R_366()Z",
        "Ljapa/parser/ASTParser;->AssignmentOperator()Ljapa/parser/ast/expr/AssignExpr$Operator;",
        "Ljapa/parser/ASTParser;->AnnotationBodyDeclaration()Ljapa/parser/ast/body/BodyDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3_29()Z",
        "Ljapa/parser/ASTParser;->jj_2_17()Z",
        "Ljapa/parser/ASTParser;->jj_3R_182()Z",
        "Ljapa/parser/ASTParser;->UnaryExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_2_34()Z",
        "Ljapa/parser/ASTParser;->jj_3R_266()Z",
        "Ljapa/parser/ASTParser;->jj_3R_171()Z",
        "Ljapa/parser/ASTParser;->PrimaryPrefix()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->ImportDeclaration()Ljapa/parser/ast/ImportDeclaration;",
        "Ljapa/parser/ASTParser;->jj_3_8()Z",
        "Ljapa/parser/ASTParser;->jj_2_43()Z",
        "Ljapa/parser/ASTParser;->jj_3R_83()Z",
        "Ljapa/parser/ASTParser;->jj_3R_302()Z",
        "Ljapa/parser/ASTParser;->jj_3_42()Z",
        "Ljapa/parser/ASTParser;->jj_3R_75()Z",
        "Ljapa/parser/ASTParser;->jj_3R_108()Z",
        "Ljapa/parser/ASTParser;->ConditionalExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_368()Z",
        "Ljapa/parser/ASTParser;->MemberValuePair()Ljapa/parser/ast/expr/MemberValuePair;",
        "Ljapa/parser/ASTParser;->jj_3R_331()Z",
        "Ljapa/parser/ASTParser;->PrimaryExpressionWithoutSuperSuffix()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_112()Z",
        "Ljapa/parser/ASTParser;->jj_3R_180()Z",
        "Ljapa/parser/ASTParser;->jj_3R_227()Z",
        "Ljapa/parser/ASTParser;->jj_3R_249()Z",
        "Ljapa/parser/ASTParser;->InclusiveOrExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_143()Z",
        "Ljapa/parser/ASTParser;->jj_3R_231()Z",
        "Ljapa/parser/ASTParser;->jj_3R_104()Z",
        "Ljapa/parser/ASTParser;->jj_2_31()Z",
        "Ljapa/parser/ASTParser;->jj_3R_374()Z",
        "Ljapa/parser/ASTParser;->jj_3R_166()Z",
        "Ljapa/parser/ASTParser;->ForStatement()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ASTParser;->BooleanLiteral()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->PrimitiveType()Ljapa/parser/ast/type/PrimitiveType;",
        "Ljapa/parser/ASTParser;->jj_3R_264()Z",
        "Ljapa/parser/ASTParser;->jj_3R_243()Z",
        "Ljapa/parser/ASTParser;->jj_2_5()Z",
        "Ljapa/parser/ASTParser;->jj_3R_102()Z",
        "Ljapa/parser/ASTParser;->jj_3R_179()Z",
        "Ljapa/parser/ASTParser;->jj_3R_148()Z",
        "Ljapa/parser/ASTParser;->jj_3R_379()Z",
        "Ljapa/parser/ASTParser;->Literal()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->VariableDeclaratorId()Ljapa/parser/ast/body/VariableDeclaratorId;",
        "Ljapa/parser/ASTParser;->jj_3R_303()Z",
        "Ljapa/parser/ASTParser;->jj_scan_token()Z",
        "Ljapa/parser/ASTParser;->StatementExpression()Ljapa/parser/ast/stmt/ExpressionStmt;",
        "Ljapa/parser/ASTParser;->jj_2_11()Z",
        "Ljapa/parser/ASTParser;->AnnotationTypeDeclaration()Ljapa/parser/ast/body/AnnotationDeclaration;",
        "Ljapa/parser/ASTParser;->jj_2_36()Z",
        "Ljapa/parser/ASTParser;->jj_3R_222()Z",
        "Ljapa/parser/ASTParser;->jj_3R_217()Z",
        "Ljapa/parser/ASTParser;->jj_3R_226()Z",
        "Ljapa/parser/ASTParser;->AdditiveExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_255()Z",
        "Ljapa/parser/ASTParser;->SingleMemberAnnotation()Ljapa/parser/ast/expr/SingleMemberAnnotationExpr;",
        "Ljapa/parser/ASTParser;->jj_3R_317()Z",
        "Ljapa/parser/ASTParser;->jj_3R_273()Z",
        "Ljapa/parser/ASTParser;->jj_3R_110()Z",
        "Ljapa/parser/ASTParser;->jj_3R_150()Z",
        "Ljapa/parser/ASTParser;->PreIncrementExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->WhileStatement()Ljapa/parser/ast/stmt/WhileStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_351()Z",
        "Ljapa/parser/ASTParser;->jj_2_42()Z",
        "Ljapa/parser/ASTParser;->jj_3_40()Z",
        "Ljapa/parser/ASTParser;->jj_3R_345()Z",
        "Ljapa/parser/ASTParser;->TypeArguments()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_92()Z",
        "Ljapa/parser/ASTParser;->jj_3R_258()Z",
        "Ljapa/parser/ASTParser;->jj_3R_337()Z",
        "Ljapa/parser/ASTParser;->LabeledStatement()Ljapa/parser/ast/stmt/LabeledStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_181()Z",
        "Ljapa/parser/ASTParser;->jj_3_9()Z",
        "Ljapa/parser/ASTParser;->jj_3_27()Z",
        "Ljapa/parser/ASTParser;->DefaultValue()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_139()Z",
        "Ljapa/parser/ASTParser;->ForUpdate()Ljava/util/List;",
        "Ljapa/parser/ASTParser;->jj_3R_162()Z",
        "Ljapa/parser/ASTParser;->jj_3R_72()Z",
        "Ljapa/parser/ASTParser;->jj_3R_86()Z",
        "Ljapa/parser/ASTParser;->jj_3R_259()Z",
        "Ljapa/parser/ASTParser;->jj_3_30()Z",
        "Ljapa/parser/ASTParser;->jj_3R_216()Z",
        "Ljapa/parser/ASTParser;->jj_3R_140()Z",
        "Ljapa/parser/ASTParser;->jj_3R_194()Z",
        "Ljapa/parser/ASTParser;->jj_3R_287()Z",
        "Ljapa/parser/ASTParser;->RSIGNEDSHIFT()V",
        "Ljapa/parser/ASTParser;->jj_3R_185()Z",
        "Ljapa/parser/ASTParser;->ConstructorDeclaration()Ljapa/parser/ast/body/ConstructorDeclaration;",
        "Ljapa/parser/ASTParser;->ArrayDimsAndInits()[Ljava/lang/Object;",
        "Ljapa/parser/ASTParser;->jj_3R_66()Z",
        "Ljapa/parser/ASTParser;->BreakStatement()Ljapa/parser/ast/stmt/BreakStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_221()Z",
        "Ljapa/parser/ASTParser;->jj_2_20()Z",
        "Ljapa/parser/ASTParser;->jj_3R_268()Z",
        "Ljapa/parser/ASTParser;->IfStatement()Ljapa/parser/ast/stmt/IfStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_128()Z",
        "Ljapa/parser/ASTParser;->reset()V",
        "Ljapa/parser/ASTParser;->jj_3R_50()Z",
        "Ljapa/parser/ASTParser;->jj_3R_165()Z",
        "Ljapa/parser/ASTParser;->jj_3R_201()Z",
        "Ljapa/parser/ASTParser;->jj_3R_82()Z",
        "Ljapa/parser/ASTParser;->jj_3R_106()Z",
        "Ljapa/parser/ASTParser;->jj_3R_304()Z",
        "Ljapa/parser/ASTParser;->jj_2_2()Z",
        "Ljapa/parser/ASTParser;->jj_3_20()Z",
        "Ljapa/parser/ASTParser;->jj_3_32()Z",
        "Ljapa/parser/ASTParser;->jj_3R_352()Z",
        "Ljapa/parser/ASTParser;->jj_3R_343()Z",
        "Ljapa/parser/ASTParser;->jj_3R_154()Z",
        "Ljapa/parser/ASTParser;->jj_3R_204()Z",
        "Ljapa/parser/ASTParser;->jj_3R_241()Z",
        "Ljapa/parser/ASTParser;->jj_3R_332()Z",
        "Ljapa/parser/ASTParser;->jj_3R_387()Z",
        "Ljapa/parser/ASTParser;->addModifier()I",
        "Ljapa/parser/ASTParser;->jj_3R_369()Z",
        "Ljapa/parser/ASTParser;->jj_3R_247()Z",
        "Ljapa/parser/ASTParser;->jj_3R_129()Z",
        "Ljapa/parser/ASTParser;->jj_3_18()Z",
        "Ljapa/parser/ASTParser;->jj_3R_235()Z",
        "Ljapa/parser/ASTParser;->jj_3R_61()Z",
        "Ljapa/parser/ASTParser;->jj_3R_336()Z",
        "Ljapa/parser/ASTParser;->jj_3_5()Z",
        "Ljapa/parser/ASTParser;->jj_2_21()Z",
        "Ljapa/parser/ASTParser;->jj_3R_121()Z",
        "Ljapa/parser/ASTParser;->jj_3R_362()Z",
        "Ljapa/parser/ASTParser;->jj_3R_326()Z",
        "Ljapa/parser/ASTParser;->jj_3R_190()Z",
        "Ljapa/parser/ASTParser;->jj_3R_120()Z",
        "Ljapa/parser/ASTParser;->SynchronizedStatement()Ljapa/parser/ast/stmt/SynchronizedStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_357()Z",
        "Ljapa/parser/ASTParser;->jj_3R_138()Z",
        "Ljapa/parser/ASTParser;->InstanceOfExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_48()Z",
        "Ljapa/parser/ASTParser;->jj_3R_348()Z",
        "Ljapa/parser/ASTParser;->jj_3R_115()Z",
        "Ljapa/parser/ASTParser;->jj_3R_300()Z",
        "Ljapa/parser/ASTParser;->ConditionalAndExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->MemberValue()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_325()Z",
        "Ljapa/parser/ASTParser;->SwitchStatement()Ljapa/parser/ast/stmt/SwitchStmt;",
        "Ljapa/parser/ASTParser;->jj_3R_347()Z",
        "Ljapa/parser/ASTParser;->jj_3R_361()Z",
        "Ljapa/parser/ASTParser;->jj_3R_109()Z",
        "Ljapa/parser/ASTParser;->VariableInitializer()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_57()Z",
        "Ljapa/parser/ASTParser;->jj_3R_309()Z",
        "Ljapa/parser/ASTParser;->jj_2_41()Z",
        "Ljapa/parser/ASTParser;->CompilationUnit()Ljapa/parser/ast/CompilationUnit;",
        "Ljapa/parser/ASTParser;->MemberValueArrayInitializer()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_84()Z",
        "Ljapa/parser/ASTParser;->ConditionalOrExpression()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ASTParser;->jj_3R_62()Z",
        "Ljapa/parser/ASTParser;->jj_3_24()Z",
        "Ljapa/parser/ASTParser;->jj_3R_192()Z",
        "Ljapa/parser/ASTParser;->jj_3_2()Z"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->remove()V",
        "Ljava/util/Iterator;->hasNext()Z"
    ],
    "Ljapa/parser/ast/expr/Expression;": [
        "Ljapa/parser/ast/expr/Expression;->getBeginColumn()I",
        "Ljapa/parser/ast/expr/Expression;->accept()V",
        "Ljapa/parser/ast/expr/Expression;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/expr/Expression;->getBeginLine()I"
    ],
    "Ljapa/parser/ast/type/Type;": [
        "Ljapa/parser/ast/type/Type;->getBeginColumn()I",
        "Ljapa/parser/ast/type/Type;->getBeginLine()I",
        "Ljapa/parser/ast/type/Type;->toString()Ljava/lang/String;",
        "Ljapa/parser/ast/type/Type;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/type/Type;->accept()V"
    ],
    "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;": [
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->isInterface()Z",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getTypeParameters()Ljava/util/List;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getBeginColumn()I",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getExtends()Ljava/util/List;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getMembers()Ljava/util/List;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getImplements()Ljava/util/List;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/ClassOrInterfaceDeclaration;->getBeginLine()I"
    ],
    "Ljapa/parser/ast/PackageDeclaration;": [
        "Ljapa/parser/ast/PackageDeclaration;->getBeginLine()I",
        "Ljapa/parser/ast/PackageDeclaration;->getName()Ljapa/parser/ast/expr/NameExpr;",
        "Ljapa/parser/ast/PackageDeclaration;->setName()V",
        "Ljapa/parser/ast/PackageDeclaration;->accept()V",
        "Ljapa/parser/ast/PackageDeclaration;->getBeginColumn()I",
        "Ljapa/parser/ast/PackageDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/PackageDeclaration;->accept()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/ImportDeclaration;": [
        "Ljapa/parser/ast/ImportDeclaration;->isAsterisk()Z",
        "Ljapa/parser/ast/ImportDeclaration;->getName()Ljapa/parser/ast/expr/NameExpr;",
        "Ljapa/parser/ast/ImportDeclaration;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/ImportDeclaration;->isStatic()Z",
        "Ljapa/parser/ast/ImportDeclaration;->getBeginColumn()I",
        "Ljapa/parser/ast/ImportDeclaration;->setName()V",
        "Ljapa/parser/ast/ImportDeclaration;->accept()V",
        "Ljapa/parser/ast/ImportDeclaration;->getBeginLine()I"
    ],
    "Ljapa/parser/ast/body/TypeDeclaration;": [
        "Ljapa/parser/ast/body/TypeDeclaration;->getBeginLine()I",
        "Ljapa/parser/ast/body/TypeDeclaration;->getMembers()Ljava/util/List;",
        "Ljapa/parser/ast/body/TypeDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/TypeDeclaration;->getBeginColumn()I",
        "Ljapa/parser/ast/body/TypeDeclaration;->setMembers()V",
        "Ljapa/parser/ast/body/TypeDeclaration;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/body/TypeDeclaration;->accept()V"
    ],
    "Ljapa/parser/ast/expr/AnnotationExpr;": [
        "Ljapa/parser/ast/expr/AnnotationExpr;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/expr/AnnotationExpr;->getBeginLine()I",
        "Ljapa/parser/ast/expr/AnnotationExpr;->getBeginColumn()I",
        "Ljapa/parser/ast/expr/AnnotationExpr;->accept()V"
    ],
    "Ljapa/parser/ast/stmt/BlockStmt;": [
        "Ljapa/parser/ast/stmt/BlockStmt;->getStmts()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/BlockStmt;->getBeginColumn()I",
        "Ljapa/parser/ast/stmt/BlockStmt;->accept()V",
        "Ljapa/parser/ast/stmt/BlockStmt;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/stmt/BlockStmt;->setStmts()V",
        "Ljapa/parser/ast/stmt/BlockStmt;->getBeginLine()I"
    ],
    "Ljapa/parser/ast/expr/NameExpr;": [
        "Ljapa/parser/ast/expr/NameExpr;->getBeginColumn()I",
        "Ljapa/parser/ast/expr/NameExpr;->accept()V",
        "Ljapa/parser/ast/expr/NameExpr;->getBeginLine()I",
        "Ljapa/parser/ast/expr/NameExpr;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/expr/NameExpr;->getName()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/IntegerLiteralExpr;": [
        "Ljapa/parser/ast/expr/IntegerLiteralExpr;->isMinValue()Z",
        "Ljapa/parser/ast/expr/IntegerLiteralExpr;->getValue()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/LongLiteralExpr;": [
        "Ljapa/parser/ast/expr/LongLiteralExpr;->getValue()Ljava/lang/String;",
        "Ljapa/parser/ast/expr/LongLiteralExpr;->isMinValue()Z"
    ],
    "Ljapa/parser/ast/body/VariableDeclaratorId;": [
        "Ljapa/parser/ast/body/VariableDeclaratorId;->getBeginColumn()I",
        "Ljapa/parser/ast/body/VariableDeclaratorId;->getArrayCount()I",
        "Ljapa/parser/ast/body/VariableDeclaratorId;->getBeginLine()I",
        "Ljapa/parser/ast/body/VariableDeclaratorId;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/VariableDeclaratorId;->accept()V",
        "Ljapa/parser/ast/body/VariableDeclaratorId;->accept()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/body/ModifierSet;": [
        "Ljapa/parser/ast/body/ModifierSet;->isStrictfp()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isAbstract()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isSynchronized()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isTransient()Z",
        "Ljapa/parser/ast/body/ModifierSet;->addModifier()I",
        "Ljapa/parser/ast/body/ModifierSet;->isStatic()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isPrivate()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isNative()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isVolatile()Z",
        "Ljapa/parser/ast/body/ModifierSet;->hasModifier()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isProtected()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isPublic()Z",
        "Ljapa/parser/ast/body/ModifierSet;->isFinal()Z"
    ],
    "Ljapa/parser/ast/expr/MethodCallExpr;": [
        "Ljapa/parser/ast/expr/MethodCallExpr;->getArgs()Ljava/util/List;",
        "Ljapa/parser/ast/expr/MethodCallExpr;->getTypeArgs()Ljava/util/List;",
        "Ljapa/parser/ast/expr/MethodCallExpr;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/expr/MethodCallExpr;->getScope()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/MethodCallExpr;->setArgs()V",
        "Ljapa/parser/ast/expr/MethodCallExpr;->setScope()V"
    ],
    "Ljapa/parser/ast/body/MethodDeclaration;": [
        "Ljapa/parser/ast/body/MethodDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/MethodDeclaration;->setParameters()V",
        "Ljapa/parser/ast/body/MethodDeclaration;->setBody()V",
        "Ljapa/parser/ast/body/MethodDeclaration;->getBeginLine()I",
        "Ljapa/parser/ast/body/MethodDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/MethodDeclaration;->setType()V",
        "Ljapa/parser/ast/body/MethodDeclaration;->getBody()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/body/MethodDeclaration;->getEndLine()I",
        "Ljapa/parser/ast/body/MethodDeclaration;->getArrayCount()I",
        "Ljapa/parser/ast/body/MethodDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/MethodDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/MethodDeclaration;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/body/MethodDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/MethodDeclaration;->getParameters()Ljava/util/List;",
        "Ljapa/parser/ast/body/MethodDeclaration;->getTypeParameters()Ljava/util/List;",
        "Ljapa/parser/ast/body/MethodDeclaration;->getThrows()Ljava/util/List;"
    ],
    "Ljapa/parser/ASTHelper;": [
        "Ljapa/parser/ASTHelper;->addStmt()V",
        "Ljapa/parser/ASTHelper;->createFieldDeclaration()Ljapa/parser/ast/body/FieldDeclaration;"
    ],
    "Ljapa/parser/ast/CompilationUnit;": [
        "Ljapa/parser/ast/CompilationUnit;->getPackage()Ljapa/parser/ast/PackageDeclaration;",
        "Ljapa/parser/ast/CompilationUnit;->getTypes()Ljava/util/List;",
        "Ljapa/parser/ast/CompilationUnit;->setTypes()V",
        "Ljapa/parser/ast/CompilationUnit;->setPackage()V",
        "Ljapa/parser/ast/CompilationUnit;->getComments()Ljava/util/List;",
        "Ljapa/parser/ast/CompilationUnit;->getImports()Ljava/util/List;"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->isEmpty()Z",
        "Ljava/util/Stack;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Stack;->size()I",
        "Ljava/util/Stack;->push()Ljava/lang/Object;",
        "Ljava/util/Stack;->pop()Ljava/lang/Object;",
        "Ljava/util/Stack;->peek()Ljava/lang/Object;",
        "Ljava/util/Stack;->get()Ljava/lang/Object;",
        "Ljava/util/Stack;->clear()V"
    ],
    "Ljapa/parser/ASTParser$GTToken;": [
        "Ljapa/parser/ASTParser$GTToken;->newToken()Ljapa/parser/Token;"
    ],
    "Ljapa/parser/JavaParser;": [
        "Ljapa/parser/JavaParser;->parse()Ljapa/parser/ast/CompilationUnit;"
    ],
    "Ljava/io/FileInputStream;": [
        "Ljava/io/FileInputStream;->read()I",
        "Ljava/io/FileInputStream;->close()V"
    ],
    "Ljapa/parser/Token;": [
        "Ljapa/parser/Token;->newToken()Ljapa/parser/Token;"
    ],
    "Ljapa/parser/ast/visitor/GenericVisitor;": [
        "Ljapa/parser/ast/visitor/GenericVisitor;->visit()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/visitor/VoidVisitor;": [
        "Ljapa/parser/ast/visitor/VoidVisitor;->visit()V"
    ],
    "Ljapa/parser/ast/visitor/EqualsVisitor;": [
        "Ljapa/parser/ast/visitor/EqualsVisitor;->nodeEquals()Z",
        "Ljapa/parser/ast/visitor/EqualsVisitor;->nodesEquals()Z",
        "Ljapa/parser/ast/visitor/EqualsVisitor;->equals()Z",
        "Ljapa/parser/ast/visitor/EqualsVisitor;->visit()Ljava/lang/Boolean;",
        "Ljapa/parser/ast/visitor/EqualsVisitor;->objEquals()Z"
    ],
    "Ljapa/parser/ast/Node;": [
        "Ljapa/parser/ast/Node;->toString()Ljava/lang/String;",
        "Ljapa/parser/ast/Node;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/Node;->accept()V"
    ],
    "Ljapa/parser/ast/visitor/DumpVisitor;": [
        "Ljapa/parser/ast/visitor/DumpVisitor;->printTypeParameters()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printArguments()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->$SWITCH_TABLE$japa$parser$ast$expr$UnaryExpr$Operator()[I",
        "Ljapa/parser/ast/visitor/DumpVisitor;->$SWITCH_TABLE$japa$parser$ast$expr$BinaryExpr$Operator()[I",
        "Ljapa/parser/ast/visitor/DumpVisitor;->$SWITCH_TABLE$japa$parser$ast$type$PrimitiveType$Primitive()[I",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printMembers()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printJavadoc()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->getSource()Ljava/lang/String;",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printMemberAnnotations()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->$SWITCH_TABLE$japa$parser$ast$expr$AssignExpr$Operator()[I",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printModifiers()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printTypeArgs()V",
        "Ljapa/parser/ast/visitor/DumpVisitor;->printAnnotations()V"
    ],
    "Ljapa/parser/ast/expr/AssignExpr$Operator;": [
        "Ljapa/parser/ast/expr/AssignExpr$Operator;->values()[Ljapa/parser/ast/expr/AssignExpr$Operator;",
        "Ljapa/parser/ast/expr/AssignExpr$Operator;->ordinal()I"
    ],
    "Ljapa/parser/ast/expr/BinaryExpr$Operator;": [
        "Ljapa/parser/ast/expr/BinaryExpr$Operator;->values()[Ljapa/parser/ast/expr/BinaryExpr$Operator;",
        "Ljapa/parser/ast/expr/BinaryExpr$Operator;->ordinal()I"
    ],
    "Ljapa/parser/ast/expr/UnaryExpr$Operator;": [
        "Ljapa/parser/ast/expr/UnaryExpr$Operator;->values()[Ljapa/parser/ast/expr/UnaryExpr$Operator;",
        "Ljapa/parser/ast/expr/UnaryExpr$Operator;->ordinal()I"
    ],
    "Ljapa/parser/ast/type/PrimitiveType$Primitive;": [
        "Ljapa/parser/ast/type/PrimitiveType$Primitive;->ordinal()I",
        "Ljapa/parser/ast/type/PrimitiveType$Primitive;->values()[Ljapa/parser/ast/type/PrimitiveType$Primitive;"
    ],
    "Ljapa/parser/ast/visitor/DumpVisitor$SourcePrinter;": [
        "Ljapa/parser/ast/visitor/DumpVisitor$SourcePrinter;->getSource()Ljava/lang/String;",
        "Ljapa/parser/ast/visitor/DumpVisitor$SourcePrinter;->printLn()V",
        "Ljapa/parser/ast/visitor/DumpVisitor$SourcePrinter;->print()V",
        "Ljapa/parser/ast/visitor/DumpVisitor$SourcePrinter;->unindent()V",
        "Ljapa/parser/ast/visitor/DumpVisitor$SourcePrinter;->indent()V"
    ],
    "Ljapa/parser/ast/body/JavadocComment;": [
        "Ljapa/parser/ast/body/JavadocComment;->getContent()Ljava/lang/String;",
        "Ljapa/parser/ast/body/JavadocComment;->accept()V",
        "Ljapa/parser/ast/body/JavadocComment;->accept()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/body/BodyDeclaration;": [
        "Ljapa/parser/ast/body/BodyDeclaration;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/body/BodyDeclaration;->accept()V"
    ],
    "Ljapa/parser/ast/TypeParameter;": [
        "Ljapa/parser/ast/TypeParameter;->getTypeBound()Ljava/util/List;",
        "Ljapa/parser/ast/TypeParameter;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/TypeParameter;->accept()V",
        "Ljapa/parser/ast/TypeParameter;->accept()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/BlockComment;": [
        "Ljapa/parser/ast/BlockComment;->getContent()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/LineComment;": [
        "Ljapa/parser/ast/LineComment;->getContent()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/type/ClassOrInterfaceType;": [
        "Ljapa/parser/ast/type/ClassOrInterfaceType;->getTypeArgs()Ljava/util/List;",
        "Ljapa/parser/ast/type/ClassOrInterfaceType;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/type/ClassOrInterfaceType;->getScope()Ljapa/parser/ast/type/ClassOrInterfaceType;",
        "Ljapa/parser/ast/type/ClassOrInterfaceType;->setScope()V",
        "Ljapa/parser/ast/type/ClassOrInterfaceType;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/type/ClassOrInterfaceType;->accept()V"
    ],
    "Ljapa/parser/ast/body/AnnotationDeclaration;": [
        "Ljapa/parser/ast/body/AnnotationDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/AnnotationDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/AnnotationDeclaration;->getMembers()Ljava/util/List;",
        "Ljapa/parser/ast/body/AnnotationDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/AnnotationDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/AnnotationDeclaration;->getAnnotations()Ljava/util/List;"
    ],
    "Ljapa/parser/ast/body/AnnotationMemberDeclaration;": [
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->getDefaultValue()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->setType()V",
        "Ljapa/parser/ast/body/AnnotationMemberDeclaration;->setDefaultValue()V"
    ],
    "Ljapa/parser/ast/body/ConstructorDeclaration;": [
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->setBlock()V",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getParameters()Ljava/util/List;",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getTypeParameters()Ljava/util/List;",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getThrows()Ljava/util/List;",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getBlock()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/body/ConstructorDeclaration;->getAnnotations()Ljava/util/List;"
    ],
    "Ljapa/parser/ast/body/Parameter;": [
        "Ljapa/parser/ast/body/Parameter;->accept()V",
        "Ljapa/parser/ast/body/Parameter;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/Parameter;->setId()V",
        "Ljapa/parser/ast/body/Parameter;->getId()Ljapa/parser/ast/body/VariableDeclaratorId;",
        "Ljapa/parser/ast/body/Parameter;->isVarArgs()Z",
        "Ljapa/parser/ast/body/Parameter;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/body/Parameter;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/body/Parameter;->setType()V",
        "Ljapa/parser/ast/body/Parameter;->getModifiers()I"
    ],
    "Ljapa/parser/ast/body/EmptyMemberDeclaration;": [
        "Ljapa/parser/ast/body/EmptyMemberDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/EmptyMemberDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;"
    ],
    "Ljapa/parser/ast/body/EmptyTypeDeclaration;": [
        "Ljapa/parser/ast/body/EmptyTypeDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/EmptyTypeDeclaration;->setJavaDoc()V"
    ],
    "Ljapa/parser/ast/body/EnumConstantDeclaration;": [
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->getArgs()Ljava/util/List;",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->accept()V",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->getClassBody()Ljava/util/List;",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/EnumConstantDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;"
    ],
    "Ljapa/parser/ast/body/EnumDeclaration;": [
        "Ljapa/parser/ast/body/EnumDeclaration;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/body/EnumDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/EnumDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/EnumDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/EnumDeclaration;->getImplements()Ljava/util/List;",
        "Ljapa/parser/ast/body/EnumDeclaration;->getMembers()Ljava/util/List;",
        "Ljapa/parser/ast/body/EnumDeclaration;->getEntries()Ljava/util/List;",
        "Ljapa/parser/ast/body/EnumDeclaration;->getAnnotations()Ljava/util/List;"
    ],
    "Ljapa/parser/ast/body/FieldDeclaration;": [
        "Ljapa/parser/ast/body/FieldDeclaration;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/body/FieldDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/FieldDeclaration;->setType()V",
        "Ljapa/parser/ast/body/FieldDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/FieldDeclaration;->getModifiers()I",
        "Ljapa/parser/ast/body/FieldDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/FieldDeclaration;->getVariables()Ljava/util/List;"
    ],
    "Ljapa/parser/ast/body/VariableDeclarator;": [
        "Ljapa/parser/ast/body/VariableDeclarator;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/body/VariableDeclarator;->setInit()V",
        "Ljapa/parser/ast/body/VariableDeclarator;->getInit()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/body/VariableDeclarator;->accept()V",
        "Ljapa/parser/ast/body/VariableDeclarator;->setId()V",
        "Ljapa/parser/ast/body/VariableDeclarator;->getId()Ljapa/parser/ast/body/VariableDeclaratorId;"
    ],
    "Ljapa/parser/ast/body/InitializerDeclaration;": [
        "Ljapa/parser/ast/body/InitializerDeclaration;->getAnnotations()Ljava/util/List;",
        "Ljapa/parser/ast/body/InitializerDeclaration;->setJavaDoc()V",
        "Ljapa/parser/ast/body/InitializerDeclaration;->setBlock()V",
        "Ljapa/parser/ast/body/InitializerDeclaration;->getJavaDoc()Ljapa/parser/ast/body/JavadocComment;",
        "Ljapa/parser/ast/body/InitializerDeclaration;->getBlock()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/body/InitializerDeclaration;->isStatic()Z"
    ],
    "Ljapa/parser/ast/expr/ArrayAccessExpr;": [
        "Ljapa/parser/ast/expr/ArrayAccessExpr;->setName()V",
        "Ljapa/parser/ast/expr/ArrayAccessExpr;->getName()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/ArrayAccessExpr;->setIndex()V",
        "Ljapa/parser/ast/expr/ArrayAccessExpr;->getIndex()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/expr/ArrayCreationExpr;": [
        "Ljapa/parser/ast/expr/ArrayCreationExpr;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/expr/ArrayCreationExpr;->setType()V",
        "Ljapa/parser/ast/expr/ArrayCreationExpr;->getDimensions()Ljava/util/List;",
        "Ljapa/parser/ast/expr/ArrayCreationExpr;->getInitializer()Ljapa/parser/ast/expr/ArrayInitializerExpr;",
        "Ljapa/parser/ast/expr/ArrayCreationExpr;->getArrayCount()I",
        "Ljapa/parser/ast/expr/ArrayCreationExpr;->setInitializer()V"
    ],
    "Ljapa/parser/ast/expr/ArrayInitializerExpr;": [
        "Ljapa/parser/ast/expr/ArrayInitializerExpr;->getValues()Ljava/util/List;",
        "Ljapa/parser/ast/expr/ArrayInitializerExpr;->accept()V",
        "Ljapa/parser/ast/expr/ArrayInitializerExpr;->accept()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/expr/AssignExpr;": [
        "Ljapa/parser/ast/expr/AssignExpr;->setValue()V",
        "Ljapa/parser/ast/expr/AssignExpr;->getTarget()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/AssignExpr;->getOperator()Ljapa/parser/ast/expr/AssignExpr$Operator;",
        "Ljapa/parser/ast/expr/AssignExpr;->getValue()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/AssignExpr;->setTarget()V"
    ],
    "Ljapa/parser/ast/expr/BinaryExpr;": [
        "Ljapa/parser/ast/expr/BinaryExpr;->getLeft()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/BinaryExpr;->getRight()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/BinaryExpr;->setLeft()V",
        "Ljapa/parser/ast/expr/BinaryExpr;->setRight()V",
        "Ljapa/parser/ast/expr/BinaryExpr;->getOperator()Ljapa/parser/ast/expr/BinaryExpr$Operator;"
    ],
    "Ljapa/parser/ast/expr/BooleanLiteralExpr;": [
        "Ljapa/parser/ast/expr/BooleanLiteralExpr;->getValue()Z"
    ],
    "Ljapa/parser/ast/expr/CastExpr;": [
        "Ljapa/parser/ast/expr/CastExpr;->setType()V",
        "Ljapa/parser/ast/expr/CastExpr;->getExpr()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/CastExpr;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/expr/CastExpr;->setExpr()V"
    ],
    "Ljapa/parser/ast/expr/CharLiteralExpr;": [
        "Ljapa/parser/ast/expr/CharLiteralExpr;->getValue()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/ClassExpr;": [
        "Ljapa/parser/ast/expr/ClassExpr;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/expr/ClassExpr;->setType()V"
    ],
    "Ljapa/parser/ast/expr/ConditionalExpr;": [
        "Ljapa/parser/ast/expr/ConditionalExpr;->getCondition()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/ConditionalExpr;->getElseExpr()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/ConditionalExpr;->setCondition()V",
        "Ljapa/parser/ast/expr/ConditionalExpr;->setElseExpr()V",
        "Ljapa/parser/ast/expr/ConditionalExpr;->setThenExpr()V",
        "Ljapa/parser/ast/expr/ConditionalExpr;->getThenExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/expr/DoubleLiteralExpr;": [
        "Ljapa/parser/ast/expr/DoubleLiteralExpr;->getValue()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/EnclosedExpr;": [
        "Ljapa/parser/ast/expr/EnclosedExpr;->setInner()V",
        "Ljapa/parser/ast/expr/EnclosedExpr;->getInner()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/expr/FieldAccessExpr;": [
        "Ljapa/parser/ast/expr/FieldAccessExpr;->getTypeArgs()Ljava/util/List;",
        "Ljapa/parser/ast/expr/FieldAccessExpr;->getScope()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/FieldAccessExpr;->getField()Ljava/lang/String;",
        "Ljapa/parser/ast/expr/FieldAccessExpr;->setScope()V"
    ],
    "Ljapa/parser/ast/expr/InstanceOfExpr;": [
        "Ljapa/parser/ast/expr/InstanceOfExpr;->setExpr()V",
        "Ljapa/parser/ast/expr/InstanceOfExpr;->setType()V",
        "Ljapa/parser/ast/expr/InstanceOfExpr;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/expr/InstanceOfExpr;->getExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/expr/IntegerLiteralMinValueExpr;": [
        "Ljapa/parser/ast/expr/IntegerLiteralMinValueExpr;->getValue()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/LongLiteralMinValueExpr;": [
        "Ljapa/parser/ast/expr/LongLiteralMinValueExpr;->getValue()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/MarkerAnnotationExpr;": [
        "Ljapa/parser/ast/expr/MarkerAnnotationExpr;->getName()Ljapa/parser/ast/expr/NameExpr;",
        "Ljapa/parser/ast/expr/MarkerAnnotationExpr;->setName()V"
    ],
    "Ljapa/parser/ast/expr/MemberValuePair;": [
        "Ljapa/parser/ast/expr/MemberValuePair;->setValue()V",
        "Ljapa/parser/ast/expr/MemberValuePair;->getName()Ljava/lang/String;",
        "Ljapa/parser/ast/expr/MemberValuePair;->getValue()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/MemberValuePair;->accept()V",
        "Ljapa/parser/ast/expr/MemberValuePair;->accept()Ljava/lang/Object;"
    ],
    "Ljapa/parser/ast/expr/NormalAnnotationExpr;": [
        "Ljapa/parser/ast/expr/NormalAnnotationExpr;->setName()V",
        "Ljapa/parser/ast/expr/NormalAnnotationExpr;->getPairs()Ljava/util/List;",
        "Ljapa/parser/ast/expr/NormalAnnotationExpr;->getName()Ljapa/parser/ast/expr/NameExpr;"
    ],
    "Ljapa/parser/ast/expr/ObjectCreationExpr;": [
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->setScope()V",
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->getAnonymousClassBody()Ljava/util/List;",
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->getTypeArgs()Ljava/util/List;",
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->getScope()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->getType()Ljapa/parser/ast/type/ClassOrInterfaceType;",
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->getArgs()Ljava/util/List;",
        "Ljapa/parser/ast/expr/ObjectCreationExpr;->setType()V"
    ],
    "Ljapa/parser/ast/expr/QualifiedNameExpr;": [
        "Ljapa/parser/ast/expr/QualifiedNameExpr;->setQualifier()V",
        "Ljapa/parser/ast/expr/QualifiedNameExpr;->getQualifier()Ljapa/parser/ast/expr/NameExpr;",
        "Ljapa/parser/ast/expr/QualifiedNameExpr;->getName()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/SingleMemberAnnotationExpr;": [
        "Ljapa/parser/ast/expr/SingleMemberAnnotationExpr;->setMemberValue()V",
        "Ljapa/parser/ast/expr/SingleMemberAnnotationExpr;->getMemberValue()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/SingleMemberAnnotationExpr;->setName()V",
        "Ljapa/parser/ast/expr/SingleMemberAnnotationExpr;->getName()Ljapa/parser/ast/expr/NameExpr;"
    ],
    "Ljapa/parser/ast/expr/StringLiteralExpr;": [
        "Ljapa/parser/ast/expr/StringLiteralExpr;->getValue()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/expr/SuperExpr;": [
        "Ljapa/parser/ast/expr/SuperExpr;->setClassExpr()V",
        "Ljapa/parser/ast/expr/SuperExpr;->getClassExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/expr/ThisExpr;": [
        "Ljapa/parser/ast/expr/ThisExpr;->setClassExpr()V",
        "Ljapa/parser/ast/expr/ThisExpr;->getClassExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/expr/UnaryExpr;": [
        "Ljapa/parser/ast/expr/UnaryExpr;->getExpr()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/expr/UnaryExpr;->getOperator()Ljapa/parser/ast/expr/UnaryExpr$Operator;",
        "Ljapa/parser/ast/expr/UnaryExpr;->setExpr()V"
    ],
    "Ljapa/parser/ast/expr/VariableDeclarationExpr;": [
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->getVars()Ljava/util/List;",
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->getModifiers()I",
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->accept()V",
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->setType()V",
        "Ljapa/parser/ast/expr/VariableDeclarationExpr;->getAnnotations()Ljava/util/List;"
    ],
    "Ljapa/parser/ast/stmt/AssertStmt;": [
        "Ljapa/parser/ast/stmt/AssertStmt;->setMessage()V",
        "Ljapa/parser/ast/stmt/AssertStmt;->getCheck()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/AssertStmt;->getMessage()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/AssertStmt;->setCheck()V"
    ],
    "Ljapa/parser/ast/stmt/Statement;": [
        "Ljapa/parser/ast/stmt/Statement;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/stmt/Statement;->accept()V"
    ],
    "Ljapa/parser/ast/stmt/BreakStmt;": [
        "Ljapa/parser/ast/stmt/BreakStmt;->getId()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/stmt/CatchClause;": [
        "Ljapa/parser/ast/stmt/CatchClause;->setCatchBlock()V",
        "Ljapa/parser/ast/stmt/CatchClause;->getCatchBlock()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/stmt/CatchClause;->getExcept()Ljapa/parser/ast/body/Parameter;",
        "Ljapa/parser/ast/stmt/CatchClause;->setExcept()V",
        "Ljapa/parser/ast/stmt/CatchClause;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/stmt/CatchClause;->accept()V"
    ],
    "Ljapa/parser/ast/stmt/ContinueStmt;": [
        "Ljapa/parser/ast/stmt/ContinueStmt;->getId()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/stmt/DoStmt;": [
        "Ljapa/parser/ast/stmt/DoStmt;->setBody()V",
        "Ljapa/parser/ast/stmt/DoStmt;->setCondition()V",
        "Ljapa/parser/ast/stmt/DoStmt;->getBody()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ast/stmt/DoStmt;->getCondition()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;": [
        "Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;->setExpr()V",
        "Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;->getTypeArgs()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;->getArgs()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;->isThis()Z",
        "Ljapa/parser/ast/stmt/ExplicitConstructorInvocationStmt;->getExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/stmt/ExpressionStmt;": [
        "Ljapa/parser/ast/stmt/ExpressionStmt;->setExpression()V",
        "Ljapa/parser/ast/stmt/ExpressionStmt;->getExpression()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/stmt/ForStmt;": [
        "Ljapa/parser/ast/stmt/ForStmt;->getUpdate()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/ForStmt;->getInit()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/ForStmt;->getCompare()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/ForStmt;->getBody()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ast/stmt/ForStmt;->setBody()V",
        "Ljapa/parser/ast/stmt/ForStmt;->setCompare()V"
    ],
    "Ljapa/parser/ast/stmt/ForeachStmt;": [
        "Ljapa/parser/ast/stmt/ForeachStmt;->getVariable()Ljapa/parser/ast/expr/VariableDeclarationExpr;",
        "Ljapa/parser/ast/stmt/ForeachStmt;->setBody()V",
        "Ljapa/parser/ast/stmt/ForeachStmt;->setIterable()V",
        "Ljapa/parser/ast/stmt/ForeachStmt;->getIterable()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/ForeachStmt;->setVariable()V",
        "Ljapa/parser/ast/stmt/ForeachStmt;->getBody()Ljapa/parser/ast/stmt/Statement;"
    ],
    "Ljapa/parser/ast/stmt/IfStmt;": [
        "Ljapa/parser/ast/stmt/IfStmt;->getThenStmt()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ast/stmt/IfStmt;->setCondition()V",
        "Ljapa/parser/ast/stmt/IfStmt;->setThenStmt()V",
        "Ljapa/parser/ast/stmt/IfStmt;->setElseStmt()V",
        "Ljapa/parser/ast/stmt/IfStmt;->getCondition()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/IfStmt;->getElseStmt()Ljapa/parser/ast/stmt/Statement;"
    ],
    "Ljapa/parser/ast/stmt/LabeledStmt;": [
        "Ljapa/parser/ast/stmt/LabeledStmt;->getStmt()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ast/stmt/LabeledStmt;->setStmt()V",
        "Ljapa/parser/ast/stmt/LabeledStmt;->getLabel()Ljava/lang/String;"
    ],
    "Ljapa/parser/ast/stmt/ReturnStmt;": [
        "Ljapa/parser/ast/stmt/ReturnStmt;->setExpr()V",
        "Ljapa/parser/ast/stmt/ReturnStmt;->getExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/stmt/SwitchEntryStmt;": [
        "Ljapa/parser/ast/stmt/SwitchEntryStmt;->accept()V",
        "Ljapa/parser/ast/stmt/SwitchEntryStmt;->getStmts()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/SwitchEntryStmt;->setLabel()V",
        "Ljapa/parser/ast/stmt/SwitchEntryStmt;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/stmt/SwitchEntryStmt;->getLabel()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/stmt/SwitchStmt;": [
        "Ljapa/parser/ast/stmt/SwitchStmt;->getSelector()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/SwitchStmt;->getEntries()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/SwitchStmt;->setSelector()V"
    ],
    "Ljapa/parser/ast/stmt/SynchronizedStmt;": [
        "Ljapa/parser/ast/stmt/SynchronizedStmt;->getExpr()Ljapa/parser/ast/expr/Expression;",
        "Ljapa/parser/ast/stmt/SynchronizedStmt;->getBlock()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/stmt/SynchronizedStmt;->setExpr()V",
        "Ljapa/parser/ast/stmt/SynchronizedStmt;->setBlock()V"
    ],
    "Ljapa/parser/ast/stmt/ThrowStmt;": [
        "Ljapa/parser/ast/stmt/ThrowStmt;->setExpr()V",
        "Ljapa/parser/ast/stmt/ThrowStmt;->getExpr()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/stmt/TryStmt;": [
        "Ljapa/parser/ast/stmt/TryStmt;->getFinallyBlock()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/stmt/TryStmt;->getCatchs()Ljava/util/List;",
        "Ljapa/parser/ast/stmt/TryStmt;->setTryBlock()V",
        "Ljapa/parser/ast/stmt/TryStmt;->getTryBlock()Ljapa/parser/ast/stmt/BlockStmt;",
        "Ljapa/parser/ast/stmt/TryStmt;->setFinallyBlock()V"
    ],
    "Ljapa/parser/ast/stmt/TypeDeclarationStmt;": [
        "Ljapa/parser/ast/stmt/TypeDeclarationStmt;->getTypeDeclaration()Ljapa/parser/ast/body/TypeDeclaration;",
        "Ljapa/parser/ast/stmt/TypeDeclarationStmt;->setTypeDeclaration()V"
    ],
    "Ljapa/parser/ast/stmt/WhileStmt;": [
        "Ljapa/parser/ast/stmt/WhileStmt;->setBody()V",
        "Ljapa/parser/ast/stmt/WhileStmt;->setCondition()V",
        "Ljapa/parser/ast/stmt/WhileStmt;->getBody()Ljapa/parser/ast/stmt/Statement;",
        "Ljapa/parser/ast/stmt/WhileStmt;->getCondition()Ljapa/parser/ast/expr/Expression;"
    ],
    "Ljapa/parser/ast/type/PrimitiveType;": [
        "Ljapa/parser/ast/type/PrimitiveType;->getType()Ljapa/parser/ast/type/PrimitiveType$Primitive;"
    ],
    "Ljapa/parser/ast/type/ReferenceType;": [
        "Ljapa/parser/ast/type/ReferenceType;->accept()Ljava/lang/Object;",
        "Ljapa/parser/ast/type/ReferenceType;->setType()V",
        "Ljapa/parser/ast/type/ReferenceType;->getType()Ljapa/parser/ast/type/Type;",
        "Ljapa/parser/ast/type/ReferenceType;->accept()V",
        "Ljapa/parser/ast/type/ReferenceType;->getArrayCount()I"
    ],
    "Ljapa/parser/ast/type/WildcardType;": [
        "Ljapa/parser/ast/type/WildcardType;->setExtends()V",
        "Ljapa/parser/ast/type/WildcardType;->getSuper()Ljapa/parser/ast/type/ReferenceType;",
        "Ljapa/parser/ast/type/WildcardType;->setSuper()V",
        "Ljapa/parser/ast/type/WildcardType;->getExtends()Ljapa/parser/ast/type/ReferenceType;"
    ],
    "Ljapa/parser/ast/visitor/ModifierVisitorAdapter;": [
        "Ljapa/parser/ast/visitor/ModifierVisitorAdapter;->visit()Ljapa/parser/ast/Node;",
        "Ljapa/parser/ast/visitor/ModifierVisitorAdapter;->removeNulls()V"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->hashCode()I",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->clone()Ljava/lang/Object;",
        "Ljava/lang/Object;->notifyAll()V",
        "Ljava/lang/Object;->wait()V",
        "Ljava/lang/Object;->finalize()V",
        "Ljava/lang/Object;->notify()V"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->equals()Z",
        "Ljava/lang/Boolean;->booleanValue()Z",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/LWJGLUtil;": [
        "Lorg/lwjgl/LWJGLUtil;->getClassTokens()Ljava/util/Map;",
        "Lorg/lwjgl/LWJGLUtil;->log()V",
        "Lorg/lwjgl/LWJGLUtil;->getPathFromClassLoader()Ljava/lang/String;",
        "Lorg/lwjgl/LWJGLUtil;->loadIcon()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/LWJGLUtil;->getPrivilegedProperty()Ljava/lang/String;",
        "Lorg/lwjgl/LWJGLUtil;->getPrivilegedBoolean()Z",
        "Lorg/lwjgl/LWJGLUtil;->isMacOSXEqualsOrBetterThan()Z",
        "Lorg/lwjgl/LWJGLUtil;->getPlatform()I",
        "Lorg/lwjgl/LWJGLUtil;->getPrivilegedInteger()Ljava/lang/Integer;",
        "Lorg/lwjgl/LWJGLUtil;->getLibraryPaths()[Ljava/lang/String;",
        "Lorg/lwjgl/LWJGLUtil;->execPrivileged()V",
        "Lorg/lwjgl/LWJGLUtil;->toHexString()Ljava/lang/String;"
    ],
    "Ljava/security/AccessController;": [
        "Ljava/security/AccessController;->doPrivileged()Ljava/lang/Object;"
    ],
    "Ljava/lang/Process;": [
        "Ljava/lang/Process;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/lang/Process;->getErrorStream()Ljava/io/InputStream;",
        "Ljava/lang/Process;->exitValue()I",
        "Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;",
        "Ljava/lang/Process;->waitFor()I"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->reset()V",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->available()I",
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->skip()J",
        "Ljava/io/InputStream;->mark()V"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->write()V",
        "Ljava/io/OutputStream;->flush()V",
        "Ljava/io/OutputStream;->close()V"
    ],
    "Ljava/security/PrivilegedActionException;": [
        "Ljava/security/PrivilegedActionException;->getCause()Ljava/lang/Throwable;",
        "Ljava/security/PrivilegedActionException;->getException()Ljava/lang/Exception;"
    ],
    "Ljava/lang/Iterable;": [
        "Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getPackage()Ljava/lang/Package;",
        "Ljava/lang/Class;->isMemberClass()Z",
        "Ljava/lang/Class;->isArray()Z",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->getSuperclass()Ljava/lang/Class;",
        "Ljava/lang/Class;->getField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->cast()Ljava/lang/Object;",
        "Ljava/lang/Class;->getAnnotation()Ljava/lang/annotation/Annotation;",
        "Ljava/lang/Class;->isAssignableFrom()Z",
        "Ljava/lang/Class;->getEnclosingClass()Ljava/lang/Class;",
        "Ljava/lang/Class;->getEnumConstants()[Ljava/lang/Object;",
        "Ljava/lang/Class;->getDeclaredField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->desiredAssertionStatus()Z",
        "Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/Class;->isEnum()Z",
        "Ljava/lang/Class;->isPrimitive()Z",
        "Ljava/lang/Class;->getModifiers()I",
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getResource()Ljava/net/URL;",
        "Ljava/lang/Class;->getDeclaredConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getConstructor()Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getDeclaredFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->getFields()[Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getCanonicalName()Ljava/lang/String;",
        "Ljava/lang/Class;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/Class;->getSimpleName()Ljava/lang/String;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->getMethods()[Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->getMethod()Ljava/lang/reflect/Method;"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->isSynthetic()Z",
        "Ljava/lang/reflect/Field;->setAccessible()V",
        "Ljava/lang/reflect/Field;->getInt()I",
        "Ljava/lang/reflect/Field;->getType()Ljava/lang/Class;",
        "Ljava/lang/reflect/Field;->set()V",
        "Ljava/lang/reflect/Field;->getModifiers()I",
        "Ljava/lang/reflect/Field;->isAccessible()Z",
        "Ljava/lang/reflect/Field;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Field;->getAnnotation()Ljava/lang/annotation/Annotation;"
    ],
    "Lorg/lwjgl/LWJGLUtil$TokenFilter;": [
        "Lorg/lwjgl/LWJGLUtil$TokenFilter;->accept()Z"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->containsKey()Z",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->size()I",
        "Ljava/util/Map;->putAll()V",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->clear()V",
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->remove()Ljava/lang/Object;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->sort()V",
        "Ljava/util/Arrays;->asList()Ljava/util/List;",
        "Ljava/util/Arrays;->toString()Ljava/lang/String;",
        "Ljava/util/Arrays;->fill()V",
        "Ljava/util/Arrays;->hashCode()I"
    ],
    "Ljava/util/StringTokenizer;": [
        "Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;",
        "Ljava/util/StringTokenizer;->hasMoreTokens()Z"
    ],
    "Lorg/lwjgl/BufferUtils;": [
        "Lorg/lwjgl/BufferUtils;->getElementSizeExponent()I",
        "Lorg/lwjgl/BufferUtils;->createIntBuffer()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/BufferUtils;->createPointerBuffer()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/BufferUtils;->zeroBuffer0()V",
        "Lorg/lwjgl/BufferUtils;->createByteBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/BufferUtils;->createLongBuffer()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/BufferUtils;->createFloatBuffer()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/BufferUtils;->createDoubleBuffer()Ljava/nio/DoubleBuffer;"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->asFloatBuffer()Ljava/nio/FloatBuffer;",
        "Ljava/nio/ByteBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->hasArray()Z",
        "Ljava/nio/ByteBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->get()B",
        "Ljava/nio/ByteBuffer;->asIntBuffer()Ljava/nio/IntBuffer;",
        "Ljava/nio/ByteBuffer;->asReadOnlyBuffer()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->putLong()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->get()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->position()I",
        "Ljava/nio/ByteBuffer;->arrayOffset()I",
        "Ljava/nio/ByteBuffer;->slice()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->rewind()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->capacity()I",
        "Ljava/nio/ByteBuffer;->duplicate()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->getLong()J",
        "Ljava/nio/ByteBuffer;->putFloat()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->limit()I",
        "Ljava/nio/ByteBuffer;->asCharBuffer()Ljava/nio/CharBuffer;",
        "Ljava/nio/ByteBuffer;->asLongBuffer()Ljava/nio/LongBuffer;",
        "Ljava/nio/ByteBuffer;->isDirect()Z",
        "Ljava/nio/ByteBuffer;->getInt()I",
        "Ljava/nio/ByteBuffer;->asDoubleBuffer()Ljava/nio/DoubleBuffer;",
        "Ljava/nio/ByteBuffer;->remaining()I",
        "Ljava/nio/ByteBuffer;->getFloat()F",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/ByteBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->wrap()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->asShortBuffer()Ljava/nio/ShortBuffer;",
        "Ljava/nio/ByteBuffer;->allocateDirect()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->putInt()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->allocate()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->compact()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->hasRemaining()Z",
        "Ljava/nio/ByteBuffer;->array()[B",
        "Ljava/nio/ByteBuffer;->put()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->print()V",
        "Ljava/io/PrintStream;->write()V",
        "Ljava/io/PrintStream;->println()V"
    ],
    "Lorg/lwjgl/BufferChecks;": [
        "Lorg/lwjgl/BufferChecks;->checkNotNull()V",
        "Lorg/lwjgl/BufferChecks;->checkBufferSize()V",
        "Lorg/lwjgl/BufferChecks;->checkBuffer()V",
        "Lorg/lwjgl/BufferChecks;->throwArraySizeException()V",
        "Lorg/lwjgl/BufferChecks;->checkFunctionAddress()V",
        "Lorg/lwjgl/BufferChecks;->checkArray()V",
        "Lorg/lwjgl/BufferChecks;->checkDirect()V",
        "Lorg/lwjgl/BufferChecks;->checkNullTerminated()V",
        "Lorg/lwjgl/BufferChecks;->throwBufferSizeException()V"
    ],
    "Ljava/nio/Buffer;": [
        "Ljava/nio/Buffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->mark()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->hasRemaining()Z",
        "Ljava/nio/Buffer;->capacity()I",
        "Ljava/nio/Buffer;->remaining()I",
        "Ljava/nio/Buffer;->reset()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->position()I",
        "Ljava/nio/Buffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->toString()Ljava/lang/String;",
        "Ljava/nio/Buffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->rewind()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->limit()I"
    ],
    "Lorg/lwjgl/PointerBuffer;": [
        "Lorg/lwjgl/PointerBuffer;->position()I",
        "Lorg/lwjgl/PointerBuffer;->clear()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->capacity()I",
        "Lorg/lwjgl/PointerBuffer;->get()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->get()J",
        "Lorg/lwjgl/PointerBuffer;->is64Bit()Z",
        "Lorg/lwjgl/PointerBuffer;->remainingByte()I",
        "Lorg/lwjgl/PointerBuffer;->limit()I",
        "Lorg/lwjgl/PointerBuffer;->limit()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->newInstance()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->getPointerSize()I",
        "Lorg/lwjgl/PointerBuffer;->position()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->put()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->getBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/PointerBuffer;->checkSource()V",
        "Lorg/lwjgl/PointerBuffer;->checkBounds()V",
        "Lorg/lwjgl/PointerBuffer;->flip()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->allocateDirect()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/PointerBuffer;->remaining()I"
    ],
    "Ljava/nio/DoubleBuffer;": [
        "Ljava/nio/DoubleBuffer;->position()I",
        "Ljava/nio/DoubleBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/DoubleBuffer;->put()Ljava/nio/DoubleBuffer;",
        "Ljava/nio/DoubleBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/DoubleBuffer;->limit()I",
        "Ljava/nio/DoubleBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/DoubleBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/DoubleBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/DoubleBuffer;->get()D",
        "Ljava/nio/DoubleBuffer;->remaining()I",
        "Ljava/nio/DoubleBuffer;->isDirect()Z"
    ],
    "Ljava/nio/FloatBuffer;": [
        "Ljava/nio/FloatBuffer;->remaining()I",
        "Ljava/nio/FloatBuffer;->compact()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->limit()I",
        "Ljava/nio/FloatBuffer;->position()I",
        "Ljava/nio/FloatBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->rewind()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->get()F",
        "Ljava/nio/FloatBuffer;->get()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->put()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->isDirect()Z",
        "Ljava/nio/FloatBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/FloatBuffer;->capacity()I"
    ],
    "Ljava/nio/IntBuffer;": [
        "Ljava/nio/IntBuffer;->remaining()I",
        "Ljava/nio/IntBuffer;->rewind()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->put()Ljava/nio/IntBuffer;",
        "Ljava/nio/IntBuffer;->limit()I",
        "Ljava/nio/IntBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/IntBuffer;->isDirect()Z",
        "Ljava/nio/IntBuffer;->capacity()I",
        "Ljava/nio/IntBuffer;->compact()Ljava/nio/IntBuffer;",
        "Ljava/nio/IntBuffer;->get()I",
        "Ljava/nio/IntBuffer;->get()Ljava/nio/IntBuffer;",
        "Ljava/nio/IntBuffer;->toString()Ljava/lang/String;",
        "Ljava/nio/IntBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->position()I"
    ],
    "Ljava/nio/LongBuffer;": [
        "Ljava/nio/LongBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/LongBuffer;->compact()Ljava/nio/LongBuffer;",
        "Ljava/nio/LongBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/LongBuffer;->put()Ljava/nio/LongBuffer;",
        "Ljava/nio/LongBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/LongBuffer;->position()I",
        "Ljava/nio/LongBuffer;->remaining()I",
        "Ljava/nio/LongBuffer;->get()J",
        "Ljava/nio/LongBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/LongBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/LongBuffer;->limit()I",
        "Ljava/nio/LongBuffer;->isDirect()Z",
        "Ljava/nio/LongBuffer;->get()Ljava/nio/LongBuffer;"
    ],
    "Ljava/nio/ShortBuffer;": [
        "Ljava/nio/ShortBuffer;->capacity()I",
        "Ljava/nio/ShortBuffer;->get()Ljava/nio/ShortBuffer;",
        "Ljava/nio/ShortBuffer;->remaining()I",
        "Ljava/nio/ShortBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/ShortBuffer;->position()I",
        "Ljava/nio/ShortBuffer;->limit()I",
        "Ljava/nio/ShortBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->put()Ljava/nio/ShortBuffer;",
        "Ljava/nio/ShortBuffer;->hasRemaining()Z",
        "Ljava/nio/ShortBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->get()S",
        "Ljava/nio/ShortBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->isDirect()Z"
    ],
    "Ljavax/swing/UIManager;": [
        "Ljavax/swing/UIManager;->getSystemLookAndFeelClassName()Ljava/lang/String;",
        "Ljavax/swing/UIManager;->setLookAndFeel()V"
    ],
    "Ljavax/swing/JOptionPane;": [
        "Ljavax/swing/JOptionPane;->showMessageDialog()V"
    ],
    "Ljava/awt/Toolkit;": [
        "Ljava/awt/Toolkit;->getDefaultToolkit()Ljava/awt/Toolkit;",
        "Ljava/awt/Toolkit;->getMaximumCursorColors()I",
        "Ljava/awt/Toolkit;->createCustomCursor()Ljava/awt/Cursor;",
        "Ljava/awt/Toolkit;->getScreenResolution()I",
        "Ljava/awt/Toolkit;->getBestCursorSize()Ljava/awt/Dimension;",
        "Ljava/awt/Toolkit;->getSystemClipboard()Ljava/awt/datatransfer/Clipboard;"
    ],
    "Ljava/awt/datatransfer/Clipboard;": [
        "Ljava/awt/datatransfer/Clipboard;->getContents()Ljava/awt/datatransfer/Transferable;"
    ],
    "Ljava/awt/datatransfer/Transferable;": [
        "Ljava/awt/datatransfer/Transferable;->isDataFlavorSupported()Z",
        "Ljava/awt/datatransfer/Transferable;->getTransferData()Ljava/lang/Object;"
    ],
    "Lorg/lwjgl/Sys;": [
        "Lorg/lwjgl/Sys;->getTime()J",
        "Lorg/lwjgl/Sys;->getTimerResolution()J",
        "Lorg/lwjgl/Sys;->createImplementation()Lorg/lwjgl/SysImplementation;",
        "Lorg/lwjgl/Sys;->doLoadLibrary()V",
        "Lorg/lwjgl/Sys;->loadLibrary()V"
    ],
    "Lorg/lwjgl/SysImplementation;": [
        "Lorg/lwjgl/SysImplementation;->setDebug()V",
        "Lorg/lwjgl/SysImplementation;->getTimerResolution()J",
        "Lorg/lwjgl/SysImplementation;->openURL()Z",
        "Lorg/lwjgl/SysImplementation;->getTime()J",
        "Lorg/lwjgl/SysImplementation;->getJNIVersion()I",
        "Lorg/lwjgl/SysImplementation;->getPointerSize()I",
        "Lorg/lwjgl/SysImplementation;->getClipboard()Ljava/lang/String;",
        "Lorg/lwjgl/SysImplementation;->alert()V",
        "Lorg/lwjgl/SysImplementation;->getRequiredJNIVersion()I",
        "Lorg/lwjgl/SysImplementation;->has64Bit()Z"
    ],
    "Lorg/lwjgl/input/Mouse;": [
        "Lorg/lwjgl/input/Mouse;->getEventX()I",
        "Lorg/lwjgl/input/Mouse;->updateCursor()V",
        "Lorg/lwjgl/input/Mouse;->getEventDX()I",
        "Lorg/lwjgl/input/Mouse;->destroy()V",
        "Lorg/lwjgl/input/Mouse;->isInsideWindow()Z",
        "Lorg/lwjgl/input/Mouse;->resetMouse()V",
        "Lorg/lwjgl/input/Mouse;->isCreated()Z",
        "Lorg/lwjgl/input/Mouse;->setGrabbed()V",
        "Lorg/lwjgl/input/Mouse;->setNativeCursor()Lorg/lwjgl/input/Cursor;",
        "Lorg/lwjgl/input/Mouse;->isButtonDown()Z",
        "Lorg/lwjgl/input/Mouse;->getButtonCount()I",
        "Lorg/lwjgl/input/Mouse;->read()V",
        "Lorg/lwjgl/input/Mouse;->getNativeCursor()Lorg/lwjgl/input/Cursor;",
        "Lorg/lwjgl/input/Mouse;->getEventDY()I",
        "Lorg/lwjgl/input/Mouse;->getPrivilegedBoolean()Z",
        "Lorg/lwjgl/input/Mouse;->getEventButtonState()Z",
        "Lorg/lwjgl/input/Mouse;->next()Z",
        "Lorg/lwjgl/input/Mouse;->getEventNanoseconds()J",
        "Lorg/lwjgl/input/Mouse;->create()V",
        "Lorg/lwjgl/input/Mouse;->getEventDWheel()I",
        "Lorg/lwjgl/input/Mouse;->getEventButton()I",
        "Lorg/lwjgl/input/Mouse;->isGrabbed()Z",
        "Lorg/lwjgl/input/Mouse;->getY()I",
        "Lorg/lwjgl/input/Mouse;->getEventY()I",
        "Lorg/lwjgl/input/Mouse;->getX()I",
        "Lorg/lwjgl/input/Mouse;->getImplementation()Lorg/lwjgl/opengl/InputImplementation;",
        "Lorg/lwjgl/input/Mouse;->setCursorPosition()V",
        "Lorg/lwjgl/input/Mouse;->poll()V",
        "Lorg/lwjgl/input/Mouse;->setClipMouseCoordinatesToWindow()V"
    ],
    "Ljava/lang/UnsatisfiedLinkError;": [
        "Ljava/lang/UnsatisfiedLinkError;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->getParameterTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->getName()Ljava/lang/String;"
    ],
    "Ljava/net/MalformedURLException;": [
        "Ljava/net/MalformedURLException;->printStackTrace()V"
    ],
    "Lorg/lwjgl/PointerWrapperAbstract;": [
        "Lorg/lwjgl/PointerWrapperAbstract;->checkValid()V",
        "Lorg/lwjgl/PointerWrapperAbstract;->isValid()Z"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->longValue()J",
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->parseLong()J",
        "Ljava/lang/Long;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Long;->numberOfTrailingZeros()I",
        "Ljava/lang/Long;->toString()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/NondirectBufferWrapper;": [
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapDirect()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapNoCopyDirect()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapDirect()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->lookupBuffer()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doNoCopyWrap()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->lookupBuffer()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doNoCopyWrap()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doNoCopyWrap()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapNoCopyDirect()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->getCachedBuffers()Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapDirect()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->lookupBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapDirect()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapNoCopyDirect()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->lookupBuffer()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doWrap()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doWrap()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapNoCopyDirect()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doWrap()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapBuffer()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapDirect()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doWrap()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doWrap()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->lookupBuffer()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapDirect()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doWrap()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doNoCopyWrap()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->lookupBuffer()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapNoCopyDirect()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doNoCopyWrap()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->wrapNoCopyDirect()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper;->doNoCopyWrap()Ljava/nio/IntBuffer;"
    ],
    "Ljava/lang/ThreadLocal;": [
        "Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;",
        "Ljava/lang/ThreadLocal;->set()V"
    ],
    "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;": [
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$900()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$800()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$500()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$1000()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$1100()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$200()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$300()Ljava/nio/ShortBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$100()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$600()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$400()Ljava/nio/FloatBuffer;",
        "Lorg/lwjgl/NondirectBufferWrapper$CachedBuffers;->access$700()Ljava/nio/IntBuffer;"
    ],
    "Lorg/lwjgl/opengl/Display;": [
        "Lorg/lwjgl/opengl/Display;->setDisplayMode()V",
        "Lorg/lwjgl/opengl/Display;->getWindowX()I",
        "Lorg/lwjgl/opengl/Display;->create()V",
        "Lorg/lwjgl/opengl/Display;->releaseDrawable()V",
        "Lorg/lwjgl/opengl/Display;->makeCurrentAndSetSwapInterval()V",
        "Lorg/lwjgl/opengl/Display;->registerShutdownHook()V",
        "Lorg/lwjgl/opengl/Display;->isCloseRequested()Z",
        "Lorg/lwjgl/opengl/Display;->swapBuffers()V",
        "Lorg/lwjgl/opengl/Display;->setTitle()V",
        "Lorg/lwjgl/opengl/Display;->destroyWindow()V",
        "Lorg/lwjgl/opengl/Display;->getParent()Ljava/awt/Canvas;",
        "Lorg/lwjgl/opengl/Display;->setFullscreen()V",
        "Lorg/lwjgl/opengl/Display;->reshape()V",
        "Lorg/lwjgl/opengl/Display;->makeCurrent()V",
        "Lorg/lwjgl/opengl/Display;->getAvailableDisplayModes()[Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/Display;->isCreated()Z",
        "Lorg/lwjgl/opengl/Display;->update()V",
        "Lorg/lwjgl/opengl/Display;->pollDevices()V",
        "Lorg/lwjgl/opengl/Display;->getWindowY()I",
        "Lorg/lwjgl/opengl/Display;->isResizable()Z",
        "Lorg/lwjgl/opengl/Display;->createDisplayImplementation()Lorg/lwjgl/opengl/DisplayImplementation;",
        "Lorg/lwjgl/opengl/Display;->createWindow()V",
        "Lorg/lwjgl/opengl/Display;->switchDisplayMode()V",
        "Lorg/lwjgl/opengl/Display;->getDisplayMode()Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/Display;->destroy()V",
        "Lorg/lwjgl/opengl/Display;->getPrivilegedBoolean()Z",
        "Lorg/lwjgl/opengl/Display;->removeShutdownHook()V",
        "Lorg/lwjgl/opengl/Display;->setDisplayModeAndFullscreen()V",
        "Lorg/lwjgl/opengl/Display;->isFullscreen()Z",
        "Lorg/lwjgl/opengl/Display;->getWidth()I",
        "Lorg/lwjgl/opengl/Display;->setParent()V",
        "Lorg/lwjgl/opengl/Display;->wasResized()Z",
        "Lorg/lwjgl/opengl/Display;->setVSyncEnabled()V",
        "Lorg/lwjgl/opengl/Display;->setDisplayModeAndFullscreenInternal()V",
        "Lorg/lwjgl/opengl/Display;->getDesktopDisplayMode()Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/Display;->getImplementation()Lorg/lwjgl/opengl/DisplayImplementation;",
        "Lorg/lwjgl/opengl/Display;->setIcon()I",
        "Lorg/lwjgl/opengl/Display;->sync()V",
        "Lorg/lwjgl/opengl/Display;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/Display;->getDrawable()Lorg/lwjgl/opengl/Drawable;",
        "Lorg/lwjgl/opengl/Display;->reset()V",
        "Lorg/lwjgl/opengl/Display;->setResizable()V",
        "Lorg/lwjgl/opengl/Display;->processMessages()V",
        "Lorg/lwjgl/opengl/Display;->getHeight()I",
        "Lorg/lwjgl/opengl/Display;->getEffectiveMode()Lorg/lwjgl/opengl/DisplayMode;"
    ],
    "Lorg/lwjgl/MemoryUtil;": [
        "Lorg/lwjgl/MemoryUtil;->encode()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/MemoryUtil;->encodeASCII()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/MemoryUtil;->getDeclaredFieldRecursive()Ljava/lang/reflect/Field;",
        "Lorg/lwjgl/MemoryUtil;->encodeUTF8()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/MemoryUtil;->getAddressSafe()J",
        "Lorg/lwjgl/MemoryUtil;->loadAccessor()Lorg/lwjgl/MemoryUtil$Accessor;",
        "Lorg/lwjgl/MemoryUtil;->getAddress()J",
        "Lorg/lwjgl/MemoryUtil;->getAddress0()J",
        "Lorg/lwjgl/MemoryUtil;->encodeUTF16()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/WindowsSysImplementation;": [
        "Lorg/lwjgl/WindowsSysImplementation;->nAlert()V",
        "Lorg/lwjgl/WindowsSysImplementation;->nGetClipboard()Ljava/lang/String;",
        "Lorg/lwjgl/WindowsSysImplementation;->getHwnd()J",
        "Lorg/lwjgl/WindowsSysImplementation;->nGetTime()J"
    ],
    "Ljava/nio/charset/Charset;": [
        "Ljava/nio/charset/Charset;->newEncoder()Ljava/nio/charset/CharsetEncoder;",
        "Ljava/nio/charset/Charset;->forName()Ljava/nio/charset/Charset;",
        "Ljava/nio/charset/Charset;->newDecoder()Ljava/nio/charset/CharsetDecoder;"
    ],
    "Ljava/nio/CharBuffer;": [
        "Ljava/nio/CharBuffer;->position()I",
        "Ljava/nio/CharBuffer;->wrap()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->remaining()I",
        "Ljava/nio/CharBuffer;->allocate()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/CharBuffer;->compact()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->limit()I",
        "Ljava/nio/CharBuffer;->get()C",
        "Ljava/nio/CharBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/CharBuffer;->hasRemaining()Z",
        "Ljava/nio/CharBuffer;->put()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/CharBuffer;->get()Ljava/nio/CharBuffer;"
    ],
    "Ljava/nio/charset/CharsetEncoder;": [
        "Ljava/nio/charset/CharsetEncoder;->encode()Ljava/nio/charset/CoderResult;",
        "Ljava/nio/charset/CharsetEncoder;->flush()Ljava/nio/charset/CoderResult;",
        "Ljava/nio/charset/CharsetEncoder;->reset()Ljava/nio/charset/CharsetEncoder;",
        "Ljava/nio/charset/CharsetEncoder;->averageBytesPerChar()F"
    ],
    "Ljava/nio/charset/CoderResult;": [
        "Ljava/nio/charset/CoderResult;->isUnderflow()Z",
        "Ljava/nio/charset/CoderResult;->isOverflow()Z",
        "Ljava/nio/charset/CoderResult;->throwException()V"
    ],
    "Lorg/lwjgl/MemoryUtil$Accessor;": [
        "Lorg/lwjgl/MemoryUtil$Accessor;->getAddress()J"
    ],
    "Ljava/nio/ByteOrder;": [
        "Ljava/nio/ByteOrder;->nativeOrder()Ljava/nio/ByteOrder;"
    ],
    "Lcom/apple/eio/FileManager;": [
        "Lcom/apple/eio/FileManager;->openURL()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->abs()D",
        "Ljava/lang/Math;->ceil()D",
        "Ljava/lang/Math;->random()D",
        "Ljava/lang/Math;->floor()D",
        "Ljava/lang/Math;->round()I",
        "Ljava/lang/Math;->asin()D",
        "Ljava/lang/Math;->atan2()D",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->acos()D",
        "Ljava/lang/Math;->signum()D",
        "Ljava/lang/Math;->min()D",
        "Ljava/lang/Math;->rint()D",
        "Ljava/lang/Math;->signum()F",
        "Ljava/lang/Math;->cbrt()D",
        "Ljava/lang/Math;->sqrt()D",
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->atan()D",
        "Ljava/lang/Math;->sin()D",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->toDegrees()D",
        "Ljava/lang/Math;->exp()D",
        "Ljava/lang/Math;->min()F",
        "Ljava/lang/Math;->toRadians()D",
        "Ljava/lang/Math;->cos()D",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->tan()D",
        "Ljava/lang/Math;->log()D",
        "Ljava/lang/Math;->max()J",
        "Ljava/lang/Math;->max()D"
    ],
    "Lorg/lwjgl/PointerWrapper;": [
        "Lorg/lwjgl/PointerWrapper;->getPointer()J"
    ],
    "Lorg/lwjgl/util/ReadablePoint;": [
        "Lorg/lwjgl/util/ReadablePoint;->getY()I",
        "Lorg/lwjgl/util/ReadablePoint;->getX()I"
    ],
    "Lorg/lwjgl/util/ReadableDimension;": [
        "Lorg/lwjgl/util/ReadableDimension;->getWidth()I",
        "Lorg/lwjgl/util/ReadableDimension;->getHeight()I"
    ],
    "Lorg/lwjgl/util/ReadableRectangle;": [
        "Lorg/lwjgl/util/ReadableRectangle;->getHeight()I",
        "Lorg/lwjgl/util/ReadableRectangle;->getY()I",
        "Lorg/lwjgl/util/ReadableRectangle;->getWidth()I",
        "Lorg/lwjgl/util/ReadableRectangle;->getX()I"
    ],
    "Lorg/lwjgl/util/Rectangle;": [
        "Lorg/lwjgl/util/Rectangle;->setBounds()V",
        "Lorg/lwjgl/util/Rectangle;->contains()Z",
        "Lorg/lwjgl/util/Rectangle;->add()V"
    ],
    "Lorg/lwjgl/util/WritableRectangle;": [
        "Lorg/lwjgl/util/WritableRectangle;->setBounds()V"
    ],
    "Lorg/lwjgl/util/WritablePoint;": [
        "Lorg/lwjgl/util/WritablePoint;->setLocation()V"
    ],
    "Lorg/lwjgl/util/WritableDimension;": [
        "Lorg/lwjgl/util/WritableDimension;->setSize()V"
    ],
    "Lorg/lwjgl/util/Point;": [
        "Lorg/lwjgl/util/Point;->setLocation()V"
    ],
    "Lorg/lwjgl/util/XPMFile;": [
        "Lorg/lwjgl/util/XPMFile;->parseImageLine()V",
        "Lorg/lwjgl/util/XPMFile;->getBytes()[B",
        "Lorg/lwjgl/util/XPMFile;->readImage()V",
        "Lorg/lwjgl/util/XPMFile;->nextLineOfInterest()Ljava/lang/String;",
        "Lorg/lwjgl/util/XPMFile;->load()Lorg/lwjgl/util/XPMFile;",
        "Lorg/lwjgl/util/XPMFile;->parseColor()[Ljava/lang/Object;",
        "Lorg/lwjgl/util/XPMFile;->parseFormat()[I"
    ],
    "Ljava/io/BufferedOutputStream;": [
        "Ljava/io/BufferedOutputStream;->write()V",
        "Ljava/io/BufferedOutputStream;->close()V"
    ],
    "Ljava/io/LineNumberReader;": [
        "Ljava/io/LineNumberReader;->readLine()Ljava/lang/String;"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->isEmpty()Z",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->clear()V",
        "Ljava/util/HashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/HashMap;->size()I",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->values()Ljava/util/Collection;"
    ],
    "Lorg/lwjgl/opengl/DisplayMode;": [
        "Lorg/lwjgl/opengl/DisplayMode;->equals()Z",
        "Lorg/lwjgl/opengl/DisplayMode;->getBitsPerPixel()I",
        "Lorg/lwjgl/opengl/DisplayMode;->getHeight()I",
        "Lorg/lwjgl/opengl/DisplayMode;->getWidth()I",
        "Lorg/lwjgl/opengl/DisplayMode;->isFullscreenCapable()Z",
        "Lorg/lwjgl/opengl/DisplayMode;->getFrequency()I"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->addAll()Z",
        "Ljava/util/ArrayList;->add()V",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->indexOf()I",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->set()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->ensureCapacity()V",
        "Ljava/util/ArrayList;->toString()Ljava/lang/String;",
        "Ljava/util/ArrayList;->isEmpty()Z",
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;",
        "Ljava/util/ArrayList;->contains()Z",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->remove()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->add()Z"
    ],
    "Lorg/lwjgl/util/Timer;": [
        "Lorg/lwjgl/util/Timer;->resume()V",
        "Lorg/lwjgl/util/Timer;->getTime()F",
        "Lorg/lwjgl/util/Timer;->set()V",
        "Lorg/lwjgl/util/Timer;->tick()V",
        "Lorg/lwjgl/util/Timer;->reset()V"
    ],
    "Lorg/lwjgl/util/Color;": [
        "Lorg/lwjgl/util/Color;->getAlpha()I",
        "Lorg/lwjgl/util/Color;->getGreen()I",
        "Lorg/lwjgl/util/Color;->getRed()I",
        "Lorg/lwjgl/util/Color;->set()V",
        "Lorg/lwjgl/util/Color;->getBlue()I",
        "Lorg/lwjgl/util/Color;->setColor()V"
    ],
    "Lorg/lwjgl/util/ReadableColor;": [
        "Lorg/lwjgl/util/ReadableColor;->getRedByte()B",
        "Lorg/lwjgl/util/ReadableColor;->getGreen()I",
        "Lorg/lwjgl/util/ReadableColor;->getAlpha()I",
        "Lorg/lwjgl/util/ReadableColor;->getBlue()I",
        "Lorg/lwjgl/util/ReadableColor;->getAlphaByte()B",
        "Lorg/lwjgl/util/ReadableColor;->getGreenByte()B",
        "Lorg/lwjgl/util/ReadableColor;->getBlueByte()B",
        "Lorg/lwjgl/util/ReadableColor;->getRed()I"
    ],
    "Lorg/lwjgl/util/Dimension;": [
        "Lorg/lwjgl/util/Dimension;->setSize()V"
    ],
    "Ljavax/sound/sampled/AudioSystem;": [
        "Ljavax/sound/sampled/AudioSystem;->getAudioInputStream()Ljavax/sound/sampled/AudioInputStream;",
        "Ljavax/sound/sampled/AudioSystem;->getTargetDataLine()Ljavax/sound/sampled/TargetDataLine;"
    ],
    "Lorg/lwjgl/util/WaveData;": [
        "Lorg/lwjgl/util/WaveData;->convertAudioBytes()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/util/WaveData;->create()Lorg/lwjgl/util/WaveData;"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;",
        "Ljava/lang/Thread;->join()V",
        "Ljava/lang/Thread;->setUncaughtExceptionHandler()V",
        "Ljava/lang/Thread;->setDaemon()V",
        "Ljava/lang/Thread;->yield()V",
        "Ljava/lang/Thread;->interrupt()V",
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->getContextClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;",
        "Ljava/lang/Thread;->sleep()V"
    ],
    "Ljava/lang/ClassLoader;": [
        "Ljava/lang/ClassLoader;->loadClass()Ljava/lang/Class;",
        "Ljava/lang/ClassLoader;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/ClassLoader;->getResource()Ljava/net/URL;"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->getQuery()Ljava/lang/String;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;",
        "Ljava/net/URL;->getPath()Ljava/lang/String;",
        "Ljava/net/URL;->toString()Ljava/lang/String;",
        "Ljava/net/URL;->getRef()Ljava/lang/String;",
        "Ljava/net/URL;->getContent()Ljava/lang/Object;",
        "Ljava/net/URL;->toURI()Ljava/net/URI;"
    ],
    "Lcom/sun/media/sound/WaveFileReader;": [
        "Lcom/sun/media/sound/WaveFileReader;->getAudioInputStream()Ljavax/sound/sampled/AudioInputStream;"
    ],
    "Ljavax/sound/sampled/AudioInputStream;": [
        "Ljavax/sound/sampled/AudioInputStream;->available()I",
        "Ljavax/sound/sampled/AudioInputStream;->getFrameLength()J",
        "Ljavax/sound/sampled/AudioInputStream;->close()V",
        "Ljavax/sound/sampled/AudioInputStream;->getFormat()Ljavax/sound/sampled/AudioFormat;",
        "Ljavax/sound/sampled/AudioInputStream;->read()I"
    ],
    "Ljavax/sound/sampled/AudioFormat;": [
        "Ljavax/sound/sampled/AudioFormat;->getSampleRate()F",
        "Ljavax/sound/sampled/AudioFormat;->getChannels()I",
        "Ljavax/sound/sampled/AudioFormat;->getSampleSizeInBits()I"
    ],
    "Lorg/lwjgl/opengl/GL11;": [
        "Lorg/lwjgl/opengl/GL11;->glTexCoordPointer()V",
        "Lorg/lwjgl/opengl/GL11;->glEnableClientState()V",
        "Lorg/lwjgl/opengl/GL11;->glLoadMatrix()V",
        "Lorg/lwjgl/opengl/GL11;->nglNormal3i()V",
        "Lorg/lwjgl/opengl/GL11;->nglDrawElementsBO()V",
        "Lorg/lwjgl/opengl/GL11;->glStencilOp()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPixelMapfvBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglRecti()V",
        "Lorg/lwjgl/opengl/GL11;->glMaterial()V",
        "Lorg/lwjgl/opengl/GL11;->glGenTextures()V",
        "Lorg/lwjgl/opengl/GL11;->nglReadPixelsBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexSubImage2DBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglLoadIdentity()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelTransferf()V",
        "Lorg/lwjgl/opengl/GL11;->nglNormal3d()V",
        "Lorg/lwjgl/opengl/GL11;->nglDrawArrays()V",
        "Lorg/lwjgl/opengl/GL11;->glFog()V",
        "Lorg/lwjgl/opengl/GL11;->nglClear()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex2d()V",
        "Lorg/lwjgl/opengl/GL11;->nglFeedbackBuffer()V",
        "Lorg/lwjgl/opengl/GL11;->nglMapGrid1d()V",
        "Lorg/lwjgl/opengl/GL11;->glTexSubImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->nglMap1f()V",
        "Lorg/lwjgl/opengl/GL11;->nglEdgeFlagPointer()V",
        "Lorg/lwjgl/opengl/GL11;->nglNewList()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexImage1D()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetClipPlane()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalCoord1d()V",
        "Lorg/lwjgl/opengl/GL11;->nglColorMask()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor3b()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetMaterialfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglColorPointerBO()V",
        "Lorg/lwjgl/opengl/GL11;->glTexEnvf()V",
        "Lorg/lwjgl/opengl/GL11;->nglFogiv()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor3ub()V",
        "Lorg/lwjgl/opengl/GL11;->nglCullFace()V",
        "Lorg/lwjgl/opengl/GL11;->nglInterleavedArrays()V",
        "Lorg/lwjgl/opengl/GL11;->nglEnable()V",
        "Lorg/lwjgl/opengl/GL11;->nglPolygonStippleBO()V",
        "Lorg/lwjgl/opengl/GL11;->glEnable()V",
        "Lorg/lwjgl/opengl/GL11;->glDisableClientState()V",
        "Lorg/lwjgl/opengl/GL11;->nglCopyTexImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos3d()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetIntegerv()V",
        "Lorg/lwjgl/opengl/GL11;->glGetLight()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexImageBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord4d()V",
        "Lorg/lwjgl/opengl/GL11;->glMatrixMode()V",
        "Lorg/lwjgl/opengl/GL11;->glGetInteger()I",
        "Lorg/lwjgl/opengl/GL11;->nglGetMaterialiv()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelMapfvBO()V",
        "Lorg/lwjgl/opengl/GL11;->glLightModel()V",
        "Lorg/lwjgl/opengl/GL11;->nglCopyTexImage1D()V",
        "Lorg/lwjgl/opengl/GL11;->nglLoadMatrixf()V",
        "Lorg/lwjgl/opengl/GL11;->nglBegin()V",
        "Lorg/lwjgl/opengl/GL11;->glPointSize()V",
        "Lorg/lwjgl/opengl/GL11;->nglHint()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPointerv()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/GL11;->nglRenderMode()I",
        "Lorg/lwjgl/opengl/GL11;->nglLineStipple()V",
        "Lorg/lwjgl/opengl/GL11;->nglAlphaFunc()V",
        "Lorg/lwjgl/opengl/GL11;->glBlendFunc()V",
        "Lorg/lwjgl/opengl/GL11;->nglClearDepth()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexGendv()V",
        "Lorg/lwjgl/opengl/GL11;->glIsTexture()Z",
        "Lorg/lwjgl/opengl/GL11;->glClearDepth()V",
        "Lorg/lwjgl/opengl/GL11;->glIsEnabled()Z",
        "Lorg/lwjgl/opengl/GL11;->glColorMask()V",
        "Lorg/lwjgl/opengl/GL11;->nglClearStencil()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPixelMapuivBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPolygonStipple()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglPointSize()V",
        "Lorg/lwjgl/opengl/GL11;->glStencilMask()V",
        "Lorg/lwjgl/opengl/GL11;->glFrontFace()V",
        "Lorg/lwjgl/opengl/GL11;->nglDrawBuffer()V",
        "Lorg/lwjgl/opengl/GL11;->nglClipPlane()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelStoref()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexParameteriv()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex4i()V",
        "Lorg/lwjgl/opengl/GL11;->glFogf()V",
        "Lorg/lwjgl/opengl/GL11;->glCopyTexSubImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->glDepthRange()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexLevelParameterfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglTranslated()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalCoord2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglIsList()Z",
        "Lorg/lwjgl/opengl/GL11;->nglTexParameteri()V",
        "Lorg/lwjgl/opengl/GL11;->glDisable()V",
        "Lorg/lwjgl/opengl/GL11;->glMaterialf()V",
        "Lorg/lwjgl/opengl/GL11;->nglPassThrough()V",
        "Lorg/lwjgl/opengl/GL11;->nglArrayElement()V",
        "Lorg/lwjgl/opengl/GL11;->nglReadPixels()V",
        "Lorg/lwjgl/opengl/GL11;->glAlphaFunc()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetError()I",
        "Lorg/lwjgl/opengl/GL11;->glBegin()V",
        "Lorg/lwjgl/opengl/GL11;->glMultMatrix()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoordPointer()V",
        "Lorg/lwjgl/opengl/GL11;->nglScalef()V",
        "Lorg/lwjgl/opengl/GL11;->nglBitmapBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalPoint1()V",
        "Lorg/lwjgl/opengl/GL11;->nglFinish()V",
        "Lorg/lwjgl/opengl/GL11;->glHint()V",
        "Lorg/lwjgl/opengl/GL11;->nglPopAttrib()V",
        "Lorg/lwjgl/opengl/GL11;->glLightf()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos3f()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexSubImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->glScissor()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetString()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglPolygonMode()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex2i()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexEnvi()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexGenfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglMaterialfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightModeliv()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord3d()V",
        "Lorg/lwjgl/opengl/GL11;->nglPushMatrix()V",
        "Lorg/lwjgl/opengl/GL11;->nglPushClientAttrib()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexGeniv()V",
        "Lorg/lwjgl/opengl/GL11;->nglMapGrid2d()V",
        "Lorg/lwjgl/opengl/GL11;->nglSelectBuffer()V",
        "Lorg/lwjgl/opengl/GL11;->nglBitmap()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos4i()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexParameterfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord4f()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexEnvfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalCoord2d()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelMapfv()V",
        "Lorg/lwjgl/opengl/GL11;->glReadPixels()V",
        "Lorg/lwjgl/opengl/GL11;->nglMaterialf()V",
        "Lorg/lwjgl/opengl/GL11;->glPixelStorei()V",
        "Lorg/lwjgl/opengl/GL11;->nglScaled()V",
        "Lorg/lwjgl/opengl/GL11;->glBindTexture()V",
        "Lorg/lwjgl/opengl/GL11;->nglMapGrid2f()V",
        "Lorg/lwjgl/opengl/GL11;->glTexEnv()V",
        "Lorg/lwjgl/opengl/GL11;->nglReadBuffer()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord2d()V",
        "Lorg/lwjgl/opengl/GL11;->nglIsEnabled()Z",
        "Lorg/lwjgl/opengl/GL11;->nglFlush()V",
        "Lorg/lwjgl/opengl/GL11;->nglPopName()V",
        "Lorg/lwjgl/opengl/GL11;->nglFogi()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglNormalPointerBO()V",
        "Lorg/lwjgl/opengl/GL11;->glGetError()I",
        "Lorg/lwjgl/opengl/GL11;->glEnd()V",
        "Lorg/lwjgl/opengl/GL11;->nglDrawPixels()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos3i()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex3i()V",
        "Lorg/lwjgl/opengl/GL11;->glVertexPointer()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexSubImage1D()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertexPointerBO()V",
        "Lorg/lwjgl/opengl/GL11;->glTexParameterf()V",
        "Lorg/lwjgl/opengl/GL11;->glDeleteTextures()V",
        "Lorg/lwjgl/opengl/GL11;->nglDeleteTextures()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalMesh2()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetMapfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglStencilOp()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexGenf()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetMapdv()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexImage2DBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexEnvf()V",
        "Lorg/lwjgl/opengl/GL11;->glFrustum()V",
        "Lorg/lwjgl/opengl/GL11;->nglCopyTexSubImage1D()V",
        "Lorg/lwjgl/opengl/GL11;->nglDepthMask()V",
        "Lorg/lwjgl/opengl/GL11;->nglEnableClientState()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPixelMapusvBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord3f()V",
        "Lorg/lwjgl/opengl/GL11;->nglIsTexture()Z",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos2d()V",
        "Lorg/lwjgl/opengl/GL11;->nglLighti()V",
        "Lorg/lwjgl/opengl/GL11;->nglLoadName()V",
        "Lorg/lwjgl/opengl/GL11;->glGetFloat()V",
        "Lorg/lwjgl/opengl/GL11;->nglCopyPixels()V",
        "Lorg/lwjgl/opengl/GL11;->nglOrtho()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex4d()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexParameterfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalMesh1()V",
        "Lorg/lwjgl/opengl/GL11;->nglNormal3f()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetMapiv()V",
        "Lorg/lwjgl/opengl/GL11;->glTexEnvi()V",
        "Lorg/lwjgl/opengl/GL11;->nglAccum()V",
        "Lorg/lwjgl/opengl/GL11;->glVertex2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos4d()V",
        "Lorg/lwjgl/opengl/GL11;->nglFogf()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor4ub()V",
        "Lorg/lwjgl/opengl/GL11;->nglPolygonStipple()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexEnviv()V",
        "Lorg/lwjgl/opengl/GL11;->glColor4f()V",
        "Lorg/lwjgl/opengl/GL11;->nglMultMatrixd()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetFloatv()V",
        "Lorg/lwjgl/opengl/GL11;->nglListBase()V",
        "Lorg/lwjgl/opengl/GL11;->glLight()V",
        "Lorg/lwjgl/opengl/GL11;->nglLineWidth()V",
        "Lorg/lwjgl/opengl/GL11;->nglLogicOp()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexParameterf()V",
        "Lorg/lwjgl/opengl/GL11;->glGetTexEnv()V",
        "Lorg/lwjgl/opengl/GL11;->nglCallLists()V",
        "Lorg/lwjgl/opengl/GL11;->nglPushAttrib()V",
        "Lorg/lwjgl/opengl/GL11;->glTexCoord2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglBlendFunc()V",
        "Lorg/lwjgl/opengl/GL11;->nglPopMatrix()V",
        "Lorg/lwjgl/opengl/GL11;->glRotatef()V",
        "Lorg/lwjgl/opengl/GL11;->nglViewport()V",
        "Lorg/lwjgl/opengl/GL11;->nglInterleavedArraysBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPixelMapuiv()V",
        "Lorg/lwjgl/opengl/GL11;->nglClearColor()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightModelfv()V",
        "Lorg/lwjgl/opengl/GL11;->glClear()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor3d()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPixelMapfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglDepthRange()V",
        "Lorg/lwjgl/opengl/GL11;->nglRotated()V",
        "Lorg/lwjgl/opengl/GL11;->glCopyTexImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->glGetTexParameter()V",
        "Lorg/lwjgl/opengl/GL11;->nglDepthFunc()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor3f()V",
        "Lorg/lwjgl/opengl/GL11;->glTranslatef()V",
        "Lorg/lwjgl/opengl/GL11;->glViewport()V",
        "Lorg/lwjgl/opengl/GL11;->glScalef()V",
        "Lorg/lwjgl/opengl/GL11;->nglCopyTexSubImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->nglClearAccum()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetLightfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelTransferi()V",
        "Lorg/lwjgl/opengl/GL11;->nglColorMaterial()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexGeni()V",
        "Lorg/lwjgl/opengl/GL11;->nglMateriali()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord1d()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoordPointerBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexGenfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglInitNames()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelZoom()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPixelMapusv()V",
        "Lorg/lwjgl/opengl/GL11;->nglDisableClientState()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexImage1DBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglEdgeFlag()V",
        "Lorg/lwjgl/opengl/GL11;->nglEdgeFlagPointerBO()V",
        "Lorg/lwjgl/opengl/GL11;->glDepthFunc()V",
        "Lorg/lwjgl/opengl/GL11;->glPopMatrix()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertexPointer()V",
        "Lorg/lwjgl/opengl/GL11;->glLogicOp()V",
        "Lorg/lwjgl/opengl/GL11;->nglMapGrid1f()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetDoublev()V",
        "Lorg/lwjgl/opengl/GL11;->glVertex3f()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos2i()V",
        "Lorg/lwjgl/opengl/GL11;->glCullFace()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexGend()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalCoord1f()V",
        "Lorg/lwjgl/opengl/GL11;->glDrawElements()V",
        "Lorg/lwjgl/opengl/GL11;->nglMap1d()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetPolygonStippleBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglDisable()V",
        "Lorg/lwjgl/opengl/GL11;->glDrawArrays()V",
        "Lorg/lwjgl/opengl/GL11;->nglEnd()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexCoord1f()V",
        "Lorg/lwjgl/opengl/GL11;->nglMultMatrixf()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglPushName()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelMapuivBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglStencilMask()V",
        "Lorg/lwjgl/opengl/GL11;->nglEndList()V",
        "Lorg/lwjgl/opengl/GL11;->nglMaterialiv()V",
        "Lorg/lwjgl/opengl/GL11;->nglTranslatef()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelStorei()V",
        "Lorg/lwjgl/opengl/GL11;->glClearColor()V",
        "Lorg/lwjgl/opengl/GL11;->glGetBoolean()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor4d()V",
        "Lorg/lwjgl/opengl/GL11;->nglRotatef()V",
        "Lorg/lwjgl/opengl/GL11;->glTexParameter()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexEnviv()V",
        "Lorg/lwjgl/opengl/GL11;->nglMatrixMode()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexParameteriv()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelMapusv()V",
        "Lorg/lwjgl/opengl/GL11;->nglMap2d()V",
        "Lorg/lwjgl/opengl/GL11;->nglPrioritizeTextures()V",
        "Lorg/lwjgl/opengl/GL11;->glColorPointer()V",
        "Lorg/lwjgl/opengl/GL11;->nglAreTexturesResident()Z",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexLevelParameteriv()V",
        "Lorg/lwjgl/opengl/GL11;->glGetMaterial()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetLightiv()V",
        "Lorg/lwjgl/opengl/GL11;->glDepthMask()V",
        "Lorg/lwjgl/opengl/GL11;->nglPopClientAttrib()V",
        "Lorg/lwjgl/opengl/GL11;->nglDrawElements()V",
        "Lorg/lwjgl/opengl/GL11;->nglFogfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglPolygonOffset()V",
        "Lorg/lwjgl/opengl/GL11;->glOrtho()V",
        "Lorg/lwjgl/opengl/GL11;->glTexParameteri()V",
        "Lorg/lwjgl/opengl/GL11;->nglNormalPointer()V",
        "Lorg/lwjgl/opengl/GL11;->glPolygonOffset()V",
        "Lorg/lwjgl/opengl/GL11;->nglMap2f()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightModelf()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor4f()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex4f()V",
        "Lorg/lwjgl/opengl/GL11;->glPushMatrix()V",
        "Lorg/lwjgl/opengl/GL11;->nglRectf()V",
        "Lorg/lwjgl/opengl/GL11;->glLineWidth()V",
        "Lorg/lwjgl/opengl/GL11;->nglColorPointer()V",
        "Lorg/lwjgl/opengl/GL11;->glNormalPointer()V",
        "Lorg/lwjgl/opengl/GL11;->nglColor4b()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexGendv()V",
        "Lorg/lwjgl/opengl/GL11;->nglDrawPixelsBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex3f()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexEnvfv()V",
        "Lorg/lwjgl/opengl/GL11;->nglRectd()V",
        "Lorg/lwjgl/opengl/GL11;->glShadeModel()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->glGenTextures()I",
        "Lorg/lwjgl/opengl/GL11;->nglDeleteLists()V",
        "Lorg/lwjgl/opengl/GL11;->nglFrontFace()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightModeli()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetBooleanv()V",
        "Lorg/lwjgl/opengl/GL11;->nglCallList()V",
        "Lorg/lwjgl/opengl/GL11;->nglTexSubImage1DBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglLoadMatrixd()V",
        "Lorg/lwjgl/opengl/GL11;->nglBindTexture()V",
        "Lorg/lwjgl/opengl/GL11;->nglShadeModel()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightiv()V",
        "Lorg/lwjgl/opengl/GL11;->glLightModelf()V",
        "Lorg/lwjgl/opengl/GL11;->glClearStencil()V",
        "Lorg/lwjgl/opengl/GL11;->glFinish()V",
        "Lorg/lwjgl/opengl/GL11;->nglGenTextures()V",
        "Lorg/lwjgl/opengl/GL11;->glGetInteger()V",
        "Lorg/lwjgl/opengl/GL11;->nglRasterPos4f()V",
        "Lorg/lwjgl/opengl/GL11;->glPolygonMode()V",
        "Lorg/lwjgl/opengl/GL11;->glTexImage2D()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelMapusvBO()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexGeniv()V",
        "Lorg/lwjgl/opengl/GL11;->nglVertex3d()V",
        "Lorg/lwjgl/opengl/GL11;->nglEvalPoint2()V",
        "Lorg/lwjgl/opengl/GL11;->nglPixelMapuiv()V",
        "Lorg/lwjgl/opengl/GL11;->nglScissor()V",
        "Lorg/lwjgl/opengl/GL11;->glNormal3f()V",
        "Lorg/lwjgl/opengl/GL11;->nglGetTexImage()V",
        "Lorg/lwjgl/opengl/GL11;->nglNormal3b()V",
        "Lorg/lwjgl/opengl/GL11;->glGetString()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL11;->nglFrustum()V",
        "Lorg/lwjgl/opengl/GL11;->nglStencilFunc()V",
        "Lorg/lwjgl/opengl/GL11;->nglLightf()V",
        "Lorg/lwjgl/opengl/GL11;->nglGenLists()I",
        "Lorg/lwjgl/opengl/GL11;->glFlush()V",
        "Lorg/lwjgl/opengl/GL11;->glLoadIdentity()V",
        "Lorg/lwjgl/opengl/GL11;->glStencilFunc()V"
    ],
    "Lorg/lwjgl/util/glu/Project;": [
        "Lorg/lwjgl/util/glu/Project;->gluUnProject()Z",
        "Lorg/lwjgl/util/glu/Project;->normalize()[F",
        "Lorg/lwjgl/util/glu/Project;->__gluMakeIdentityf()V",
        "Lorg/lwjgl/util/glu/Project;->__gluMultMatricesf()V",
        "Lorg/lwjgl/util/glu/Project;->gluPickMatrix()V",
        "Lorg/lwjgl/util/glu/Project;->gluProject()Z",
        "Lorg/lwjgl/util/glu/Project;->gluLookAt()V",
        "Lorg/lwjgl/util/glu/Project;->__gluMultMatrixVecf()V",
        "Lorg/lwjgl/util/glu/Project;->cross()V",
        "Lorg/lwjgl/util/glu/Project;->__gluInvertMatrixf()Z",
        "Lorg/lwjgl/util/glu/Project;->gluPerspective()V"
    ],
    "Lorg/lwjgl/util/glu/MipMap;": [
        "Lorg/lwjgl/util/glu/MipMap;->gluScaleImage()I",
        "Lorg/lwjgl/util/glu/MipMap;->gluBuild2DMipmaps()I",
        "Lorg/lwjgl/util/glu/MipMap;->compPerPix()I",
        "Lorg/lwjgl/util/glu/MipMap;->glGetIntegerv()I",
        "Lorg/lwjgl/util/glu/MipMap;->nearestPower()I",
        "Lorg/lwjgl/util/glu/MipMap;->ceil()I",
        "Lorg/lwjgl/util/glu/MipMap;->bytesPerPixel()I"
    ],
    "Lorg/lwjgl/util/glu/PixelStoreState;": [
        "Lorg/lwjgl/util/glu/PixelStoreState;->load()V",
        "Lorg/lwjgl/util/glu/PixelStoreState;->glGetIntegerv()I",
        "Lorg/lwjgl/util/glu/PixelStoreState;->save()V"
    ],
    "Lorg/lwjgl/util/glu/Registry;": [
        "Lorg/lwjgl/util/glu/Registry;->gluCheckExtension()Z",
        "Lorg/lwjgl/util/glu/Registry;->gluGetString()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/opengl/Util;": [
        "Lorg/lwjgl/opengl/Util;->checkGLError()V",
        "Lorg/lwjgl/opengl/Util;->translateGLErrorString()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/util/glu/Sphere;": [
        "Lorg/lwjgl/util/glu/Sphere;->TXTR_COORD()V",
        "Lorg/lwjgl/util/glu/Sphere;->cos()F",
        "Lorg/lwjgl/util/glu/Sphere;->sin()F"
    ],
    "Lorg/lwjgl/util/glu/Disk;": [
        "Lorg/lwjgl/util/glu/Disk;->TXTR_COORD()V",
        "Lorg/lwjgl/util/glu/Disk;->sin()F",
        "Lorg/lwjgl/util/glu/Disk;->cos()F"
    ],
    "Lorg/lwjgl/util/glu/PartialDisk;": [
        "Lorg/lwjgl/util/glu/PartialDisk;->sin()F",
        "Lorg/lwjgl/util/glu/PartialDisk;->cos()F"
    ],
    "Lorg/lwjgl/util/glu/Cylinder;": [
        "Lorg/lwjgl/util/glu/Cylinder;->sin()F",
        "Lorg/lwjgl/util/glu/Cylinder;->TXTR_COORD()V",
        "Lorg/lwjgl/util/glu/Cylinder;->normal3f()V",
        "Lorg/lwjgl/util/glu/Cylinder;->cos()F"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Render;": [
        "Lorg/lwjgl/util/glu/tessellation/Render;->Marked()Z",
        "Lorg/lwjgl/util/glu/tessellation/Render;->MaximumStrip()Lorg/lwjgl/util/glu/tessellation/Render$FaceCount;",
        "Lorg/lwjgl/util/glu/tessellation/Render;->__gl_renderBoundary()V",
        "Lorg/lwjgl/util/glu/tessellation/Render;->AddToTrail()Lorg/lwjgl/util/glu/tessellation/GLUface;",
        "Lorg/lwjgl/util/glu/tessellation/Render;->MaximumFan()Lorg/lwjgl/util/glu/tessellation/Render$FaceCount;",
        "Lorg/lwjgl/util/glu/tessellation/Render;->FreeTrail()V",
        "Lorg/lwjgl/util/glu/tessellation/Render;->RenderLonelyTriangles()V",
        "Lorg/lwjgl/util/glu/tessellation/Render;->RenderMaximumFaceGroup()V",
        "Lorg/lwjgl/util/glu/tessellation/Render;->__gl_renderCache()Z",
        "Lorg/lwjgl/util/glu/tessellation/Render;->ComputeNormal()I",
        "Lorg/lwjgl/util/glu/tessellation/Render;->IsEven()Z",
        "Lorg/lwjgl/util/glu/tessellation/Render;->__gl_renderMesh()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;": [
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->callBeginOrBeginData()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->callEdgeFlagOrEdgeFlagData()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->gluTessBeginContour()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->makeDormant()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->cacheVertex()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->gluTessEndContour()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->requireState()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->gluTessEndPolygon()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->addVertex()Z",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->callEndOrEndData()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->gluTessBeginPolygon()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->callCombineOrCombineData()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->callVertexOrVertexData()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->gotoState()V",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->flushCache()Z",
        "Lorg/lwjgl/util/glu/tessellation/GLUtessellatorImpl;->callErrorOrErrorData()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Render$renderCallBack;": [
        "Lorg/lwjgl/util/glu/tessellation/Render$renderCallBack;->render()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Geom;": [
        "Lorg/lwjgl/util/glu/tessellation/Geom;->TransSign()D",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->EdgeGoesRight()Z",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->EdgeSign()D",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->EdgeEval()D",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->VertLeq()Z",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->EdgeIntersect()V",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->TransEval()D",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->VertEq()Z",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->VertL1dist()D",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->TransLeq()Z",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->EdgeGoesLeft()Z",
        "Lorg/lwjgl/util/glu/tessellation/Geom;->Interpolate()D"
    ],
    "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;": [
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqDelete()V",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqInsert()I",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqExtractMin()Ljava/lang/Object;",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqIsEmpty()Z",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqMinimum()Ljava/lang/Object;",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->FloatDown()V",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->LEQ()Z",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqDeletePriorityQ()V",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->pqInit()Z",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQHeap;->FloatUp()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/PriorityQSort;": [
        "Lorg/lwjgl/util/glu/tessellation/PriorityQSort;->Swap()V",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQSort;->LT()Z",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQSort;->LEQ()Z",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQSort;->GT()Z"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Mesh;": [
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->MakeEdge()Lorg/lwjgl/util/glu/tessellation/GLUhalfEdge;",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->MakeVertex()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshDeleteMesh()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshCheckMesh()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshNewMesh()Lorg/lwjgl/util/glu/tessellation/GLUmesh;",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->Splice()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshConnect()Lorg/lwjgl/util/glu/tessellation/GLUhalfEdge;",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->MakeFace()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshAddEdgeVertex()Lorg/lwjgl/util/glu/tessellation/GLUhalfEdge;",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshDelete()Z",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshSplitEdge()Lorg/lwjgl/util/glu/tessellation/GLUhalfEdge;",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->KillEdge()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshSplice()Z",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->KillVertex()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshMakeEdge()Lorg/lwjgl/util/glu/tessellation/GLUhalfEdge;",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->KillFace()V",
        "Lorg/lwjgl/util/glu/tessellation/Mesh;->__gl_meshZapFace()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/TessMono;": [
        "Lorg/lwjgl/util/glu/tessellation/TessMono;->__gl_meshSetWindingNumber()Z",
        "Lorg/lwjgl/util/glu/tessellation/TessMono;->__gl_meshTessellateInterior()Z",
        "Lorg/lwjgl/util/glu/tessellation/TessMono;->__gl_meshTessellateMonoRegion()Z"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Dict;": [
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictInsert()Lorg/lwjgl/util/glu/tessellation/DictNode;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictSucc()Lorg/lwjgl/util/glu/tessellation/DictNode;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictInsertBefore()Lorg/lwjgl/util/glu/tessellation/DictNode;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictKey()Ljava/lang/Object;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictNewDict()Lorg/lwjgl/util/glu/tessellation/Dict;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictPred()Lorg/lwjgl/util/glu/tessellation/DictNode;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictSearch()Lorg/lwjgl/util/glu/tessellation/DictNode;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictDeleteDict()V",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictMin()Lorg/lwjgl/util/glu/tessellation/DictNode;",
        "Lorg/lwjgl/util/glu/tessellation/Dict;->dictDelete()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Sweep;": [
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->CallCombine()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->WalkDirtyRegions()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->ConnectRightVertex()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->RemoveDegenerateEdges()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->AddRightEdges()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->SpliceMergeVertices()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->CheckForRightSplice()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->TopRightRegion()Lorg/lwjgl/util/glu/tessellation/ActiveRegion;",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->RegionAbove()Lorg/lwjgl/util/glu/tessellation/ActiveRegion;",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->DeleteRegion()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->DebugEvent()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->FixUpperEdge()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->RemoveDegenerateFaces()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->CheckForIntersect()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->__gl_computeInterior()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->FinishLeftRegions()Lorg/lwjgl/util/glu/tessellation/GLUhalfEdge;",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->SweepEvent()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->FinishRegion()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->ConnectLeftDegenerate()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->AddRegionBelow()Lorg/lwjgl/util/glu/tessellation/ActiveRegion;",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->AddSentinel()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->ConnectLeftVertex()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->TopLeftRegion()Lorg/lwjgl/util/glu/tessellation/ActiveRegion;",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->GetIntersectData()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->ComputeWinding()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->RegionBelow()Lorg/lwjgl/util/glu/tessellation/ActiveRegion;",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->CheckForLeftSplice()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->InitPriorityQ()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->InitEdgeDict()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->IsWindingInside()Z",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->AddWinding()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->DoneEdgeDict()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->DonePriorityQ()V",
        "Lorg/lwjgl/util/glu/tessellation/Sweep;->VertexWeights()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/PriorityQ;": [
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqNewPriorityQ()Lorg/lwjgl/util/glu/tessellation/PriorityQ;",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqMinimum()Ljava/lang/Object;",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqExtractMin()Ljava/lang/Object;",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqDelete()V",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqDeletePriorityQ()V",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqInsert()I",
        "Lorg/lwjgl/util/glu/tessellation/PriorityQ;->pqInit()Z"
    ],
    "Lorg/lwjgl/util/glu/GLUtessellatorCallback;": [
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->end()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->edgeFlag()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->errorData()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->begin()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->combine()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->edgeFlagData()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->endData()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->error()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->beginData()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->combineData()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->vertex()V",
        "Lorg/lwjgl/util/glu/GLUtessellatorCallback;->vertexData()V"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Normal;": [
        "Lorg/lwjgl/util/glu/tessellation/Normal;->CheckOrientation()V",
        "Lorg/lwjgl/util/glu/tessellation/Normal;->Dot()D",
        "Lorg/lwjgl/util/glu/tessellation/Normal;->ComputeNormal()V",
        "Lorg/lwjgl/util/glu/tessellation/Normal;->__gl_projectPolygon()V",
        "Lorg/lwjgl/util/glu/tessellation/Normal;->LongAxis()I"
    ],
    "Lorg/lwjgl/util/glu/tessellation/Dict$DictLeq;": [
        "Lorg/lwjgl/util/glu/tessellation/Dict$DictLeq;->leq()Z"
    ],
    "Lorg/lwjgl/util/vector/Vector2f;": [
        "Lorg/lwjgl/util/vector/Vector2f;->set()V",
        "Lorg/lwjgl/util/vector/Vector2f;->length()F",
        "Lorg/lwjgl/util/vector/Vector2f;->set()Lorg/lwjgl/util/vector/Vector2f;",
        "Lorg/lwjgl/util/vector/Vector2f;->dot()F"
    ],
    "Lorg/lwjgl/util/vector/ReadableVector2f;": [
        "Lorg/lwjgl/util/vector/ReadableVector2f;->getY()F",
        "Lorg/lwjgl/util/vector/ReadableVector2f;->getX()F"
    ],
    "Lorg/lwjgl/util/vector/Matrix3f;": [
        "Lorg/lwjgl/util/vector/Matrix3f;->load()Lorg/lwjgl/util/vector/Matrix3f;",
        "Lorg/lwjgl/util/vector/Matrix3f;->invert()Lorg/lwjgl/util/vector/Matrix3f;",
        "Lorg/lwjgl/util/vector/Matrix3f;->transpose()Lorg/lwjgl/util/vector/Matrix3f;",
        "Lorg/lwjgl/util/vector/Matrix3f;->setIdentity()Lorg/lwjgl/util/vector/Matrix;",
        "Lorg/lwjgl/util/vector/Matrix3f;->setZero()Lorg/lwjgl/util/vector/Matrix3f;",
        "Lorg/lwjgl/util/vector/Matrix3f;->determinant()F",
        "Lorg/lwjgl/util/vector/Matrix3f;->negate()Lorg/lwjgl/util/vector/Matrix3f;",
        "Lorg/lwjgl/util/vector/Matrix3f;->setIdentity()Lorg/lwjgl/util/vector/Matrix3f;"
    ],
    "Lorg/lwjgl/util/vector/Vector;": [
        "Lorg/lwjgl/util/vector/Vector;->length()F",
        "Lorg/lwjgl/util/vector/Vector;->scale()Lorg/lwjgl/util/vector/Vector;",
        "Lorg/lwjgl/util/vector/Vector;->lengthSquared()F"
    ],
    "Lorg/lwjgl/util/vector/Vector4f;": [
        "Lorg/lwjgl/util/vector/Vector4f;->set()V",
        "Lorg/lwjgl/util/vector/Vector4f;->dot()F",
        "Lorg/lwjgl/util/vector/Vector4f;->length()F",
        "Lorg/lwjgl/util/vector/Vector4f;->set()Lorg/lwjgl/util/vector/Vector4f;"
    ],
    "Lorg/lwjgl/util/vector/ReadableVector4f;": [
        "Lorg/lwjgl/util/vector/ReadableVector4f;->getZ()F",
        "Lorg/lwjgl/util/vector/ReadableVector4f;->getY()F",
        "Lorg/lwjgl/util/vector/ReadableVector4f;->getX()F",
        "Lorg/lwjgl/util/vector/ReadableVector4f;->getW()F"
    ],
    "Lorg/lwjgl/util/vector/Matrix2f;": [
        "Lorg/lwjgl/util/vector/Matrix2f;->negate()Lorg/lwjgl/util/vector/Matrix2f;",
        "Lorg/lwjgl/util/vector/Matrix2f;->setIdentity()Lorg/lwjgl/util/vector/Matrix;",
        "Lorg/lwjgl/util/vector/Matrix2f;->transpose()Lorg/lwjgl/util/vector/Matrix2f;",
        "Lorg/lwjgl/util/vector/Matrix2f;->setIdentity()Lorg/lwjgl/util/vector/Matrix2f;",
        "Lorg/lwjgl/util/vector/Matrix2f;->setZero()Lorg/lwjgl/util/vector/Matrix2f;",
        "Lorg/lwjgl/util/vector/Matrix2f;->determinant()F",
        "Lorg/lwjgl/util/vector/Matrix2f;->invert()Lorg/lwjgl/util/vector/Matrix2f;",
        "Lorg/lwjgl/util/vector/Matrix2f;->load()Lorg/lwjgl/util/vector/Matrix2f;"
    ],
    "Lorg/lwjgl/util/vector/Quaternion;": [
        "Lorg/lwjgl/util/vector/Quaternion;->lengthSquared()F",
        "Lorg/lwjgl/util/vector/Quaternion;->setFromMatrix()Lorg/lwjgl/util/vector/Quaternion;",
        "Lorg/lwjgl/util/vector/Quaternion;->set()V",
        "Lorg/lwjgl/util/vector/Quaternion;->set()Lorg/lwjgl/util/vector/Quaternion;",
        "Lorg/lwjgl/util/vector/Quaternion;->setFromMat()Lorg/lwjgl/util/vector/Quaternion;",
        "Lorg/lwjgl/util/vector/Quaternion;->normalise()Lorg/lwjgl/util/vector/Quaternion;",
        "Lorg/lwjgl/util/vector/Quaternion;->setIdentity()Lorg/lwjgl/util/vector/Quaternion;",
        "Lorg/lwjgl/util/vector/Quaternion;->length()F",
        "Lorg/lwjgl/util/vector/Quaternion;->negate()Lorg/lwjgl/util/vector/Quaternion;",
        "Lorg/lwjgl/util/vector/Quaternion;->scale()Lorg/lwjgl/util/vector/Quaternion;"
    ],
    "Lorg/lwjgl/util/vector/Vector3f;": [
        "Lorg/lwjgl/util/vector/Vector3f;->set()V",
        "Lorg/lwjgl/util/vector/Vector3f;->dot()F",
        "Lorg/lwjgl/util/vector/Vector3f;->set()Lorg/lwjgl/util/vector/Vector3f;",
        "Lorg/lwjgl/util/vector/Vector3f;->length()F"
    ],
    "Lorg/lwjgl/util/vector/ReadableVector3f;": [
        "Lorg/lwjgl/util/vector/ReadableVector3f;->getZ()F",
        "Lorg/lwjgl/util/vector/ReadableVector3f;->getY()F",
        "Lorg/lwjgl/util/vector/ReadableVector3f;->getX()F"
    ],
    "Lorg/lwjgl/util/vector/Matrix4f;": [
        "Lorg/lwjgl/util/vector/Matrix4f;->negate()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->determinant()F",
        "Lorg/lwjgl/util/vector/Matrix4f;->translate()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->invert()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->determinant3x3()F",
        "Lorg/lwjgl/util/vector/Matrix4f;->setIdentity()Lorg/lwjgl/util/vector/Matrix;",
        "Lorg/lwjgl/util/vector/Matrix4f;->setIdentity()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->rotate()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->transpose()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->load()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->scale()Lorg/lwjgl/util/vector/Matrix4f;",
        "Lorg/lwjgl/util/vector/Matrix4f;->setZero()Lorg/lwjgl/util/vector/Matrix4f;"
    ],
    "Lsun/misc/Unsafe;": [
        "Lsun/misc/Unsafe;->putLongVolatile()V",
        "Lsun/misc/Unsafe;->getChar()C",
        "Lsun/misc/Unsafe;->putByteVolatile()V",
        "Lsun/misc/Unsafe;->putAddress()V",
        "Lsun/misc/Unsafe;->putDoubleVolatile()V",
        "Lsun/misc/Unsafe;->addressSize()I",
        "Lsun/misc/Unsafe;->putFloatVolatile()V",
        "Lsun/misc/Unsafe;->objectFieldOffset()J",
        "Lsun/misc/Unsafe;->putCharVolatile()V",
        "Lsun/misc/Unsafe;->getAddress()J",
        "Lsun/misc/Unsafe;->putFloat()V",
        "Lsun/misc/Unsafe;->putLong()V",
        "Lsun/misc/Unsafe;->pageSize()I",
        "Lsun/misc/Unsafe;->putDouble()V",
        "Lsun/misc/Unsafe;->putByte()V",
        "Lsun/misc/Unsafe;->getInt()I",
        "Lsun/misc/Unsafe;->getByteVolatile()B",
        "Lsun/misc/Unsafe;->getDouble()D",
        "Lsun/misc/Unsafe;->copyMemory()V",
        "Lsun/misc/Unsafe;->getDoubleVolatile()D",
        "Lsun/misc/Unsafe;->getFloatVolatile()F",
        "Lsun/misc/Unsafe;->getFloat()F",
        "Lsun/misc/Unsafe;->putShort()V",
        "Lsun/misc/Unsafe;->getShort()S",
        "Lsun/misc/Unsafe;->getCharVolatile()C",
        "Lsun/misc/Unsafe;->putInt()V",
        "Lsun/misc/Unsafe;->putIntVolatile()V",
        "Lsun/misc/Unsafe;->getLong()J",
        "Lsun/misc/Unsafe;->getLongVolatile()J",
        "Lsun/misc/Unsafe;->getByte()B",
        "Lsun/misc/Unsafe;->putChar()V",
        "Lsun/misc/Unsafe;->getShortVolatile()S",
        "Lsun/misc/Unsafe;->putShortVolatile()V",
        "Lsun/misc/Unsafe;->getIntVolatile()I"
    ],
    "Lorg/lwjgl/util/mapped/MappedObject;": [
        "Lorg/lwjgl/util/mapped/MappedObject;->setViewAddress()V",
        "Lorg/lwjgl/util/mapped/MappedObject;->foreach()Ljava/lang/Iterable;",
        "Lorg/lwjgl/util/mapped/MappedObject;->getViewAddress()J",
        "Lorg/lwjgl/util/mapped/MappedObject;->capacity()I",
        "Lorg/lwjgl/util/mapped/MappedObject;->getSizeof()I",
        "Lorg/lwjgl/util/mapped/MappedObject;->checkAddress()V",
        "Lorg/lwjgl/util/mapped/MappedObject;->checkRange()V",
        "Lorg/lwjgl/util/mapped/MappedObject;->next()V"
    ],
    "Lorg/lwjgl/util/mapped/MappedObjectUnsafe;": [
        "Lorg/lwjgl/util/mapped/MappedObjectUnsafe;->newBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/util/mapped/MappedObjectUnsafe;->getObjectFieldOffset()J",
        "Lorg/lwjgl/util/mapped/MappedObjectUnsafe;->getUnsafeInstance()Lsun/misc/Unsafe;"
    ],
    "Lorg/lwjgl/util/mapped/MappedSet2;": [
        "Lorg/lwjgl/util/mapped/MappedSet2;->view()V"
    ],
    "Lorg/lwjgl/util/mapped/MappedSet3;": [
        "Lorg/lwjgl/util/mapped/MappedSet3;->view()V"
    ],
    "Lorg/lwjgl/util/mapped/MappedSet4;": [
        "Lorg/lwjgl/util/mapped/MappedSet4;->view()V"
    ],
    "Lorg/lwjgl/util/mapped/CacheLineSize;": [
        "Lorg/lwjgl/util/mapped/CacheLineSize;->getCacheLineSize()I",
        "Lorg/lwjgl/util/mapped/CacheLineSize;->getMemory()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/util/mapped/CacheLineSize;->doTest()J",
        "Lorg/lwjgl/util/mapped/CacheLineSize;->submitTest()V",
        "Lorg/lwjgl/util/mapped/CacheLineSize;->waitForResults()J"
    ],
    "Ljava/util/concurrent/Executors;": [
        "Ljava/util/concurrent/Executors;->newFixedThreadPool()Ljava/util/concurrent/ExecutorService;"
    ],
    "Ljava/util/concurrent/ExecutorService;": [
        "Ljava/util/concurrent/ExecutorService;->shutdown()V",
        "Ljava/util/concurrent/ExecutorService;->submit()Ljava/util/concurrent/Future;",
        "Ljava/util/concurrent/ExecutorService;->awaitTermination()Z"
    ],
    "Lorg/lwjgl/util/mapped/CacheUtil;": [
        "Lorg/lwjgl/util/mapped/CacheUtil;->getCacheLineSize()I",
        "Lorg/lwjgl/util/mapped/CacheUtil;->createByteBuffer()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/util/mapped/MappedHelper;": [
        "Lorg/lwjgl/util/mapped/MappedHelper;->ivput()V",
        "Lorg/lwjgl/util/mapped/MappedHelper;->ivget()I"
    ],
    "Ljava/util/concurrent/ExecutorCompletionService;": [
        "Ljava/util/concurrent/ExecutorCompletionService;->submit()Ljava/util/concurrent/Future;",
        "Ljava/util/concurrent/ExecutorCompletionService;->take()Ljava/util/concurrent/Future;"
    ],
    "Ljava/util/concurrent/Future;": [
        "Ljava/util/concurrent/Future;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/Future;->isDone()Z"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->addShutdownHook()V",
        "Ljava/lang/Runtime;->freeMemory()J",
        "Ljava/lang/Runtime;->exec()Ljava/lang/Process;",
        "Ljava/lang/Runtime;->availableProcessors()I",
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;",
        "Ljava/lang/Runtime;->totalMemory()J"
    ],
    "Ljava/lang/Package;": [
        "Ljava/lang/Package;->getName()Ljava/lang/String;"
    ],
    "Ljava/net/URLClassLoader;": [
        "Ljava/net/URLClassLoader;->getURLs()[Ljava/net/URL;",
        "Ljava/net/URLClassLoader;->defineClass()Ljava/lang/Class;",
        "Ljava/net/URLClassLoader;->loadClass()Ljava/lang/Class;"
    ],
    "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;": [
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->readStream()[B",
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->loadMappedObject()Ljava/lang/Class;",
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->loadClass()Ljava/lang/Class;",
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->resolveClass()V",
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->copyOf()[B",
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->printActivity()V",
        "Lorg/lwjgl/util/mapped/MappedObjectClassLoader;->getResourceAsStream()Ljava/io/InputStream;"
    ],
    "Ljava/lang/reflect/InvocationTargetException;": [
        "Ljava/lang/reflect/InvocationTargetException;->getCause()Ljava/lang/Throwable;"
    ],
    "Ljava/lang/Thread$UncaughtExceptionHandler;": [
        "Ljava/lang/Thread$UncaughtExceptionHandler;->uncaughtException()V"
    ],
    "Lorg/lwjgl/util/mapped/MappedObjectTransformer;": [
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateSIZEOFInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateViewInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateMapInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->getIntNode()Lorg/objectweb/asm/tree/AbstractInsnNode;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateSetViewInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->transformMappedAPI()[B",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateRunViewConstructorInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->transformMappedObject()[B",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->getterName()Ljava/lang/String;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->jvmClassName()Ljava/lang/String;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateAddressInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->getMethodGenAdapter()Lorg/objectweb/asm/ClassAdapter;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->printBytecode()V",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateCopyRangeInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->replace()I",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->registerField()Lorg/lwjgl/util/mapped/MappedObjectTransformer$FieldInfo;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->setterName()Ljava/lang/String;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateSliceInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->getOpcodeName()Ljava/lang/String;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateDupInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->getClassEnums()V",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateFieldInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateByteBufferInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->throwAccessErrorOnReadOnlyField()V",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->generateCopyToInstructions()Lorg/objectweb/asm/tree/InsnList;",
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer;->checkInsnAfterIsArray()V"
    ],
    "Ljava/lang/reflect/Modifier;": [
        "Ljava/lang/reflect/Modifier;->isStatic()Z",
        "Ljava/lang/reflect/Modifier;->isFinal()Z",
        "Ljava/lang/reflect/Modifier;->isTransient()Z",
        "Ljava/lang/reflect/Modifier;->isVolatile()Z",
        "Ljava/lang/reflect/Modifier;->isPublic()Z"
    ],
    "Lorg/objectweb/asm/tree/AbstractInsnNode;": [
        "Lorg/objectweb/asm/tree/AbstractInsnNode;->getNext()Lorg/objectweb/asm/tree/AbstractInsnNode;",
        "Lorg/objectweb/asm/tree/AbstractInsnNode;->getType()I",
        "Lorg/objectweb/asm/tree/AbstractInsnNode;->getOpcode()I"
    ],
    "Lorg/objectweb/asm/tree/FieldInsnNode;": [
        "Lorg/objectweb/asm/tree/FieldInsnNode;->getOpcode()I"
    ],
    "Lorg/objectweb/asm/tree/InsnList;": [
        "Lorg/objectweb/asm/tree/InsnList;->add()V",
        "Lorg/objectweb/asm/tree/InsnList;->size()I",
        "Lorg/objectweb/asm/tree/InsnList;->insert()V",
        "Lorg/objectweb/asm/tree/InsnList;->remove()V"
    ],
    "Lorg/lwjgl/util/mapped/MappedObjectTransformer$FieldInfo;": [
        "Lorg/lwjgl/util/mapped/MappedObjectTransformer$FieldInfo;->getAccessType()Ljava/lang/String;"
    ],
    "Ljava/lang/Character;": [
        "Ljava/lang/Character;->toChars()[C",
        "Ljava/lang/Character;->codePointCount()I",
        "Ljava/lang/Character;->toUpperCase()C",
        "Ljava/lang/Character;->charValue()C",
        "Ljava/lang/Character;->valueOf()Ljava/lang/Character;",
        "Ljava/lang/Character;->codePointAt()I",
        "Ljava/lang/Character;->offsetByCodePoints()I",
        "Ljava/lang/Character;->codePointBefore()I"
    ],
    "Lorg/objectweb/asm/ClassReader;": [
        "Lorg/objectweb/asm/ClassReader;->accept()V"
    ],
    "Ljava/io/StringWriter;": [
        "Ljava/io/StringWriter;->toString()Ljava/lang/String;",
        "Ljava/io/StringWriter;->write()V"
    ],
    "Lorg/lwjgl/util/mapped/MappedType;": [
        "Lorg/lwjgl/util/mapped/MappedType;->padding()I",
        "Lorg/lwjgl/util/mapped/MappedType;->cacheLinePadding()Z",
        "Lorg/lwjgl/util/mapped/MappedType;->autoGenerateOffsets()Z",
        "Lorg/lwjgl/util/mapped/MappedType;->align()I"
    ],
    "Lorg/lwjgl/util/mapped/MappedField;": [
        "Lorg/lwjgl/util/mapped/MappedField;->byteOffset()J",
        "Lorg/lwjgl/util/mapped/MappedField;->byteLength()J"
    ],
    "Lorg/lwjgl/util/mapped/CacheLinePad;": [
        "Lorg/lwjgl/util/mapped/CacheLinePad;->before()Z",
        "Lorg/lwjgl/util/mapped/CacheLinePad;->after()Z"
    ],
    "Lorg/objectweb/asm/Type;": [
        "Lorg/objectweb/asm/Type;->getType()Lorg/objectweb/asm/Type;",
        "Lorg/objectweb/asm/Type;->getInternalName()Ljava/lang/String;",
        "Lorg/objectweb/asm/Type;->getElementType()Lorg/objectweb/asm/Type;"
    ],
    "Lorg/objectweb/asm/tree/analysis/Frame;": [
        "Lorg/objectweb/asm/tree/analysis/Frame;->getStackSize()I",
        "Lorg/objectweb/asm/tree/analysis/Frame;->getStack()Lorg/objectweb/asm/tree/analysis/Value;"
    ],
    "Lorg/objectweb/asm/tree/VarInsnNode;": [
        "Lorg/objectweb/asm/tree/VarInsnNode;->getNext()Lorg/objectweb/asm/tree/AbstractInsnNode;"
    ],
    "Lorg/objectweb/asm/ClassWriter;": [
        "Lorg/objectweb/asm/ClassWriter;->toByteArray()[B"
    ],
    "Lorg/objectweb/asm/tree/MethodInsnNode;": [
        "Lorg/objectweb/asm/tree/MethodInsnNode;->getNext()Lorg/objectweb/asm/tree/AbstractInsnNode;",
        "Lorg/objectweb/asm/tree/MethodInsnNode;->getPrevious()Lorg/objectweb/asm/tree/AbstractInsnNode;",
        "Lorg/objectweb/asm/tree/MethodInsnNode;->getOpcode()I"
    ],
    "Lorg/objectweb/asm/tree/analysis/BasicValue;": [
        "Lorg/objectweb/asm/tree/analysis/BasicValue;->getType()Lorg/objectweb/asm/Type;"
    ],
    "Lorg/objectweb/asm/MethodVisitor;": [
        "Lorg/objectweb/asm/MethodVisitor;->visitInsn()V",
        "Lorg/objectweb/asm/MethodVisitor;->visitLdcInsn()V",
        "Lorg/objectweb/asm/MethodVisitor;->visitIntInsn()V"
    ],
    "Lorg/lwjgl/util/jinput/LWJGLKeyboard;": [
        "Lorg/lwjgl/util/jinput/LWJGLKeyboard;->createComponents()[Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLKeyboard;->getComponent()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLKeyboard;->getComponents()[Lnet/java/games/input/Component;"
    ],
    "Lorg/lwjgl/util/jinput/KeyMap;": [
        "Lorg/lwjgl/util/jinput/KeyMap;->map()Lnet/java/games/input/Component$Identifier$Key;"
    ],
    "Lorg/lwjgl/input/Keyboard;": [
        "Lorg/lwjgl/input/Keyboard;->getEventKey()I",
        "Lorg/lwjgl/input/Keyboard;->getEventKeyState()Z",
        "Lorg/lwjgl/input/Keyboard;->isKeyDown()Z",
        "Lorg/lwjgl/input/Keyboard;->read()V",
        "Lorg/lwjgl/input/Keyboard;->getEventNanoseconds()J",
        "Lorg/lwjgl/input/Keyboard;->poll()V",
        "Lorg/lwjgl/input/Keyboard;->create()V",
        "Lorg/lwjgl/input/Keyboard;->enableRepeatEvents()V",
        "Lorg/lwjgl/input/Keyboard;->getEventCharacter()C",
        "Lorg/lwjgl/input/Keyboard;->next()Z",
        "Lorg/lwjgl/input/Keyboard;->destroy()V",
        "Lorg/lwjgl/input/Keyboard;->readNext()Z",
        "Lorg/lwjgl/input/Keyboard;->isCreated()Z",
        "Lorg/lwjgl/input/Keyboard;->reset()V"
    ],
    "Lnet/java/games/input/Event;": [
        "Lnet/java/games/input/Event;->getNanos()J",
        "Lnet/java/games/input/Event;->set()V",
        "Lnet/java/games/input/Event;->getValue()F",
        "Lnet/java/games/input/Event;->getComponent()Lnet/java/games/input/Component;"
    ],
    "Lorg/lwjgl/util/jinput/LWJGLKeyboard$Key;": [
        "Lorg/lwjgl/util/jinput/LWJGLKeyboard$Key;->update()V"
    ],
    "Lorg/lwjgl/util/jinput/LWJGLMouse;": [
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->getLeft()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->setButtonState()V",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->getWheel()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->getMiddle()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->getY()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->getRight()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->getX()Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->createComponents()[Lnet/java/games/input/Component;",
        "Lorg/lwjgl/util/jinput/LWJGLMouse;->map()Lorg/lwjgl/util/jinput/LWJGLMouse$Button;"
    ],
    "Lorg/lwjgl/util/jinput/LWJGLMouse$Button;": [
        "Lorg/lwjgl/util/jinput/LWJGLMouse$Button;->setValue()V"
    ],
    "Lorg/lwjgl/openal/AL11;": [
        "Lorg/lwjgl/openal/AL11;->nalListener3i()V",
        "Lorg/lwjgl/openal/AL11;->nalGetBufferfv()V",
        "Lorg/lwjgl/openal/AL11;->nalGetBufferf()F",
        "Lorg/lwjgl/openal/AL11;->nalGetBufferiv()V",
        "Lorg/lwjgl/openal/AL11;->nalSourceiv()V",
        "Lorg/lwjgl/openal/AL11;->nalSource3i()V",
        "Lorg/lwjgl/openal/AL11;->nalGetBufferi()I",
        "Lorg/lwjgl/openal/AL11;->nalBufferf()V",
        "Lorg/lwjgl/openal/AL11;->nalBufferiv()V",
        "Lorg/lwjgl/openal/AL11;->nalBuffer3f()V",
        "Lorg/lwjgl/openal/AL11;->nalBuffer3i()V",
        "Lorg/lwjgl/openal/AL11;->nalGetListeneriv()V",
        "Lorg/lwjgl/openal/AL11;->nalBufferi()V",
        "Lorg/lwjgl/openal/AL11;->nalBufferfv()V",
        "Lorg/lwjgl/openal/AL11;->nalSpeedOfSound()V"
    ],
    "Lorg/lwjgl/openal/EFXUtil;": [
        "Lorg/lwjgl/openal/EFXUtil;->testSupportGeneric()Z",
        "Lorg/lwjgl/openal/EFXUtil;->isEfxSupported()Z"
    ],
    "Lorg/lwjgl/openal/AL;": [
        "Lorg/lwjgl/openal/AL;->nCreateDefault()V",
        "Lorg/lwjgl/openal/AL;->nCreate()V",
        "Lorg/lwjgl/openal/AL;->resetNativeStubs()V",
        "Lorg/lwjgl/openal/AL;->nDestroy()V",
        "Lorg/lwjgl/openal/AL;->destroy()V",
        "Lorg/lwjgl/openal/AL;->isCreated()Z",
        "Lorg/lwjgl/openal/AL;->create()V",
        "Lorg/lwjgl/openal/AL;->getDevice()Lorg/lwjgl/openal/ALCdevice;"
    ],
    "Lorg/lwjgl/openal/ALC10;": [
        "Lorg/lwjgl/openal/ALC10;->alcGetError()I",
        "Lorg/lwjgl/openal/ALC10;->nalcOpenDevice()J",
        "Lorg/lwjgl/openal/ALC10;->alcCloseDevice()Z",
        "Lorg/lwjgl/openal/ALC10;->alcGetString()Ljava/lang/String;",
        "Lorg/lwjgl/openal/ALC10;->nalcSuspendContext()V",
        "Lorg/lwjgl/openal/ALC10;->alcCreateContext()Lorg/lwjgl/openal/ALCcontext;",
        "Lorg/lwjgl/openal/ALC10;->nalcCreateContext()J",
        "Lorg/lwjgl/openal/ALC10;->alcMakeContextCurrent()I",
        "Lorg/lwjgl/openal/ALC10;->nalcGetError()I",
        "Lorg/lwjgl/openal/ALC10;->nalcGetCurrentContext()J",
        "Lorg/lwjgl/openal/ALC10;->getDevice()J",
        "Lorg/lwjgl/openal/ALC10;->alcOpenDevice()Lorg/lwjgl/openal/ALCdevice;",
        "Lorg/lwjgl/openal/ALC10;->nalcGetContextsDevice()J",
        "Lorg/lwjgl/openal/ALC10;->nalcIsExtensionPresent()Z",
        "Lorg/lwjgl/openal/ALC10;->nalcMakeContextCurrent()I",
        "Lorg/lwjgl/openal/ALC10;->alcGetContextsDevice()Lorg/lwjgl/openal/ALCdevice;",
        "Lorg/lwjgl/openal/ALC10;->nalcProcessContext()V",
        "Lorg/lwjgl/openal/ALC10;->nalcCloseDevice()Z",
        "Lorg/lwjgl/openal/ALC10;->nalcGetString()Ljava/lang/String;",
        "Lorg/lwjgl/openal/ALC10;->alcIsExtensionPresent()Z",
        "Lorg/lwjgl/openal/ALC10;->getContext()J",
        "Lorg/lwjgl/openal/ALC10;->nalcGetEnumValue()I",
        "Lorg/lwjgl/openal/ALC10;->nalcGetIntegerv()V",
        "Lorg/lwjgl/openal/ALC10;->alcGetInteger()V",
        "Lorg/lwjgl/openal/ALC10;->nalcDestroyContext()V",
        "Lorg/lwjgl/openal/ALC10;->alcDestroyContext()V"
    ],
    "Lorg/lwjgl/openal/AL10;": [
        "Lorg/lwjgl/openal/AL10;->nalBufferData()V",
        "Lorg/lwjgl/openal/AL10;->nalSourcei()V",
        "Lorg/lwjgl/openal/AL10;->alSourcef()V",
        "Lorg/lwjgl/openal/AL10;->nalDopplerFactor()V",
        "Lorg/lwjgl/openal/AL10;->nalGetIntegerv()V",
        "Lorg/lwjgl/openal/AL10;->nalGetSourcef()F",
        "Lorg/lwjgl/openal/AL10;->nalSourcePlayv()V",
        "Lorg/lwjgl/openal/AL10;->alSourcei()V",
        "Lorg/lwjgl/openal/AL10;->nalIsBuffer()Z",
        "Lorg/lwjgl/openal/AL10;->nalGetDouble()D",
        "Lorg/lwjgl/openal/AL10;->nalDeleteSources()V",
        "Lorg/lwjgl/openal/AL10;->alDeleteBuffers()V",
        "Lorg/lwjgl/openal/AL10;->nalGetEnumValue()I",
        "Lorg/lwjgl/openal/AL10;->alSourcePlay()V",
        "Lorg/lwjgl/openal/AL10;->alSourcePause()V",
        "Lorg/lwjgl/openal/AL10;->nalListenerf()V",
        "Lorg/lwjgl/openal/AL10;->nalGetListenerfv()V",
        "Lorg/lwjgl/openal/AL10;->nalDeleteBuffers()V",
        "Lorg/lwjgl/openal/AL10;->alBufferData()V",
        "Lorg/lwjgl/openal/AL10;->alSourceUnqueueBuffers()I",
        "Lorg/lwjgl/openal/AL10;->nalSourceQueueBuffers2()V",
        "Lorg/lwjgl/openal/AL10;->nalGenSources2()I",
        "Lorg/lwjgl/openal/AL10;->nalSourceUnqueueBuffers2()I",
        "Lorg/lwjgl/openal/AL10;->alSourceQueueBuffers()V",
        "Lorg/lwjgl/openal/AL10;->nalGenBuffers()V",
        "Lorg/lwjgl/openal/AL10;->nalDisable()V",
        "Lorg/lwjgl/openal/AL10;->nalSourceUnqueueBuffers()V",
        "Lorg/lwjgl/openal/AL10;->nalGenBuffers2()I",
        "Lorg/lwjgl/openal/AL10;->nalGetError()I",
        "Lorg/lwjgl/openal/AL10;->nalGetListenerf()F",
        "Lorg/lwjgl/openal/AL10;->nalDeleteBuffers2()V",
        "Lorg/lwjgl/openal/AL10;->nalGenSources()V",
        "Lorg/lwjgl/openal/AL10;->nalGetBufferf()F",
        "Lorg/lwjgl/openal/AL10;->nalGetListeneri()I",
        "Lorg/lwjgl/openal/AL10;->nalListenerfv()V",
        "Lorg/lwjgl/openal/AL10;->nalListeneri()V",
        "Lorg/lwjgl/openal/AL10;->nalGetBufferi()I",
        "Lorg/lwjgl/openal/AL10;->nalGetSourcefv()V",
        "Lorg/lwjgl/openal/AL10;->nalSource3f()V",
        "Lorg/lwjgl/openal/AL10;->nalGetInteger()I",
        "Lorg/lwjgl/openal/AL10;->nalSourceStopv()V",
        "Lorg/lwjgl/openal/AL10;->nalSourcef()V",
        "Lorg/lwjgl/openal/AL10;->alGenSources()I",
        "Lorg/lwjgl/openal/AL10;->alSource3f()V",
        "Lorg/lwjgl/openal/AL10;->nalIsEnabled()Z",
        "Lorg/lwjgl/openal/AL10;->nalSourcePausev()V",
        "Lorg/lwjgl/openal/AL10;->nalSourcePause()V",
        "Lorg/lwjgl/openal/AL10;->alGenBuffers()V",
        "Lorg/lwjgl/openal/AL10;->alGetError()I",
        "Lorg/lwjgl/openal/AL10;->nalSourceQueueBuffers()V",
        "Lorg/lwjgl/openal/AL10;->alGetSourcei()I",
        "Lorg/lwjgl/openal/AL10;->nalGetBoolean()Z",
        "Lorg/lwjgl/openal/AL10;->nalDistanceModel()V",
        "Lorg/lwjgl/openal/AL10;->nalGetFloat()F",
        "Lorg/lwjgl/openal/AL10;->nalDopplerVelocity()V",
        "Lorg/lwjgl/openal/AL10;->nalGetFloatv()V",
        "Lorg/lwjgl/openal/AL10;->nalGetDoublev()V",
        "Lorg/lwjgl/openal/AL10;->nalIsExtensionPresent()Z",
        "Lorg/lwjgl/openal/AL10;->nalListener3f()V",
        "Lorg/lwjgl/openal/AL10;->nalSourceRewind()V",
        "Lorg/lwjgl/openal/AL10;->nalSourceRewindv()V",
        "Lorg/lwjgl/openal/AL10;->alGetSourcef()F",
        "Lorg/lwjgl/openal/AL10;->alListener()V",
        "Lorg/lwjgl/openal/AL10;->alSourceStop()V",
        "Lorg/lwjgl/openal/AL10;->nalGetSourcei()I",
        "Lorg/lwjgl/openal/AL10;->nalSourcefv()V",
        "Lorg/lwjgl/openal/AL10;->alDeleteSources()V",
        "Lorg/lwjgl/openal/AL10;->nalEnable()V",
        "Lorg/lwjgl/openal/AL10;->alGenBuffers()I",
        "Lorg/lwjgl/openal/AL10;->nalDeleteSources2()V",
        "Lorg/lwjgl/openal/AL10;->nalIsSource()Z",
        "Lorg/lwjgl/openal/AL10;->nalGetString()Ljava/lang/String;",
        "Lorg/lwjgl/openal/AL10;->alGetString()Ljava/lang/String;",
        "Lorg/lwjgl/openal/AL10;->nalSourceStop()V",
        "Lorg/lwjgl/openal/AL10;->nalSourcePlay()V"
    ],
    "Lorg/lwjgl/openal/OpenALException;": [
        "Lorg/lwjgl/openal/OpenALException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/openal/EFX10;": [
        "Lorg/lwjgl/openal/EFX10;->alDeleteFilters()V",
        "Lorg/lwjgl/openal/EFX10;->nalEffectf()V",
        "Lorg/lwjgl/openal/EFX10;->nalGenFilters()V",
        "Lorg/lwjgl/openal/EFX10;->nalDeleteAuxiliaryEffectSlots2()V",
        "Lorg/lwjgl/openal/EFX10;->nalEffecti()V",
        "Lorg/lwjgl/openal/EFX10;->nalGenAuxiliaryEffectSlots()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetFilteri()I",
        "Lorg/lwjgl/openal/EFX10;->nalGetAuxiliaryEffectSlotfv()V",
        "Lorg/lwjgl/openal/EFX10;->nalAuxiliaryEffectSlotfv()V",
        "Lorg/lwjgl/openal/EFX10;->nalDeleteEffects2()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetFilterfv()V",
        "Lorg/lwjgl/openal/EFX10;->nalAuxiliaryEffectSloti()V",
        "Lorg/lwjgl/openal/EFX10;->alEffecti()V",
        "Lorg/lwjgl/openal/EFX10;->nalGenEffects2()I",
        "Lorg/lwjgl/openal/EFX10;->nalDeleteAuxiliaryEffectSlots()V",
        "Lorg/lwjgl/openal/EFX10;->nalGenAuxiliaryEffectSlots2()I",
        "Lorg/lwjgl/openal/EFX10;->nalFilterfv()V",
        "Lorg/lwjgl/openal/EFX10;->nalIsAuxiliaryEffectSlot()Z",
        "Lorg/lwjgl/openal/EFX10;->nalAuxiliaryEffectSlotf()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetAuxiliaryEffectSloti()I",
        "Lorg/lwjgl/openal/EFX10;->nalFilteriv()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetFilterf()F",
        "Lorg/lwjgl/openal/EFX10;->nalGetEffectf()F",
        "Lorg/lwjgl/openal/EFX10;->nalIsFilter()Z",
        "Lorg/lwjgl/openal/EFX10;->nalGetFilteriv()V",
        "Lorg/lwjgl/openal/EFX10;->nalDeleteFilters()V",
        "Lorg/lwjgl/openal/EFX10;->nalAuxiliaryEffectSlotiv()V",
        "Lorg/lwjgl/openal/EFX10;->nalGenEffects()V",
        "Lorg/lwjgl/openal/EFX10;->alGenEffects()I",
        "Lorg/lwjgl/openal/EFX10;->nalIsEffect()Z",
        "Lorg/lwjgl/openal/EFX10;->nalFilterf()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetEffectiv()V",
        "Lorg/lwjgl/openal/EFX10;->alFilteri()V",
        "Lorg/lwjgl/openal/EFX10;->alDeleteEffects()V",
        "Lorg/lwjgl/openal/EFX10;->alGenFilters()I",
        "Lorg/lwjgl/openal/EFX10;->nalEffectfv()V",
        "Lorg/lwjgl/openal/EFX10;->nalDeleteFilters2()V",
        "Lorg/lwjgl/openal/EFX10;->nalFilteri()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetEffectfv()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetEffecti()I",
        "Lorg/lwjgl/openal/EFX10;->nalGenFilters2()I",
        "Lorg/lwjgl/openal/EFX10;->nalGetAuxiliaryEffectSlotf()F",
        "Lorg/lwjgl/openal/EFX10;->nalDeleteEffects()V",
        "Lorg/lwjgl/openal/EFX10;->nalEffectiv()V",
        "Lorg/lwjgl/openal/EFX10;->nalGetAuxiliaryEffectSlotiv()V"
    ],
    "Lorg/lwjgl/LWJGLException;": [
        "Lorg/lwjgl/LWJGLException;->printStackTrace()V",
        "Lorg/lwjgl/LWJGLException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/openal/ALCcontext;": [
        "Lorg/lwjgl/openal/ALCcontext;->setInvalid()V",
        "Lorg/lwjgl/openal/ALCcontext;->isValid()Z",
        "Lorg/lwjgl/openal/ALCcontext;->createAttributeList()Ljava/nio/IntBuffer;"
    ],
    "Lorg/lwjgl/openal/ALCdevice;": [
        "Lorg/lwjgl/openal/ALCdevice;->removeContext()V",
        "Lorg/lwjgl/openal/ALCdevice;->setInvalid()V",
        "Lorg/lwjgl/openal/ALCdevice;->addContext()V",
        "Lorg/lwjgl/openal/ALCdevice;->isValid()Z"
    ],
    "Lorg/lwjgl/openal/Util;": [
        "Lorg/lwjgl/openal/Util;->checkALCValidDevice()V",
        "Lorg/lwjgl/openal/Util;->checkALCValidContext()V",
        "Lorg/lwjgl/openal/Util;->checkALCError()V"
    ],
    "Lorg/lwjgl/openal/ALC11;": [
        "Lorg/lwjgl/openal/ALC11;->nalcCaptureStop()V",
        "Lorg/lwjgl/openal/ALC11;->nalcCaptureStart()V",
        "Lorg/lwjgl/openal/ALC11;->nalcCaptureSamples()V",
        "Lorg/lwjgl/openal/ALC11;->nalcCaptureCloseDevice()Z",
        "Lorg/lwjgl/openal/ALC11;->nalcCaptureOpenDevice()J"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->isEmpty()Z",
        "Ljava/util/Collection;->size()I",
        "Ljava/util/Collection;->iterator()Ljava/util/Iterator;"
    ],
    "Lorg/lwjgl/opengl/LinuxPeerInfo;": [
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->lockAndGetHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->nGetDisplay()J",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->createHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->nGetDrawable()J",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->unlock()V",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->getDrawable()J",
        "Lorg/lwjgl/opengl/LinuxPeerInfo;->destroy()V"
    ],
    "Lorg/lwjgl/opengl/ContextGL;": [
        "Lorg/lwjgl/opengl/ContextGL;->checkAccess()V",
        "Lorg/lwjgl/opengl/ContextGL;->isCurrent()Z",
        "Lorg/lwjgl/opengl/ContextGL;->forceDestroy()V",
        "Lorg/lwjgl/opengl/ContextGL;->destroy()V",
        "Lorg/lwjgl/opengl/ContextGL;->swapBuffers()V",
        "Lorg/lwjgl/opengl/ContextGL;->releaseCurrent()V",
        "Lorg/lwjgl/opengl/ContextGL;->getPeerInfo()Lorg/lwjgl/opengl/PeerInfo;",
        "Lorg/lwjgl/opengl/ContextGL;->checkDestroy()V",
        "Lorg/lwjgl/opengl/ContextGL;->getContextAttribs()Lorg/lwjgl/opengl/ContextAttribs;",
        "Lorg/lwjgl/opengl/ContextGL;->createImplementation()Lorg/lwjgl/opengl/ContextImplementation;",
        "Lorg/lwjgl/opengl/ContextGL;->canAccess()Z",
        "Lorg/lwjgl/opengl/ContextGL;->makeCurrent()V",
        "Lorg/lwjgl/opengl/ContextGL;->releaseDrawable()V",
        "Lorg/lwjgl/opengl/ContextGL;->setCLSharingProperties()V",
        "Lorg/lwjgl/opengl/ContextGL;->update()V",
        "Lorg/lwjgl/opengl/ContextGL;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/ContextGL;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/ContextGL;->getCurrentContext()Lorg/lwjgl/opengl/ContextGL;"
    ],
    "Lorg/lwjgl/opengl/GLContext;": [
        "Lorg/lwjgl/opengl/GLContext;->nUnloadOpenGLLibrary()V",
        "Lorg/lwjgl/opengl/GLContext;->getFunctionAddress()J",
        "Lorg/lwjgl/opengl/GLContext;->setCapabilities()V",
        "Lorg/lwjgl/opengl/GLContext;->getCapabilities()Lorg/lwjgl/opengl/ContextCapabilities;",
        "Lorg/lwjgl/opengl/GLContext;->getThreadLocalCapabilities()Lorg/lwjgl/opengl/ContextCapabilities;",
        "Lorg/lwjgl/opengl/GLContext;->unloadOpenGLLibrary()V",
        "Lorg/lwjgl/opengl/GLContext;->getPlatformSpecificFunctionAddress()J",
        "Lorg/lwjgl/opengl/GLContext;->useContext()V",
        "Lorg/lwjgl/opengl/GLContext;->getSupportedExtensions()I",
        "Lorg/lwjgl/opengl/GLContext;->nLoadOpenGLLibrary()V",
        "Lorg/lwjgl/opengl/GLContext;->loadOpenGLLibrary()V",
        "Lorg/lwjgl/opengl/GLContext;->ngetFunctionAddress()J",
        "Lorg/lwjgl/opengl/GLContext;->resetNativeStubs()V"
    ],
    "Lorg/lwjgl/opengl/ContextAttribs;": [
        "Lorg/lwjgl/opengl/ContextAttribs;->isForwardCompatible()Z",
        "Lorg/lwjgl/opengl/ContextAttribs;->getMajorVersion()I",
        "Lorg/lwjgl/opengl/ContextAttribs;->isProfileCore()Z",
        "Lorg/lwjgl/opengl/ContextAttribs;->getMinorVersion()I",
        "Lorg/lwjgl/opengl/ContextAttribs;->getAttribList()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/opengl/ContextAttribs;->getImplementation()Lorg/lwjgl/opengl/ContextAttribsImplementation;"
    ],
    "Lorg/lwjgl/opengl/ContextImplementation;": [
        "Lorg/lwjgl/opengl/ContextImplementation;->releaseCurrentContext()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->isCurrent()Z",
        "Lorg/lwjgl/opengl/ContextImplementation;->makeCurrent()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->releaseDrawable()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->swapBuffers()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->destroy()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->update()V",
        "Lorg/lwjgl/opengl/ContextImplementation;->create()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengl/CallbackUtil;": [
        "Lorg/lwjgl/opengl/CallbackUtil;->createGlobalRef()J",
        "Lorg/lwjgl/opengl/CallbackUtil;->registerContextCallbackAMD()V",
        "Lorg/lwjgl/opengl/CallbackUtil;->ncreateGlobalRef()J",
        "Lorg/lwjgl/opengl/CallbackUtil;->deleteGlobalRef()V",
        "Lorg/lwjgl/opengl/CallbackUtil;->registerContextCallbackARB()V",
        "Lorg/lwjgl/opengl/CallbackUtil;->registerContextCallback()V",
        "Lorg/lwjgl/opengl/CallbackUtil;->unregisterCallbacks()V"
    ],
    "Lorg/lwjgl/opengl/PeerInfo;": [
        "Lorg/lwjgl/opengl/PeerInfo;->lockAndGetHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/PeerInfo;->unlock()V",
        "Lorg/lwjgl/opengl/PeerInfo;->destroy()V",
        "Lorg/lwjgl/opengl/PeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/PeerInfo;->doLockAndInitHandle()V",
        "Lorg/lwjgl/opengl/PeerInfo;->doUnlock()V"
    ],
    "Lorg/lwjgl/opengl/WindowsContextImplementation;": [
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nReleaseCurrentContext()V",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nSetSwapInterval()Z",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nIsCurrent()Z",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nMakeCurrent()V",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->getHGLRC()J",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nDestroy()V",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nCreate()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->nSwapBuffers()V",
        "Lorg/lwjgl/opengl/WindowsContextImplementation;->getHDC()J"
    ],
    "Lorg/lwjgl/opengl/LinuxContextImplementation;": [
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nDestroy()V",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nIsCurrent()Z",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nCreate()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nSwapBuffers()V",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nMakeCurrent()V",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nSetSwapInterval()V",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->getDisplay()J",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->getGLXContext()J",
        "Lorg/lwjgl/opengl/LinuxContextImplementation;->nReleaseCurrentContext()V"
    ],
    "Lorg/lwjgl/opengl/MacOSXContextImplementation;": [
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->clearDrawable()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nReleaseCurrentContext()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->resetView()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nDestroy()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->getCGLShareGroup()J",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nIsCurrent()Z",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nUpdate()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->setView()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nMakeCurrent()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nSwapBuffers()V",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nCreate()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/MacOSXContextImplementation;->nSetSwapInterval()V"
    ],
    "Lorg/lwjgl/opengl/EXTDepthBoundsTest;": [
        "Lorg/lwjgl/opengl/EXTDepthBoundsTest;->nglDepthBoundsEXT()V"
    ],
    "Lorg/lwjgl/opengl/GL30;": [
        "Lorg/lwjgl/opengl/GL30;->nglFramebufferTextureLayer()V",
        "Lorg/lwjgl/opengl/GL30;->nglClearBufferfi()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetTexParameterIiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglCheckFramebufferStatus()I",
        "Lorg/lwjgl/opengl/GL30;->nglBindBufferBase()V",
        "Lorg/lwjgl/opengl/GL30;->glDeleteFramebuffers()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetRenderbufferParameteriv()V",
        "Lorg/lwjgl/opengl/GL30;->nglEndConditionalRender()V",
        "Lorg/lwjgl/opengl/GL30;->glDeleteRenderbuffers()V",
        "Lorg/lwjgl/opengl/GL30;->glGetRenderbufferParameter()I",
        "Lorg/lwjgl/opengl/GL30;->glIsFramebuffer()Z",
        "Lorg/lwjgl/opengl/GL30;->nglBindVertexArray()V",
        "Lorg/lwjgl/opengl/GL30;->nglBeginTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL30;->nglDeleteRenderbuffers()V",
        "Lorg/lwjgl/opengl/GL30;->nglBindFramebuffer()V",
        "Lorg/lwjgl/opengl/GL30;->glIsRenderbuffer()Z",
        "Lorg/lwjgl/opengl/GL30;->nglClampColor()V",
        "Lorg/lwjgl/opengl/GL30;->nglGenRenderbuffers()V",
        "Lorg/lwjgl/opengl/GL30;->nglEnablei()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetBooleani_v()V",
        "Lorg/lwjgl/opengl/GL30;->glDeleteVertexArrays()V",
        "Lorg/lwjgl/opengl/GL30;->nglClearBufferiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribIPointer()V",
        "Lorg/lwjgl/opengl/GL30;->glGetRenderbufferParameter()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribIPointerBO()V",
        "Lorg/lwjgl/opengl/GL30;->glFlushMappedBufferRange()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI2ui()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4ui()V",
        "Lorg/lwjgl/opengl/GL30;->glFramebufferTexture2D()V",
        "Lorg/lwjgl/opengl/GL30;->nglIsRenderbuffer()Z",
        "Lorg/lwjgl/opengl/GL30;->nglClearBufferuiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4usv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI2i()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI1iv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4iv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI3i()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4sv()V",
        "Lorg/lwjgl/opengl/GL30;->nglBeginConditionalRender()V",
        "Lorg/lwjgl/opengl/GL30;->glGetInteger()V",
        "Lorg/lwjgl/opengl/GL30;->nglGenVertexArrays()V",
        "Lorg/lwjgl/opengl/GL30;->glGetFramebufferAttachmentParameter()I",
        "Lorg/lwjgl/opengl/GL30;->nglGetStringi()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL30;->nglUniform1ui()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetVertexAttribIuiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglClearBufferfv()V",
        "Lorg/lwjgl/opengl/GL30;->nglBindBufferRange()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI1uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4i()V",
        "Lorg/lwjgl/opengl/GL30;->glBindRenderbuffer()V",
        "Lorg/lwjgl/opengl/GL30;->nglUniform1uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglIsFramebuffer()Z",
        "Lorg/lwjgl/opengl/GL30;->nglFramebufferTexture2D()V",
        "Lorg/lwjgl/opengl/GL30;->glGenerateMipmap()V",
        "Lorg/lwjgl/opengl/GL30;->glBindVertexArray()V",
        "Lorg/lwjgl/opengl/GL30;->nglFramebufferRenderbuffer()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI2uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglRenderbufferStorageMultisample()V",
        "Lorg/lwjgl/opengl/GL30;->glFramebufferTexture3D()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglUniform3ui()V",
        "Lorg/lwjgl/opengl/GL30;->nglDeleteFramebuffers()V",
        "Lorg/lwjgl/opengl/GL30;->glCheckFramebufferStatus()I",
        "Lorg/lwjgl/opengl/GL30;->nglUniform2uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetTransformFeedbackVarying()V",
        "Lorg/lwjgl/opengl/GL30;->glBindFramebuffer()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetFragDataLocation()I",
        "Lorg/lwjgl/opengl/GL30;->nglRenderbufferStorage()V",
        "Lorg/lwjgl/opengl/GL30;->nglColorMaski()V",
        "Lorg/lwjgl/opengl/GL30;->nglUniform4ui()V",
        "Lorg/lwjgl/opengl/GL30;->glFramebufferTextureLayer()V",
        "Lorg/lwjgl/opengl/GL30;->glGenFramebuffers()I",
        "Lorg/lwjgl/opengl/GL30;->glIsVertexArray()Z",
        "Lorg/lwjgl/opengl/GL30;->nglFramebufferTexture3D()V",
        "Lorg/lwjgl/opengl/GL30;->glGetFramebufferAttachmentParameter()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI3ui()V",
        "Lorg/lwjgl/opengl/GL30;->glMapBufferRange()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4bv()V",
        "Lorg/lwjgl/opengl/GL30;->nglDeleteVertexArrays()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI3uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglBindRenderbuffer()V",
        "Lorg/lwjgl/opengl/GL30;->glGetStringi()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI4ubv()V",
        "Lorg/lwjgl/opengl/GL30;->glRenderbufferStorageMultisample()V",
        "Lorg/lwjgl/opengl/GL30;->nglUniform2ui()V",
        "Lorg/lwjgl/opengl/GL30;->nglTexParameterIuiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetIntegeri_v()V",
        "Lorg/lwjgl/opengl/GL30;->nglTexParameterIiv()V",
        "Lorg/lwjgl/opengl/GL30;->glGenVertexArrays()I",
        "Lorg/lwjgl/opengl/GL30;->nglFlushMappedBufferRange()V",
        "Lorg/lwjgl/opengl/GL30;->glGenFramebuffers()V",
        "Lorg/lwjgl/opengl/GL30;->nglBlitFramebuffer()V",
        "Lorg/lwjgl/opengl/GL30;->nglBindFragDataLocation()V",
        "Lorg/lwjgl/opengl/GL30;->nglEndTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL30;->glGenRenderbuffers()V",
        "Lorg/lwjgl/opengl/GL30;->glBindBufferRange()V",
        "Lorg/lwjgl/opengl/GL30;->glFramebufferTexture1D()V",
        "Lorg/lwjgl/opengl/GL30;->nglGenFramebuffers()V",
        "Lorg/lwjgl/opengl/GL30;->nglGenerateMipmap()V",
        "Lorg/lwjgl/opengl/GL30;->glFramebufferRenderbuffer()V",
        "Lorg/lwjgl/opengl/GL30;->glBlitFramebuffer()V",
        "Lorg/lwjgl/opengl/GL30;->nglMapBufferRange()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/GL30;->nglTransformFeedbackVaryings()V",
        "Lorg/lwjgl/opengl/GL30;->nglUniform4uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglFramebufferTexture1D()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetUniformuiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetFramebufferAttachmentParameteriv()V",
        "Lorg/lwjgl/opengl/GL30;->nglUniform3uiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglDisablei()V",
        "Lorg/lwjgl/opengl/GL30;->nglIsEnabledi()Z",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI1i()V",
        "Lorg/lwjgl/opengl/GL30;->nglIsVertexArray()Z",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI1ui()V",
        "Lorg/lwjgl/opengl/GL30;->glBindBufferBase()V",
        "Lorg/lwjgl/opengl/GL30;->nglGetTexParameterIuiv()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI2iv()V",
        "Lorg/lwjgl/opengl/GL30;->glRenderbufferStorage()V",
        "Lorg/lwjgl/opengl/GL30;->nglVertexAttribI3iv()V",
        "Lorg/lwjgl/opengl/GL30;->glGenVertexArrays()V",
        "Lorg/lwjgl/opengl/GL30;->glGenRenderbuffers()I",
        "Lorg/lwjgl/opengl/GL30;->nglGetVertexAttribIiv()V",
        "Lorg/lwjgl/opengl/GL30;->glGetInteger()I"
    ],
    "Lorg/lwjgl/opengl/APIUtil;": [
        "Lorg/lwjgl/opengl/APIUtil;->getBufferByte()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getString()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/APIUtil;->getBuffer()J",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferNT()J",
        "Lorg/lwjgl/opengl/APIUtil;->getLengths()J",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferDouble()Ljava/nio/DoubleBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getLengths()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferByte0()J",
        "Lorg/lwjgl/opengl/APIUtil;->getInt()J",
        "Lorg/lwjgl/opengl/APIUtil;->encode()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferByteOffset()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getTotalLength()I",
        "Lorg/lwjgl/opengl/APIUtil;->getArray()[C",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferInt()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferLong()Ljava/nio/LongBuffer;",
        "Lorg/lwjgl/opengl/APIUtil;->getBufferFloat()Ljava/nio/FloatBuffer;"
    ],
    "Lorg/lwjgl/opengl/StateTracker;": [
        "Lorg/lwjgl/opengl/StateTracker;->getReferences()Lorg/lwjgl/opengl/References;",
        "Lorg/lwjgl/opengl/StateTracker;->doPopAttrib()V",
        "Lorg/lwjgl/opengl/StateTracker;->deleteVAO()V",
        "Lorg/lwjgl/opengl/StateTracker;->bindBuffer()V",
        "Lorg/lwjgl/opengl/StateTracker;->bindVAO()V",
        "Lorg/lwjgl/opengl/StateTracker;->doPushAttrib()V",
        "Lorg/lwjgl/opengl/StateTracker;->pushAttrib()V",
        "Lorg/lwjgl/opengl/StateTracker;->popAttrib()V",
        "Lorg/lwjgl/opengl/StateTracker;->getElementArrayBufferBound()I"
    ],
    "Lorg/lwjgl/opengl/GLChecks;": [
        "Lorg/lwjgl/opengl/GLChecks;->calculatePathGenCoeffsPerComponent()I",
        "Lorg/lwjgl/opengl/GLChecks;->calculateBytesPerPixel()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureIndirectBOdisabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->calculateTexImage1DStorage()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureUnpackPBOenabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->calculateTexImage2DStorage()I",
        "Lorg/lwjgl/opengl/GLChecks;->calculateTransformPathValues()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureUnpackPBOdisabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->calculatePathColorGenCoeffsCount()I",
        "Lorg/lwjgl/opengl/GLChecks;->getBufferObjectSizeARB()I",
        "Lorg/lwjgl/opengl/GLChecks;->calculateMetricsSize()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensurePackPBOdisabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->calculateTexImage3DStorage()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureArrayVBOenabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->calculateBytesPerCharCode()I",
        "Lorg/lwjgl/opengl/GLChecks;->calculateImageStorage()I",
        "Lorg/lwjgl/opengl/GLChecks;->calculateBytesPerPathName()I",
        "Lorg/lwjgl/opengl/GLChecks;->getBufferObjectSizeATI()I",
        "Lorg/lwjgl/opengl/GLChecks;->calculatePathTextGenCoeffsPerComponent()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureArrayVBOdisabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->getNamedBufferObjectSize()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureIndirectBOenabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->ensureElementVBOdisabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->getBufferObjectSize()I",
        "Lorg/lwjgl/opengl/GLChecks;->ensureElementVBOenabled()V",
        "Lorg/lwjgl/opengl/GLChecks;->ensurePackPBOenabled()V"
    ],
    "Lorg/lwjgl/opengl/NVPrimitiveRestart;": [
        "Lorg/lwjgl/opengl/NVPrimitiveRestart;->nglPrimitiveRestartIndexNV()V",
        "Lorg/lwjgl/opengl/NVPrimitiveRestart;->nglPrimitiveRestartNV()V"
    ],
    "Lorg/lwjgl/opengl/GL42;": [
        "Lorg/lwjgl/opengl/GL42;->nglDrawElementsInstancedBaseVertexBaseInstance()V",
        "Lorg/lwjgl/opengl/GL42;->glGetActiveAtomicCounterBuffer()I",
        "Lorg/lwjgl/opengl/GL42;->nglMemoryBarrier()V",
        "Lorg/lwjgl/opengl/GL42;->glGetInternalformat()I",
        "Lorg/lwjgl/opengl/GL42;->nglDrawTransformFeedbackInstanced()V",
        "Lorg/lwjgl/opengl/GL42;->glDrawTransformFeedbackStreamInstanced()V",
        "Lorg/lwjgl/opengl/GL42;->nglDrawArraysInstancedBaseInstance()V",
        "Lorg/lwjgl/opengl/GL42;->nglDrawElementsInstancedBaseInstance()V",
        "Lorg/lwjgl/opengl/GL42;->glBindImageTexture()V",
        "Lorg/lwjgl/opengl/GL42;->glTexStorage3D()V",
        "Lorg/lwjgl/opengl/GL42;->glGetActiveAtomicCounterBuffer()V",
        "Lorg/lwjgl/opengl/GL42;->glTexStorage2D()V",
        "Lorg/lwjgl/opengl/GL42;->nglGetActiveAtomicCounterBufferiv()V",
        "Lorg/lwjgl/opengl/GL42;->nglDrawTransformFeedbackStreamInstanced()V",
        "Lorg/lwjgl/opengl/GL42;->glMemoryBarrier()V",
        "Lorg/lwjgl/opengl/GL42;->nglTexStorage2D()V",
        "Lorg/lwjgl/opengl/GL42;->glGetInternalformat()V",
        "Lorg/lwjgl/opengl/GL42;->nglDrawElementsInstancedBaseInstanceBO()V",
        "Lorg/lwjgl/opengl/GL42;->nglTexStorage3D()V",
        "Lorg/lwjgl/opengl/GL42;->nglBindImageTexture()V",
        "Lorg/lwjgl/opengl/GL42;->glTexStorage1D()V",
        "Lorg/lwjgl/opengl/GL42;->nglTexStorage1D()V",
        "Lorg/lwjgl/opengl/GL42;->glDrawTransformFeedbackInstanced()V",
        "Lorg/lwjgl/opengl/GL42;->glDrawArraysInstancedBaseInstance()V",
        "Lorg/lwjgl/opengl/GL42;->glDrawElementsInstancedBaseInstance()V",
        "Lorg/lwjgl/opengl/GL42;->nglGetInternalformativ()V",
        "Lorg/lwjgl/opengl/GL42;->nglDrawElementsInstancedBaseVertexBaseInstanceBO()V",
        "Lorg/lwjgl/opengl/GL42;->glDrawElementsInstancedBaseVertexBaseInstance()V"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->matches()Z",
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;",
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;"
    ],
    "Lorg/lwjgl/opengl/XRandR;": [
        "Lorg/lwjgl/opengl/XRandR;->populate()V",
        "Lorg/lwjgl/opengl/XRandR;->parseScreen()V"
    ],
    "[Lorg/lwjgl/opengl/XRandR$Screen;": [
        "[Lorg/lwjgl/opengl/XRandR$Screen;->clone()Ljava/lang/Object;"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->remove()Z",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->isEmpty()Z",
        "Ljava/util/Set;->contains()Z",
        "Ljava/util/Set;->size()I",
        "Ljava/util/Set;->addAll()Z",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->toArray()[Ljava/lang/Object;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->groupCount()I",
        "Ljava/util/regex/Matcher;->matches()Z",
        "Ljava/util/regex/Matcher;->group()Ljava/lang/String;",
        "Ljava/util/regex/Matcher;->find()Z"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;",
        "Ljava/io/BufferedReader;->close()V"
    ],
    "Lorg/lwjgl/opengl/XRandR$Screen;": [
        "Lorg/lwjgl/opengl/XRandR$Screen;->access$000()V"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->toString()Ljava/lang/String;",
        "Ljava/io/IOException;->printStackTrace()V",
        "Ljava/io/IOException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/opengl/GL33;": [
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP1ui()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglSamplerParameterIiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexP3uiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->glSecondaryColorP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glSamplerParameterI()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP1ui()V",
        "Lorg/lwjgl/opengl/GL33;->glDeleteSamplers()V",
        "Lorg/lwjgl/opengl/GL33;->nglNormalP3uiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglSamplerParameterfv()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglBindFragDataLocationIndexed()V",
        "Lorg/lwjgl/opengl/GL33;->nglSamplerParameteri()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glColorP4u()V",
        "Lorg/lwjgl/opengl/GL33;->nglGenSamplers()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP1u()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetSamplerParameteriv()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP3uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameterIi()I",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP3u()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glSamplerParameterIu()V",
        "Lorg/lwjgl/opengl/GL33;->nglColorP4uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->glGetQueryObjectu()J",
        "Lorg/lwjgl/opengl/GL33;->glGetQueryObject()J",
        "Lorg/lwjgl/opengl/GL33;->glNormalP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetSamplerParameterfv()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP1ui()V",
        "Lorg/lwjgl/opengl/GL33;->glGenSamplers()I",
        "Lorg/lwjgl/opengl/GL33;->nglSecondaryColorP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP4uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP1ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribDivisor()V",
        "Lorg/lwjgl/opengl/GL33;->glColorP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglColorP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->glGenSamplers()V",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameteri()I",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP1uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexP2u()V",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP4u()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP1u()V",
        "Lorg/lwjgl/opengl/GL33;->nglSamplerParameteriv()V",
        "Lorg/lwjgl/opengl/GL33;->glGetFragDataIndex()I",
        "Lorg/lwjgl/opengl/GL33;->glIsSampler()Z",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameterIui()I",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP4uiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glColorP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglNormalP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexP3u()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP1uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glColorP3u()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexP2uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP1u()V",
        "Lorg/lwjgl/opengl/GL33;->nglColorP3uiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP2u()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetSamplerParameterIuiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetQueryObjecti64v()V",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameterf()F",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP4u()V",
        "Lorg/lwjgl/opengl/GL33;->glSecondaryColorP3u()V",
        "Lorg/lwjgl/opengl/GL33;->glTexCoordP2u()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP3u()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glGetQueryObject()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglIsSampler()Z",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP2uiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP4uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP3u()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP3uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP2u()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetFragDataIndex()I",
        "Lorg/lwjgl/opengl/GL33;->nglSamplerParameterf()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP2uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameterI()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP3uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glNormalP3u()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglSamplerParameterIuiv()V",
        "Lorg/lwjgl/opengl/GL33;->glSamplerParameteri()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetSamplerParameterIiv()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP4u()V",
        "Lorg/lwjgl/opengl/GL33;->nglMultiTexCoordP2uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glSamplerParameterf()V",
        "Lorg/lwjgl/opengl/GL33;->nglGetQueryObjectui64v()V",
        "Lorg/lwjgl/opengl/GL33;->nglQueryCounter()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexP4uiv()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->glSamplerParameter()V",
        "Lorg/lwjgl/opengl/GL33;->nglBindSampler()V",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameterIu()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->glBindFragDataLocationIndexed()V",
        "Lorg/lwjgl/opengl/GL33;->nglDeleteSamplers()V",
        "Lorg/lwjgl/opengl/GL33;->glGetQueryObjectu()V",
        "Lorg/lwjgl/opengl/GL33;->glGetSamplerParameter()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexP4u()V",
        "Lorg/lwjgl/opengl/GL33;->nglTexCoordP4ui()V",
        "Lorg/lwjgl/opengl/GL33;->glQueryCounter()V",
        "Lorg/lwjgl/opengl/GL33;->glBindSampler()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP1ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglColorP3ui()V",
        "Lorg/lwjgl/opengl/GL33;->glVertexAttribP2ui()V",
        "Lorg/lwjgl/opengl/GL33;->glMultiTexCoordP1ui()V",
        "Lorg/lwjgl/opengl/GL33;->nglVertexAttribP1uiv()V",
        "Lorg/lwjgl/opengl/GL33;->nglSecondaryColorP3uiv()V"
    ],
    "Lorg/lwjgl/opengl/EXTGpuShader4;": [
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI2uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform2uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI3ivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglGetFragDataLocationEXT()I",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4usvEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglGetVertexAttribIivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4ivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglGetVertexAttribIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform4uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribIPointerEXTBO()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI3iEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4ubvEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform1uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglGetUniformuivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform2uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI1ivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI3uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI2uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4svEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform3uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4iEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform3uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribIPointerEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI1iEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform1uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4bvEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI1uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglUniform4uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI1uivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI2ivEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI3uiEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI2iEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglBindFragDataLocationEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuShader4;->nglVertexAttribI4uiEXT()V"
    ],
    "Lorg/lwjgl/opengl/GL31;": [
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniformBlock()V",
        "Lorg/lwjgl/opengl/GL31;->nglCopyBufferSubData()V",
        "Lorg/lwjgl/opengl/GL31;->nglGetUniformBlockIndex()I",
        "Lorg/lwjgl/opengl/GL31;->nglPrimitiveRestartIndex()V",
        "Lorg/lwjgl/opengl/GL31;->glGetUniformBlockIndex()I",
        "Lorg/lwjgl/opengl/GL31;->nglGetActiveUniformBlockiv()V",
        "Lorg/lwjgl/opengl/GL31;->nglDrawElementsInstancedBO()V",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniformBlockName()V",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniformName()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL31;->nglDrawElementsInstanced()V",
        "Lorg/lwjgl/opengl/GL31;->nglGetActiveUniformName()V",
        "Lorg/lwjgl/opengl/GL31;->nglGetUniformIndices()V",
        "Lorg/lwjgl/opengl/GL31;->nglUniformBlockBinding()V",
        "Lorg/lwjgl/opengl/GL31;->nglDrawArraysInstanced()V",
        "Lorg/lwjgl/opengl/GL31;->glCopyBufferSubData()V",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniformName()V",
        "Lorg/lwjgl/opengl/GL31;->nglTexBuffer()V",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniformBlockName()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniforms()I",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniforms()V",
        "Lorg/lwjgl/opengl/GL31;->glGetActiveUniformBlock()I",
        "Lorg/lwjgl/opengl/GL31;->glUniformBlockBinding()V",
        "Lorg/lwjgl/opengl/GL31;->nglGetActiveUniformsiv()V",
        "Lorg/lwjgl/opengl/GL31;->glGetUniformIndices()V",
        "Lorg/lwjgl/opengl/GL31;->nglGetActiveUniformBlockName()V"
    ],
    "Lorg/lwjgl/opencl/CLContext;": [
        "Lorg/lwjgl/opencl/CLContext;->getCLEventRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLContext;->getCLMemRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLContext;->getReferenceCount()I",
        "Lorg/lwjgl/opencl/CLContext;->retain()I",
        "Lorg/lwjgl/opencl/CLContext;->release()I",
        "Lorg/lwjgl/opencl/CLContext;->getSupportedImageFormats()Ljava/util/List;",
        "Lorg/lwjgl/opencl/CLContext;->isValid()Z",
        "Lorg/lwjgl/opencl/CLContext;->getCLProgramRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLContext;->getCLCommandQueueRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLContext;->getCLSamplerRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLContext;->create()Lorg/lwjgl/opencl/CLContext;",
        "Lorg/lwjgl/opencl/CLContext;->getParent()Lorg/lwjgl/opencl/CLObject;",
        "Lorg/lwjgl/opencl/CLContext;->getCLProgram()Lorg/lwjgl/opencl/CLProgram;",
        "Lorg/lwjgl/opencl/CLContext;->getPointer()J"
    ],
    "Lorg/lwjgl/opencl/CLEvent;": [
        "Lorg/lwjgl/opencl/CLEvent;->getParent()Lorg/lwjgl/opencl/CLObject;",
        "Lorg/lwjgl/opencl/CLEvent;->getPointer()J",
        "Lorg/lwjgl/opencl/CLEvent;->isValid()Z",
        "Lorg/lwjgl/opencl/CLEvent;->release()I",
        "Lorg/lwjgl/opencl/CLEvent;->retain()I",
        "Lorg/lwjgl/opencl/CLEvent;->getParentRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;"
    ],
    "Lorg/lwjgl/opengl/ARBCLEvent;": [
        "Lorg/lwjgl/opengl/ARBCLEvent;->nglCreateSyncFromCLeventARB()J"
    ],
    "Lorg/lwjgl/opengl/EXTGeometryShader4;": [
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->glFramebufferTextureLayerEXT()V",
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->nglFramebufferTextureLayerEXT()V",
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->nglFramebufferTextureFaceEXT()V",
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->glFramebufferTextureFaceEXT()V",
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->glFramebufferTextureEXT()V",
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->nglFramebufferTextureEXT()V",
        "Lorg/lwjgl/opengl/EXTGeometryShader4;->nglProgramParameteriEXT()V"
    ],
    "Lorg/lwjgl/opengl/Pbuffer;": [
        "Lorg/lwjgl/opengl/Pbuffer;->createPbuffer()Lorg/lwjgl/opengl/PeerInfo;",
        "Lorg/lwjgl/opengl/Pbuffer;->checkDestroyed()V"
    ],
    "Lorg/lwjgl/opengl/DrawableLWJGL;": [
        "Lorg/lwjgl/opengl/DrawableLWJGL;->makeCurrent()V",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->destroy()V",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->createSharedContext()Lorg/lwjgl/opengl/Context;",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->getPixelFormat()Lorg/lwjgl/opengl/PixelFormatLWJGL;",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->getContext()Lorg/lwjgl/opengl/Context;",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->isCurrent()Z",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->swapBuffers()V",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->checkGLError()V",
        "Lorg/lwjgl/opengl/DrawableLWJGL;->releaseContext()V"
    ],
    "Lorg/lwjgl/opengl/DisplayImplementation;": [
        "Lorg/lwjgl/opengl/DisplayImplementation;->destroyWindow()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getPbufferCapabilities()I",
        "Lorg/lwjgl/opengl/DisplayImplementation;->setPbufferAttrib()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->setGammaRamp()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->isBufferLost()Z",
        "Lorg/lwjgl/opengl/DisplayImplementation;->setIcon()I",
        "Lorg/lwjgl/opengl/DisplayImplementation;->update()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->createPeerInfo()Lorg/lwjgl/opengl/PeerInfo;",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getGammaRampLength()I",
        "Lorg/lwjgl/opengl/DisplayImplementation;->setResizable()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->setTitle()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getAvailableDisplayModes()[Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/DisplayImplementation;->bindTexImageToPbuffer()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->isCloseRequested()Z",
        "Lorg/lwjgl/opengl/DisplayImplementation;->reshape()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->createPbuffer()Lorg/lwjgl/opengl/PeerInfo;",
        "Lorg/lwjgl/opengl/DisplayImplementation;->resetDisplayMode()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getVersion()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/DisplayImplementation;->isVisible()Z",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getAdapter()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/DisplayImplementation;->isDirty()Z",
        "Lorg/lwjgl/opengl/DisplayImplementation;->switchDisplayMode()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->isActive()Z",
        "Lorg/lwjgl/opengl/DisplayImplementation;->releaseTexImageFromPbuffer()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->wasResized()Z",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getWidth()I",
        "Lorg/lwjgl/opengl/DisplayImplementation;->createWindow()V",
        "Lorg/lwjgl/opengl/DisplayImplementation;->getHeight()I"
    ],
    "Lorg/lwjgl/opengl/DrawableGL;": [
        "Lorg/lwjgl/opengl/DrawableGL;->createSharedContext()Lorg/lwjgl/opengl/ContextGL;",
        "Lorg/lwjgl/opengl/DrawableGL;->makeCurrent()V",
        "Lorg/lwjgl/opengl/DrawableGL;->checkDestroyed()V",
        "Lorg/lwjgl/opengl/DrawableGL;->checkGLError()V",
        "Lorg/lwjgl/opengl/DrawableGL;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/DrawableGL;->setPixelFormat()V",
        "Lorg/lwjgl/opengl/DrawableGL;->getPixelFormat()Lorg/lwjgl/opengl/PixelFormatLWJGL;",
        "Lorg/lwjgl/opengl/DrawableGL;->destroy()V",
        "Lorg/lwjgl/opengl/DrawableGL;->getContext()Lorg/lwjgl/opengl/ContextGL;",
        "Lorg/lwjgl/opengl/DrawableGL;->swapBuffers()V",
        "Lorg/lwjgl/opengl/DrawableGL;->setCLSharingProperties()V",
        "Lorg/lwjgl/opengl/DrawableGL;->releaseContext()V",
        "Lorg/lwjgl/opengl/DrawableGL;->isCurrent()Z"
    ],
    "Lorg/lwjgl/opengl/WindowsDisplay;": [
        "Lorg/lwjgl/opengl/WindowsDisplay;->shouldGrab()Z",
        "Lorg/lwjgl/opengl/WindowsDisplay;->doDestroyCursor()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setupCursorClipping()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->createIcon()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->updateWidthAndHeight()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->handleKeyButton()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nSwitchDisplayMode()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nReleaseDC()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->handleMouseScrolled()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nSetCursorPosition()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setMinimized()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->adjustWindowRectEx()Z",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nCreateWindow()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->handleMouseButton()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getAdapter()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nSetGammaRamp()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->appActivate()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getCurrentGammaRamp()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nReshape()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->clipCursor()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->showWindow()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nSetTitle()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nGetPbufferCapabilities()I",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nCreateCursor()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getDC()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->clientToScreen()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setWindowLongPtr()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->freeSmallIcon()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->convertToNativeRamp()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setForegroundWindow()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->defWindowProc()I",
        "Lorg/lwjgl/opengl/WindowsDisplay;->handleMouseMoved()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->handleChar()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->restoreDisplayMode()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setWindowPos()Z",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getWindowLongPtr()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getClientRect()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setFocus()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nUpdate()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->freeLargeIcon()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->doSetGammaRamp()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getCurrentDisplayMode()Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nGetVersion()Lorg/lwjgl/opengl/WindowsFileVersion;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->updateCursor()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nTrackMouseEvent()Z",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getHdc()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nResetDisplayMode()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->updateClipping()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->centerCursor()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->isUndecorated()Z",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nSetNativeCursor()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getGlobalClientRect()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setResizable()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->destroyIcon()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->transformY()I",
        "Lorg/lwjgl/opengl/WindowsDisplay;->resetDisplayMode()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->doHandleMessage()I",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nSetCapture()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->resetCursorClipping()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->setMousePosition()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->doCreateCursor()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/WindowsDisplay;->checkCursorState()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getHwnd()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getSystemMetrics()I",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nDestroyWindow()V",
        "Lorg/lwjgl/opengl/WindowsDisplay;->nReleaseCapture()Z",
        "Lorg/lwjgl/opengl/WindowsDisplay;->sendMessage()J",
        "Lorg/lwjgl/opengl/WindowsDisplay;->getForegroundWindow()J"
    ],
    "Lorg/lwjgl/opengl/WindowsKeyboard;": [
        "Lorg/lwjgl/opengl/WindowsKeyboard;->isKeyDown()Z",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->read()V",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->poll()V",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->flushRetained()V",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->translateExtended()I",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->handleKey()V",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->destroy()V",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->checkShiftKey()Z",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->GetKeyState()I",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->handleChar()V",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->translateShift()I",
        "Lorg/lwjgl/opengl/WindowsKeyboard;->putEvent()V"
    ],
    "Lorg/lwjgl/opengl/WindowsDisplay$Rect;": [
        "Lorg/lwjgl/opengl/WindowsDisplay$Rect;->copyFromBuffer()V",
        "Lorg/lwjgl/opengl/WindowsDisplay$Rect;->offset()V",
        "Lorg/lwjgl/opengl/WindowsDisplay$Rect;->copyToBuffer()V"
    ],
    "Lorg/lwjgl/opengl/AWTGLCanvas;": [
        "Lorg/lwjgl/opengl/AWTGLCanvas;->setUpdate()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->addHierarchyListener()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->paintGL()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->paint()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->addComponentListener()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->createImplementation()Lorg/lwjgl/opengl/AWTCanvasImplementation;",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->getContext()Lorg/lwjgl/opengl/ContextGL;",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->exceptionOccurred()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->isDisplayable()Z",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->createSharedContext()Lorg/lwjgl/opengl/ContextGL;",
        "Lorg/lwjgl/opengl/AWTGLCanvas;->destroy()V"
    ],
    "Lorg/lwjgl/opengl/AWTCanvasImplementation;": [
        "Lorg/lwjgl/opengl/AWTCanvasImplementation;->findConfiguration()Ljava/awt/GraphicsConfiguration;",
        "Lorg/lwjgl/opengl/AWTCanvasImplementation;->createPeerInfo()Lorg/lwjgl/opengl/PeerInfo;"
    ],
    "Lorg/lwjgl/opengl/WindowsPeerInfo;": [
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->destroy()V",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->createHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->nGetHwnd()J",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->lockAndGetHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->choosePixelFormat()I",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->unlock()V",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->nGetHdc()J",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->setPixelFormat()V",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->getHwnd()J",
        "Lorg/lwjgl/opengl/WindowsPeerInfo;->nChoosePixelFormat()I"
    ],
    "Lorg/lwjgl/opengl/WindowsMouse;": [
        "Lorg/lwjgl/opengl/WindowsMouse;->getBlankCursor()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/WindowsMouse;->handleMouseScrolled()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->isGrabbed()Z",
        "Lorg/lwjgl/opengl/WindowsMouse;->handleMouseMoved()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->putMouseEventWithCoords()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->destroy()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->poll()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->createBlankCursor()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/WindowsMouse;->read()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->setPosition()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->getButtonCount()I",
        "Lorg/lwjgl/opengl/WindowsMouse;->centerCursor()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->hasWheel()Z",
        "Lorg/lwjgl/opengl/WindowsMouse;->handleMouseButton()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->grab()V",
        "Lorg/lwjgl/opengl/WindowsMouse;->putMouseEvent()V"
    ],
    "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;": [
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->releaseTexImageFromPbuffer()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->bindTexImageToPbuffer()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->nSetPbufferAttrib()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->setPbufferAttrib()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->nCreate()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->nBindTexImageToPbuffer()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->nReleaseTexImageFromPbuffer()V",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->isBufferLost()Z",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->nIsBufferLost()Z",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsPbufferPeerInfo;->nDestroy()V"
    ],
    "Lorg/lwjgl/opengl/WindowsRegistry;": [
        "Lorg/lwjgl/opengl/WindowsRegistry;->nQueryRegistrationKey()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/WindowsRegistry;->queryRegistrationKey()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/opengl/WindowsFileVersion;": [
        "Lorg/lwjgl/opengl/WindowsFileVersion;->toString()Ljava/lang/String;"
    ],
    "Ljava/awt/Canvas;": [
        "Ljava/awt/Canvas;->requestFocus()V",
        "Ljava/awt/Canvas;->getY()I",
        "Ljava/awt/Canvas;->getWidth()I",
        "Ljava/awt/Canvas;->removeComponentListener()V",
        "Ljava/awt/Canvas;->addComponentListener()V",
        "Ljava/awt/Canvas;->setFocusable()V",
        "Ljava/awt/Canvas;->addNotify()V",
        "Ljava/awt/Canvas;->getHeight()I",
        "Ljava/awt/Canvas;->isDisplayable()Z",
        "Ljava/awt/Canvas;->getX()I",
        "Ljava/awt/Canvas;->removeFocusListener()V",
        "Ljava/awt/Canvas;->setBounds()V",
        "Ljava/awt/Canvas;->setSize()V",
        "Ljava/awt/Canvas;->getParent()Ljava/awt/Container;",
        "Ljava/awt/Canvas;->setIgnoreRepaint()V",
        "Ljava/awt/Canvas;->setLocation()V",
        "Ljava/awt/Canvas;->removeNotify()V",
        "Ljava/awt/Canvas;->isFocusOwner()Z",
        "Ljava/awt/Canvas;->addHierarchyListener()V",
        "Ljava/awt/Canvas;->addFocusListener()V"
    ],
    "Lorg/lwjgl/opengl/Context;": [
        "Lorg/lwjgl/opengl/Context;->makeCurrent()V",
        "Lorg/lwjgl/opengl/Context;->releaseDrawable()V",
        "Lorg/lwjgl/opengl/Context;->releaseCurrent()V",
        "Lorg/lwjgl/opengl/Context;->isCurrent()Z"
    ],
    "Lorg/lwjgl/opengl/EXTTextureBufferObject;": [
        "Lorg/lwjgl/opengl/EXTTextureBufferObject;->nglTexBufferEXT()V"
    ],
    "Lorg/lwjgl/opengl/ATIElementArray;": [
        "Lorg/lwjgl/opengl/ATIElementArray;->nglElementPointerATI()V",
        "Lorg/lwjgl/opengl/ATIElementArray;->nglDrawRangeElementArrayATI()V",
        "Lorg/lwjgl/opengl/ATIElementArray;->nglDrawElementArrayATI()V"
    ],
    "Lorg/lwjgl/opengl/NVVideoCaptureUtil;": [
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->nglReleaseVideoCaptureDeviceNV()Z",
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->nglLockVideoCaptureDeviceNV()Z",
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->nglQueryVideoCaptureDeviceNV()Z",
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->checkExtension()V",
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->getPeerInfo()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->nglBindVideoCaptureDeviceNV()Z",
        "Lorg/lwjgl/opengl/NVVideoCaptureUtil;->nglEnumerateVideoCaptureDevicesNV()I"
    ],
    "Lorg/lwjgl/opengl/EXTDirectStateAccess;": [
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexGenivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayTexCoordOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglDisableVertexArrayEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixMultTransposefEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexParameterfEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCheckNamedFramebufferStatusEXT()I",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexGenfEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexSubImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform1uiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform2ivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglDisableVertexArrayAttribEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform4uiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedProgramLocalParameterdvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureSubImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArraySecondaryColorOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglClientAttribDefaultEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix2x3fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixOrthoEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform2uiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameter4fEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglDisableClientStateIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureParameterfEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureSubImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetCompressedTextureImageEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetVertexArrayPointervEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix3fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureSubImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayVertexOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameter4dvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameterI4iEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixMultfEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferTextureLayerEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyMultiTexSubImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferTexture2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixMultdEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform1uivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureSubImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixLoadIdentityEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedBufferDataEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix2x4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexSubImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglFramebufferDrawBuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetCompressedMultiTexImageEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureLevelParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParametersI4uivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramStringEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix4x3fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglBindMultiTextureEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexEnvfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetVertexArrayPointeri_vEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexEnvivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedRenderbufferStorageEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedRenderbufferStorageMultisampleCoverageEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglFramebufferReadBufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetPointerIndexedvEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->glGetNamedProgramEXT()I",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixLoadfEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayNormalOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedProgramLocalParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexSubImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameterI4ivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixMultTransposedEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexGenfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyTextureImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexLevelParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetDoubleIndexedvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexCoordPointerEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureImageEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameterI4uiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixPopEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixRotatedEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferTextureEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParametersI4ivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglFramebufferDrawBufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetCompressedTextureImageEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameter4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayVertexAttribIOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameters4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetFloati_vEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform2fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform1iEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureSubImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureSubImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameterI4uivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexSubImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedBufferPointervEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexSubImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureImageEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix3x2fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureBufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform2iEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureParameterIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetVertexArrayIntegeri_vEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedProgramStringEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayEdgeFlagOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedBufferSubDataEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureParameterIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexGenivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform1fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform3uivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglEnableVertexArrayEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixScalefEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexBufferEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix2fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix3x4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedFramebufferAttachmentParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexSubImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexParameteriEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexImageEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixLoaddEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedCopyBufferSubDataEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetFloatIndexedvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform4ivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexEnvivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexSubImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayFogCoordOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixFrustumEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexParameterIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyTextureImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexSubImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixTranslatedEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferTextureFaceEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyMultiTexImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglEnableClientStateiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexLevelParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglUnmapNamedBufferEXT()Z",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedRenderbufferParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexParameterIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyTextureSubImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixLoadTransposedEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedProgramivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMapNamedBufferRangeEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayVertexAttribOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGenerateTextureMipmapEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexEnviEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetPointeri_vEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedProgramLocalParameter4dEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform1ivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedBufferSubDataEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglEnableClientStateIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixPushEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexSubImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform3iEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglPushClientAttribDefaultEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedProgramLocalParameterIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform4fEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexSubImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGenerateMultiTexMipmapEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexEnvfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixScaledEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform3fEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglFlushMappedNamedBufferRangeEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform3fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedRenderbufferStorageMultisampleEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureSubImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform4iEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureSubImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetFramebufferParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->glGetNamedBufferParameterEXT()I",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexGeniEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform1fEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureSubImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform4uivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureSubImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetDoublei_vEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedProgramLocalParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixRotatefEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedTextureSubImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyMultiTexSubImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexImageEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexGendvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMapNamedBufferEXT()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexGendvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglDisableClientStateiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexGendEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform2fEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexSubImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetCompressedMultiTexImageEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexCoordPointerEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform3ivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexSubImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixLoadTransposefEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform2uivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferTexture3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyMultiTexSubImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexEnvfEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglEnableVertexArrayAttribEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureLevelParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetTextureParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMatrixTranslatefEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglMultiTexImage2DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniformMatrix4x2fvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayColorOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayMultiTexCoordOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCompressedMultiTexImage2DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureImage3DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureParameteriEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglVertexArrayIndexOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyMultiTexImage1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetVertexArrayIntegervEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglTextureSubImage1DEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetMultiTexGenfvEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglGetNamedBufferParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglProgramUniform3uiEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglNamedFramebufferTexture1DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyTextureSubImage3DEXT()V",
        "Lorg/lwjgl/opengl/EXTDirectStateAccess;->nglCopyTextureSubImage1DEXT()V"
    ],
    "Lorg/lwjgl/opengl/EXTDrawBuffers2;": [
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->nglGetBooleanIndexedvEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glDisableIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glGetBooleanIndexedEXT()Z",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->nglDisableIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glEnableIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->nglIsEnabledIndexedEXT()Z",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glGetBooleanIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glGetIntegerIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glGetIntegerIndexedEXT()I",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->nglEnableIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->nglColorMaskIndexedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->nglGetIntegerIndexedvEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawBuffers2;->glIsEnabledIndexedEXT()Z"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->charAt()C",
        "Ljava/lang/CharSequence;->length()I",
        "Ljava/lang/CharSequence;->subSequence()Ljava/lang/CharSequence;",
        "Ljava/lang/CharSequence;->toString()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/opengl/ATISeparateStencil;": [
        "Lorg/lwjgl/opengl/ATISeparateStencil;->nglStencilOpSeparateATI()V",
        "Lorg/lwjgl/opengl/ATISeparateStencil;->nglStencilFuncSeparateATI()V"
    ],
    "Lorg/lwjgl/opengl/EXTFramebufferBlit;": [
        "Lorg/lwjgl/opengl/EXTFramebufferBlit;->nglBlitFramebufferEXT()V"
    ],
    "Lorg/lwjgl/opengl/NVRegisterCombiners;": [
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglGetCombinerInputParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglCombinerParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglGetFinalCombinerInputParameterivNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglCombinerParameterivNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglCombinerParameterfNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglGetCombinerInputParameterivNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglCombinerInputNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglGetFinalCombinerInputParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglCombinerParameteriNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglFinalCombinerInputNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglCombinerOutputNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglGetCombinerOutputParameterivNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners;->nglGetCombinerOutputParameterfvNV()V"
    ],
    "Ljava/lang/NumberFormatException;": [
        "Ljava/lang/NumberFormatException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/opengl/ContextCapabilities;": [
        "Lorg/lwjgl/opengl/ContextCapabilities;->unloadAllStubs()V",
        "Lorg/lwjgl/opengl/ContextCapabilities;->remove()V"
    ],
    "Lorg/lwjgl/opengl/EXTGpuProgramParameters;": [
        "Lorg/lwjgl/opengl/EXTGpuProgramParameters;->nglProgramEnvParameters4fvEXT()V",
        "Lorg/lwjgl/opengl/EXTGpuProgramParameters;->nglProgramLocalParameters4fvEXT()V"
    ],
    "Lorg/lwjgl/opengl/EXTDrawRangeElements;": [
        "Lorg/lwjgl/opengl/EXTDrawRangeElements;->nglDrawRangeElementsEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawRangeElements;->nglDrawRangeElementsEXTBO()V"
    ],
    "Lorg/lwjgl/opengl/ARBWindowPos;": [
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos2dARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos2fARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos3dARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos2sARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos3iARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos3fARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos2iARB()V",
        "Lorg/lwjgl/opengl/ARBWindowPos;->nglWindowPos3sARB()V"
    ],
    "Lorg/lwjgl/opengl/EXTMultiDrawArrays;": [
        "Lorg/lwjgl/opengl/EXTMultiDrawArrays;->nglMultiDrawArraysEXT()V"
    ],
    "Lorg/lwjgl/opengl/KeyboardEventQueue;": [
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->putKeyEvent()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->putKeyboardEvent()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->putEvent()Z",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->poll()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->copyEvents()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->flushDeferredEvent()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->register()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->getMappedKeyCode()I",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->unregister()V",
        "Lorg/lwjgl/opengl/KeyboardEventQueue;->handleKey()V"
    ],
    "Lorg/lwjgl/opengl/EventQueue;": [
        "Lorg/lwjgl/opengl/EventQueue;->copyEvents()V",
        "Lorg/lwjgl/opengl/EventQueue;->putEvent()Z",
        "Lorg/lwjgl/opengl/EventQueue;->clearEvents()V"
    ],
    "Ljava/awt/event/KeyEvent;": [
        "Ljava/awt/event/KeyEvent;->getKeyLocation()I",
        "Ljava/awt/event/KeyEvent;->getKeyCode()I",
        "Ljava/awt/event/KeyEvent;->getKeyChar()C",
        "Ljava/awt/event/KeyEvent;->getWhen()J"
    ],
    "Ljava/awt/Component;": [
        "Ljava/awt/Component;->addMouseListener()V",
        "Ljava/awt/Component;->getHeight()I",
        "Ljava/awt/Component;->getLocationOnScreen()Ljava/awt/Point;",
        "Ljava/awt/Component;->getParent()Ljava/awt/Container;",
        "Ljava/awt/Component;->addMouseWheelListener()V",
        "Ljava/awt/Component;->removeMouseListener()V",
        "Ljava/awt/Component;->removeMouseMotionListener()V",
        "Ljava/awt/Component;->addMouseMotionListener()V",
        "Ljava/awt/Component;->addKeyListener()V",
        "Ljava/awt/Component;->removeMouseWheelListener()V",
        "Ljava/awt/Component;->getGraphicsConfiguration()Ljava/awt/GraphicsConfiguration;"
    ],
    "Lorg/lwjgl/opengl/GL41;": [
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2fv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4f()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform4u()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2ui()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2i()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL1d()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL2d()V",
        "Lorg/lwjgl/opengl/GL41;->glGetProgramPipeline()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix4()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix4fv()V",
        "Lorg/lwjgl/opengl/GL41;->nglGetDoublei_v()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3fv()V",
        "Lorg/lwjgl/opengl/GL41;->glGetProgramPipelineInfoLog()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix2fv()V",
        "Lorg/lwjgl/opengl/GL41;->glScissorIndexed()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4uiv()V",
        "Lorg/lwjgl/opengl/GL41;->nglGetVertexAttribLdv()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL3dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3i()V",
        "Lorg/lwjgl/opengl/GL41;->nglScissorIndexedv()V",
        "Lorg/lwjgl/opengl/GL41;->glGetFloat()V",
        "Lorg/lwjgl/opengl/GL41;->glGetFloat()F",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform2ui()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform3()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix4x2()V",
        "Lorg/lwjgl/opengl/GL41;->nglClearDepthf()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix4x3dv()V",
        "Lorg/lwjgl/opengl/GL41;->glActiveShaderProgram()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramBinary()V",
        "Lorg/lwjgl/opengl/GL41;->glReleaseShaderCompiler()V",
        "Lorg/lwjgl/opengl/GL41;->nglGetProgramBinary()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramBinary()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1i()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform1f()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform2u()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL2dv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform4d()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramParameteri()V",
        "Lorg/lwjgl/opengl/GL41;->nglUseProgramStages()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL1d()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2uiv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix4x3()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3ui()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribLPointer()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix3fv()V",
        "Lorg/lwjgl/opengl/GL41;->glGetShaderPrecisionFormat()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform3i()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix4dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglGetShaderPrecisionFormat()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform4ui()V",
        "Lorg/lwjgl/opengl/GL41;->glShaderBinary()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform2f()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform3d()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform1ui()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform1d()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2f()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3f()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform4f()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4i()V",
        "Lorg/lwjgl/opengl/GL41;->glValidateProgramPipeline()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL4()V",
        "Lorg/lwjgl/opengl/GL41;->nglGenProgramPipelines()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2d()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix2x3fv()V",
        "Lorg/lwjgl/opengl/GL41;->glViewportIndexedf()V",
        "Lorg/lwjgl/opengl/GL41;->nglDepthRangeArrayv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3d()V",
        "Lorg/lwjgl/opengl/GL41;->nglIsProgramPipeline()Z",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix3x4dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1uiv()V",
        "Lorg/lwjgl/opengl/GL41;->glGenProgramPipelines()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4d()V",
        "Lorg/lwjgl/opengl/GL41;->nglDepthRangef()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix2x4dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglScissorIndexed()V",
        "Lorg/lwjgl/opengl/GL41;->glGenProgramPipelines()I",
        "Lorg/lwjgl/opengl/GL41;->nglGetProgramPipelineiv()V",
        "Lorg/lwjgl/opengl/GL41;->nglViewportIndexedfv()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL3()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform1i()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix4x2dv()V",
        "Lorg/lwjgl/opengl/GL41;->glScissorArray()V",
        "Lorg/lwjgl/opengl/GL41;->nglGetFloati_v()V",
        "Lorg/lwjgl/opengl/GL41;->nglDeleteProgramPipelines()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribLPointer()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform3ui()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform2i()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramParameteri()V",
        "Lorg/lwjgl/opengl/GL41;->nglCreateShaderProgramv()I",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL1dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix3dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix3x4fv()V",
        "Lorg/lwjgl/opengl/GL41;->glGetDouble()D",
        "Lorg/lwjgl/opengl/GL41;->nglGetProgramPipelineInfoLog()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform1u()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform3u()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform4()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL2d()V",
        "Lorg/lwjgl/opengl/GL41;->glGetProgramPipeline()I",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform3f()V",
        "Lorg/lwjgl/opengl/GL41;->nglActiveShaderProgram()V",
        "Lorg/lwjgl/opengl/GL41;->glViewportIndexed()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL3d()V",
        "Lorg/lwjgl/opengl/GL41;->glDepthRangeArray()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1f()V",
        "Lorg/lwjgl/opengl/GL41;->glBindProgramPipeline()V",
        "Lorg/lwjgl/opengl/GL41;->glGetProgramBinary()V",
        "Lorg/lwjgl/opengl/GL41;->glDepthRangeIndexed()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL1()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix3x2fv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3iv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform2()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix2x4fv()V",
        "Lorg/lwjgl/opengl/GL41;->glGetDouble()V",
        "Lorg/lwjgl/opengl/GL41;->glCreateShaderProgram()I",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix3x2dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglValidateProgramPipeline()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL4d()V",
        "Lorg/lwjgl/opengl/GL41;->nglShaderBinary()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL2()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4ui()V",
        "Lorg/lwjgl/opengl/GL41;->glUseProgramStages()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform4i()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix3x2()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1fv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix2x3dv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix2x3()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4iv()V",
        "Lorg/lwjgl/opengl/GL41;->nglScissorArrayv()V",
        "Lorg/lwjgl/opengl/GL41;->glClearDepthf()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix4x2fv()V",
        "Lorg/lwjgl/opengl/GL41;->nglViewportIndexedf()V",
        "Lorg/lwjgl/opengl/GL41;->glViewportArray()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix2dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1iv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform1()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL4dv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix3()V",
        "Lorg/lwjgl/opengl/GL41;->glDeleteProgramPipelines()V",
        "Lorg/lwjgl/opengl/GL41;->glGetVertexAttribL()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix2()V",
        "Lorg/lwjgl/opengl/GL41;->nglDepthRangeIndexed()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform2iv()V",
        "Lorg/lwjgl/opengl/GL41;->nglReleaseShaderCompiler()V",
        "Lorg/lwjgl/opengl/GL41;->glGetProgramPipelineInfoLog()V",
        "Lorg/lwjgl/opengl/GL41;->nglBindProgramPipeline()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1ui()V",
        "Lorg/lwjgl/opengl/GL41;->glVertexAttribL4d()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3uiv()V",
        "Lorg/lwjgl/opengl/GL41;->nglViewportArrayv()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform1d()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniform2d()V",
        "Lorg/lwjgl/opengl/GL41;->glIsProgramPipeline()Z",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform4fv()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribL3d()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniform3dv()V",
        "Lorg/lwjgl/opengl/GL41;->nglVertexAttribLPointerBO()V",
        "Lorg/lwjgl/opengl/GL41;->nglProgramUniformMatrix4x3fv()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix3x4()V",
        "Lorg/lwjgl/opengl/GL41;->glProgramUniformMatrix2x4()V",
        "Lorg/lwjgl/opengl/GL41;->glDepthRangef()V"
    ],
    "Lorg/lwjgl/opengl/ARBVertexBlend;": [
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightbvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightdvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightivARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightsvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightubvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglVertexBlendARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightusvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightPointerARBBO()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightfvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightPointerARB()V",
        "Lorg/lwjgl/opengl/ARBVertexBlend;->nglWeightuivARB()V"
    ],
    "Lorg/lwjgl/opengl/ARBVertexShader;": [
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglBindAttribLocationARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglGetVertexAttribivARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglGetActiveAttribARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib4NubARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib2sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glEnableVertexAttribArrayARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glDisableVertexAttribArrayARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib4sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglGetVertexAttribPointervARB()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib3sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib3sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglGetAttribLocationARB()I",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib3fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglGetVertexAttribdvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib3dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttribPointerARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib2dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttribPointerARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glGetVertexAttribARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib1fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib4fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib2fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglEnableVertexAttribArrayARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib1fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib4fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glGetVertexAttribPointerARB()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib2dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib2sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib1dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglGetVertexAttribfvARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib4NubARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib1sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib2fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib3dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglDisableVertexAttribArrayARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib1sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib4dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib3fARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib4dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->glVertexAttrib4sARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttrib1dARB()V",
        "Lorg/lwjgl/opengl/ARBVertexShader;->nglVertexAttribPointerARBBO()V"
    ],
    "Lorg/lwjgl/opengl/NVFragmentProgram;": [
        "Lorg/lwjgl/opengl/NVFragmentProgram;->nglProgramNamedParameter4dNV()V",
        "Lorg/lwjgl/opengl/NVFragmentProgram;->nglGetProgramNamedParameterdvNV()V",
        "Lorg/lwjgl/opengl/NVFragmentProgram;->nglGetProgramNamedParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVFragmentProgram;->nglProgramNamedParameter4fNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTFogCoord;": [
        "Lorg/lwjgl/opengl/EXTFogCoord;->nglFogCoordPointerEXTBO()V",
        "Lorg/lwjgl/opengl/EXTFogCoord;->nglFogCoordfEXT()V",
        "Lorg/lwjgl/opengl/EXTFogCoord;->nglFogCoordPointerEXT()V",
        "Lorg/lwjgl/opengl/EXTFogCoord;->nglFogCoorddEXT()V"
    ],
    "Lorg/lwjgl/opengl/AMDDrawBuffersBlend;": [
        "Lorg/lwjgl/opengl/AMDDrawBuffersBlend;->nglBlendEquationIndexedAMD()V",
        "Lorg/lwjgl/opengl/AMDDrawBuffersBlend;->nglBlendFuncSeparateIndexedAMD()V",
        "Lorg/lwjgl/opengl/AMDDrawBuffersBlend;->nglBlendEquationSeparateIndexedAMD()V",
        "Lorg/lwjgl/opengl/AMDDrawBuffersBlend;->nglBlendFuncIndexedAMD()V"
    ],
    "Lorg/lwjgl/opengl/ARBVertexAttrib64bit;": [
        "Lorg/lwjgl/opengl/ARBVertexAttrib64bit;->nglVertexArrayVertexAttribLOffsetEXT()V",
        "Lorg/lwjgl/opengl/ARBVertexAttrib64bit;->glVertexArrayVertexAttribLOffsetEXT()V"
    ],
    "Lorg/lwjgl/opengl/NVExplicitMultisample;": [
        "Lorg/lwjgl/opengl/NVExplicitMultisample;->nglSampleMaskIndexedNV()V",
        "Lorg/lwjgl/opengl/NVExplicitMultisample;->nglGetMultisamplefvNV()V",
        "Lorg/lwjgl/opengl/NVExplicitMultisample;->nglTexRenderbufferNV()V"
    ],
    "Lorg/lwjgl/opengles/GLContext;": [
        "Lorg/lwjgl/opengles/GLContext;->loadOpenGLLibrary()V",
        "Lorg/lwjgl/opengles/GLContext;->unloadOpenGLLibrary()V",
        "Lorg/lwjgl/opengles/GLContext;->useContext()V",
        "Lorg/lwjgl/opengles/GLContext;->getCapabilities()Lorg/lwjgl/opengles/ContextCapabilities;"
    ],
    "Lorg/lwjgl/opengl/WindowsDisplayPeerInfo;": [
        "Lorg/lwjgl/opengl/WindowsDisplayPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsDisplayPeerInfo;->nInitDC()V"
    ],
    "Lorg/lwjgl/opengl/EXTBlendMinmax;": [
        "Lorg/lwjgl/opengl/EXTBlendMinmax;->nglBlendEquationEXT()V"
    ],
    "Lorg/lwjgl/opengl/LinuxDisplay;": [
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetDefaultScreen()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nIsXF86VidModeSupported()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->processEvents()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->internAtom()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSetViewPort()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSetTitle()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isParentWindowActive()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->updateCursor()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->createBlankCursor()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->shouldWarpPointer()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->releaseInput()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nReshape()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isXF86VidModeSupported()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getWindowMode()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->relayEventToParent()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->grabPointer()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->checkInput()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetAvailableDisplayModes()[Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->ungrabKeyboard()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->convertIconMask()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nLockAWT()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getErrorText()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nUngrabKeyboard()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getCurrentXRandrMode()Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSetWindowIcon()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getRootWindow()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->setInputFocusUnsafe()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->convertIcon()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetMinCursorSize()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGrabPointer()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nIsNetWMFullscreenSupported()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetGammaRampLength()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->callErrorHandler()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nIsXrandrSupported()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getHandle()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->ungrabPointer()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nDefineCursor()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetCurrentXRandrMode()Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nInternAtom()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->updateInputGrab()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGrabKeyboard()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetHeight()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetNativeCursorCapabilities()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSwitchDisplayMode()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->decDisplay()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isFullscreen()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getDisplay()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->updateKeyboardGrab()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetCurrentGammaRamp()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->convertToNativeRamp()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->shouldGrab()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->lockAWT()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetMaxCursorSize()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getBestDisplayModeExtension()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSetGammaRamp()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->updatePointerGrab()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getParentWindow()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nUngrabPointer()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->grabKeyboard()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nConvertToNativeRamp()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->hasProperty()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getWindow()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isAncestorXEmbedded()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->switchDisplayModeOnTmpDisplay()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->acquireInput()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isXrandrSupported()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nUnlockAWT()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getChildCount()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->setErrorHandler()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getAvailableDisplayModes()[Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->mapRaised()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isNetWMFullscreenSupported()Z",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nCreateBlankCursor()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->incDisplay()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nDestroyWindow()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetPbufferCapabilities()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->setGammaRampOnTmpDisplay()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->openDisplay()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nDestroyCursor()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getDefaultScreen()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->setNativeCursor()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nGetWidth()I",
        "Lorg/lwjgl/opengl/LinuxDisplay;->doSetGamma()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nCreateCursor()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSetWindowSize()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSync()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getCurrentGammaRamp()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxDisplay;->getCursorHandle()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->switchDisplayMode()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nIconifyWindow()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nCreateWindow()J",
        "Lorg/lwjgl/opengl/LinuxDisplay;->nSetInputFocus()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->unlockAWT()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->setFocused()V",
        "Lorg/lwjgl/opengl/LinuxDisplay;->isLegacyFullscreen()Z"
    ],
    "Lorg/lwjgl/opengl/LinuxEvent;": [
        "Lorg/lwjgl/opengl/LinuxEvent;->getKeyState()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getClientFormat()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nNextEvent()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonTime()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->nSendEvent()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->getWindow()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetClientMessageType()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->getKeyTime()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonX()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->createEventBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetClientData()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonTime()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->copyFrom()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->setWindow()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->getPending()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetType()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonXRoot()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nextEvent()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetFocusDetail()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getKeyType()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetClientFormat()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getClientData()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetKeyKeyCode()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonState()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonButton()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonY()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonType()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getKeyKeyCode()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonButton()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonXRoot()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonX()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetFocusMode()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getClientMessageType()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetKeyState()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nSetWindow()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonY()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getKeyAddress()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonRoot()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonYRoot()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetWindow()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonType()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nFilterEvent()Z",
        "Lorg/lwjgl/opengl/LinuxEvent;->getFocusDetail()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->sendEvent()V",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetKeyType()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->getButtonYRoot()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->filterEvent()Z",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetKeyTime()I",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetKeyAddress()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->nGetButtonRoot()J",
        "Lorg/lwjgl/opengl/LinuxEvent;->getType()I"
    ],
    "Lorg/lwjgl/opengl/LinuxMouse;": [
        "Lorg/lwjgl/opengl/LinuxMouse;->reset()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->putMouseEvent()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->doWarpPointer()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->resetCursor()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->changeGrabbed()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->nSendWarpEvent()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->poll()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->handleButtonPress()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->handleWarpEvent()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->handlePointerMotion()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->handleButtonEvent()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->filterEvent()Z",
        "Lorg/lwjgl/opengl/LinuxMouse;->doHandlePointerMotion()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->handleButton()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->setCursorPos()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->nWarpCursor()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->nGetWindowHeight()I",
        "Lorg/lwjgl/opengl/LinuxMouse;->putMouseEventWithCoords()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->getButtonCount()I",
        "Lorg/lwjgl/opengl/LinuxMouse;->read()V",
        "Lorg/lwjgl/opengl/LinuxMouse;->transformY()I",
        "Lorg/lwjgl/opengl/LinuxMouse;->nGetWindowWidth()I",
        "Lorg/lwjgl/opengl/LinuxMouse;->nQueryPointer()J",
        "Lorg/lwjgl/opengl/LinuxMouse;->setCursorPosition()V"
    ],
    "Lorg/lwjgl/opengl/LinuxKeyboard;": [
        "Lorg/lwjgl/opengl/LinuxKeyboard;->flushDeferredEvent()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->allocateComposeStatus()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->lookupString()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->getKeySym()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->lookupStringUnicode()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->closeIM()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->nSetDetectableKeyRepeat()Z",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->handleKeyEvent()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->translateEvent()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->read()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->putKeyboardEvent()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->filterEvent()Z",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->getMaxKeyPerMod()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->lookupKeysym()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->destroy()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->getKeyState()B",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->lookupStringISO88591()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->poll()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->createIC()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->mapEventToKeySym()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->setDetectableKeyRepeat()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->utf8LookupString()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->getKeycode()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->lookupModifierMap()I",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->setupIMEventMask()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->freeModifierMapping()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->getModifierMapping()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->destroyIC()V",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->toUpper()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->keycodeToKeySym()J",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->isNoSymbolOrVendorSpecific()Z",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->isKeypadKeysym()Z",
        "Lorg/lwjgl/opengl/LinuxKeyboard;->openIM()J"
    ],
    "Lorg/lwjgl/opengl/LinuxDisplay$Compiz;": [
        "Lorg/lwjgl/opengl/LinuxDisplay$Compiz;->setLegacyFullscreenSupport()V"
    ],
    "Lorg/lwjgl/opengl/AWTSurfaceLock;": [
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->nUnlock()V",
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->isApplet()Z",
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->privilegedLockAndInitHandle()Z",
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->unlock()V",
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->lockAndGetHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->lockAndInitHandle()Z",
        "Lorg/lwjgl/opengl/AWTSurfaceLock;->createHandle()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengl/NVPresentVideo;": [
        "Lorg/lwjgl/opengl/NVPresentVideo;->nglPresentFrameDualFillNV()V",
        "Lorg/lwjgl/opengl/NVPresentVideo;->nglGetVideoivNV()V",
        "Lorg/lwjgl/opengl/NVPresentVideo;->nglGetVideoi64vNV()V",
        "Lorg/lwjgl/opengl/NVPresentVideo;->nglGetVideouivNV()V",
        "Lorg/lwjgl/opengl/NVPresentVideo;->nglGetVideoui64vNV()V",
        "Lorg/lwjgl/opengl/NVPresentVideo;->nglPresentFrameKeyedNV()V"
    ],
    "Lorg/lwjgl/opengl/APPLEVertexArrayRange;": [
        "Lorg/lwjgl/opengl/APPLEVertexArrayRange;->nglVertexArrayRangeAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexArrayRange;->nglFlushVertexArrayRangeAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexArrayRange;->nglVertexArrayParameteriAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/ARBDrawInstanced;": [
        "Lorg/lwjgl/opengl/ARBDrawInstanced;->nglDrawElementsInstancedARBBO()V",
        "Lorg/lwjgl/opengl/ARBDrawInstanced;->nglDrawElementsInstancedARB()V",
        "Lorg/lwjgl/opengl/ARBDrawInstanced;->nglDrawArraysInstancedARB()V"
    ],
    "Lorg/lwjgl/opengl/WindowsKeycodes;": [
        "Lorg/lwjgl/opengl/WindowsKeycodes;->mapVirtualKeyToLWJGLCode()I"
    ],
    "Lorg/lwjgl/opengl/GL15;": [
        "Lorg/lwjgl/opengl/GL15;->nglGenQueries()V",
        "Lorg/lwjgl/opengl/GL15;->nglBufferSubData()V",
        "Lorg/lwjgl/opengl/GL15;->glGenBuffers()V",
        "Lorg/lwjgl/opengl/GL15;->glBindBuffer()V",
        "Lorg/lwjgl/opengl/GL15;->nglGetQueryObjectiv()V",
        "Lorg/lwjgl/opengl/GL15;->glBufferData()V",
        "Lorg/lwjgl/opengl/GL15;->nglGetQueryObjectuiv()V",
        "Lorg/lwjgl/opengl/GL15;->glGenBuffers()I",
        "Lorg/lwjgl/opengl/GL15;->nglGetQueryiv()V",
        "Lorg/lwjgl/opengl/GL15;->nglGetBufferParameteriv()V",
        "Lorg/lwjgl/opengl/GL15;->nglDeleteQueries()V",
        "Lorg/lwjgl/opengl/GL15;->nglEndQuery()V",
        "Lorg/lwjgl/opengl/GL15;->nglIsQuery()Z",
        "Lorg/lwjgl/opengl/GL15;->glGetBufferParameter()I",
        "Lorg/lwjgl/opengl/GL15;->nglIsBuffer()Z",
        "Lorg/lwjgl/opengl/GL15;->nglGetBufferPointerv()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/GL15;->nglGenBuffers()V",
        "Lorg/lwjgl/opengl/GL15;->nglDeleteBuffers()V",
        "Lorg/lwjgl/opengl/GL15;->nglUnmapBuffer()Z",
        "Lorg/lwjgl/opengl/GL15;->nglGetBufferSubData()V",
        "Lorg/lwjgl/opengl/GL15;->glGetBufferParameter()V",
        "Lorg/lwjgl/opengl/GL15;->glDeleteBuffers()V",
        "Lorg/lwjgl/opengl/GL15;->nglBufferData()V",
        "Lorg/lwjgl/opengl/GL15;->glBufferSubData()V",
        "Lorg/lwjgl/opengl/GL15;->nglBeginQuery()V",
        "Lorg/lwjgl/opengl/GL15;->nglMapBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/GL15;->nglBindBuffer()V",
        "Lorg/lwjgl/opengl/GL15;->glIsBuffer()Z"
    ],
    "Lorg/lwjgl/opengl/ARBBufferObject;": [
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglUnmapBufferARB()Z",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglMapBufferARB()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglGetBufferPointervARB()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglBufferDataARB()V",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglBufferSubDataARB()V",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglDeleteBuffersARB()V",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglGetBufferParameterivARB()V",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglIsBufferARB()Z",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglGetBufferSubDataARB()V",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglGenBuffersARB()V",
        "Lorg/lwjgl/opengl/ARBBufferObject;->glGetBufferParameterARB()I",
        "Lorg/lwjgl/opengl/ARBBufferObject;->nglBindBufferARB()V"
    ],
    "Lorg/lwjgl/opengl/ATIVertexArrayObject;": [
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglIsObjectBufferATI()Z",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->glGetObjectBufferATI()I",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglGetObjectBufferfvATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglArrayObjectATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglGetArrayObjectivATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglGetVariantArrayObjectfvATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglGetVariantArrayObjectivATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglUpdateObjectBufferATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglVariantArrayObjectATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglGetArrayObjectfvATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglGetObjectBufferivATI()V",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglNewObjectBufferATI()I",
        "Lorg/lwjgl/opengl/ATIVertexArrayObject;->nglFreeObjectBufferATI()V"
    ],
    "Lorg/lwjgl/opengl/ARBColorBufferFloat;": [
        "Lorg/lwjgl/opengl/ARBColorBufferFloat;->nglClampColorARB()V"
    ],
    "Lorg/lwjgl/opengl/GL13;": [
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexSubImage3D()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord4d()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexSubImage2DBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord4f()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexImage3D()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexSubImage1DBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglGetCompressedTexImageBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultTransposeMatrixd()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord2d()V",
        "Lorg/lwjgl/opengl/GL13;->nglClientActiveTexture()V",
        "Lorg/lwjgl/opengl/GL13;->glClientActiveTexture()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultTransposeMatrixf()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexImage1D()V",
        "Lorg/lwjgl/opengl/GL13;->nglActiveTexture()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord3d()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexImage1DBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglSampleCoverage()V",
        "Lorg/lwjgl/opengl/GL13;->glSampleCoverage()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexSubImage2D()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexSubImage3DBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexImage2DBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord1f()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord1d()V",
        "Lorg/lwjgl/opengl/GL13;->nglLoadTransposeMatrixf()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexSubImage1D()V",
        "Lorg/lwjgl/opengl/GL13;->glCompressedTexImage2D()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexImage2D()V",
        "Lorg/lwjgl/opengl/GL13;->nglGetCompressedTexImage()V",
        "Lorg/lwjgl/opengl/GL13;->nglCompressedTexImage3DBO()V",
        "Lorg/lwjgl/opengl/GL13;->nglLoadTransposeMatrixd()V",
        "Lorg/lwjgl/opengl/GL13;->glActiveTexture()V",
        "Lorg/lwjgl/opengl/GL13;->glCompressedTexSubImage2D()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord3f()V",
        "Lorg/lwjgl/opengl/GL13;->glMultiTexCoord4f()V",
        "Lorg/lwjgl/opengl/GL13;->nglMultiTexCoord2f()V"
    ],
    "Lorg/lwjgl/opengl/ARBDebugOutput;": [
        "Lorg/lwjgl/opengl/ARBDebugOutput;->nglDebugMessageControlARB()V",
        "Lorg/lwjgl/opengl/ARBDebugOutput;->nglDebugMessageInsertARB()V",
        "Lorg/lwjgl/opengl/ARBDebugOutput;->nglGetDebugMessageLogARB()I",
        "Lorg/lwjgl/opengl/ARBDebugOutput;->nglDebugMessageCallbackARB()V"
    ],
    "Lorg/lwjgl/opengl/ARBDebugOutputCallback;": [
        "Lorg/lwjgl/opengl/ARBDebugOutputCallback;->getPointer()J",
        "Lorg/lwjgl/opengl/ARBDebugOutputCallback;->getHandler()Lorg/lwjgl/opengl/ARBDebugOutputCallback$Handler;"
    ],
    "Lorg/lwjgl/opengl/ARBOcclusionQuery;": [
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglEndQueryARB()V",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglIsQueryARB()Z",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglDeleteQueriesARB()V",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglGetQueryObjectivARB()V",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglBeginQueryARB()V",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglGetQueryObjectuivARB()V",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglGenQueriesARB()V",
        "Lorg/lwjgl/opengl/ARBOcclusionQuery;->nglGetQueryivARB()V"
    ],
    "Lorg/lwjgl/opengl/GL14;": [
        "Lorg/lwjgl/opengl/GL14;->glBlendColor()V",
        "Lorg/lwjgl/opengl/GL14;->nglWindowPos3i()V",
        "Lorg/lwjgl/opengl/GL14;->nglFogCoordPointerBO()V",
        "Lorg/lwjgl/opengl/GL14;->nglFogCoordf()V",
        "Lorg/lwjgl/opengl/GL14;->nglSecondaryColor3b()V",
        "Lorg/lwjgl/opengl/GL14;->nglBlendEquation()V",
        "Lorg/lwjgl/opengl/GL14;->nglPointParameteri()V",
        "Lorg/lwjgl/opengl/GL14;->nglSecondaryColorPointer()V",
        "Lorg/lwjgl/opengl/GL14;->nglWindowPos2f()V",
        "Lorg/lwjgl/opengl/GL14;->nglWindowPos2d()V",
        "Lorg/lwjgl/opengl/GL14;->nglMultiDrawArrays()V",
        "Lorg/lwjgl/opengl/GL14;->nglSecondaryColor3f()V",
        "Lorg/lwjgl/opengl/GL14;->nglPointParameterf()V",
        "Lorg/lwjgl/opengl/GL14;->nglBlendFuncSeparate()V",
        "Lorg/lwjgl/opengl/GL14;->glPointParameter()V",
        "Lorg/lwjgl/opengl/GL14;->nglFogCoordPointer()V",
        "Lorg/lwjgl/opengl/GL14;->nglSecondaryColor3d()V",
        "Lorg/lwjgl/opengl/GL14;->nglBlendColor()V",
        "Lorg/lwjgl/opengl/GL14;->glBlendEquation()V",
        "Lorg/lwjgl/opengl/GL14;->nglPointParameterfv()V",
        "Lorg/lwjgl/opengl/GL14;->nglWindowPos3f()V",
        "Lorg/lwjgl/opengl/GL14;->nglPointParameteriv()V",
        "Lorg/lwjgl/opengl/GL14;->nglSecondaryColorPointerBO()V",
        "Lorg/lwjgl/opengl/GL14;->glBlendFuncSeparate()V",
        "Lorg/lwjgl/opengl/GL14;->nglWindowPos3d()V",
        "Lorg/lwjgl/opengl/GL14;->nglWindowPos2i()V",
        "Lorg/lwjgl/opengl/GL14;->nglFogCoordd()V",
        "Lorg/lwjgl/opengl/GL14;->glPointParameterf()V",
        "Lorg/lwjgl/opengl/GL14;->nglSecondaryColor3ub()V"
    ],
    "Lorg/lwjgl/opengl/ARBImaging;": [
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionFilter2DBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglColorTable()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglResetMinmax()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetHistogramParameterfv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglCopyColorSubTable()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglMinmax()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetSeparableFilterBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetMinmaxBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglHistogram()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionFilter2D()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetColorTable()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetMinmaxParameteriv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionFilter1DBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetConvolutionFilter()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetColorTableParameteriv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglResetHistogram()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglSeparableFilter2DBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglColorTableBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetConvolutionParameterfv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetHistogramParameteriv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetMinmaxParameterfv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionParameteri()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetMinmax()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglColorTableParameterfv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglColorSubTableBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionParameterfv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetColorTableParameterfv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetConvolutionFilterBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglCopyConvolutionFilter2D()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglSeparableFilter2D()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetHistogram()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglColorSubTable()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionParameteriv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetSeparableFilter()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetHistogramBO()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionParameterf()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglCopyColorTable()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglConvolutionFilter1D()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglGetConvolutionParameteriv()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglCopyConvolutionFilter1D()V",
        "Lorg/lwjgl/opengl/ARBImaging;->nglColorTableParameteriv()V"
    ],
    "Lorg/lwjgl/opengl/GLSync;": [
        "Lorg/lwjgl/opengl/GLSync;->getPointer()J"
    ],
    "Lorg/lwjgl/opengl/GL32;": [
        "Lorg/lwjgl/opengl/GL32;->nglGetInteger64v()V",
        "Lorg/lwjgl/opengl/GL32;->nglClientWaitSync()I",
        "Lorg/lwjgl/opengl/GL32;->glDrawElementsBaseVertex()V",
        "Lorg/lwjgl/opengl/GL32;->nglFramebufferTexture()V",
        "Lorg/lwjgl/opengl/GL32;->glGetMultisample()V",
        "Lorg/lwjgl/opengl/GL32;->nglTexImage3DMultisample()V",
        "Lorg/lwjgl/opengl/GL32;->glGetSync()V",
        "Lorg/lwjgl/opengl/GL32;->nglDeleteSync()V",
        "Lorg/lwjgl/opengl/GL32;->glDrawRangeElementsBaseVertex()V",
        "Lorg/lwjgl/opengl/GL32;->glSampleMaski()V",
        "Lorg/lwjgl/opengl/GL32;->glDrawElementsInstancedBaseVertex()V",
        "Lorg/lwjgl/opengl/GL32;->glGetInteger64()V",
        "Lorg/lwjgl/opengl/GL32;->nglIsSync()Z",
        "Lorg/lwjgl/opengl/GL32;->nglDrawRangeElementsBaseVertexBO()V",
        "Lorg/lwjgl/opengl/GL32;->nglSampleMaski()V",
        "Lorg/lwjgl/opengl/GL32;->glGetInteger64()J",
        "Lorg/lwjgl/opengl/GL32;->nglGetMultisamplefv()V",
        "Lorg/lwjgl/opengl/GL32;->glClientWaitSync()I",
        "Lorg/lwjgl/opengl/GL32;->glIsSync()Z",
        "Lorg/lwjgl/opengl/GL32;->nglDrawElementsInstancedBaseVertexBO()V",
        "Lorg/lwjgl/opengl/GL32;->glFenceSync()Lorg/lwjgl/opengl/GLSync;",
        "Lorg/lwjgl/opengl/GL32;->glGetSync()I",
        "Lorg/lwjgl/opengl/GL32;->nglDrawElementsBaseVertex()V",
        "Lorg/lwjgl/opengl/GL32;->nglFenceSync()J",
        "Lorg/lwjgl/opengl/GL32;->glDeleteSync()V",
        "Lorg/lwjgl/opengl/GL32;->glTexImage3DMultisample()V",
        "Lorg/lwjgl/opengl/GL32;->nglDrawRangeElementsBaseVertex()V",
        "Lorg/lwjgl/opengl/GL32;->nglGetInteger64i_v()V",
        "Lorg/lwjgl/opengl/GL32;->nglWaitSync()V",
        "Lorg/lwjgl/opengl/GL32;->nglTexImage2DMultisample()V",
        "Lorg/lwjgl/opengl/GL32;->glWaitSync()V",
        "Lorg/lwjgl/opengl/GL32;->nglProvokingVertex()V",
        "Lorg/lwjgl/opengl/GL32;->glProvokingVertex()V",
        "Lorg/lwjgl/opengl/GL32;->nglDrawElementsInstancedBaseVertex()V",
        "Lorg/lwjgl/opengl/GL32;->nglDrawElementsBaseVertexBO()V",
        "Lorg/lwjgl/opengl/GL32;->nglGetSynciv()V",
        "Lorg/lwjgl/opengl/GL32;->glTexImage2DMultisample()V"
    ],
    "Lorg/lwjgl/opengl/NVRegisterCombiners2;": [
        "Lorg/lwjgl/opengl/NVRegisterCombiners2;->nglCombinerStageParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVRegisterCombiners2;->nglGetCombinerStageParameterfvNV()V"
    ],
    "Lorg/lwjgl/opengl/GL40;": [
        "Lorg/lwjgl/opengl/GL40;->glUniform1()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix2x4dv()V",
        "Lorg/lwjgl/opengl/GL40;->nglBlendEquationSeparatei()V",
        "Lorg/lwjgl/opengl/GL40;->nglDrawElementsIndirect()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix2()V",
        "Lorg/lwjgl/opengl/GL40;->glDrawElementsIndirect()V",
        "Lorg/lwjgl/opengl/GL40;->nglIsTransformFeedback()Z",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix3x4dv()V",
        "Lorg/lwjgl/opengl/GL40;->glIsTransformFeedback()Z",
        "Lorg/lwjgl/opengl/GL40;->nglDrawTransformFeedbackStream()V",
        "Lorg/lwjgl/opengl/GL40;->nglDrawTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->glGetActiveSubroutineUniform()V",
        "Lorg/lwjgl/opengl/GL40;->glGenTransformFeedbacks()I",
        "Lorg/lwjgl/opengl/GL40;->nglGetUniformSubroutineuiv()V",
        "Lorg/lwjgl/opengl/GL40;->nglDrawArraysIndirect()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetActiveSubroutineName()V",
        "Lorg/lwjgl/opengl/GL40;->nglPatchParameteri()V",
        "Lorg/lwjgl/opengl/GL40;->glGetActiveSubroutineName()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL40;->nglBlendEquationi()V",
        "Lorg/lwjgl/opengl/GL40;->glGetProgramStage()I",
        "Lorg/lwjgl/opengl/GL40;->glUniform3()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix3x2()V",
        "Lorg/lwjgl/opengl/GL40;->glPauseTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform3d()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetSubroutineUniformLocation()I",
        "Lorg/lwjgl/opengl/GL40;->nglGetSubroutineIndex()I",
        "Lorg/lwjgl/opengl/GL40;->glGetSubroutineIndex()I",
        "Lorg/lwjgl/opengl/GL40;->glGetUniformSubroutineu()I",
        "Lorg/lwjgl/opengl/GL40;->glUniform1d()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetQueryIndexediv()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix4x3()V",
        "Lorg/lwjgl/opengl/GL40;->glGetQueryIndexed()V",
        "Lorg/lwjgl/opengl/GL40;->glGetProgramStage()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix3dv()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform4d()V",
        "Lorg/lwjgl/opengl/GL40;->nglDrawElementsIndirectBO()V",
        "Lorg/lwjgl/opengl/GL40;->nglResumeTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->nglGenTransformFeedbacks()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix2dv()V",
        "Lorg/lwjgl/opengl/GL40;->glUniform2()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix2x4()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix2x3()V",
        "Lorg/lwjgl/opengl/GL40;->glUniform3d()V",
        "Lorg/lwjgl/opengl/GL40;->nglEndQueryIndexed()V",
        "Lorg/lwjgl/opengl/GL40;->glPatchParameteri()V",
        "Lorg/lwjgl/opengl/GL40;->glBindTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix4x3dv()V",
        "Lorg/lwjgl/opengl/GL40;->glBeginQueryIndexed()V",
        "Lorg/lwjgl/opengl/GL40;->glUniform2d()V",
        "Lorg/lwjgl/opengl/GL40;->glUniform4d()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform1d()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform4dv()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix3()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix4dv()V",
        "Lorg/lwjgl/opengl/GL40;->glPatchParameter()V",
        "Lorg/lwjgl/opengl/GL40;->glGetActiveSubroutineUniformName()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL40;->glGetUniform()V",
        "Lorg/lwjgl/opengl/GL40;->nglBlendFuncSeparatei()V",
        "Lorg/lwjgl/opengl/GL40;->nglMinSampleShading()V",
        "Lorg/lwjgl/opengl/GL40;->nglBlendFunci()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix3x4()V",
        "Lorg/lwjgl/opengl/GL40;->glDrawTransformFeedbackStream()V",
        "Lorg/lwjgl/opengl/GL40;->glResumeTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->glGetActiveSubroutineUniformName()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetActiveSubroutineUniformName()V",
        "Lorg/lwjgl/opengl/GL40;->nglBindTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix3x2dv()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform3dv()V",
        "Lorg/lwjgl/opengl/GL40;->glUniform4()V",
        "Lorg/lwjgl/opengl/GL40;->glDrawArraysIndirect()V",
        "Lorg/lwjgl/opengl/GL40;->nglDrawArraysIndirectBO()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix2x3dv()V",
        "Lorg/lwjgl/opengl/GL40;->glGenTransformFeedbacks()V",
        "Lorg/lwjgl/opengl/GL40;->glGetQueryIndexed()I",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix4x2()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformMatrix4x2dv()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform1dv()V",
        "Lorg/lwjgl/opengl/GL40;->glEndQueryIndexed()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform2d()V",
        "Lorg/lwjgl/opengl/GL40;->glGetSubroutineUniformLocation()I",
        "Lorg/lwjgl/opengl/GL40;->glGetActiveSubroutineUniform()I",
        "Lorg/lwjgl/opengl/GL40;->glUniformMatrix4()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetUniformdv()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetActiveSubroutineUniformiv()V",
        "Lorg/lwjgl/opengl/GL40;->glUniformSubroutinesu()V",
        "Lorg/lwjgl/opengl/GL40;->nglDeleteTransformFeedbacks()V",
        "Lorg/lwjgl/opengl/GL40;->glDrawTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->nglGetProgramStageiv()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniformSubroutinesuiv()V",
        "Lorg/lwjgl/opengl/GL40;->glDeleteTransformFeedbacks()V",
        "Lorg/lwjgl/opengl/GL40;->nglUniform2dv()V",
        "Lorg/lwjgl/opengl/GL40;->glGetActiveSubroutineName()V",
        "Lorg/lwjgl/opengl/GL40;->nglPauseTransformFeedback()V",
        "Lorg/lwjgl/opengl/GL40;->nglBeginQueryIndexed()V",
        "Lorg/lwjgl/opengl/GL40;->nglPatchParameterfv()V",
        "Lorg/lwjgl/opengl/GL40;->glGetUniformSubroutineu()V"
    ],
    "Lorg/lwjgl/opengl/NVPathRendering;": [
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGenPathsNV()I",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglStencilFillPathNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathDashArrayNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathColorGenNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglIsPointInFillPathNV()Z",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathSubCoordsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathParameterivNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathParameteriNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathMetricsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglTransformPathNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglCoverFillPathInstancedNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglIsPathNV()Z",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglStencilFillPathInstancedNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathGlyphsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathDashArrayNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathMetricRangeNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglStencilStrokePathInstancedNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathColorGenfvNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglCoverStrokePathInstancedNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathStencilDepthOffsetNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathStringNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathParameterfNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathCommandsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathLengthNV()F",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathTexGenfvNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathColorGenivNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglIsPointInStrokePathNV()Z",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglInterpolatePathsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglCoverStrokePathNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathSubCommandsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglWeightPathsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglCopyPathNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathParameterivNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathCoverDepthFuncNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathGlyphRangeNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathStencilFuncNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglCoverFillPathNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathCoordsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathTexGenNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathCommandsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathTexGenivNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPathFogGenNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglStencilStrokePathNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglDeletePathsNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathSpacingNV()V",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglPointAlongPathNV()Z",
        "Lorg/lwjgl/opengl/NVPathRendering;->nglGetPathCoordsNV()V"
    ],
    "Lorg/lwjgl/opengl/GREMEDYStringMarker;": [
        "Lorg/lwjgl/opengl/GREMEDYStringMarker;->nglStringMarkerGREMEDY()V"
    ],
    "Lorg/lwjgl/opengl/MacOSXFrame;": [
        "Lorg/lwjgl/opengl/MacOSXFrame;->setUndecorated()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->setTitle()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->setResizable()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->requestFocus()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->dispose()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->add()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->setVisible()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->getCanvas()Lorg/lwjgl/opengl/MacOSXGLCanvas;",
        "Lorg/lwjgl/opengl/MacOSXFrame;->syncIsCloseRequested()Z",
        "Lorg/lwjgl/opengl/MacOSXFrame;->getBounds()Ljava/awt/Rectangle;",
        "Lorg/lwjgl/opengl/MacOSXFrame;->getDevice()Ljava/awt/GraphicsDevice;",
        "Lorg/lwjgl/opengl/MacOSXFrame;->syncShouldWarpCursor()Z",
        "Lorg/lwjgl/opengl/MacOSXFrame;->updateBounds()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->syncShouldReleaseCursor()Z",
        "Lorg/lwjgl/opengl/MacOSXFrame;->addWindowListener()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->getWidth()I",
        "Lorg/lwjgl/opengl/MacOSXFrame;->getHeight()I",
        "Lorg/lwjgl/opengl/MacOSXFrame;->setBounds()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->pack()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->getInsets()Ljava/awt/Insets;",
        "Lorg/lwjgl/opengl/MacOSXFrame;->syncIsVisible()Z",
        "Lorg/lwjgl/opengl/MacOSXFrame;->resize()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->isDisplayable()Z",
        "Lorg/lwjgl/opengl/MacOSXFrame;->setCursor()V",
        "Lorg/lwjgl/opengl/MacOSXFrame;->addComponentListener()V"
    ],
    "Lorg/lwjgl/opengl/MacOSXGLCanvas;": [
        "Lorg/lwjgl/opengl/MacOSXGLCanvas;->setFocusTraversalKeysEnabled()V",
        "Lorg/lwjgl/opengl/MacOSXGLCanvas;->syncCanvasPainted()Z",
        "Lorg/lwjgl/opengl/MacOSXGLCanvas;->syncIsDirty()Z",
        "Lorg/lwjgl/opengl/MacOSXGLCanvas;->paint()V",
        "Lorg/lwjgl/opengl/MacOSXGLCanvas;->requestFocus()V"
    ],
    "Ljava/awt/GraphicsEnvironment;": [
        "Ljava/awt/GraphicsEnvironment;->getLocalGraphicsEnvironment()Ljava/awt/GraphicsEnvironment;",
        "Ljava/awt/GraphicsEnvironment;->getDefaultScreenDevice()Ljava/awt/GraphicsDevice;"
    ],
    "Lorg/lwjgl/opengl/ARBDrawBuffers;": [
        "Lorg/lwjgl/opengl/ARBDrawBuffers;->nglDrawBuffersARB()V"
    ],
    "Lorg/lwjgl/opengl/NVGeometryProgram4;": [
        "Lorg/lwjgl/opengl/NVGeometryProgram4;->nglProgramVertexLimitNV()V"
    ],
    "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;": [
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglMapVertexAttrib1fAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglMapVertexAttrib1dAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglMapVertexAttrib2dAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglMapVertexAttrib2fAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglEnableVertexAttribAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglIsVertexAttribEnabledAPPLE()Z",
        "Lorg/lwjgl/opengl/APPLEVertexProgramEvaluators;->nglDisableVertexAttribAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/APPLEFence;": [
        "Lorg/lwjgl/opengl/APPLEFence;->nglTestObjectAPPLE()Z",
        "Lorg/lwjgl/opengl/APPLEFence;->nglIsFenceAPPLE()Z",
        "Lorg/lwjgl/opengl/APPLEFence;->nglDeleteFencesAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEFence;->nglFinishFenceAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEFence;->nglTestFenceAPPLE()Z",
        "Lorg/lwjgl/opengl/APPLEFence;->nglSetFenceAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEFence;->nglFinishObjectAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEFence;->nglGenFencesAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/NVPixelDataRange;": [
        "Lorg/lwjgl/opengl/NVPixelDataRange;->nglFlushPixelDataRangeNV()V",
        "Lorg/lwjgl/opengl/NVPixelDataRange;->nglPixelDataRangeNV()V"
    ],
    "Lorg/lwjgl/opengl/APPLETextureRange;": [
        "Lorg/lwjgl/opengl/APPLETextureRange;->nglGetTexParameterPointervAPPLE()Ljava/nio/Buffer;",
        "Lorg/lwjgl/opengl/APPLETextureRange;->nglTextureRangeAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/EXTCompiledVertexArray;": [
        "Lorg/lwjgl/opengl/EXTCompiledVertexArray;->nglUnlockArraysEXT()V",
        "Lorg/lwjgl/opengl/EXTCompiledVertexArray;->nglLockArraysEXT()V"
    ],
    "Lorg/lwjgl/opengl/ARBTextureStorage;": [
        "Lorg/lwjgl/opengl/ARBTextureStorage;->nglTextureStorage1DEXT()V",
        "Lorg/lwjgl/opengl/ARBTextureStorage;->nglTextureStorage3DEXT()V",
        "Lorg/lwjgl/opengl/ARBTextureStorage;->nglTextureStorage2DEXT()V"
    ],
    "Lorg/lwjgl/opengl/NVOcclusionQuery;": [
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglDeleteOcclusionQueriesNV()V",
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglGetOcclusionQueryivNV()V",
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglEndOcclusionQueryNV()V",
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglGetOcclusionQueryuivNV()V",
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglIsOcclusionQueryNV()Z",
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglGenOcclusionQueriesNV()V",
        "Lorg/lwjgl/opengl/NVOcclusionQuery;->nglBeginOcclusionQueryNV()V"
    ],
    "Lorg/lwjgl/opengl/AMDSamplePositions;": [
        "Lorg/lwjgl/opengl/AMDSamplePositions;->nglSetMultisamplefvAMD()V"
    ],
    "Lorg/lwjgl/opengl/PixelFormat;": [
        "Lorg/lwjgl/opengl/PixelFormat;->isFloatingPoint()Z",
        "Lorg/lwjgl/opengl/PixelFormat;->withCoverageSamples()Lorg/lwjgl/opengl/PixelFormat;"
    ],
    "Lorg/lwjgl/opengl/LinuxDisplayPeerInfo;": [
        "Lorg/lwjgl/opengl/LinuxDisplayPeerInfo;->getHandle()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengl/ARBTextureBufferObject;": [
        "Lorg/lwjgl/opengl/ARBTextureBufferObject;->nglTexBufferARB()V"
    ],
    "Lorg/lwjgl/opengl/ATIFragmentShader;": [
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglSetFragmentShaderConstantATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglBindFragmentShaderATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglEndFragmentShaderATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglDeleteFragmentShaderATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglGenFragmentShadersATI()I",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglColorFragmentOp2ATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglPassTexCoordATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglColorFragmentOp1ATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglAlphaFragmentOp1ATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglAlphaFragmentOp3ATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglAlphaFragmentOp2ATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglSampleMapATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglColorFragmentOp3ATI()V",
        "Lorg/lwjgl/opengl/ATIFragmentShader;->nglBeginFragmentShaderATI()V"
    ],
    "Lorg/lwjgl/opengl/NVVideoCapture;": [
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglGetVideoCaptureStreamdvNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglVideoCaptureStreamParameterdvNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglGetVideoCaptureivNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglGetVideoCaptureStreamfvNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglEndVideoCaptureNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglGetVideoCaptureStreamivNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglVideoCaptureNV()I",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglBindVideoCaptureStreamBufferNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglVideoCaptureStreamParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglBindVideoCaptureStreamTextureNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglBeginVideoCaptureNV()V",
        "Lorg/lwjgl/opengl/NVVideoCapture;->nglVideoCaptureStreamParameterivNV()V"
    ],
    "Lorg/lwjgl/opengl/MacOSXDisplay;": [
        "Lorg/lwjgl/opengl/MacOSXDisplay;->hideUI()V",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->createLWJGLDisplayMode()Lorg/lwjgl/opengl/DisplayMode;",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->equals()Z",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->doHandleQuit()V",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->getCanvas()Ljava/awt/Canvas;",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->restoreGamma()V",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->destroyWindow()V",
        "Lorg/lwjgl/opengl/MacOSXDisplay;->nHideUI()V"
    ],
    "Ljava/awt/DisplayMode;": [
        "Ljava/awt/DisplayMode;->getRefreshRate()I",
        "Ljava/awt/DisplayMode;->getWidth()I",
        "Ljava/awt/DisplayMode;->getBitDepth()I",
        "Ljava/awt/DisplayMode;->getHeight()I"
    ],
    "Lorg/lwjgl/opengl/AWTUtil;": [
        "Lorg/lwjgl/opengl/AWTUtil;->hasWheel()Z",
        "Lorg/lwjgl/opengl/AWTUtil;->getCursorPosition()Ljava/awt/Point;",
        "Lorg/lwjgl/opengl/AWTUtil;->createRobot()Ljava/awt/Robot;",
        "Lorg/lwjgl/opengl/AWTUtil;->getMaxCursorSize()I",
        "Lorg/lwjgl/opengl/AWTUtil;->getNativeCursorCapabilities()I",
        "Lorg/lwjgl/opengl/AWTUtil;->createCursor()Ljava/awt/Cursor;",
        "Lorg/lwjgl/opengl/AWTUtil;->getPointerLocation()Ljava/awt/Point;",
        "Lorg/lwjgl/opengl/AWTUtil;->getButtonCount()I",
        "Lorg/lwjgl/opengl/AWTUtil;->getMinCursorSize()I",
        "Lorg/lwjgl/opengl/AWTUtil;->setCursorPosition()V",
        "Lorg/lwjgl/opengl/AWTUtil;->transformY()I"
    ],
    "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;": [
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->setGrabbed()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->grabMouse()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->copyEvents()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->putMouseEventWithCoords()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->nGrabMouse()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->addDelta()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->poll()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->register()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->unregister()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->getMouseDeltas()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->warpCursor()V",
        "Lorg/lwjgl/opengl/MacOSXMouseEventQueue;->isGrabbed()Z"
    ],
    "Lorg/lwjgl/opengl/MacOSXCanvasListener;": [
        "Lorg/lwjgl/opengl/MacOSXCanvasListener;->wasResized()Z",
        "Lorg/lwjgl/opengl/MacOSXCanvasListener;->syncShouldUpdateContext()Z",
        "Lorg/lwjgl/opengl/MacOSXCanvasListener;->setUpdate()V",
        "Lorg/lwjgl/opengl/MacOSXCanvasListener;->disableListeners()V"
    ],
    "Ljava/awt/GraphicsDevice;": [
        "Ljava/awt/GraphicsDevice;->setFullScreenWindow()V",
        "Ljava/awt/GraphicsDevice;->getConfigurations()[Ljava/awt/GraphicsConfiguration;",
        "Ljava/awt/GraphicsDevice;->getFullScreenWindow()Ljava/awt/Window;",
        "Ljava/awt/GraphicsDevice;->getDisplayModes()[Ljava/awt/DisplayMode;",
        "Ljava/awt/GraphicsDevice;->getDisplayMode()Ljava/awt/DisplayMode;"
    ],
    "Lorg/lwjgl/opengl/ARBDrawBuffersBlend;": [
        "Lorg/lwjgl/opengl/ARBDrawBuffersBlend;->nglBlendFunciARB()V",
        "Lorg/lwjgl/opengl/ARBDrawBuffersBlend;->nglBlendEquationSeparateiARB()V",
        "Lorg/lwjgl/opengl/ARBDrawBuffersBlend;->nglBlendEquationiARB()V",
        "Lorg/lwjgl/opengl/ARBDrawBuffersBlend;->nglBlendFuncSeparateiARB()V"
    ],
    "Lorg/lwjgl/opengl/GL12;": [
        "Lorg/lwjgl/opengl/GL12;->nglTexImage3DBO()V",
        "Lorg/lwjgl/opengl/GL12;->nglTexSubImage3D()V",
        "Lorg/lwjgl/opengl/GL12;->nglCopyTexSubImage3D()V",
        "Lorg/lwjgl/opengl/GL12;->nglDrawRangeElements()V",
        "Lorg/lwjgl/opengl/GL12;->nglDrawRangeElementsBO()V",
        "Lorg/lwjgl/opengl/GL12;->nglTexImage3D()V",
        "Lorg/lwjgl/opengl/GL12;->nglTexSubImage3DBO()V"
    ],
    "Lorg/lwjgl/opengl/NVVertexArrayRange;": [
        "Lorg/lwjgl/opengl/NVVertexArrayRange;->nglFreeMemoryNV()V",
        "Lorg/lwjgl/opengl/NVVertexArrayRange;->nglFlushVertexArrayRangeNV()V",
        "Lorg/lwjgl/opengl/NVVertexArrayRange;->nglAllocateMemoryNV()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/NVVertexArrayRange;->nglVertexArrayRangeNV()V"
    ],
    "Lorg/lwjgl/opengl/ATIPnTriangles;": [
        "Lorg/lwjgl/opengl/ATIPnTriangles;->nglPNTrianglesfATI()V",
        "Lorg/lwjgl/opengl/ATIPnTriangles;->nglPNTrianglesiATI()V"
    ],
    "Lorg/lwjgl/opengl/NVConditionalRender;": [
        "Lorg/lwjgl/opengl/NVConditionalRender;->nglBeginConditionalRenderNV()V",
        "Lorg/lwjgl/opengl/NVConditionalRender;->nglEndConditionalRenderNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTTimerQuery;": [
        "Lorg/lwjgl/opengl/EXTTimerQuery;->nglGetQueryObjecti64vEXT()V",
        "Lorg/lwjgl/opengl/EXTTimerQuery;->nglGetQueryObjectui64vEXT()V"
    ],
    "Lorg/lwjgl/opengl/EXTSeparateShaderObjects;": [
        "Lorg/lwjgl/opengl/EXTSeparateShaderObjects;->nglUseShaderProgramEXT()V",
        "Lorg/lwjgl/opengl/EXTSeparateShaderObjects;->nglActiveProgramEXT()V",
        "Lorg/lwjgl/opengl/EXTSeparateShaderObjects;->nglCreateShaderProgramEXT()I"
    ],
    "Lorg/lwjgl/opengl/NVCopyImage;": [
        "Lorg/lwjgl/opengl/NVCopyImage;->nglCopyImageSubDataNV()V"
    ],
    "Lorg/lwjgl/opengl/NVTextureBarrier;": [
        "Lorg/lwjgl/opengl/NVTextureBarrier;->nglTextureBarrierNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTPointParameters;": [
        "Lorg/lwjgl/opengl/EXTPointParameters;->nglPointParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTPointParameters;->nglPointParameterfEXT()V"
    ],
    "Lorg/lwjgl/opengl/LinuxAWTGLCanvasPeerInfo;": [
        "Lorg/lwjgl/opengl/LinuxAWTGLCanvasPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/LinuxAWTGLCanvasPeerInfo;->nInitHandle()V",
        "Lorg/lwjgl/opengl/LinuxAWTGLCanvasPeerInfo;->getScreenFromSurfaceInfo()I"
    ],
    "Lorg/lwjgl/opengl/NVParameterBufferObject;": [
        "Lorg/lwjgl/opengl/NVParameterBufferObject;->nglProgramBufferParametersfvNV()V",
        "Lorg/lwjgl/opengl/NVParameterBufferObject;->nglProgramBufferParametersIuivNV()V",
        "Lorg/lwjgl/opengl/NVParameterBufferObject;->nglProgramBufferParametersIivNV()V"
    ],
    "Lorg/lwjgl/opengl/MacOSXCanvasPeerInfo;": [
        "Lorg/lwjgl/opengl/MacOSXCanvasPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/MacOSXCanvasPeerInfo;->nInitHandle()V",
        "Lorg/lwjgl/opengl/MacOSXCanvasPeerInfo;->doUnlock()V"
    ],
    "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;": [
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglCompileShaderIncludeARB2()V",
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglIsNamedStringARB()Z",
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglDeleteNamedStringARB()V",
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglCompileShaderIncludeARB()V",
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglGetNamedStringARB()V",
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglNamedStringARB()V",
        "Lorg/lwjgl/opengl/ARBShadingLanguageInclude;->nglGetNamedStringivARB()V"
    ],
    "Lorg/lwjgl/opengl/EXTProvokingVertex;": [
        "Lorg/lwjgl/opengl/EXTProvokingVertex;->nglProvokingVertexEXT()V"
    ],
    "Lorg/lwjgl/opengl/EXTStencilClearTag;": [
        "Lorg/lwjgl/opengl/EXTStencilClearTag;->nglStencilClearTagEXT()V"
    ],
    "Lorg/lwjgl/opengl/ARBGpuShaderFp64;": [
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix3x4dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform3dEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix4dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix4x3dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform4dEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix2x3dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix2x4dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform4dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix3dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix4x2dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform2dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform3dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix3x2dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform1dvEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform2dEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniform1dEXT()V",
        "Lorg/lwjgl/opengl/ARBGpuShaderFp64;->nglProgramUniformMatrix2dvEXT()V"
    ],
    "Lorg/lwjgl/opengl/AMDPerformanceMonitor;": [
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglBeginPerfMonitorAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGetPerfMonitorCounterDataAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglEndPerfMonitorAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGetPerfMonitorCountersAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGetPerfMonitorGroupStringAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGetPerfMonitorCounterStringAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglSelectPerfMonitorCountersAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGetPerfMonitorCounterInfoAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGetPerfMonitorGroupsAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglDeletePerfMonitorsAMD()V",
        "Lorg/lwjgl/opengl/AMDPerformanceMonitor;->nglGenPerfMonitorsAMD()V"
    ],
    "Lorg/lwjgl/opengl/LinuxKeycodes;": [
        "Lorg/lwjgl/opengl/LinuxKeycodes;->mapKeySymToLWJGLKeyCode()I"
    ],
    "Ljava/nio/charset/CharsetDecoder;": [
        "Ljava/nio/charset/CharsetDecoder;->decode()Ljava/nio/charset/CoderResult;"
    ],
    "Ljava/awt/event/MouseEvent;": [
        "Ljava/awt/event/MouseEvent;->getButton()I",
        "Ljava/awt/event/MouseEvent;->getID()I",
        "Ljava/awt/event/MouseEvent;->getY()I",
        "Ljava/awt/event/MouseEvent;->getX()I",
        "Ljava/awt/event/MouseEvent;->isControlDown()Z",
        "Ljava/awt/event/MouseEvent;->getWhen()J"
    ],
    "Lorg/lwjgl/opengl/MouseEventQueue;": [
        "Lorg/lwjgl/opengl/MouseEventQueue;->resetCursorToCenter()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->addDelta()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->putMouseEventWithCoords()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->setGrabbed()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->setButton()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->setCursorPos()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->handleMotion()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->handleWheel()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->putMouseEvent()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->putEvent()Z",
        "Lorg/lwjgl/opengl/MouseEventQueue;->transformY()I",
        "Lorg/lwjgl/opengl/MouseEventQueue;->handleButton()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->updateDeltas()V",
        "Lorg/lwjgl/opengl/MouseEventQueue;->clearEvents()V"
    ],
    "Ljava/awt/event/MouseWheelEvent;": [
        "Ljava/awt/event/MouseWheelEvent;->getWheelRotation()I",
        "Ljava/awt/event/MouseWheelEvent;->getWhen()J"
    ],
    "Lorg/lwjgl/opengl/EXTBindableUniform;": [
        "Lorg/lwjgl/opengl/EXTBindableUniform;->nglGetUniformBufferSizeEXT()I",
        "Lorg/lwjgl/opengl/EXTBindableUniform;->nglGetUniformOffsetEXT()J",
        "Lorg/lwjgl/opengl/EXTBindableUniform;->nglUniformBufferEXT()V"
    ],
    "Lorg/lwjgl/opengl/StateStack;": [
        "Lorg/lwjgl/opengl/StateStack;->pushState()V",
        "Lorg/lwjgl/opengl/StateStack;->growState()V",
        "Lorg/lwjgl/opengl/StateStack;->popState()I"
    ],
    "Lorg/lwjgl/opengl/AMDMultiDrawIndirect;": [
        "Lorg/lwjgl/opengl/AMDMultiDrawIndirect;->nglMultiDrawElementsIndirectAMDBO()V",
        "Lorg/lwjgl/opengl/AMDMultiDrawIndirect;->nglMultiDrawArraysIndirectAMD()V",
        "Lorg/lwjgl/opengl/AMDMultiDrawIndirect;->nglMultiDrawArraysIndirectAMDBO()V",
        "Lorg/lwjgl/opengl/AMDMultiDrawIndirect;->nglMultiDrawElementsIndirectAMD()V"
    ],
    "Lorg/lwjgl/opengl/EXTStencilTwoSide;": [
        "Lorg/lwjgl/opengl/EXTStencilTwoSide;->nglActiveStencilFaceEXT()V"
    ],
    "Lorg/lwjgl/opengl/NVTransformFeedback;": [
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglGetTransformFeedbackVaryingNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglBindBufferBaseNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglGetActiveVaryingNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglActiveVaryingNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglBindBufferOffsetNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglBindBufferRangeNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglTransformFeedbackAttribsNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglTransformFeedbackVaryingsNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglBeginTransformFeedbackNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglGetVaryingLocationNV()I",
        "Lorg/lwjgl/opengl/NVTransformFeedback;->nglEndTransformFeedbackNV()V"
    ],
    "Lorg/lwjgl/opengl/NVHalfFloat;": [
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttribs1hvNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglColor4hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertex3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglSecondaryColor3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexWeighthNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttrib3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglTexCoord2hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglMultiTexCoord2hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttrib4hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertex4hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttribs4hvNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglTexCoord3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttribs3hvNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttrib2hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglNormal3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglMultiTexCoord3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertex2hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglColor3hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglFogCoordhNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttrib1hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglTexCoord1hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglMultiTexCoord1hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglVertexAttribs2hvNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglTexCoord4hNV()V",
        "Lorg/lwjgl/opengl/NVHalfFloat;->nglMultiTexCoord4hNV()V"
    ],
    "Lorg/lwjgl/opengl/FastIntMap;": [
        "Lorg/lwjgl/opengl/FastIntMap;->remove()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/FastIntMap;->index()I",
        "Lorg/lwjgl/opengl/FastIntMap;->rehash()V",
        "Lorg/lwjgl/opengl/FastIntMap;->put()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/FastIntMap;->containsKey()Z",
        "Lorg/lwjgl/opengl/FastIntMap;->get()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/FastIntMap;->iterator()Lorg/lwjgl/opengl/FastIntMap$EntryIterator;"
    ],
    "Lorg/lwjgl/opengl/ReferencesStack;": [
        "Lorg/lwjgl/opengl/ReferencesStack;->growStack()V",
        "Lorg/lwjgl/opengl/ReferencesStack;->pushState()V",
        "Lorg/lwjgl/opengl/ReferencesStack;->popState()Lorg/lwjgl/opengl/References;",
        "Lorg/lwjgl/opengl/ReferencesStack;->getReferences()Lorg/lwjgl/opengl/References;"
    ],
    "Lorg/lwjgl/opengl/MacOSXPeerInfo;": [
        "Lorg/lwjgl/opengl/MacOSXPeerInfo;->nDestroy()V",
        "Lorg/lwjgl/opengl/MacOSXPeerInfo;->nChoosePixelFormat()V",
        "Lorg/lwjgl/opengl/MacOSXPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/MacOSXPeerInfo;->createHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/MacOSXPeerInfo;->choosePixelFormat()V"
    ],
    "Lorg/lwjgl/opengl/ContextAttribsImplementation;": [
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getFlagsAttrib()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getMinorVersionAttrib()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getDebugBit()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getForwardCompatibleBit()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getProfileCompatibilityBit()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getProfileCoreBit()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getMajorVersionAttrib()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getProfileMaskAttrib()I",
        "Lorg/lwjgl/opengl/ContextAttribsImplementation;->getLayerPlaneAttrib()I"
    ],
    "Lorg/lwjgl/opengl/ARBGeometryShader4;": [
        "Lorg/lwjgl/opengl/ARBGeometryShader4;->nglFramebufferTextureFaceARB()V",
        "Lorg/lwjgl/opengl/ARBGeometryShader4;->nglFramebufferTextureARB()V",
        "Lorg/lwjgl/opengl/ARBGeometryShader4;->nglFramebufferTextureLayerARB()V",
        "Lorg/lwjgl/opengl/ARBGeometryShader4;->nglProgramParameteriARB()V"
    ],
    "Lorg/lwjgl/opengl/NVShaderBufferLoad;": [
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglIsNamedBufferResidentNV()Z",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglMakeBufferNonResidentNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglMakeBufferResidentNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglGetBufferParameterui64vNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglGetIntegerui64vNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglGetNamedBufferParameterui64vNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglMakeNamedBufferResidentNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglIsBufferResidentNV()Z",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglUniformui64NV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglMakeNamedBufferNonResidentNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglUniformui64vNV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglProgramUniformui64NV()V",
        "Lorg/lwjgl/opengl/NVShaderBufferLoad;->nglProgramUniformui64vNV()V"
    ],
    "Lorg/lwjgl/opengl/NVGpuShader5;": [
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform3ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform4ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->glGetUniformuNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform1ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform1i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform2i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform2i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform1i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform2ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform1ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform4ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform2i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform4i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform2ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform3ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform3ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform3i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform3i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform3ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform3i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform2i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform4i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform4ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform4i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform1ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglGetUniformui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform1ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform3i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform1i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform4i64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform2ui64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform1i64NV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglUniform4ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglProgramUniform2ui64vNV()V",
        "Lorg/lwjgl/opengl/NVGpuShader5;->nglGetUniformi64vNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTTextureInteger;": [
        "Lorg/lwjgl/opengl/EXTTextureInteger;->nglClearColorIiEXT()V",
        "Lorg/lwjgl/opengl/EXTTextureInteger;->nglTexParameterIuivEXT()V",
        "Lorg/lwjgl/opengl/EXTTextureInteger;->nglGetTexParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTTextureInteger;->nglTexParameterIivEXT()V",
        "Lorg/lwjgl/opengl/EXTTextureInteger;->nglClearColorIuiEXT()V",
        "Lorg/lwjgl/opengl/EXTTextureInteger;->nglGetTexParameterIuivEXT()V"
    ],
    "Lorg/lwjgl/opengl/APPLEFlushBufferRange;": [
        "Lorg/lwjgl/opengl/APPLEFlushBufferRange;->nglBufferParameteriAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEFlushBufferRange;->nglFlushMappedBufferRangeAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/ARBPointParameters;": [
        "Lorg/lwjgl/opengl/ARBPointParameters;->nglPointParameterfARB()V",
        "Lorg/lwjgl/opengl/ARBPointParameters;->nglPointParameterfvARB()V"
    ],
    "Lorg/lwjgl/opengl/NVFramebufferMultisampleCoverage;": [
        "Lorg/lwjgl/opengl/NVFramebufferMultisampleCoverage;->nglRenderbufferStorageMultisampleCoverageNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTShaderImageLoadStore;": [
        "Lorg/lwjgl/opengl/EXTShaderImageLoadStore;->nglBindImageTextureEXT()V",
        "Lorg/lwjgl/opengl/EXTShaderImageLoadStore;->nglMemoryBarrierEXT()V"
    ],
    "Lorg/lwjgl/opengl/ARBMultitexture;": [
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord4fARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord1dARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord3dARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord4sARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord1fARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord4iARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord3fARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord2dARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord2iARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord2fARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord2sARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord1sARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord3sARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglActiveTextureARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord3iARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglClientActiveTextureARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord4dARB()V",
        "Lorg/lwjgl/opengl/ARBMultitexture;->nglMultiTexCoord1iARB()V"
    ],
    "Lorg/lwjgl/opengl/APPLEObjectPurgeable;": [
        "Lorg/lwjgl/opengl/APPLEObjectPurgeable;->nglObjectPurgeableAPPLE()I",
        "Lorg/lwjgl/opengl/APPLEObjectPurgeable;->nglObjectUnpurgeableAPPLE()I",
        "Lorg/lwjgl/opengl/APPLEObjectPurgeable;->nglGetObjectParameterivAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/AMDVertexShaderTessellator;": [
        "Lorg/lwjgl/opengl/AMDVertexShaderTessellator;->nglTessellationFactorAMD()V",
        "Lorg/lwjgl/opengl/AMDVertexShaderTessellator;->nglTessellationModeAMD()V"
    ],
    "Lorg/lwjgl/opengl/MacOSXPbufferPeerInfo;": [
        "Lorg/lwjgl/opengl/MacOSXPbufferPeerInfo;->nCreate()V",
        "Lorg/lwjgl/opengl/MacOSXPbufferPeerInfo;->nDestroy()V",
        "Lorg/lwjgl/opengl/MacOSXPbufferPeerInfo;->getHandle()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengl/ARBTransposeMatrix;": [
        "Lorg/lwjgl/opengl/ARBTransposeMatrix;->nglMultTransposeMatrixfARB()V",
        "Lorg/lwjgl/opengl/ARBTransposeMatrix;->nglLoadTransposeMatrixfARB()V"
    ],
    "Lorg/lwjgl/opengl/EXTTransformFeedback;": [
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglBindBufferOffsetEXT()V",
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglEndTransformFeedbackEXT()V",
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglGetTransformFeedbackVaryingEXT()V",
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglBindBufferRangeEXT()V",
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglBindBufferBaseEXT()V",
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglTransformFeedbackVaryingsEXT()V",
        "Lorg/lwjgl/opengl/EXTTransformFeedback;->nglBeginTransformFeedbackEXT()V"
    ],
    "Lorg/lwjgl/opengl/SharedDrawable;": [
        "Lorg/lwjgl/opengl/SharedDrawable;->createSharedContext()Lorg/lwjgl/opengl/ContextGL;"
    ],
    "Ljava/awt/image/BufferedImage;": [
        "Ljava/awt/image/BufferedImage;->setRGB()V"
    ],
    "Ljava/awt/Point;": [
        "Ljava/awt/Point;->move()V",
        "Ljava/awt/Point;->translate()V"
    ],
    "Ljava/awt/PointerInfo;": [
        "Ljava/awt/PointerInfo;->getLocation()Ljava/awt/Point;",
        "Ljava/awt/PointerInfo;->getDevice()Ljava/awt/GraphicsDevice;"
    ],
    "Ljava/awt/GraphicsConfiguration;": [
        "Ljava/awt/GraphicsConfiguration;->getDevice()Ljava/awt/GraphicsDevice;"
    ],
    "Ljava/awt/Robot;": [
        "Ljava/awt/Robot;->mouseMove()V"
    ],
    "Lorg/lwjgl/opengl/OpenGLException;": [
        "Lorg/lwjgl/opengl/OpenGLException;->getMessage()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/OpenGLException;->createErrorMessage()Ljava/lang/String;"
    ],
    "Lorg/lwjgl/opengl/NVEvaluators;": [
        "Lorg/lwjgl/opengl/NVEvaluators;->nglGetMapAttribParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglGetMapParameterivNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglMapControlPointsNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglGetMapParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglMapParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglMapParameterivNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglGetMapAttribParameterivNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglEvalMapsNV()V",
        "Lorg/lwjgl/opengl/NVEvaluators;->nglGetMapControlPointsNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTSecondaryColor;": [
        "Lorg/lwjgl/opengl/EXTSecondaryColor;->nglSecondaryColor3ubEXT()V",
        "Lorg/lwjgl/opengl/EXTSecondaryColor;->nglSecondaryColor3dEXT()V",
        "Lorg/lwjgl/opengl/EXTSecondaryColor;->nglSecondaryColor3fEXT()V",
        "Lorg/lwjgl/opengl/EXTSecondaryColor;->nglSecondaryColor3bEXT()V",
        "Lorg/lwjgl/opengl/EXTSecondaryColor;->nglSecondaryColorPointerEXTBO()V",
        "Lorg/lwjgl/opengl/EXTSecondaryColor;->nglSecondaryColorPointerEXT()V"
    ],
    "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;": [
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglGetVertexAttribLui64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL1i64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribLFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL1ui64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL4ui64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL2ui64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL3i64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL2i64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglGetVertexAttribLi64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL3ui64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL4i64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL4ui64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL2ui64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL4i64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL2i64NV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL1ui64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL3ui64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL3i64vNV()V",
        "Lorg/lwjgl/opengl/NVVertexAttribInteger64bit;->nglVertexAttribL1i64vNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTDrawInstanced;": [
        "Lorg/lwjgl/opengl/EXTDrawInstanced;->nglDrawArraysInstancedEXT()V",
        "Lorg/lwjgl/opengl/EXTDrawInstanced;->nglDrawElementsInstancedEXTBO()V",
        "Lorg/lwjgl/opengl/EXTDrawInstanced;->nglDrawElementsInstancedEXT()V"
    ],
    "Lorg/lwjgl/opengl/LinuxPbufferPeerInfo;": [
        "Lorg/lwjgl/opengl/LinuxPbufferPeerInfo;->nDestroy()V",
        "Lorg/lwjgl/opengl/LinuxPbufferPeerInfo;->nInitHandle()V",
        "Lorg/lwjgl/opengl/LinuxPbufferPeerInfo;->getHandle()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengl/BaseReferences;": [
        "Lorg/lwjgl/opengl/BaseReferences;->clear()V",
        "Lorg/lwjgl/opengl/BaseReferences;->copy()V"
    ],
    "Lorg/lwjgl/opengl/ATIVertexAttribArrayObject;": [
        "Lorg/lwjgl/opengl/ATIVertexAttribArrayObject;->nglGetVertexAttribArrayObjectivATI()V",
        "Lorg/lwjgl/opengl/ATIVertexAttribArrayObject;->nglGetVertexAttribArrayObjectfvATI()V",
        "Lorg/lwjgl/opengl/ATIVertexAttribArrayObject;->nglVertexAttribArrayObjectATI()V"
    ],
    "Lorg/lwjgl/opengl/ARBProgram;": [
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramLocalParameter4dvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglIsProgramARB()Z",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGetProgramStringARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramStringARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGenProgramsARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGetProgramLocalParameterdvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramLocalParameter4fARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramEnvParameter4fvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramEnvParameter4dARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGetProgramEnvParameterdvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglDeleteProgramsARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGetProgramLocalParameterfvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramEnvParameter4dvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->glGetProgramARB()I",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGetProgramEnvParameterfvARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramEnvParameter4fARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramLocalParameter4dARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglGetProgramivARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglBindProgramARB()V",
        "Lorg/lwjgl/opengl/ARBProgram;->nglProgramLocalParameter4fvARB()V"
    ],
    "Lorg/lwjgl/opengl/EXTFramebufferMultisample;": [
        "Lorg/lwjgl/opengl/EXTFramebufferMultisample;->nglRenderbufferStorageMultisampleEXT()V"
    ],
    "Lorg/lwjgl/opengl/AMDDebugOutput;": [
        "Lorg/lwjgl/opengl/AMDDebugOutput;->nglDebugMessageEnableAMD()V",
        "Lorg/lwjgl/opengl/AMDDebugOutput;->nglDebugMessageCallbackAMD()V",
        "Lorg/lwjgl/opengl/AMDDebugOutput;->nglGetDebugMessageLogAMD()I",
        "Lorg/lwjgl/opengl/AMDDebugOutput;->nglDebugMessageInsertAMD()V"
    ],
    "Lorg/lwjgl/opengl/AMDDebugOutputCallback;": [
        "Lorg/lwjgl/opengl/AMDDebugOutputCallback;->getPointer()J",
        "Lorg/lwjgl/opengl/AMDDebugOutputCallback;->getHandler()Lorg/lwjgl/opengl/AMDDebugOutputCallback$Handler;"
    ],
    "Lorg/lwjgl/opengl/EXTVertexShader;": [
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantivEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglSwizzleEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglShaderOp3EXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantPointerEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBindMaterialParameterEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantfvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantPointerEXTBO()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGenSymbolsEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglShaderOp2EXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglExtractComponentEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglIsVariantEnabledEXT()Z",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglSetLocalConstantEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetInvariantFloatvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglSetInvariantEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBindParameterEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetInvariantBooleanvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglDeleteVertexShaderEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBindTexGenParameterEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetInvariantIntegervEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetLocalConstantIntegervEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantusvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantdvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetVariantIntegervEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetLocalConstantBooleanvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBeginVertexShaderEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantubvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetVariantBooleanvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBindTextureUnitParameterEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglWriteMaskEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglEndVertexShaderEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetLocalConstantFloatvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBindLightParameterEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglShaderOp1EXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantbvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetVariantFloatvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantsvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglBindVertexShaderEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglDisableVariantClientStateEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglInsertComponentEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGenVertexShadersEXT()I",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglVariantuivEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglEnableVariantClientStateEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexShader;->nglGetVariantPointervEXT()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengl/ATIEnvmapBumpmap;": [
        "Lorg/lwjgl/opengl/ATIEnvmapBumpmap;->nglTexBumpParameterfvATI()V",
        "Lorg/lwjgl/opengl/ATIEnvmapBumpmap;->nglTexBumpParameterivATI()V",
        "Lorg/lwjgl/opengl/ATIEnvmapBumpmap;->nglGetTexBumpParameterfvATI()V",
        "Lorg/lwjgl/opengl/ATIEnvmapBumpmap;->nglGetTexBumpParameterivATI()V"
    ],
    "Lorg/lwjgl/opengl/EXTBlendFuncSeparate;": [
        "Lorg/lwjgl/opengl/EXTBlendFuncSeparate;->nglBlendFuncSeparateEXT()V"
    ],
    "Lorg/lwjgl/opengl/NVPresentVideoUtil;": [
        "Lorg/lwjgl/opengl/NVPresentVideoUtil;->nglEnumerateVideoDevicesNV()I",
        "Lorg/lwjgl/opengl/NVPresentVideoUtil;->nglBindVideoDeviceNV()Z",
        "Lorg/lwjgl/opengl/NVPresentVideoUtil;->checkExtension()V",
        "Lorg/lwjgl/opengl/NVPresentVideoUtil;->getPeerInfo()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/NVPresentVideoUtil;->nglQueryContextNV()Z"
    ],
    "Lorg/lwjgl/opengl/NVProgram;": [
        "Lorg/lwjgl/opengl/NVProgram;->nglBindProgramNV()V",
        "Lorg/lwjgl/opengl/NVProgram;->nglLoadProgramNV()V",
        "Lorg/lwjgl/opengl/NVProgram;->nglDeleteProgramsNV()V",
        "Lorg/lwjgl/opengl/NVProgram;->nglGenProgramsNV()V",
        "Lorg/lwjgl/opengl/NVProgram;->nglAreProgramsResidentNV()Z",
        "Lorg/lwjgl/opengl/NVProgram;->glGetProgramNV()I",
        "Lorg/lwjgl/opengl/NVProgram;->nglGetProgramivNV()V",
        "Lorg/lwjgl/opengl/NVProgram;->nglIsProgramNV()Z",
        "Lorg/lwjgl/opengl/NVProgram;->nglGetProgramStringNV()V",
        "Lorg/lwjgl/opengl/NVProgram;->nglRequestResidentProgramsNV()V"
    ],
    "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;": [
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglVertexFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglGetIntegerui64i_vNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglEdgeFlagFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglTexCoordFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglIndexFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglVertexAttribIFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglFogCoordFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglSecondaryColorFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglColorFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglNormalFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglVertexAttribFormatNV()V",
        "Lorg/lwjgl/opengl/NVVertexBufferUnifiedMemory;->nglBufferAddressRangeNV()V"
    ],
    "Lorg/lwjgl/opengl/LinuxCanvasImplementation;": [
        "Lorg/lwjgl/opengl/LinuxCanvasImplementation;->getVisualIDFromConfiguration()I",
        "Lorg/lwjgl/opengl/LinuxCanvasImplementation;->nFindVisualIDFromFormat()I",
        "Lorg/lwjgl/opengl/LinuxCanvasImplementation;->findVisualIDFromFormat()I",
        "Lorg/lwjgl/opengl/LinuxCanvasImplementation;->getScreenFromDevice()I"
    ],
    "Lorg/lwjgl/opengl/EXTPalettedTexture;": [
        "Lorg/lwjgl/opengl/EXTPalettedTexture;->nglGetColorTableParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTPalettedTexture;->nglGetColorTableParameterfvEXT()V",
        "Lorg/lwjgl/opengl/EXTPalettedTexture;->nglColorSubTableEXT()V",
        "Lorg/lwjgl/opengl/EXTPalettedTexture;->nglGetColorTableEXT()V",
        "Lorg/lwjgl/opengl/EXTPalettedTexture;->nglColorTableEXT()V"
    ],
    "Lorg/lwjgl/opengl/ARBRobustness;": [
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnPixelMapusvARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnSeparableFilterARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnMapdvARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnPixelMapuivARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnUniformuivARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnMinmaxARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnHistogramARBBO()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglReadnPixelsARBBO()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglReadnPixelsARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetGraphicsResetStatusARB()I",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnUniformdvARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnMapivARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnSeparableFilterARBBO()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnPixelMapfvARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnTexImageARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnCompressedTexImageARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnUniformivARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnConvolutionFilterARBBO()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnMapfvARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnPolygonStippleARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnHistogramARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnConvolutionFilterARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnColorTableARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnTexImageARBBO()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnMinmaxARBBO()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnUniformfvARB()V",
        "Lorg/lwjgl/opengl/ARBRobustness;->nglGetnCompressedTexImageARBBO()V"
    ],
    "Lorg/lwjgl/opengl/ARBShaderObjects;": [
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglAttachObjectARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglCreateShaderObjectARB()I",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetUniformLocationARB()I",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetActiveUniformARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetObjectParameterivARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform1fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform4fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUseProgramObjectARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform2ivARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniformMatrix4fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetObjectParameterfvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform1ivARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglShaderSourceARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniformMatrix2fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglShaderSourceARB3()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetHandleARB()I",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglValidateProgramARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetShaderSourceARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetUniformfvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform2fARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform3fARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetInfoLogARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform4fARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniformMatrix3fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform1fARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform3iARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform2iARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglCompileShaderARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetAttachedObjectsARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglLinkProgramARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglDetachObjectARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform4iARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglDeleteObjectARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform3fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform2fvARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglCreateProgramObjectARB()I",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform1iARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglGetUniformivARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform3ivARB()V",
        "Lorg/lwjgl/opengl/ARBShaderObjects;->nglUniform4ivARB()V"
    ],
    "Lorg/lwjgl/opengl/APPLEElementArray;": [
        "Lorg/lwjgl/opengl/APPLEElementArray;->nglDrawElementArrayAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEElementArray;->nglDrawRangeElementArrayAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEElementArray;->nglMultiDrawElementArrayAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEElementArray;->nglElementPointerAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEElementArray;->nglMultiDrawRangeElementArrayAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/NVPointSprite;": [
        "Lorg/lwjgl/opengl/NVPointSprite;->nglPointParameterivNV()V",
        "Lorg/lwjgl/opengl/NVPointSprite;->nglPointParameteriNV()V"
    ],
    "Lorg/lwjgl/opengl/ATIMapObjectBuffer;": [
        "Lorg/lwjgl/opengl/ATIMapObjectBuffer;->nglUnmapObjectBufferATI()V",
        "Lorg/lwjgl/opengl/ATIMapObjectBuffer;->nglMapObjectBufferATI()Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opengles/Util;": [
        "Lorg/lwjgl/opengles/Util;->checkGLError()V"
    ],
    "Lorg/lwjgl/opengl/DrawableGLES;": [
        "Lorg/lwjgl/opengl/DrawableGLES;->createContext()V",
        "Lorg/lwjgl/opengl/DrawableGLES;->checkDestroyed()V",
        "Lorg/lwjgl/opengl/DrawableGLES;->getContext()Lorg/lwjgl/opengl/ContextGLES;",
        "Lorg/lwjgl/opengl/DrawableGLES;->getEGLSurface()Lorg/lwjgl/opengles/EGLSurface;",
        "Lorg/lwjgl/opengl/DrawableGLES;->setPixelFormat()V",
        "Lorg/lwjgl/opengl/DrawableGLES;->destroy()V",
        "Lorg/lwjgl/opengl/DrawableGLES;->releaseContext()V",
        "Lorg/lwjgl/opengl/DrawableGLES;->getEGLConfig()Lorg/lwjgl/opengles/EGLConfig;",
        "Lorg/lwjgl/opengl/DrawableGLES;->getEGLDisplay()Lorg/lwjgl/opengles/EGLDisplay;"
    ],
    "Lorg/lwjgl/opengl/ContextGLES;": [
        "Lorg/lwjgl/opengl/ContextGLES;->checkDestroy()V",
        "Lorg/lwjgl/opengl/ContextGLES;->checkAccess()V",
        "Lorg/lwjgl/opengl/ContextGLES;->isCurrent()Z",
        "Lorg/lwjgl/opengl/ContextGLES;->canAccess()Z",
        "Lorg/lwjgl/opengl/ContextGLES;->releaseCurrent()V",
        "Lorg/lwjgl/opengl/ContextGLES;->swapBuffers()V",
        "Lorg/lwjgl/opengl/ContextGLES;->getContextAttribs()Lorg/lwjgl/opengles/ContextAttribs;",
        "Lorg/lwjgl/opengl/ContextGLES;->getCurrentContext()Lorg/lwjgl/opengl/ContextGLES;",
        "Lorg/lwjgl/opengl/ContextGLES;->destroy()V",
        "Lorg/lwjgl/opengl/ContextGLES;->setSwapInterval()V",
        "Lorg/lwjgl/opengl/ContextGLES;->makeCurrent()V",
        "Lorg/lwjgl/opengl/ContextGLES;->getEGLContext()Lorg/lwjgl/opengles/EGLContext;",
        "Lorg/lwjgl/opengl/ContextGLES;->forceDestroy()V"
    ],
    "Lorg/lwjgl/opengles/EGLSurface;": [
        "Lorg/lwjgl/opengles/EGLSurface;->destroy()V",
        "Lorg/lwjgl/opengles/EGLSurface;->swapBuffers()V"
    ],
    "Lorg/lwjgl/opengles/EGLDisplay;": [
        "Lorg/lwjgl/opengles/EGLDisplay;->terminate()V",
        "Lorg/lwjgl/opengles/EGLDisplay;->setSwapInterval()V",
        "Lorg/lwjgl/opengles/EGLDisplay;->createContext()Lorg/lwjgl/opengles/EGLContext;",
        "Lorg/lwjgl/opengles/EGLDisplay;->createWindowSurface()Lorg/lwjgl/opengles/EGLSurface;",
        "Lorg/lwjgl/opengles/EGLDisplay;->chooseConfig()[Lorg/lwjgl/opengles/EGLConfig;"
    ],
    "Lorg/lwjgl/opengles/GLES20;": [
        "Lorg/lwjgl/opengles/GLES20;->glClearColor()V",
        "Lorg/lwjgl/opengles/GLES20;->glGetError()I",
        "Lorg/lwjgl/opengles/GLES20;->glClear()V"
    ],
    "Lorg/lwjgl/opengles/EGL;": [
        "Lorg/lwjgl/opengles/EGL;->eglReleaseCurrent()V",
        "Lorg/lwjgl/opengles/EGL;->eglIsCurrentContext()Z",
        "Lorg/lwjgl/opengles/EGL;->eglGetDisplay()Lorg/lwjgl/opengles/EGLDisplay;"
    ],
    "Lorg/lwjgl/opengles/PixelFormat;": [
        "Lorg/lwjgl/opengles/PixelFormat;->getBestMatch()Lorg/lwjgl/opengles/EGLConfig;",
        "Lorg/lwjgl/opengles/PixelFormat;->getAttribBuffer()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/opengles/PixelFormat;->setSurfaceAttribs()V"
    ],
    "Lorg/lwjgl/opengles/EGLContext;": [
        "Lorg/lwjgl/opengles/EGLContext;->destroy()V",
        "Lorg/lwjgl/opengles/EGLContext;->makeCurrent()V",
        "Lorg/lwjgl/opengles/EGLContext;->setDisplay()V"
    ],
    "Lorg/lwjgl/opengl/GL20;": [
        "Lorg/lwjgl/opengl/GL20;->glLinkProgram()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform1f()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetVertexAttribPointerv()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/GL20;->nglIsProgram()Z",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib4d()V",
        "Lorg/lwjgl/opengl/GL20;->glGetProgramInfoLog()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform1iv()V",
        "Lorg/lwjgl/opengl/GL20;->nglIsShader()Z",
        "Lorg/lwjgl/opengl/GL20;->nglUniform2i()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform4f()V",
        "Lorg/lwjgl/opengl/GL20;->nglAttachShader()V",
        "Lorg/lwjgl/opengl/GL20;->glVertexAttrib3f()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib1f()V",
        "Lorg/lwjgl/opengl/GL20;->nglLinkProgram()V",
        "Lorg/lwjgl/opengl/GL20;->glValidateProgram()V",
        "Lorg/lwjgl/opengl/GL20;->glUniformMatrix3()V",
        "Lorg/lwjgl/opengl/GL20;->glGetVertexAttrib()V",
        "Lorg/lwjgl/opengl/GL20;->glGetShader()V",
        "Lorg/lwjgl/opengl/GL20;->glGetActiveUniform()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL20;->glUniform1i()V",
        "Lorg/lwjgl/opengl/GL20;->glCompileShader()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform1()V",
        "Lorg/lwjgl/opengl/GL20;->nglUseProgram()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetProgramiv()V",
        "Lorg/lwjgl/opengl/GL20;->glGetAttachedShaders()V",
        "Lorg/lwjgl/opengl/GL20;->glUniformMatrix2()V",
        "Lorg/lwjgl/opengl/GL20;->glGetActiveAttrib()Ljava/lang/String;",
        "Lorg/lwjgl/opengl/GL20;->glUniform3f()V",
        "Lorg/lwjgl/opengl/GL20;->glIsProgram()Z",
        "Lorg/lwjgl/opengl/GL20;->nglUniform3i()V",
        "Lorg/lwjgl/opengl/GL20;->glAttachShader()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform3fv()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform1i()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform3()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetAttribLocation()I",
        "Lorg/lwjgl/opengl/GL20;->nglGetVertexAttribdv()V",
        "Lorg/lwjgl/opengl/GL20;->glUniformMatrix4()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform2fv()V",
        "Lorg/lwjgl/opengl/GL20;->glShaderSource()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetActiveAttrib()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform2i()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttribPointer()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform2f()V",
        "Lorg/lwjgl/opengl/GL20;->nglBlendEquationSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->glDeleteProgram()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform4f()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform4()V",
        "Lorg/lwjgl/opengl/GL20;->nglDisableVertexAttribArray()V",
        "Lorg/lwjgl/opengl/GL20;->glIsShader()Z",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib2d()V",
        "Lorg/lwjgl/opengl/GL20;->glBlendEquationSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetActiveUniform()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform4fv()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib4f()V",
        "Lorg/lwjgl/opengl/GL20;->glGetAttribLocation()I",
        "Lorg/lwjgl/opengl/GL20;->glStencilFuncSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetUniformLocation()I",
        "Lorg/lwjgl/opengl/GL20;->nglUniform1fv()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform1f()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniformMatrix2fv()V",
        "Lorg/lwjgl/opengl/GL20;->nglValidateProgram()V",
        "Lorg/lwjgl/opengl/GL20;->nglStencilMaskSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniformMatrix4fv()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttribPointerBO()V",
        "Lorg/lwjgl/opengl/GL20;->glGetProgram()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetUniformiv()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetShaderiv()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib4Nub()V",
        "Lorg/lwjgl/opengl/GL20;->nglShaderSource3()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform4i()V",
        "Lorg/lwjgl/opengl/GL20;->nglDetachShader()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetAttachedShaders()V",
        "Lorg/lwjgl/opengl/GL20;->glVertexAttrib2f()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetUniformfv()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform3f()V",
        "Lorg/lwjgl/opengl/GL20;->glVertexAttrib4f()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetVertexAttribiv()V",
        "Lorg/lwjgl/opengl/GL20;->glVertexAttrib1f()V",
        "Lorg/lwjgl/opengl/GL20;->nglCompileShader()V",
        "Lorg/lwjgl/opengl/GL20;->nglDeleteShader()V",
        "Lorg/lwjgl/opengl/GL20;->glBindAttribLocation()V",
        "Lorg/lwjgl/opengl/GL20;->nglEnableVertexAttribArray()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform4iv()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib1s()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetShaderSource()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib3d()V",
        "Lorg/lwjgl/opengl/GL20;->nglStencilFuncSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->glStencilOpSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->glEnableVertexAttribArray()V",
        "Lorg/lwjgl/opengl/GL20;->glStencilMaskSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->nglStencilOpSeparate()V",
        "Lorg/lwjgl/opengl/GL20;->glUseProgram()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib4s()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform2f()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform2()V",
        "Lorg/lwjgl/opengl/GL20;->glGetShaderInfoLog()V",
        "Lorg/lwjgl/opengl/GL20;->nglCreateShader()I",
        "Lorg/lwjgl/opengl/GL20;->nglCreateProgram()I",
        "Lorg/lwjgl/opengl/GL20;->nglUniformMatrix3fv()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetProgramInfoLog()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetShaderInfoLog()V",
        "Lorg/lwjgl/opengl/GL20;->glGetUniformLocation()I",
        "Lorg/lwjgl/opengl/GL20;->nglDrawBuffers()V",
        "Lorg/lwjgl/opengl/GL20;->glVertexAttribPointer()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib2f()V",
        "Lorg/lwjgl/opengl/GL20;->nglShaderSource()V",
        "Lorg/lwjgl/opengl/GL20;->glUniform3i()V",
        "Lorg/lwjgl/opengl/GL20;->glCreateShader()I",
        "Lorg/lwjgl/opengl/GL20;->glDisableVertexAttribArray()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform4i()V",
        "Lorg/lwjgl/opengl/GL20;->glGetUniform()V",
        "Lorg/lwjgl/opengl/GL20;->nglDeleteProgram()V",
        "Lorg/lwjgl/opengl/GL20;->nglBindAttribLocation()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform3iv()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib1d()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib3f()V",
        "Lorg/lwjgl/opengl/GL20;->glDetachShader()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib2s()V",
        "Lorg/lwjgl/opengl/GL20;->glDeleteShader()V",
        "Lorg/lwjgl/opengl/GL20;->nglVertexAttrib3s()V",
        "Lorg/lwjgl/opengl/GL20;->nglGetVertexAttribfv()V",
        "Lorg/lwjgl/opengl/GL20;->nglUniform2iv()V",
        "Lorg/lwjgl/opengl/GL20;->glCreateProgram()I"
    ],
    "Ljava/awt/EventQueue;": [
        "Ljava/awt/EventQueue;->invokeLater()V"
    ],
    "Lorg/lwjgl/opengl/EXTBlendColor;": [
        "Lorg/lwjgl/opengl/EXTBlendColor;->nglBlendColorEXT()V"
    ],
    "Lorg/lwjgl/opengl/EXTVertexWeighting;": [
        "Lorg/lwjgl/opengl/EXTVertexWeighting;->nglVertexWeightPointerEXTBO()V",
        "Lorg/lwjgl/opengl/EXTVertexWeighting;->nglVertexWeightfEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexWeighting;->nglVertexWeightPointerEXT()V"
    ],
    "Lorg/lwjgl/opengl/ATIVertexStreams;": [
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream3fATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream4sATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglNormalStream3dATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream3iATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglNormalStream3fATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream2fATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexBlendEnvfATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream4iATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexBlendEnviATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglNormalStream3bATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream2iATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglClientActiveVertexStreamATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream3sATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglNormalStream3iATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream3dATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream4dATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream4fATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream2dATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglNormalStream3sATI()V",
        "Lorg/lwjgl/opengl/ATIVertexStreams;->nglVertexStream2sATI()V"
    ],
    "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;": [
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglGetVertexAttribLdvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL4dEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL2dvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribLPointerEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL1dvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL2dEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL3dvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL3dEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL4dvEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribL1dEXT()V",
        "Lorg/lwjgl/opengl/EXTVertexAttrib64bit;->nglVertexAttribLPointerEXTBO()V"
    ],
    "Lorg/lwjgl/opengl/NVFence;": [
        "Lorg/lwjgl/opengl/NVFence;->nglDeleteFencesNV()V",
        "Lorg/lwjgl/opengl/NVFence;->nglGetFenceivNV()V",
        "Lorg/lwjgl/opengl/NVFence;->nglTestFenceNV()Z",
        "Lorg/lwjgl/opengl/NVFence;->nglIsFenceNV()Z",
        "Lorg/lwjgl/opengl/NVFence;->nglGenFencesNV()V",
        "Lorg/lwjgl/opengl/NVFence;->nglFinishFenceNV()V",
        "Lorg/lwjgl/opengl/NVFence;->nglSetFenceNV()V"
    ],
    "Lorg/lwjgl/opengles/ContextAttribs;": [
        "Lorg/lwjgl/opengles/ContextAttribs;->getAttribList()Ljava/nio/IntBuffer;"
    ],
    "Lorg/lwjgl/opengl/ATIDrawBuffers;": [
        "Lorg/lwjgl/opengl/ATIDrawBuffers;->nglDrawBuffersATI()V"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->isEmpty()Z",
        "Ljava/util/HashSet;->clear()V",
        "Ljava/util/HashSet;->addAll()Z",
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->remove()Z",
        "Ljava/util/HashSet;->contains()Z",
        "Ljava/util/HashSet;->size()I",
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->toArray()[Ljava/lang/Object;"
    ],
    "Lorg/lwjgl/input/Controllers;": [
        "Lorg/lwjgl/input/Controllers;->getController()Lorg/lwjgl/input/Controller;",
        "Lorg/lwjgl/input/Controllers;->isCreated()Z",
        "Lorg/lwjgl/input/Controllers;->addEvent()V",
        "Lorg/lwjgl/input/Controllers;->poll()V",
        "Lorg/lwjgl/input/Controllers;->createController()V"
    ],
    "Lorg/lwjgl/opengl/ARBInstancedArrays;": [
        "Lorg/lwjgl/opengl/ARBInstancedArrays;->nglVertexAttribDivisorARB()V"
    ],
    "Lorg/lwjgl/opengl/References;": [
        "Lorg/lwjgl/opengl/References;->clear()V",
        "Lorg/lwjgl/opengl/References;->copy()V"
    ],
    "Lorg/lwjgl/opengl/NVGpuProgram4;": [
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramLocalParameterI4iNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglGetProgramEnvParameterIivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramEnvParameterI4ivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramEnvParameterI4uivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramEnvParametersI4ivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramLocalParametersI4ivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramLocalParametersI4uivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramLocalParameterI4uiNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglGetProgramEnvParameterIuivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglGetProgramLocalParameterIuivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramEnvParameterI4uiNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramLocalParameterI4ivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramEnvParametersI4uivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramLocalParameterI4uivNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglProgramEnvParameterI4iNV()V",
        "Lorg/lwjgl/opengl/NVGpuProgram4;->nglGetProgramLocalParameterIivNV()V"
    ],
    "Lorg/lwjgl/opengl/ARBMatrixPalette;": [
        "Lorg/lwjgl/opengl/ARBMatrixPalette;->nglMatrixIndexusvARB()V",
        "Lorg/lwjgl/opengl/ARBMatrixPalette;->nglMatrixIndexubvARB()V",
        "Lorg/lwjgl/opengl/ARBMatrixPalette;->nglCurrentPaletteMatrixARB()V",
        "Lorg/lwjgl/opengl/ARBMatrixPalette;->nglMatrixIndexPointerARBBO()V",
        "Lorg/lwjgl/opengl/ARBMatrixPalette;->nglMatrixIndexuivARB()V",
        "Lorg/lwjgl/opengl/ARBMatrixPalette;->nglMatrixIndexPointerARB()V"
    ],
    "Lorg/lwjgl/opengl/NVVertexProgram;": [
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs2svNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglProgramParameters4dvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribPointerNVBO()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs2dvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib4ubNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib2sNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib4sNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglProgramParameter4fNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs3dvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetVertexAttribivNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglProgramParameters4fvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs3svNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetVertexAttribPointervNV()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib1sNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs4dvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib1dNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetVertexAttribdvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs2fvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglTrackMatrixNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetTrackMatrixivNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib3fNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs3fvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglExecuteProgramNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetVertexAttribfvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs1fvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs4svNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib4fNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglProgramParameter4dNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetProgramParameterfvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib2fNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib1fNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglGetProgramParameterdvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib3sNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribPointerNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs1dvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs1svNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib2dNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib3dNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttribs4fvNV()V",
        "Lorg/lwjgl/opengl/NVVertexProgram;->nglVertexAttrib4dNV()V"
    ],
    "Lorg/lwjgl/opengl/EXTBlendEquationSeparate;": [
        "Lorg/lwjgl/opengl/EXTBlendEquationSeparate;->nglBlendEquationSeparateEXT()V"
    ],
    "Lorg/lwjgl/opengl/AMDNameGenDelete;": [
        "Lorg/lwjgl/opengl/AMDNameGenDelete;->nglIsNameAMD()Z",
        "Lorg/lwjgl/opengl/AMDNameGenDelete;->nglDeleteNamesAMD()V",
        "Lorg/lwjgl/opengl/AMDNameGenDelete;->nglGenNamesAMD()V"
    ],
    "Lorg/lwjgl/opengl/NVTextureMultisample;": [
        "Lorg/lwjgl/opengl/NVTextureMultisample;->nglTextureImage2DMultisampleNV()V",
        "Lorg/lwjgl/opengl/NVTextureMultisample;->nglTextureImage3DMultisampleCoverageNV()V",
        "Lorg/lwjgl/opengl/NVTextureMultisample;->nglTexImage2DMultisampleCoverageNV()V",
        "Lorg/lwjgl/opengl/NVTextureMultisample;->nglTextureImage2DMultisampleCoverageNV()V",
        "Lorg/lwjgl/opengl/NVTextureMultisample;->nglTexImage3DMultisampleCoverageNV()V",
        "Lorg/lwjgl/opengl/NVTextureMultisample;->nglTextureImage3DMultisampleNV()V"
    ],
    "Lorg/lwjgl/opengl/NVTransformFeedback2;": [
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglIsTransformFeedbackNV()Z",
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglPauseTransformFeedbackNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglBindTransformFeedbackNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglDeleteTransformFeedbacksNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglDrawTransformFeedbackNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglResumeTransformFeedbackNV()V",
        "Lorg/lwjgl/opengl/NVTransformFeedback2;->nglGenTransformFeedbacksNV()V"
    ],
    "Lorg/lwjgl/opengl/ARBMultisample;": [
        "Lorg/lwjgl/opengl/ARBMultisample;->nglSampleCoverageARB()V"
    ],
    "Lorg/lwjgl/opengl/ARBTextureCompression;": [
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexImage1DARBBO()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglGetCompressedTexImageARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexImage3DARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexSubImage2DARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexImage1DARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexImage2DARBBO()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexSubImage3DARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexImage2DARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexSubImage1DARB()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexImage3DARBBO()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexSubImage1DARBBO()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexSubImage2DARBBO()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglCompressedTexSubImage3DARBBO()V",
        "Lorg/lwjgl/opengl/ARBTextureCompression;->nglGetCompressedTexImageARBBO()V"
    ],
    "Lorg/lwjgl/opengl/EXTFramebufferObject;": [
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglGenerateMipmapEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glBindFramebufferEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glFramebufferTexture2DEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glIsFramebufferEXT()Z",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glDeleteRenderbuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glGenerateMipmapEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglFramebufferTexture2DEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglDeleteFramebuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glBindRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglCheckFramebufferStatusEXT()I",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglFramebufferTexture3DEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglBindRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glCheckFramebufferStatusEXT()I",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglGetRenderbufferParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglFramebufferRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glFramebufferRenderbufferEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glGenFramebuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglIsFramebufferEXT()Z",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglFramebufferTexture1DEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glDeleteFramebuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglBindFramebufferEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glGenRenderbuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glIsRenderbufferEXT()Z",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglGenRenderbuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glGetRenderbufferParameterEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglGenFramebuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglGetFramebufferAttachmentParameterivEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glGetFramebufferAttachmentParameterEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->glRenderbufferStorageEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglRenderbufferStorageEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglDeleteRenderbuffersEXT()V",
        "Lorg/lwjgl/opengl/EXTFramebufferObject;->nglIsRenderbufferEXT()Z"
    ],
    "Lorg/lwjgl/opengl/APPLEVertexArrayObject;": [
        "Lorg/lwjgl/opengl/APPLEVertexArrayObject;->nglBindVertexArrayAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexArrayObject;->nglGenVertexArraysAPPLE()V",
        "Lorg/lwjgl/opengl/APPLEVertexArrayObject;->nglIsVertexArrayAPPLE()Z",
        "Lorg/lwjgl/opengl/APPLEVertexArrayObject;->nglDeleteVertexArraysAPPLE()V"
    ],
    "Lorg/lwjgl/opengl/WindowsAWTGLCanvasPeerInfo;": [
        "Lorg/lwjgl/opengl/WindowsAWTGLCanvasPeerInfo;->getHdc()J",
        "Lorg/lwjgl/opengl/WindowsAWTGLCanvasPeerInfo;->setPixelFormat()V",
        "Lorg/lwjgl/opengl/WindowsAWTGLCanvasPeerInfo;->nInitHandle()V",
        "Lorg/lwjgl/opengl/WindowsAWTGLCanvasPeerInfo;->getHandle()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opengl/WindowsAWTGLCanvasPeerInfo;->choosePixelFormat()I"
    ],
    "Lorg/lwjgl/opengl/GL21;": [
        "Lorg/lwjgl/opengl/GL21;->nglUniformMatrix2x4fv()V",
        "Lorg/lwjgl/opengl/GL21;->nglUniformMatrix2x3fv()V",
        "Lorg/lwjgl/opengl/GL21;->nglUniformMatrix3x2fv()V",
        "Lorg/lwjgl/opengl/GL21;->nglUniformMatrix4x2fv()V",
        "Lorg/lwjgl/opengl/GL21;->nglUniformMatrix3x4fv()V",
        "Lorg/lwjgl/opengl/GL21;->nglUniformMatrix4x3fv()V"
    ],
    "Lorg/lwjgl/opengl/ARBSampleShading;": [
        "Lorg/lwjgl/opengl/ARBSampleShading;->nglMinSampleShadingARB()V"
    ],
    "Lorg/lwjgl/opengl/NVDepthBufferFloat;": [
        "Lorg/lwjgl/opengl/NVDepthBufferFloat;->nglClearDepthdNV()V",
        "Lorg/lwjgl/opengl/NVDepthBufferFloat;->nglDepthRangedNV()V",
        "Lorg/lwjgl/opengl/NVDepthBufferFloat;->nglDepthBoundsdNV()V"
    ],
    "Lorg/lwjgl/input/OpenGLPackageAccess;": [
        "Lorg/lwjgl/input/OpenGLPackageAccess;->createImplementation()Lorg/lwjgl/opengl/InputImplementation;"
    ],
    "Lorg/lwjgl/opengl/InputImplementation;": [
        "Lorg/lwjgl/opengl/InputImplementation;->readMouse()V",
        "Lorg/lwjgl/opengl/InputImplementation;->getNativeCursorCapabilities()I",
        "Lorg/lwjgl/opengl/InputImplementation;->destroyMouse()V",
        "Lorg/lwjgl/opengl/InputImplementation;->setNativeCursor()V",
        "Lorg/lwjgl/opengl/InputImplementation;->isInsideWindow()Z",
        "Lorg/lwjgl/opengl/InputImplementation;->pollMouse()V",
        "Lorg/lwjgl/opengl/InputImplementation;->setCursorPosition()V",
        "Lorg/lwjgl/opengl/InputImplementation;->createKeyboard()V",
        "Lorg/lwjgl/opengl/InputImplementation;->destroyKeyboard()V",
        "Lorg/lwjgl/opengl/InputImplementation;->destroyCursor()V",
        "Lorg/lwjgl/opengl/InputImplementation;->pollKeyboard()V",
        "Lorg/lwjgl/opengl/InputImplementation;->grabMouse()V",
        "Lorg/lwjgl/opengl/InputImplementation;->createCursor()Ljava/lang/Object;",
        "Lorg/lwjgl/opengl/InputImplementation;->hasWheel()Z",
        "Lorg/lwjgl/opengl/InputImplementation;->createMouse()V",
        "Lorg/lwjgl/opengl/InputImplementation;->getMinCursorSize()I",
        "Lorg/lwjgl/opengl/InputImplementation;->getButtonCount()I",
        "Lorg/lwjgl/opengl/InputImplementation;->getMaxCursorSize()I",
        "Lorg/lwjgl/opengl/InputImplementation;->readKeyboard()V"
    ],
    "Lorg/lwjgl/input/Keyboard$KeyEvent;": [
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$202()Z",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$500()I",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$300()I",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$200()Z",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$302()I",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$402()Z",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$100()V",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$400()Z",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$600()J",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$602()J",
        "Lorg/lwjgl/input/Keyboard$KeyEvent;->access$502()I"
    ],
    "Lnet/java/games/input/Controller;": [
        "Lnet/java/games/input/Controller;->getComponents()[Lnet/java/games/input/Component;",
        "Lnet/java/games/input/Controller;->getEventQueue()Lnet/java/games/input/EventQueue;",
        "Lnet/java/games/input/Controller;->getControllers()[Lnet/java/games/input/Controller;",
        "Lnet/java/games/input/Controller;->poll()Z",
        "Lnet/java/games/input/Controller;->getType()Lnet/java/games/input/Controller$Type;",
        "Lnet/java/games/input/Controller;->getName()Ljava/lang/String;"
    ],
    "Lnet/java/games/input/Component;": [
        "Lnet/java/games/input/Component;->getPollData()F",
        "Lnet/java/games/input/Component;->getName()Ljava/lang/String;",
        "Lnet/java/games/input/Component;->getIdentifier()Lnet/java/games/input/Component$Identifier;",
        "Lnet/java/games/input/Component;->getDeadZone()F"
    ],
    "Lorg/lwjgl/input/JInputController;": [
        "Lorg/lwjgl/input/JInputController;->setDeadZone()V",
        "Lorg/lwjgl/input/JInputController;->getAxisValue()F",
        "Lorg/lwjgl/input/JInputController;->getPovX()F",
        "Lorg/lwjgl/input/JInputController;->getPovY()F",
        "Lorg/lwjgl/input/JInputController;->getDeadZone()F"
    ],
    "Lnet/java/games/input/EventQueue;": [
        "Lnet/java/games/input/EventQueue;->getNextEvent()Z"
    ],
    "Lnet/java/games/input/ControllerEnvironment;": [
        "Lnet/java/games/input/ControllerEnvironment;->getDefaultEnvironment()Lnet/java/games/input/ControllerEnvironment;",
        "Lnet/java/games/input/ControllerEnvironment;->getControllers()[Lnet/java/games/input/Controller;"
    ],
    "Lorg/lwjgl/input/ControllerEvent;": [
        "Lorg/lwjgl/input/ControllerEvent;->getControlIndex()I",
        "Lorg/lwjgl/input/ControllerEvent;->isPovX()Z",
        "Lorg/lwjgl/input/ControllerEvent;->isButton()Z",
        "Lorg/lwjgl/input/ControllerEvent;->getTimeStamp()J",
        "Lorg/lwjgl/input/ControllerEvent;->isPovY()Z",
        "Lorg/lwjgl/input/ControllerEvent;->getSource()Lorg/lwjgl/input/Controller;",
        "Lorg/lwjgl/input/ControllerEvent;->isXAxis()Z",
        "Lorg/lwjgl/input/ControllerEvent;->isAxis()Z",
        "Lorg/lwjgl/input/ControllerEvent;->isYAxis()Z"
    ],
    "Lorg/lwjgl/input/Controller;": [
        "Lorg/lwjgl/input/Controller;->poll()V"
    ],
    "Lorg/lwjgl/input/Cursor;": [
        "Lorg/lwjgl/input/Cursor;->createCursors()[Lorg/lwjgl/input/Cursor$CursorElement;",
        "Lorg/lwjgl/input/Cursor;->getCapabilities()I",
        "Lorg/lwjgl/input/Cursor;->hasTimedOut()Z",
        "Lorg/lwjgl/input/Cursor;->nextCursor()V",
        "Lorg/lwjgl/input/Cursor;->setTimeout()V",
        "Lorg/lwjgl/input/Cursor;->flipImage()V",
        "Lorg/lwjgl/input/Cursor;->flipImages()V",
        "Lorg/lwjgl/input/Cursor;->getHandle()Ljava/lang/Object;",
        "Lorg/lwjgl/input/Cursor;->checkValid()V"
    ],
    "Lorg/lwjgl/opencl/CLPlatform;": [
        "Lorg/lwjgl/opencl/CLPlatform;->getInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/CLPlatform;->getPlatforms()Ljava/util/List;",
        "Lorg/lwjgl/opencl/CLPlatform;->registerCLDevices()V",
        "Lorg/lwjgl/opencl/CLPlatform;->getCLDeviceRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLPlatform;->getCapabilities()Ljava/lang/Object;",
        "Lorg/lwjgl/opencl/CLPlatform;->getDevices()Ljava/util/List;",
        "Lorg/lwjgl/opencl/CLPlatform;->registerCLPlatforms()V",
        "Lorg/lwjgl/opencl/CLPlatform;->checkValid()V",
        "Lorg/lwjgl/opencl/CLPlatform;->getInfoUtilInstance()Lorg/lwjgl/opencl/InfoUtil;",
        "Lorg/lwjgl/opencl/CLPlatform;->setCapabilities()V",
        "Lorg/lwjgl/opencl/CLPlatform;->getCLPlatform()Lorg/lwjgl/opencl/CLPlatform;",
        "Lorg/lwjgl/opencl/CLPlatform;->getPointer()J",
        "Lorg/lwjgl/opencl/CLPlatform;->isValid()Z"
    ],
    "Lorg/lwjgl/opencl/CLProgram;": [
        "Lorg/lwjgl/opencl/CLProgram;->getCLKernelRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLProgram;->getReferenceCount()I",
        "Lorg/lwjgl/opencl/CLProgram;->registerCLKernels()V",
        "Lorg/lwjgl/opencl/CLProgram;->release()I",
        "Lorg/lwjgl/opencl/CLProgram;->isValid()Z",
        "Lorg/lwjgl/opencl/CLProgram;->retain()I",
        "Lorg/lwjgl/opencl/CLProgram;->getPointer()J",
        "Lorg/lwjgl/opencl/CLProgram;->getParent()Lorg/lwjgl/opencl/CLObject;"
    ],
    "Lorg/lwjgl/opencl/CLObjectRegistry;": [
        "Lorg/lwjgl/opencl/CLObjectRegistry;->hasObject()Z",
        "Lorg/lwjgl/opencl/CLObjectRegistry;->getMap()Lorg/lwjgl/opencl/FastLongMap;",
        "Lorg/lwjgl/opencl/CLObjectRegistry;->unregisterObject()V",
        "Lorg/lwjgl/opencl/CLObjectRegistry;->isEmpty()Z",
        "Lorg/lwjgl/opencl/CLObjectRegistry;->getObject()Lorg/lwjgl/opencl/CLObjectChild;",
        "Lorg/lwjgl/opencl/CLObjectRegistry;->registerObject()V",
        "Lorg/lwjgl/opencl/CLObjectRegistry;->getAll()Ljava/lang/Iterable;"
    ],
    "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;": [
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getInfoBinaries()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getBuildInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->createKernelsInProgram()[Lorg/lwjgl/opencl/CLKernel;",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getInfoDevices()[Lorg/lwjgl/opencl/CLDevice;",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getInfoInt()I",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getInfoSizeArray()[J",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getBuildInfoInt()I",
        "Lorg/lwjgl/opencl/CLProgram$CLProgramUtil;->getInfoBinaries()[Ljava/nio/ByteBuffer;"
    ],
    "Lorg/lwjgl/opencl/CLObjectChild;": [
        "Lorg/lwjgl/opencl/CLObjectChild;->getPointer()J",
        "Lorg/lwjgl/opencl/CLObjectChild;->isValid()Z",
        "Lorg/lwjgl/opencl/CLObjectChild;->getPointerUnsafe()J",
        "Lorg/lwjgl/opencl/CLObjectChild;->release()I",
        "Lorg/lwjgl/opencl/CLObjectChild;->retain()I"
    ],
    "Lorg/lwjgl/opencl/APIUtil;": [
        "Lorg/lwjgl/opencl/APIUtil;->getBufferByteOffset()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getCLPlatform()Lorg/lwjgl/opencl/CLPlatform;",
        "Lorg/lwjgl/opencl/APIUtil;->getPointer()J",
        "Lorg/lwjgl/opencl/APIUtil;->isDevicesParam()Z",
        "Lorg/lwjgl/opencl/APIUtil;->getBufferInt()Ljava/nio/IntBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getNativeKernelArgs()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getLengths()J",
        "Lorg/lwjgl/opencl/APIUtil;->getBuffer()J",
        "Lorg/lwjgl/opencl/APIUtil;->getPointerSafe()J",
        "Lorg/lwjgl/opencl/APIUtil;->getSize()I",
        "Lorg/lwjgl/opencl/APIUtil;->getBufferPointer()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getArray()[C",
        "Lorg/lwjgl/opencl/APIUtil;->getLengths()Lorg/lwjgl/PointerBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/APIUtil;->getBufferNT()J",
        "Lorg/lwjgl/opencl/APIUtil;->encode()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getBufferByte()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/APIUtil;->getTotalLength()I",
        "Lorg/lwjgl/opencl/APIUtil;->getExtensions()Ljava/util/Set;",
        "Lorg/lwjgl/opencl/APIUtil;->releaseObjects()V"
    ],
    "Lorg/lwjgl/opencl/APPLEGLSharing;": [
        "Lorg/lwjgl/opencl/APPLEGLSharing;->nclGetGLContextInfoAPPLE()I"
    ],
    "Lorg/lwjgl/opencl/CLCommandQueue;": [
        "Lorg/lwjgl/opencl/CLCommandQueue;->retain()I",
        "Lorg/lwjgl/opencl/CLCommandQueue;->release()I",
        "Lorg/lwjgl/opencl/CLCommandQueue;->getCLEventRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLCommandQueue;->getPointer()J",
        "Lorg/lwjgl/opencl/CLCommandQueue;->getReferenceCount()I",
        "Lorg/lwjgl/opencl/CLCommandQueue;->registerCLEvent()V",
        "Lorg/lwjgl/opencl/CLCommandQueue;->isValid()Z",
        "Lorg/lwjgl/opencl/CLCommandQueue;->getParent()Lorg/lwjgl/opencl/CLObject;"
    ],
    "Lorg/lwjgl/opencl/InfoUtil;": [
        "Lorg/lwjgl/opencl/InfoUtil;->getInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/InfoUtil;->getInfoSize()J",
        "Lorg/lwjgl/opencl/InfoUtil;->getInfoSizeArray()[J",
        "Lorg/lwjgl/opencl/InfoUtil;->getInfoInt()I",
        "Lorg/lwjgl/opencl/InfoUtil;->getInfoLong()J"
    ],
    "Lorg/lwjgl/opencl/KHRGLEvent;": [
        "Lorg/lwjgl/opencl/KHRGLEvent;->nclCreateEventFromGLsyncKHR()J"
    ],
    "Lorg/lwjgl/opencl/CL10GL;": [
        "Lorg/lwjgl/opencl/CL10GL;->nclGetGLObjectInfo()I",
        "Lorg/lwjgl/opencl/CL10GL;->nclCreateFromGLTexture2D()J",
        "Lorg/lwjgl/opencl/CL10GL;->nclGetGLTextureInfo()I",
        "Lorg/lwjgl/opencl/CL10GL;->nclEnqueueAcquireGLObjects()I",
        "Lorg/lwjgl/opencl/CL10GL;->nclEnqueueReleaseGLObjects()I",
        "Lorg/lwjgl/opencl/CL10GL;->nclCreateFromGLTexture3D()J",
        "Lorg/lwjgl/opencl/CL10GL;->nclCreateFromGLRenderbuffer()J",
        "Lorg/lwjgl/opencl/CL10GL;->nclCreateFromGLBuffer()J"
    ],
    "Lorg/lwjgl/opencl/CLMem;": [
        "Lorg/lwjgl/opencl/CLMem;->retain()I",
        "Lorg/lwjgl/opencl/CLMem;->isValid()Z",
        "Lorg/lwjgl/opencl/CLMem;->getParent()Lorg/lwjgl/opencl/CLObject;",
        "Lorg/lwjgl/opencl/CLMem;->create()Lorg/lwjgl/opencl/CLMem;",
        "Lorg/lwjgl/opencl/CLMem;->release()I",
        "Lorg/lwjgl/opencl/CLMem;->getPointer()J"
    ],
    "Lorg/lwjgl/opencl/CLEvent$CLEventUtil;": [
        "Lorg/lwjgl/opencl/CLEvent$CLEventUtil;->getInfoInt()I",
        "Lorg/lwjgl/opencl/CLEvent$CLEventUtil;->getProfilingInfoLong()J"
    ],
    "Ljava/lang/RuntimeException;": [
        "Ljava/lang/RuntimeException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;"
    ],
    "Lorg/lwjgl/opencl/CLDevice;": [
        "Lorg/lwjgl/opencl/CLDevice;->getPlatform()Lorg/lwjgl/opencl/CLPlatform;",
        "Lorg/lwjgl/opencl/CLDevice;->retain()I",
        "Lorg/lwjgl/opencl/CLDevice;->isValid()Z",
        "Lorg/lwjgl/opencl/CLDevice;->getInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/CLDevice;->getPointer()J",
        "Lorg/lwjgl/opencl/CLDevice;->getSubCLDeviceRegistry()Lorg/lwjgl/opencl/CLObjectRegistry;",
        "Lorg/lwjgl/opencl/CLDevice;->registerSubCLDevices()V",
        "Lorg/lwjgl/opencl/CLDevice;->getCapabilities()Ljava/lang/Object;",
        "Lorg/lwjgl/opencl/CLDevice;->setCapabilities()V",
        "Lorg/lwjgl/opencl/CLDevice;->release()I",
        "Lorg/lwjgl/opencl/CLDevice;->getReferenceCount()I",
        "Lorg/lwjgl/opencl/CLDevice;->checkValid()V",
        "Lorg/lwjgl/opencl/CLDevice;->getParent()Lorg/lwjgl/opencl/CLObject;"
    ],
    "Lorg/lwjgl/opencl/APIUtil$ObjectDestructor;": [
        "Lorg/lwjgl/opencl/APIUtil$ObjectDestructor;->release()V"
    ],
    "Lorg/lwjgl/opencl/FastLongMap;": [
        "Lorg/lwjgl/opencl/FastLongMap;->remove()Ljava/lang/Object;",
        "Lorg/lwjgl/opencl/FastLongMap;->iterator()Lorg/lwjgl/opencl/FastLongMap$EntryIterator;",
        "Lorg/lwjgl/opencl/FastLongMap;->get()Ljava/lang/Object;",
        "Lorg/lwjgl/opencl/FastLongMap;->index()I",
        "Lorg/lwjgl/opencl/FastLongMap;->isEmpty()Z",
        "Lorg/lwjgl/opencl/FastLongMap;->containsKey()Z",
        "Lorg/lwjgl/opencl/FastLongMap;->rehash()V",
        "Lorg/lwjgl/opencl/FastLongMap;->put()Ljava/lang/Object;"
    ],
    "Lorg/lwjgl/opencl/CLPlatform$CLPlatformUtil;": [
        "Lorg/lwjgl/opencl/CLPlatform$CLPlatformUtil;->getInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/CLPlatform$CLPlatformUtil;->getPlatforms()Ljava/util/List;",
        "Lorg/lwjgl/opencl/CLPlatform$CLPlatformUtil;->getDevices()Ljava/util/List;"
    ],
    "Lorg/lwjgl/opencl/CLKernel;": [
        "Lorg/lwjgl/opencl/CLKernel;->getParent()Lorg/lwjgl/opencl/CLObject;",
        "Lorg/lwjgl/opencl/CLKernel;->release()I",
        "Lorg/lwjgl/opencl/CLKernel;->retain()I",
        "Lorg/lwjgl/opencl/CLKernel;->isValid()Z",
        "Lorg/lwjgl/opencl/CLKernel;->getPointer()J"
    ],
    "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;": [
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->getWorkGroupInfoLong()J",
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->getWorkGroupInfoSizeArray()[J",
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->getWorkGroupInfoSize()J",
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->getInfoInt()I",
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->getInfoString()Ljava/lang/String;",
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->setArgSize()V",
        "Lorg/lwjgl/opencl/CLKernel$CLKernelUtil;->setArg()V"
    ],
    "Lorg/lwjgl/opencl/CLObject;": [
        "Lorg/lwjgl/opencl/CLObject;->isValid()Z",
        "Lorg/lwjgl/opencl/CLObject;->checkValid()V"
    ],
    "Lorg/lwjgl/opencl/CallbackUtil;": [
        "Lorg/lwjgl/opencl/CallbackUtil;->getLogMessageToStderrAPPLE()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->deleteGlobalRef()V",
        "Lorg/lwjgl/opencl/CallbackUtil;->getLogMessageToStdoutAPPLE()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->getNativeKernelCallback()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->checkCallback()V",
        "Lorg/lwjgl/opencl/CallbackUtil;->registerCallback()V",
        "Lorg/lwjgl/opencl/CallbackUtil;->getEventCallback()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->unregisterCallback()V",
        "Lorg/lwjgl/opencl/CallbackUtil;->createGlobalRef()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->ncreateGlobalRef()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->getContextCallback()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->getMemObjectDestructorCallback()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->getLogMessageToSystemLogAPPLE()J",
        "Lorg/lwjgl/opencl/CallbackUtil;->getBuildProgramCallback()J"
    ],
    "Lorg/lwjgl/opencl/KHRGLSharing;": [
        "Lorg/lwjgl/opencl/KHRGLSharing;->nclGetGLContextInfoKHR()I"
    ],
    "Lorg/lwjgl/opencl/CLChecks;": [
        "Lorg/lwjgl/opencl/CLChecks;->getChannelCount()I",
        "Lorg/lwjgl/opencl/CLChecks;->calculateImage2DSize()I",
        "Lorg/lwjgl/opencl/CLChecks;->getElementSize()I",
        "Lorg/lwjgl/opencl/CLChecks;->calculateBufferRectSize()I",
        "Lorg/lwjgl/opencl/CLChecks;->calculateImage3DSize()I",
        "Lorg/lwjgl/opencl/CLChecks;->calculateImageSize()I",
        "Lorg/lwjgl/opencl/CLChecks;->getChannelSize()I"
    ],
    "Lorg/lwjgl/opencl/CLObjectRetainable;": [
        "Lorg/lwjgl/opencl/CLObjectRetainable;->checkValid()V"
    ],
    "Lorg/lwjgl/opencl/CL11;": [
        "Lorg/lwjgl/opencl/CL11;->nclSetMemObjectDestructorCallback()I",
        "Lorg/lwjgl/opencl/CL11;->nclEnqueueReadBufferRect()I",
        "Lorg/lwjgl/opencl/CL11;->nclEnqueueWriteBufferRect()I",
        "Lorg/lwjgl/opencl/CL11;->nclSetEventCallback()I",
        "Lorg/lwjgl/opencl/CL11;->nclCreateSubBuffer()J",
        "Lorg/lwjgl/opencl/CL11;->nclSetUserEventStatus()I",
        "Lorg/lwjgl/opencl/CL11;->nclEnqueueCopyBufferRect()I",
        "Lorg/lwjgl/opencl/CL11;->nclCreateUserEvent()J"
    ],
    "Lorg/lwjgl/opencl/CLEventCallback;": [
        "Lorg/lwjgl/opencl/CLEventCallback;->setRegistry()V",
        "Lorg/lwjgl/opencl/CLEventCallback;->getPointer()J",
        "Lorg/lwjgl/opencl/CLEventCallback;->handleMessage()V"
    ],
    "Lorg/lwjgl/opencl/CLMemObjectDestructorCallback;": [
        "Lorg/lwjgl/opencl/CLMemObjectDestructorCallback;->getPointer()J"
    ],
    "Lorg/lwjgl/opencl/APPLEContextLoggingFunctions;": [
        "Lorg/lwjgl/opencl/APPLEContextLoggingFunctions;->nclLogMessagesToStdoutAPPLE()V",
        "Lorg/lwjgl/opencl/APPLEContextLoggingFunctions;->nclLogMessagesToSystemLogAPPLE()V",
        "Lorg/lwjgl/opencl/APPLEContextLoggingFunctions;->nclLogMessagesToStderrAPPLE()V"
    ],
    "Lorg/lwjgl/opencl/EXTMigrateMemobject;": [
        "Lorg/lwjgl/opencl/EXTMigrateMemobject;->nclEnqueueMigrateMemObjectEXT()I"
    ],
    "Lorg/lwjgl/opencl/CLMem$CLMemUtil;": [
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getImageInfoFormat()Lorg/lwjgl/opencl/api/CLImageFormat;",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getInfoHostBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getInfoInt()I",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getImageInfoFormat()I",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getGLObjectName()I",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->createImage2D()Lorg/lwjgl/opencl/CLMem;",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getImageInfoSize()J",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getGLTextureInfoInt()I",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->createSubBuffer()Lorg/lwjgl/opencl/CLMem;",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getInfoLong()J",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getInfoSize()J",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->getGLObjectType()I",
        "Lorg/lwjgl/opencl/CLMem$CLMemUtil;->createImage3D()Lorg/lwjgl/opencl/CLMem;"
    ],
    "Lorg/lwjgl/opencl/InfoUtilAbstract;": [
        "Lorg/lwjgl/opencl/InfoUtilAbstract;->getInfo()I",
        "Lorg/lwjgl/opencl/InfoUtilAbstract;->getSizeRet()I",
        "Lorg/lwjgl/opencl/InfoUtilAbstract;->getInfoSizeArraySize()I"
    ],
    "Lorg/lwjgl/opencl/CLSampler;": [
        "Lorg/lwjgl/opencl/CLSampler;->getParent()Lorg/lwjgl/opencl/CLObject;",
        "Lorg/lwjgl/opencl/CLSampler;->retain()I",
        "Lorg/lwjgl/opencl/CLSampler;->release()I",
        "Lorg/lwjgl/opencl/CLSampler;->getPointer()J",
        "Lorg/lwjgl/opencl/CLSampler;->isValid()Z"
    ],
    "Lorg/lwjgl/opencl/CLBuildProgramCallback;": [
        "Lorg/lwjgl/opencl/CLBuildProgramCallback;->handleMessage()V",
        "Lorg/lwjgl/opencl/CLBuildProgramCallback;->setContext()V",
        "Lorg/lwjgl/opencl/CLBuildProgramCallback;->getPointer()J"
    ],
    "Lorg/lwjgl/opencl/CL10;": [
        "Lorg/lwjgl/opencl/CL10;->nclGetProgramInfo3()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateCommandQueue()J",
        "Lorg/lwjgl/opencl/CL10;->nclUnloadCompiler()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithBinary()J",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithSource()J",
        "Lorg/lwjgl/opencl/CL10;->nclRetainEvent()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithBinary3()J",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueCopyImageToBuffer()I",
        "Lorg/lwjgl/opencl/CL10;->nclRetainProgram()I",
        "Lorg/lwjgl/opencl/CL10;->nclRetainSampler()I",
        "Lorg/lwjgl/opencl/CL10;->nclFinish()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetEventProfilingInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueWriteBuffer()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetPlatformIDs()I",
        "Lorg/lwjgl/opencl/CL10;->nclRetainCommandQueue()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateContext()J",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseCommandQueue()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithBinary2()J",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueNDRangeKernel()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateImage3D()J",
        "Lorg/lwjgl/opencl/CL10;->nclGetPlatformInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetProgramBuildInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetDeviceIDs()I",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseSampler()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueMarker()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetSupportedImageFormats()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueNativeKernel()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetKernelWorkGroupInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueTask()I",
        "Lorg/lwjgl/opencl/CL10;->nclWaitForEvents()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueCopyBufferToImage()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueCopyImage()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateContextFromType()J",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueWaitForEvents()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueCopyBuffer()I",
        "Lorg/lwjgl/opencl/CL10;->nclBuildProgram()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueWriteImage()I",
        "Lorg/lwjgl/opencl/CL10;->nclFlush()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetKernelInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseProgram()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateKernel()J",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseEvent()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetEventInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetDeviceInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithSource2()J",
        "Lorg/lwjgl/opencl/CL10;->nclCreateBuffer()J",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueUnmapMemObject()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetSamplerInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclSetKernelArg()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueBarrier()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateKernelsInProgram()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueMapImage()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseKernel()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithSource3()J",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseContext()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetMemObjectInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueReadBuffer()I",
        "Lorg/lwjgl/opencl/CL10;->nclCreateImage2D()J",
        "Lorg/lwjgl/opencl/CL10;->nclCreateSampler()J",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueReadImage()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetProgramInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetProgramInfo2()I",
        "Lorg/lwjgl/opencl/CL10;->nclReleaseMemObject()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetContextInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclRetainMemObject()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetImageInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetCommandQueueInfo()I",
        "Lorg/lwjgl/opencl/CL10;->nclEnqueueMapBuffer()Ljava/nio/ByteBuffer;",
        "Lorg/lwjgl/opencl/CL10;->nclCreateProgramWithSource4()J",
        "Lorg/lwjgl/opencl/CL10;->nclRetainContext()I",
        "Lorg/lwjgl/opencl/CL10;->nclRetainKernel()I",
        "Lorg/lwjgl/opencl/CL10;->nclGetExtensionFunctionAddress()J"
    ],
    "Lorg/lwjgl/opencl/CLContextCallback;": [
        "Lorg/lwjgl/opencl/CLContextCallback;->getPointer()J",
        "Lorg/lwjgl/opencl/CLContextCallback;->isCustom()Z"
    ],
    "Lorg/lwjgl/opencl/CLNativeKernel;": [
        "Lorg/lwjgl/opencl/CLNativeKernel;->getPointer()J"
    ],
    "Lorg/lwjgl/opencl/KHRICD;": [
        "Lorg/lwjgl/opencl/KHRICD;->nclIcdGetPlatformIDsKHR()I"
    ],
    "Lorg/lwjgl/opencl/CL;": [
        "Lorg/lwjgl/opencl/CL;->getFunctionAddress()J",
        "Lorg/lwjgl/opencl/CL;->nCreateDefault()V",
        "Lorg/lwjgl/opencl/CL;->nCreate()V",
        "Lorg/lwjgl/opencl/CL;->ngetFunctionAddress()J"
    ],
    "Lorg/lwjgl/opencl/CLCapabilities;": [
        "Lorg/lwjgl/opencl/CLCapabilities;->isCL11Supported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isKHR_icdSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isKHR_gl_sharingSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isEXT_device_fissionSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isCL10Supported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isCL10GLSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isAPPLE_ContextLoggingFunctionsSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isAPPLE_SetMemObjectDestructorSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isEXT_migrate_memobjectSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isKHR_gl_eventSupported()Z",
        "Lorg/lwjgl/opencl/CLCapabilities;->isAPPLE_gl_sharingSupported()Z"
    ],
    "Lorg/lwjgl/opencl/CLContext$CLContextUtil;": [
        "Lorg/lwjgl/opencl/CLContext$CLContextUtil;->getInfoDevices()Ljava/util/List;",
        "Lorg/lwjgl/opencl/CLContext$CLContextUtil;->createFromType()Lorg/lwjgl/opencl/CLContext;",
        "Lorg/lwjgl/opencl/CLContext$CLContextUtil;->getInfoInt()I",
        "Lorg/lwjgl/opencl/CLContext$CLContextUtil;->create()Lorg/lwjgl/opencl/CLContext;",
        "Lorg/lwjgl/opencl/CLContext$CLContextUtil;->getSupportedImageFormats()Ljava/util/List;"
    ],
    "Lorg/lwjgl/opencl/Util;": [
        "Lorg/lwjgl/opencl/Util;->throwCLError()V"
    ],
    "Lorg/lwjgl/opencl/EXTDeviceFission;": [
        "Lorg/lwjgl/opencl/EXTDeviceFission;->nclReleaseDeviceEXT()I",
        "Lorg/lwjgl/opencl/EXTDeviceFission;->nclCreateSubDevicesEXT()I",
        "Lorg/lwjgl/opencl/EXTDeviceFission;->nclRetainDeviceEXT()I"
    ],
    "Lorg/lwjgl/opencl/APPLESetMemObjectDestructor;": [
        "Lorg/lwjgl/opencl/APPLESetMemObjectDestructor;->nclSetMemObjectDestructorAPPLE()I"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->decode()Ljava/lang/String;",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->getEncodedQuery()Ljava/lang/String;",
        "Landroid/net/Uri;->getAuthority()Ljava/lang/String;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;",
        "Landroid/net/Uri;->isHierarchical()Z",
        "Landroid/net/Uri;->getScheme()Ljava/lang/String;",
        "Landroid/net/Uri;->getQueryParameter()Ljava/lang/String;",
        "Landroid/net/Uri;->buildUpon()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri;->getHost()Ljava/lang/String;",
        "Landroid/net/Uri;->encode()Ljava/lang/String;"
    ],
    "Lcom/mm1373230642/android/OptinActivity;": [
        "Lcom/mm1373230642/android/OptinActivity;->finish()V",
        "Lcom/mm1373230642/android/OptinActivity;->a()Ljava/lang/String;",
        "Lcom/mm1373230642/android/OptinActivity;->startActivity()V",
        "Lcom/mm1373230642/android/OptinActivity;->a()Lcom/mm1373230642/android/OptinActivity$OptinDialog;",
        "Lcom/mm1373230642/android/OptinActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/mm1373230642/android/OptinActivity;->requestWindowFeature()Z",
        "Lcom/mm1373230642/android/OptinActivity;->showDialog()V"
    ],
    "Lcom/mm1373230642/android/BannerAdView;": [
        "Lcom/mm1373230642/android/BannerAdView;->a()V",
        "Lcom/mm1373230642/android/BannerAdView;->a()Landroid/os/Handler;",
        "Lcom/mm1373230642/android/BannerAdView;->onTouchEvent()Z",
        "Lcom/mm1373230642/android/BannerAdView;->getContext()Landroid/content/Context;",
        "Lcom/mm1373230642/android/BannerAdView;->isInEditMode()Z",
        "Lcom/mm1373230642/android/BannerAdView;->a()Landroid/content/Context;",
        "Lcom/mm1373230642/android/BannerAdView;->addView()V",
        "Lcom/mm1373230642/android/BannerAdView;->resume()V",
        "Lcom/mm1373230642/android/BannerAdView;->a()Lcom/mm1373230642/android/BannerAd;",
        "Lcom/mm1373230642/android/BannerAdView;->a()Ljava/lang/Thread;",
        "Lcom/mm1373230642/android/BannerAdView;->hideAd()V",
        "Lcom/mm1373230642/android/BannerAdView;->setVisibility()V",
        "Lcom/mm1373230642/android/BannerAdView;->a()Ljava/lang/Runnable;",
        "Lcom/mm1373230642/android/BannerAdView;->setLayoutParams()V",
        "Lcom/mm1373230642/android/BannerAdView;->loadNextAd()V",
        "Lcom/mm1373230642/android/BannerAdView;->postDelayed()Z",
        "Lcom/mm1373230642/android/BannerAdView;->a()Z",
        "Lcom/mm1373230642/android/BannerAdView;->pause()V",
        "Lcom/mm1373230642/android/BannerAdView;->a()Landroid/webkit/WebView;",
        "Lcom/mm1373230642/android/BannerAdView;->setLayer()V"
    ],
    "Lcom/mm1373230642/android/Constants;": [
        "Lcom/mm1373230642/android/Constants;->sendException()V",
        "Lcom/mm1373230642/android/Constants;->checkInternetConnection()Z",
        "Lcom/mm1373230642/android/Constants;->getDefaultHost()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Constants;->getAppId()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Constants;->Log()V",
        "Lcom/mm1373230642/android/Constants;->getOutOfApp()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Constants;->selectIcon()I",
        "Lcom/mm1373230642/android/Constants;->getAppKey()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Constants;->LogNetworkClient()V",
        "Lcom/mm1373230642/android/Constants;->LogNetworkServer()V"
    ],
    "Lcom/mm1373230642/android/Ads;": [
        "Lcom/mm1373230642/android/Ads;->a()Landroid/webkit/WebView;",
        "Lcom/mm1373230642/android/Ads;->getSystemService()Ljava/lang/Object;",
        "Lcom/mm1373230642/android/Ads;->getIntent()Landroid/content/Intent;",
        "Lcom/mm1373230642/android/Ads;->getPackageName()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Ads;->a()Ljava/lang/Runnable;",
        "Lcom/mm1373230642/android/Ads;->getWindow()Landroid/view/Window;",
        "Lcom/mm1373230642/android/Ads;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/mm1373230642/android/Ads;->a()I",
        "Lcom/mm1373230642/android/Ads;->a()Landroid/os/Handler;",
        "Lcom/mm1373230642/android/Ads;->getResources()Landroid/content/res/Resources;",
        "Lcom/mm1373230642/android/Ads;->a()Z",
        "Lcom/mm1373230642/android/Ads;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/mm1373230642/android/Ads;->startService()Landroid/content/ComponentName;",
        "Lcom/mm1373230642/android/Ads;->setContentView()V",
        "Lcom/mm1373230642/android/Ads;->getTheme()Landroid/content/res/Resources$Theme;",
        "Lcom/mm1373230642/android/Ads;->onTouchEvent()Z",
        "Lcom/mm1373230642/android/Ads;->finish()V",
        "Lcom/mm1373230642/android/Ads;->requestWindowFeature()Z",
        "Lcom/mm1373230642/android/Ads;->startActivity()V",
        "Lcom/mm1373230642/android/Ads;->a()Landroid/app/Dialog;",
        "Lcom/mm1373230642/android/Ads;->a()Lcom/mm1373230642/android/BannerAd;",
        "Lcom/mm1373230642/android/Ads;->a()Landroid/app/ProgressDialog;",
        "Lcom/mm1373230642/android/Ads;->a()Landroid/widget/LinearLayout;",
        "Lcom/mm1373230642/android/Ads;->a()V"
    ],
    "Landroid/app/Dialog;": [
        "Landroid/app/Dialog;->hide()V",
        "Landroid/app/Dialog;->onCreate()V",
        "Landroid/app/Dialog;->setContentView()V",
        "Landroid/app/Dialog;->setOnDismissListener()V",
        "Landroid/app/Dialog;->onAttachedToWindow()V",
        "Landroid/app/Dialog;->requestWindowFeature()Z",
        "Landroid/app/Dialog;->onRestoreInstanceState()V",
        "Landroid/app/Dialog;->onSaveInstanceState()Landroid/os/Bundle;",
        "Landroid/app/Dialog;->getContext()Landroid/content/Context;",
        "Landroid/app/Dialog;->setCanceledOnTouchOutside()V",
        "Landroid/app/Dialog;->onDetachedFromWindow()V",
        "Landroid/app/Dialog;->dismiss()V",
        "Landroid/app/Dialog;->getWindow()Landroid/view/Window;",
        "Landroid/app/Dialog;->show()V",
        "Landroid/app/Dialog;->setOwnerActivity()V",
        "Landroid/app/Dialog;->setOnCancelListener()V",
        "Landroid/app/Dialog;->setCancelable()V"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->elapsedRealtime()J",
        "Landroid/os/SystemClock;->uptimeMillis()J"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->removeMessages()V",
        "Landroid/os/Handler;->hasMessages()Z",
        "Landroid/os/Handler;->postDelayed()Z",
        "Landroid/os/Handler;->removeCallbacks()V",
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->sendEmptyMessage()Z",
        "Landroid/os/Handler;->getLooper()Landroid/os/Looper;",
        "Landroid/os/Handler;->sendMessageDelayed()Z",
        "Landroid/os/Handler;->postAtTime()Z",
        "Landroid/os/Handler;->obtainMessage()Landroid/os/Message;"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->onTouchEvent()Z",
        "Landroid/widget/LinearLayout;->setBackgroundDrawable()V",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->setWeightSum()V",
        "Landroid/widget/LinearLayout;->removeAllViews()V",
        "Landroid/widget/LinearLayout;->setId()V",
        "Landroid/widget/LinearLayout;->setOrientation()V",
        "Landroid/widget/LinearLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/LinearLayout;->setVisibility()V",
        "Landroid/widget/LinearLayout;->setPadding()V",
        "Landroid/widget/LinearLayout;->setLayoutParams()V",
        "Landroid/widget/LinearLayout;->getHeight()I",
        "Landroid/widget/LinearLayout;->setGravity()V"
    ],
    "Landroid/app/ProgressDialog;": [
        "Landroid/app/ProgressDialog;->requestWindowFeature()Z",
        "Landroid/app/ProgressDialog;->setMessage()V",
        "Landroid/app/ProgressDialog;->setCancelable()V",
        "Landroid/app/ProgressDialog;->setOnCancelListener()V",
        "Landroid/app/ProgressDialog;->dismiss()V",
        "Landroid/app/ProgressDialog;->show()Landroid/app/ProgressDialog;",
        "Landroid/app/ProgressDialog;->isShowing()Z"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->onPageFinished()V",
        "Landroid/webkit/WebViewClient;->shouldOverrideUrlLoading()Z"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->setClass()Landroid/content/Intent;",
        "Landroid/content/Intent;->putStringArrayListExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->getBundleExtra()Landroid/os/Bundle;",
        "Landroid/content/Intent;->getCategories()Ljava/util/Set;",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->getScheme()Ljava/lang/String;",
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;",
        "Landroid/content/Intent;->getSerializableExtra()Ljava/io/Serializable;",
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->setPackage()Landroid/content/Intent;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->putExtras()Landroid/content/Intent;",
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->getBooleanExtra()Z",
        "Landroid/content/Intent;->resolveTypeIfNeeded()Ljava/lang/String;",
        "Landroid/content/Intent;->getIntExtra()I",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getParcelableExtra()Landroid/os/Parcelable;",
        "Landroid/content/Intent;->setComponent()Landroid/content/Intent;",
        "Landroid/content/Intent;->hasExtra()Z",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->getFlags()I",
        "Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;"
    ],
    "Lcom/mm1373230642/android/PushAds;": [
        "Lcom/mm1373230642/android/PushAds;->getWindow()Landroid/view/Window;",
        "Lcom/mm1373230642/android/PushAds;->requestWindowFeature()Z",
        "Lcom/mm1373230642/android/PushAds;->a()Lcom/mm1373230642/android/BannerAd;",
        "Lcom/mm1373230642/android/PushAds;->a()Ljava/lang/Runnable;",
        "Lcom/mm1373230642/android/PushAds;->getContentResolver()Landroid/content/ContentResolver;",
        "Lcom/mm1373230642/android/PushAds;->startActivity()V",
        "Lcom/mm1373230642/android/PushAds;->startService()Landroid/content/ComponentName;",
        "Lcom/mm1373230642/android/PushAds;->finish()V",
        "Lcom/mm1373230642/android/PushAds;->a()Landroid/widget/LinearLayout;",
        "Lcom/mm1373230642/android/PushAds;->getPackageName()Ljava/lang/String;",
        "Lcom/mm1373230642/android/PushAds;->a()Landroid/app/Dialog;",
        "Lcom/mm1373230642/android/PushAds;->a()Z",
        "Lcom/mm1373230642/android/PushAds;->getTheme()Landroid/content/res/Resources$Theme;",
        "Lcom/mm1373230642/android/PushAds;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/mm1373230642/android/PushAds;->a()V",
        "Lcom/mm1373230642/android/PushAds;->a()Landroid/app/ProgressDialog;",
        "Lcom/mm1373230642/android/PushAds;->onTouchEvent()Z",
        "Lcom/mm1373230642/android/PushAds;->a()Landroid/os/Handler;",
        "Lcom/mm1373230642/android/PushAds;->a()Landroid/webkit/WebView;",
        "Lcom/mm1373230642/android/PushAds;->a()I",
        "Lcom/mm1373230642/android/PushAds;->setContentView()V",
        "Lcom/mm1373230642/android/PushAds;->getIntent()Landroid/content/Intent;",
        "Lcom/mm1373230642/android/PushAds;->getResources()Landroid/content/res/Resources;",
        "Lcom/mm1373230642/android/PushAds;->getSystemService()Ljava/lang/Object;"
    ],
    "Lcom/mm1373230642/android/SetPreferences;": [
        "Lcom/mm1373230642/android/SetPreferences;->setHost()V",
        "Lcom/mm1373230642/android/SetPreferences;->getTimeOfReboot()Ljava/lang/String;",
        "Lcom/mm1373230642/android/SetPreferences;->toHex()Ljava/lang/String;",
        "Lcom/mm1373230642/android/SetPreferences;->setNsc()V",
        "Lcom/mm1373230642/android/SetPreferences;->setTimeOfClick()V",
        "Lcom/mm1373230642/android/SetPreferences;->isLWP()Z",
        "Lcom/mm1373230642/android/SetPreferences;->isActive()Z",
        "Lcom/mm1373230642/android/SetPreferences;->setResetTime()V",
        "Lcom/mm1373230642/android/SetPreferences;->getGoogleProfile()V",
        "Lcom/mm1373230642/android/SetPreferences;->getTimeOfClick()Ljava/lang/String;",
        "Lcom/mm1373230642/android/SetPreferences;->a()Z",
        "Lcom/mm1373230642/android/SetPreferences;->getHost()Ljava/lang/String;",
        "Lcom/mm1373230642/android/SetPreferences;->getConnectionType()Ljava/lang/String;",
        "Lcom/mm1373230642/android/SetPreferences;->resetTime()J",
        "Lcom/mm1373230642/android/SetPreferences;->setTimeOfReboot()V",
        "Lcom/mm1373230642/android/SetPreferences;->setValues()Ljava/util/List;",
        "Lcom/mm1373230642/android/SetPreferences;->a()V",
        "Lcom/mm1373230642/android/SetPreferences;->setSharedPreferences()V",
        "Lcom/mm1373230642/android/SetPreferences;->setPreferences()V",
        "Lcom/mm1373230642/android/SetPreferences;->getNsc()Ljava/lang/String;"
    ],
    "Landroid/widget/ViewFlipper;": [
        "Landroid/widget/ViewFlipper;->setInAnimation()V",
        "Landroid/widget/ViewFlipper;->showPrevious()V",
        "Landroid/widget/ViewFlipper;->addView()V",
        "Landroid/widget/ViewFlipper;->getCurrentView()Landroid/view/View;",
        "Landroid/widget/ViewFlipper;->showNext()V",
        "Landroid/widget/ViewFlipper;->setOutAnimation()V",
        "Landroid/widget/ViewFlipper;->onDetachedFromWindow()V"
    ],
    "Lcom/mm1373230642/android/ae;": [
        "Lcom/mm1373230642/android/ae;->stopFlipping()V"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->getInt()I",
        "Lorg/json/JSONArray;->opt()Ljava/lang/Object;",
        "Lorg/json/JSONArray;->put()Lorg/json/JSONArray;",
        "Lorg/json/JSONArray;->get()Ljava/lang/Object;",
        "Lorg/json/JSONArray;->getBoolean()Z",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->getDouble()D",
        "Lorg/json/JSONArray;->getString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONArray;->getLong()J",
        "Lorg/json/JSONArray;->toString()Ljava/lang/String;"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->getDouble()D",
        "Lorg/json/JSONObject;->optString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->optJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->opt()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->get()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->optJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->getLong()J",
        "Lorg/json/JSONObject;->has()Z",
        "Lorg/json/JSONObject;->putOpt()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getInt()I",
        "Lorg/json/JSONObject;->getBoolean()Z",
        "Lorg/json/JSONObject;->optInt()I",
        "Lorg/json/JSONObject;->names()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->keys()Ljava/util/Iterator;",
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->length()I",
        "Lorg/json/JSONObject;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;"
    ],
    "Lcom/mm1373230642/android/CheckAdStatusListener;": [
        "Lcom/mm1373230642/android/CheckAdStatusListener;->adServed()V"
    ],
    "Landroid/accounts/AccountManagerFuture;": [
        "Landroid/accounts/AccountManagerFuture;->getResult()Ljava/lang/Object;"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->getSparseParcelableArray()Landroid/util/SparseArray;",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->putBoolean()V",
        "Landroid/os/Bundle;->putSerializable()V",
        "Landroid/os/Bundle;->putBundle()V",
        "Landroid/os/Bundle;->getSerializable()Ljava/io/Serializable;",
        "Landroid/os/Bundle;->setClassLoader()V",
        "Landroid/os/Bundle;->putDoubleArray()V",
        "Landroid/os/Bundle;->getBoolean()Z",
        "Landroid/os/Bundle;->putCharArray()V",
        "Landroid/os/Bundle;->getParcelable()Landroid/os/Parcelable;",
        "Landroid/os/Bundle;->putIntArray()V",
        "Landroid/os/Bundle;->putShortArray()V",
        "Landroid/os/Bundle;->getParcelableArray()[Landroid/os/Parcelable;",
        "Landroid/os/Bundle;->putFloat()V",
        "Landroid/os/Bundle;->isEmpty()Z",
        "Landroid/os/Bundle;->getLong()J",
        "Landroid/os/Bundle;->putStringArrayList()V",
        "Landroid/os/Bundle;->keySet()Ljava/util/Set;",
        "Landroid/os/Bundle;->getStringArrayList()Ljava/util/ArrayList;",
        "Landroid/os/Bundle;->putParcelableArray()V",
        "Landroid/os/Bundle;->putChar()V",
        "Landroid/os/Bundle;->putLong()V",
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->get()Ljava/lang/Object;",
        "Landroid/os/Bundle;->getByteArray()[B",
        "Landroid/os/Bundle;->containsKey()Z",
        "Landroid/os/Bundle;->putParcelable()V",
        "Landroid/os/Bundle;->putByte()V",
        "Landroid/os/Bundle;->putBooleanArray()V",
        "Landroid/os/Bundle;->getInt()I",
        "Landroid/os/Bundle;->putByteArray()V",
        "Landroid/os/Bundle;->putString()V",
        "Landroid/os/Bundle;->putDouble()V",
        "Landroid/os/Bundle;->getBundle()Landroid/os/Bundle;",
        "Landroid/os/Bundle;->putSparseParcelableArray()V",
        "Landroid/os/Bundle;->size()I",
        "Landroid/os/Bundle;->putFloatArray()V",
        "Landroid/os/Bundle;->putAll()V",
        "Landroid/os/Bundle;->putShort()V",
        "Landroid/os/Bundle;->putLongArray()V"
    ],
    "Lcom/mm1373230642/android/HttpPostData;": [
        "Lcom/mm1373230642/android/HttpPostData;->submitHttpRequest()Ljava/io/InputStream;",
        "Lcom/mm1373230642/android/HttpPostData;->postData()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->getContentEncoding()Lorg/apache/http/Header;",
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;"
    ],
    "Lcom/mm1373230642/android/BannerAd;": [
        "Lcom/mm1373230642/android/BannerAd;->setExpirytime()V",
        "Lcom/mm1373230642/android/BannerAd;->getDirect()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->getBannerimageurl()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->getAdchannel()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->getPhonenumber()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->setBannerHeight()V",
        "Lcom/mm1373230642/android/BannerAd;->getNextmessagecheck()J",
        "Lcom/mm1373230642/android/BannerAd;->setUrl()V",
        "Lcom/mm1373230642/android/BannerAd;->getUrl()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->getCreativeId()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->setPhonenumber()V",
        "Lcom/mm1373230642/android/BannerAd;->getBannerWidth()I",
        "Lcom/mm1373230642/android/BannerAd;->setAdtype()V",
        "Lcom/mm1373230642/android/BannerAd;->getBannerHeight()I",
        "Lcom/mm1373230642/android/BannerAd;->setBannerimageurl()V",
        "Lcom/mm1373230642/android/BannerAd;->getSmsbody()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->getExpirytime()J",
        "Lcom/mm1373230642/android/BannerAd;->setSmsbody()V",
        "Lcom/mm1373230642/android/BannerAd;->setBannerurl()V",
        "Lcom/mm1373230642/android/BannerAd;->setBannerWidth()V",
        "Lcom/mm1373230642/android/BannerAd;->getBannerurl()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->setDirect()V",
        "Lcom/mm1373230642/android/BannerAd;->setNextmessagecheck()V",
        "Lcom/mm1373230642/android/BannerAd;->getAdtype()Ljava/lang/String;",
        "Lcom/mm1373230642/android/BannerAd;->setCreativeId()V",
        "Lcom/mm1373230642/android/BannerAd;->setAdchannel()V"
    ],
    "Lcom/mm1373230642/android/Service1373230642;": [
        "Lcom/mm1373230642/android/Service1373230642;->getPackageName()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Service1373230642;->sendBroadcast()V",
        "Lcom/mm1373230642/android/Service1373230642;->getNextMessageCheckTime()J",
        "Lcom/mm1373230642/android/Service1373230642;->getApplicationContext()Landroid/content/Context;",
        "Lcom/mm1373230642/android/Service1373230642;->SubmitDataTask()Z",
        "Lcom/mm1373230642/android/Service1373230642;->a()I",
        "Lcom/mm1373230642/android/Service1373230642;->getSystemService()Ljava/lang/Object;",
        "Lcom/mm1373230642/android/Service1373230642;->a()V",
        "Lcom/mm1373230642/android/Service1373230642;->a()J",
        "Lcom/mm1373230642/android/Service1373230642;->parseJson()V",
        "Lcom/mm1373230642/android/Service1373230642;->getOptional()Ljava/lang/String;",
        "Lcom/mm1373230642/android/Service1373230642;->a()Z",
        "Lcom/mm1373230642/android/Service1373230642;->getPackageManager()Landroid/content/pm/PackageManager;"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->obtainStyledAttributes()Landroid/content/res/TypedArray;",
        "Landroid/content/Context;->bindService()Z",
        "Landroid/content/Context;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getFilesDir()Ljava/io/File;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->getDatabasePath()Ljava/io/File;",
        "Landroid/content/Context;->getClassLoader()Ljava/lang/ClassLoader;",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->unregisterReceiver()V",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I",
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->getCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->sendBroadcast()V",
        "Landroid/content/Context;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/content/Context;->startActivities()V",
        "Landroid/content/Context;->registerReceiver()Landroid/content/Intent;",
        "Landroid/content/Context;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/Context;->checkCallingPermission()I",
        "Landroid/content/Context;->fileList()[Ljava/lang/String;",
        "Landroid/content/Context;->getMainLooper()Landroid/os/Looper;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->getString()Ljava/lang/String;",
        "Landroid/content/Context;->unbindService()V"
    ],
    "Lcom/mm1373230642/android/OptinActivity$OptinDialog;": [
        "Lcom/mm1373230642/android/OptinActivity$OptinDialog;->dismiss()V"
    ],
    "Lcom/mm1373230642/android/MiniMob;": [
        "Lcom/mm1373230642/android/MiniMob;->networkStatusChange()V",
        "Lcom/mm1373230642/android/MiniMob;->isInstalled()Z",
        "Lcom/mm1373230642/android/MiniMob;->reStartSDK()V",
        "Lcom/mm1373230642/android/MiniMob;->a()Z",
        "Lcom/mm1373230642/android/MiniMob;->a()V",
        "Lcom/mm1373230642/android/MiniMob;->a()Landroid/content/Context;",
        "Lcom/mm1373230642/android/MiniMob;->startAds()Lcom/mm1373230642/android/MiniMob;",
        "Lcom/mm1373230642/android/MiniMob;->bootComplete()V"
    ],
    "Lcom/mm1373230642/android/CustomWebView;": [
        "Lcom/mm1373230642/android/CustomWebView;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/mm1373230642/android/CustomWebView;->clearFormData()V",
        "Lcom/mm1373230642/android/CustomWebView;->setWebViewClient()V",
        "Lcom/mm1373230642/android/CustomWebView;->loadUrl()V",
        "Lcom/mm1373230642/android/CustomWebView;->requestFocus()Z",
        "Lcom/mm1373230642/android/CustomWebView;->clearHistory()V",
        "Lcom/mm1373230642/android/CustomWebView;->canGoBack()Z",
        "Lcom/mm1373230642/android/CustomWebView;->clearCache()V",
        "Lcom/mm1373230642/android/CustomWebView;->goBack()V"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivities()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;"
    ],
    "Landroid/app/AlarmManager;": [
        "Landroid/app/AlarmManager;->cancel()V",
        "Landroid/app/AlarmManager;->setRepeating()V",
        "Landroid/app/AlarmManager;->set()V"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getActivityInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->hasSystemFeature()Z",
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;",
        "Landroid/content/pm/PackageManager;->resolveService()Landroid/content/pm/ResolveInfo;",
        "Landroid/content/pm/PackageManager;->getInstallerPackageName()Ljava/lang/String;",
        "Landroid/content/pm/PackageManager;->checkPermission()I",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->getText()Landroid/text/Editable;",
        "Landroid/widget/EditText;->setBackgroundResource()V",
        "Landroid/widget/EditText;->setGravity()V",
        "Landroid/widget/EditText;->dispatchTouchEvent()Z",
        "Landroid/widget/EditText;->setSingleLine()V",
        "Landroid/widget/EditText;->setBackgroundDrawable()V",
        "Landroid/widget/EditText;->setTextColor()V",
        "Landroid/widget/EditText;->setLayoutParams()V",
        "Landroid/widget/EditText;->addTextChangedListener()V",
        "Landroid/widget/EditText;->setText()V",
        "Landroid/widget/EditText;->setKeyListener()V",
        "Landroid/widget/EditText;->setFocusable()V",
        "Landroid/widget/EditText;->setEnabled()V",
        "Landroid/widget/EditText;->getWindowToken()Landroid/os/IBinder;"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->getAccessibilityNodeProvider()Landroid/view/accessibility/AccessibilityNodeProvider;",
        "Landroid/view/View;->canScrollHorizontally()Z",
        "Landroid/view/View;->getBottom()I",
        "Landroid/view/View;->getContext()Landroid/content/Context;",
        "Landroid/view/View;->getImportantForAccessibility()I",
        "Landroid/view/View;->onInitializeAccessibilityEvent()V",
        "Landroid/view/View;->setOnTouchListener()V",
        "Landroid/view/View;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/view/View;->setLayoutParams()V",
        "Landroid/view/View;->setBackgroundColor()V",
        "Landroid/view/View;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/view/View;->startAnimation()V",
        "Landroid/view/View;->postInvalidate()V",
        "Landroid/view/View;->requestFocusFromTouch()Z",
        "Landroid/view/View;->setTag()V",
        "Landroid/view/View;->saveHierarchyState()V",
        "Landroid/view/View;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/View;->getMeasuredWidth()I",
        "Landroid/view/View;->findViewById()Landroid/view/View;",
        "Landroid/view/View;->setFocusableInTouchMode()V",
        "Landroid/view/View;->restoreHierarchyState()V",
        "Landroid/view/View;->getRight()I",
        "Landroid/view/View;->measure()V",
        "Landroid/view/View;->canScrollVertically()Z",
        "Landroid/view/View;->addTouchables()V",
        "Landroid/view/View;->setOverScrollMode()V",
        "Landroid/view/View;->setId()V",
        "Landroid/view/View;->setLayerType()V",
        "Landroid/view/View;->getVisibility()I",
        "Landroid/view/View;->setOnCreateContextMenuListener()V",
        "Landroid/view/View;->requestFocus()Z",
        "Landroid/view/View;->setHasTransientState()V",
        "Landroid/view/View;->setImportantForAccessibility()V",
        "Landroid/view/View;->layout()V",
        "Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;",
        "Landroid/view/View;->setAccessibilityDelegate()V",
        "Landroid/view/View;->postOnAnimationDelayed()V",
        "Landroid/view/View;->addFocusables()V",
        "Landroid/view/View;->hasTransientState()Z",
        "Landroid/view/View;->getTag()Ljava/lang/Object;",
        "Landroid/view/View;->getScrollY()I",
        "Landroid/view/View;->postInvalidateOnAnimation()V",
        "Landroid/view/View;->setFocusable()V",
        "Landroid/view/View;->getId()I",
        "Landroid/view/View;->setOnKeyListener()V",
        "Landroid/view/View;->getTop()I",
        "Landroid/view/View;->getScrollX()I",
        "Landroid/view/View;->clearAnimation()V",
        "Landroid/view/View;->getLeft()I",
        "Landroid/view/View;->getMeasuredHeight()I",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->onPopulateAccessibilityEvent()V",
        "Landroid/view/View;->setVisibility()V",
        "Landroid/view/View;->getWindowVisibleDisplayFrame()V",
        "Landroid/view/View;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/view/View;->offsetLeftAndRight()V",
        "Landroid/view/View;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/view/View;->getOverScrollMode()I",
        "Landroid/view/View;->postOnAnimation()V",
        "Landroid/view/View;->setBackgroundDrawable()V"
    ],
    "Landroid/content/res/Resources$Theme;": [
        "Landroid/content/res/Resources$Theme;->obtainStyledAttributes()Landroid/content/res/TypedArray;"
    ],
    "Landroid/content/res/TypedArray;": [
        "Landroid/content/res/TypedArray;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/res/TypedArray;->recycle()V",
        "Landroid/content/res/TypedArray;->getBoolean()Z",
        "Landroid/content/res/TypedArray;->getInt()I",
        "Landroid/content/res/TypedArray;->getResourceId()I",
        "Landroid/content/res/TypedArray;->getString()Ljava/lang/String;",
        "Landroid/content/res/TypedArray;->hasValue()Z",
        "Landroid/content/res/TypedArray;->getDimensionPixelSize()I",
        "Landroid/content/res/TypedArray;->getInteger()I",
        "Landroid/content/res/TypedArray;->getColor()I"
    ],
    "Landroid/widget/LinearLayout$LayoutParams;": [
        "Landroid/widget/LinearLayout$LayoutParams;->setMargins()V"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->setOnClickListener()V",
        "Landroid/widget/ImageButton;->setLayoutParams()V",
        "Landroid/widget/ImageButton;->setBackgroundDrawable()V",
        "Landroid/widget/ImageButton;->setImageResource()V",
        "Landroid/widget/ImageButton;->setBackgroundColor()V",
        "Landroid/widget/ImageButton;->setPadding()V"
    ],
    "Landroid/graphics/drawable/GradientDrawable;": [
        "Landroid/graphics/drawable/GradientDrawable;->setCornerRadius()V"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->overridePendingTransition()V",
        "Landroid/app/Activity;->onCreateView()Landroid/view/View;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->onWindowFocusChanged()V",
        "Landroid/app/Activity;->getCallingActivity()Landroid/content/ComponentName;",
        "Landroid/app/Activity;->startActivityForResult()V",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->onPanelClosed()V",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->getWindow()Landroid/view/Window;",
        "Landroid/app/Activity;->getSystemService()Ljava/lang/Object;",
        "Landroid/app/Activity;->getComponentName()Landroid/content/ComponentName;",
        "Landroid/app/Activity;->onMenuItemSelected()Z",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->onLowMemory()V",
        "Landroid/app/Activity;->navigateUpTo()Z",
        "Landroid/app/Activity;->setVolumeControlStream()V",
        "Landroid/app/Activity;->dump()V",
        "Landroid/app/Activity;->finish()V",
        "Landroid/app/Activity;->getIntent()Landroid/content/Intent;",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->onCreatePanelMenu()Z",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->getCallingPackage()Ljava/lang/String;",
        "Landroid/app/Activity;->setRequestedOrientation()V",
        "Landroid/app/Activity;->onPostResume()V",
        "Landroid/app/Activity;->getRequestedOrientation()I",
        "Landroid/app/Activity;->onSaveInstanceState()V",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->getParentActivityIntent()Landroid/content/Intent;",
        "Landroid/app/Activity;->obtainStyledAttributes()Landroid/content/res/TypedArray;",
        "Landroid/app/Activity;->onActivityResult()V",
        "Landroid/app/Activity;->invalidateOptionsMenu()V",
        "Landroid/app/Activity;->getApplicationContext()Landroid/content/Context;",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->shouldUpRecreateTask()Z",
        "Landroid/app/Activity;->onUserLeaveHint()V",
        "Landroid/app/Activity;->onPreparePanel()Z"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setFlags()V",
        "Landroid/view/Window;->setBackgroundDrawable()V",
        "Landroid/view/Window;->getDecorView()Landroid/view/View;",
        "Landroid/view/Window;->addFlags()V",
        "Landroid/view/Window;->setLayout()V",
        "Landroid/view/Window;->setFeatureInt()V",
        "Landroid/view/Window;->findViewById()Landroid/view/View;",
        "Landroid/view/Window;->clearFlags()V",
        "Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;",
        "Landroid/view/Window;->requestFeature()Z"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getIdentifier()I",
        "Landroid/content/res/Resources;->getText()Ljava/lang/CharSequence;",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->openRawResource()Ljava/io/InputStream;",
        "Landroid/content/res/Resources;->getDimensionPixelSize()I",
        "Landroid/content/res/Resources;->getColor()I",
        "Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;",
        "Landroid/content/res/Resources;->getString()Ljava/lang/String;",
        "Landroid/content/res/Resources;->getDimension()F",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/res/Resources;->getValue()V"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->draw()V",
        "Landroid/webkit/WebView;->onKeyDown()Z",
        "Landroid/webkit/WebView;->loadData()V",
        "Landroid/webkit/WebView;->canGoBack()Z",
        "Landroid/webkit/WebView;->removeAllViews()V",
        "Landroid/webkit/WebView;->setHorizontalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;",
        "Landroid/webkit/WebView;->addJavascriptInterface()V",
        "Landroid/webkit/WebView;->destroy()V",
        "Landroid/webkit/WebView;->stopLoading()V",
        "Landroid/webkit/WebView;->setLayoutParams()V",
        "Landroid/webkit/WebView;->getContext()Landroid/content/Context;",
        "Landroid/webkit/WebView;->setVisibility()V",
        "Landroid/webkit/WebView;->getParent()Landroid/view/ViewParent;",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->setWillNotDraw()V",
        "Landroid/webkit/WebView;->setBackgroundColor()V",
        "Landroid/webkit/WebView;->setOnTouchListener()V",
        "Landroid/webkit/WebView;->getTitle()Ljava/lang/String;",
        "Landroid/webkit/WebView;->setScrollBarStyle()V",
        "Landroid/webkit/WebView;->setWebChromeClient()V",
        "Landroid/webkit/WebView;->goBack()V",
        "Landroid/webkit/WebView;->setVerticalScrollBarEnabled()V",
        "Landroid/webkit/WebView;->onMeasure()V",
        "Landroid/webkit/WebView;->clearCache()V",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V",
        "Landroid/webkit/WebView;->reload()V",
        "Landroid/webkit/WebView;->goForward()V",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->canGoForward()Z"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setDatabaseEnabled()V",
        "Landroid/webkit/WebSettings;->setAppCacheMaxSize()V",
        "Landroid/webkit/WebSettings;->setDomStorageEnabled()V",
        "Landroid/webkit/WebSettings;->setSupportMultipleWindows()V",
        "Landroid/webkit/WebSettings;->setCacheMode()V",
        "Landroid/webkit/WebSettings;->setUserAgentString()V",
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->setAppCacheEnabled()V",
        "Landroid/webkit/WebSettings;->setAppCachePath()V",
        "Landroid/webkit/WebSettings;->setSaveFormData()V",
        "Landroid/webkit/WebSettings;->setBuiltInZoomControls()V",
        "Landroid/webkit/WebSettings;->setDatabasePath()V",
        "Landroid/webkit/WebSettings;->setSupportZoom()V",
        "Landroid/webkit/WebSettings;->setDisplayZoomControls()V",
        "Landroid/webkit/WebSettings;->setPluginsEnabled()V",
        "Landroid/webkit/WebSettings;->setUseWideViewPort()V",
        "Landroid/webkit/WebSettings;->getUserAgentString()Ljava/lang/String;",
        "Landroid/webkit/WebSettings;->setSavePassword()V"
    ],
    "Ljava/text/MessageFormat;": [
        "Ljava/text/MessageFormat;->format()Ljava/lang/String;"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->setView()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;",
        "Landroid/app/AlertDialog;->show()V",
        "Landroid/app/AlertDialog;->dismiss()V"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->vibrate()V",
        "Landroid/os/Vibrator;->cancel()V"
    ],
    "Landroid/view/ViewGroup;": [
        "Landroid/view/ViewGroup;->getId()I",
        "Landroid/view/ViewGroup;->requestLayout()V",
        "Landroid/view/ViewGroup;->draw()V",
        "Landroid/view/ViewGroup;->getBottom()I",
        "Landroid/view/ViewGroup;->onDraw()V",
        "Landroid/view/ViewGroup;->removeAllViews()V",
        "Landroid/view/ViewGroup;->findViewById()Landroid/view/View;",
        "Landroid/view/ViewGroup;->getTop()I",
        "Landroid/view/ViewGroup;->onDetachedFromWindow()V",
        "Landroid/view/ViewGroup;->onSaveInstanceState()Landroid/os/Parcelable;",
        "Landroid/view/ViewGroup;->onSizeChanged()V",
        "Landroid/view/ViewGroup;->getRight()I",
        "Landroid/view/ViewGroup;->getParent()Landroid/view/ViewParent;",
        "Landroid/view/ViewGroup;->onRestoreInstanceState()V",
        "Landroid/view/ViewGroup;->removeView()V",
        "Landroid/view/ViewGroup;->getLeft()I",
        "Landroid/view/ViewGroup;->drawableStateChanged()V",
        "Landroid/view/ViewGroup;->dispatchKeyEvent()Z",
        "Landroid/view/ViewGroup;->verifyDrawable()Z",
        "Landroid/view/ViewGroup;->getChildAt()Landroid/view/View;",
        "Landroid/view/ViewGroup;->getChildCount()I",
        "Landroid/view/ViewGroup;->onRequestSendAccessibilityEvent()Z",
        "Landroid/view/ViewGroup;->invalidate()V",
        "Landroid/view/ViewGroup;->onAttachedToWindow()V",
        "Landroid/view/ViewGroup;->checkLayoutParams()Z",
        "Landroid/view/ViewGroup;->addView()V"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getFloat()F",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->contains()Z",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->getAll()Ljava/util/Map;"
    ],
    "Ljava/util/UUID;": [
        "Ljava/util/UUID;->randomUUID()Ljava/util/UUID;",
        "Ljava/util/UUID;->getMostSignificantBits()J",
        "Ljava/util/UUID;->nameUUIDFromBytes()Ljava/util/UUID;",
        "Ljava/util/UUID;->toString()Ljava/lang/String;",
        "Ljava/util/UUID;->getLeastSignificantBits()J",
        "Ljava/util/UUID;->equals()Z",
        "Ljava/util/UUID;->fromString()Ljava/util/UUID;"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->clear()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z",
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putFloat()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->remove()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getPhoneType()I",
        "Landroid/telephony/TelephonyManager;->getSimOperator()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getRepeatCount()I",
        "Landroid/view/KeyEvent;->getMetaState()I",
        "Landroid/view/KeyEvent;->getKeyCode()I",
        "Landroid/view/KeyEvent;->normalizeMetaState()I",
        "Landroid/view/KeyEvent;->metaStateHasNoModifiers()Z",
        "Landroid/view/KeyEvent;->getUnicodeChar()I",
        "Landroid/view/KeyEvent;->metaStateHasModifiers()Z",
        "Landroid/view/KeyEvent;->isAltPressed()Z",
        "Landroid/view/KeyEvent;->getAction()I"
    ],
    "Lorg/apache/http/NameValuePair;": [
        "Lorg/apache/http/NameValuePair;->getValue()Ljava/lang/String;",
        "Lorg/apache/http/NameValuePair;->getName()Ljava/lang/String;"
    ],
    "Ljava/util/zip/GZIPOutputStream;": [
        "Ljava/util/zip/GZIPOutputStream;->close()V",
        "Ljava/util/zip/GZIPOutputStream;->write()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->write()V",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V",
        "Lorg/apache/http/client/methods/HttpPost;->setHeader()V",
        "Lorg/apache/http/client/methods/HttpPost;->addHeader()V"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Ljava/lang/Object;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->addResponseInterceptor()V",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->addRequestInterceptor()V",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/impl/client/DefaultHttpClient;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/message/BasicHttpResponse;": [
        "Lorg/apache/http/message/BasicHttpResponse;->getEntity()Lorg/apache/http/HttpEntity;",
        "Lorg/apache/http/message/BasicHttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;"
    ],
    "Lorg/apache/http/client/utils/URLEncodedUtils;": [
        "Lorg/apache/http/client/utils/URLEncodedUtils;->format()Ljava/lang/String;",
        "Lorg/apache/http/client/utils/URLEncodedUtils;->parse()Ljava/util/List;"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->getURL()Ljava/net/URL;",
        "Ljava/net/HttpURLConnection;->disconnect()V",
        "Ljava/net/HttpURLConnection;->setInstanceFollowRedirects()V",
        "Ljava/net/HttpURLConnection;->setDefaultUseCaches()V",
        "Ljava/net/HttpURLConnection;->getRequestMethod()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setDoInput()V",
        "Ljava/net/HttpURLConnection;->getErrorStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->setDoOutput()V",
        "Ljava/net/HttpURLConnection;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/HttpURLConnection;->setReadTimeout()V",
        "Ljava/net/HttpURLConnection;->addRequestProperty()V",
        "Ljava/net/HttpURLConnection;->setUseCaches()V",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->setRequestMethod()V",
        "Ljava/net/HttpURLConnection;->getRequestProperty()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->setConnectTimeout()V",
        "Ljava/net/HttpURLConnection;->getHeaderField()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setChunkedStreamingMode()V",
        "Ljava/net/HttpURLConnection;->connect()V",
        "Ljava/net/HttpURLConnection;->getResponseCode()I"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->isAvailable()Z",
        "Landroid/net/NetworkInfo;->getSubtype()I",
        "Landroid/net/NetworkInfo;->getType()I"
    ],
    "Landroid/content/pm/PackageManager$NameNotFoundException;": [
        "Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextBoolean()Z",
        "Ljava/util/Random;->nextInt()I",
        "Ljava/util/Random;->nextFloat()F",
        "Ljava/util/Random;->setSeed()V"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->notify()V",
        "Landroid/app/NotificationManager;->cancel()V"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->getEventTime()J",
        "Landroid/view/MotionEvent;->obtain()Landroid/view/MotionEvent;",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->findPointerIndex()I",
        "Landroid/view/MotionEvent;->recycle()V",
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getPointerId()I",
        "Landroid/view/MotionEvent;->getEdgeFlags()I",
        "Landroid/view/MotionEvent;->getPointerCount()I"
    ],
    "Landroid/util/AttributeSet;": [
        "Landroid/util/AttributeSet;->getAttributeCount()I",
        "Landroid/util/AttributeSet;->getPositionDescription()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getAttributeBooleanValue()Z",
        "Landroid/util/AttributeSet;->getStyleAttribute()I",
        "Landroid/util/AttributeSet;->getAttributeValue()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getAttributeName()Ljava/lang/String;"
    ],
    "Landroid/content/IntentFilter;": [
        "Landroid/content/IntentFilter;->getAction()Ljava/lang/String;",
        "Landroid/content/IntentFilter;->countActions()I",
        "Landroid/content/IntentFilter;->match()I",
        "Landroid/content/IntentFilter;->addAction()V"
    ],
    "Landroid/view/animation/Animation;": [
        "Landroid/view/animation/Animation;->setAnimationListener()V",
        "Landroid/view/animation/Animation;->setDuration()V"
    ],
    "Ljava/util/Timer;": [
        "Ljava/util/Timer;->schedule()V",
        "Ljava/util/Timer;->cancel()V"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->setId()V",
        "Landroid/widget/RelativeLayout;->removeAllViews()V",
        "Landroid/widget/RelativeLayout;->getRootView()Landroid/view/View;",
        "Landroid/widget/RelativeLayout;->addView()V",
        "Landroid/widget/RelativeLayout;->setKeepScreenOn()V",
        "Landroid/widget/RelativeLayout;->onWindowVisibilityChanged()V",
        "Landroid/widget/RelativeLayout;->onAttachedToWindow()V",
        "Landroid/widget/RelativeLayout;->onDetachedFromWindow()V",
        "Landroid/widget/RelativeLayout;->removeView()V"
    ],
    "Landroid/telephony/SmsManager;": [
        "Landroid/telephony/SmsManager;->getDefault()Landroid/telephony/SmsManager;",
        "Landroid/telephony/SmsManager;->sendMultipartTextMessage()V",
        "Landroid/telephony/SmsManager;->divideMessage()Ljava/util/ArrayList;",
        "Landroid/telephony/SmsManager;->sendDataMessage()V"
    ],
    "Lcom/mm1373230642/android/ar;": [
        "Lcom/mm1373230642/android/ar;->sendMultipartTextMessage()V",
        "Lcom/mm1373230642/android/ar;->divideMessage()Ljava/util/ArrayList;"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->println()I",
        "Landroid/util/Log;->a()I",
        "Landroid/util/Log;->isLoggable()Z"
    ],
    "Lcom/mm1373230642/android/v;": [
        "Lcom/mm1373230642/android/v;->a()Lcom/mm1373230642/android/BannerAd;",
        "Lcom/mm1373230642/android/v;->a()[Lcom/mm1373230642/android/BannerAd;"
    ],
    "Lcom/mm1373230642/android/ch;": [
        "Lcom/mm1373230642/android/ch;->start()V"
    ],
    "Lcom/mm1373230642/android/SubmitDataTask;": [
        "Lcom/mm1373230642/android/SubmitDataTask;->onPostExecute()V",
        "Lcom/mm1373230642/android/SubmitDataTask;->doInBackground()Ljava/lang/Boolean;"
    ],
    "Lcom/mm1373230642/android/AsyncTaskCompleteListener;": [
        "Lcom/mm1373230642/android/AsyncTaskCompleteListener;->onTaskComplete()V"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->toString()Ljava/lang/String;",
        "Ljava/util/Date;->after()Z",
        "Ljava/util/Date;->before()Z",
        "Ljava/util/Date;->getTime()J"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;",
        "Ljava/text/SimpleDateFormat;->setTimeZone()V",
        "Ljava/text/SimpleDateFormat;->parse()Ljava/util/Date;"
    ],
    "Lcom/mm1373230642/android/WakefulIntentService;": [
        "Lcom/mm1373230642/android/WakefulIntentService;->onUnbind()Z",
        "Lcom/mm1373230642/android/WakefulIntentService;->a()Landroid/os/PowerManager$WakeLock;",
        "Lcom/mm1373230642/android/WakefulIntentService;->setIntentRedelivery()V",
        "Lcom/mm1373230642/android/WakefulIntentService;->onLowMemory()V",
        "Lcom/mm1373230642/android/WakefulIntentService;->onDestroy()V",
        "Lcom/mm1373230642/android/WakefulIntentService;->getApplicationContext()Landroid/content/Context;",
        "Lcom/mm1373230642/android/WakefulIntentService;->doWakefulWork()V"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeResource()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;"
    ],
    "Ljava/util/TimeZone;": [
        "Ljava/util/TimeZone;->getTimeZone()Ljava/util/TimeZone;",
        "Ljava/util/TimeZone;->getDefault()Ljava/util/TimeZone;"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->myLooper()Landroid/os/Looper;",
        "Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;"
    ],
    "Landroid/widget/RemoteViews;": [
        "Landroid/widget/RemoteViews;->setTextColor()V",
        "Landroid/widget/RemoteViews;->setImageViewBitmap()V",
        "Landroid/widget/RemoteViews;->setImageViewResource()V",
        "Landroid/widget/RemoteViews;->setTextViewText()V",
        "Landroid/widget/RemoteViews;->apply()Landroid/view/View;",
        "Landroid/widget/RemoteViews;->setViewVisibility()V"
    ],
    "Lcom/mm1373230642/android/PreFroyoNotificationStyleDiscover;": [
        "Lcom/mm1373230642/android/PreFroyoNotificationStyleDiscover;->getTextColor()I",
        "Lcom/mm1373230642/android/PreFroyoNotificationStyleDiscover;->getTitleColor()I",
        "Lcom/mm1373230642/android/PreFroyoNotificationStyleDiscover;->a()V",
        "Lcom/mm1373230642/android/PreFroyoNotificationStyleDiscover;->a()Z"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Lorg/apache/http/HttpRequest;": [
        "Lorg/apache/http/HttpRequest;->addHeader()V",
        "Lorg/apache/http/HttpRequest;->containsHeader()Z"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->isScreenOn()Z",
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->isHeld()Z",
        "Landroid/os/PowerManager$WakeLock;->acquire()V",
        "Landroid/os/PowerManager$WakeLock;->setReferenceCounted()V",
        "Landroid/os/PowerManager$WakeLock;->release()V"
    ],
    "Landroid/app/IntentService;": [
        "Landroid/app/IntentService;->onStartCommand()I"
    ],
    "Lcom/mm1373230642/android/CompatibilitySmsManager;": [
        "Lcom/mm1373230642/android/CompatibilitySmsManager;->getDefault()Lcom/mm1373230642/android/CompatibilitySmsManager;",
        "Lcom/mm1373230642/android/CompatibilitySmsManager;->sendTextMessage()V"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->put()V"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->query()Landroid/database/Cursor;",
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;"
    ],
    "Landroid/telephony/gsm/SmsManager;": [
        "Landroid/telephony/gsm/SmsManager;->sendDataMessage()V",
        "Landroid/telephony/gsm/SmsManager;->sendMultipartTextMessage()V",
        "Landroid/telephony/gsm/SmsManager;->sendTextMessage()V",
        "Landroid/telephony/gsm/SmsManager;->divideMessage()Ljava/util/ArrayList;",
        "Landroid/telephony/gsm/SmsManager;->getDefault()Landroid/telephony/gsm/SmsManager;"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->getRight()I",
        "Landroid/widget/TextView;->getTag()Ljava/lang/Object;",
        "Landroid/widget/TextView;->setOnClickListener()V",
        "Landroid/widget/TextView;->setTag()V",
        "Landroid/widget/TextView;->setImeOptions()V",
        "Landroid/widget/TextView;->getBaseline()I",
        "Landroid/widget/TextView;->setId()V",
        "Landroid/widget/TextView;->setEllipsize()V",
        "Landroid/widget/TextView;->setPadding()V",
        "Landroid/widget/TextView;->getTextSize()F",
        "Landroid/widget/TextView;->setOnKeyListener()V",
        "Landroid/widget/TextView;->setCompoundDrawables()V",
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->getMeasuredWidth()I",
        "Landroid/widget/TextView;->setLayoutParams()V",
        "Landroid/widget/TextView;->setTypeface()V",
        "Landroid/widget/TextView;->setFocusableInTouchMode()V",
        "Landroid/widget/TextView;->setTransformationMethod()V",
        "Landroid/widget/TextView;->setTextAppearance()V",
        "Landroid/widget/TextView;->onLayout()V",
        "Landroid/widget/TextView;->setSingleLine()V",
        "Landroid/widget/TextView;->getTextColors()Landroid/content/res/ColorStateList;",
        "Landroid/widget/TextView;->measure()V",
        "Landroid/widget/TextView;->setTextSize()V",
        "Landroid/widget/TextView;->setFocusable()V",
        "Landroid/widget/TextView;->setBackgroundColor()V",
        "Landroid/widget/TextView;->getText()Ljava/lang/CharSequence;",
        "Landroid/widget/TextView;->layout()V",
        "Landroid/widget/TextView;->getImeOptions()I",
        "Landroid/widget/TextView;->setVisibility()V",
        "Landroid/widget/TextView;->setLineSpacing()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setGravity()V",
        "Landroid/widget/TextView;->getLeft()I",
        "Landroid/widget/TextView;->getMeasuredHeight()I",
        "Landroid/widget/TextView;->setShadowLayer()V",
        "Landroid/widget/TextView;->getContext()Landroid/content/Context;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getOrientation()I",
        "Landroid/view/Display;->getHeight()I",
        "Landroid/view/Display;->getWidth()I"
    ],
    "Landroid/content/res/ColorStateList;": [
        "Landroid/content/res/ColorStateList;->getDefaultColor()I"
    ],
    "Landroid/os/Parcel;": [
        "Landroid/os/Parcel;->writeString()V",
        "Landroid/os/Parcel;->readBundle()Landroid/os/Bundle;",
        "Landroid/os/Parcel;->writeLong()V",
        "Landroid/os/Parcel;->readString()Ljava/lang/String;",
        "Landroid/os/Parcel;->readInt()I",
        "Landroid/os/Parcel;->writeBundle()V",
        "Landroid/os/Parcel;->createTypedArray()[Ljava/lang/Object;",
        "Landroid/os/Parcel;->writeIntArray()V",
        "Landroid/os/Parcel;->writeInt()V",
        "Landroid/os/Parcel;->createIntArray()[I",
        "Landroid/os/Parcel;->readLong()J",
        "Landroid/os/Parcel;->writeTypedArray()V"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->requestLocationUpdates()V",
        "Landroid/location/LocationManager;->isProviderEnabled()Z",
        "Landroid/location/LocationManager;->getAllProviders()Ljava/util/List;",
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->setLatitude()V",
        "Landroid/location/Location;->setLongitude()V",
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getAccuracy()F",
        "Landroid/location/Location;->getTime()J"
    ],
    "Landroid/location/Criteria;": [
        "Landroid/location/Criteria;->setAccuracy()V"
    ],
    "Landroid/accounts/AccountManager;": [
        "Landroid/accounts/AccountManager;->getAuthToken()Landroid/accounts/AccountManagerFuture;",
        "Landroid/accounts/AccountManager;->getAccountsByType()[Landroid/accounts/Account;"
    ],
    "Landroid/app/KeyguardManager;": [
        "Landroid/app/KeyguardManager;->inKeyguardRestrictedInputMode()Z"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningTasks()Ljava/util/List;"
    ],
    "Landroid/content/ComponentName;": [
        "Landroid/content/ComponentName;->getClassName()Ljava/lang/String;",
        "Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getDisplayLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;"
    ],
    "Landroid/net/wifi/WifiManager;": [
        "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;"
    ],
    "Landroid/net/wifi/WifiInfo;": [
        "Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->digest()[B"
    ],
    "Landroid/text/TextUtils;": [
        "Landroid/text/TextUtils;->writeToParcel()V",
        "Landroid/text/TextUtils;->isDigitsOnly()Z",
        "Landroid/text/TextUtils;->isEmpty()Z",
        "Landroid/text/TextUtils;->join()Ljava/lang/String;"
    ],
    "Lcom/mm1373230642/android/ci;": [
        "Lcom/mm1373230642/android/ci;->a()Ljava/util/UUID;"
    ],
    "Lcom/mm1373230642/android/ac;": [
        "Lcom/mm1373230642/android/ac;->getHeight()I",
        "Lcom/mm1373230642/android/ac;->getWidth()I"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;",
        "Lorg/apache/http/HttpResponse;->setEntity()V",
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/HttpResponse;->getFirstHeader()Lorg/apache/http/Header;"
    ],
    "Lorg/apache/http/Header;": [
        "Lorg/apache/http/Header;->getElements()[Lorg/apache/http/HeaderElement;",
        "Lorg/apache/http/Header;->getValue()Ljava/lang/String;"
    ],
    "Lorg/apache/http/HeaderElement;": [
        "Lorg/apache/http/HeaderElement;->getName()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/Validate;": [
        "Lcom/facebook/internal/Validate;->notEmptyAndContainsNoNulls()V",
        "Lcom/facebook/internal/Validate;->containsNoNulls()V",
        "Lcom/facebook/internal/Validate;->notEmpty()V",
        "Lcom/facebook/internal/Validate;->containsNoNullOrEmpty()V",
        "Lcom/facebook/internal/Validate;->notNull()V",
        "Lcom/facebook/internal/Validate;->notNullOrEmpty()V",
        "Lcom/facebook/internal/Validate;->oneOf()V"
    ],
    "Lcom/facebook/TokenCachingStrategy;": [
        "Lcom/facebook/TokenCachingStrategy;->clear()V",
        "Lcom/facebook/TokenCachingStrategy;->hasTokenInformation()Z",
        "Lcom/facebook/TokenCachingStrategy;->getDate()Ljava/util/Date;",
        "Lcom/facebook/TokenCachingStrategy;->putDate()V",
        "Lcom/facebook/TokenCachingStrategy;->getSource()Lcom/facebook/AccessTokenSource;",
        "Lcom/facebook/TokenCachingStrategy;->save()V",
        "Lcom/facebook/TokenCachingStrategy;->load()Landroid/os/Bundle;"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;"
    ],
    "Lcom/facebook/Session;": [
        "Lcom/facebook/Session;->onActivityResult()Z",
        "Lcom/facebook/Session;->openActiveSessionFromCache()Lcom/facebook/Session;",
        "Lcom/facebook/Session;->closeAndClearTokenInformation()V",
        "Lcom/facebook/Session;->runWithHandlerOrExecutor()V",
        "Lcom/facebook/Session;->getLoginActivityIntent()Landroid/content/Intent;",
        "Lcom/facebook/Session;->getAppEventsLogger()Lcom/facebook/AppEventsLogger;",
        "Lcom/facebook/Session;->extendAccessToken()V",
        "Lcom/facebook/Session;->tryLegacyAuth()V",
        "Lcom/facebook/Session;->autoPublishAsync()V",
        "Lcom/facebook/Session;->restoreSession()Lcom/facebook/Session;",
        "Lcom/facebook/Session;->finishAuthOrReauth()V",
        "Lcom/facebook/Session;->areEqual()Z",
        "Lcom/facebook/Session;->validatePermissions()V",
        "Lcom/facebook/Session;->finishAuthorization()V",
        "Lcom/facebook/Session;->requestNewPermissions()V",
        "Lcom/facebook/Session;->getApplicationId()Ljava/lang/String;",
        "Lcom/facebook/Session;->authorize()V",
        "Lcom/facebook/Session;->shouldExtendAccessToken()Z",
        "Lcom/facebook/Session;->postActiveSessionAction()V",
        "Lcom/facebook/Session;->isPublishPermission()Z",
        "Lcom/facebook/Session;->logAuthorizationComplete()V",
        "Lcom/facebook/Session;->open()V",
        "Lcom/facebook/Session;->toString()Ljava/lang/String;",
        "Lcom/facebook/Session;->equals()Z",
        "Lcom/facebook/Session;->extendAccessTokenIfNeeded()V",
        "Lcom/facebook/Session;->getState()Lcom/facebook/SessionState;",
        "Lcom/facebook/Session;->openForRead()V",
        "Lcom/facebook/Session;->handleAuthorizationResult()V",
        "Lcom/facebook/Session;->postStateChange()V",
        "Lcom/facebook/Session;->close()V",
        "Lcom/facebook/Session;->tryLoginActivity()Z",
        "Lcom/facebook/Session;->isOpened()Z",
        "Lcom/facebook/Session;->saveSession()V",
        "Lcom/facebook/Session;->getStaticContext()Landroid/content/Context;",
        "Lcom/facebook/Session;->resolveIntent()Z",
        "Lcom/facebook/Session;->getAccessToken()Ljava/lang/String;",
        "Lcom/facebook/Session;->extendTokenCompleted()V",
        "Lcom/facebook/Session;->finishReauthorization()V",
        "Lcom/facebook/Session;->removeCallback()V",
        "Lcom/facebook/Session;->saveTokenToCache()V",
        "Lcom/facebook/Session;->validateLoginBehavior()V",
        "Lcom/facebook/Session;->getAuthorizationBundle()Landroid/os/Bundle;",
        "Lcom/facebook/Session;->openActiveSession()Lcom/facebook/Session;",
        "Lcom/facebook/Session;->getPermissions()Ljava/util/List;",
        "Lcom/facebook/Session;->addCallback()V",
        "Lcom/facebook/Session;->getActiveSession()Lcom/facebook/Session;",
        "Lcom/facebook/Session;->logAuthorizationStart()V",
        "Lcom/facebook/Session;->getExpirationDate()Ljava/util/Date;",
        "Lcom/facebook/Session;->setActiveSession()V",
        "Lcom/facebook/Session;->$SWITCH_TABLE$com$facebook$SessionState()[I",
        "Lcom/facebook/Session;->openForPublish()V"
    ],
    "Landroid/support/v4/content/LocalBroadcastManager;": [
        "Landroid/support/v4/content/LocalBroadcastManager;->getInstance()Landroid/support/v4/content/LocalBroadcastManager;",
        "Landroid/support/v4/content/LocalBroadcastManager;->sendBroadcast()Z",
        "Landroid/support/v4/content/LocalBroadcastManager;->unregisterReceiver()V",
        "Landroid/support/v4/content/LocalBroadcastManager;->registerReceiver()V",
        "Landroid/support/v4/content/LocalBroadcastManager;->executePendingBroadcasts()V"
    ],
    "Lcom/facebook/widget/FacebookDialog$PendingCall;": [
        "Lcom/facebook/widget/FacebookDialog$PendingCall;->getCallId()Ljava/util/UUID;",
        "Lcom/facebook/widget/FacebookDialog$PendingCall;->getRequestCode()I",
        "Lcom/facebook/widget/FacebookDialog$PendingCall;->getRequestIntent()Landroid/content/Intent;"
    ],
    "Lcom/facebook/widget/FacebookDialog;": [
        "Lcom/facebook/widget/FacebookDialog;->getProtocolVersionForNativeDialog()I",
        "Lcom/facebook/widget/FacebookDialog;->getAttachmentStore()Lcom/facebook/NativeAppCallAttachmentStore;",
        "Lcom/facebook/widget/FacebookDialog;->handleCanPresent()Z",
        "Lcom/facebook/widget/FacebookDialog;->handleActivityResult()Z",
        "Lcom/facebook/widget/FacebookDialog;->getMinVersionForFeatures()I"
    ],
    "Lcom/facebook/UiLifecycleHelper;": [
        "Lcom/facebook/UiLifecycleHelper;->handleFacebookDialogActivityResult()Z",
        "Lcom/facebook/UiLifecycleHelper;->onActivityResult()V",
        "Lcom/facebook/UiLifecycleHelper;->cancelPendingAppCall()V"
    ],
    "Lcom/facebook/AppEventsLogger;": [
        "Lcom/facebook/AppEventsLogger;->logPurchase()V",
        "Lcom/facebook/AppEventsLogger;->logSdkEvent()V",
        "Lcom/facebook/AppEventsLogger;->getLimitEventUsage()Z",
        "Lcom/facebook/AppEventsLogger;->onContextStop()V",
        "Lcom/facebook/AppEventsLogger;->notifyDeveloperError()V",
        "Lcom/facebook/AppEventsLogger;->flushIfNecessary()V",
        "Lcom/facebook/AppEventsLogger;->activateApp()V",
        "Lcom/facebook/AppEventsLogger;->flushAndWait()V",
        "Lcom/facebook/AppEventsLogger;->newLogger()Lcom/facebook/AppEventsLogger;",
        "Lcom/facebook/AppEventsLogger;->buildRequestForSession()Lcom/facebook/Request;",
        "Lcom/facebook/AppEventsLogger;->buildAndExecuteRequests()Lcom/facebook/AppEventsLogger$FlushStatistics;",
        "Lcom/facebook/AppEventsLogger;->getAccumulatedEventCount()I",
        "Lcom/facebook/AppEventsLogger;->getFlushBehavior()Lcom/facebook/AppEventsLogger$FlushBehavior;",
        "Lcom/facebook/AppEventsLogger;->getSessionEventsState()Lcom/facebook/AppEventsLogger$SessionEventsState;",
        "Lcom/facebook/AppEventsLogger;->logEvent()V",
        "Lcom/facebook/AppEventsLogger;->eagerFlush()V",
        "Lcom/facebook/AppEventsLogger;->handleResponse()V",
        "Lcom/facebook/AppEventsLogger;->flush()V",
        "Lcom/facebook/AppEventsLogger;->getApplicationId()Ljava/lang/String;",
        "Lcom/facebook/AppEventsLogger;->accumulatePersistedEvents()I",
        "Lcom/facebook/AppEventsLogger;->isValidForSession()Z"
    ],
    "Lcom/facebook/SessionState;": [
        "Lcom/facebook/SessionState;->ordinal()I",
        "Lcom/facebook/SessionState;->equals()Z",
        "Lcom/facebook/SessionState;->isClosed()Z",
        "Lcom/facebook/SessionState;->values()[Lcom/facebook/SessionState;",
        "Lcom/facebook/SessionState;->isOpened()Z"
    ],
    "Lcom/facebook/RequestAsyncTask;": [
        "Lcom/facebook/RequestAsyncTask;->doInBackground()Ljava/util/List;",
        "Lcom/facebook/RequestAsyncTask;->executeOnSettingsExecutor()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/RequestAsyncTask;->onPostExecute()V",
        "Lcom/facebook/RequestAsyncTask;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/facebook/RequestBatch;": [
        "Lcom/facebook/RequestBatch;->getCallbackHandler()Landroid/os/Handler;",
        "Lcom/facebook/RequestBatch;->add()V",
        "Lcom/facebook/RequestBatch;->iterator()Ljava/util/Iterator;",
        "Lcom/facebook/RequestBatch;->executeAsync()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/RequestBatch;->executeAsyncImpl()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/RequestBatch;->add()Z",
        "Lcom/facebook/RequestBatch;->set()Lcom/facebook/Request;",
        "Lcom/facebook/RequestBatch;->getId()Ljava/lang/String;",
        "Lcom/facebook/RequestBatch;->getBatchApplicationId()Ljava/lang/String;",
        "Lcom/facebook/RequestBatch;->addCallback()V",
        "Lcom/facebook/RequestBatch;->get()Lcom/facebook/Request;",
        "Lcom/facebook/RequestBatch;->setCallbackHandler()V",
        "Lcom/facebook/RequestBatch;->size()I",
        "Lcom/facebook/RequestBatch;->executeAndWait()Ljava/util/List;",
        "Lcom/facebook/RequestBatch;->getRequests()Ljava/util/List;",
        "Lcom/facebook/RequestBatch;->remove()Lcom/facebook/Request;",
        "Lcom/facebook/RequestBatch;->getTimeout()I",
        "Lcom/facebook/RequestBatch;->executeAndWaitImpl()Ljava/util/List;",
        "Lcom/facebook/RequestBatch;->setBatchApplicationId()V"
    ],
    "Lcom/facebook/Request;": [
        "Lcom/facebook/Request;->setCallback()V",
        "Lcom/facebook/Request;->serializeAttachments()V",
        "Lcom/facebook/Request;->getMimeContentType()Ljava/lang/String;",
        "Lcom/facebook/Request;->newStatusUpdateRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->newPostRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->getUrlForSingleRequest()Ljava/lang/String;",
        "Lcom/facebook/Request;->toHttpConnection()Ljava/net/HttpURLConnection;",
        "Lcom/facebook/Request;->executeAndWait()Lcom/facebook/Response;",
        "Lcom/facebook/Request;->newPlacesSearchRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->executeConnectionAndWait()Ljava/util/List;",
        "Lcom/facebook/Request;->newUploadPhotoRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->createConnection()Ljava/net/HttpURLConnection;",
        "Lcom/facebook/Request;->newMyFriendsRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->getBatchAppId()Ljava/lang/String;",
        "Lcom/facebook/Request;->processGraphObjectProperty()V",
        "Lcom/facebook/Request;->newCustomAudienceThirdPartyIdRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->appendParametersToBaseUrl()Ljava/lang/String;",
        "Lcom/facebook/Request;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/Request;->executeBatchAndWait()Ljava/util/List;",
        "Lcom/facebook/Request;->executeConnectionAsync()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/Request;->typedListFromResponse()Ljava/util/List;",
        "Lcom/facebook/Request;->addCommonParameters()V",
        "Lcom/facebook/Request;->setRestMethod()V",
        "Lcom/facebook/Request;->setHttpMethod()V",
        "Lcom/facebook/Request;->getTag()Ljava/lang/Object;",
        "Lcom/facebook/Request;->getUserAgent()Ljava/lang/String;",
        "Lcom/facebook/Request;->newMeRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->executeAsync()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/Request;->serializeParameters()V",
        "Lcom/facebook/Request;->serializeToUrlConnection()V",
        "Lcom/facebook/Request;->executeMyFriendsRequestAsync()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/Request;->newUpdateOpenGraphObjectRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->executeBatchAsync()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/Request;->isSupportedAttachmentType()Z",
        "Lcom/facebook/Request;->getUrlForBatchedRequest()Ljava/lang/String;",
        "Lcom/facebook/Request;->getGraphObject()Lcom/facebook/model/GraphObject;",
        "Lcom/facebook/Request;->setParameters()V",
        "Lcom/facebook/Request;->getParameters()Landroid/os/Bundle;",
        "Lcom/facebook/Request;->isSupportedParameterType()Z",
        "Lcom/facebook/Request;->serializeToBatch()V",
        "Lcom/facebook/Request;->newGraphPathRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->serializeRequestsAsJSON()V",
        "Lcom/facebook/Request;->newRestRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Request;->validate()V",
        "Lcom/facebook/Request;->runCallbacks()V",
        "Lcom/facebook/Request;->parameterToString()Ljava/lang/String;",
        "Lcom/facebook/Request;->setGraphObject()V",
        "Lcom/facebook/Request;->processGraphObject()V",
        "Lcom/facebook/Request;->executeMeRequestAsync()Lcom/facebook/RequestAsyncTask;",
        "Lcom/facebook/Request;->newPostOpenGraphObjectRequest()Lcom/facebook/Request;"
    ],
    "Lcom/facebook/Settings;": [
        "Lcom/facebook/Settings;->setShouldAutoPublishInstall()V",
        "Lcom/facebook/Settings;->publishInstallAndWaitForResponse()Lcom/facebook/Response;",
        "Lcom/facebook/Settings;->getAsyncTaskExecutor()Ljava/util/concurrent/Executor;",
        "Lcom/facebook/Settings;->getShouldAutoPublishInstall()Z",
        "Lcom/facebook/Settings;->getAttributionId()Ljava/lang/String;",
        "Lcom/facebook/Settings;->isLoggingBehaviorEnabled()Z",
        "Lcom/facebook/Settings;->getExecutor()Ljava/util/concurrent/Executor;",
        "Lcom/facebook/Settings;->publishInstallAsync()V",
        "Lcom/facebook/Settings;->getFacebookDomain()Ljava/lang/String;"
    ],
    "Landroid/os/AsyncTask;": [
        "Landroid/os/AsyncTask;->onPreExecute()V",
        "Landroid/os/AsyncTask;->onPostExecute()V"
    ],
    "Lcom/facebook/internal/Utility;": [
        "Lcom/facebook/internal/Utility;->stringsEqualOrEmpty()Z",
        "Lcom/facebook/internal/Utility;->isNullOrEmpty()Z",
        "Lcom/facebook/internal/Utility;->logd()V",
        "Lcom/facebook/internal/Utility;->deleteDirectory()V",
        "Lcom/facebook/internal/Utility;->clearCaches()V",
        "Lcom/facebook/internal/Utility;->clearCookiesForDomain()V",
        "Lcom/facebook/internal/Utility;->buildUri()Landroid/net/Uri;",
        "Lcom/facebook/internal/Utility;->getMetadataApplicationId()Ljava/lang/String;",
        "Lcom/facebook/internal/Utility;->safeGetBooleanFromResponse()Z",
        "Lcom/facebook/internal/Utility;->queryAppSettings()Lcom/facebook/internal/Utility$FetchedAppSettings;",
        "Lcom/facebook/internal/Utility;->disconnectQuietly()V",
        "Lcom/facebook/internal/Utility;->md5hash()Ljava/lang/String;",
        "Lcom/facebook/internal/Utility;->getStringPropertyAsJSON()Ljava/lang/Object;",
        "Lcom/facebook/internal/Utility;->unmodifiableCollection()Ljava/util/Collection;",
        "Lcom/facebook/internal/Utility;->closeQuietly()V",
        "Lcom/facebook/internal/Utility;->convertJSONObjectToHashMap()Ljava/util/Map;",
        "Lcom/facebook/internal/Utility;->isSubset()Z",
        "Lcom/facebook/internal/Utility;->readStreamToString()Ljava/lang/String;",
        "Lcom/facebook/internal/Utility;->clearFacebookCookies()V",
        "Lcom/facebook/internal/Utility;->putObjectInBundle()V"
    ],
    "Lcom/facebook/AppEventsLogger$PersistedEvents;": [
        "Lcom/facebook/AppEventsLogger$PersistedEvents;->persistEvents()V",
        "Lcom/facebook/AppEventsLogger$PersistedEvents;->readAndClearStore()Lcom/facebook/AppEventsLogger$PersistedEvents;",
        "Lcom/facebook/AppEventsLogger$PersistedEvents;->getEvents()Ljava/util/List;",
        "Lcom/facebook/AppEventsLogger$PersistedEvents;->keySet()Ljava/util/Set;"
    ],
    "Lcom/facebook/AppEventsLogger$SessionEventsState;": [
        "Lcom/facebook/AppEventsLogger$SessionEventsState;->populateRequest()I",
        "Lcom/facebook/AppEventsLogger$SessionEventsState;->addEvent()V",
        "Lcom/facebook/AppEventsLogger$SessionEventsState;->clearInFlightAndStats()V",
        "Lcom/facebook/AppEventsLogger$SessionEventsState;->accumulatePersistedEvents()V",
        "Lcom/facebook/AppEventsLogger$SessionEventsState;->getAccumulatedEventCount()I"
    ],
    "Lcom/facebook/AppEventsLogger$FlushReason;": [
        "Lcom/facebook/AppEventsLogger$FlushReason;->toString()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/Logger;": [
        "Lcom/facebook/internal/Logger;->append()V",
        "Lcom/facebook/internal/Logger;->shouldLog()Z",
        "Lcom/facebook/internal/Logger;->appendKeyValue()V",
        "Lcom/facebook/internal/Logger;->replaceStrings()Ljava/lang/String;",
        "Lcom/facebook/internal/Logger;->logString()V",
        "Lcom/facebook/internal/Logger;->registerAccessToken()V",
        "Lcom/facebook/internal/Logger;->log()V",
        "Lcom/facebook/internal/Logger;->registerStringToReplace()V"
    ],
    "Lcom/facebook/AppEventsLogger$AccessTokenAppIdPair;": [
        "Lcom/facebook/AppEventsLogger$AccessTokenAppIdPair;->getAccessToken()Ljava/lang/String;",
        "Lcom/facebook/AppEventsLogger$AccessTokenAppIdPair;->equals()Z",
        "Lcom/facebook/AppEventsLogger$AccessTokenAppIdPair;->getApplicationId()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/Utility$FetchedAppSettings;": [
        "Lcom/facebook/internal/Utility$FetchedAppSettings;->supportsAttribution()Z",
        "Lcom/facebook/internal/Utility$FetchedAppSettings;->supportsImplicitLogging()Z"
    ],
    "Ljava/util/concurrent/Executor;": [
        "Ljava/util/concurrent/Executor;->execute()V"
    ],
    "Lcom/facebook/Response;": [
        "Lcom/facebook/Response;->getIsFromCache()Z",
        "Lcom/facebook/Response;->fromHttpConnection()Ljava/util/List;",
        "Lcom/facebook/Response;->createResponsesFromString()Ljava/util/List;",
        "Lcom/facebook/Response;->getRequestForPagedResults()Lcom/facebook/Request;",
        "Lcom/facebook/Response;->toString()Ljava/lang/String;",
        "Lcom/facebook/Response;->constructErrorResponses()Ljava/util/List;",
        "Lcom/facebook/Response;->createResponsesFromStream()Ljava/util/List;",
        "Lcom/facebook/Response;->getGraphObject()Lcom/facebook/model/GraphObject;",
        "Lcom/facebook/Response;->getError()Lcom/facebook/FacebookRequestError;",
        "Lcom/facebook/Response;->createResponsesFromObject()Ljava/util/List;",
        "Lcom/facebook/Response;->createResponseFromObject()Lcom/facebook/Response;",
        "Lcom/facebook/Response;->getGraphObjectAs()Lcom/facebook/model/GraphObject;",
        "Lcom/facebook/Response;->getRequest()Lcom/facebook/Request;",
        "Lcom/facebook/Response;->getResponseCache()Lcom/facebook/internal/FileLruCache;"
    ],
    "Lcom/facebook/FacebookRequestError;": [
        "Lcom/facebook/FacebookRequestError;->getErrorType()Ljava/lang/String;",
        "Lcom/facebook/FacebookRequestError;->checkResponseAndCreateError()Lcom/facebook/FacebookRequestError;",
        "Lcom/facebook/FacebookRequestError;->getException()Lcom/facebook/FacebookException;",
        "Lcom/facebook/FacebookRequestError;->toString()Ljava/lang/String;",
        "Lcom/facebook/FacebookRequestError;->getErrorMessage()Ljava/lang/String;",
        "Lcom/facebook/FacebookRequestError;->getErrorCode()I",
        "Lcom/facebook/FacebookRequestError;->getRequestStatusCode()I"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;",
        "Ljava/lang/Double;->longBitsToDouble()D",
        "Ljava/lang/Double;->toString()Ljava/lang/String;",
        "Ljava/lang/Double;->doubleToLongBits()J",
        "Ljava/lang/Double;->doubleValue()D"
    ],
    "Ljava/util/Currency;": [
        "Ljava/util/Currency;->getCurrencyCode()Ljava/lang/String;"
    ],
    "Ljava/math/BigDecimal;": [
        "Ljava/math/BigDecimal;->valueOf()Ljava/math/BigDecimal;",
        "Ljava/math/BigDecimal;->setScale()Ljava/math/BigDecimal;",
        "Ljava/math/BigDecimal;->doubleValue()D"
    ],
    "Lcom/facebook/AuthorizationClient;": [
        "Lcom/facebook/AuthorizationClient;->cancelCurrentHandler()V",
        "Lcom/facebook/AuthorizationClient;->completeWithFailure()V",
        "Lcom/facebook/AuthorizationClient;->getE2E()Ljava/lang/String;",
        "Lcom/facebook/AuthorizationClient;->onActivityResult()Z",
        "Lcom/facebook/AuthorizationClient;->complete()V",
        "Lcom/facebook/AuthorizationClient;->tryNextHandler()V",
        "Lcom/facebook/AuthorizationClient;->notifyBackgroundProcessingStart()V",
        "Lcom/facebook/AuthorizationClient;->createReauthValidationBatch()Lcom/facebook/RequestBatch;",
        "Lcom/facebook/AuthorizationClient;->checkInternetPermission()Z",
        "Lcom/facebook/AuthorizationClient;->authorize()V",
        "Lcom/facebook/AuthorizationClient;->tryCurrentHandler()Z",
        "Lcom/facebook/AuthorizationClient;->setOnCompletedListener()V",
        "Lcom/facebook/AuthorizationClient;->notifyBackgroundProcessingStop()V",
        "Lcom/facebook/AuthorizationClient;->setBackgroundProcessingListener()V",
        "Lcom/facebook/AuthorizationClient;->newAuthorizationLoggingBundle()Landroid/os/Bundle;",
        "Lcom/facebook/AuthorizationClient;->notifyOnCompleteListener()V",
        "Lcom/facebook/AuthorizationClient;->getHandlerTypes()Ljava/util/List;",
        "Lcom/facebook/AuthorizationClient;->validateSameFbidAndFinish()V",
        "Lcom/facebook/AuthorizationClient;->logAuthorizationMethodStart()V",
        "Lcom/facebook/AuthorizationClient;->continueAuth()V",
        "Lcom/facebook/AuthorizationClient;->getInProgress()Z",
        "Lcom/facebook/AuthorizationClient;->logWebLoginCompleted()V",
        "Lcom/facebook/AuthorizationClient;->startOrContinueAuth()V",
        "Lcom/facebook/AuthorizationClient;->addLoggingExtra()V",
        "Lcom/facebook/AuthorizationClient;->checkPermission()I",
        "Lcom/facebook/AuthorizationClient;->createGetProfileIdRequest()Lcom/facebook/Request;",
        "Lcom/facebook/AuthorizationClient;->setContext()V",
        "Lcom/facebook/AuthorizationClient;->logAuthorizationMethodComplete()V",
        "Lcom/facebook/AuthorizationClient;->createGetPermissionsRequest()Lcom/facebook/Request;"
    ],
    "Lcom/facebook/AuthorizationClient$Result;": [
        "Lcom/facebook/AuthorizationClient$Result;->createErrorResult()Lcom/facebook/AuthorizationClient$Result;"
    ],
    "Lcom/facebook/AuthorizationClient$AuthorizationRequest;": [
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->getLoginBehavior()Lcom/facebook/SessionLoginBehavior;",
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->needsNewTokenValidation()Z",
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->getRequestCode()I",
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->getAuthId()Ljava/lang/String;",
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->isLegacy()Z",
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->getPreviousAccessToken()Ljava/lang/String;",
        "Lcom/facebook/AuthorizationClient$AuthorizationRequest;->getApplicationId()Ljava/lang/String;"
    ],
    "Lcom/facebook/SessionLoginBehavior;": [
        "Lcom/facebook/SessionLoginBehavior;->allowsKatanaAuth()Z",
        "Lcom/facebook/SessionLoginBehavior;->allowsWebViewAuth()Z",
        "Lcom/facebook/SessionLoginBehavior;->toString()Ljava/lang/String;"
    ],
    "Lcom/facebook/AuthorizationClient$Result$Code;": [
        "Lcom/facebook/AuthorizationClient$Result$Code;->getLoggingValue()Ljava/lang/String;"
    ],
    "Lcom/facebook/AuthorizationClient$BackgroundProcessingListener;": [
        "Lcom/facebook/AuthorizationClient$BackgroundProcessingListener;->onBackgroundProcessingStopped()V",
        "Lcom/facebook/AuthorizationClient$BackgroundProcessingListener;->onBackgroundProcessingStarted()V"
    ],
    "Lcom/facebook/AuthorizationClient$OnCompletedListener;": [
        "Lcom/facebook/AuthorizationClient$OnCompletedListener;->onCompleted()V"
    ],
    "Lcom/facebook/AuthorizationClient$AuthHandler;": [
        "Lcom/facebook/AuthorizationClient$AuthHandler;->cancel()V",
        "Lcom/facebook/AuthorizationClient$AuthHandler;->getNameForLogging()Ljava/lang/String;",
        "Lcom/facebook/AuthorizationClient$AuthHandler;->needsRestart()Z",
        "Lcom/facebook/AuthorizationClient$AuthHandler;->tryAuthorize()Z",
        "Lcom/facebook/AuthorizationClient$AuthHandler;->onActivityResult()Z",
        "Lcom/facebook/AuthorizationClient$AuthHandler;->needsInternetPermission()Z"
    ],
    "Lcom/facebook/AccessToken;": [
        "Lcom/facebook/AccessToken;->createFromRefresh()Lcom/facebook/AccessToken;",
        "Lcom/facebook/AccessToken;->createFromString()Lcom/facebook/AccessToken;",
        "Lcom/facebook/AccessToken;->appendPermissions()V",
        "Lcom/facebook/AccessToken;->getToken()Ljava/lang/String;",
        "Lcom/facebook/AccessToken;->createNew()Lcom/facebook/AccessToken;",
        "Lcom/facebook/AccessToken;->createFromCache()Lcom/facebook/AccessToken;",
        "Lcom/facebook/AccessToken;->isInvalid()Z",
        "Lcom/facebook/AccessToken;->toCacheBundle()Landroid/os/Bundle;",
        "Lcom/facebook/AccessToken;->createEmptyToken()Lcom/facebook/AccessToken;",
        "Lcom/facebook/AccessToken;->getExpires()Ljava/util/Date;",
        "Lcom/facebook/AccessToken;->getSource()Lcom/facebook/AccessTokenSource;",
        "Lcom/facebook/AccessToken;->getPermissions()Ljava/util/List;",
        "Lcom/facebook/AccessToken;->getLastRefresh()Ljava/util/Date;",
        "Lcom/facebook/AccessToken;->createFromBundle()Lcom/facebook/AccessToken;",
        "Lcom/facebook/AccessToken;->getBundleLongAsDate()Ljava/util/Date;",
        "Lcom/facebook/AccessToken;->tokenToString()Ljava/lang/String;"
    ],
    "Lcom/facebook/NativeAppCallContentProvider;": [
        "Lcom/facebook/NativeAppCallContentProvider;->parseCallIdAndAttachmentName()Landroid/util/Pair;"
    ],
    "Lcom/facebook/NativeAppCallContentProvider$AttachmentDataSource;": [
        "Lcom/facebook/NativeAppCallContentProvider$AttachmentDataSource;->openAttachment()Ljava/io/File;"
    ],
    "Landroid/os/ParcelFileDescriptor;": [
        "Landroid/os/ParcelFileDescriptor;->open()Landroid/os/ParcelFileDescriptor;"
    ],
    "Lcom/facebook/model/GraphObject$Factory;": [
        "Lcom/facebook/model/GraphObject$Factory;->hasSameId()Z",
        "Lcom/facebook/model/GraphObject$Factory;->create()Lcom/facebook/model/GraphObject;",
        "Lcom/facebook/model/GraphObject$Factory;->createList()Lcom/facebook/model/GraphObjectList;"
    ],
    "Lorg/json/JSONTokener;": [
        "Lorg/json/JSONTokener;->nextValue()Ljava/lang/Object;"
    ],
    "Lcom/facebook/internal/CacheableRequestBatch;": [
        "Lcom/facebook/internal/CacheableRequestBatch;->getForceRoundTrip()Z",
        "Lcom/facebook/internal/CacheableRequestBatch;->getCacheKeyOverride()Ljava/lang/String;",
        "Lcom/facebook/internal/CacheableRequestBatch;->setForceRoundTrip()V"
    ],
    "Lcom/facebook/internal/FileLruCache;": [
        "Lcom/facebook/internal/FileLruCache;->interceptAndPut()Ljava/io/InputStream;",
        "Lcom/facebook/internal/FileLruCache;->get()Ljava/io/InputStream;",
        "Lcom/facebook/internal/FileLruCache;->trim()V",
        "Lcom/facebook/internal/FileLruCache;->clearCache()V",
        "Lcom/facebook/internal/FileLruCache;->postTrim()V",
        "Lcom/facebook/internal/FileLruCache;->renameToTargetAndTrim()V",
        "Lcom/facebook/internal/FileLruCache;->openPutStream()Ljava/io/OutputStream;"
    ],
    "Lcom/facebook/model/GraphObject;": [
        "Lcom/facebook/model/GraphObject;->getInnerJSONObject()Lorg/json/JSONObject;",
        "Lcom/facebook/model/GraphObject;->getProperty()Ljava/lang/Object;",
        "Lcom/facebook/model/GraphObject;->asMap()Ljava/util/Map;",
        "Lcom/facebook/model/GraphObject;->cast()Lcom/facebook/model/GraphObject;",
        "Lcom/facebook/model/GraphObject;->setProperty()V"
    ],
    "Lcom/facebook/model/GraphObjectList;": [
        "Lcom/facebook/model/GraphObjectList;->get()Ljava/lang/Object;",
        "Lcom/facebook/model/GraphObjectList;->size()I",
        "Lcom/facebook/model/GraphObjectList;->getInnerJSONArray()Lorg/json/JSONArray;",
        "Lcom/facebook/model/GraphObjectList;->castToListOf()Lcom/facebook/model/GraphObjectList;"
    ],
    "Lcom/facebook/Response$PagedResults;": [
        "Lcom/facebook/Response$PagedResults;->getPaging()Lcom/facebook/Response$PagingInfo;"
    ],
    "Lcom/facebook/Response$PagingInfo;": [
        "Lcom/facebook/Response$PagingInfo;->getNext()Ljava/lang/String;",
        "Lcom/facebook/Response$PagingInfo;->getPrevious()Ljava/lang/String;"
    ],
    "Landroid/net/Uri$Builder;": [
        "Landroid/net/Uri$Builder;->encodedPath()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->path()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->authority()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->toString()Ljava/lang/String;",
        "Landroid/net/Uri$Builder;->build()Landroid/net/Uri;",
        "Landroid/net/Uri$Builder;->encodedQuery()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->scheme()Landroid/net/Uri$Builder;",
        "Landroid/net/Uri$Builder;->appendQueryParameter()Landroid/net/Uri$Builder;"
    ],
    "Lcom/facebook/model/OpenGraphObject;": [
        "Lcom/facebook/model/OpenGraphObject;->getType()Ljava/lang/String;",
        "Lcom/facebook/model/OpenGraphObject;->setData()V",
        "Lcom/facebook/model/OpenGraphObject;->getId()Ljava/lang/String;",
        "Lcom/facebook/model/OpenGraphObject;->getInnerJSONObject()Lorg/json/JSONObject;",
        "Lcom/facebook/model/OpenGraphObject;->getTitle()Ljava/lang/String;",
        "Lcom/facebook/model/OpenGraphObject;->setId()V"
    ],
    "Lcom/facebook/model/OpenGraphObject$Factory;": [
        "Lcom/facebook/model/OpenGraphObject$Factory;->createForPost()Lcom/facebook/model/OpenGraphObject;"
    ],
    "Lcom/facebook/model/GraphUser;": [
        "Lcom/facebook/model/GraphUser;->getName()Ljava/lang/String;",
        "Lcom/facebook/model/GraphUser;->getId()Ljava/lang/String;"
    ],
    "Lcom/facebook/model/GraphPlace;": [
        "Lcom/facebook/model/GraphPlace;->getId()Ljava/lang/String;"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->getParent()Ljava/lang/String;",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->setLastModified()Z",
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->createTempFile()Ljava/io/File;",
        "Ljava/io/File;->renameTo()Z",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->exists()Z"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->setValue()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;"
    ],
    "Lcom/facebook/Request$KeyValueSerializer;": [
        "Lcom/facebook/Request$KeyValueSerializer;->writeString()V"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Lcom/facebook/Request$Serializer;": [
        "Lcom/facebook/Request$Serializer;->writeObject()V",
        "Lcom/facebook/Request$Serializer;->writeString()V"
    ],
    "Lcom/facebook/HttpMethod;": [
        "Lcom/facebook/HttpMethod;->name()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/ServerProtocol;": [
        "Lcom/facebook/internal/ServerProtocol;->getDialogAuthority()Ljava/lang/String;",
        "Lcom/facebook/internal/ServerProtocol;->getRestUrlBase()Ljava/lang/String;",
        "Lcom/facebook/internal/ServerProtocol;->getGraphUrlBase()Ljava/lang/String;"
    ],
    "Lcom/facebook/model/GraphMultiResult;": [
        "Lcom/facebook/model/GraphMultiResult;->getData()Lcom/facebook/model/GraphObjectList;"
    ],
    "Lcom/facebook/NativeAppCallAttachmentStore;": [
        "Lcom/facebook/NativeAppCallAttachmentStore;->getAttachmentsDirectoryForCall()Ljava/io/File;",
        "Lcom/facebook/NativeAppCallAttachmentStore;->getAttachmentsDirectory()Ljava/io/File;",
        "Lcom/facebook/NativeAppCallAttachmentStore;->ensureAttachmentsDirectoryExists()Ljava/io/File;",
        "Lcom/facebook/NativeAppCallAttachmentStore;->cleanupAttachmentsForCall()V",
        "Lcom/facebook/NativeAppCallAttachmentStore;->cleanupAllAttachments()V",
        "Lcom/facebook/NativeAppCallAttachmentStore;->getAttachmentFile()Ljava/io/File;"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->isRecycled()Z",
        "Landroid/graphics/Bitmap;->getHeight()I",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->compress()Z",
        "Landroid/graphics/Bitmap;->createScaledBitmap()Landroid/graphics/Bitmap;"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Lcom/facebook/InsightsLogger;": [
        "Lcom/facebook/InsightsLogger;->logPurchase()V"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->addAll()Z",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->sort()V",
        "Ljava/util/Collections;->shuffle()V",
        "Ljava/util/Collections;->reverse()V",
        "Ljava/util/Collections;->unmodifiableList()Ljava/util/List;",
        "Ljava/util/Collections;->emptyList()Ljava/util/List;",
        "Ljava/util/Collections;->unmodifiableSet()Ljava/util/Set;",
        "Ljava/util/Collections;->unmodifiableCollection()Ljava/util/Collection;"
    ],
    "Lcom/facebook/TestSession;": [
        "Lcom/facebook/TestSession;->validNameStringFromInteger()Ljava/lang/String;",
        "Lcom/facebook/TestSession;->setLastAttemptedTokenExtendDate()V",
        "Lcom/facebook/TestSession;->createSessionWithSharedUser()Lcom/facebook/TestSession;",
        "Lcom/facebook/TestSession;->createTestSession()Lcom/facebook/TestSession;",
        "Lcom/facebook/TestSession;->createTestAccountAndFinishAuth()Lcom/facebook/TestSession$TestAccount;",
        "Lcom/facebook/TestSession;->getAppAccessToken()Ljava/lang/String;",
        "Lcom/facebook/TestSession;->findTestAccountMatchingIdentifier()Lcom/facebook/TestSession$TestAccount;",
        "Lcom/facebook/TestSession;->finishAuthWithTestAccount()V",
        "Lcom/facebook/TestSession;->deleteTestAccount()V",
        "Lcom/facebook/TestSession;->getPermissionsString()Ljava/lang/String;",
        "Lcom/facebook/TestSession;->findOrCreateSharedTestAccount()V",
        "Lcom/facebook/TestSession;->setCurrentTokenRefreshRequest()V",
        "Lcom/facebook/TestSession;->populateTestAccounts()V",
        "Lcom/facebook/TestSession;->storeTestAccount()V",
        "Lcom/facebook/TestSession;->getTokenInfo()Lcom/facebook/AccessToken;",
        "Lcom/facebook/TestSession;->setTokenInfo()V",
        "Lcom/facebook/TestSession;->getSharedTestAccountIdentifier()Ljava/lang/String;",
        "Lcom/facebook/TestSession;->retrieveTestAccountsForAppIfNeeded()V",
        "Lcom/facebook/TestSession;->finishAuthOrReauth()V"
    ],
    "Lcom/facebook/TestSession$TestAccount;": [
        "Lcom/facebook/TestSession$TestAccount;->getAccessToken()Ljava/lang/String;",
        "Lcom/facebook/TestSession$TestAccount;->getId()Ljava/lang/String;",
        "Lcom/facebook/TestSession$TestAccount;->setName()V",
        "Lcom/facebook/TestSession$TestAccount;->getName()Ljava/lang/String;"
    ],
    "Lcom/facebook/FacebookException;": [
        "Lcom/facebook/FacebookException;->getMessage()Ljava/lang/String;",
        "Lcom/facebook/FacebookException;->getLocalizedMessage()Ljava/lang/String;",
        "Lcom/facebook/FacebookException;->toString()Ljava/lang/String;"
    ],
    "Lcom/facebook/TestSession$UserAccount;": [
        "Lcom/facebook/TestSession$UserAccount;->getName()Ljava/lang/String;",
        "Lcom/facebook/TestSession$UserAccount;->getUid()Ljava/lang/String;"
    ],
    "Lcom/facebook/TestSession$FqlResponse;": [
        "Lcom/facebook/TestSession$FqlResponse;->getData()Lcom/facebook/model/GraphObjectList;"
    ],
    "Lcom/facebook/TestSession$FqlResult;": [
        "Lcom/facebook/TestSession$FqlResult;->getFqlResultSet()Lcom/facebook/model/GraphObjectList;"
    ],
    "Ljava/util/concurrent/atomic/AtomicInteger;": [
        "Ljava/util/concurrent/atomic/AtomicInteger;->get()I",
        "Ljava/util/concurrent/atomic/AtomicInteger;->set()V",
        "Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->moveToPosition()Z",
        "Landroid/database/Cursor;->registerDataSetObserver()V",
        "Landroid/database/Cursor;->getColumnIndexOrThrow()I",
        "Landroid/database/Cursor;->moveToNext()Z",
        "Landroid/database/Cursor;->getInt()I",
        "Landroid/database/Cursor;->getLong()J",
        "Landroid/database/Cursor;->getFloat()F",
        "Landroid/database/Cursor;->unregisterDataSetObserver()V",
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->requery()Z",
        "Landroid/database/Cursor;->getColumnIndex()I",
        "Landroid/database/Cursor;->moveToFirst()Z",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->registerContentObserver()V",
        "Landroid/database/Cursor;->isClosed()Z",
        "Landroid/database/Cursor;->unregisterContentObserver()V",
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->move()Z"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->intValue()I",
        "Ljava/lang/Byte;->valueOf()Ljava/lang/Byte;"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->valueOf()Ljava/lang/Short;",
        "Ljava/lang/Short;->intValue()I",
        "Ljava/lang/Short;->parseShort()S"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->intValue()I",
        "Ljava/lang/Float;->shortValue()S",
        "Ljava/lang/Float;->floatToRawIntBits()I",
        "Ljava/lang/Float;->floatToIntBits()I",
        "Ljava/lang/Float;->parseFloat()F",
        "Ljava/lang/Float;->toString()Ljava/lang/String;",
        "Ljava/lang/Float;->longValue()J",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;",
        "Ljava/lang/Float;->doubleValue()D",
        "Ljava/lang/Float;->intBitsToFloat()F",
        "Ljava/lang/Float;->byteValue()B",
        "Ljava/lang/Float;->floatValue()F"
    ],
    "Lcom/facebook/SharedPreferencesTokenCachingStrategy;": [
        "Lcom/facebook/SharedPreferencesTokenCachingStrategy;->deserializeKey()V",
        "Lcom/facebook/SharedPreferencesTokenCachingStrategy;->serializeKey()V"
    ],
    "Lcom/facebook/LoginActivity;": [
        "Lcom/facebook/LoginActivity;->getCallingPackage()Ljava/lang/String;",
        "Lcom/facebook/LoginActivity;->finish()V",
        "Lcom/facebook/LoginActivity;->findViewById()Landroid/view/View;",
        "Lcom/facebook/LoginActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/facebook/LoginActivity;->setContentView()V",
        "Lcom/facebook/LoginActivity;->populateIntentExtras()Landroid/os/Bundle;",
        "Lcom/facebook/LoginActivity;->onAuthClientCompleted()V",
        "Lcom/facebook/LoginActivity;->setResult()V"
    ],
    "Lcom/facebook/AppLinkData;": [
        "Lcom/facebook/AppLinkData;->createFromUri()Lcom/facebook/AppLinkData;",
        "Lcom/facebook/AppLinkData;->createFromJson()Lcom/facebook/AppLinkData;",
        "Lcom/facebook/AppLinkData;->fetchDeferredAppLinkData()V"
    ],
    "Lcom/facebook/AppLinkData$DeferredAppLinkDataClient;": [
        "Lcom/facebook/AppLinkData$DeferredAppLinkDataClient;->setCompletedListener()V",
        "Lcom/facebook/AppLinkData$DeferredAppLinkDataClient;->start()Z"
    ],
    "Lcom/facebook/FacebookRequestError$Range;": [
        "Lcom/facebook/FacebookRequestError$Range;->contains()Z"
    ],
    "Lcom/facebook/Session$AutoPublishAsyncTask;": [
        "Lcom/facebook/Session$AutoPublishAsyncTask;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/facebook/Session$AuthorizationRequest;": [
        "Lcom/facebook/Session$AuthorizationRequest;->access$3()Z",
        "Lcom/facebook/Session$AuthorizationRequest;->access$4()Lcom/facebook/SessionLoginBehavior;",
        "Lcom/facebook/Session$AuthorizationRequest;->getStartActivityDelegate()Lcom/facebook/Session$StartActivityDelegate;",
        "Lcom/facebook/Session$AuthorizationRequest;->getAuthorizationClientRequest()Lcom/facebook/AuthorizationClient$AuthorizationRequest;",
        "Lcom/facebook/Session$AuthorizationRequest;->getAuthId()Ljava/lang/String;",
        "Lcom/facebook/Session$AuthorizationRequest;->access$6()Ljava/util/List;",
        "Lcom/facebook/Session$AuthorizationRequest;->setApplicationId()V",
        "Lcom/facebook/Session$AuthorizationRequest;->access$2()Ljava/util/Map;",
        "Lcom/facebook/Session$AuthorizationRequest;->access$7()Lcom/facebook/SessionDefaultAudience;",
        "Lcom/facebook/Session$AuthorizationRequest;->getRequestCode()I",
        "Lcom/facebook/Session$AuthorizationRequest;->getLoginBehavior()Lcom/facebook/SessionLoginBehavior;",
        "Lcom/facebook/Session$AuthorizationRequest;->getPermissions()Ljava/util/List;",
        "Lcom/facebook/Session$AuthorizationRequest;->access$5()I"
    ],
    "Lcom/facebook/SessionDefaultAudience;": [
        "Lcom/facebook/SessionDefaultAudience;->toString()Ljava/lang/String;"
    ],
    "Lcom/facebook/Session$OpenRequest;": [
        "Lcom/facebook/Session$OpenRequest;->setPermissions()Lcom/facebook/Session$OpenRequest;",
        "Lcom/facebook/Session$OpenRequest;->setRequestCode()Lcom/facebook/Session$OpenRequest;",
        "Lcom/facebook/Session$OpenRequest;->getCallback()Lcom/facebook/Session$StatusCallback;",
        "Lcom/facebook/Session$OpenRequest;->setLoginBehavior()Lcom/facebook/Session$OpenRequest;",
        "Lcom/facebook/Session$OpenRequest;->setCallback()Lcom/facebook/Session$OpenRequest;",
        "Lcom/facebook/Session$OpenRequest;->setIsLegacy()V",
        "Lcom/facebook/Session$OpenRequest;->getPermissions()Ljava/util/List;"
    ],
    "Lcom/facebook/Session$Builder;": [
        "Lcom/facebook/Session$Builder;->setApplicationId()Lcom/facebook/Session$Builder;",
        "Lcom/facebook/Session$Builder;->build()Lcom/facebook/Session;",
        "Lcom/facebook/Session$Builder;->setTokenCachingStrategy()Lcom/facebook/Session$Builder;"
    ],
    "Lcom/facebook/Session$NewPermissionsRequest;": [
        "Lcom/facebook/Session$NewPermissionsRequest;->setValidateSameFbidAsToken()V"
    ],
    "Ljava/io/ObjectInputStream;": [
        "Ljava/io/ObjectInputStream;->readObject()Ljava/lang/Object;"
    ],
    "Ljava/io/ObjectOutputStream;": [
        "Ljava/io/ObjectOutputStream;->writeObject()V"
    ],
    "Lcom/facebook/Session$StartActivityDelegate;": [
        "Lcom/facebook/Session$StartActivityDelegate;->startActivityForResult()V"
    ],
    "Lcom/facebook/internal/SessionAuthorizationType;": [
        "Lcom/facebook/internal/SessionAuthorizationType;->equals()Z"
    ],
    "Lcom/facebook/Session$TokenRefreshRequest;": [
        "Lcom/facebook/Session$TokenRefreshRequest;->bind()V"
    ],
    "Lcom/facebook/AccessTokenSource;": [
        "Lcom/facebook/AccessTokenSource;->canExtendToken()Z"
    ],
    "Lcom/facebook/internal/ImageResponseCache;": [
        "Lcom/facebook/internal/ImageResponseCache;->getCache()Lcom/facebook/internal/FileLruCache;",
        "Lcom/facebook/internal/ImageResponseCache;->clearCache()V",
        "Lcom/facebook/internal/ImageResponseCache;->isCDNURL()Z",
        "Lcom/facebook/internal/ImageResponseCache;->interceptAndCacheImageStream()Ljava/io/InputStream;",
        "Lcom/facebook/internal/ImageResponseCache;->getCachedImageStream()Ljava/io/InputStream;"
    ],
    "Ljava/net/URI;": [
        "Ljava/net/URI;->getHost()Ljava/lang/String;",
        "Ljava/net/URI;->equals()Z",
        "Ljava/net/URI;->toString()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/PlatformServiceClient$CompletedListener;": [
        "Lcom/facebook/internal/PlatformServiceClient$CompletedListener;->completed()V"
    ],
    "Lcom/facebook/internal/PlatformServiceClient;": [
        "Lcom/facebook/internal/PlatformServiceClient;->populateRequestBundle()V",
        "Lcom/facebook/internal/PlatformServiceClient;->sendMessage()V",
        "Lcom/facebook/internal/PlatformServiceClient;->callback()V"
    ],
    "Landroid/os/Message;": [
        "Landroid/os/Message;->obtain()Landroid/os/Message;",
        "Landroid/os/Message;->setData()V",
        "Landroid/os/Message;->sendToTarget()V",
        "Landroid/os/Message;->getData()Landroid/os/Bundle;"
    ],
    "Landroid/os/Messenger;": [
        "Landroid/os/Messenger;->send()V"
    ],
    "Lcom/facebook/internal/NativeProtocol;": [
        "Lcom/facebook/internal/NativeProtocol;->validateSignature()Z",
        "Lcom/facebook/internal/NativeProtocol;->ensureDefaultPermissions()Ljava/util/ArrayList;",
        "Lcom/facebook/internal/NativeProtocol;->validateKatanaServiceIntent()Landroid/content/Intent;",
        "Lcom/facebook/internal/NativeProtocol;->isErrorResult()Z",
        "Lcom/facebook/internal/NativeProtocol;->validateKatanaActivityIntent()Landroid/content/Intent;",
        "Lcom/facebook/internal/NativeProtocol;->generateCallId()Ljava/lang/String;",
        "Lcom/facebook/internal/NativeProtocol;->getLatestAvailableProtocolVersion()I",
        "Lcom/facebook/internal/NativeProtocol;->createPlatformServiceIntent()Landroid/content/Intent;",
        "Lcom/facebook/internal/NativeProtocol;->getErrorFromResult()Ljava/lang/Exception;",
        "Lcom/facebook/internal/NativeProtocol;->ensureDefaultAudience()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/ImageRequest$Builder;": [
        "Lcom/facebook/internal/ImageRequest$Builder;->access$4()Ljava/lang/Object;",
        "Lcom/facebook/internal/ImageRequest$Builder;->access$1()Ljava/net/URI;",
        "Lcom/facebook/internal/ImageRequest$Builder;->setCallerTag()Lcom/facebook/internal/ImageRequest$Builder;",
        "Lcom/facebook/internal/ImageRequest$Builder;->build()Lcom/facebook/internal/ImageRequest;",
        "Lcom/facebook/internal/ImageRequest$Builder;->access$2()Lcom/facebook/internal/ImageRequest$Callback;",
        "Lcom/facebook/internal/ImageRequest$Builder;->access$0()Landroid/content/Context;",
        "Lcom/facebook/internal/ImageRequest$Builder;->setCallback()Lcom/facebook/internal/ImageRequest$Builder;",
        "Lcom/facebook/internal/ImageRequest$Builder;->access$3()Z",
        "Lcom/facebook/internal/ImageRequest$Builder;->setAllowCachedRedirects()Lcom/facebook/internal/ImageRequest$Builder;"
    ],
    "Lcom/facebook/internal/FileLruCache$BufferFile;": [
        "Lcom/facebook/internal/FileLruCache$BufferFile;->deleteAll()V",
        "Lcom/facebook/internal/FileLruCache$BufferFile;->newFile()Ljava/io/File;",
        "Lcom/facebook/internal/FileLruCache$BufferFile;->excludeBufferFiles()Ljava/io/FilenameFilter;"
    ],
    "Lcom/facebook/internal/FileLruCache$Limits;": [
        "Lcom/facebook/internal/FileLruCache$Limits;->getFileCount()I",
        "Lcom/facebook/internal/FileLruCache$Limits;->getByteCount()I"
    ],
    "Ljava/util/PriorityQueue;": [
        "Ljava/util/PriorityQueue;->remove()Ljava/lang/Object;",
        "Ljava/util/PriorityQueue;->add()Z"
    ],
    "Lcom/facebook/internal/FileLruCache$ModifiedFile;": [
        "Lcom/facebook/internal/FileLruCache$ModifiedFile;->getFile()Ljava/io/File;",
        "Lcom/facebook/internal/FileLruCache$ModifiedFile;->getModified()J"
    ],
    "Ljava/util/concurrent/atomic/AtomicLong;": [
        "Ljava/util/concurrent/atomic/AtomicLong;->set()V"
    ],
    "Lcom/facebook/internal/FileLruCache$StreamHeader;": [
        "Lcom/facebook/internal/FileLruCache$StreamHeader;->writeHeader()V",
        "Lcom/facebook/internal/FileLruCache$StreamHeader;->readHeader()Lorg/json/JSONObject;"
    ],
    "Ljava/io/BufferedInputStream;": [
        "Ljava/io/BufferedInputStream;->close()V"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->printStackTrace()V",
        "Ljava/io/FileNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/json/JSONException;": [
        "Lorg/json/JSONException;->printStackTrace()V",
        "Lorg/json/JSONException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/facebook/internal/UrlRedirectCache;": [
        "Lcom/facebook/internal/UrlRedirectCache;->getRedirectedUri()Ljava/net/URI;",
        "Lcom/facebook/internal/UrlRedirectCache;->getCache()Lcom/facebook/internal/FileLruCache;",
        "Lcom/facebook/internal/UrlRedirectCache;->cacheUriRedirect()V",
        "Lcom/facebook/internal/UrlRedirectCache;->clearCache()V"
    ],
    "Ljava/io/InputStreamReader;": [
        "Ljava/io/InputStreamReader;->close()V",
        "Ljava/io/InputStreamReader;->read()I"
    ],
    "Lcom/facebook/internal/ImageDownloader;": [
        "Lcom/facebook/internal/ImageDownloader;->getHandler()Landroid/os/Handler;",
        "Lcom/facebook/internal/ImageDownloader;->issueResponse()V",
        "Lcom/facebook/internal/ImageDownloader;->prioritizeRequest()V",
        "Lcom/facebook/internal/ImageDownloader;->cancelRequest()Z",
        "Lcom/facebook/internal/ImageDownloader;->removePendingRequest()Lcom/facebook/internal/ImageDownloader$DownloaderContext;",
        "Lcom/facebook/internal/ImageDownloader;->clearCache()V",
        "Lcom/facebook/internal/ImageDownloader;->readFromCache()V",
        "Lcom/facebook/internal/ImageDownloader;->download()V",
        "Lcom/facebook/internal/ImageDownloader;->enqueueCacheRead()V",
        "Lcom/facebook/internal/ImageDownloader;->downloadAsync()V",
        "Lcom/facebook/internal/ImageDownloader;->enqueueRequest()V",
        "Lcom/facebook/internal/ImageDownloader;->enqueueDownload()V"
    ],
    "Landroid/webkit/CookieSyncManager;": [
        "Landroid/webkit/CookieSyncManager;->createInstance()Landroid/webkit/CookieSyncManager;",
        "Landroid/webkit/CookieSyncManager;->sync()V"
    ],
    "Landroid/webkit/CookieManager;": [
        "Landroid/webkit/CookieManager;->getInstance()Landroid/webkit/CookieManager;",
        "Landroid/webkit/CookieManager;->removeExpiredCookie()V",
        "Landroid/webkit/CookieManager;->getCookie()Ljava/lang/String;",
        "Landroid/webkit/CookieManager;->setCookie()V"
    ],
    "Ljava/io/Closeable;": [
        "Ljava/io/Closeable;->close()V"
    ],
    "Lcom/facebook/internal/ImageRequest;": [
        "Lcom/facebook/internal/ImageRequest;->getContext()Landroid/content/Context;",
        "Lcom/facebook/internal/ImageRequest;->getProfilePictureUrl()Ljava/net/URI;",
        "Lcom/facebook/internal/ImageRequest;->getCallerTag()Ljava/lang/Object;",
        "Lcom/facebook/internal/ImageRequest;->isCachedRedirectAllowed()Z",
        "Lcom/facebook/internal/ImageRequest;->getCallback()Lcom/facebook/internal/ImageRequest$Callback;",
        "Lcom/facebook/internal/ImageRequest;->getImageUri()Ljava/net/URI;"
    ],
    "Lcom/facebook/internal/WorkQueue$WorkItem;": [
        "Lcom/facebook/internal/WorkQueue$WorkItem;->moveToFront()V",
        "Lcom/facebook/internal/WorkQueue$WorkItem;->cancel()Z"
    ],
    "Lcom/facebook/internal/WorkQueue;": [
        "Lcom/facebook/internal/WorkQueue;->finishItemAndStartNew()V",
        "Lcom/facebook/internal/WorkQueue;->startItem()V",
        "Lcom/facebook/internal/WorkQueue;->addActiveWorkItem()Lcom/facebook/internal/WorkQueue$WorkItem;",
        "Lcom/facebook/internal/WorkQueue;->execute()V"
    ],
    "Lcom/facebook/internal/SessionTracker;": [
        "Lcom/facebook/internal/SessionTracker;->isTracking()Z",
        "Lcom/facebook/internal/SessionTracker;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/internal/SessionTracker;->getOpenSession()Lcom/facebook/Session;",
        "Lcom/facebook/internal/SessionTracker;->addBroadcastReceiver()V",
        "Lcom/facebook/internal/SessionTracker;->stopTracking()V",
        "Lcom/facebook/internal/SessionTracker;->setSession()V",
        "Lcom/facebook/internal/SessionTracker;->startTracking()V"
    ],
    "Lcom/facebook/internal/WorkQueue$WorkNode;": [
        "Lcom/facebook/internal/WorkQueue$WorkNode;->removeFromList()Lcom/facebook/internal/WorkQueue$WorkNode;",
        "Lcom/facebook/internal/WorkQueue$WorkNode;->setIsRunning()V",
        "Lcom/facebook/internal/WorkQueue$WorkNode;->getNext()Lcom/facebook/internal/WorkQueue$WorkNode;",
        "Lcom/facebook/internal/WorkQueue$WorkNode;->addToList()Lcom/facebook/internal/WorkQueue$WorkNode;",
        "Lcom/facebook/internal/WorkQueue$WorkNode;->verify()V"
    ],
    "Landroid/content/pm/Signature;": [
        "Landroid/content/pm/Signature;->toCharsString()Ljava/lang/String;"
    ],
    "Lcom/facebook/widget/SimpleGraphObjectCursor;": [
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->setFromCache()V",
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->close()V",
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->isClosed()Z",
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->moveToPosition()Z",
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->addGraphObjects()V",
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->setMoreObjectsAvailable()V",
        "Lcom/facebook/widget/SimpleGraphObjectCursor;->getCount()I"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem$Type;": [
        "Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem$Type;->values()[Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem$Type;",
        "Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem$Type;->ordinal()I"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->setFactory()V",
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;",
        "Landroid/view/LayoutInflater;->from()Landroid/view/LayoutInflater;",
        "Landroid/view/LayoutInflater;->getFactory()Landroid/view/LayoutInflater$Factory;"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter;": [
        "Lcom/facebook/widget/GraphObjectAdapter;->processImageResponse()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->updateCheckboxState()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->getSubTitleOfGraphObject()Ljava/lang/CharSequence;",
        "Lcom/facebook/widget/GraphObjectAdapter;->getSectionHeaderView()Landroid/view/View;",
        "Lcom/facebook/widget/GraphObjectAdapter;->$SWITCH_TABLE$com$facebook$widget$GraphObjectAdapter$SectionAndItem$Type()[I",
        "Lcom/facebook/widget/GraphObjectAdapter;->downloadProfilePicture()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->compareGraphObjects()I",
        "Lcom/facebook/widget/GraphObjectAdapter;->getGraphObjectRowLayoutId()I",
        "Lcom/facebook/widget/GraphObjectAdapter;->prioritizeViewRange()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->changeCursor()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->getGraphObjectsById()Ljava/util/List;",
        "Lcom/facebook/widget/GraphObjectAdapter;->createGraphObjectView()Landroid/view/View;",
        "Lcom/facebook/widget/GraphObjectAdapter;->isEmpty()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->shouldShowActivityCircleCell()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->rebuildAndNotify()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->rebuildSections()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->filterIncludesItem()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->getPictureUriOfGraphObject()Ljava/net/URI;",
        "Lcom/facebook/widget/GraphObjectAdapter;->setFilter()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->getDefaultPicture()I",
        "Lcom/facebook/widget/GraphObjectAdapter;->getSectionKeyOfGraphObject()Ljava/lang/String;",
        "Lcom/facebook/widget/GraphObjectAdapter;->getActivityCircleView()Landroid/view/View;",
        "Lcom/facebook/widget/GraphObjectAdapter;->getGraphObjectView()Landroid/view/View;",
        "Lcom/facebook/widget/GraphObjectAdapter;->notifyDataSetChanged()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->getIdOfGraphObject()Ljava/lang/String;",
        "Lcom/facebook/widget/GraphObjectAdapter;->callOnErrorListener()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->getShowPicture()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->isGraphObjectSelected()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->getSectionAndItem()Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem;",
        "Lcom/facebook/widget/GraphObjectAdapter;->getCount()I",
        "Lcom/facebook/widget/GraphObjectAdapter;->populateGraphObjectView()V",
        "Lcom/facebook/widget/GraphObjectAdapter;->getTitleOfGraphObject()Ljava/lang/CharSequence;",
        "Lcom/facebook/widget/GraphObjectAdapter;->getShowCheckbox()Z",
        "Lcom/facebook/widget/GraphObjectAdapter;->getPosition()I",
        "Lcom/facebook/widget/GraphObjectAdapter;->getPictureFieldSpecifier()Ljava/lang/String;"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$OnErrorListener;": [
        "Lcom/facebook/widget/GraphObjectAdapter$OnErrorListener;->onError()V"
    ],
    "Ljava/text/Collator;": [
        "Ljava/text/Collator;->compare()I",
        "Ljava/text/Collator;->getInstance()Ljava/text/Collator;"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setTag()V",
        "Landroid/widget/ImageView;->setBackgroundColor()V",
        "Landroid/widget/ImageView;->setImageURI()V",
        "Landroid/widget/ImageView;->setAdjustViewBounds()V",
        "Landroid/widget/ImageView;->setVisibility()V",
        "Landroid/widget/ImageView;->setOnClickListener()V",
        "Landroid/widget/ImageView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/widget/ImageView;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->onMeasure()V",
        "Landroid/widget/ImageView;->getTag()Ljava/lang/Object;",
        "Landroid/widget/ImageView;->setImageDrawable()V",
        "Landroid/widget/ImageView;->setLayoutParams()V",
        "Landroid/widget/ImageView;->setScaleType()V",
        "Landroid/widget/ImageView;->setBackgroundDrawable()V",
        "Landroid/widget/ImageView;->setImageResource()V"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->clearAnimation()V",
        "Landroid/widget/ProgressBar;->setVisibility()V",
        "Landroid/widget/ProgressBar;->getVisibility()I"
    ],
    "Lcom/facebook/internal/ImageResponse;": [
        "Lcom/facebook/internal/ImageResponse;->getError()Ljava/lang/Exception;",
        "Lcom/facebook/internal/ImageResponse;->isCachedRedirect()Z",
        "Lcom/facebook/internal/ImageResponse;->getRequest()Lcom/facebook/internal/ImageRequest;",
        "Lcom/facebook/internal/ImageResponse;->getBitmap()Landroid/graphics/Bitmap;"
    ],
    "Lcom/facebook/widget/GraphObjectCursor;": [
        "Lcom/facebook/widget/GraphObjectCursor;->areMoreObjectsAvailable()Z",
        "Lcom/facebook/widget/GraphObjectCursor;->getGraphObject()Lcom/facebook/model/GraphObject;",
        "Lcom/facebook/widget/GraphObjectCursor;->moveToNext()Z",
        "Lcom/facebook/widget/GraphObjectCursor;->close()V",
        "Lcom/facebook/widget/GraphObjectCursor;->moveToFirst()Z",
        "Lcom/facebook/widget/GraphObjectCursor;->getCount()I"
    ],
    "Landroid/view/ViewStub;": [
        "Landroid/view/ViewStub;->inflate()Landroid/view/View;",
        "Landroid/view/ViewStub;->setVisibility()V"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$Filter;": [
        "Lcom/facebook/widget/GraphObjectAdapter$Filter;->includeItem()Z"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem;": [
        "Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem;->getType()Lcom/facebook/widget/GraphObjectAdapter$SectionAndItem$Type;"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$ItemPicture;": [
        "Lcom/facebook/widget/GraphObjectAdapter$ItemPicture;->getData()Lcom/facebook/widget/GraphObjectAdapter$ItemPictureData;"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$ItemPictureData;": [
        "Lcom/facebook/widget/GraphObjectAdapter$ItemPictureData;->getUrl()Ljava/lang/String;"
    ],
    "Lcom/facebook/widget/GraphObjectAdapter$DataNeededListener;": [
        "Lcom/facebook/widget/GraphObjectAdapter$DataNeededListener;->onDataNeeded()V"
    ],
    "Ljava/util/EnumSet;": [
        "Ljava/util/EnumSet;->add()Z",
        "Ljava/util/EnumSet;->noneOf()Ljava/util/EnumSet;",
        "Ljava/util/EnumSet;->contains()Z",
        "Ljava/util/EnumSet;->of()Ljava/util/EnumSet;",
        "Ljava/util/EnumSet;->clear()V"
    ],
    "Lcom/facebook/widget/FacebookDialog$DialogFeature;": [
        "Lcom/facebook/widget/FacebookDialog$DialogFeature;->getMinVersion()I"
    ],
    "Lcom/facebook/widget/FacebookDialog$Callback;": [
        "Lcom/facebook/widget/FacebookDialog$Callback;->onError()V",
        "Lcom/facebook/widget/FacebookDialog$Callback;->onComplete()V"
    ],
    "Lcom/facebook/widget/FacebookDialog$OnPresentCallback;": [
        "Lcom/facebook/widget/FacebookDialog$OnPresentCallback;->onPresent()V"
    ],
    "Landroid/support/v4/app/Fragment;": [
        "Landroid/support/v4/app/Fragment;->onResume()V",
        "Landroid/support/v4/app/Fragment;->onCreateAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/Fragment;->performDestroyView()V",
        "Landroid/support/v4/app/Fragment;->setMenuVisibility()V",
        "Landroid/support/v4/app/Fragment;->restoreViewState()V",
        "Landroid/support/v4/app/Fragment;->performStart()V",
        "Landroid/support/v4/app/Fragment;->onSaveInstanceState()V",
        "Landroid/support/v4/app/Fragment;->onActivityCreated()V",
        "Landroid/support/v4/app/Fragment;->setArguments()V",
        "Landroid/support/v4/app/Fragment;->isInBackStack()Z",
        "Landroid/support/v4/app/Fragment;->onCreateOptionsMenu()V",
        "Landroid/support/v4/app/Fragment;->toString()Ljava/lang/String;",
        "Landroid/support/v4/app/Fragment;->getResources()Landroid/content/res/Resources;",
        "Landroid/support/v4/app/Fragment;->dump()V",
        "Landroid/support/v4/app/Fragment;->onCreateView()Landroid/view/View;",
        "Landroid/support/v4/app/Fragment;->onActivityResult()V",
        "Landroid/support/v4/app/Fragment;->onDestroy()V",
        "Landroid/support/v4/app/Fragment;->onOptionsMenuClosed()V",
        "Landroid/support/v4/app/Fragment;->setInitialSavedState()V",
        "Landroid/support/v4/app/Fragment;->onCreate()V",
        "Landroid/support/v4/app/Fragment;->onDestroyView()V",
        "Landroid/support/v4/app/Fragment;->onHiddenChanged()V",
        "Landroid/support/v4/app/Fragment;->onPrepareOptionsMenu()V",
        "Landroid/support/v4/app/Fragment;->getLayoutInflater()Landroid/view/LayoutInflater;",
        "Landroid/support/v4/app/Fragment;->onPause()V",
        "Landroid/support/v4/app/Fragment;->performStop()V",
        "Landroid/support/v4/app/Fragment;->instantiate()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/Fragment;->onOptionsItemSelected()Z",
        "Landroid/support/v4/app/Fragment;->performReallyStop()V",
        "Landroid/support/v4/app/Fragment;->isAdded()Z",
        "Landroid/support/v4/app/Fragment;->onStop()V",
        "Landroid/support/v4/app/Fragment;->startActivityForResult()V",
        "Landroid/support/v4/app/Fragment;->onViewCreated()V",
        "Landroid/support/v4/app/Fragment;->getView()Landroid/view/View;",
        "Landroid/support/v4/app/Fragment;->setUserVisibleHint()V",
        "Landroid/support/v4/app/Fragment;->onConfigurationChanged()V",
        "Landroid/support/v4/app/Fragment;->onContextItemSelected()Z",
        "Landroid/support/v4/app/Fragment;->setIndex()V",
        "Landroid/support/v4/app/Fragment;->onDestroyOptionsMenu()V",
        "Landroid/support/v4/app/Fragment;->onAttach()V",
        "Landroid/support/v4/app/Fragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Landroid/support/v4/app/Fragment;->isHidden()Z",
        "Landroid/support/v4/app/Fragment;->onInflate()V",
        "Landroid/support/v4/app/Fragment;->onLowMemory()V",
        "Landroid/support/v4/app/Fragment;->onStart()V",
        "Landroid/support/v4/app/Fragment;->onDetach()V"
    ],
    "Lcom/facebook/widget/LoginButton;": [
        "Lcom/facebook/widget/LoginButton;->setCompoundDrawablePadding()V",
        "Lcom/facebook/widget/LoginButton;->getContext()Landroid/content/Context;",
        "Lcom/facebook/widget/LoginButton;->isInEditMode()Z",
        "Lcom/facebook/widget/LoginButton;->setFragment()V",
        "Lcom/facebook/widget/LoginButton;->setPadding()V",
        "Lcom/facebook/widget/LoginButton;->parseAttributes()V",
        "Lcom/facebook/widget/LoginButton;->setCompoundDrawablesWithIntrinsicBounds()V",
        "Lcom/facebook/widget/LoginButton;->getResources()Landroid/content/res/Resources;",
        "Lcom/facebook/widget/LoginButton;->setBackgroundResource()V",
        "Lcom/facebook/widget/LoginButton;->setTypeface()V",
        "Lcom/facebook/widget/LoginButton;->setLoginLogoutEventName()V",
        "Lcom/facebook/widget/LoginButton;->setSession()V",
        "Lcom/facebook/widget/LoginButton;->setTextSize()V",
        "Lcom/facebook/widget/LoginButton;->setProperties()V",
        "Lcom/facebook/widget/LoginButton;->setTextColor()V",
        "Lcom/facebook/widget/LoginButton;->setOnClickListener()V",
        "Lcom/facebook/widget/LoginButton;->setText()V",
        "Lcom/facebook/widget/LoginButton;->setButtonText()V",
        "Lcom/facebook/widget/LoginButton;->fetchUserInfo()V",
        "Lcom/facebook/widget/LoginButton;->setBackgroundColor()V",
        "Lcom/facebook/widget/LoginButton;->finishInit()V",
        "Lcom/facebook/widget/LoginButton;->setGravity()V"
    ],
    "Lcom/facebook/widget/LoginButton$UserInfoChangedCallback;": [
        "Lcom/facebook/widget/LoginButton$UserInfoChangedCallback;->onUserInfoFetched()V"
    ],
    "Lcom/facebook/widget/LoginButton$LoginButtonProperties;": [
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->clearPermissions()V",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->getSessionStatusCallback()Lcom/facebook/Session$StatusCallback;",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->access$5()Lcom/facebook/widget/LoginButton$OnErrorListener;",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->getLoginBehavior()Lcom/facebook/SessionLoginBehavior;",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->setDefaultAudience()V",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->setPublishPermissions()V",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->getPermissions()Ljava/util/List;",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->setLoginBehavior()V",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->getOnErrorListener()Lcom/facebook/widget/LoginButton$OnErrorListener;",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->setOnErrorListener()V",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->setSessionStatusCallback()V",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->getDefaultAudience()Lcom/facebook/SessionDefaultAudience;",
        "Lcom/facebook/widget/LoginButton$LoginButtonProperties;->setReadPermissions()V"
    ],
    "Lcom/facebook/widget/LoginButton$OnErrorListener;": [
        "Lcom/facebook/widget/LoginButton$OnErrorListener;->onError()V"
    ],
    "Landroid/widget/Button;": [
        "Landroid/widget/Button;->setOnClickListener()V",
        "Landroid/widget/Button;->setBackgroundDrawable()V",
        "Landroid/widget/Button;->onDetachedFromWindow()V",
        "Landroid/widget/Button;->onAttachedToWindow()V",
        "Landroid/widget/Button;->onFinishInflate()V",
        "Landroid/widget/Button;->setText()V"
    ],
    "Lcom/facebook/widget/PlacePickerFragment;": [
        "Lcom/facebook/widget/PlacePickerFragment;->setResultsLimit()V",
        "Lcom/facebook/widget/PlacePickerFragment;->onSearchTextTimerTriggered()V",
        "Lcom/facebook/widget/PlacePickerFragment;->getSelectedGraphObjects()Ljava/util/List;",
        "Lcom/facebook/widget/PlacePickerFragment;->getSelection()Lcom/facebook/model/GraphPlace;",
        "Lcom/facebook/widget/PlacePickerFragment;->createRequest()Lcom/facebook/Request;",
        "Lcom/facebook/widget/PlacePickerFragment;->setSearchText()V",
        "Lcom/facebook/widget/PlacePickerFragment;->createSearchTextTimer()Ljava/util/Timer;",
        "Lcom/facebook/widget/PlacePickerFragment;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/widget/PlacePickerFragment;->setPlacePickerSettingsFromBundle()V",
        "Lcom/facebook/widget/PlacePickerFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Lcom/facebook/widget/PlacePickerFragment;->getShowPictures()Z",
        "Lcom/facebook/widget/PlacePickerFragment;->getString()Ljava/lang/String;",
        "Lcom/facebook/widget/PlacePickerFragment;->setRadiusInMeters()V",
        "Lcom/facebook/widget/PlacePickerFragment;->setLocation()V"
    ],
    "Lcom/facebook/widget/PickerFragment$PickerFragmentAdapter;": [
        "Lcom/facebook/widget/PickerFragment$PickerFragmentAdapter;->setGroupByField()V",
        "Lcom/facebook/widget/PickerFragment$PickerFragmentAdapter;->setSortFields()V",
        "Lcom/facebook/widget/PickerFragment$PickerFragmentAdapter;->setShowPicture()V",
        "Lcom/facebook/widget/PickerFragment$PickerFragmentAdapter;->setShowCheckbox()V"
    ],
    "Lcom/facebook/widget/PickerFragment;": [
        "Lcom/facebook/widget/PickerFragment;->setupViews()V",
        "Lcom/facebook/widget/PickerFragment;->createSelectionStrategy()Lcom/facebook/widget/PickerFragment$SelectionStrategy;",
        "Lcom/facebook/widget/PickerFragment;->displayActivityCircle()V",
        "Lcom/facebook/widget/PickerFragment;->onDetach()V",
        "Lcom/facebook/widget/PickerFragment;->loadDataSkippingRoundTripIfCached()V",
        "Lcom/facebook/widget/PickerFragment;->setShowPictures()V",
        "Lcom/facebook/widget/PickerFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Lcom/facebook/widget/PickerFragment;->createLoadingStrategy()Lcom/facebook/widget/PickerFragment$LoadingStrategy;",
        "Lcom/facebook/widget/PickerFragment;->logAppEvents()V",
        "Lcom/facebook/widget/PickerFragment;->setSettingsFromBundle()V",
        "Lcom/facebook/widget/PickerFragment;->onLoadingData()V",
        "Lcom/facebook/widget/PickerFragment;->setPickerFragmentSettingsFromBundle()V",
        "Lcom/facebook/widget/PickerFragment;->hideActivityCircle()V",
        "Lcom/facebook/widget/PickerFragment;->getTitleText()Ljava/lang/String;",
        "Lcom/facebook/widget/PickerFragment;->layoutActivityCircle()V",
        "Lcom/facebook/widget/PickerFragment;->getDefaultTitleText()Ljava/lang/String;",
        "Lcom/facebook/widget/PickerFragment;->setAlpha()V",
        "Lcom/facebook/widget/PickerFragment;->onInflate()V",
        "Lcom/facebook/widget/PickerFragment;->clearResults()V",
        "Lcom/facebook/widget/PickerFragment;->reprioritizeDownloads()V",
        "Lcom/facebook/widget/PickerFragment;->inflateTitleBar()V",
        "Lcom/facebook/widget/PickerFragment;->createAdapter()Lcom/facebook/widget/PickerFragment$PickerFragmentAdapter;",
        "Lcom/facebook/widget/PickerFragment;->onAttach()V",
        "Lcom/facebook/widget/PickerFragment;->getView()Landroid/view/View;",
        "Lcom/facebook/widget/PickerFragment;->onListItemClick()V",
        "Lcom/facebook/widget/PickerFragment;->getString()Ljava/lang/String;",
        "Lcom/facebook/widget/PickerFragment;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/widget/PickerFragment;->saveSettingsToBundle()V",
        "Lcom/facebook/widget/PickerFragment;->getDoneButtonText()Ljava/lang/String;",
        "Lcom/facebook/widget/PickerFragment;->getDefaultDoneButtonText()Ljava/lang/String;",
        "Lcom/facebook/widget/PickerFragment;->setExtraFields()V",
        "Lcom/facebook/widget/PickerFragment;->getRequestForLoadData()Lcom/facebook/Request;"
    ],
    "Landroid/support/v4/app/FragmentActivity;": [
        "Landroid/support/v4/app/FragmentActivity;->findViewById()Landroid/view/View;",
        "Landroid/support/v4/app/FragmentActivity;->startActivityFromFragment()V",
        "Landroid/support/v4/app/FragmentActivity;->supportInvalidateOptionsMenu()V",
        "Landroid/support/v4/app/FragmentActivity;->onBackPressed()V",
        "Landroid/support/v4/app/FragmentActivity;->getText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/app/FragmentActivity;->getLoaderManager()Landroid/support/v4/app/LoaderManagerImpl;",
        "Landroid/support/v4/app/FragmentActivity;->isFinishing()Z",
        "Landroid/support/v4/app/FragmentActivity;->getClassLoader()Ljava/lang/ClassLoader;",
        "Landroid/support/v4/app/FragmentActivity;->getLayoutInflater()Landroid/view/LayoutInflater;",
        "Landroid/support/v4/app/FragmentActivity;->onAttachFragment()V",
        "Landroid/support/v4/app/FragmentActivity;->onRetainCustomNonConfigurationInstance()Ljava/lang/Object;",
        "Landroid/support/v4/app/FragmentActivity;->invalidateSupportFragmentIndex()V",
        "Landroid/support/v4/app/FragmentActivity;->onCreateContextMenu()V",
        "Landroid/support/v4/app/FragmentActivity;->getLastNonConfigurationInstance()Ljava/lang/Object;",
        "Landroid/support/v4/app/FragmentActivity;->getWindow()Landroid/view/Window;",
        "Landroid/support/v4/app/FragmentActivity;->getResources()Landroid/content/res/Resources;",
        "Landroid/support/v4/app/FragmentActivity;->finish()V",
        "Landroid/support/v4/app/FragmentActivity;->getMenuInflater()Landroid/view/MenuInflater;",
        "Landroid/support/v4/app/FragmentActivity;->onCreatePanelMenu()Z",
        "Landroid/support/v4/app/FragmentActivity;->onReallyStop()V",
        "Landroid/support/v4/app/FragmentActivity;->doReallyStop()V",
        "Landroid/support/v4/app/FragmentActivity;->getSystemService()Ljava/lang/Object;",
        "Landroid/support/v4/app/FragmentActivity;->onResumeFragments()V"
    ],
    "Landroid/view/inputmethod/InputMethodManager;": [
        "Landroid/view/inputmethod/InputMethodManager;->showSoftInput()Z",
        "Landroid/view/inputmethod/InputMethodManager;->hideSoftInputFromWindow()Z"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->getFirstVisiblePosition()I",
        "Landroid/widget/ListView;->setOnItemClickListener()V",
        "Landroid/widget/ListView;->getSelectedItemPosition()I",
        "Landroid/widget/ListView;->setOnScrollListener()V",
        "Landroid/widget/ListView;->setAdapter()V",
        "Landroid/widget/ListView;->setId()V",
        "Landroid/widget/ListView;->setOnLongClickListener()V",
        "Landroid/widget/ListView;->setEmptyView()V",
        "Landroid/widget/ListView;->setSelection()V",
        "Landroid/widget/ListView;->getLastVisiblePosition()I",
        "Landroid/widget/ListView;->setLayoutParams()V",
        "Landroid/widget/ListView;->addHeaderView()V",
        "Landroid/widget/ListView;->setSelectionFromTop()V",
        "Landroid/widget/ListView;->getSelectedItemId()J",
        "Landroid/widget/ListView;->setDrawSelectorOnTop()V",
        "Landroid/widget/ListView;->getItemAtPosition()Ljava/lang/Object;",
        "Landroid/widget/ListView;->getChildAt()Landroid/view/View;"
    ],
    "Lcom/facebook/widget/ProfilePictureView;": [
        "Lcom/facebook/widget/ProfilePictureView;->updateImageQueryParameters()Z",
        "Lcom/facebook/widget/ProfilePictureView;->getContext()Landroid/content/Context;",
        "Lcom/facebook/widget/ProfilePictureView;->getPresetSizeInPixels()I",
        "Lcom/facebook/widget/ProfilePictureView;->getHeight()I",
        "Lcom/facebook/widget/ProfilePictureView;->setBlankProfilePicture()V",
        "Lcom/facebook/widget/ProfilePictureView;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Lcom/facebook/widget/ProfilePictureView;->getWidth()I",
        "Lcom/facebook/widget/ProfilePictureView;->isCropped()Z",
        "Lcom/facebook/widget/ProfilePictureView;->removeAllViews()V",
        "Lcom/facebook/widget/ProfilePictureView;->setMeasuredDimension()V",
        "Lcom/facebook/widget/ProfilePictureView;->getProfileId()Ljava/lang/String;",
        "Lcom/facebook/widget/ProfilePictureView;->refreshImage()V",
        "Lcom/facebook/widget/ProfilePictureView;->parseAttributes()V",
        "Lcom/facebook/widget/ProfilePictureView;->requestLayout()V",
        "Lcom/facebook/widget/ProfilePictureView;->setPresetSize()V",
        "Lcom/facebook/widget/ProfilePictureView;->processResponse()V",
        "Lcom/facebook/widget/ProfilePictureView;->setImageBitmap()V",
        "Lcom/facebook/widget/ProfilePictureView;->getResources()Landroid/content/res/Resources;",
        "Lcom/facebook/widget/ProfilePictureView;->sendImageRequest()V",
        "Lcom/facebook/widget/ProfilePictureView;->addView()V",
        "Lcom/facebook/widget/ProfilePictureView;->measureChildren()V"
    ],
    "Lcom/facebook/widget/ProfilePictureView$OnErrorListener;": [
        "Lcom/facebook/widget/ProfilePictureView$OnErrorListener;->onError()V"
    ],
    "Ljava/net/URISyntaxException;": [
        "Ljava/net/URISyntaxException;->toString()Ljava/lang/String;"
    ],
    "Landroid/widget/FrameLayout;": [
        "Landroid/widget/FrameLayout;->setOnTouchListener()V",
        "Landroid/widget/FrameLayout;->onRestoreInstanceState()V",
        "Landroid/widget/FrameLayout;->onDetachedFromWindow()V",
        "Landroid/widget/FrameLayout;->setVisibility()V",
        "Landroid/widget/FrameLayout;->setFocusable()V",
        "Landroid/widget/FrameLayout;->setBackgroundColor()V",
        "Landroid/widget/FrameLayout;->onKeyDown()Z",
        "Landroid/widget/FrameLayout;->onAttachedToWindow()V",
        "Landroid/widget/FrameLayout;->setPadding()V",
        "Landroid/widget/FrameLayout;->onWindowVisibilityChanged()V",
        "Landroid/widget/FrameLayout;->findViewById()Landroid/view/View;",
        "Landroid/widget/FrameLayout;->removeView()V",
        "Landroid/widget/FrameLayout;->getFocusedChild()Landroid/view/View;",
        "Landroid/widget/FrameLayout;->addView()V",
        "Landroid/widget/FrameLayout;->onTouchEvent()Z",
        "Landroid/widget/FrameLayout;->removeAllViewsInLayout()V",
        "Landroid/widget/FrameLayout;->onLayout()V",
        "Landroid/widget/FrameLayout;->onSaveInstanceState()Landroid/os/Parcelable;",
        "Landroid/widget/FrameLayout;->onMeasure()V",
        "Landroid/widget/FrameLayout;->setLayoutParams()V",
        "Landroid/widget/FrameLayout;->getParent()Landroid/view/ViewParent;",
        "Landroid/widget/FrameLayout;->setId()V"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getMode()I",
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->makeMeasureSpec()I"
    ],
    "Lcom/facebook/widget/UserSettingsFragment;": [
        "Lcom/facebook/widget/UserSettingsFragment;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/widget/UserSettingsFragment;->isSessionOpen()Z",
        "Lcom/facebook/widget/UserSettingsFragment;->getImageRequest()Lcom/facebook/internal/ImageRequest;",
        "Lcom/facebook/widget/UserSettingsFragment;->setRetainInstance()V",
        "Lcom/facebook/widget/UserSettingsFragment;->fetchUserInfo()V",
        "Lcom/facebook/widget/UserSettingsFragment;->processImageResponse()V",
        "Lcom/facebook/widget/UserSettingsFragment;->updateUI()V",
        "Lcom/facebook/widget/UserSettingsFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Lcom/facebook/widget/UserSettingsFragment;->isAdded()Z",
        "Lcom/facebook/widget/UserSettingsFragment;->getResources()Landroid/content/res/Resources;"
    ],
    "Landroid/graphics/drawable/BitmapDrawable;": [
        "Landroid/graphics/drawable/BitmapDrawable;->setBounds()V",
        "Landroid/graphics/drawable/BitmapDrawable;->getBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->draw()V",
        "Landroid/graphics/drawable/Drawable;->getIntrinsicHeight()I",
        "Landroid/graphics/drawable/Drawable;->isStateful()Z",
        "Landroid/graphics/drawable/Drawable;->setState()Z",
        "Landroid/graphics/drawable/Drawable;->createFromStream()Landroid/graphics/drawable/Drawable;",
        "Landroid/graphics/drawable/Drawable;->getIntrinsicWidth()I",
        "Landroid/graphics/drawable/Drawable;->setDither()V",
        "Landroid/graphics/drawable/Drawable;->setBounds()V"
    ],
    "Lcom/facebook/widget/FacebookFragment;": [
        "Lcom/facebook/widget/FacebookFragment;->openSessionForPublish()V",
        "Lcom/facebook/widget/FacebookFragment;->openSession()V",
        "Lcom/facebook/widget/FacebookFragment;->onCreate()V",
        "Lcom/facebook/widget/FacebookFragment;->onDestroy()V",
        "Lcom/facebook/widget/FacebookFragment;->setSession()V",
        "Lcom/facebook/widget/FacebookFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Lcom/facebook/widget/FacebookFragment;->onResume()V",
        "Lcom/facebook/widget/FacebookFragment;->onActivityResult()V",
        "Lcom/facebook/widget/FacebookFragment;->onActivityCreated()V",
        "Lcom/facebook/widget/FacebookFragment;->openSessionForRead()V"
    ],
    "Lcom/facebook/Session$StatusCallback;": [
        "Lcom/facebook/Session$StatusCallback;->call()V"
    ],
    "Lcom/facebook/widget/FriendPickerFragment;": [
        "Lcom/facebook/widget/FriendPickerFragment;->getSelectedGraphObjects()Ljava/util/List;",
        "Lcom/facebook/widget/FriendPickerFragment;->setSelectionStrategy()V",
        "Lcom/facebook/widget/FriendPickerFragment;->setFriendPickerSettingsFromBundle()V",
        "Lcom/facebook/widget/FriendPickerFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Lcom/facebook/widget/FriendPickerFragment;->getShowPictures()Z",
        "Lcom/facebook/widget/FriendPickerFragment;->createSelectionStrategy()Lcom/facebook/widget/PickerFragment$SelectionStrategy;",
        "Lcom/facebook/widget/FriendPickerFragment;->setMultiSelect()V",
        "Lcom/facebook/widget/FriendPickerFragment;->getString()Ljava/lang/String;",
        "Lcom/facebook/widget/FriendPickerFragment;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/widget/FriendPickerFragment;->createRequest()Lcom/facebook/Request;",
        "Lcom/facebook/widget/FriendPickerFragment;->getSelection()Ljava/util/List;",
        "Lcom/facebook/widget/FriendPickerFragment;->setUserId()V"
    ],
    "Lcom/facebook/widget/PickerFragment$SelectionStrategy;": [
        "Lcom/facebook/widget/PickerFragment$SelectionStrategy;->toggleSelection()V",
        "Lcom/facebook/widget/PickerFragment$SelectionStrategy;->readSelectionFromBundle()V",
        "Lcom/facebook/widget/PickerFragment$SelectionStrategy;->saveSelectionToBundle()V",
        "Lcom/facebook/widget/PickerFragment$SelectionStrategy;->clear()V",
        "Lcom/facebook/widget/PickerFragment$SelectionStrategy;->isEmpty()Z",
        "Lcom/facebook/widget/PickerFragment$SelectionStrategy;->getSelectedIds()Ljava/util/Collection;"
    ],
    "Lcom/facebook/widget/PickerFragment$LoadingStrategy;": [
        "Lcom/facebook/widget/PickerFragment$LoadingStrategy;->isDataPresentOrLoading()Z",
        "Lcom/facebook/widget/PickerFragment$LoadingStrategy;->attach()V",
        "Lcom/facebook/widget/PickerFragment$LoadingStrategy;->clearResults()V",
        "Lcom/facebook/widget/PickerFragment$LoadingStrategy;->detach()V",
        "Lcom/facebook/widget/PickerFragment$LoadingStrategy;->startLoading()V"
    ],
    "Lcom/facebook/widget/PickerFragment$OnDataChangedListener;": [
        "Lcom/facebook/widget/PickerFragment$OnDataChangedListener;->onDataChanged()V"
    ],
    "Lcom/facebook/widget/PickerFragment$OnSelectionChangedListener;": [
        "Lcom/facebook/widget/PickerFragment$OnSelectionChangedListener;->onSelectionChanged()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V",
        "Landroid/widget/RelativeLayout$LayoutParams;->setMargins()V"
    ],
    "Landroid/view/animation/AlphaAnimation;": [
        "Landroid/view/animation/AlphaAnimation;->setDuration()V",
        "Landroid/view/animation/AlphaAnimation;->setInterpolator()V",
        "Landroid/view/animation/AlphaAnimation;->setFillAfter()V"
    ],
    "Lcom/facebook/widget/PickerFragment$GraphObjectFilter;": [
        "Lcom/facebook/widget/PickerFragment$GraphObjectFilter;->includeItem()Z"
    ],
    "Lcom/facebook/widget/GraphObjectPagingLoader;": [
        "Lcom/facebook/widget/GraphObjectPagingLoader;->isStarted()Z",
        "Lcom/facebook/widget/GraphObjectPagingLoader;->startLoading()V",
        "Lcom/facebook/widget/GraphObjectPagingLoader;->addResults()V",
        "Lcom/facebook/widget/GraphObjectPagingLoader;->requestCompleted()V",
        "Lcom/facebook/widget/GraphObjectPagingLoader;->deliverResult()V",
        "Lcom/facebook/widget/GraphObjectPagingLoader;->putRequestIntoBatch()Lcom/facebook/internal/CacheableRequestBatch;"
    ],
    "Lcom/facebook/widget/GraphObjectPagingLoader$PagedResults;": [
        "Lcom/facebook/widget/GraphObjectPagingLoader$PagedResults;->getData()Lcom/facebook/model/GraphObjectList;"
    ],
    "Lcom/facebook/widget/GraphObjectPagingLoader$OnErrorListener;": [
        "Lcom/facebook/widget/GraphObjectPagingLoader$OnErrorListener;->onError()V"
    ],
    "Landroid/support/v4/content/Loader;": [
        "Landroid/support/v4/content/Loader;->onAbandon()V",
        "Landroid/support/v4/content/Loader;->forceLoad()V",
        "Landroid/support/v4/content/Loader;->onForceLoad()V",
        "Landroid/support/v4/content/Loader;->onReset()V",
        "Landroid/support/v4/content/Loader;->onStartLoading()V",
        "Landroid/support/v4/content/Loader;->deliverResult()V",
        "Landroid/support/v4/content/Loader;->onStopLoading()V",
        "Landroid/support/v4/content/Loader;->dump()V",
        "Landroid/support/v4/content/Loader;->abandon()V"
    ],
    "Lcom/facebook/widget/WebDialog;": [
        "Lcom/facebook/widget/WebDialog;->createCrossImage()V",
        "Lcom/facebook/widget/WebDialog;->addContentView()V",
        "Lcom/facebook/widget/WebDialog;->setUpWebView()V",
        "Lcom/facebook/widget/WebDialog;->getContext()Landroid/content/Context;",
        "Lcom/facebook/widget/WebDialog;->show()V",
        "Lcom/facebook/widget/WebDialog;->sendSuccessToListener()V",
        "Lcom/facebook/widget/WebDialog;->getMargins()Landroid/util/Pair;",
        "Lcom/facebook/widget/WebDialog;->sendErrorToListener()V",
        "Lcom/facebook/widget/WebDialog;->requestWindowFeature()Z",
        "Lcom/facebook/widget/WebDialog;->setOnCancelListener()V",
        "Lcom/facebook/widget/WebDialog;->sendCancelToListener()V"
    ],
    "Lcom/facebook/widget/WebDialog$OnCompleteListener;": [
        "Lcom/facebook/widget/WebDialog$OnCompleteListener;->onComplete()V"
    ],
    "Lcom/facebook/android/Facebook;": [
        "Lcom/facebook/android/Facebook;->request()Ljava/lang/String;",
        "Lcom/facebook/android/Facebook;->getTokenCache()Lcom/facebook/TokenCachingStrategy;",
        "Lcom/facebook/android/Facebook;->setAccessExpires()V",
        "Lcom/facebook/android/Facebook;->openSession()V",
        "Lcom/facebook/android/Facebook;->requestImpl()Ljava/lang/String;",
        "Lcom/facebook/android/Facebook;->checkUserSession()V",
        "Lcom/facebook/android/Facebook;->dialog()V",
        "Lcom/facebook/android/Facebook;->onSessionCallback()V",
        "Lcom/facebook/android/Facebook;->authorize()V",
        "Lcom/facebook/android/Facebook;->isSessionValid()Z",
        "Lcom/facebook/android/Facebook;->stringList()Ljava/util/List;",
        "Lcom/facebook/android/Facebook;->getAccessExpires()J",
        "Lcom/facebook/android/Facebook;->logoutImpl()Ljava/lang/String;",
        "Lcom/facebook/android/Facebook;->validateAppSignatureForPackage()Z",
        "Lcom/facebook/android/Facebook;->stringArray()[Ljava/lang/String;",
        "Lcom/facebook/android/Facebook;->getAccessToken()Ljava/lang/String;",
        "Lcom/facebook/android/Facebook;->extendAccessToken()Z",
        "Lcom/facebook/android/Facebook;->getSession()Lcom/facebook/Session;",
        "Lcom/facebook/android/Facebook;->shouldExtendAccessToken()Z",
        "Lcom/facebook/android/Facebook;->validateServiceIntent()Z"
    ],
    "Lcom/facebook/android/Facebook$DialogListener;": [
        "Lcom/facebook/android/Facebook$DialogListener;->onComplete()V",
        "Lcom/facebook/android/Facebook$DialogListener;->onCancel()V",
        "Lcom/facebook/android/Facebook$DialogListener;->onError()V",
        "Lcom/facebook/android/Facebook$DialogListener;->onFacebookError()V"
    ],
    "Lcom/facebook/android/Util;": [
        "Lcom/facebook/android/Util;->decodeUrl()Landroid/os/Bundle;",
        "Lcom/facebook/android/Util;->encodePostBody()Ljava/lang/String;",
        "Lcom/facebook/android/Util;->showAlert()V",
        "Lcom/facebook/android/Util;->encodeUrl()Ljava/lang/String;",
        "Lcom/facebook/android/Util;->openUrl()Ljava/lang/String;",
        "Lcom/facebook/android/Util;->read()Ljava/lang/String;"
    ],
    "Lcom/facebook/android/FbDialog;": [
        "Lcom/facebook/android/FbDialog;->setDialogListener()V",
        "Lcom/facebook/android/FbDialog;->callDialogListener()V",
        "Lcom/facebook/android/FbDialog;->setOnCompleteListener()V",
        "Lcom/facebook/android/FbDialog;->show()V"
    ],
    "Lcom/facebook/android/AsyncFacebookRunner;": [
        "Lcom/facebook/android/AsyncFacebookRunner;->logout()V",
        "Lcom/facebook/android/AsyncFacebookRunner;->request()V"
    ],
    "Lcom/facebook/android/AsyncFacebookRunner$1;": [
        "Lcom/facebook/android/AsyncFacebookRunner$1;->start()V"
    ],
    "Lcom/facebook/android/AsyncFacebookRunner$2;": [
        "Lcom/facebook/android/AsyncFacebookRunner$2;->start()V"
    ],
    "Ljava/net/URLDecoder;": [
        "Ljava/net/URLDecoder;->decode()Ljava/lang/String;"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->remove()Ljava/lang/Object;",
        "Ljava/util/Properties;->getProperty()Ljava/lang/String;",
        "Ljava/util/Properties;->containsKey()Z",
        "Ljava/util/Properties;->storeToXML()V",
        "Ljava/util/Properties;->put()Ljava/lang/Object;",
        "Ljava/util/Properties;->load()V",
        "Ljava/util/Properties;->entrySet()Ljava/util/Set;",
        "Ljava/util/Properties;->clear()V",
        "Ljava/util/Properties;->loadFromXML()V"
    ],
    "Lcom/facebook/FacebookDialogException;": [
        "Lcom/facebook/FacebookDialogException;->getFailingUrl()Ljava/lang/String;",
        "Lcom/facebook/FacebookDialogException;->getMessage()Ljava/lang/String;",
        "Lcom/facebook/FacebookDialogException;->getErrorCode()I"
    ],
    "Lcom/google/ads/util/b;": [
        "Lcom/google/ads/util/b;->a()V",
        "Lcom/google/ads/util/b;->a()Z"
    ],
    "Lcom/google/ads/AdActivity$StaticMethodWrapper;": [
        "Lcom/google/ads/AdActivity$StaticMethodWrapper;->launchAdActivity()V",
        "Lcom/google/ads/AdActivity$StaticMethodWrapper;->isShowing()Z"
    ],
    "Lcom/google/ads/util/f;": [
        "Lcom/google/ads/util/f;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/internal/a;": [
        "Lcom/google/ads/internal/a;->a()V",
        "Lcom/google/ads/internal/a;->a()Z",
        "Lcom/google/ads/internal/a;->a()Ljava/lang/String;"
    ],
    "Landroid/preference/PreferenceManager;": [
        "Landroid/preference/PreferenceManager;->getDefaultSharedPreferences()Landroid/content/SharedPreferences;"
    ],
    "Lcom/google/ads/ae;": [
        "Lcom/google/ads/ae;->a()Z",
        "Lcom/google/ads/ae;->a()V"
    ],
    "Lcom/google/ads/af;": [
        "Lcom/google/ads/af;->a()Z"
    ],
    "Lcom/google/ads/internal/d;": [
        "Lcom/google/ads/internal/d;->a()Lcom/google/ads/internal/g;",
        "Lcom/google/ads/internal/d;->a()V",
        "Lcom/google/ads/internal/d;->a()Z",
        "Lcom/google/ads/internal/d;->a()I",
        "Lcom/google/ads/internal/d;->a()Lcom/google/ads/internal/i;",
        "Lcom/google/ads/internal/d;->a()Lcom/google/ads/internal/c;",
        "Lcom/google/ads/internal/d;->a()J",
        "Lcom/google/ads/internal/d;->a()Lcom/google/ads/m;",
        "Lcom/google/ads/internal/d;->a()Lcom/google/ads/internal/AdWebView;",
        "Lcom/google/ads/internal/d;->a()Ljava/lang/Boolean;",
        "Lcom/google/ads/internal/d;->a()Lcom/google/ads/d;"
    ],
    "Lcom/google/ads/internal/c;": [
        "Lcom/google/ads/internal/c;->a()Ljava/lang/String;",
        "Lcom/google/ads/internal/c;->a()V"
    ],
    "Lcom/google/ads/AdSize;": [
        "Lcom/google/ads/AdSize;->isCustomAdSize()Z",
        "Lcom/google/ads/AdSize;->toString()Ljava/lang/String;",
        "Lcom/google/ads/AdSize;->a()I",
        "Lcom/google/ads/AdSize;->isFullWidth()Z",
        "Lcom/google/ads/AdSize;->getHeight()I",
        "Lcom/google/ads/AdSize;->isAutoHeight()Z",
        "Lcom/google/ads/AdSize;->isSizeAppropriate()Z",
        "Lcom/google/ads/AdSize;->createAdSize()Lcom/google/ads/AdSize;",
        "Lcom/google/ads/AdSize;->a()Z",
        "Lcom/google/ads/AdSize;->findBestSize()Lcom/google/ads/AdSize;",
        "Lcom/google/ads/AdSize;->getWidth()I"
    ],
    "Landroid/util/TypedValue;": [
        "Landroid/util/TypedValue;->applyDimension()F"
    ],
    "Lcom/google/ads/l;": [
        "Lcom/google/ads/l;->a()Lcom/google/ads/l;"
    ],
    "Lcom/google/ads/internal/h;": [
        "Lcom/google/ads/internal/h;->a()Z",
        "Lcom/google/ads/internal/h;->a()Lcom/google/ads/internal/h;",
        "Lcom/google/ads/internal/h;->a()Lcom/google/ads/AdSize;"
    ],
    "Lcom/google/ads/m;": [
        "Lcom/google/ads/m;->a()Z",
        "Lcom/google/ads/m;->a()Lcom/google/ads/m;"
    ],
    "Lcom/google/ads/util/i$b;": [
        "Lcom/google/ads/util/i$b;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/util/a;": [
        "Lcom/google/ads/util/a;->a()V"
    ],
    "Lcom/google/ads/internal/AdWebView;": [
        "Lcom/google/ads/internal/AdWebView;->a()V",
        "Lcom/google/ads/internal/AdWebView;->stopLoading()V",
        "Lcom/google/ads/internal/AdWebView;->a()Z",
        "Lcom/google/ads/internal/AdWebView;->a()Lcom/google/ads/AdActivity;",
        "Lcom/google/ads/internal/AdWebView;->destroy()V",
        "Lcom/google/ads/internal/AdWebView;->setBackgroundColor()V",
        "Lcom/google/ads/internal/AdWebView;->setMeasuredDimension()V",
        "Lcom/google/ads/internal/AdWebView;->isInEditMode()Z",
        "Lcom/google/ads/internal/AdWebView;->setScrollBarStyle()V",
        "Lcom/google/ads/internal/AdWebView;->getParent()Landroid/view/ViewParent;",
        "Lcom/google/ads/internal/AdWebView;->setIsExpandedMraid()V",
        "Lcom/google/ads/internal/AdWebView;->getContext()Landroid/content/Context;",
        "Lcom/google/ads/internal/AdWebView;->setWebViewClient()V",
        "Lcom/google/ads/internal/AdWebView;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/google/ads/internal/AdWebView;->setAdActivity()V",
        "Lcom/google/ads/internal/AdWebView;->setDownloadListener()V",
        "Lcom/google/ads/internal/AdWebView;->loadDataWithBaseURL()V",
        "Lcom/google/ads/internal/AdWebView;->loadUrl()V",
        "Lcom/google/ads/internal/AdWebView;->setVisibility()V",
        "Lcom/google/ads/internal/AdWebView;->setWebChromeClient()V"
    ],
    "Lcom/google/ads/util/AdUtil;": [
        "Lcom/google/ads/util/AdUtil;->a()I",
        "Lcom/google/ads/util/AdUtil;->a()Lorg/json/JSONArray;",
        "Lcom/google/ads/util/AdUtil;->a()Lcom/google/ads/util/AdUtil$a;",
        "Lcom/google/ads/util/AdUtil;->a()Lorg/json/JSONObject;",
        "Lcom/google/ads/util/AdUtil;->a()Ljava/util/HashMap;",
        "Lcom/google/ads/util/AdUtil;->a()V",
        "Lcom/google/ads/util/AdUtil;->a()Landroid/util/DisplayMetrics;",
        "Lcom/google/ads/util/AdUtil;->a()Ljava/lang/String;",
        "Lcom/google/ads/util/AdUtil;->a()Z"
    ],
    "Lcom/google/ads/z;": [
        "Lcom/google/ads/z;->a()I"
    ],
    "Lcom/google/ads/AdActivity;": [
        "Lcom/google/ads/AdActivity;->finish()V",
        "Lcom/google/ads/AdActivity;->a()Landroid/view/View;",
        "Lcom/google/ads/AdActivity;->startActivity()V",
        "Lcom/google/ads/AdActivity;->getAdVideoView()Lcom/google/ads/internal/AdVideoView;",
        "Lcom/google/ads/AdActivity;->requestWindowFeature()Z",
        "Lcom/google/ads/AdActivity;->launchAdActivity()V",
        "Lcom/google/ads/AdActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/google/ads/AdActivity;->setContentView()V",
        "Lcom/google/ads/AdActivity;->getWindow()Landroid/view/Window;",
        "Lcom/google/ads/AdActivity;->startActivityForResult()V",
        "Lcom/google/ads/AdActivity;->a()Landroid/widget/RelativeLayout$LayoutParams;",
        "Lcom/google/ads/AdActivity;->moveAdVideoView()V",
        "Lcom/google/ads/AdActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/google/ads/AdActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/google/ads/AdActivity;->setRequestedOrientation()V",
        "Lcom/google/ads/AdActivity;->a()V",
        "Lcom/google/ads/AdActivity;->isShowing()Z",
        "Lcom/google/ads/AdActivity;->a()Lcom/google/ads/internal/AdVideoView;",
        "Lcom/google/ads/AdActivity;->newAdVideoView()V",
        "Lcom/google/ads/AdActivity;->getOpeningAdWebView()Lcom/google/ads/internal/AdWebView;",
        "Lcom/google/ads/AdActivity;->isFinishing()Z"
    ],
    "Lcom/google/ads/internal/AdVideoView;": [
        "Lcom/google/ads/internal/AdVideoView;->setMediaControllerEnabled()V",
        "Lcom/google/ads/internal/AdVideoView;->setVisibility()V",
        "Lcom/google/ads/internal/AdVideoView;->setSrc()V",
        "Lcom/google/ads/internal/AdVideoView;->requestLayout()V",
        "Lcom/google/ads/internal/AdVideoView;->addView()V",
        "Lcom/google/ads/internal/AdVideoView;->a()V",
        "Lcom/google/ads/internal/AdVideoView;->setLayoutParams()V"
    ],
    "Lcom/google/ads/util/i$c;": [
        "Lcom/google/ads/util/i$c;->a()V",
        "Lcom/google/ads/util/i$c;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/v;": [
        "Lcom/google/ads/v;->a()V"
    ],
    "Lcom/google/ads/util/g;": [
        "Lcom/google/ads/util/g;->a()V"
    ],
    "Lcom/google/ads/util/i$d;": [
        "Lcom/google/ads/util/i$d;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/b;": [
        "Lcom/google/ads/b;->a()[B",
        "Lcom/google/ads/b;->a()Lcom/google/ads/b;",
        "Lcom/google/ads/b;->a()Ljava/math/BigInteger;"
    ],
    "Ljava/math/BigInteger;": [
        "Ljava/math/BigInteger;->toString()Ljava/lang/String;",
        "Ljava/math/BigInteger;->valueOf()Ljava/math/BigInteger;",
        "Ljava/math/BigInteger;->toByteArray()[B",
        "Ljava/math/BigInteger;->add()Ljava/math/BigInteger;"
    ],
    "Lcom/google/ads/AdRequest;": [
        "Lcom/google/ads/AdRequest;->setGender()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/AdRequest;->setNetworkExtras()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/AdRequest;->getNetworkExtras()Ljava/lang/Object;",
        "Lcom/google/ads/AdRequest;->getKeywords()Ljava/util/Set;",
        "Lcom/google/ads/AdRequest;->setKeywords()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/AdRequest;->isTestDevice()Z",
        "Lcom/google/ads/AdRequest;->getBirthday()Ljava/util/Date;",
        "Lcom/google/ads/AdRequest;->getGender()Lcom/google/ads/AdRequest$Gender;",
        "Lcom/google/ads/AdRequest;->addTestDevice()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/AdRequest;->a()Lcom/google/ads/mediation/admob/AdMobAdapterExtras;",
        "Lcom/google/ads/AdRequest;->getRequestMap()Ljava/util/Map;",
        "Lcom/google/ads/AdRequest;->getLocation()Landroid/location/Location;",
        "Lcom/google/ads/AdRequest;->setTestDevices()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/AdRequest;->setBirthday()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/AdRequest;->setLocation()Lcom/google/ads/AdRequest;"
    ],
    "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;": [
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->setExtras()Lcom/google/ads/mediation/admob/AdMobAdapterExtras;",
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->addExtra()Lcom/google/ads/mediation/admob/AdMobAdapterExtras;",
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->clearExtras()Lcom/google/ads/mediation/admob/AdMobAdapterExtras;",
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->getPlusOneOptOut()Z",
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->getUseExactAdSize()Z",
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->getExtras()Ljava/util/Map;",
        "Lcom/google/ads/mediation/admob/AdMobAdapterExtras;->setPlusOneOptOut()Lcom/google/ads/mediation/admob/AdMobAdapterExtras;"
    ],
    "Lcom/google/ads/AdRequest$Gender;": [
        "Lcom/google/ads/AdRequest$Gender;->ordinal()I"
    ],
    "Ljava/util/Calendar;": [
        "Ljava/util/Calendar;->setTime()V",
        "Ljava/util/Calendar;->getTime()Ljava/util/Date;",
        "Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;",
        "Ljava/util/Calendar;->get()I"
    ],
    "Lcom/google/ads/c;": [
        "Lcom/google/ads/c;->a()Lcom/google/ads/internal/h;",
        "Lcom/google/ads/c;->a()Lcom/google/ads/a;",
        "Lcom/google/ads/c;->a()Lcom/google/ads/c;",
        "Lcom/google/ads/c;->a()I",
        "Lcom/google/ads/c;->a()Ljava/lang/String;",
        "Lcom/google/ads/c;->a()Z",
        "Lcom/google/ads/c;->a()Ljava/util/List;"
    ],
    "Lcom/google/ads/aa;": [
        "Lcom/google/ads/aa;->a()Ljava/net/HttpURLConnection;"
    ],
    "Lcom/google/ads/internal/g;": [
        "Lcom/google/ads/internal/g;->a()Z",
        "Lcom/google/ads/internal/g;->a()Ljava/lang/String;",
        "Lcom/google/ads/internal/g;->a()J",
        "Lcom/google/ads/internal/g;->a()V"
    ],
    "Lcom/google/ads/s;": [
        "Lcom/google/ads/s;->a()V",
        "Lcom/google/ads/s;->a()Ljava/lang/Runnable;"
    ],
    "Ljava/util/concurrent/TimeUnit;": [
        "Ljava/util/concurrent/TimeUnit;->convert()J"
    ],
    "Lcom/google/ads/h;": [
        "Lcom/google/ads/h;->a()V",
        "Lcom/google/ads/h;->a()Lcom/google/ads/f;",
        "Lcom/google/ads/h;->a()Lcom/google/ads/mediation/MediationAdapter;",
        "Lcom/google/ads/h;->a()Ljava/lang/String;",
        "Lcom/google/ads/h;->a()Landroid/view/View;",
        "Lcom/google/ads/h;->a()Z",
        "Lcom/google/ads/h;->a()Lcom/google/ads/e;"
    ],
    "Lcom/google/ads/e;": [
        "Lcom/google/ads/e;->a()Lcom/google/ads/h;",
        "Lcom/google/ads/e;->a()V",
        "Lcom/google/ads/e;->a()Z"
    ],
    "Lcom/google/ads/a;": [
        "Lcom/google/ads/a;->a()Ljava/util/List;",
        "Lcom/google/ads/a;->a()Ljava/lang/String;",
        "Lcom/google/ads/a;->a()Ljava/util/HashMap;"
    ],
    "Lcom/google/ads/i;": [
        "Lcom/google/ads/i;->a()V",
        "Lcom/google/ads/i;->a()Z"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/mediation/MediationAdapter;": [
        "Lcom/google/ads/mediation/MediationAdapter;->getServerParametersType()Ljava/lang/Class;",
        "Lcom/google/ads/mediation/MediationAdapter;->getAdditionalParametersType()Ljava/lang/Class;"
    ],
    "Lcom/google/ads/mediation/MediationServerParameters;": [
        "Lcom/google/ads/mediation/MediationServerParameters;->load()V",
        "Lcom/google/ads/mediation/MediationServerParameters;->a()V"
    ],
    "Lcom/google/ads/mediation/MediationInterstitialAdapter;": [
        "Lcom/google/ads/mediation/MediationInterstitialAdapter;->requestInterstitialAd()V"
    ],
    "Lcom/google/ads/mediation/MediationBannerAdapter;": [
        "Lcom/google/ads/mediation/MediationBannerAdapter;->getBannerView()Landroid/view/View;",
        "Lcom/google/ads/mediation/MediationBannerAdapter;->requestBannerAd()V"
    ],
    "Lcom/google/ads/g;": [
        "Lcom/google/ads/g;->a()Ljava/lang/String;",
        "Lcom/google/ads/g;->a()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/AdView;": [
        "Lcom/google/ads/AdView;->setGravity()V",
        "Lcom/google/ads/AdView;->getChildCount()I",
        "Lcom/google/ads/AdView;->isInEditMode()Z",
        "Lcom/google/ads/AdView;->a()Z",
        "Lcom/google/ads/AdView;->a()Ljava/lang/String;",
        "Lcom/google/ads/AdView;->addView()V",
        "Lcom/google/ads/AdView;->a()Ljava/util/Set;",
        "Lcom/google/ads/AdView;->isRefreshing()Z",
        "Lcom/google/ads/AdView;->setAdListener()V",
        "Lcom/google/ads/AdView;->stopLoading()V",
        "Lcom/google/ads/AdView;->destroy()V",
        "Lcom/google/ads/AdView;->isShown()Z",
        "Lcom/google/ads/AdView;->loadAd()V",
        "Lcom/google/ads/AdView;->a()I",
        "Lcom/google/ads/AdView;->a()V",
        "Lcom/google/ads/AdView;->getResources()Landroid/content/res/Resources;",
        "Lcom/google/ads/AdView;->setVisibility()V"
    ],
    "Lcom/google/ads/internal/b;": [
        "Lcom/google/ads/internal/b;->getMessage()Ljava/lang/String;",
        "Lcom/google/ads/internal/b;->a()V",
        "Lcom/google/ads/internal/b;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/internal/j;": [
        "Lcom/google/ads/internal/j;->a()Landroid/view/ViewGroup;"
    ],
    "Landroid/content/ActivityNotFoundException;": [
        "Landroid/content/ActivityNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Lcom/google/ads/internal/i;": [
        "Lcom/google/ads/internal/i;->a()V",
        "Lcom/google/ads/internal/i;->a()Lcom/google/ads/internal/i;"
    ],
    "Lcom/google/ads/internal/e;": [
        "Lcom/google/ads/internal/e;->a()Ljava/util/HashMap;",
        "Lcom/google/ads/internal/e;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/util/d;": [
        "Lcom/google/ads/util/d;->equals()Z",
        "Lcom/google/ads/util/d;->a()Z"
    ],
    "Lcom/google/ads/util/e;": [
        "Lcom/google/ads/util/e;->a()I"
    ],
    "Lcom/google/ads/util/i;": [
        "Lcom/google/ads/util/i;->a()V",
        "Lcom/google/ads/util/i;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/Readable;": [
        "Ljava/lang/Readable;->read()I"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->doFinal()[B",
        "Ljavax/crypto/Cipher;->getIV()[B",
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;"
    ],
    "Lcom/google/ads/util/c;": [
        "Lcom/google/ads/util/c;->a()Ljava/lang/String;",
        "Lcom/google/ads/util/c;->a()[B"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->isMusicActive()Z",
        "Landroid/media/AudioManager;->getRingerMode()I",
        "Landroid/media/AudioManager;->getMode()I",
        "Landroid/media/AudioManager;->isSpeakerphoneOn()Z"
    ],
    "Lcom/google/ads/util/b$b;": [
        "Lcom/google/ads/util/b$b;->a()V"
    ],
    "Lcom/google/ads/util/c$b;": [
        "Lcom/google/ads/util/c$b;->a()Z"
    ],
    "Lcom/google/ads/util/c$c;": [
        "Lcom/google/ads/util/c$c;->a()Z"
    ],
    "Lcom/google/ads/n;": [
        "Lcom/google/ads/n;->a()V"
    ],
    "Landroid/widget/VideoView;": [
        "Landroid/widget/VideoView;->getDuration()I",
        "Landroid/widget/VideoView;->setOnCompletionListener()V",
        "Landroid/widget/VideoView;->getCurrentPosition()I",
        "Landroid/widget/VideoView;->setMediaController()V",
        "Landroid/widget/VideoView;->setVideoPath()V",
        "Landroid/widget/VideoView;->stopPlayback()V",
        "Landroid/widget/VideoView;->pause()V",
        "Landroid/widget/VideoView;->onTouchEvent()Z",
        "Landroid/widget/VideoView;->setOnPreparedListener()V",
        "Landroid/widget/VideoView;->seekTo()V",
        "Landroid/widget/VideoView;->start()V",
        "Landroid/widget/VideoView;->setOnErrorListener()V"
    ],
    "Lcom/google/ads/internal/AdVideoView$a;": [
        "Lcom/google/ads/internal/AdVideoView$a;->a()V"
    ],
    "Landroid/widget/MediaController;": [
        "Landroid/widget/MediaController;->hide()V"
    ],
    "Lcom/google/ads/d;": [
        "Lcom/google/ads/d;->a()V",
        "Lcom/google/ads/d;->a()Z",
        "Lcom/google/ads/d;->a()Lcom/google/ads/c;"
    ],
    "Lcom/google/ads/util/AdUtil$a;": [
        "Lcom/google/ads/util/AdUtil$a;->ordinal()I"
    ],
    "Lcom/google/ads/internal/f;": [
        "Lcom/google/ads/internal/f;->a()V"
    ],
    "Ljava/util/LinkedList;": [
        "Ljava/util/LinkedList;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->add()Z",
        "Ljava/util/LinkedList;->clear()V",
        "Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedList;->size()I",
        "Ljava/util/LinkedList;->isEmpty()Z"
    ],
    "Lcom/google/ads/f;": [
        "Lcom/google/ads/f;->a()Ljava/util/List;",
        "Lcom/google/ads/f;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/AdListener;": [
        "Lcom/google/ads/AdListener;->onPresentScreen()V",
        "Lcom/google/ads/AdListener;->onFailedToReceiveAd()V",
        "Lcom/google/ads/AdListener;->onDismissScreen()V",
        "Lcom/google/ads/AdListener;->onLeaveApplication()V",
        "Lcom/google/ads/AdListener;->onReceiveAd()V"
    ],
    "Lcom/google/ads/internal/f$a;": [
        "Lcom/google/ads/internal/f$a;->a()Ljava/net/HttpURLConnection;"
    ],
    "Landroid/gesture/GestureStore;": [
        "Landroid/gesture/GestureStore;->load()V"
    ],
    "Landroid/gesture/GestureOverlayView;": [
        "Landroid/gesture/GestureOverlayView;->setEventsInterceptionEnabled()V",
        "Landroid/gesture/GestureOverlayView;->setGestureVisible()V",
        "Landroid/gesture/GestureOverlayView;->setGestureStrokeType()V",
        "Landroid/gesture/GestureOverlayView;->addOnGesturePerformedListener()V"
    ],
    "Lcom/google/ads/mediation/MediationServerParameters$Parameter;": [
        "Lcom/google/ads/mediation/MediationServerParameters$Parameter;->name()Ljava/lang/String;",
        "Lcom/google/ads/mediation/MediationServerParameters$Parameter;->required()Z"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventAdapter;": [
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->a()Ljava/lang/Object;",
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->requestBannerAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->requestInterstitialAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter;->a()V"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventAdapter$a;": [
        "Lcom/google/ads/mediation/customevent/CustomEventAdapter$a;->a()Landroid/view/View;"
    ],
    "Lcom/google/ads/mediation/MediationBannerListener;": [
        "Lcom/google/ads/mediation/MediationBannerListener;->onFailedToReceiveAd()V"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventBanner;": [
        "Lcom/google/ads/mediation/customevent/CustomEventBanner;->requestBannerAd()V"
    ],
    "Lcom/google/ads/mediation/MediationInterstitialListener;": [
        "Lcom/google/ads/mediation/MediationInterstitialListener;->onFailedToReceiveAd()V"
    ],
    "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;": [
        "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;->requestInterstitialAd()V",
        "Lcom/google/ads/mediation/customevent/CustomEventInterstitial;->showInterstitial()V"
    ],
    "Lcom/google/ads/mediation/MediationAdRequest;": [
        "Lcom/google/ads/mediation/MediationAdRequest;->getBirthday()Ljava/util/Date;",
        "Lcom/google/ads/mediation/MediationAdRequest;->getLocation()Landroid/location/Location;",
        "Lcom/google/ads/mediation/MediationAdRequest;->isTesting()Z",
        "Lcom/google/ads/mediation/MediationAdRequest;->getGender()Lcom/google/ads/AdRequest$Gender;",
        "Lcom/google/ads/mediation/MediationAdRequest;->getKeywords()Ljava/util/Set;"
    ],
    "Lcom/google/ads/mediation/admob/AdMobAdapter;": [
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->a()Z",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->requestBannerAd()V",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->a()Lcom/google/ads/InterstitialAd;",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->a()Lcom/google/ads/AdView;",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->a()Lcom/google/ads/AdRequest;",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->a()V",
        "Lcom/google/ads/mediation/admob/AdMobAdapter;->requestInterstitialAd()V"
    ],
    "Lcom/google/ads/InterstitialAd;": [
        "Lcom/google/ads/InterstitialAd;->setAdListener()V",
        "Lcom/google/ads/InterstitialAd;->show()V",
        "Lcom/google/ads/InterstitialAd;->stopLoading()V",
        "Lcom/google/ads/InterstitialAd;->loadAd()V"
    ],
    "Lcom/google/ads/searchads/SearchAdRequest;": [
        "Lcom/google/ads/searchads/SearchAdRequest;->getNetworkExtras()Ljava/lang/Object;",
        "Lcom/google/ads/searchads/SearchAdRequest;->a()Ljava/lang/String;",
        "Lcom/google/ads/searchads/SearchAdRequest;->setNetworkExtras()Lcom/google/ads/AdRequest;"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->argb()I",
        "Landroid/graphics/Color;->alpha()I"
    ],
    "Lcom/google/ads/searchads/SearchAdRequest$BorderType;": [
        "Lcom/google/ads/searchads/SearchAdRequest$BorderType;->toString()Ljava/lang/String;"
    ],
    "Lcom/esotericsoftware/tablelayout/Value;": [
        "Lcom/esotericsoftware/tablelayout/Value;->width()F",
        "Lcom/esotericsoftware/tablelayout/Value;->height()F",
        "Lcom/esotericsoftware/tablelayout/Value;->get()F"
    ],
    "Lcom/esotericsoftware/tablelayout/Toolkit;": [
        "Lcom/esotericsoftware/tablelayout/Toolkit;->setWidget()V",
        "Lcom/esotericsoftware/tablelayout/Toolkit;->addChild()V",
        "Lcom/esotericsoftware/tablelayout/Toolkit;->clearDebugRectangles()V",
        "Lcom/esotericsoftware/tablelayout/Toolkit;->addDebugRectangle()V",
        "Lcom/esotericsoftware/tablelayout/Toolkit;->removeChild()V",
        "Lcom/esotericsoftware/tablelayout/Toolkit;->width()F",
        "Lcom/esotericsoftware/tablelayout/Toolkit;->height()F"
    ],
    "Lcom/esotericsoftware/tablelayout/Cell;": [
        "Lcom/esotericsoftware/tablelayout/Cell;->getIgnore()Z",
        "Lcom/esotericsoftware/tablelayout/Cell;->setWidgetX()V",
        "Lcom/esotericsoftware/tablelayout/Cell;->setWidgetHeight()V",
        "Lcom/esotericsoftware/tablelayout/Cell;->getWidgetHeight()F",
        "Lcom/esotericsoftware/tablelayout/Cell;->width()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/Cell;->expand()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/Cell;->set()V",
        "Lcom/esotericsoftware/tablelayout/Cell;->fill()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/Cell;->space()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/Cell;->getWidgetWidth()F",
        "Lcom/esotericsoftware/tablelayout/Cell;->isEndRow()Z",
        "Lcom/esotericsoftware/tablelayout/Cell;->size()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/Cell;->setWidgetWidth()V",
        "Lcom/esotericsoftware/tablelayout/Cell;->height()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/Cell;->merge()V",
        "Lcom/esotericsoftware/tablelayout/Cell;->setWidgetY()V",
        "Lcom/esotericsoftware/tablelayout/Cell;->getWidgetX()F",
        "Lcom/esotericsoftware/tablelayout/Cell;->getWidget()Ljava/lang/Object;",
        "Lcom/esotericsoftware/tablelayout/Cell;->getWidgetY()F",
        "Lcom/esotericsoftware/tablelayout/Cell;->defaults()Lcom/esotericsoftware/tablelayout/Cell;"
    ],
    "Lcom/esotericsoftware/tablelayout/BaseTableLayout;": [
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->layout()V",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->endRow()V",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->clear()V",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->computeSize()V",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->invalidate()V",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->a()F",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->row()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/esotericsoftware/tablelayout/BaseTableLayout;->ensureSize()[F"
    ],
    "Lcom/jcraft/jorbis/StaticCodeBook;": [
        "Lcom/jcraft/jorbis/StaticCodeBook;->maptype1_quantvals()I",
        "Lcom/jcraft/jorbis/StaticCodeBook;->float32_unpack()F",
        "Lcom/jcraft/jorbis/StaticCodeBook;->ldexp()F",
        "Lcom/jcraft/jorbis/StaticCodeBook;->pack()I",
        "Lcom/jcraft/jorbis/StaticCodeBook;->clear()V",
        "Lcom/jcraft/jorbis/StaticCodeBook;->ilog()I",
        "Lcom/jcraft/jorbis/StaticCodeBook;->unquantize()[F",
        "Lcom/jcraft/jorbis/StaticCodeBook;->unpack()I"
    ],
    "Lcom/jcraft/jogg/Buffer;": [
        "Lcom/jcraft/jogg/Buffer;->bytes()I",
        "Lcom/jcraft/jogg/Buffer;->read1()I",
        "Lcom/jcraft/jogg/Buffer;->read()I",
        "Lcom/jcraft/jogg/Buffer;->writeclear()V",
        "Lcom/jcraft/jogg/Buffer;->read()V",
        "Lcom/jcraft/jogg/Buffer;->buffer()[B",
        "Lcom/jcraft/jogg/Buffer;->write()V",
        "Lcom/jcraft/jogg/Buffer;->look()I",
        "Lcom/jcraft/jogg/Buffer;->adv()V"
    ],
    "Lcom/jcraft/jorbis/FuncFloor;": [
        "Lcom/jcraft/jorbis/FuncFloor;->inverse1()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncFloor;->free_info()V",
        "Lcom/jcraft/jorbis/FuncFloor;->unpack()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncFloor;->pack()V",
        "Lcom/jcraft/jorbis/FuncFloor;->inverse2()I",
        "Lcom/jcraft/jorbis/FuncFloor;->look()Ljava/lang/Object;"
    ],
    "Lcom/jcraft/jorbis/FuncResidue;": [
        "Lcom/jcraft/jorbis/FuncResidue;->look()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncResidue;->free_info()V",
        "Lcom/jcraft/jorbis/FuncResidue;->pack()V",
        "Lcom/jcraft/jorbis/FuncResidue;->unpack()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncResidue;->inverse()I"
    ],
    "Lcom/jcraft/jorbis/Mdct;": [
        "Lcom/jcraft/jorbis/Mdct;->mdct_kernel()[F",
        "Lcom/jcraft/jorbis/Mdct;->backward()V"
    ],
    "Lcom/jcraft/jorbis/FuncTime;": [
        "Lcom/jcraft/jorbis/FuncTime;->unpack()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncTime;->look()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncTime;->pack()V",
        "Lcom/jcraft/jorbis/FuncTime;->free_info()V"
    ],
    "Lcom/jcraft/jorbis/Mapping0;": [
        "Lcom/jcraft/jorbis/Mapping0;->ilog2()I"
    ],
    "Lcom/jcraft/jorbis/InfoMapping0;": [
        "Lcom/jcraft/jorbis/InfoMapping0;->free()V"
    ],
    "Lcom/jcraft/jogg/SyncState;": [
        "Lcom/jcraft/jogg/SyncState;->buffer()I",
        "Lcom/jcraft/jogg/SyncState;->reset()I",
        "Lcom/jcraft/jogg/SyncState;->clear()I",
        "Lcom/jcraft/jogg/SyncState;->pageout()I",
        "Lcom/jcraft/jogg/SyncState;->wrote()I",
        "Lcom/jcraft/jogg/SyncState;->pageseek()I"
    ],
    "Lcom/jcraft/jogg/Page;": [
        "Lcom/jcraft/jogg/Page;->granulepos()J",
        "Lcom/jcraft/jogg/Page;->copy()Lcom/jcraft/jogg/Page;",
        "Lcom/jcraft/jogg/Page;->continued()I",
        "Lcom/jcraft/jogg/Page;->version()I",
        "Lcom/jcraft/jogg/Page;->pageno()I",
        "Lcom/jcraft/jogg/Page;->crc_entry()I",
        "Lcom/jcraft/jogg/Page;->checksum()V",
        "Lcom/jcraft/jogg/Page;->bos()I",
        "Lcom/jcraft/jogg/Page;->eos()I",
        "Lcom/jcraft/jogg/Page;->serialno()I"
    ],
    "Lcom/jcraft/jogg/StreamState;": [
        "Lcom/jcraft/jogg/StreamState;->flush()I",
        "Lcom/jcraft/jogg/StreamState;->packetout()I",
        "Lcom/jcraft/jogg/StreamState;->pagein()I",
        "Lcom/jcraft/jogg/StreamState;->reset()I",
        "Lcom/jcraft/jogg/StreamState;->clear()V",
        "Lcom/jcraft/jogg/StreamState;->body_expand()V",
        "Lcom/jcraft/jogg/StreamState;->lacing_expand()V"
    ],
    "Lcom/jcraft/jorbis/Info;": [
        "Lcom/jcraft/jorbis/Info;->ilog2()I",
        "Lcom/jcraft/jorbis/Info;->unpack_info()I",
        "Lcom/jcraft/jorbis/Info;->unpack_books()I",
        "Lcom/jcraft/jorbis/Info;->synthesis_headerin()I",
        "Lcom/jcraft/jorbis/Info;->clear()V"
    ],
    "Lcom/jcraft/jorbis/Block;": [
        "Lcom/jcraft/jorbis/Block;->clear()I",
        "Lcom/jcraft/jorbis/Block;->synthesis()I"
    ],
    "Lcom/jcraft/jorbis/DspState;": [
        "Lcom/jcraft/jorbis/DspState;->synthesis_blockin()I",
        "Lcom/jcraft/jorbis/DspState;->synthesis_read()I",
        "Lcom/jcraft/jorbis/DspState;->window()[F",
        "Lcom/jcraft/jorbis/DspState;->synthesis_pcmout()I",
        "Lcom/jcraft/jorbis/DspState;->ilog2()I",
        "Lcom/jcraft/jorbis/DspState;->clear()V"
    ],
    "Lcom/jcraft/jorbis/VorbisFile;": [
        "Lcom/jcraft/jorbis/VorbisFile;->process_packet()I",
        "Lcom/jcraft/jorbis/VorbisFile;->host_is_big_endian()I",
        "Lcom/jcraft/jorbis/VorbisFile;->time_total()F",
        "Lcom/jcraft/jorbis/VorbisFile;->raw_seek()I",
        "Lcom/jcraft/jorbis/VorbisFile;->serialnumber()I",
        "Lcom/jcraft/jorbis/VorbisFile;->fseek()I",
        "Lcom/jcraft/jorbis/VorbisFile;->fetch_headers()I",
        "Lcom/jcraft/jorbis/VorbisFile;->open()I",
        "Lcom/jcraft/jorbis/VorbisFile;->open_callbacks()I",
        "Lcom/jcraft/jorbis/VorbisFile;->getComment()Lcom/jcraft/jorbis/Comment;",
        "Lcom/jcraft/jorbis/VorbisFile;->clear()I",
        "Lcom/jcraft/jorbis/VorbisFile;->get_data()I",
        "Lcom/jcraft/jorbis/VorbisFile;->bitrate()I",
        "Lcom/jcraft/jorbis/VorbisFile;->ftell()J",
        "Lcom/jcraft/jorbis/VorbisFile;->open_seekable()I",
        "Lcom/jcraft/jorbis/VorbisFile;->seek_helper()V",
        "Lcom/jcraft/jorbis/VorbisFile;->get_next_page()I",
        "Lcom/jcraft/jorbis/VorbisFile;->prefetch_all_headers()V",
        "Lcom/jcraft/jorbis/VorbisFile;->bisect_forward_serialno()I",
        "Lcom/jcraft/jorbis/VorbisFile;->open_nonseekable()I",
        "Lcom/jcraft/jorbis/VorbisFile;->seekable()Z",
        "Lcom/jcraft/jorbis/VorbisFile;->pcm_total()J",
        "Lcom/jcraft/jorbis/VorbisFile;->decode_clear()V",
        "Lcom/jcraft/jorbis/VorbisFile;->pcm_seek()I",
        "Lcom/jcraft/jorbis/VorbisFile;->get_prev_page()I",
        "Lcom/jcraft/jorbis/VorbisFile;->make_decode_ready()I",
        "Lcom/jcraft/jorbis/VorbisFile;->raw_total()J",
        "Lcom/jcraft/jorbis/VorbisFile;->streams()I",
        "Lcom/jcraft/jorbis/VorbisFile;->getInfo()Lcom/jcraft/jorbis/Info;"
    ],
    "Lcom/jcraft/jorbis/VorbisFile$SeekableInputStream;": [
        "Lcom/jcraft/jorbis/VorbisFile$SeekableInputStream;->tell()J",
        "Lcom/jcraft/jorbis/VorbisFile$SeekableInputStream;->seek()V",
        "Lcom/jcraft/jorbis/VorbisFile$SeekableInputStream;->getLength()J"
    ],
    "Lcom/jcraft/jorbis/Comment;": [
        "Lcom/jcraft/jorbis/Comment;->pack()I",
        "Lcom/jcraft/jorbis/Comment;->query()Ljava/lang/String;",
        "Lcom/jcraft/jorbis/Comment;->unpack()I",
        "Lcom/jcraft/jorbis/Comment;->query()I",
        "Lcom/jcraft/jorbis/Comment;->add()V",
        "Lcom/jcraft/jorbis/Comment;->tagcompare()Z",
        "Lcom/jcraft/jorbis/Comment;->clear()V"
    ],
    "Lcom/jcraft/jorbis/Lpc;": [
        "Lcom/jcraft/jorbis/Lpc;->lpc_from_data()F",
        "Lcom/jcraft/jorbis/Lpc;->lpc_to_curve()V",
        "Lcom/jcraft/jorbis/Lpc;->FAST_HYPOT()F"
    ],
    "Lcom/jcraft/jorbis/Floor0;": [
        "Lcom/jcraft/jorbis/Floor0;->toBARK()F",
        "Lcom/jcraft/jorbis/Floor0;->ilog()I"
    ],
    "Lcom/jcraft/jorbis/Lsp;": [
        "Lcom/jcraft/jorbis/Lsp;->lsp_to_curve()V"
    ],
    "Lcom/jcraft/jorbis/CodeBook;": [
        "Lcom/jcraft/jorbis/CodeBook;->besterror()I",
        "Lcom/jcraft/jorbis/CodeBook;->clear()V",
        "Lcom/jcraft/jorbis/CodeBook;->ilog()I",
        "Lcom/jcraft/jorbis/CodeBook;->decodev_set()I",
        "Lcom/jcraft/jorbis/CodeBook;->make_decode_tree()Lcom/jcraft/jorbis/DecodeAux;",
        "Lcom/jcraft/jorbis/CodeBook;->decodev_add()I",
        "Lcom/jcraft/jorbis/CodeBook;->decodevv_add()I",
        "Lcom/jcraft/jorbis/CodeBook;->decode()I",
        "Lcom/jcraft/jorbis/CodeBook;->decodevs()I",
        "Lcom/jcraft/jorbis/CodeBook;->decodevs_add()I",
        "Lcom/jcraft/jorbis/CodeBook;->make_words()[I",
        "Lcom/jcraft/jorbis/CodeBook;->best()I",
        "Lcom/jcraft/jorbis/CodeBook;->encode()I",
        "Lcom/jcraft/jorbis/CodeBook;->dist()F"
    ],
    "Lcom/jcraft/jorbis/Floor1;": [
        "Lcom/jcraft/jorbis/Floor1;->render_point()I",
        "Lcom/jcraft/jorbis/Floor1;->render_line()V",
        "Lcom/jcraft/jorbis/Floor1;->ilog()I",
        "Lcom/jcraft/jorbis/Floor1;->ilog2()I"
    ],
    "Lcom/jcraft/jorbis/InfoFloor1;": [
        "Lcom/jcraft/jorbis/InfoFloor1;->free()V"
    ],
    "Lcom/jcraft/jorbis/Drft;": [
        "Lcom/jcraft/jorbis/Drft;->dradf4()V",
        "Lcom/jcraft/jorbis/Drft;->dradbg()V",
        "Lcom/jcraft/jorbis/Drft;->drfti1()V",
        "Lcom/jcraft/jorbis/Drft;->backward()V",
        "Lcom/jcraft/jorbis/Drft;->dradf2()V",
        "Lcom/jcraft/jorbis/Drft;->drftb1()V",
        "Lcom/jcraft/jorbis/Drft;->clear()V",
        "Lcom/jcraft/jorbis/Drft;->dradfg()V",
        "Lcom/jcraft/jorbis/Drft;->dradb4()V",
        "Lcom/jcraft/jorbis/Drft;->fdrffti()V",
        "Lcom/jcraft/jorbis/Drft;->dradb2()V",
        "Lcom/jcraft/jorbis/Drft;->dradb3()V"
    ],
    "Lcom/jcraft/jorbis/FuncMapping;": [
        "Lcom/jcraft/jorbis/FuncMapping;->unpack()Ljava/lang/Object;",
        "Lcom/jcraft/jorbis/FuncMapping;->free_info()V",
        "Lcom/jcraft/jorbis/FuncMapping;->inverse()I",
        "Lcom/jcraft/jorbis/FuncMapping;->pack()V",
        "Lcom/jcraft/jorbis/FuncMapping;->look()Ljava/lang/Object;"
    ],
    "Lcom/jcraft/jorbis/Residue0;": [
        "Lcom/jcraft/jorbis/Residue0;->ilog()I",
        "Lcom/jcraft/jorbis/Residue0;->free_info()V",
        "Lcom/jcraft/jorbis/Residue0;->_2inverse()I",
        "Lcom/jcraft/jorbis/Residue0;->icount()I",
        "Lcom/jcraft/jorbis/Residue0;->_01inverse()I"
    ],
    "Lcom/jcraft/jorbis/Lookup;": [
        "Lcom/jcraft/jorbis/Lookup;->invsqlook()F",
        "Lcom/jcraft/jorbis/Lookup;->coslook()F",
        "Lcom/jcraft/jorbis/Lookup;->invsq2explook()F",
        "Lcom/jcraft/jorbis/Lookup;->fromdBlook()F"
    ],
    "Lcom/jcraft/jorbis/PsyInfo;": [
        "Lcom/jcraft/jorbis/PsyInfo;->free()V"
    ],
    "Lcom/badlogic/gdx2/Screen;": [
        "Lcom/badlogic/gdx2/Screen;->resume()V",
        "Lcom/badlogic/gdx2/Screen;->pause()V",
        "Lcom/badlogic/gdx2/Screen;->render()V",
        "Lcom/badlogic/gdx2/Screen;->hide()V",
        "Lcom/badlogic/gdx2/Screen;->dispose()V",
        "Lcom/badlogic/gdx2/Screen;->show()V",
        "Lcom/badlogic/gdx2/Screen;->hideLogOut()V",
        "Lcom/badlogic/gdx2/Screen;->resize()V"
    ],
    "Lcom/badlogic/gdx2/Graphics;": [
        "Lcom/badlogic/gdx2/Graphics;->getHeight()I",
        "Lcom/badlogic/gdx2/Graphics;->getDeltaTime()F",
        "Lcom/badlogic/gdx2/Graphics;->requestRendering()V",
        "Lcom/badlogic/gdx2/Graphics;->supportsExtension()Z",
        "Lcom/badlogic/gdx2/Graphics;->getGL20()Lcom/badlogic/gdx/graphics/GL20;",
        "Lcom/badlogic/gdx2/Graphics;->getGL10()Lcom/badlogic/gdx/graphics/GL10;",
        "Lcom/badlogic/gdx2/Graphics;->isGL20Available()Z",
        "Lcom/badlogic/gdx2/Graphics;->getFramesPerSecond()I",
        "Lcom/badlogic/gdx2/Graphics;->getWidth()I"
    ],
    "Lcom/badlogic/gdx/utils/Array;": [
        "Lcom/badlogic/gdx/utils/Array;->removeIndex()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->clear()V",
        "Lcom/badlogic/gdx/utils/Array;->peek()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->pop()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->toArray()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->ensureCapacity()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->set()V",
        "Lcom/badlogic/gdx/utils/Array;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/Array;->insert()V",
        "Lcom/badlogic/gdx/utils/Array;->add()V",
        "Lcom/badlogic/gdx/utils/Array;->truncate()V",
        "Lcom/badlogic/gdx/utils/Array;->indexOf()I",
        "Lcom/badlogic/gdx/utils/Array;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->shuffle()V",
        "Lcom/badlogic/gdx/utils/Array;->addAll()V",
        "Lcom/badlogic/gdx/utils/Array;->resize()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->swap()V",
        "Lcom/badlogic/gdx/utils/Array;->removeValue()Z",
        "Lcom/badlogic/gdx/utils/Array;->contains()Z",
        "Lcom/badlogic/gdx/utils/Array;->sort()V",
        "Lcom/badlogic/gdx/utils/Array;->reverse()V"
    ],
    "Lcom/badlogic/gdx2/InputProcessor;": [
        "Lcom/badlogic/gdx2/InputProcessor;->touchMoved()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->touchDragged()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->touchDown()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->keyTyped()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->keyDown()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->scrolled()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->keyUp()Z",
        "Lcom/badlogic/gdx2/InputProcessor;->touchUp()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/World;": [
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateRopeJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetContactCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniIsLocked()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->QueryAABB()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetContiousPhysics()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateBody()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateDistanceJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->getJoints()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/physics/box2d/World;->newWorld()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreatePrismaticJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->createJoint()Lcom/badlogic/gdx/physics/box2d/Joint;",
        "Lcom/badlogic/gdx/physics/box2d/World;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDestroyJoint()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateWheelJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateFrictionJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetAutoClearForces()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->destroyBody()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetProxyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetWarmStarting()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateWeldJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniQueryAABB()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniStep()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateRevoluteJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreatePulleyJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniRayCast()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getBodies()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/physics/box2d/World;->getContactCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->getContactList()Ljava/util/List;",
        "Lcom/badlogic/gdx/physics/box2d/World;->setUseDefaultContactFilter()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetBodyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetAutoClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->createProperJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDestroyBody()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateGearJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDispose()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->destroyJoint()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->setContactFilter()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetContactList()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->step()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->createBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetJointcount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->setGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateMouseJoint()J"
    ],
    "Lcom/badlogic/gdx/physics/box2d/EdgeShape;": [
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->getVertex1()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->setRadius()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->jniGetVertex1()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->jniGetVertex2()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->jniSet()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->getVertex2()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->set()V",
        "Lcom/badlogic/gdx/physics/box2d/EdgeShape;->newEdgeShape()J"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Body;": [
        "Lcom/badlogic/gdx/physics/box2d/Body;->getWorldVector()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldVector()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetActive()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAngularVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLocalPoint()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocityFromWorldPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngularVelocity()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLinearVelocity()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getInertia()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetLinearDamping()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getPosition()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getMass()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetBullet()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAwake()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsFixedRotation()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getUserData()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetInertia()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->reset()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getFixtureList()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyForceToCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearDamping()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getJointList()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAngularDamping()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniResetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->createFixture()Lcom/badlogic/gdx/physics/box2d/Fixture;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetType()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyAngularImpulse()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setAngularVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setAwake()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getWorldPoint()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetFixedRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsBullet()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLocalVector()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngularDamping()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetGravityScale()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalVector()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->isActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyLinearImpulse()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsSleepingAllowed()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getType()Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetSleepingAllowed()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getTransform()Lcom/badlogic/gdx/physics/box2d/Transform;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniDestroyFixture()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setType()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsAwake()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->applyForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniCreateFixture()J",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetGravityScale()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->setUserData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetMass()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->applyTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocityFromLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->isAwake()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/PolygonShape;": [
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->setAsBox()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniGetVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSet()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->set()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSetAsBox()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->getVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->newPolygonShape()J",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->getVertexCount()I",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniGetVertexCount()I"
    ],
    "Lcom/badlogic/gdx/math/Vector2;": [
        "Lcom/badlogic/gdx/math/Vector2;->mul()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->sub()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->set()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->angle()F",
        "Lcom/badlogic/gdx/math/Vector2;->add()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->dst()F",
        "Lcom/badlogic/gdx/math/Vector2;->nor()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->len()F",
        "Lcom/badlogic/gdx/math/Vector2;->rotate()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/CircleShape;": [
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->newCircleShape()J",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->setRadius()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->getPosition()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->jniSetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->getRadius()F",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->jniGetPosition()V"
    ],
    "Lcom/badlogic/gdx/tests/box2d/Box2DTest;": [
        "Lcom/badlogic/gdx/tests/box2d/Box2DTest;->createWorld()V",
        "Lcom/badlogic/gdx/tests/box2d/Box2DTest;->render()V"
    ],
    "Lcom/badlogic/gdx/tests/box2d/ContinuousTest;": [
        "Lcom/badlogic/gdx/tests/box2d/ContinuousTest;->launch()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;": [
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setProjectionMatrix()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->disableBlending()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->getTransformMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setTransformMatrix()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->begin()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->enableBlending()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->draw()Landroid/util/Pair;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->createDefaultShader()Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->renderMesh()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->isBlendingEnabled()Z",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setupMatrices()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->getProjectionMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->end()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->flush()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->switchTexture()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setBlendFunction()V"
    ],
    "Lcom/badlogic/gdx/math/Vector3;": [
        "Lcom/badlogic/gdx/math/Vector3;->cpy()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->dst2()F",
        "Lcom/badlogic/gdx/math/Vector3;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/math/Vector3;->dot()F",
        "Lcom/badlogic/gdx/math/Vector3;->nor()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->len()F",
        "Lcom/badlogic/gdx/math/Vector3;->set()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->mul()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->tmp2()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->len2()F",
        "Lcom/badlogic/gdx/math/Vector3;->add()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->div()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->dst()F",
        "Lcom/badlogic/gdx/math/Vector3;->sub()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->prj()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->crs()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->rotate()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->tmp()Lcom/badlogic/gdx/math/Vector3;"
    ],
    "Lcom/badlogic/gdx2/Files;": [
        "Lcom/badlogic/gdx2/Files;->classpath()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx2/Files;->internal()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx2/Files;->getExternalStoragePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx2/Files;->external()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx2/Files;->getFileHandle()Lcom/badlogic/gdx/files/FileHandle;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;": [
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawJoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->render()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->renderBodies()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawAABB()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawSegment()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawSolidPolygon()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawShape()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawContact()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawSolidCircle()V"
    ],
    "Lcom/badlogic/gdx/utils/TimeUtils;": [
        "Lcom/badlogic/gdx/utils/TimeUtils;->nanoTime()J",
        "Lcom/badlogic/gdx/utils/TimeUtils;->millis()J"
    ],
    "Lcom/badlogic/gdx2/Application;": [
        "Lcom/badlogic/gdx2/Application;->getType()Lcom/badlogic/gdx2/Application$ApplicationType;",
        "Lcom/badlogic/gdx2/Application;->getGraphics()Lcom/badlogic/gdx2/Graphics;",
        "Lcom/badlogic/gdx2/Application;->postRunnable()V",
        "Lcom/badlogic/gdx2/Application;->debug()V",
        "Lcom/badlogic/gdx2/Application;->getInput()Lcom/badlogic/gdx2/Input;",
        "Lcom/badlogic/gdx2/Application;->getFiles()Lcom/badlogic/gdx2/Files;",
        "Lcom/badlogic/gdx2/Application;->log()V",
        "Lcom/badlogic/gdx2/Application;->error()V",
        "Lcom/badlogic/gdx2/Application;->getPreferences()Lcom/badlogic/gdx2/Preferences;",
        "Lcom/badlogic/gdx2/Application;->exit()V"
    ],
    "Lcom/badlogic/gdx/graphics/GLCommon;": [
        "Lcom/badlogic/gdx/graphics/GLCommon;->glGetString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glClearColor()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glClear()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glBindTexture()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDeleteTextures()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glTexImage2D()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glActiveTexture()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glClearDepthf()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDepthFunc()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glReadPixels()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glColorMask()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glEnable()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glPixelStorei()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glScissor()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glCompressedTexImage2D()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDisable()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glTexParameterf()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glViewport()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glTexSubImage2D()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glGenTextures()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glBlendFunc()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDepthMask()V"
    ],
    "Lcom/badlogic/gdx/graphics/OrthographicCamera;": [
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->setToOrtho()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->calculateDirection()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->calculateAngle()F",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->unproject()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->lookAt()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->update()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->normalizeUp()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->project()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->findDirectionForIsoView()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->containsCharacter()Z",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->indexOf()I",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->isWhitespace()Z",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->computeVisibleGlyphs()I",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getSpaceWidth()F",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getScaleX()F",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getDescent()F",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getScaleY()F",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->draw()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->computeGlyphAdvancesAndPositions()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->isFlipped()Z",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getCapHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->drawWrapped()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->usesIntegerPositions()Z",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getMultiLineBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getWrappedBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetMaxForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetTarget()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetDampingRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetFrequency()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetMaxForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetTarget()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetFrequency()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->setTarget()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Transform;": [
        "Lcom/badlogic/gdx/physics/box2d/Transform;->getRotation()F",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->setPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->mul()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->setRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->getPosition()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetJointTranslation()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->enableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->getMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetMaxMotorForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->isLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->setMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->isMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->enableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetMotorSpeed()F"
    ],
    "Lcom/badlogic/gdx/math/WindowedMean;": [
        "Lcom/badlogic/gdx/math/WindowedMean;->clear()V",
        "Lcom/badlogic/gdx/math/WindowedMean;->addValue()V",
        "Lcom/badlogic/gdx/math/WindowedMean;->hasEnoughData()Z",
        "Lcom/badlogic/gdx/math/WindowedMean;->getMean()F"
    ],
    "Lcom/badlogic/gdx/math/FloatCounter;": [
        "Lcom/badlogic/gdx/math/FloatCounter;->reset()V",
        "Lcom/badlogic/gdx/math/FloatCounter;->put()V"
    ],
    "Lcom/badlogic/gdx/math/Matrix3;": [
        "Lcom/badlogic/gdx/math/Matrix3;->mul()V",
        "Lcom/badlogic/gdx/math/Matrix3;->getValues()[F",
        "Lcom/badlogic/gdx/math/Matrix3;->setToTranslation()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->det()F",
        "Lcom/badlogic/gdx/math/Matrix3;->translate()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->set()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->rotate()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->scale()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->idt()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->mul()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->trn()Lcom/badlogic/gdx/math/Matrix3;"
    ],
    "Lcom/badlogic/gdx/math/Plane;": [
        "Lcom/badlogic/gdx/math/Plane;->set()V",
        "Lcom/badlogic/gdx/math/Plane;->getD()F",
        "Lcom/badlogic/gdx/math/Plane;->testPoint()Lcom/badlogic/gdx/math/Plane$PlaneSide;",
        "Lcom/badlogic/gdx/math/Plane;->getNormal()Lcom/badlogic/gdx/math/Vector3;"
    ],
    "Lcom/badlogic/gdx/math/CatmullRomSpline;": [
        "Lcom/badlogic/gdx/math/CatmullRomSpline;->getTangents()Ljava/util/List;"
    ],
    "Lcom/badlogic/gdx/math/Polygon;": [
        "Lcom/badlogic/gdx/math/Polygon;->getTransformedVertices()[F"
    ],
    "Lcom/badlogic/gdx/math/MathUtils;": [
        "Lcom/badlogic/gdx/math/MathUtils;->sinDeg()F",
        "Lcom/badlogic/gdx/math/MathUtils;->cos()F",
        "Lcom/badlogic/gdx/math/MathUtils;->random()I",
        "Lcom/badlogic/gdx/math/MathUtils;->ceil()I",
        "Lcom/badlogic/gdx/math/MathUtils;->cosDeg()F",
        "Lcom/badlogic/gdx/math/MathUtils;->isPowerOfTwo()Z",
        "Lcom/badlogic/gdx/math/MathUtils;->random()F",
        "Lcom/badlogic/gdx/math/MathUtils;->clamp()F",
        "Lcom/badlogic/gdx/math/MathUtils;->nextPowerOfTwo()I",
        "Lcom/badlogic/gdx/math/MathUtils;->atan2()F",
        "Lcom/badlogic/gdx/math/MathUtils;->sin()F"
    ],
    "Lcom/badlogic/gdx/math/collision/BoundingBox;": [
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->updateCorners()V",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->getCorners()[Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->isValid()Z",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->min()F",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->ext()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->max()F",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->inf()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->clr()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->set()Lcom/badlogic/gdx/math/collision/BoundingBox;"
    ],
    "Lcom/badlogic/gdx/math/Matrix4;": [
        "Lcom/badlogic/gdx/math/Matrix4;->translate()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->idt()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->mul()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToLookAt()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->inv()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->set()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToTranslation()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->trn()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->tra()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToRotation()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->rotate()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->prj()V",
        "Lcom/badlogic/gdx/math/Matrix4;->mul()V",
        "Lcom/badlogic/gdx/math/Matrix4;->inv()Z",
        "Lcom/badlogic/gdx/math/Matrix4;->setToOrtho2D()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToOrtho()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToProjection()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->scale()Lcom/badlogic/gdx/math/Matrix4;"
    ],
    "Lcom/badlogic/gdx/math/EarClippingTriangulator;": [
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isEarTip()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isAnyVertexInTriangle()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isTriangleConvex()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->removeCollinearNeighborEarsAfterRemovingEarTip()V",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isCollinear()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computeNextIndex()I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computeTriangles()Ljava/util/List;",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computeSpannedAreaSign()I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computePreviousIndex()I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->cutEarTip()V",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->classifyVertices()[I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->areVerticesClockwise()Z"
    ],
    "Lcom/badlogic/gdx/utils/NumberUtils;": [
        "Lcom/badlogic/gdx/utils/NumberUtils;->intToFloatColor()F",
        "Lcom/badlogic/gdx/utils/NumberUtils;->longBitsToDouble()D",
        "Lcom/badlogic/gdx/utils/NumberUtils;->doubleToLongBits()J",
        "Lcom/badlogic/gdx/utils/NumberUtils;->floatToIntColor()I",
        "Lcom/badlogic/gdx/utils/NumberUtils;->floatToIntBits()I"
    ],
    "Lcom/badlogic/gdx/math/Quaternion;": [
        "Lcom/badlogic/gdx/math/Quaternion;->toMatrix()V",
        "Lcom/badlogic/gdx/math/Quaternion;->setFromAxis()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->nor()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->setFromAxes()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->equals()Z",
        "Lcom/badlogic/gdx/math/Quaternion;->dot()F",
        "Lcom/badlogic/gdx/math/Quaternion;->conjugate()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->setFromCross()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->setFromMatrix()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->setEulerAngles()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->idt()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->mulLeft()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->set()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->mul()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->len2()F"
    ],
    "Lcom/badlogic/gdx/math/Intersector;": [
        "Lcom/badlogic/gdx/math/Intersector;->splitTriangle()V",
        "Lcom/badlogic/gdx/math/Intersector;->intersectRayTriangle()Z",
        "Lcom/badlogic/gdx/math/Intersector;->intersectLinePlane()F",
        "Lcom/badlogic/gdx/math/Intersector;->splitEdge()V",
        "Lcom/badlogic/gdx/math/Intersector;->overlapRectangles()Z",
        "Lcom/badlogic/gdx/math/Intersector;->intersectRayPlane()Z",
        "Lcom/badlogic/gdx/math/Intersector;->det()F",
        "Lcom/badlogic/gdx/math/Intersector;->overlapConvexPolygons()Z",
        "Lcom/badlogic/gdx/math/Intersector;->intersectSegments()Z"
    ],
    "Lcom/badlogic/gdx/math/Rectangle;": [
        "Lcom/badlogic/gdx/math/Rectangle;->overlaps()Z",
        "Lcom/badlogic/gdx/math/Rectangle;->getHeight()F",
        "Lcom/badlogic/gdx/math/Rectangle;->set()V",
        "Lcom/badlogic/gdx/math/Rectangle;->getY()F",
        "Lcom/badlogic/gdx/math/Rectangle;->getWidth()F",
        "Lcom/badlogic/gdx/math/Rectangle;->contains()Z",
        "Lcom/badlogic/gdx/math/Rectangle;->getX()F"
    ],
    "Lcom/badlogic/gdx/math/Intersector$SplitTriangle;": [
        "Lcom/badlogic/gdx/math/Intersector$SplitTriangle;->add()V",
        "Lcom/badlogic/gdx/math/Intersector$SplitTriangle;->reset()V",
        "Lcom/badlogic/gdx/math/Intersector$SplitTriangle;->getSide()Z",
        "Lcom/badlogic/gdx/math/Intersector$SplitTriangle;->setSide()V"
    ],
    "Lcom/badlogic/gdx/math/Interpolation;": [
        "Lcom/badlogic/gdx/math/Interpolation;->apply()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Fixture;": [
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetRestitution()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetFriction()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetFriction()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getFilterData()Lcom/badlogic/gdx/physics/box2d/Filter;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getShape()Lcom/badlogic/gdx/physics/box2d/Shape;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetFilterData()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetRestitution()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniIsSensor()Z",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetSensor()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetDensity()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniRefilter()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetFilterData()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->reset()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->setUserData()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetShape()J",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniTestPoint()Z",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getType()Lcom/badlogic/gdx/physics/box2d/Shape$Type;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetDensity()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Shape;": [
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetRadius()F",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetChildCount()I",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->dispose()V",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniDispose()V",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniSetRadius()V",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetType()I"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactListener;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->postSolve()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->beginContact()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->endContact()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->preSolve()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap;": [
        "Lcom/badlogic/gdx/utils/LongMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->push()V",
        "Lcom/badlogic/gdx/utils/LongMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/LongMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/LongMap;->clear()V",
        "Lcom/badlogic/gdx/utils/LongMap;->values()Lcom/badlogic/gdx/utils/LongMap$Values;",
        "Lcom/badlogic/gdx/utils/LongMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/LongMap;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/LongMap;->entries()Lcom/badlogic/gdx/utils/LongMap$Entries;",
        "Lcom/badlogic/gdx/utils/LongMap;->resize()V",
        "Lcom/badlogic/gdx/utils/LongMap;->containsKey()Z",
        "Lcom/badlogic/gdx/utils/LongMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/LongMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/LongMap;->removeStash()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactFilter;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactFilter;->shouldCollide()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/QueryCallback;": [
        "Lcom/badlogic/gdx/physics/box2d/QueryCallback;->reportFixture()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/RayCastCallback;": [
        "Lcom/badlogic/gdx/physics/box2d/RayCastCallback;->reportRayFixture()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;": [
        "Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;->getValue()I"
    ],
    "Lcom/badlogic/gdx/utils/Pool;": [
        "Lcom/badlogic/gdx/utils/Pool;->newObject()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Pool;->obtain()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Pool;->free()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Contact;": [
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetChildIndexA()I",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->getFixtureA()Lcom/badlogic/gdx/physics/box2d/Fixture;",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFixtureB()J",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetChildIndexB()I",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetRestitution()F",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniResetFriction()V",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->getFixtureB()Lcom/badlogic/gdx/physics/box2d/Fixture;",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFixtureA()J",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniIsEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniSetFriction()V",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniSetEnabled()V",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniIsTouching()Z",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniSetRestitution()V",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFriction()F",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetWorldManifold()I",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->getWorldManifold()Lcom/badlogic/gdx/physics/box2d/WorldManifold;",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniResetRestitution()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ChainShape;": [
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->setPrevVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->jniSetNextVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->jniCreateChain()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->jniCreateLoop()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->setNextVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->newChainShape()J",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->jniGetVertexCount()I",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->jniGetVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->jniSetPrevVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->getVertexCount()I",
        "Lcom/badlogic/gdx/physics/box2d/ChainShape;->getVertex()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/WorldManifold;": [
        "Lcom/badlogic/gdx/physics/box2d/WorldManifold;->getPoints()[Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/WorldManifold;->getNumberOfContactPoints()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;": [
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->setColor()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->checkFlush()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->line()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->filledRect()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->point()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->checkDirty()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->end()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->filledCircle()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->circle()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->setProjectionMatrix()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer;->begin()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Joint;": [
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getBodyA()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetReactionForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetBodyA()J",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetAnchorA()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetAnchorB()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniIsActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetReactionTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getAnchorB()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getAnchorA()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getBodyB()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getType()Lcom/badlogic/gdx/physics/box2d/JointDef$JointType;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetBodyB()J"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->getGroundAnchorA()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetGroundAnchorB()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetGroundAnchorA()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->getGroundAnchorB()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetLength2()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetLength1()F"
    ],
    "Lcom/badlogic/gdx/graphics/GL10;": [
        "Lcom/badlogic/gdx/graphics/GL10;->glLoadMatrixf()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glPointSize()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glEnable()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glClientActiveTexture()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glTexCoordPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDepthMask()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDrawElements()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glNormalPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glLoadIdentity()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDisableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glVertexPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDisable()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glClear()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glBlendFunc()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glMaterialfv()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glEnableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDrawArrays()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glColorPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glMatrixMode()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Manifold;": [
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetPoint()I",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetPointCount()I",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Manifold;->jniGetLocalNormal()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;->jniGetCount()I",
        "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;->jniGetNormalImpulses()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactImpulse;->jniGetTangentImpulses()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetMaxMotorTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetMotorTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetJointAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetMotorSpeed()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetDampingRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetLength()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetFrequency()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetLength()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetFrequency()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;->jniSetRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;->jniGetRatio()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/RopeJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/RopeJoint;->jniGetMaxLength()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniGetMaxForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniSetMaxForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniGetMaxTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniSetMaxTorque()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetMaxMotorTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniSetMaxMotorTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetSpringDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniSetSpringDampingRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniSetSpringFrequencyHz()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetJointTranslation()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetSpringFrequencyHz()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/WheelJoint;->jniGetMotorTorque()F"
    ],
    "Lcom/badlogic/gdx/utils/BufferUtils;": [
        "Lcom/badlogic/gdx/utils/BufferUtils;->positionInBytes()I",
        "Lcom/badlogic/gdx/utils/BufferUtils;->bytesToElements()I",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newIntBuffer()Ljava/nio/IntBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newFloatBuffer()Ljava/nio/FloatBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->copy()V",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newUnsafeByteBuffer()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->disposeUnsafeByteBuffer()V",
        "Lcom/badlogic/gdx/utils/BufferUtils;->copyJni()V",
        "Lcom/badlogic/gdx/utils/BufferUtils;->getBufferAddress()J",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newDisposableByteBuffer()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->freeMemory()V",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newByteBuffer()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->elementsToBytes()I"
    ],
    "Lcom/badlogic/gdx/files/FileHandle;": [
        "Lcom/badlogic/gdx/files/FileHandle;->exists()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->list()[Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->$SWITCH_TABLE$com$badlogic$gdx2$Files$FileType()[I",
        "Lcom/badlogic/gdx/files/FileHandle;->isDirectory()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->emptyDirectory()V",
        "Lcom/badlogic/gdx/files/FileHandle;->readString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/files/FileHandle;->mkdirs()V",
        "Lcom/badlogic/gdx/files/FileHandle;->sibling()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->length()J",
        "Lcom/badlogic/gdx/files/FileHandle;->parent()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->deleteDirectory()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->file()Ljava/io/File;",
        "Lcom/badlogic/gdx/files/FileHandle;->copyFile()V",
        "Lcom/badlogic/gdx/files/FileHandle;->readBytes()[B",
        "Lcom/badlogic/gdx/files/FileHandle;->write()Ljava/io/OutputStream;",
        "Lcom/badlogic/gdx/files/FileHandle;->writeString()V",
        "Lcom/badlogic/gdx/files/FileHandle;->write()V",
        "Lcom/badlogic/gdx/files/FileHandle;->writeBytes()V",
        "Lcom/badlogic/gdx/files/FileHandle;->read()Ljava/io/InputStream;",
        "Lcom/badlogic/gdx/files/FileHandle;->name()Ljava/lang/String;",
        "Lcom/badlogic/gdx/files/FileHandle;->writer()Ljava/io/Writer;",
        "Lcom/badlogic/gdx/files/FileHandle;->copyTo()V",
        "Lcom/badlogic/gdx/files/FileHandle;->nameWithoutExtension()Ljava/lang/String;",
        "Lcom/badlogic/gdx/files/FileHandle;->path()Ljava/lang/String;",
        "Lcom/badlogic/gdx/files/FileHandle;->copyDirectory()V",
        "Lcom/badlogic/gdx/files/FileHandle;->child()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->delete()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->extension()Ljava/lang/String;",
        "Lcom/badlogic/gdx/files/FileHandle;->lastModified()J"
    ],
    "Lcom/badlogic/gdx/graphics/Texture;": [
        "Lcom/badlogic/gdx/graphics/Texture;->getTextureData()Lcom/badlogic/gdx/graphics/TextureData;",
        "Lcom/badlogic/gdx/graphics/Texture;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/Texture;->uploadImageData()V",
        "Lcom/badlogic/gdx/graphics/Texture;->setAssetManager()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getVWrap()Lcom/badlogic/gdx/graphics/Texture$TextureWrap;",
        "Lcom/badlogic/gdx/graphics/Texture;->getTextureObjectHandle()I",
        "Lcom/badlogic/gdx/graphics/Texture;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/Texture;->invalidateAllTextures()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getUWrap()Lcom/badlogic/gdx/graphics/Texture$TextureWrap;",
        "Lcom/badlogic/gdx/graphics/Texture;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/Texture;->addManagedTexture()V",
        "Lcom/badlogic/gdx/graphics/Texture;->load()V",
        "Lcom/badlogic/gdx/graphics/Texture;->dispose()V",
        "Lcom/badlogic/gdx/graphics/Texture;->createGLHandle()I",
        "Lcom/badlogic/gdx/graphics/Texture;->draw()V",
        "Lcom/badlogic/gdx/graphics/Texture;->setFilter()V",
        "Lcom/badlogic/gdx/graphics/Texture;->create()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getMinFilter()Lcom/badlogic/gdx/graphics/Texture$TextureFilter;",
        "Lcom/badlogic/gdx/graphics/Texture;->reload()V",
        "Lcom/badlogic/gdx/graphics/Texture;->bind()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getMagFilter()Lcom/badlogic/gdx/graphics/Texture$TextureFilter;",
        "Lcom/badlogic/gdx/graphics/Texture;->clearAllTextures()V",
        "Lcom/badlogic/gdx/graphics/Texture;->setWrap()V"
    ],
    "Lcom/badlogic/gdx/graphics/TextureData;": [
        "Lcom/badlogic/gdx/graphics/TextureData;->prepare()V",
        "Lcom/badlogic/gdx/graphics/TextureData;->getType()Lcom/badlogic/gdx/graphics/TextureData$TextureDataType;",
        "Lcom/badlogic/gdx/graphics/TextureData;->isPrepared()Z",
        "Lcom/badlogic/gdx/graphics/TextureData;->consumePixmap()Lcom/badlogic/gdx/graphics/Pixmap;",
        "Lcom/badlogic/gdx/graphics/TextureData;->getFormat()Lcom/badlogic/gdx/graphics/Pixmap$Format;",
        "Lcom/badlogic/gdx/graphics/TextureData;->isManaged()Z",
        "Lcom/badlogic/gdx/graphics/TextureData;->useMipMaps()Z",
        "Lcom/badlogic/gdx/graphics/TextureData;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/TextureData;->disposePixmap()Z",
        "Lcom/badlogic/gdx/graphics/TextureData;->consumeCompressedData()V",
        "Lcom/badlogic/gdx/graphics/TextureData;->getHeight()I"
    ],
    "Lcom/badlogic/gdx/assets/AssetManager;": [
        "Lcom/badlogic/gdx/assets/AssetManager;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/assets/AssetManager;->isLoaded()Z",
        "Lcom/badlogic/gdx/assets/AssetManager;->incrementRefCountedDependencies()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->nextTask()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->handleTaskError()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->setReferenceCount()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->injectDependency()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->clear()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->getAssetFileName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/assets/AssetManager;->setLoader()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->addTask()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->getReferenceCount()I",
        "Lcom/badlogic/gdx/assets/AssetManager;->updateTask()Z",
        "Lcom/badlogic/gdx/assets/AssetManager;->unload()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->update()Z",
        "Lcom/badlogic/gdx/assets/AssetManager;->load()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->disposeDependencies()V",
        "Lcom/badlogic/gdx/assets/AssetManager;->finishLoading()V"
    ],
    "Lcom/badlogic/gdx/graphics/Pixmap;": [
        "Lcom/badlogic/gdx/graphics/Pixmap;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->fill()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->setBlending()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getGLType()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getPixels()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/Pixmap;->drawPixmap()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getGLFormat()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getFormat()Lcom/badlogic/gdx/graphics/Pixmap$Format;",
        "Lcom/badlogic/gdx/graphics/Pixmap;->drawCircle()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->dispose()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->fillCircle()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->setColor()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getGLInternalFormat()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getBlending()Lcom/badlogic/gdx/graphics/Pixmap$Blending;",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getPixel()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/MipMapGenerator;": [
        "Lcom/badlogic/gdx/graphics/glutils/MipMapGenerator;->generateMipMapCPU()V",
        "Lcom/badlogic/gdx/graphics/glutils/MipMapGenerator;->generateMipMapDesktop()V",
        "Lcom/badlogic/gdx/graphics/glutils/MipMapGenerator;->generateMipMapGLES20()V",
        "Lcom/badlogic/gdx/graphics/glutils/MipMapGenerator;->generateMipMap()V"
    ],
    "Lcom/badlogic/gdx/graphics/Texture$TextureFilter;": [
        "Lcom/badlogic/gdx/graphics/Texture$TextureFilter;->isMipMap()Z",
        "Lcom/badlogic/gdx/graphics/Texture$TextureFilter;->getGLEnum()I"
    ],
    "Lcom/badlogic/gdx/graphics/Texture$TextureWrap;": [
        "Lcom/badlogic/gdx/graphics/Texture$TextureWrap;->getGLEnum()I"
    ],
    "Lcom/badlogic/gdx/graphics/Pixmap$Format;": [
        "Lcom/badlogic/gdx/graphics/Pixmap$Format;->fromGdx2DPixmapFormat()Lcom/badlogic/gdx/graphics/Pixmap$Format;",
        "Lcom/badlogic/gdx/graphics/Pixmap$Format;->toGdx2DPixmapFormat()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;": [
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->setPixel()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->fillRect()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getGLInternalFormat()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawRect()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getFormat()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->setBlend()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->load()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getPixel()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->fillCircle()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawCircle()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawPixmap()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getGLType()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getPixels()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->clear()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->newPixmap()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getGLFormat()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getFailureReason()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->free()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawLine()V"
    ],
    "Lcom/badlogic/gdx/graphics/Color;": [
        "Lcom/badlogic/gdx/graphics/Color;->clamp()V",
        "Lcom/badlogic/gdx/graphics/Color;->set()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/Color;->mul()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/Color;->toIntBits()I",
        "Lcom/badlogic/gdx/graphics/Color;->set()V",
        "Lcom/badlogic/gdx/graphics/Color;->toFloatBits()F",
        "Lcom/badlogic/gdx/graphics/Color;->rgba8888()I"
    ],
    "Lcom/badlogic/gdx/graphics/TextureDict;": [
        "Lcom/badlogic/gdx/graphics/TextureDict;->loadTexture()Lcom/badlogic/gdx/graphics/TextureRef;",
        "Lcom/badlogic/gdx/graphics/TextureDict;->removeTexture()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap;": [
        "Lcom/badlogic/gdx/utils/ObjectMap;->clear()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->findKey()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->resize()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->keys()Lcom/badlogic/gdx/utils/ObjectMap$Keys;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->put_internal()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/ObjectMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/ObjectMap;->entries()Lcom/badlogic/gdx/utils/ObjectMap$Entries;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->containsKey()Z",
        "Lcom/badlogic/gdx/utils/ObjectMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/ObjectMap;->push()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->values()Lcom/badlogic/gdx/utils/ObjectMap$Values;"
    ],
    "Lcom/badlogic/gdx/graphics/TextureRef;": [
        "Lcom/badlogic/gdx/graphics/TextureRef;->bind()V",
        "Lcom/badlogic/gdx/graphics/TextureRef;->dispose()V",
        "Lcom/badlogic/gdx/graphics/TextureRef;->addRef()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap$Values;": [
        "Lcom/badlogic/gdx/utils/ObjectMap$Values;->reset()V",
        "Lcom/badlogic/gdx/utils/ObjectMap$Values;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/graphics/PixmapIO$CIM;": [
        "Lcom/badlogic/gdx/graphics/PixmapIO$CIM;->read()Lcom/badlogic/gdx/graphics/Pixmap;",
        "Lcom/badlogic/gdx/graphics/PixmapIO$CIM;->write()V"
    ],
    "Lcom/badlogic/gdx/graphics/PixmapIO$PNG;": [
        "Lcom/badlogic/gdx/graphics/PixmapIO$PNG;->write()[B"
    ],
    "Lcom/badlogic/gdx/graphics/Camera;": [
        "Lcom/badlogic/gdx/graphics/Camera;->getPickRay()Lcom/badlogic/gdx/math/collision/Ray;",
        "Lcom/badlogic/gdx/graphics/Camera;->unproject()V",
        "Lcom/badlogic/gdx/graphics/Camera;->project()V",
        "Lcom/badlogic/gdx/graphics/Camera;->update()V"
    ],
    "Lcom/badlogic/gdx/graphics/VertexAttributes;": [
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->size()I",
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->calculateOffsets()I",
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->get()Lcom/badlogic/gdx/graphics/VertexAttribute;",
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->checkValidity()V"
    ],
    "Lcom/badlogic/gdx/graphics/VertexAttribute;": [
        "Lcom/badlogic/gdx/graphics/VertexAttribute;->equals()Z"
    ],
    "Lcom/badlogic/gdx/graphics/PerspectiveCamera;": [
        "Lcom/badlogic/gdx/graphics/PerspectiveCamera;->update()V"
    ],
    "Lcom/badlogic/gdx/math/Frustum;": [
        "Lcom/badlogic/gdx/math/Frustum;->update()V"
    ],
    "Lcom/badlogic/gdx/graphics/Mesh;": [
        "Lcom/badlogic/gdx/graphics/Mesh;->getNumIndices()I",
        "Lcom/badlogic/gdx/graphics/Mesh;->bind()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->render()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertexAttributes()Lcom/badlogic/gdx/graphics/VertexAttributes;",
        "Lcom/badlogic/gdx/graphics/Mesh;->invalidateAllMeshes()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertexAttribute()Lcom/badlogic/gdx/graphics/VertexAttribute;",
        "Lcom/badlogic/gdx/graphics/Mesh;->calculateBoundingBox()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertices()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->addManagedMesh()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->setVertices()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->clearAllMeshes()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->setIndices()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->unbind()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVerticesBuffer()Ljava/nio/FloatBuffer;",
        "Lcom/badlogic/gdx/graphics/Mesh;->getIndicesBuffer()Ljava/nio/ShortBuffer;",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertexSize()I",
        "Lcom/badlogic/gdx/graphics/Mesh;->dispose()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->setAutoBind()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getNumVertices()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;": [
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;->invalidate()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/IndexData;": [
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->unbind()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->getNumIndices()I",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->getNumMaxIndices()I",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->setIndices()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->getBuffer()Ljava/nio/ShortBuffer;",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->invalidate()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->bind()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/VertexData;": [
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->bind()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getBuffer()Ljava/nio/FloatBuffer;",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getNumMaxVertices()I",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getNumVertices()I",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->unbind()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->setVertices()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getAttributes()Lcom/badlogic/gdx/graphics/VertexAttributes;"
    ],
    "Lcom/badlogic/gdx/graphics/GL11;": [
        "Lcom/badlogic/gdx/graphics/GL11;->glDrawElements()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glTexCoordPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDeleteBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glEnableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDisableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glBindBuffer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glGenBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glBufferSubData()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glVertexPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glClientActiveTexture()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glBufferData()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDrawArrays()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glColorPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glNormalPointer()V"
    ],
    "Lcom/badlogic/gdx/graphics/GL20;": [
        "Lcom/badlogic/gdx/graphics/GL20;->glBufferData()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glVertexAttrib4f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDepthMask()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform4fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteProgram()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glViewport()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenRenderbuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindRenderbuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUseProgram()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform2f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetShaderiv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glAttachShader()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform3i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform4f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glFramebufferRenderbuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBufferSubData()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glRenderbufferStorage()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glFramebufferTexture2D()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDisableVertexAttribArray()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDrawArrays()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteShader()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetAttribLocation()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform3fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteRenderbuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindFramebuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenerateMipmap()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDrawElements()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindTexture()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetProgramInfoLog()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetProgramiv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetActiveAttrib()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform2fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform1f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniformMatrix4fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glLinkProgram()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform1i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform4i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glShaderSource()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetActiveUniform()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform1fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCompileShader()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniformMatrix3fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform2i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindBuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCreateShader()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteFramebuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCreateProgram()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetShaderInfoLog()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GL20;->glEnableVertexAttribArray()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform3f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glVertexAttribPointer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenFramebuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCheckFramebufferStatus()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetUniformLocation()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/Sprite;": [
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getVertices()[F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->translateY()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getX()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setOrigin()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getRotation()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setBounds()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getOriginY()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->set()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setSize()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getWidth()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setRegion()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getOriginX()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->translateX()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->rotate90()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getY()F"
    ],
    "Lcom/badlogic/gdx/graphics/PixmapHelper$PixmapChange;": [
        "Lcom/badlogic/gdx/graphics/PixmapHelper$PixmapChange;->set()V"
    ],
    "Lcom/badlogic/gdx/graphics/PixmapHelper;": [
        "Lcom/badlogic/gdx/graphics/PixmapHelper;->dispose()V",
        "Lcom/badlogic/gdx/graphics/PixmapHelper;->getPixmapForRadius()Lcom/badlogic/gdx/graphics/Pixmap;",
        "Lcom/badlogic/gdx/graphics/PixmapHelper;->getPixel()I"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readFully()V",
        "Ljava/io/DataInputStream;->readFloat()F",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->readChar()C",
        "Ljava/io/DataInputStream;->skipBytes()I",
        "Ljava/io/DataInputStream;->read()I",
        "Ljava/io/DataInputStream;->readUnsignedByte()I",
        "Ljava/io/DataInputStream;->readBoolean()Z",
        "Ljava/io/DataInputStream;->readShort()S",
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readByte()B",
        "Ljava/io/DataInputStream;->readLine()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Material;": [
        "Lcom/badlogic/gdx/graphics/g3d/Material;->setTmpArray()V",
        "Lcom/badlogic/gdx/graphics/g3d/Material;->set()V"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->writeShort()V",
        "Ljava/io/DataOutputStream;->writeChar()V",
        "Ljava/io/DataOutputStream;->writeBoolean()V",
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->writeUTF()V",
        "Ljava/io/DataOutputStream;->writeFloat()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;": [
        "Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;->values()[Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;",
        "Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Animation;": [
        "Lcom/badlogic/gdx/graphics/g3d/Animation;->getNumFrames()I",
        "Lcom/badlogic/gdx/graphics/g3d/Animation;->getLength()F"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Animator;": [
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->setAnimation()V",
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->$SWITCH_TABLE$com$badlogic$gdx$graphics$g3d$Animator$WrapMode()[I",
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->setInterpolationFrames()V",
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->interpolate()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;": [
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;->addRef()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;->removeRef()I"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;": [
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->getInterpolatedKeyframe()Lcom/badlogic/gdx/graphics/g3d/keyframed/Keyframe;",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->setAnimation()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->hasAnimation()Z",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->update()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->getCurrentWrapMode()Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->setNumTaggedJoints()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->interpolateJoints()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->setKeyframeDimensions()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;->update()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;->setAnimation()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;->getSkeleton()Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->setSkeleton()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->getIndices()[S",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->getMesh()Lcom/badlogic/gdx/graphics/Mesh;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->getVertices()[F"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel;": [
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel;->getAnimation()Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel;->clone()[F",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel;->clone()[S"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->normalize()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->dot()F",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->set()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->invert()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->computeW()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->slerp()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->rotate()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->multiply()V"
    ],
    "Lcom/badlogic/gdx/utils/IntMap;": [
        "Lcom/badlogic/gdx/utils/IntMap;->clear()V",
        "Lcom/badlogic/gdx/utils/IntMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->containsKey()Z",
        "Lcom/badlogic/gdx/utils/IntMap;->push()V",
        "Lcom/badlogic/gdx/utils/IntMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/IntMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/IntMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/IntMap;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/IntMap;->values()Lcom/badlogic/gdx/utils/IntMap$Values;",
        "Lcom/badlogic/gdx/utils/IntMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->entries()Lcom/badlogic/gdx/utils/IntMap$Entries;",
        "Lcom/badlogic/gdx/utils/IntMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/IntMap;->resize()V",
        "Lcom/badlogic/gdx/utils/IntMap;->removeStashIndex()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/decals/GroupPlug;": [
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupPlug;->afterGroup()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupPlug;->beforeGroup()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;": [
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->getMaterial()Lcom/badlogic/gdx/graphics/g3d/decals/DecalMaterial;",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->setBlending()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->setTextureRegion()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->updateUVs()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->update()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->newDecal()Lcom/badlogic/gdx/graphics/g3d/decals/Decal;",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->transformVertices()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->setRotation()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/Decal;->resetVertices()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/decals/DecalMaterial;": [
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalMaterial;->isOpaque()Z",
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalMaterial;->equals()Z",
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalMaterial;->set()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionWidth()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setV()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->flip()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->split()[[Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setU()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionX()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setV2()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getV2()F",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getU()F",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setU2()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionY()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setRegion()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getV()F",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionHeight()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getU2()F"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/decals/DecalBatch;": [
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalBatch;->render()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalBatch;->setGroupStrategy()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalBatch;->clear()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/DecalBatch;->flush()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;": [
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;->beforeGroups()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;->decideGroup()I",
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;->afterGroup()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;->afterGroups()V",
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;->getGroupShader()Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;",
        "Lcom/badlogic/gdx/graphics/g3d/decals/GroupStrategy;->beforeGroup()V"
    ],
    "Lcom/badlogic/gdx/utils/SortedIntList;": [
        "Lcom/badlogic/gdx/utils/SortedIntList;->insert()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/SortedIntList;->clear()V",
        "Lcom/badlogic/gdx/utils/SortedIntList;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/SortedIntList;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/Sort;": [
        "Lcom/badlogic/gdx/utils/Sort;->instance()Lcom/badlogic/gdx/utils/Sort;",
        "Lcom/badlogic/gdx/utils/Sort;->sort()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/decals/CameraGroupStrategy;": [
        "Lcom/badlogic/gdx/graphics/g3d/decals/CameraGroupStrategy;->createDefaultShader()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;": [
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->addManagedShader()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->invalidateAllShaderPrograms()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->disableVertexAttribute()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->compileShaders()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->ensureBufferCapacity()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->isCompiled()Z",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setUniformMatrix()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->fetchUniforms()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->linkProgram()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->loadShader()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->fetchUniformLocation()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->getLog()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->fetchAttributeLocation()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setUniformf()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->fetchAttributes()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->begin()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->checkManaged()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setUniformi()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->enableVertexAttribute()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->clearAllShaderPrograms()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setVertexAttribute()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->end()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;->loadObjFromString()Lcom/badlogic/gdx/graphics/Mesh;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;->getIndex()I",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;->loadObj()Lcom/badlogic/gdx/graphics/Mesh;"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->read()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->getIndices()[S",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calcNor()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateVertices()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->createVertexArray()[F",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateVerticesN()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->write()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateNormalsBind()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateVerticesJni()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Jni;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Jni;->calculateVertices()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animation;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animation;->interpolate()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;->write()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;->read()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->parseInt()I",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->tokenize()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->buildFrameSkeleton()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->parseFloat()F"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5AnimationInfo;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5AnimationInfo;->reset()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/EmptyNinePatch;": [
        "Lcom/badlogic/gdx/graphics/g2d/EmptyNinePatch;->getInstance()Lcom/badlogic/gdx/graphics/g2d/EmptyNinePatch;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;": [
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->setRegion()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->setSize()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->translateX()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->set()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->translateY()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->getVertices()[F",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSprite;->setOrigin()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/PolygonRegion;": [
        "Lcom/badlogic/gdx/graphics/g2d/PolygonRegion;->calculateAtlasTexCoords()[F",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonRegion;->getTextureCoords()[F",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonRegion;->getLocalVertices()[F",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonRegion;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;": [
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->switchTexture()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->createDefaultShader()Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->setupMatrices()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->flush()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->renderMesh()V",
        "Lcom/badlogic/gdx/graphics/g2d/PolygonSpriteBatch;->isBlendingEnabled()Z"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool;->newObject()Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool$PooledEffect;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool;->obtain()Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool$PooledEffect;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool$PooledEffect;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffectPool$PooledEffect;->reset()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addWrappedText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setMultiLineText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addGlyph()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setUseIntegerPositions()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->getFont()Lcom/badlogic/gdx/graphics/g2d/BitmapFont;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addToCache()F",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->getBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->require()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addMultiLineText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->clear()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setWrappedText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setPosition()V"
    ],
    "Lcom/badlogic/gdx/utils/FloatArray;": [
        "Lcom/badlogic/gdx/utils/FloatArray;->get()F",
        "Lcom/badlogic/gdx/utils/FloatArray;->addAll()V",
        "Lcom/badlogic/gdx/utils/FloatArray;->removeIndex()F",
        "Lcom/badlogic/gdx/utils/FloatArray;->sort()V",
        "Lcom/badlogic/gdx/utils/FloatArray;->clear()V",
        "Lcom/badlogic/gdx/utils/FloatArray;->add()V",
        "Lcom/badlogic/gdx/utils/FloatArray;->shrink()V",
        "Lcom/badlogic/gdx/utils/FloatArray;->resize()[F"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData;->getImagePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData;->getGlyph()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;->getKerning()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/NinePatch;": [
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->getTopHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->set()V",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->setPadding()V",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->add()I",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->getRightWidth()F",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->getTotalHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->getBottomHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->getLeftWidth()F",
        "Lcom/badlogic/gdx/graphics/g2d/NinePatch;->getTotalWidth()F"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/PixmapPacker;": [
        "Lcom/badlogic/gdx/graphics/g2d/PixmapPacker;->getRect()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/badlogic/gdx/graphics/g2d/PixmapPacker;->pack()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/badlogic/gdx/graphics/g2d/PixmapPacker;->insert()Lcom/badlogic/gdx/graphics/g2d/PixmapPacker$Node;",
        "Lcom/badlogic/gdx/graphics/g2d/PixmapPacker;->newPage()V"
    ],
    "Lcom/badlogic/gdx/utils/OrderedMap;": [
        "Lcom/badlogic/gdx/utils/OrderedMap;->entries()Lcom/badlogic/gdx/utils/ObjectMap$Entries;",
        "Lcom/badlogic/gdx/utils/OrderedMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/OrderedMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/OrderedMap;->containsKey()Z",
        "Lcom/badlogic/gdx/utils/OrderedMap;->keys()Lcom/badlogic/gdx/utils/ObjectMap$Keys;",
        "Lcom/badlogic/gdx/utils/OrderedMap;->orderedKeys()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/utils/OrderedMap;->get()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap$Keys;": [
        "Lcom/badlogic/gdx/utils/ObjectMap$Keys;->toArray()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/utils/ObjectMap$Keys;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/ObjectMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->addRegion()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->newSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->getRegions()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->findRegion()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->createSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->findRegions()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;->getRegionHeight()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;->getTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;->getRegionWidth()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;->flip()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/Animation;": [
        "Lcom/badlogic/gdx/graphics/g2d/Animation;->getKeyFrame()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/Animation;->getKeyFrameIndex()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;": [
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->end()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->getTransformMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->add()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->begin()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->setTransformMatrix()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->clear()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->getProjectionMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->endCache()I",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->setProjectionMatrix()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->createDefaultShader()Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->beginCache()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->draw()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->restart()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->start()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->$SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape()[I",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setMaxParticleCount()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setMinParticleCount()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->flipY()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->newParticle()Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->activateParticle()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->readInt()I",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setContinuous()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->getImagePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->isComplete()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->updateParticle()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->addParticle()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->reset()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setSprite()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->update()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->getSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->addParticles()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->readString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->allowCompletion()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->$SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide()[I",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setFlip()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setPosition()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->readBoolean()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setImagePath()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->load()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;->loadEmitterImages()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;->loadEmitters()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;->loadTexture()Lcom/badlogic/gdx/graphics/Texture;"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->flush()V",
        "Ljava/io/Writer;->write()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnEllipseSide;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnEllipseSide;->values()[Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnEllipseSide;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnEllipseSide;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShape;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShape;->values()[Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShape;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShape;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->setLow()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->setAlwaysActive()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->getLowMin()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->newLowValue()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->getLowMax()F"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->newLowValue()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->getHighMin()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->newHighValue()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->getLowMax()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->setAlwaysActive()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->getHighMax()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->setLow()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->getLowMin()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->getScale()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->setHigh()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->isRelative()Z"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;->getColor()[F"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;->setAlwaysActive()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;->save()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setTexture()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setRotation()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setBounds()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setOrigin()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->flip()V"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->get()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->getLength()I",
        "Ljava/lang/reflect/Array;->set()V"
    ],
    "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;": [
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitMethodBody()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitJniSection()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitJniCleanupCode()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->generate()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitMethodSignature()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->getFullyQualifiedClassName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->findCMethod()Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethod;",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->generateHFile()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitLineMarker()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->processDirectory()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitJavaMethod()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->emitJniSetupCode()V",
        "Lcom/badlogic/gdx/jnigen/NativeCodeGenerator;->generateCppFile()V"
    ],
    "Lcom/badlogic/gdx/jnigen/BuildTarget;": [
        "Lcom/badlogic/gdx/jnigen/BuildTarget;->newDefaultTarget()Lcom/badlogic/gdx/jnigen/BuildTarget;"
    ],
    "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;": [
        "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;->getSharedLibFilename()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;->getJniPlatform()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;->generateBuildTargetTemplate()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;->getLibsDirectory()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;->copyJniHeaders()V",
        "Lcom/badlogic/gdx/jnigen/AntScriptGenerator;->generate()V"
    ],
    "Lcom/badlogic/gdx/jnigen/BuildExecutor;": [
        "Lcom/badlogic/gdx/jnigen/BuildExecutor;->executeAnt()V",
        "Lcom/badlogic/gdx/jnigen/BuildExecutor;->startProcess()V"
    ],
    "Lcom/badlogic/gdx/utils/SharedLibraryLoader;": [
        "Lcom/badlogic/gdx/utils/SharedLibraryLoader;->load()V",
        "Lcom/badlogic/gdx/utils/SharedLibraryLoader;->mapLibraryName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/SharedLibraryLoader;->extractFile()Ljava/io/File;",
        "Lcom/badlogic/gdx/utils/SharedLibraryLoader;->readFile()Ljava/io/InputStream;",
        "Lcom/badlogic/gdx/utils/SharedLibraryLoader;->crc()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;": [
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->scaleForPixelHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getGlyphBox()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->disposeFont()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getCodepointHMetrics()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->findGlyphIndex()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getCodePointShape()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getShapeVertex()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getCodepointKernAdvance()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getGlyphKernAdvance()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->makeGlyphBitmap()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getGlyphBitmapBox()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getCodePointBox()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getGlyphHMetrics()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->freeShape()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getFontVMetrics()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->makeCodepointBitmap()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getGlyphShape()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueType;->getCodepointBitmapBox()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;": [
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;->generateFontTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;->generateHieroFontFile()Ljava/io/InputStream;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;->createBitmapFont()Lcom/badlogic/gdx/graphics/g2d/BitmapFont;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;->generateGlyphs()[Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont$Bitmap;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;->generateFontScales()[F",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory;->generateKernings()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont$Bitmap;": [
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont$Bitmap;->dispose()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;": [
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->getFontVMetrics()Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont$FontVMetrics;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->findGlyphIndex()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->makeGlyphBitmap()Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont$Bitmap;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->getCodepointHMetrics()Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont$HMetrics;",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->getCodepointKernAdvance()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/StbTrueTypeFont;->scaleForPixelHeight()F"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory$PTNode;": [
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory$PTNode;->insertImage()[I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory$PTNode;->getTextureWidth()I",
        "Lcom/badlogic/gdx/graphics/g2d/stbtt/TrueTypeFontFactory$PTNode;->getTextureHeight()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;": [
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->removeExtension()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->removePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->getRelativeFileHandle()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;"
    ],
    "Lcom/badlogic/gdx/utils/IntMap$Values;": [
        "Lcom/badlogic/gdx/utils/IntMap$Values;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/IntMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;": [
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->render()V",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->addBlock()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getMapWidthUnits()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getLayerHeightInBlocks()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getLayerWidthInBlocks()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getProjectionMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getMapHeightUnits()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->createFromCSV()Lcom/badlogic/gdx/utils/IntArray;"
    ],
    "Lcom/badlogic/gdx/utils/IntArray;": [
        "Lcom/badlogic/gdx/utils/IntArray;->shrink()V",
        "Lcom/badlogic/gdx/utils/IntArray;->get()I",
        "Lcom/badlogic/gdx/utils/IntArray;->add()V",
        "Lcom/badlogic/gdx/utils/IntArray;->clear()V",
        "Lcom/badlogic/gdx/utils/IntArray;->removeIndex()I",
        "Lcom/badlogic/gdx/utils/IntArray;->addAll()V",
        "Lcom/badlogic/gdx/utils/IntArray;->pop()I",
        "Lcom/badlogic/gdx/utils/IntArray;->resize()[I",
        "Lcom/badlogic/gdx/utils/IntArray;->insert()V",
        "Lcom/badlogic/gdx/utils/IntArray;->contains()Z"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas;": [
        "Lcom/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas;->split()[[Lcom/badlogic/gdx/graphics/g2d/TextureRegion;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/tiled/TiledLoader;": [
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TiledLoader;->createMap()Lcom/badlogic/gdx/graphics/g2d/tiled/TiledMap;"
    ],
    "Lcom/badlogic/gdx/utils/XmlReader;": [
        "Lcom/badlogic/gdx/utils/XmlReader;->close()V",
        "Lcom/badlogic/gdx/utils/XmlReader;->attribute()V",
        "Lcom/badlogic/gdx/utils/XmlReader;->text()V",
        "Lcom/badlogic/gdx/utils/XmlReader;->entity()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/XmlReader;->parse()Lcom/badlogic/gdx/utils/XmlReader$Element;",
        "Lcom/badlogic/gdx/utils/XmlReader;->open()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ETC1;": [
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->encodeImagePKM()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->getWidthPKM()I",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->getPixelSize()I",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->encodeImage()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->decodeImage()V",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->getHeightPKM()I",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1;->decodeImage()Lcom/badlogic/gdx/graphics/Pixmap;"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ETC1$ETC1Data;": [
        "Lcom/badlogic/gdx/graphics/glutils/ETC1$ETC1Data;->hasPKMHeader()Z",
        "Lcom/badlogic/gdx/graphics/glutils/ETC1$ETC1Data;->dispose()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ETC1TextureData;": [
        "Lcom/badlogic/gdx/graphics/glutils/ETC1TextureData;->useMipMaps()Z"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer20;": [
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer20;->createVertexShader()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer20;->createFragmentShader()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer20;->buildVertexAttributes()[Lcom/badlogic/gdx/graphics/VertexAttribute;",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer20;->createDefaultShader()Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;": [
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->invalidateAllFrameBuffers()V",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->build()V",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->clearAllFrameBuffers()V",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->addManagedFrameBuffer()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData;": [
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;": [
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->color()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->getMaxVertices()I",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->getNumVertices()I",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->begin()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->end()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->vertex()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer$ShapeType;": [
        "Lcom/badlogic/gdx/graphics/glutils/ShapeRenderer$ShapeType;->getGlType()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/FileTextureData;": [
        "Lcom/badlogic/gdx/graphics/glutils/FileTextureData;->ensurePot()Lcom/badlogic/gdx/graphics/Pixmap;"
    ],
    "Lcom/badlogic/gdx/graphics/PixmapIO;": [
        "Lcom/badlogic/gdx/graphics/PixmapIO;->readCIM()Lcom/badlogic/gdx/graphics/Pixmap;"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData;": [
        "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/utils/ObjectIntMap;": [
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->getStash()I",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->get()I",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->entries()Lcom/badlogic/gdx/utils/ObjectIntMap$Entries;",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->resize()V",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->push()V",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->getAndIncrementStash()I",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->clear()V",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->removeStash()I",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->containsKey()Z",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->put()V",
        "Lcom/badlogic/gdx/utils/ObjectIntMap;->removeStashIndex()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer10;": [
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer10;->begin()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer10;->vertex()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObject;": [
        "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObject;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;": [
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;->values()[Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/InputListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->$SWITCH_TABLE$com$badlogic$gdx$scenes$scene2d$InputEvent$Type()[I",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->enter()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->keyDown()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->keyUp()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->touchDragged()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->touchDown()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->scrolled()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->mouseMoved()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->exit()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->keyTyped()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputListener;->touchUp()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;": [
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getTarget()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setCharacter()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getRelatedActor()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setKeyCode()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getPointer()I",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getType()Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->isHandled()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getStageY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setPointer()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setStageX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getButton()I",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setTarget()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getKeyCode()I",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setButton()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->handle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getListenerActor()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setType()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setStageY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getStageX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getCharacter()C",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setStage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setRelatedActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setScrollAmount()V",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->getScrollAmount()I",
        "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;->setListenerActor()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Actor;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setScaleX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->addCaptureListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->size()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setTouchable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->removeCaptureListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setOrigin()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getScaleY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setScaleY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->parentToLocalCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setZIndex()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setOriginX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->isVisible()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getScaleX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getOriginY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->notify()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->translate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->scale()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->localToParentCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->fire()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->isDescendantOf()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->remove()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setStage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->stageToLocalCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setVisible()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->rotate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->addAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setBounds()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setPosition()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getActions()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setScale()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->clipBegin()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setSize()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setParent()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getOriginX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setOriginY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->setRotation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->getRotation()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->draw()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Action;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->setPool()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->act()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->restart()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->setActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/SnapshotArray;": [
        "Lcom/badlogic/gdx/utils/SnapshotArray;->begin()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->resize()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->add()V",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->modified()V",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->removeValue()Z",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->clear()V",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->insert()V",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->removeIndex()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->indexOf()I",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->end()V",
        "Lcom/badlogic/gdx/utils/SnapshotArray;->swap()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Group;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->addActorBefore()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->localToDescendantCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->setStage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getTouchable()Lcom/badlogic/gdx/scenes/scene2d/Touchable;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->applyTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getScaleY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->childrenChanged()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->removeCaptureListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->removeListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->addCaptureListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getRotation()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->resetTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->notify()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->addActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->setX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->parentToLocalCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->computeTransform()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->setY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getOriginX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getChildren()Lcom/badlogic/gdx/utils/SnapshotArray;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->clear()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->removeActor()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->findActor()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getScaleX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->isVisible()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->stageToLocalCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getOriginY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->addAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->drawChildren()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->localToStageCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->draw()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Stage;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getCamera()Lcom/badlogic/gdx/graphics/Camera;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->cancelTouchFocus()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getRoot()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->fireEnterAndExit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->toScreenCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->addTouchFocus()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->unfocusAll()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->setScrollFocus()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->unfocus()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getKeyboardFocus()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getScrollFocus()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getActors()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->screenToStageCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->addActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->setViewport()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getSpriteBatch()Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->setKeyboardFocus()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->getWidth()F"
    ],
    "Lcom/badlogic/gdx/utils/DelayedRemovalArray;": [
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->add()V",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->removeIndex()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->begin()V",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->removeValue()Z",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->indexOf()I",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->end()V",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->contains()Z",
        "Lcom/badlogic/gdx/utils/DelayedRemovalArray;->remove()V"
    ],
    "Lcom/badlogic/gdx/utils/Pools;": [
        "Lcom/badlogic/gdx/utils/Pools;->obtain()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Pools;->free()V",
        "Lcom/badlogic/gdx/utils/Pools;->get()Lcom/badlogic/gdx/utils/Pool;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/ScissorStack;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ScissorStack;->pushScissors()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ScissorStack;->popScissors()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ScissorStack;->toWindowCoordinates()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ScissorStack;->calculateScissors()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ScissorStack;->fix()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Event;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->reset()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->handle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->setCapture()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->getTarget()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->isCancelled()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->setTarget()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->setListenerActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->setStage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->isStopped()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Event;->getBubbles()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/EventListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/EventListener;->handle()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->isCancelled()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->setStage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->setFocused()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->setType()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->isFocused()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->getType()Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;->setRelatedActor()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->isOver()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->clear()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->getStyle()Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox$CheckBoxStyle;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->getLabel()Lcom/badlogic/gdx/scenes/scene2d/ui/Label;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/CheckBox;->getPrefHeight()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setColor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->computeSize()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setAlignment()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->update()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getStyle()Lcom/badlogic/gdx/scenes/scene2d/ui/Label$LabelStyle;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setWrap()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setFontScale()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setText()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->textEquals()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->getText()Ljava/lang/CharSequence;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Label;->setStyle()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->find()Ljava/lang/String;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getDrawable()Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->addRegions()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->optional()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->newDrawable()Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getPatch()Lcom/badlogic/gdx/graphics/g2d/NinePatch;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getJsonLoader()Lcom/badlogic/gdx/utils/Json;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->findMethod()Ljava/lang/reflect/Method;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->load()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->dispose()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->add()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;->getFont()Lcom/badlogic/gdx/graphics/g2d/BitmapFont;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->addAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getOriginY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getRotation()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setWSZ()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getActions()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->clearActions()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setScaling()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setTexture()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setOrigin()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setColor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setDrawable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getScaleY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setPosition()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getOriginX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getListeners()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getScaleX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->setName()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Image;->remove()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->isPressed()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->isOver()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->setSkin()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->getText()Ljava/lang/CharSequence;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->getCell()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->getStyle()Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton$TextButtonStyle;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextButton;->getPrefWidth()F"
    ],
    "Lcom/badlogic/gdx/utils/Disposable;": [
        "Lcom/badlogic/gdx/utils/Disposable;->dispose()V"
    ],
    "Lcom/badlogic/gdx/utils/Json;": [
        "Lcom/badlogic/gdx/utils/Json;->cacheFields()Lcom/badlogic/gdx/utils/ObjectMap;",
        "Lcom/badlogic/gdx/utils/Json;->indent()V",
        "Lcom/badlogic/gdx/utils/Json;->writeArrayStart()V",
        "Lcom/badlogic/gdx/utils/Json;->writeValue()V",
        "Lcom/badlogic/gdx/utils/Json;->writeObjectStart()V",
        "Lcom/badlogic/gdx/utils/Json;->writeField()V",
        "Lcom/badlogic/gdx/utils/Json;->readFields()V",
        "Lcom/badlogic/gdx/utils/Json;->prettyPrint()V",
        "Lcom/badlogic/gdx/utils/Json;->setSerializer()V",
        "Lcom/badlogic/gdx/utils/Json;->fromJson()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Json;->writeArrayEnd()V",
        "Lcom/badlogic/gdx/utils/Json;->writeObjectEnd()V",
        "Lcom/badlogic/gdx/utils/Json;->newInstance()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Json;->writeType()V",
        "Lcom/badlogic/gdx/utils/Json;->isFlat()Z",
        "Lcom/badlogic/gdx/utils/Json;->convertToString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/Json;->prettyPrint()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/Json;->setTypeName()V",
        "Lcom/badlogic/gdx/utils/Json;->readField()V",
        "Lcom/badlogic/gdx/utils/Json;->toJson()V",
        "Lcom/badlogic/gdx/utils/Json;->readValue()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Json;->setUsePrototypes()V",
        "Lcom/badlogic/gdx/utils/Json;->getDefaultValues()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Json;->toJson()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/Json;->writeFields()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/TextureRegionDrawable;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/TextureRegionDrawable;->setMinWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/TextureRegionDrawable;->setRegion()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/TextureRegionDrawable;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/TextureRegionDrawable;->setMinHeight()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable;->setPatch()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable;->setMinHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable;->setMinWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable;->getPatch()Lcom/badlogic/gdx/graphics/g2d/NinePatch;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable;->setSprite()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable;->getSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable;->setMinHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable;->setMinWidth()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->button()Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->text()Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->setModal()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->clearActions()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->row()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->setObject()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->defaults()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->setPosition()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->pack()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Dialog;->addAction()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->padRight()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->drawDebug()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getChildren()Lcom/badlogic/gdx/utils/SnapshotArray;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->padBottom()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->clipBegin()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->clipEnd()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->drawBackground()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->isTransform()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->defaults()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->drawChildren()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getTouchable()Lcom/badlogic/gdx/scenes/scene2d/Touchable;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->padLeft()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->setTouchable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->setBackground()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->padTop()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->applyTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->computeTransform()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->setTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->pad()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->resetTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Table;->add()Lcom/esotericsoftware/tablelayout/Cell;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->rotateBy()Lcom/badlogic/gdx/scenes/scene2d/actions/RotateByAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->action()Lcom/badlogic/gdx/scenes/scene2d/Action;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->moveTo()Lcom/badlogic/gdx/scenes/scene2d/actions/MoveToAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->forever()Lcom/badlogic/gdx/scenes/scene2d/actions/RepeatAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->delay()Lcom/badlogic/gdx/scenes/scene2d/actions/DelayAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->scaleBy()Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleByAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->rotateTo()Lcom/badlogic/gdx/scenes/scene2d/actions/RotateToAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->fadeOut()Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->sizeTo()Lcom/badlogic/gdx/scenes/scene2d/actions/SizeToAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->removeActor()Lcom/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->visible()Lcom/badlogic/gdx/scenes/scene2d/actions/VisibleAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->intAction()Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->parallel()Lcom/badlogic/gdx/scenes/scene2d/actions/ParallelAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->moveBy()Lcom/badlogic/gdx/scenes/scene2d/actions/MoveByAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->sizeBy()Lcom/badlogic/gdx/scenes/scene2d/actions/SizeByAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->sequence()Lcom/badlogic/gdx/scenes/scene2d/actions/SequenceAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->alpha()Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->add()Lcom/badlogic/gdx/scenes/scene2d/actions/AddAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->fadeIn()Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->scaleTo()Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleToAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Actions;->color()Lcom/badlogic/gdx/scenes/scene2d/actions/ColorAction;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getRight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setTouchable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setTitle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getPadLeft()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setBackground()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getTouchable()Lcom/badlogic/gdx/scenes/scene2d/Touchable;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->stageToLocalCoordinates()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getPadTop()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setClip()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setParent()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->setSkin()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->addCaptureListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getTop()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Window;->getPadRight()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->addActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->setLayoutEnabled()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->layout()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->getChildren()Lcom/badlogic/gdx/utils/SnapshotArray;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->clear()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->removeActor()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/WidgetGroup;->validate()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->getMinHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->getMinWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->getMaxHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->pack()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->getMaxWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->setLayoutEnabled()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Layout;->getPrefWidth()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->setItems()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox;->getX()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectList;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectList;->addAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectList;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->getMinWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->getBottomHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->getMinHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->getLeftWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->getRightWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;->getTopHeight()F"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;->set()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/ClickListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ClickListener;->invalidateTapSquare()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ClickListener;->inTapSquare()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ClickListener;->isPressed()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ClickListener;->clicked()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ClickListener;->isOver()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->layout()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Widget;->getWidth()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->resetTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->visualScrollX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->resetFade()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->removeListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->setWidget()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->visualScrollY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->addCaptureListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->applyTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->getScrollPercentX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->drawChildren()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->getScrollPercentY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->scrollX()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->clamp()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->scrollY()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ScrollPane;->computeTransform()Lcom/badlogic/gdx/math/Matrix4;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/Cullable;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/Cullable;->setCullingArea()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->fire()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getVisualValue()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->setValue()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Slider;->addListener()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->fire()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->isChecked()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getChildren()Lcom/badlogic/gdx/utils/SnapshotArray;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->setChecked()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->padLeft()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->isPressed()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->setTouchable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->padRight()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->padBottom()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->isOver()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->padTop()Lcom/badlogic/gdx/scenes/scene2d/ui/Table;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Button;->addListener()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/ButtonGroup;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ButtonGroup;->canCheck()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ButtonGroup;->add()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ButtonGroup;->remove()V"
    ],
    "Ljie/java/android/boxcatcher/WorldScreenZul;": [
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addPoints()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addToothRestore()Ljie/java/android/boxcatcher/BoxActor;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addTaskTextInitial()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->rememberMethod()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addTaskImage()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->prepareArrowTimeHigherLevel()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addTaskTextInitialBonus()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->pointsAndPenalty()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addTaskScore()Lcom/blazen/vampire/TextActor;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->updateFont()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->showFinish()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->setTimer()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->drawIce()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addBloodAction()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addColorBonus()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->arrowTiming()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->updateFont2()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addToothToWorld()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->act()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addTutorial()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->getActors()Lcom/badlogic/gdx/utils/Array;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->setScore()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->toothThrowConditions()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addIce()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->rotationZero()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addPenalty()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addNewBlooadToWorld()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->makeBoxMaterial()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addArrowToPrepared()Ljie/java/android/boxcatcher/BoxActor;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addTaskText()Lcom/blazen/vampire/TextActor;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->toothRestore()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->scaleActor()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addPauseOptions()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addNewArrowToWorld()Ljie/java/android/boxcatcher/BoxActor;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->draw()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->getSpriteBatch()Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addActor()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addBonus()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addBonusFinish()Z",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->setBonusLabel()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->setScoreLabel()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->setTimerLabel()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addSecondsDecrease()Lcom/blazen/vampire/TextActor;",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->removeTutorial()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->touchActions()V",
        "Ljie/java/android/boxcatcher/WorldScreenZul;->addActorToWorld()Ljie/java/android/boxcatcher/BoxActor;"
    ],
    "Lcom/badlogic/gdx/utils/Scaling;": [
        "Lcom/badlogic/gdx/utils/Scaling;->values()[Lcom/badlogic/gdx/utils/Scaling;",
        "Lcom/badlogic/gdx/utils/Scaling;->apply()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/utils/Scaling;->ordinal()I",
        "Lcom/badlogic/gdx/utils/Scaling;->$SWITCH_TABLE$com$badlogic$gdx$utils$Scaling()[I"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->clearSelection()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->delete()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->setSelection()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->blink()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->setText()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->copy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->calculateOffsets()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->findNextTextField()Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getParent()Lcom/badlogic/gdx/scenes/scene2d/Group;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->updateDisplayText()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField;->getColor()Lcom/badlogic/gdx/graphics/Color;"
    ],
    "Lcom/badlogic/gdx/utils/Clipboard;": [
        "Lcom/badlogic/gdx/utils/Clipboard;->setContents()V",
        "Lcom/badlogic/gdx/utils/Clipboard;->getContents()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx2/Input;": [
        "Lcom/badlogic/gdx2/Input;->getRoll()F",
        "Lcom/badlogic/gdx2/Input;->setInputProcessor()V",
        "Lcom/badlogic/gdx2/Input;->getY()I",
        "Lcom/badlogic/gdx2/Input;->vibrate()V",
        "Lcom/badlogic/gdx2/Input;->getX()I",
        "Lcom/badlogic/gdx2/Input;->getAccelerometerY()F",
        "Lcom/badlogic/gdx2/Input;->getCurrentEventTime()J",
        "Lcom/badlogic/gdx2/Input;->setCatchBackKey()V",
        "Lcom/badlogic/gdx2/Input;->getTextInput()V",
        "Lcom/badlogic/gdx2/Input;->getAccelerometerX()F",
        "Lcom/badlogic/gdx2/Input;->isKeyPressed()Z",
        "Lcom/badlogic/gdx2/Input;->isButtonPressed()Z",
        "Lcom/badlogic/gdx2/Input;->justTouched()Z",
        "Lcom/badlogic/gdx2/Input;->getPlaceholderTextInput()V",
        "Lcom/badlogic/gdx2/Input;->setOnscreenKeyboardVisible()V",
        "Lcom/badlogic/gdx2/Input;->getAccelerometerZ()F",
        "Lcom/badlogic/gdx2/Input;->getPitch()F",
        "Lcom/badlogic/gdx2/Input;->isTouched()Z",
        "Lcom/badlogic/gdx2/Input;->getAzimuth()F",
        "Lcom/badlogic/gdx2/Input;->isPeripheralAvailable()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField$TextFieldFilter;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TextField$TextFieldFilter;->acceptChar()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->isPressed()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->getCell()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->defaults()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->getStyle()Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton$ImageTextButtonStyle;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->updateImage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->setSkin()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageTextButton;->isOver()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->getNodeAt()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->expandAll()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->remove()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->collapseAll()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->insert()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->layout()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->findNode()Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->setOverNode()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->computeSize()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->selectNodes()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree;->getY()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;->isSelectable()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;->removeFromTree()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;->expandAll()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;->setExpanded()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;->addToTree()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Tree$Node;->remove()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->isOver()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->updateImage()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->getCell()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->getStyle()Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton$ImageButtonStyle;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/ImageButton;->isPressed()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadTop()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadRight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadTopValue()Lcom/esotericsoftware/tablelayout/Value;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->padRight()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->add()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->bottom()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->right()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getTable()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getRow()I",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getMinHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->debugTable()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadBottomValue()Lcom/esotericsoftware/tablelayout/Value;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->reset()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->top()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->center()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->layout()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadRightValue()Lcom/esotericsoftware/tablelayout/Value;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getAlign()I",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadLeft()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->toStageCoordinates()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->drawDebug()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadBottom()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->columnDefaults()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->padTop()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getCell()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->debugCell()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getDebug()Lcom/esotericsoftware/tablelayout/BaseTableLayout$Debug;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getMinWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->left()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getCells()Ljava/util/List;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->padLeft()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->row()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPadLeftValue()Lcom/esotericsoftware/tablelayout/Value;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->defaults()Lcom/esotericsoftware/tablelayout/Cell;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->debugWidget()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->pad()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->padBottom()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->debug()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->align()Lcom/esotericsoftware/tablelayout/BaseTableLayout;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->setTable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableLayout;->clear()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->computeSize()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->setTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->getChildren()Lcom/badlogic/gdx/utils/SnapshotArray;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->addActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->setTouchable()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Stack;->getWidth()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->addChild()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->clearDebugRectangles()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getMinHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->addDebugRectangle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getMinWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getMaxHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->removeChild()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/TableToolkit;->getMaxWidth()F"
    ],
    "Lcom/badlogic/gdx/utils/StringBuilder;": [
        "Lcom/badlogic/gdx/utils/StringBuilder;->indexOf()I",
        "Lcom/badlogic/gdx/utils/StringBuilder;->delete0()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->equals()Z",
        "Lcom/badlogic/gdx/utils/StringBuilder;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/StringBuilder;->lastIndexOf()I",
        "Lcom/badlogic/gdx/utils/StringBuilder;->substring()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/StringBuilder;->reverse0()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->length()I",
        "Lcom/badlogic/gdx/utils/StringBuilder;->replace0()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->insert0()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->append()Lcom/badlogic/gdx/utils/StringBuilder;",
        "Lcom/badlogic/gdx/utils/StringBuilder;->appendNull()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->deleteCharAt0()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->setLength()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->enlargeBuffer()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->append0()V",
        "Lcom/badlogic/gdx/utils/StringBuilder;->move()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/VerticalGroup;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/VerticalGroup;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/VerticalGroup;->computeSize()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/VerticalGroup;->getChildren()Lcom/badlogic/gdx/utils/SnapshotArray;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/VerticalGroup;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/VerticalGroup;->setTouchable()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/List;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->setItems()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->fire()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/List;->setWidth()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->applyTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->setSecondWidget()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->getStage()Lcom/badlogic/gdx/scenes/scene2d/Stage;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->calculateHorizBoundsAndPositions()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->getHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->resetTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->computeTransform()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->calculateVertBoundsAndPositions()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/SplitPane;->setFirstWidget()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;": [
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->fire()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getX()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getPrefHeight()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->setWidth()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getPrefWidth()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->setStyle()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->validate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->setHeight()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->invalidateHierarchy()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->addListener()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getY()F",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->invalidate()V",
        "Lcom/badlogic/gdx/scenes/scene2d/ui/Touchpad;->getHeight()F"
    ],
    "Lcom/badlogic/gdx/math/Circle;": [
        "Lcom/badlogic/gdx/math/Circle;->set()V",
        "Lcom/badlogic/gdx/math/Circle;->contains()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/TiledDrawable;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/TiledDrawable;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;"
    ],
    "Ljava/awt/ScrollPane;": [
        "Ljava/awt/ScrollPane;->getWidth()I",
        "Ljava/awt/ScrollPane;->getHeight()I"
    ],
    "Lcom/badlogic/gdx/utils/Timer$Task;": [
        "Lcom/badlogic/gdx/utils/Timer$Task;->cancel()V",
        "Lcom/badlogic/gdx/utils/Timer$Task;->isScheduled()Z"
    ],
    "Lcom/badlogic/gdx/utils/Timer;": [
        "Lcom/badlogic/gdx/utils/Timer;->scheduleTask()V",
        "Lcom/badlogic/gdx/utils/Timer;->wake()V",
        "Lcom/badlogic/gdx/utils/Timer;->postTask()V",
        "Lcom/badlogic/gdx/utils/Timer;->schedule()V",
        "Lcom/badlogic/gdx/utils/Timer;->start()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/ChangeListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/ChangeListener;->changed()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;->values()[Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener;->scrollFocusChanged()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener;->$SWITCH_TABLE$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type()[I",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener;->keyboardFocusChanged()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/utils/DragListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/utils/DragListener;->setButton()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/DragListener;->dragStart()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/DragListener;->drag()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/DragListener;->dragStop()V",
        "Lcom/badlogic/gdx/scenes/scene2d/utils/DragListener;->setTapSquareSize()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ParallelAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ParallelAction;->addAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ParallelAction;->restart()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/DelegateAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/DelegateAction;->restart()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/DelegateAction;->setActor()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/TemporalAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/TemporalAction;->end()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/TemporalAction;->begin()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/TemporalAction;->reset()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/TemporalAction;->update()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RunnableAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RunnableAction;->run()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RunnableAction;->setRunnable()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RelativeTemporalAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RelativeTemporalAction;->updateRelative()V"
    ],
    "Ljie/java/android/boxcatcher/BoxActor;": [
        "Ljie/java/android/boxcatcher/BoxActor;->setRotation()V",
        "Ljie/java/android/boxcatcher/BoxActor;->remove()Z",
        "Ljie/java/android/boxcatcher/BoxActor;->applyVelocity()V",
        "Ljie/java/android/boxcatcher/BoxActor;->makeBox()V",
        "Ljie/java/android/boxcatcher/BoxActor;->getBox()Ljie/java/android/boxcatcher/StageData$Box;",
        "Ljie/java/android/boxcatcher/BoxActor;->getBody()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Ljie/java/android/boxcatcher/BoxActor;->addAction()V",
        "Ljie/java/android/boxcatcher/BoxActor;->setTexture()V",
        "Ljie/java/android/boxcatcher/BoxActor;->getCenter()Lcom/badlogic/gdx/math/Vector2;",
        "Ljie/java/android/boxcatcher/BoxActor;->getListeners()Lcom/badlogic/gdx/utils/Array;",
        "Ljie/java/android/boxcatcher/BoxActor;->$SWITCH_TABLE$jie$java$android$boxcatcher$BoxActor$BoxShape()[I",
        "Ljie/java/android/boxcatcher/BoxActor;->addListener()Z",
        "Ljie/java/android/boxcatcher/BoxActor;->update()V",
        "Ljie/java/android/boxcatcher/BoxActor;->makeShape()Lcom/badlogic/gdx/physics/box2d/Shape;",
        "Ljie/java/android/boxcatcher/BoxActor;->getActions()Lcom/badlogic/gdx/utils/Array;",
        "Ljie/java/android/boxcatcher/BoxActor;->clearActions()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ActionResetingPool;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ActionResetingPool;->obtain()Lcom/badlogic/gdx/scenes/scene2d/Action;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/AddAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/AddAction;->setAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/AddAction;->setTargetActor()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/AfterAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/AfterAction;->setAction()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;->setInterpolation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/AlphaAction;->setAlpha()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ColorAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ColorAction;->setEndColor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ColorAction;->setInterpolation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ColorAction;->setDuration()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/DelayAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/DelayAction;->setAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/DelayAction;->setDuration()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RepeatAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RepeatAction;->setAction()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RepeatAction;->setCount()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;->text()Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;->setEnd()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;->setStart()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;->ta()Lcom/badlogic/gdx/scenes/scene2d/actions/IntActionTextActor;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/LayoutAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/LayoutAction;->setLayoutEnabled()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveByAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveByAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveByAction;->setAmount()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveByAction;->setInterpolation()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveToAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveToAction;->setPosition()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveToAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveToAction;->setInterpolation()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction;->setRemoveActor()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateByAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateByAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateByAction;->setAmount()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateByAction;->setInterpolation()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateToAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateToAction;->setRotation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateToAction;->setInterpolation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateToAction;->setDuration()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleByAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleByAction;->setInterpolation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleByAction;->setAmount()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleByAction;->setDuration()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleToAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleToAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleToAction;->setScale()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleToAction;->setInterpolation()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/SequenceAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SequenceAction;->addAction()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeByAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeByAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeByAction;->setAmount()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeByAction;->setInterpolation()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeToAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeToAction;->setDuration()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeToAction;->setInterpolation()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/SizeToAction;->setSize()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/TouchableAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/TouchableAction;->setTouchable()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/VisibleAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/VisibleAction;->setVisible()V"
    ],
    "Lcom/blazen/vampire/TextActor;": [
        "Lcom/blazen/vampire/TextActor;->remove()Z",
        "Lcom/blazen/vampire/TextActor;->setScaleX()V",
        "Lcom/blazen/vampire/TextActor;->addListener()Z",
        "Lcom/blazen/vampire/TextActor;->getScaleX()F",
        "Lcom/blazen/vampire/TextActor;->setText()V",
        "Lcom/blazen/vampire/TextActor;->update()V",
        "Lcom/blazen/vampire/TextActor;->setOrigin()V",
        "Lcom/blazen/vampire/TextActor;->setPosition()V",
        "Lcom/blazen/vampire/TextActor;->getTextBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/blazen/vampire/TextActor;->setScale()V",
        "Lcom/blazen/vampire/TextActor;->addAction()V",
        "Lcom/blazen/vampire/TextActor;->setColor()V",
        "Lcom/blazen/vampire/TextActor;->draw()V",
        "Lcom/blazen/vampire/TextActor;->setScaleY()V",
        "Lcom/blazen/vampire/TextActor;->getScaleY()F"
    ],
    "Ljava/net/Socket;": [
        "Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/Socket;->setSoTimeout()V",
        "Ljava/net/Socket;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/Socket;->setTcpNoDelay()V"
    ],
    "Lcom/badlogic/gdx/input/GestureDetector;": [
        "Lcom/badlogic/gdx/input/GestureDetector;->isLongPressed()Z"
    ],
    "Lcom/badlogic/gdx/input/GestureDetector$VelocityTracker;": [
        "Lcom/badlogic/gdx/input/GestureDetector$VelocityTracker;->update()V",
        "Lcom/badlogic/gdx/input/GestureDetector$VelocityTracker;->getVelocityY()F",
        "Lcom/badlogic/gdx/input/GestureDetector$VelocityTracker;->start()V",
        "Lcom/badlogic/gdx/input/GestureDetector$VelocityTracker;->getVelocityX()F"
    ],
    "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;": [
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->tap()Z",
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->touchDown()Z",
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->zoom()Z",
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->pan()Z",
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->longPress()Z",
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->pinch()Z",
        "Lcom/badlogic/gdx/input/GestureDetector$GestureListener;->fling()Z"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->getAllByName()[Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getHostName()Ljava/lang/String;",
        "Ljava/net/InetAddress;->getLocalHost()Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;",
        "Ljava/net/InetAddress;->isLoopbackAddress()Z"
    ],
    "Ljava/net/ServerSocket;": [
        "Ljava/net/ServerSocket;->accept()Ljava/net/Socket;"
    ],
    "Lcom/badlogic/gdx/utils/GdxNativesLoader;": [
        "Lcom/badlogic/gdx/utils/GdxNativesLoader;->load()V",
        "Lcom/badlogic/gdx/utils/GdxNativesLoader;->extractLibrary()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/AdManager;": [
        "Lcom/adsdk/sdk/AdManager;->requestAd()V",
        "Lcom/adsdk/sdk/AdManager;->isAdLoaded()Z",
        "Lcom/adsdk/sdk/AdManager;->showAd()V",
        "Lcom/adsdk/sdk/AdManager;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/AdManager;->notifyAdClose()V",
        "Lcom/adsdk/sdk/AdManager;->closeRunningAd()V",
        "Lcom/adsdk/sdk/AdManager;->release()V",
        "Lcom/adsdk/sdk/AdManager;->notifyNoAdFound()V",
        "Lcom/adsdk/sdk/AdManager;->setmContext()V",
        "Lcom/adsdk/sdk/AdManager;->notifyAdShown()V",
        "Lcom/adsdk/sdk/AdManager;->getmContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/AdManager;->getRequest()Lcom/adsdk/sdk/AdRequest;"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidApplication;": [
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getInput()Lcom/badlogic/gdx2/Input;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->onActivityResult()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getAudio()Lcom/badlogic/gdx2/Audio;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->createLayoutParams()Landroid/widget/FrameLayout$LayoutParams;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->onDestroy()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->requestWindowFeature()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->onCreate()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getGraphics()Lcom/badlogic/gdx2/Graphics;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->createWakeLock()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->setContentView()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getSystemService()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->isOnline()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getWindow()Landroid/view/Window;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->isFinishing()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->log()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getFilesDir()Ljava/io/File;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getFiles()Lcom/badlogic/gdx2/Files;"
    ],
    "Landroid/os/Debug;": [
        "Landroid/os/Debug;->getNativeHeapAllocatedSize()J"
    ],
    "Lcom/adsdk/sdk/banner/AdView;": [
        "Lcom/adsdk/sdk/banner/AdView;->getLocation()Landroid/location/Location;",
        "Lcom/adsdk/sdk/banner/AdView;->notifyLoadAdFailed()V",
        "Lcom/adsdk/sdk/banner/AdView;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/banner/AdView;->registerScreenStateBroadcastReceiver()V",
        "Lcom/adsdk/sdk/banner/AdView;->addView()V",
        "Lcom/adsdk/sdk/banner/AdView;->notifyNoAd()V",
        "Lcom/adsdk/sdk/banner/AdView;->unregisterScreenStateBroadcastReceiver()V",
        "Lcom/adsdk/sdk/banner/AdView;->setVisibility()V",
        "Lcom/adsdk/sdk/banner/AdView;->showContent()V",
        "Lcom/adsdk/sdk/banner/AdView;->removeView()V",
        "Lcom/adsdk/sdk/banner/AdView;->startReloadTimer()V",
        "Lcom/adsdk/sdk/banner/AdView;->loadContent()V",
        "Lcom/adsdk/sdk/banner/AdView;->release()V",
        "Lcom/adsdk/sdk/banner/AdView;->getRequest()Lcom/adsdk/sdk/AdRequest;",
        "Lcom/adsdk/sdk/banner/AdView;->pause()V",
        "Lcom/adsdk/sdk/banner/AdView;->resume()V",
        "Lcom/adsdk/sdk/banner/AdView;->loadNextAd()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidGraphics;": [
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getView()Landroid/view/View;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->setupGL()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->createGLSurfaceView()Landroid/view/View;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->pause()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->resume()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->setPreserveContext()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getEglConfigChooser()Landroid/opengl/GLSurfaceView$EGLConfigChooser;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->clearManagedCaches()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->isContinuousRendering()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getAttrib()I",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getDesktopDisplayMode()Lcom/badlogic/gdx2/Graphics$DisplayMode;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->updatePpi()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->setContinuousRendering()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->logConfig()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->checkGL20()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->destroy()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidInput;": [
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->getFreePointerIndex()I",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->processEvents()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->registerSensorListeners()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->unregisterSensorListeners()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->isTouched()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->lookUpPointerIndex()I",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->updateOrientation()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->getRotation()I",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->isPeripheralAvailable()Z"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setEGLConfigChooser()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setRenderer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->requestRender()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setMeasuredDimension()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->onPause()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setRenderMode()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->onResume()V"
    ],
    "Landroid/opengl/GLSurfaceView;": [
        "Landroid/opengl/GLSurfaceView;->setRenderMode()V",
        "Landroid/opengl/GLSurfaceView;->setRenderer()V",
        "Landroid/opengl/GLSurfaceView;->onDetachedFromWindow()V",
        "Landroid/opengl/GLSurfaceView;->requestRender()V",
        "Landroid/opengl/GLSurfaceView;->onPause()V",
        "Landroid/opengl/GLSurfaceView;->onResume()V",
        "Landroid/opengl/GLSurfaceView;->setEGLConfigChooser()V"
    ],
    "Ljie/java/android/boxcatcher/LaikaMenu;": [
        "Ljie/java/android/boxcatcher/LaikaMenu;->setUnachievementTextures()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->updateFont()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->noFacebook()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->touchActions()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->setAchievementTextures()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->showChooseGameStyle()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->draw()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->setWeapons()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->showNewAchievementInfo()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->setMoney()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->addActor()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->setAchievements()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->getActors()Lcom/badlogic/gdx/utils/Array;",
        "Ljie/java/android/boxcatcher/LaikaMenu;->updateFont2()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->setHpLevel()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->act()V",
        "Ljie/java/android/boxcatcher/LaikaMenu;->addListeners()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidPreferences;": [
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putLong()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putInteger()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putFloat()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putBoolean()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putString()V"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->openFd()Landroid/content/res/AssetFileDescriptor;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;",
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;"
    ],
    "Landroid/content/res/AssetFileDescriptor;": [
        "Landroid/content/res/AssetFileDescriptor;->close()V",
        "Landroid/content/res/AssetFileDescriptor;->getLength()J",
        "Landroid/content/res/AssetFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;",
        "Landroid/content/res/AssetFileDescriptor;->getStartOffset()J"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->getVideoHeight()I",
        "Landroid/media/MediaPlayer;->stop()V",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->setScreenOnWhilePlaying()V",
        "Landroid/media/MediaPlayer;->setDisplay()V",
        "Landroid/media/MediaPlayer;->isLooping()Z",
        "Landroid/media/MediaPlayer;->setOnVideoSizeChangedListener()V",
        "Landroid/media/MediaPlayer;->getCurrentPosition()I",
        "Landroid/media/MediaPlayer;->setOnPreparedListener()V",
        "Landroid/media/MediaPlayer;->setOnBufferingUpdateListener()V",
        "Landroid/media/MediaPlayer;->reset()V",
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->setOnInfoListener()V",
        "Landroid/media/MediaPlayer;->prepareAsync()V",
        "Landroid/media/MediaPlayer;->isPlaying()Z",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->setVolume()V",
        "Landroid/media/MediaPlayer;->setOnErrorListener()V",
        "Landroid/media/MediaPlayer;->getVideoWidth()I",
        "Landroid/media/MediaPlayer;->setOnCompletionListener()V",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->getDuration()I",
        "Landroid/media/MediaPlayer;->setAudioStreamType()V"
    ],
    "Ljava/lang/IllegalStateException;": [
        "Ljava/lang/IllegalStateException;->printStackTrace()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidMusic;": [
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->setVolume()V",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->isPlaying()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->play()V",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->pause()V",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->dispose()V"
    ],
    "Ljavax/microedition/khronos/egl/EGLContext;": [
        "Ljavax/microedition/khronos/egl/EGLContext;->getEGL()Ljavax/microedition/khronos/egl/EGL;"
    ],
    "Ljavax/microedition/khronos/egl/EGL10;": [
        "Ljavax/microedition/khronos/egl/EGL10;->eglQueryString()Ljava/lang/String;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglQueryContext()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreateContext()Ljavax/microedition/khronos/egl/EGLContext;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreateWindowSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglSwapBuffers()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglDestroySurface()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglTerminate()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglChooseConfig()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetCurrentSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetCurrentContext()Ljavax/microedition/khronos/egl/EGLContext;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreatePbufferSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetError()I",
        "Ljavax/microedition/khronos/egl/EGL10;->eglWaitNative()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigAttrib()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCopyBuffers()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetDisplay()Ljavax/microedition/khronos/egl/EGLDisplay;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigs()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglInitialize()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglMakeCurrent()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetCurrentDisplay()Ljavax/microedition/khronos/egl/EGLDisplay;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglQuerySurface()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglDestroyContext()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglWaitGL()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreatePixmapSurface()Ljavax/microedition/khronos/egl/EGLSurface;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setRenderer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setMeasuredDimension()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setEGLContextFactory()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setEGLConfigChooser()V"
    ],
    "Ljavax/microedition/khronos/opengles/GL10;": [
        "Ljavax/microedition/khronos/opengles/GL10;->glSampleCoverage()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexParameterf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexSubImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glStencilMask()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCompressedTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCopyTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFinish()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetString()Ljava/lang/String;",
        "Ljavax/microedition/khronos/opengles/GL10;->glScalex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFlush()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glStencilFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glViewport()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultiTexCoord4x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glBindTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFrustumf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearDepthf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultMatrixx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDrawArrays()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTranslatef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glRotatef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClear()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColor4x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearColorx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColorMask()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMatrixMode()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glScissor()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDisableClientState()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glBlendFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glOrthox()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColorPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glScalef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadMatrixf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPixelStorei()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glRotatex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthRangex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadMatrixx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthMask()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadIdentity()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPointSize()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColor4f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCullFace()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetIntegerv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearStencil()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearColor()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glEnable()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLineWidthx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glNormal3x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glActiveTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultiTexCoord4f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDisable()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDrawElements()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glNormalPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFrustumx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glHint()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthRangef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCompressedTexSubImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPushMatrix()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClientActiveTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glStencilOp()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glNormal3f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glAlphaFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPopMatrix()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLineWidth()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultMatrixf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glOrthof()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPolygonOffsetx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetError()I",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLogicOp()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCopyTexSubImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glShadeModel()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexParameterx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearDepthx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glReadPixels()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDeleteTextures()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPolygonOffset()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPointSizex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTranslatex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glEnableClientState()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGenTextures()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexCoordPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glSampleCoveragex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glAlphaFuncx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glVertexPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFrontFace()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidAudio;": [
        "Lcom/badlogic/gdx/backends/android/AndroidAudio;->resume()V",
        "Lcom/badlogic/gdx/backends/android/AndroidAudio;->pause()V",
        "Lcom/badlogic/gdx/backends/android/AndroidAudio;->dispose()V"
    ],
    "Lcom/badlogic/gdx2/ApplicationListener;": [
        "Lcom/badlogic/gdx2/ApplicationListener;->dispose()V",
        "Lcom/badlogic/gdx2/ApplicationListener;->pause()V",
        "Lcom/badlogic/gdx2/ApplicationListener;->render()V",
        "Lcom/badlogic/gdx2/ApplicationListener;->resume()V",
        "Lcom/badlogic/gdx2/ApplicationListener;->create()V",
        "Lcom/badlogic/gdx2/ApplicationListener;->resize()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidTouchHandler;->onTouch()V",
        "Lcom/badlogic/gdx/backends/android/AndroidTouchHandler;->supportsMultitouch()Z"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->getOrientation()[F",
        "Landroid/hardware/SensorManager;->getDefaultSensor()Landroid/hardware/Sensor;",
        "Landroid/hardware/SensorManager;->registerListener()Z",
        "Landroid/hardware/SensorManager;->getSensorList()Ljava/util/List;",
        "Landroid/hardware/SensorManager;->getRotationMatrix()Z",
        "Landroid/hardware/SensorManager;->unregisterListener()V"
    ],
    "Landroid/media/AudioRecord;": [
        "Landroid/media/AudioRecord;->stop()V",
        "Landroid/media/AudioRecord;->getMinBufferSize()I",
        "Landroid/media/AudioRecord;->startRecording()V",
        "Landroid/media/AudioRecord;->getState()I",
        "Landroid/media/AudioRecord;->read()I",
        "Landroid/media/AudioRecord;->release()V"
    ],
    "Landroid/opengl/GLU;": [
        "Landroid/opengl/GLU;->gluOrtho2D()V",
        "Landroid/opengl/GLU;->gluProject()I",
        "Landroid/opengl/GLU;->gluPerspective()V",
        "Landroid/opengl/GLU;->gluErrorString()Ljava/lang/String;",
        "Landroid/opengl/GLU;->gluUnProject()I",
        "Landroid/opengl/GLU;->gluLookAt()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidSingleTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidSingleTouchHandler;->postTouchEvent()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidOnscreenKeyboard;": [
        "Lcom/badlogic/gdx/backends/android/AndroidOnscreenKeyboard;->createView()Landroid/widget/TextView;"
    ],
    "Landroid/media/AudioTrack;": [
        "Landroid/media/AudioTrack;->write()I",
        "Landroid/media/AudioTrack;->release()V",
        "Landroid/media/AudioTrack;->play()V",
        "Landroid/media/AudioTrack;->getMinBufferSize()I",
        "Landroid/media/AudioTrack;->setStereoVolume()I",
        "Landroid/media/AudioTrack;->stop()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidMultiTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidMultiTouchHandler;->postTouchEvent()V"
    ],
    "Landroid/media/SoundPool;": [
        "Landroid/media/SoundPool;->setRate()V",
        "Landroid/media/SoundPool;->release()V",
        "Landroid/media/SoundPool;->setLoop()V",
        "Landroid/media/SoundPool;->play()I",
        "Landroid/media/SoundPool;->unload()Z",
        "Landroid/media/SoundPool;->load()I",
        "Landroid/media/SoundPool;->stop()V",
        "Landroid/media/SoundPool;->setVolume()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidSound;": [
        "Lcom/badlogic/gdx/backends/android/AndroidSound;->loop()J",
        "Lcom/badlogic/gdx/backends/android/AndroidSound;->play()J"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;": [
        "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;->path()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;->type()Lcom/badlogic/gdx2/Files$FileType;",
        "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;->file()Ljava/io/File;"
    ],
    "Ljavax/microedition/khronos/opengles/GL11;": [
        "Ljavax/microedition/khronos/opengles/GL11;->glGetPointerv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glPointParameterf()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glColorPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBindBuffer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBufferData()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexEnvi()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetBooleanv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetFloatv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glVertexPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glClipPlanex()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetTexEnviv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexEnviv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameterfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glColor4ub()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glPointSizePointerOES()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetLightfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glClipPlanef()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameteri()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetBufferParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glDrawElements()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetMaterialfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetTexParameterfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glNormalPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGenBuffers()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glIsBuffer()Z",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetClipPlanef()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexCoordPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetTexParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBufferSubData()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glIsEnabled()Z",
        "Ljavax/microedition/khronos/opengles/GL11;->glIsTexture()Z",
        "Ljavax/microedition/khronos/opengles/GL11;->glDeleteBuffers()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glPointParameterfv()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;->checkRenderThreadState()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;->setEGLConfigChooser()V"
    ],
    "Landroid/view/SurfaceHolder;": [
        "Landroid/view/SurfaceHolder;->setType()V",
        "Landroid/view/SurfaceHolder;->setFixedSize()V",
        "Landroid/view/SurfaceHolder;->addCallback()V",
        "Landroid/view/SurfaceHolder;->setFormat()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->start()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->surfaceCreated()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->queueEvent()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->onWindowResize()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->surfaceDestroyed()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->requestRender()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->onResume()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->getRenderMode()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->requestExitAndWait()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->onPause()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->setRenderMode()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLException;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLException;->getErrorString()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->toByteBuffer()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getShadeModel()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFogPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->returns()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->end()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getMaterialPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getHintTarget()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getPointerTypeName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->unbindArrays()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getHintMode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->endLogIndices()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getHex()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIntegerStateFormat()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFaceName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->checkError()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvParamName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->formattedAppend()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getClearBufferMask()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIntegerStateSize()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->logLine()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvTarget()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureParamName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->doArrayElement()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->argPointer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIndexType()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureTarget()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightModelParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getCap()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getMaterialParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFactor()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->bindArrays()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->arg()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightModelPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFogParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->startLogIndices()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getMatrixMode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->begin()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getBeginMode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTexturePName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->toCharIndices()[C",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIntegerStateName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->flush()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->doElement()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getClientState()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->log()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightPName()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->unbindByteBuffer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->bindByteBuffer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->getStride()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->sizeof()I"
    ],
    "Ljavax/microedition/khronos/opengles/GL11Ext;": [
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexfvOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexxOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexsOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexxvOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexiOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexivOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexfOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexsvOES()V"
    ],
    "Ljavax/microedition/khronos/opengles/GL10Ext;": [
        "Ljavax/microedition/khronos/opengles/GL10Ext;->glQueryMatrixxOES()I"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/ResolutionStrategy;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/ResolutionStrategy;->calcMeasures()Lcom/badlogic/gdx/backends/android/surfaceview/ResolutionStrategy$MeasuredDimension;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/DefaultGLSurfaceView;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/DefaultGLSurfaceView;->setMeasuredDimension()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->onResume()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->queueEvent()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->requestRender()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->start()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->onWindowResize()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->requestExitAndWait()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->setRenderMode()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->surfaceCreated()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->surfaceDestroyed()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->onPause()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser;->printConfig()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser;->findConfigAttrib()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser;->chooseConfig()Ljavax/microedition/khronos/egl/EGLConfig;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLErrorWrapper;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLErrorWrapper;->checkThread()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLErrorWrapper;->checkError()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->getErrorString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->returns()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->flush()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->log()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->begin()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->getHex()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->arg()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->checkError()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->end()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->logLine()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglNativesLoader;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglNativesLoader;->load()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplication;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplication;->getGraphics()Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplication;->exit()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplication;->getJavaHeap()J",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplication;->postRunnable()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->getDesktopDisplayMode()Lcom/badlogic/gdx/Graphics$DisplayMode;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->requestRendering()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->getWidth()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->createDisplayPixelFormat()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->setVSync()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->updateTime()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->setDisplayMode()Z",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->setupDisplay()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->getHeight()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGraphics;->shouldRender()Z"
    ],
    "Lcom/badlogic/gdx/ApplicationListener;": [
        "Lcom/badlogic/gdx/ApplicationListener;->pause()V",
        "Lcom/badlogic/gdx/ApplicationListener;->render()V",
        "Lcom/badlogic/gdx/ApplicationListener;->dispose()V",
        "Lcom/badlogic/gdx/ApplicationListener;->resize()V",
        "Lcom/badlogic/gdx/ApplicationListener;->create()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->getGdxKeyCode()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->toLwjglButton()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->processEvents()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->updateMouse()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->isTouched()Z",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->getLwjglKeyCode()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->toGdxButton()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->updateKeyboard()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->getY()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->update()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglInput;->getX()I"
    ],
    "Lcom/badlogic/gdx/backends/openal/OpenALAudio;": [
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->stopSound()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->setSoundLooping()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->getSoundId()J",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->freeBuffer()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->stopSourcesWithBuffer()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->freeSource()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->setSoundPitch()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->registerSound()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->newMusic()Lcom/badlogic/gdx/backends/openal/OpenALMusic;",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->update()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->obtainSource()I",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->newSound()Lcom/badlogic/gdx/backends/openal/OpenALSound;",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->setSoundPan()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->setSoundGain()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->dispose()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudio;->registerMusic()V"
    ],
    "Lcom/badlogic/gdx/Graphics;": [
        "Lcom/badlogic/gdx/Graphics;->getDeltaTime()F",
        "Lcom/badlogic/gdx/Graphics;->getHeight()I",
        "Lcom/badlogic/gdx/Graphics;->requestRendering()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->getFloat()F",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->putString()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->putLong()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->putFloat()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->getBoolean()Z",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->getLong()J",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->putBoolean()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->getInteger()I",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->putInteger()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglPreferences;->getString()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglCanvas;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglCanvas;->getCanvas()Ljava/awt/Canvas;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglCanvas;->postRunnable()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglCanvas;->stopped()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglCanvas;->getJavaHeap()J"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplet;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplet;->add()Ljava/awt/Component;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplet;->remove()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglApplet;->setLayout()V"
    ],
    "Ljava/applet/Applet;": [
        "Ljava/applet/Applet;->destroy()V"
    ],
    "Lorg/lwjgl/opengl/ARBVertexBufferObject;": [
        "Lorg/lwjgl/opengl/ARBVertexBufferObject;->glBindBufferARB()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL11;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL11;->toBuffer()Ljava/nio/IntBuffer;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL11;->toBuffer()Ljava/nio/FloatBuffer;"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL10;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL10;->toBuffer()Ljava/nio/FloatBuffer;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL10;->glTexEnvf()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglGL10;->toBuffer()Ljava/nio/IntBuffer;"
    ],
    "Lorg/lwjgl/util/glu/GLU;": [
        "Lorg/lwjgl/util/glu/GLU;->gluOrtho2D()V",
        "Lorg/lwjgl/util/glu/GLU;->gluUnProject()Z",
        "Lorg/lwjgl/util/glu/GLU;->gluPerspective()V",
        "Lorg/lwjgl/util/glu/GLU;->gluProject()Z",
        "Lorg/lwjgl/util/glu/GLU;->gluLookAt()V"
    ],
    "Lcom/badlogic/gdx/backends/lwjgl/LwjglFrame;": [
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglFrame;->setVisible()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglFrame;->getContentPane()Ljava/awt/Container;",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglFrame;->pack()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglFrame;->setDefaultCloseOperation()V",
        "Lcom/badlogic/gdx/backends/lwjgl/LwjglFrame;->setLocationRelativeTo()V"
    ],
    "Ljava/awt/Container;": [
        "Ljava/awt/Container;->add()Ljava/awt/Component;",
        "Ljava/awt/Container;->setPreferredSize()V"
    ],
    "Ljavax/swing/SwingUtilities;": [
        "Ljavax/swing/SwingUtilities;->invokeLater()V"
    ],
    "Lcom/badlogic/gdx/InputProcessor;": [
        "Lcom/badlogic/gdx/InputProcessor;->keyUp()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchUp()Z",
        "Lcom/badlogic/gdx/InputProcessor;->keyDown()Z",
        "Lcom/badlogic/gdx/InputProcessor;->keyTyped()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchMoved()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchDragged()Z",
        "Lcom/badlogic/gdx/InputProcessor;->scrolled()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchDown()Z"
    ],
    "Lcom/badlogic/gdx/backends/openal/OpenALSound;": [
        "Lcom/badlogic/gdx/backends/openal/OpenALSound;->loop()J",
        "Lcom/badlogic/gdx/backends/openal/OpenALSound;->play()J"
    ],
    "Lcom/badlogic/gdx/backends/openal/OpenALAudioDevice;": [
        "Lcom/badlogic/gdx/backends/openal/OpenALAudioDevice;->fillBuffer()I",
        "Lcom/badlogic/gdx/backends/openal/OpenALAudioDevice;->writeSamples()V"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->setAccessible()V",
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/backends/openal/OpenALMusic;": [
        "Lcom/badlogic/gdx/backends/openal/OpenALMusic;->stop()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALMusic;->reset()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALMusic;->update()V",
        "Lcom/badlogic/gdx/backends/openal/OpenALMusic;->read()I",
        "Lcom/badlogic/gdx/backends/openal/OpenALMusic;->fill()Z"
    ],
    "Lcom/badlogic/gdx/backends/openal/OggInputStream;": [
        "Lcom/badlogic/gdx/backends/openal/OggInputStream;->getPageAndPacket()Z",
        "Lcom/badlogic/gdx/backends/openal/OggInputStream;->readPCM()V",
        "Lcom/badlogic/gdx/backends/openal/OggInputStream;->read()I"
    ],
    "Lcom/badlogic/gdx/Application;": [
        "Lcom/badlogic/gdx/Application;->log()V"
    ],
    "Ljavax/sound/sampled/TargetDataLine;": [
        "Ljavax/sound/sampled/TargetDataLine;->close()V",
        "Ljavax/sound/sampled/TargetDataLine;->read()I",
        "Ljavax/sound/sampled/TargetDataLine;->start()V",
        "Ljavax/sound/sampled/TargetDataLine;->open()V"
    ],
    "Lcom/badlogic/gdx/utils/Logger;": [
        "Lcom/badlogic/gdx/utils/Logger;->info()V",
        "Lcom/badlogic/gdx/utils/Logger;->debug()V",
        "Lcom/badlogic/gdx/utils/Logger;->error()V",
        "Lcom/badlogic/gdx/utils/Logger;->getLevel()I"
    ],
    "Lcom/badlogic/gdx/assets/loaders/AsynchronousAssetLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/AsynchronousAssetLoader;->loadSync()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/assets/loaders/AsynchronousAssetLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/AsynchronousAssetLoader;->loadAsync()V"
    ],
    "Lcom/badlogic/gdx/assets/loaders/SynchronousAssetLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/SynchronousAssetLoader;->load()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/assets/loaders/SynchronousAssetLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/badlogic/gdx/assets/AssetLoadingTask;": [
        "Lcom/badlogic/gdx/assets/AssetLoadingTask;->call()Ljava/lang/Void;",
        "Lcom/badlogic/gdx/assets/AssetLoadingTask;->getAsset()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/assets/AssetLoadingTask;->handleAsyncLoader()V",
        "Lcom/badlogic/gdx/assets/AssetLoadingTask;->handleSyncLoader()V",
        "Lcom/badlogic/gdx/assets/AssetLoadingTask;->update()Z"
    ],
    "Lcom/badlogic/gdx/assets/RefCountedContainer;": [
        "Lcom/badlogic/gdx/assets/RefCountedContainer;->decRefCount()V",
        "Lcom/badlogic/gdx/assets/RefCountedContainer;->incRefCount()V",
        "Lcom/badlogic/gdx/assets/RefCountedContainer;->getRefCount()I",
        "Lcom/badlogic/gdx/assets/RefCountedContainer;->getObject()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/assets/RefCountedContainer;->setRefCount()V"
    ],
    "Lcom/badlogic/gdx/assets/AssetErrorListener;": [
        "Lcom/badlogic/gdx/assets/AssetErrorListener;->error()V"
    ],
    "Lcom/badlogic/gdx/assets/AssetLoaderParameters$LoadedCallback;": [
        "Lcom/badlogic/gdx/assets/AssetLoaderParameters$LoadedCallback;->finishedLoading()V"
    ],
    "Lcom/badlogic/gdx/assets/loaders/TileMapRendererLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/TileMapRendererLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/TileMapRendererLoader;->load()Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;",
        "Lcom/badlogic/gdx/assets/loaders/TileMapRendererLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/TextureLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/TextureLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/assets/loaders/TextureLoader;->loadAsync()V",
        "Lcom/badlogic/gdx/assets/loaders/TextureLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/TextureLoader;->loadSync()Lcom/badlogic/gdx/graphics/Texture;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/SkinLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/SkinLoader;->loadAsync()V",
        "Lcom/badlogic/gdx/assets/loaders/SkinLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/SkinLoader;->loadSync()Lcom/badlogic/gdx/scenes/scene2d/ui/Skin;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/MusicLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/MusicLoader;->load()Lcom/badlogic/gdx/audio/Music;",
        "Lcom/badlogic/gdx/assets/loaders/MusicLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/assets/loaders/MusicLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/badlogic/gdx2/Audio;": [
        "Lcom/badlogic/gdx2/Audio;->newMusic()Lcom/badlogic/gdx/audio/Music;",
        "Lcom/badlogic/gdx2/Audio;->newSound()Lcom/badlogic/gdx/audio/Sound;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/PixmapLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/PixmapLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/assets/loaders/PixmapLoader;->loadSync()Lcom/badlogic/gdx/graphics/Pixmap;",
        "Lcom/badlogic/gdx/assets/loaders/PixmapLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/PixmapLoader;->loadAsync()V"
    ],
    "Lcom/badlogic/gdx/assets/loaders/FileHandleResolver;": [
        "Lcom/badlogic/gdx/assets/loaders/FileHandleResolver;->resolve()Lcom/badlogic/gdx/files/FileHandle;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/BitmapFontLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/BitmapFontLoader;->loadSync()Lcom/badlogic/gdx/graphics/g2d/BitmapFont;",
        "Lcom/badlogic/gdx/assets/loaders/BitmapFontLoader;->loadAsync()V",
        "Lcom/badlogic/gdx/assets/loaders/BitmapFontLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/BitmapFontLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/SoundLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/SoundLoader;->load()Lcom/badlogic/gdx/audio/Sound;",
        "Lcom/badlogic/gdx/assets/loaders/SoundLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/assets/loaders/SoundLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/TileAtlasLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/TileAtlasLoader;->loadAsync()V",
        "Lcom/badlogic/gdx/assets/loaders/TileAtlasLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/TileAtlasLoader;->loadSync()Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/TextureAtlasLoader;": [
        "Lcom/badlogic/gdx/assets/loaders/TextureAtlasLoader;->getDependencies()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/badlogic/gdx/assets/loaders/TextureAtlasLoader;->resolve()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/assets/loaders/TextureAtlasLoader;->load()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$TextureAtlasData;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$TextureAtlasData;->getPages()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver;": [
        "Lcom/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver;->resolve()Ljava/lang/String;",
        "Lcom/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver;->choose()Lcom/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver$Resolution;"
    ],
    "Lcom/badlogic/gdx2/Files$FileType;": [
        "Lcom/badlogic/gdx2/Files$FileType;->ordinal()I",
        "Lcom/badlogic/gdx2/Files$FileType;->values()[Lcom/badlogic/gdx2/Files$FileType;"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap;": [
        "Lcom/badlogic/gdx/utils/IdentityMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IdentityMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/IdentityMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/IdentityMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IdentityMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IdentityMap;->push()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/IdentityMap;->resize()V"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap$Entries;": [
        "Lcom/badlogic/gdx/utils/IdentityMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap$Keys;": [
        "Lcom/badlogic/gdx/utils/IdentityMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap$Values;": [
        "Lcom/badlogic/gdx/utils/IdentityMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/CharArray;": [
        "Lcom/badlogic/gdx/utils/CharArray;->addAll()V",
        "Lcom/badlogic/gdx/utils/CharArray;->removeIndex()C",
        "Lcom/badlogic/gdx/utils/CharArray;->get()C",
        "Lcom/badlogic/gdx/utils/CharArray;->resize()[C"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Entries;": [
        "Lcom/badlogic/gdx/utils/LongMap$Entries;->reset()V",
        "Lcom/badlogic/gdx/utils/LongMap$Entries;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Keys;": [
        "Lcom/badlogic/gdx/utils/LongMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Values;": [
        "Lcom/badlogic/gdx/utils/LongMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/SortedIntList$NodePool;": [
        "Lcom/badlogic/gdx/utils/SortedIntList$NodePool;->free()V",
        "Lcom/badlogic/gdx/utils/SortedIntList$NodePool;->obtain()Lcom/badlogic/gdx/utils/SortedIntList$Node;"
    ],
    "Lcom/badlogic/gdx/utils/SortedIntList$Iterator;": [
        "Lcom/badlogic/gdx/utils/SortedIntList$Iterator;->reset()Lcom/badlogic/gdx/utils/SortedIntList$Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/ScreenUtils;": [
        "Lcom/badlogic/gdx/utils/ScreenUtils;->getFrameBufferPixels()[B",
        "Lcom/badlogic/gdx/utils/ScreenUtils;->getFrameBufferTexture()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;"
    ],
    "Lcom/badlogic/gdx/utils/IntFloatMap;": [
        "Lcom/badlogic/gdx/utils/IntFloatMap;->entries()Lcom/badlogic/gdx/utils/IntFloatMap$Entries;",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->removeStash()F",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->resize()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->getStash()F",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->push()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->put()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap;->getAndIncrementStash()F"
    ],
    "Lcom/badlogic/gdx/utils/IntFloatMap$Entries;": [
        "Lcom/badlogic/gdx/utils/IntFloatMap$Entries;->reset()V",
        "Lcom/badlogic/gdx/utils/IntFloatMap$Entries;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/IntFloatMap$Keys;": [
        "Lcom/badlogic/gdx/utils/IntFloatMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IntFloatMap$Values;": [
        "Lcom/badlogic/gdx/utils/IntFloatMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/JsonWriter;": [
        "Lcom/badlogic/gdx/utils/JsonWriter;->name()Lcom/badlogic/gdx/utils/JsonWriter;",
        "Lcom/badlogic/gdx/utils/JsonWriter;->pop()Lcom/badlogic/gdx/utils/JsonWriter;",
        "Lcom/badlogic/gdx/utils/JsonWriter;->object()Lcom/badlogic/gdx/utils/JsonWriter;",
        "Lcom/badlogic/gdx/utils/JsonWriter;->value()Lcom/badlogic/gdx/utils/JsonWriter;",
        "Lcom/badlogic/gdx/utils/JsonWriter;->array()Lcom/badlogic/gdx/utils/JsonWriter;",
        "Lcom/badlogic/gdx/utils/JsonWriter;->setOutputType()V",
        "Lcom/badlogic/gdx/utils/JsonWriter;->set()Lcom/badlogic/gdx/utils/JsonWriter;"
    ],
    "Lcom/badlogic/gdx/utils/JsonWriter$OutputType;": [
        "Lcom/badlogic/gdx/utils/JsonWriter$OutputType;->quoteName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/JsonWriter$OutputType;->quoteValue()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/utils/JsonWriter$JsonObject;": [
        "Lcom/badlogic/gdx/utils/JsonWriter$JsonObject;->close()V"
    ],
    "Lcom/badlogic/gdx/utils/Base64Coder;": [
        "Lcom/badlogic/gdx/utils/Base64Coder;->decode()[B",
        "Lcom/badlogic/gdx/utils/Base64Coder;->encode()[C",
        "Lcom/badlogic/gdx/utils/Base64Coder;->encodeLines()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/utils/PerformanceCounter;": [
        "Lcom/badlogic/gdx/utils/PerformanceCounter;->toString()Lcom/badlogic/gdx/utils/StringBuilder;",
        "Lcom/badlogic/gdx/utils/PerformanceCounter;->tick()V"
    ],
    "Lcom/badlogic/gdx/utils/Predicate$PredicateIterable;": [
        "Lcom/badlogic/gdx/utils/Predicate$PredicateIterable;->set()V"
    ],
    "Lcom/badlogic/gdx/utils/BooleanArray;": [
        "Lcom/badlogic/gdx/utils/BooleanArray;->get()Z",
        "Lcom/badlogic/gdx/utils/BooleanArray;->resize()[Z",
        "Lcom/badlogic/gdx/utils/BooleanArray;->removeIndex()Z",
        "Lcom/badlogic/gdx/utils/BooleanArray;->addAll()V"
    ],
    "Lcom/badlogic/gdx/utils/SerializationException;": [
        "Lcom/badlogic/gdx/utils/SerializationException;->addTrace()V",
        "Lcom/badlogic/gdx/utils/SerializationException;->causedBy()Z"
    ],
    "Lcom/badlogic/gdx/utils/PerformanceCounters;": [
        "Lcom/badlogic/gdx/utils/PerformanceCounters;->tick()V"
    ],
    "Lcom/badlogic/gdx/utils/IntIntMap;": [
        "Lcom/badlogic/gdx/utils/IntIntMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/IntIntMap;->put()V",
        "Lcom/badlogic/gdx/utils/IntIntMap;->getAndIncrementStash()I",
        "Lcom/badlogic/gdx/utils/IntIntMap;->resize()V",
        "Lcom/badlogic/gdx/utils/IntIntMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/IntIntMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/IntIntMap;->entries()Lcom/badlogic/gdx/utils/IntIntMap$Entries;",
        "Lcom/badlogic/gdx/utils/IntIntMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/IntIntMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/IntIntMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/IntIntMap;->push()V",
        "Lcom/badlogic/gdx/utils/IntIntMap;->removeStash()I",
        "Lcom/badlogic/gdx/utils/IntIntMap;->getStash()I"
    ],
    "Lcom/badlogic/gdx/utils/IntIntMap$Entries;": [
        "Lcom/badlogic/gdx/utils/IntIntMap$Entries;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/IntIntMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IntIntMap$Keys;": [
        "Lcom/badlogic/gdx/utils/IntIntMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IntIntMap$Values;": [
        "Lcom/badlogic/gdx/utils/IntIntMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/ArrayMap;": [
        "Lcom/badlogic/gdx/utils/ArrayMap;->addAll()V",
        "Lcom/badlogic/gdx/utils/ArrayMap;->removeIndex()V",
        "Lcom/badlogic/gdx/utils/ArrayMap;->indexOfKey()I",
        "Lcom/badlogic/gdx/utils/ArrayMap;->resize()V"
    ],
    "Lcom/badlogic/gdx/utils/ArrayMap$Entries;": [
        "Lcom/badlogic/gdx/utils/ArrayMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/ArrayMap$Keys;": [
        "Lcom/badlogic/gdx/utils/ArrayMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/ArrayMap$Values;": [
        "Lcom/badlogic/gdx/utils/ArrayMap$Values;->reset()V"
    ],
    "Ljava/util/concurrent/atomic/AtomicReferenceArray;": [
        "Ljava/util/concurrent/atomic/AtomicReferenceArray;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/atomic/AtomicReferenceArray;->length()I",
        "Ljava/util/concurrent/atomic/AtomicReferenceArray;->set()V"
    ],
    "Lcom/badlogic/gdx/utils/AtomicQueue;": [
        "Lcom/badlogic/gdx/utils/AtomicQueue;->next()I"
    ],
    "Lcom/badlogic/gdx/utils/XmlReader$Element;": [
        "Lcom/badlogic/gdx/utils/XmlReader$Element;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/XmlReader$Element;->addChild()V",
        "Lcom/badlogic/gdx/utils/XmlReader$Element;->getText()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/XmlReader$Element;->setAttribute()V",
        "Lcom/badlogic/gdx/utils/XmlReader$Element;->setText()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap$Entries;": [
        "Lcom/badlogic/gdx/utils/ObjectMap$Entries;->reset()V",
        "Lcom/badlogic/gdx/utils/ObjectMap$Entries;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/JsonReader;": [
        "Lcom/badlogic/gdx/utils/JsonReader;->startObject()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->bool()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->parse()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/JsonReader;->startArray()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->set()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->string()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->number()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->pop()V",
        "Lcom/badlogic/gdx/utils/JsonReader;->unescape()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/utils/Json$Serializer;": [
        "Lcom/badlogic/gdx/utils/Json$Serializer;->read()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Json$Serializer;->write()V"
    ],
    "Lcom/badlogic/gdx/utils/Json$Serializable;": [
        "Lcom/badlogic/gdx/utils/Json$Serializable;->read()V",
        "Lcom/badlogic/gdx/utils/Json$Serializable;->write()V"
    ],
    "Lcom/badlogic/gdx/utils/PooledLinkedList;": [
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->remove()V",
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->next()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->iter()V"
    ],
    "Lcom/badlogic/gdx/utils/ReflectionPool;": [
        "Lcom/badlogic/gdx/utils/ReflectionPool;->free()V"
    ],
    "Ljava/util/zip/ZipFile;": [
        "Ljava/util/zip/ZipFile;->getEntry()Ljava/util/zip/ZipEntry;",
        "Ljava/util/zip/ZipFile;->getInputStream()Ljava/io/InputStream;"
    ],
    "Ljava/util/zip/CRC32;": [
        "Ljava/util/zip/CRC32;->update()V",
        "Ljava/util/zip/CRC32;->getValue()J"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->write()V",
        "Ljava/io/FileOutputStream;->close()V",
        "Ljava/io/FileOutputStream;->flush()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectIntMap$Entries;": [
        "Lcom/badlogic/gdx/utils/ObjectIntMap$Entries;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/ObjectIntMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectIntMap$Keys;": [
        "Lcom/badlogic/gdx/utils/ObjectIntMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectIntMap$Values;": [
        "Lcom/badlogic/gdx/utils/ObjectIntMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/DataOutput;": [
        "Lcom/badlogic/gdx/utils/DataOutput;->write()V",
        "Lcom/badlogic/gdx/utils/DataOutput;->writeString_slow()V",
        "Lcom/badlogic/gdx/utils/DataOutput;->writeInt()I",
        "Lcom/badlogic/gdx/utils/DataOutput;->writeByte()V"
    ],
    "Lcom/badlogic/gdx/utils/XmlWriter;": [
        "Lcom/badlogic/gdx/utils/XmlWriter;->element()Lcom/badlogic/gdx/utils/XmlWriter;",
        "Lcom/badlogic/gdx/utils/XmlWriter;->text()Lcom/badlogic/gdx/utils/XmlWriter;",
        "Lcom/badlogic/gdx/utils/XmlWriter;->startElementContent()Z",
        "Lcom/badlogic/gdx/utils/XmlWriter;->close()V",
        "Lcom/badlogic/gdx/utils/XmlWriter;->attribute()Lcom/badlogic/gdx/utils/XmlWriter;",
        "Lcom/badlogic/gdx/utils/XmlWriter;->pop()Lcom/badlogic/gdx/utils/XmlWriter;",
        "Lcom/badlogic/gdx/utils/XmlWriter;->indent()V"
    ],
    "Lcom/badlogic/gdx/utils/BinaryHeap;": [
        "Lcom/badlogic/gdx/utils/BinaryHeap;->up()V",
        "Lcom/badlogic/gdx/utils/BinaryHeap;->down()V"
    ],
    "Lcom/badlogic/gdx/utils/LongArray;": [
        "Lcom/badlogic/gdx/utils/LongArray;->resize()[J",
        "Lcom/badlogic/gdx/utils/LongArray;->get()J",
        "Lcom/badlogic/gdx/utils/LongArray;->addAll()V",
        "Lcom/badlogic/gdx/utils/LongArray;->removeIndex()J"
    ],
    "Lcom/badlogic/gdx/utils/IntMap$Entries;": [
        "Lcom/badlogic/gdx/utils/IntMap$Entries;->reset()V",
        "Lcom/badlogic/gdx/utils/IntMap$Entries;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/IntMap$Keys;": [
        "Lcom/badlogic/gdx/utils/IntMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/ComparableTimSort;": [
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeForceCollapse()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeHi()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->gallopLeft()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->minRunLength()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeLo()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->reverseRange()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->countRunAndMakeAscending()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->rangeCheck()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->gallopRight()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->binarySort()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeAt()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->sort()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->ensureCapacity()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->doSort()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->pushRun()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeCollapse()V"
    ],
    "Lcom/badlogic/gdx/utils/TimSort;": [
        "Lcom/badlogic/gdx/utils/TimSort;->gallopLeft()I",
        "Lcom/badlogic/gdx/utils/TimSort;->ensureCapacity()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/TimSort;->doSort()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeHi()V",
        "Lcom/badlogic/gdx/utils/TimSort;->rangeCheck()V",
        "Lcom/badlogic/gdx/utils/TimSort;->gallopRight()I",
        "Lcom/badlogic/gdx/utils/TimSort;->countRunAndMakeAscending()I",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeCollapse()V",
        "Lcom/badlogic/gdx/utils/TimSort;->binarySort()V",
        "Lcom/badlogic/gdx/utils/TimSort;->minRunLength()I",
        "Lcom/badlogic/gdx/utils/TimSort;->pushRun()V",
        "Lcom/badlogic/gdx/utils/TimSort;->sort()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeLo()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeForceCollapse()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeAt()V",
        "Lcom/badlogic/gdx/utils/TimSort;->reverseRange()V"
    ],
    "Ljava/util/Comparator;": [
        "Ljava/util/Comparator;->compare()I"
    ],
    "Lcom/badlogic/gdx/utils/LittleEndianInputStream;": [
        "Lcom/badlogic/gdx/utils/LittleEndianInputStream;->readInt()I",
        "Lcom/badlogic/gdx/utils/LittleEndianInputStream;->readLong()J"
    ],
    "Ljava/lang/Comparable;": [
        "Ljava/lang/Comparable;->compareTo()I"
    ],
    "Lcom/badlogic/gdx/utils/GwtModuleGenerator;": [
        "Lcom/badlogic/gdx/utils/GwtModuleGenerator;->gatherJavaFiles()V"
    ],
    "Lcom/badlogic/gdx/utils/DataInput;": [
        "Lcom/badlogic/gdx/utils/DataInput;->read()I",
        "Lcom/badlogic/gdx/utils/DataInput;->readInt()I",
        "Lcom/badlogic/gdx/utils/DataInput;->readUtf8_slow()V"
    ],
    "Lcom/badlogic/gdx/utils/Pool$Poolable;": [
        "Lcom/badlogic/gdx/utils/Pool$Poolable;->reset()V"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Lcom/badlogic/gdx/utils/PauseableThread;": [
        "Lcom/badlogic/gdx/utils/PauseableThread;->onResume()V"
    ],
    "Lcom/badlogic/gdx/jnigen/AntPathMatcher;": [
        "Lcom/badlogic/gdx/jnigen/AntPathMatcher;->matchStrings()Z",
        "Lcom/badlogic/gdx/jnigen/AntPathMatcher;->tokenizeToStringArray()[Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/AntPathMatcher;->match()Z"
    ],
    "Lcom/badlogic/gdx/jnigen/FileDescriptor;": [
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->copyDirectory()V",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->list()[Lcom/badlogic/gdx/jnigen/FileDescriptor;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->write()Ljava/io/OutputStream;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->delete()Z",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->write()V",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->$SWITCH_TABLE$com$badlogic$gdx$jnigen$FileDescriptor$FileType()[I",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->read()Ljava/io/InputStream;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->writer()Ljava/io/Writer;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->exists()Z",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->copyFile()V",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->length()J",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->copyTo()V",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->isDirectory()Z",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->deleteDirectory()Z",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->path()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->extension()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->mkdirs()Z",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->name()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->parent()Lcom/badlogic/gdx/jnigen/FileDescriptor;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->writeString()V",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->file()Ljava/io/File;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->readString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->lastModified()J",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor;->child()Lcom/badlogic/gdx/jnigen/FileDescriptor;"
    ],
    "Lcom/badlogic/gdx/jnigen/AndroidNdkScriptGenerator;": [
        "Lcom/badlogic/gdx/jnigen/AndroidNdkScriptGenerator;->gatherSourceFiles()V",
        "Lcom/badlogic/gdx/jnigen/AndroidNdkScriptGenerator;->match()Z",
        "Lcom/badlogic/gdx/jnigen/AndroidNdkScriptGenerator;->generate()V"
    ],
    "Lcom/badlogic/gdx/jnigen/BuildTarget$TargetOs;": [
        "Lcom/badlogic/gdx/jnigen/BuildTarget$TargetOs;->toString()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;": [
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->isStatic()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->setNativeCode()V",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->hasDisposableArgument()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->getNativeCode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->setManual()V",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->isManual()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->getArguments()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->getEndIndex()I",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;->getClassName()Ljava/lang/CharSequence;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethod;": [
        "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethod;->getHead()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethod;->getArgumentTypes()[Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethod;->getReturnType()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$Argument;": [
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$Argument;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$Argument;->getType()Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;": [
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->getBufferCType()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->isPrimitiveArray()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->isBuffer()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->isString()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->isPlainOldDataType()Z",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->getJniType()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->getArrayCType()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;->isObject()Z"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JniSection;": [
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JniSection;->getNativeCode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JniSection;->setNativeCode()V",
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JniSection;->getStartIndex()I"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser;": [
        "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser;->parse()Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethodParserResult;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethodParserResult;": [
        "Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethodParserResult;->getMethods()Ljava/util/ArrayList;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser;": [
        "Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser;->parse()Ljava/util/ArrayList;"
    ],
    "Lcom/badlogic/gdx/jnigen/FileDescriptor$FileType;": [
        "Lcom/badlogic/gdx/jnigen/FileDescriptor$FileType;->ordinal()I",
        "Lcom/badlogic/gdx/jnigen/FileDescriptor$FileType;->values()[Lcom/badlogic/gdx/jnigen/FileDescriptor$FileType;"
    ],
    "Lcom/badlogic/gdx/jnigen/JniGenSharedLibraryLoader;": [
        "Lcom/badlogic/gdx/jnigen/JniGenSharedLibraryLoader;->getFromJar()Ljava/io/InputStream;",
        "Lcom/badlogic/gdx/jnigen/JniGenSharedLibraryLoader;->extractLibrary()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/JniGenSharedLibraryLoader;->crc()Ljava/lang/String;",
        "Lcom/badlogic/gdx/jnigen/JniGenSharedLibraryLoader;->loadLibrary()Z",
        "Lcom/badlogic/gdx/jnigen/JniGenSharedLibraryLoader;->load()V"
    ],
    "Lcom/badlogic/gdx/jnigen/test/MyJniClass;": [
        "Lcom/badlogic/gdx/jnigen/test/MyJniClass;->test()V"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;": [
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->createMethod()Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$JavaMethod;",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->getJavaMethods()V",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->sortMethodsAndSections()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->getOuterClass()Ljapa/parser/ast/body/TypeDeclaration;",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->getJniSections()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->getNativeCodeBodies()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->getArgumentType()Lcom/badlogic/gdx/jnigen/parsing/JavaMethodParser$ArgumentType;",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->alignMethodBodies()V",
        "Lcom/badlogic/gdx/jnigen/parsing/RobustJavaMethodParser;->getComments()Ljava/util/ArrayList;"
    ],
    "Lcom/badlogic/gdx/jnigen/parsing/JniHeaderCMethodParser;": [
        "Lcom/badlogic/gdx/jnigen/parsing/JniHeaderCMethodParser;->parseCMethod()Lcom/badlogic/gdx/jnigen/parsing/CMethodParser$CMethod;"
    ],
    "Lcom/adsdk/sdk/Log;": [
        "Lcom/adsdk/sdk/Log;->a()V",
        "Lcom/adsdk/sdk/Log;->isLoggingEnabled()Z"
    ],
    "Landroid/view/animation/AnimationSet;": [
        "Landroid/view/animation/AnimationSet;->addAnimation()V"
    ],
    "Landroid/view/animation/TranslateAnimation;": [
        "Landroid/view/animation/TranslateAnimation;->setDuration()V"
    ],
    "Ljava/net/NetworkInterface;": [
        "Ljava/net/NetworkInterface;->getNetworkInterfaces()Ljava/util/Enumeration;",
        "Ljava/net/NetworkInterface;->getInetAddresses()Ljava/util/Enumeration;"
    ],
    "Ljava/util/Enumeration;": [
        "Ljava/util/Enumeration;->hasMoreElements()Z",
        "Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;"
    ],
    "Ljava/net/SocketException;": [
        "Ljava/net/SocketException;->toString()Ljava/lang/String;"
    ],
    "Ljava/util/Scanner;": [
        "Ljava/util/Scanner;->useDelimiter()Ljava/util/Scanner;",
        "Ljava/util/Scanner;->next()Ljava/lang/String;"
    ],
    "Ljavax/xml/parsers/SAXParserFactory;": [
        "Ljavax/xml/parsers/SAXParserFactory;->newSAXParser()Ljavax/xml/parsers/SAXParser;",
        "Ljavax/xml/parsers/SAXParserFactory;->newInstance()Ljavax/xml/parsers/SAXParserFactory;"
    ],
    "Ljavax/xml/parsers/SAXParser;": [
        "Ljavax/xml/parsers/SAXParser;->getXMLReader()Lorg/xml/sax/XMLReader;"
    ],
    "Lorg/xml/sax/XMLReader;": [
        "Lorg/xml/sax/XMLReader;->parse()V",
        "Lorg/xml/sax/XMLReader;->setContentHandler()V"
    ],
    "Lcom/adsdk/sdk/RequestRichMediaAd;": [
        "Lcom/adsdk/sdk/RequestRichMediaAd;->convertStreamToString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/RequestRichMediaAd;->parse()Lcom/adsdk/sdk/video/RichMediaAd;",
        "Lcom/adsdk/sdk/RequestRichMediaAd;->parseTestString()Lcom/adsdk/sdk/video/RichMediaAd;"
    ],
    "Lorg/xml/sax/InputSource;": [
        "Lorg/xml/sax/InputSource;->setEncoding()V"
    ],
    "Lcom/adsdk/sdk/video/ResponseHandler;": [
        "Lcom/adsdk/sdk/video/ResponseHandler;->getBoolean()Z",
        "Lcom/adsdk/sdk/video/ResponseHandler;->getRichMediaAd()Lcom/adsdk/sdk/video/RichMediaAd;",
        "Lcom/adsdk/sdk/video/ResponseHandler;->getLong()J",
        "Lcom/adsdk/sdk/video/ResponseHandler;->setRichMediaAd()V",
        "Lcom/adsdk/sdk/video/ResponseHandler;->getInteger()I"
    ],
    "Lcom/adsdk/sdk/video/RichMediaAd;": [
        "Lcom/adsdk/sdk/video/RichMediaAd;->setAnimation()V",
        "Lcom/adsdk/sdk/video/RichMediaAd;->setTimestamp()V",
        "Lcom/adsdk/sdk/video/RichMediaAd;->getType()I",
        "Lcom/adsdk/sdk/video/RichMediaAd;->getInterstitial()Lcom/adsdk/sdk/video/InterstitialData;",
        "Lcom/adsdk/sdk/video/RichMediaAd;->getAnimation()I",
        "Lcom/adsdk/sdk/video/RichMediaAd;->setInterstitial()V",
        "Lcom/adsdk/sdk/video/RichMediaAd;->getTimestamp()J",
        "Lcom/adsdk/sdk/video/RichMediaAd;->getVideo()Lcom/adsdk/sdk/video/VideoData;",
        "Lcom/adsdk/sdk/video/RichMediaAd;->setVideo()V",
        "Lcom/adsdk/sdk/video/RichMediaAd;->setType()V"
    ],
    "Lcom/adsdk/sdk/AdRequest;": [
        "Lcom/adsdk/sdk/AdRequest;->toUri()Landroid/net/Uri;",
        "Lcom/adsdk/sdk/AdRequest;->setTimestamp()V",
        "Lcom/adsdk/sdk/AdRequest;->getProtocolVersion()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->getConnectionType()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->getUserAgent()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->getDeviceId()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->setDeviceId()V",
        "Lcom/adsdk/sdk/AdRequest;->getListAds()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->getTimestamp()J",
        "Lcom/adsdk/sdk/AdRequest;->setUserAgent()V",
        "Lcom/adsdk/sdk/AdRequest;->getPublisherId()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->setPublisherId()V",
        "Lcom/adsdk/sdk/AdRequest;->setConnectionType()V",
        "Lcom/adsdk/sdk/AdRequest;->setUserAgent2()V",
        "Lcom/adsdk/sdk/AdRequest;->setType()V",
        "Lcom/adsdk/sdk/AdRequest;->getRequestType()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->setLatitude()V",
        "Lcom/adsdk/sdk/AdRequest;->getIpAddress()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->getRequestURL()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->toString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->setDeviceId2()V",
        "Lcom/adsdk/sdk/AdRequest;->setLongitude()V",
        "Lcom/adsdk/sdk/AdRequest;->getUserAgent2()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->setIpAddress()V",
        "Lcom/adsdk/sdk/AdRequest;->getDeviceId2()Ljava/lang/String;",
        "Lcom/adsdk/sdk/AdRequest;->setRequestURL()V",
        "Lcom/adsdk/sdk/AdRequest;->getType()I"
    ],
    "Lcom/adsdk/sdk/Util;": [
        "Lcom/adsdk/sdk/Util;->getLocation()Landroid/location/Location;",
        "Lcom/adsdk/sdk/Util;->getDeviceId()Ljava/lang/String;",
        "Lcom/adsdk/sdk/Util;->getEnterAnimation()I",
        "Lcom/adsdk/sdk/Util;->buildUserAgent()Ljava/lang/String;",
        "Lcom/adsdk/sdk/Util;->getMemoryClass()I",
        "Lcom/adsdk/sdk/Util;->isNetworkAvailable()Z",
        "Lcom/adsdk/sdk/Util;->getLocalIpAddress()Ljava/lang/String;",
        "Lcom/adsdk/sdk/Util;->getExitAnimation()I",
        "Lcom/adsdk/sdk/Util;->getConnectionType()Ljava/lang/String;",
        "Lcom/adsdk/sdk/Util;->getDefaultUserAgentString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/Util;->getTelephonyDeviceId()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/video/TrackerService;": [
        "Lcom/adsdk/sdk/video/TrackerService;->startTracking()V",
        "Lcom/adsdk/sdk/video/TrackerService;->getNextUpdate()Lcom/adsdk/sdk/video/TrackEvent;",
        "Lcom/adsdk/sdk/video/TrackerService;->release()V",
        "Lcom/adsdk/sdk/video/TrackerService;->hasMoreUpdates()Z"
    ],
    "Lcom/adsdk/sdk/video/ResourceManager;": [
        "Lcom/adsdk/sdk/video/ResourceManager;->releaseInstance()V",
        "Lcom/adsdk/sdk/video/ResourceManager;->cancel()V",
        "Lcom/adsdk/sdk/video/ResourceManager;->getResource()Landroid/graphics/drawable/Drawable;",
        "Lcom/adsdk/sdk/video/ResourceManager;->fetchResource()V",
        "Lcom/adsdk/sdk/video/ResourceManager;->registerImageResource()V",
        "Lcom/adsdk/sdk/video/ResourceManager;->containsResource()Z",
        "Lcom/adsdk/sdk/video/ResourceManager;->getStaticResource()Landroid/graphics/drawable/Drawable;",
        "Lcom/adsdk/sdk/video/ResourceManager;->buildDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcom/adsdk/sdk/video/RichMediaActivity;": [
        "Lcom/adsdk/sdk/video/RichMediaActivity;->onHideCustomView()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->goBack()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->navigate()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->onShowCustomView()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->setResult()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->startActivity()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->setVolumeControlStream()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->finish()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->setRequestedOrientation()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->setContentView()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->requestWindowFeature()Z",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->getSystemService()Ljava/lang/Object;",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->setActivityAnimation()V",
        "Lcom/adsdk/sdk/video/RichMediaActivity;->getWindow()Landroid/view/Window;"
    ],
    "Lorg/w3c/dom/Document;": [
        "Lorg/w3c/dom/Document;->getElementsByTagName()Lorg/w3c/dom/NodeList;",
        "Lorg/w3c/dom/Document;->getDocumentElement()Lorg/w3c/dom/Element;"
    ],
    "Lorg/w3c/dom/NodeList;": [
        "Lorg/w3c/dom/NodeList;->item()Lorg/w3c/dom/Node;",
        "Lorg/w3c/dom/NodeList;->getLength()I"
    ],
    "Lorg/w3c/dom/Element;": [
        "Lorg/w3c/dom/Element;->getChildNodes()Lorg/w3c/dom/NodeList;",
        "Lorg/w3c/dom/Element;->getAttribute()Ljava/lang/String;",
        "Lorg/w3c/dom/Element;->normalize()V"
    ],
    "Lorg/w3c/dom/Node;": [
        "Lorg/w3c/dom/Node;->getNodeValue()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/RequestBannerAd;": [
        "Lcom/adsdk/sdk/RequestBannerAd;->getAttribute()Ljava/lang/String;",
        "Lcom/adsdk/sdk/RequestBannerAd;->convertStreamToString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/RequestBannerAd;->parse()Lcom/adsdk/sdk/BannerAd;",
        "Lcom/adsdk/sdk/RequestBannerAd;->getValue()Ljava/lang/String;",
        "Lcom/adsdk/sdk/RequestBannerAd;->getValueAsInt()I",
        "Lcom/adsdk/sdk/RequestBannerAd;->getInteger()I",
        "Lcom/adsdk/sdk/RequestBannerAd;->parseTestString()Lcom/adsdk/sdk/BannerAd;",
        "Lcom/adsdk/sdk/RequestBannerAd;->getValueAsBoolean()Z"
    ],
    "Ljavax/xml/parsers/DocumentBuilderFactory;": [
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newInstance()Ljavax/xml/parsers/DocumentBuilderFactory;",
        "Ljavax/xml/parsers/DocumentBuilderFactory;->newDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;"
    ],
    "Ljavax/xml/parsers/DocumentBuilder;": [
        "Ljavax/xml/parsers/DocumentBuilder;->parse()Lorg/w3c/dom/Document;"
    ],
    "Lcom/adsdk/sdk/BannerAd;": [
        "Lcom/adsdk/sdk/BannerAd;->getBannerWidth()I",
        "Lcom/adsdk/sdk/BannerAd;->getText()Ljava/lang/String;",
        "Lcom/adsdk/sdk/BannerAd;->getBannerHeight()I",
        "Lcom/adsdk/sdk/BannerAd;->setSkipPreflight()V",
        "Lcom/adsdk/sdk/BannerAd;->getClickUrl()Ljava/lang/String;",
        "Lcom/adsdk/sdk/BannerAd;->setRefresh()V",
        "Lcom/adsdk/sdk/BannerAd;->setUrlType()V",
        "Lcom/adsdk/sdk/BannerAd;->setText()V",
        "Lcom/adsdk/sdk/BannerAd;->getType()I",
        "Lcom/adsdk/sdk/BannerAd;->getRefresh()I",
        "Lcom/adsdk/sdk/BannerAd;->setSkipOverlay()V",
        "Lcom/adsdk/sdk/BannerAd;->setBannerWidth()V",
        "Lcom/adsdk/sdk/BannerAd;->setType()V",
        "Lcom/adsdk/sdk/BannerAd;->getImageUrl()Ljava/lang/String;",
        "Lcom/adsdk/sdk/BannerAd;->setBannerHeight()V",
        "Lcom/adsdk/sdk/BannerAd;->setClickType()V",
        "Lcom/adsdk/sdk/BannerAd;->getClickType()Lcom/adsdk/sdk/data/ClickType;",
        "Lcom/adsdk/sdk/BannerAd;->setClickUrl()V",
        "Lcom/adsdk/sdk/BannerAd;->setScale()V",
        "Lcom/adsdk/sdk/BannerAd;->setImageUrl()V"
    ],
    "Lcom/adsdk/sdk/data/ClickType;": [
        "Lcom/adsdk/sdk/data/ClickType;->getValue()Lcom/adsdk/sdk/data/ClickType;",
        "Lcom/adsdk/sdk/data/ClickType;->equals()Z",
        "Lcom/adsdk/sdk/data/ClickType;->values()[Lcom/adsdk/sdk/data/ClickType;",
        "Lcom/adsdk/sdk/data/ClickType;->name()Ljava/lang/String;"
    ],
    "Lorg/apache/http/params/HttpProtocolParams;": [
        "Lorg/apache/http/params/HttpProtocolParams;->setUserAgent()V"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getStatusCode()I"
    ],
    "Lcom/adsdk/sdk/RequestAd;": [
        "Lcom/adsdk/sdk/RequestAd;->parse()Ljava/lang/Object;",
        "Lcom/adsdk/sdk/RequestAd;->parseTestString()Ljava/lang/Object;"
    ],
    "Lcom/adsdk/sdk/mraid/MoPubView;": [
        "Lcom/adsdk/sdk/mraid/MoPubView;->adFailed()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->removeView()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->loadNativeSDK()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->setAdListener()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->getVisibility()I",
        "Lcom/adsdk/sdk/mraid/MoPubView;->destroy()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/mraid/MoPubView;->removeAllViews()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->addView()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->setHorizontalScrollBarEnabled()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->getLocationPrecision()I",
        "Lcom/adsdk/sdk/mraid/MoPubView;->adLoaded()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->getLocationAwareness()Lcom/adsdk/sdk/mraid/MoPubView$LocationAwareness;",
        "Lcom/adsdk/sdk/mraid/MoPubView;->setVerticalScrollBarEnabled()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->loadFailUrl()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->adClicked()V",
        "Lcom/adsdk/sdk/mraid/MoPubView;->adClosed()V"
    ],
    "Lcom/adsdk/sdk/mraid/AdView;": [
        "Lcom/adsdk/sdk/mraid/AdView;->getAutorefreshEnabled()Z",
        "Lcom/adsdk/sdk/mraid/AdView;->getAdUnitId()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/AdView;->addJavascriptInterface()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setKeywords()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setLocation()V",
        "Lcom/adsdk/sdk/mraid/AdView;->getClickthroughUrl()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/AdView;->setBackgroundColor()V",
        "Lcom/adsdk/sdk/mraid/AdView;->scheduleRefreshTimerIfEnabled()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setVerticalScrollbarOverlay()V",
        "Lcom/adsdk/sdk/mraid/AdView;->loadAd()V",
        "Lcom/adsdk/sdk/mraid/AdView;->disableScrollingAndZoom()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setHorizontalScrollBarEnabled()V",
        "Lcom/adsdk/sdk/mraid/AdView;->postHandlerRunnable()V",
        "Lcom/adsdk/sdk/mraid/AdView;->isDestroyed()Z",
        "Lcom/adsdk/sdk/mraid/AdView;->getAdWidth()I",
        "Lcom/adsdk/sdk/mraid/AdView;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/adsdk/sdk/mraid/AdView;->registerClick()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setAutorefreshEnabled()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setAdContentView()V",
        "Lcom/adsdk/sdk/mraid/AdView;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/mraid/AdView;->setHorizontalScrollbarOverlay()V",
        "Lcom/adsdk/sdk/mraid/AdView;->customEventDidFailToLoadAd()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setOnTouchListener()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setAdUnitId()V",
        "Lcom/adsdk/sdk/mraid/AdView;->getKeywords()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/AdView;->setClickthroughUrl()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setVerticalScrollBarEnabled()V",
        "Lcom/adsdk/sdk/mraid/AdView;->cancelRefreshTimer()V",
        "Lcom/adsdk/sdk/mraid/AdView;->adDidClose()V",
        "Lcom/adsdk/sdk/mraid/AdView;->getAdHeight()I",
        "Lcom/adsdk/sdk/mraid/AdView;->setWebViewScrollingEnabled()V",
        "Lcom/adsdk/sdk/mraid/AdView;->customEventDidLoadAd()V",
        "Lcom/adsdk/sdk/mraid/AdView;->cleanup()V",
        "Lcom/adsdk/sdk/mraid/AdView;->getLocation()Landroid/location/Location;",
        "Lcom/adsdk/sdk/mraid/AdView;->loadFailUrl()V",
        "Lcom/adsdk/sdk/mraid/AdView;->setWebViewClient()V",
        "Lcom/adsdk/sdk/mraid/AdView;->showBrowserForUrl()V",
        "Lcom/adsdk/sdk/mraid/AdView;->destroy()V",
        "Lcom/adsdk/sdk/mraid/AdView;->adAppeared()V",
        "Lcom/adsdk/sdk/mraid/AdView;->customEventActionWillBegin()V",
        "Lcom/adsdk/sdk/mraid/AdView;->loadUrl()V",
        "Lcom/adsdk/sdk/mraid/AdView;->getResponseString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/AdView;->adDidLoad()V",
        "Lcom/adsdk/sdk/mraid/AdView;->handleCustomIntentFromUri()V",
        "Lcom/adsdk/sdk/mraid/AdView;->adDidFail()V",
        "Lcom/adsdk/sdk/mraid/AdView;->addMoPubUriJavascriptInterface()V"
    ],
    "Lcom/adsdk/sdk/banner/BannerAdView;": [
        "Lcom/adsdk/sdk/banner/BannerAdView;->openLink()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->setLayer()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/banner/BannerAdView;->createWebView()Landroid/webkit/WebView;",
        "Lcom/adsdk/sdk/banner/BannerAdView;->notifyLoadAdSucceeded()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->showContent()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->notifyAdClicked()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->setLayoutParams()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->buildBannerView()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->setAdListener()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->doOpenUrl()V",
        "Lcom/adsdk/sdk/banner/BannerAdView;->addView()V"
    ],
    "Lcom/adsdk/sdk/banner/InAppWebView;": [
        "Lcom/adsdk/sdk/banner/InAppWebView;->setContentView()V",
        "Lcom/adsdk/sdk/banner/InAppWebView;->getIntent()Landroid/content/Intent;",
        "Lcom/adsdk/sdk/banner/InAppWebView;->getWindow()Landroid/view/Window;"
    ],
    "Lcom/adsdk/sdk/video/VideoData;": [
        "Lcom/adsdk/sdk/video/VideoData;->getCompleteEvents()Ljava/util/Vector;",
        "Lcom/adsdk/sdk/video/VideoData;->getStartEvents()Ljava/util/Vector;"
    ],
    "Lcom/adsdk/sdk/video/WebFrame;": [
        "Lcom/adsdk/sdk/video/WebFrame;->goBack()V",
        "Lcom/adsdk/sdk/video/WebFrame;->setLayer()V",
        "Lcom/adsdk/sdk/video/WebFrame;->setEnableZoom()V",
        "Lcom/adsdk/sdk/video/WebFrame;->attachController()V",
        "Lcom/adsdk/sdk/video/WebFrame;->setBackgroundColor()V",
        "Lcom/adsdk/sdk/video/WebFrame;->setOnPageLoadedListener()V",
        "Lcom/adsdk/sdk/video/WebFrame;->getResources()Landroid/content/res/Resources;",
        "Lcom/adsdk/sdk/video/WebFrame;->getUserAgentString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/video/WebFrame;->setOnClickListener()V",
        "Lcom/adsdk/sdk/video/WebFrame;->canGoBack()Z",
        "Lcom/adsdk/sdk/video/WebFrame;->addView()V",
        "Lcom/adsdk/sdk/video/WebFrame;->loadUrl()V",
        "Lcom/adsdk/sdk/video/WebFrame;->onTouchEvent()Z",
        "Lcom/adsdk/sdk/video/WebFrame;->setMarkup()V",
        "Lcom/adsdk/sdk/video/WebFrame;->getWebView()Landroid/webkit/WebView;",
        "Lcom/adsdk/sdk/video/WebFrame;->setVisibility()V"
    ],
    "Lcom/adsdk/sdk/video/InterstitialController;": [
        "Lcom/adsdk/sdk/video/InterstitialController;->show()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->buildNavigationBarView()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->addView()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->setProgress()I",
        "Lcom/adsdk/sdk/video/InterstitialController;->handleMessage()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->setOrientation()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->updateBackForward()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->setOnResetAutocloseListener()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->onTouchEvent()Z",
        "Lcom/adsdk/sdk/video/InterstitialController;->setBrowserView()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->hide()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->setLayoutParams()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->canToggle()Z",
        "Lcom/adsdk/sdk/video/InterstitialController;->stringForTime()Ljava/lang/String;",
        "Lcom/adsdk/sdk/video/InterstitialController;->setBrowser()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->getResources()Landroid/content/res/Resources;",
        "Lcom/adsdk/sdk/video/InterstitialController;->getWidth()I",
        "Lcom/adsdk/sdk/video/InterstitialController;->resetAutoclose()V",
        "Lcom/adsdk/sdk/video/InterstitialController;->setWeightSum()V"
    ],
    "Lcom/adsdk/sdk/video/WebViewClient;": [
        "Lcom/adsdk/sdk/video/WebViewClient;->getAllowedUrl()Ljava/lang/String;",
        "Lcom/adsdk/sdk/video/WebViewClient;->setAllowedUrl()V",
        "Lcom/adsdk/sdk/video/WebViewClient;->getFinishedLoadingTime()J",
        "Lcom/adsdk/sdk/video/WebViewClient;->setOnPageLoadedListener()V"
    ],
    "Lcom/adsdk/sdk/video/WebFrame$LoadUrlTask;": [
        "Lcom/adsdk/sdk/video/WebFrame$LoadUrlTask;->execute()Landroid/os/AsyncTask;"
    ],
    "Landroid/webkit/WebChromeClient;": [
        "Landroid/webkit/WebChromeClient;->onShowCustomView()V",
        "Landroid/webkit/WebChromeClient;->onHideCustomView()V"
    ],
    "Lcom/adsdk/sdk/video/RequestVideoList;": [
        "Lcom/adsdk/sdk/video/RequestVideoList;->parse()Ljava/util/HashMap;"
    ],
    "Lcom/adsdk/sdk/video/NavIcon;": [
        "Lcom/adsdk/sdk/video/NavIcon;->setOnClickListener()V",
        "Lcom/adsdk/sdk/video/NavIcon;->setImageDrawable()V",
        "Lcom/adsdk/sdk/video/NavIcon;->setVisibility()V",
        "Lcom/adsdk/sdk/video/NavIcon;->setPadding()V",
        "Lcom/adsdk/sdk/video/NavIcon;->getResources()Landroid/content/res/Resources;",
        "Lcom/adsdk/sdk/video/NavIcon;->fetchImage()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcom/adsdk/sdk/video/AutoResizeTextView;": [
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getPaddingTop()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->resizeText()V",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getPaddingRight()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->setText()V",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getCompoundPaddingLeft()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->resetTextSize()V",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getText()Ljava/lang/CharSequence;",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->requestLayout()V",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getPaddingLeft()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getPaint()Landroid/text/TextPaint;",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getCompoundPaddingTop()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getWidth()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getHeight()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getTextHeight()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->invalidate()V",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getCompoundPaddingBottom()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getCompoundPaddingRight()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getPaddingBottom()I",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->setLineSpacing()V",
        "Lcom/adsdk/sdk/video/AutoResizeTextView;->getTextSize()F"
    ],
    "Landroid/text/TextPaint;": [
        "Landroid/text/TextPaint;->setTextSize()V",
        "Landroid/text/TextPaint;->getTextSize()F",
        "Landroid/text/TextPaint;->measureText()F"
    ],
    "Landroid/text/StaticLayout;": [
        "Landroid/text/StaticLayout;->getLineWidth()F",
        "Landroid/text/StaticLayout;->getLineForVertical()I",
        "Landroid/text/StaticLayout;->getHeight()I",
        "Landroid/text/StaticLayout;->getLineEnd()I",
        "Landroid/text/StaticLayout;->draw()V",
        "Landroid/text/StaticLayout;->getLineCount()I",
        "Landroid/text/StaticLayout;->getLineStart()I"
    ],
    "Lcom/adsdk/sdk/video/AutoResizeTextView$OnTextResizeListener;": [
        "Lcom/adsdk/sdk/video/AutoResizeTextView$OnTextResizeListener;->onTextResize()V"
    ],
    "Lcom/adsdk/sdk/video/MediaController;": [
        "Lcom/adsdk/sdk/video/MediaController;->refreshProgress()V",
        "Lcom/adsdk/sdk/video/MediaController;->setEnabled()V",
        "Lcom/adsdk/sdk/video/MediaController;->updateReplay()V",
        "Lcom/adsdk/sdk/video/MediaController;->stringForTime()Ljava/lang/String;",
        "Lcom/adsdk/sdk/video/MediaController;->setOnReplayListener()V",
        "Lcom/adsdk/sdk/video/MediaController;->getResources()Landroid/content/res/Resources;",
        "Lcom/adsdk/sdk/video/MediaController;->canToggle()Z",
        "Lcom/adsdk/sdk/video/MediaController;->setVisibility()V",
        "Lcom/adsdk/sdk/video/MediaController;->addView()V",
        "Lcom/adsdk/sdk/video/MediaController;->replay()V",
        "Lcom/adsdk/sdk/video/MediaController;->setProgress()I",
        "Lcom/adsdk/sdk/video/MediaController;->setOnUnpauseListener()V",
        "Lcom/adsdk/sdk/video/MediaController;->buildNavigationBarView()V",
        "Lcom/adsdk/sdk/video/MediaController;->setMediaPlayer()V",
        "Lcom/adsdk/sdk/video/MediaController;->updatePausePlay()V",
        "Lcom/adsdk/sdk/video/MediaController;->hide()V",
        "Lcom/adsdk/sdk/video/MediaController;->show()V",
        "Lcom/adsdk/sdk/video/MediaController;->handleMessage()V",
        "Lcom/adsdk/sdk/video/MediaController;->setLayoutParams()V",
        "Lcom/adsdk/sdk/video/MediaController;->requestLayout()V",
        "Lcom/adsdk/sdk/video/MediaController;->onPause()V",
        "Lcom/adsdk/sdk/video/MediaController;->setOnPauseListener()V",
        "Lcom/adsdk/sdk/video/MediaController;->doPauseResume()V",
        "Lcom/adsdk/sdk/video/MediaController;->toggle()V",
        "Lcom/adsdk/sdk/video/MediaController;->onStart()V"
    ],
    "Landroid/widget/MediaController$MediaPlayerControl;": [
        "Landroid/widget/MediaController$MediaPlayerControl;->isPlaying()Z",
        "Landroid/widget/MediaController$MediaPlayerControl;->pause()V",
        "Landroid/widget/MediaController$MediaPlayerControl;->getDuration()I",
        "Landroid/widget/MediaController$MediaPlayerControl;->seekTo()V",
        "Landroid/widget/MediaController$MediaPlayerControl;->getCurrentPosition()I",
        "Landroid/widget/MediaController$MediaPlayerControl;->start()V"
    ],
    "Lcom/adsdk/sdk/video/MediaController$OnPauseListener;": [
        "Lcom/adsdk/sdk/video/MediaController$OnPauseListener;->onVideoPause()V"
    ],
    "Lcom/adsdk/sdk/video/MediaController$OnUnpauseListener;": [
        "Lcom/adsdk/sdk/video/MediaController$OnUnpauseListener;->onVideoUnpause()V"
    ],
    "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;": [
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setOnClickListener()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setVisibility()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setPadding()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setBackgroundDrawable()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setAdjustViewBounds()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setMeasuredDimension()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setImageDrawable()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageViewWidth;->setEnabled()V"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->size()I",
        "Ljava/util/Vector;->add()Z",
        "Ljava/util/Vector;->get()Ljava/lang/Object;",
        "Ljava/util/Vector;->isEmpty()Z"
    ],
    "Lcom/adsdk/sdk/video/MediaController$ResourceHandler;": [
        "Lcom/adsdk/sdk/video/MediaController$ResourceHandler;->removeMessages()V",
        "Lcom/adsdk/sdk/video/MediaController$ResourceHandler;->obtainMessage()Landroid/os/Message;",
        "Lcom/adsdk/sdk/video/MediaController$ResourceHandler;->sendMessageDelayed()Z"
    ],
    "Ljava/util/Formatter;": [
        "Ljava/util/Formatter;->toString()Ljava/lang/String;",
        "Ljava/util/Formatter;->format()Ljava/util/Formatter;"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->defaultFromStyle()Landroid/graphics/Typeface;"
    ],
    "Lcom/adsdk/sdk/video/MediaController$OnReplayListener;": [
        "Lcom/adsdk/sdk/video/MediaController$OnReplayListener;->onVideoReplay()V"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->abort()V"
    ],
    "Ljava/io/OutputStreamWriter;": [
        "Ljava/io/OutputStreamWriter;->flush()V",
        "Ljava/io/OutputStreamWriter;->write()V"
    ],
    "Lcom/adsdk/sdk/video/ResourceManager$FetchImageTask;": [
        "Lcom/adsdk/sdk/video/ResourceManager$FetchImageTask;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/adsdk/sdk/video/SDKVideoView;": [
        "Lcom/adsdk/sdk/video/SDKVideoView;->toggleMediaControlsVisiblity()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setVideoURI()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setOnPreparedListener()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->start()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setFocusable()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setVideoDisplaySize()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/adsdk/sdk/video/SDKVideoView;->release()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setOnCompletionListener()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->pause()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->attachMediaController()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->getCurrentPosition()I",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setVideoPath()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->seekTo()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->requestFocus()Z",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setVisibility()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setFocusableInTouchMode()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->destroy()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setMeasuredDimension()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setMediaController()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->stopPlayback()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setOnInfoListener()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->isInPlaybackState()Z",
        "Lcom/adsdk/sdk/video/SDKVideoView;->getDefaultSize()I",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setOnTimeEventListener()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setOnStartListener()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->openVideo()V",
        "Lcom/adsdk/sdk/video/SDKVideoView;->setOnErrorListener()V"
    ],
    "Landroid/media/MediaPlayer$OnErrorListener;": [
        "Landroid/media/MediaPlayer$OnErrorListener;->onError()Z"
    ],
    "Landroid/os/ConditionVariable;": [
        "Landroid/os/ConditionVariable;->open()V"
    ],
    "Landroid/view/SurfaceView;": [
        "Landroid/view/SurfaceView;->onKeyDown()Z",
        "Landroid/view/SurfaceView;->onDetachedFromWindow()V"
    ],
    "Lcom/adsdk/sdk/video/SDKVideoView$OnStartListener;": [
        "Lcom/adsdk/sdk/video/SDKVideoView$OnStartListener;->onVideoStart()V"
    ],
    "Landroid/webkit/WebChromeClient$CustomViewCallback;": [
        "Landroid/webkit/WebChromeClient$CustomViewCallback;->onCustomViewHidden()V"
    ],
    "Lcom/adsdk/sdk/video/AspectRatioImageView;": [
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->dip2pixel()F",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->getConstrainedHeight()I",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->setMeasuredDimension()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->setLayoutParams()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->fillParent()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->ensureConstraintMetAndSet()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->setImageDrawable()V",
        "Lcom/adsdk/sdk/video/AspectRatioImageView;->getDrawable()Landroid/graphics/drawable/Drawable;"
    ],
    "Lcom/adsdk/sdk/video/WebViewClient$OnPageLoadedListener;": [
        "Lcom/adsdk/sdk/video/WebViewClient$OnPageLoadedListener;->onPageLoaded()V"
    ],
    "Lcom/adsdk/sdk/video/InterstitialController$BrowserControl;": [
        "Lcom/adsdk/sdk/video/InterstitialController$BrowserControl;->canGoBack()Z",
        "Lcom/adsdk/sdk/video/InterstitialController$BrowserControl;->getTime()I",
        "Lcom/adsdk/sdk/video/InterstitialController$BrowserControl;->getPageTitle()Ljava/lang/String;",
        "Lcom/adsdk/sdk/video/InterstitialController$BrowserControl;->canGoForward()Z",
        "Lcom/adsdk/sdk/video/InterstitialController$BrowserControl;->reload()V"
    ],
    "Lcom/adsdk/sdk/video/InterstitialController$OnReloadListener;": [
        "Lcom/adsdk/sdk/video/InterstitialController$OnReloadListener;->onInterstitialReload()V"
    ],
    "Lcom/adsdk/sdk/video/InterstitialController$OnResetAutocloseListener;": [
        "Lcom/adsdk/sdk/video/InterstitialController$OnResetAutocloseListener;->onResetAutoclose()V"
    ],
    "Ljava/io/CharArrayWriter;": [
        "Ljava/io/CharArrayWriter;->reset()V",
        "Ljava/io/CharArrayWriter;->write()V",
        "Ljava/io/CharArrayWriter;->toString()Ljava/lang/String;"
    ],
    "Lorg/xml/sax/Attributes;": [
        "Lorg/xml/sax/Attributes;->getValue()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/video/TrackerData;": [
        "Lcom/adsdk/sdk/video/TrackerData;->reset()V"
    ],
    "Ljava/util/Queue;": [
        "Ljava/util/Queue;->poll()Ljava/lang/Object;",
        "Ljava/util/Queue;->contains()Z",
        "Ljava/util/Queue;->isEmpty()Z",
        "Ljava/util/Queue;->peek()Ljava/lang/Object;",
        "Ljava/util/Queue;->size()I",
        "Ljava/util/Queue;->add()Z"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView;": [
        "Lcom/adsdk/sdk/mraid/MraidView;->setVisibility()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getContext()Landroid/content/Context;",
        "Lcom/adsdk/sdk/mraid/MraidView;->setOnFailureListener()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getSettings()Landroid/webkit/WebSettings;",
        "Lcom/adsdk/sdk/mraid/MraidView;->fireNativeCommandCompleteEvent()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getWidth()I",
        "Lcom/adsdk/sdk/mraid/MraidView;->setOnCloseListener()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setVerticalScrollBarEnabled()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setOnReadyListener()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->loadHtmlData()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->injectJavaScript()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setOnTouchListener()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setHorizontalScrollBarEnabled()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->fireChangeEventForProperty()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->fireChangeEventForProperties()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setScrollContainer()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->loadDataWithBaseURL()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getOnCloseButtonStateChangeListener()Lcom/adsdk/sdk/mraid/MraidView$OnCloseButtonStateChangeListener;",
        "Lcom/adsdk/sdk/mraid/MraidView;->destroy()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setWebViewClient()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getRootView()Landroid/view/View;",
        "Lcom/adsdk/sdk/mraid/MraidView;->getBrowserController()Lcom/adsdk/sdk/mraid/MraidBrowserController;",
        "Lcom/adsdk/sdk/mraid/MraidView;->getOnExpandListener()Lcom/adsdk/sdk/mraid/MraidView$OnExpandListener;",
        "Lcom/adsdk/sdk/mraid/MraidView;->fireErrorEvent()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setOnCloseButtonStateChange()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getDisplayController()Lcom/adsdk/sdk/mraid/MraidDisplayController;",
        "Lcom/adsdk/sdk/mraid/MraidView;->requestLayout()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setOnExpandListener()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setBackgroundColor()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->getParent()Landroid/view/ViewParent;",
        "Lcom/adsdk/sdk/mraid/MraidView;->getOnOpenListener()Lcom/adsdk/sdk/mraid/MraidView$OnOpenListener;",
        "Lcom/adsdk/sdk/mraid/MraidView;->getHeight()I",
        "Lcom/adsdk/sdk/mraid/MraidView;->loadUrl()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->setWebChromeClient()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->notifyOnFailureListener()V",
        "Lcom/adsdk/sdk/mraid/MraidView;->tryCommand()Z",
        "Lcom/adsdk/sdk/mraid/MraidView;->getOnCloseListener()Lcom/adsdk/sdk/mraid/MraidView$OnCloseListener;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;": [
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$9()Lcom/adsdk/sdk/mraid/MraidView$OnCloseButtonStateChangeListener;",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$6()Lcom/adsdk/sdk/mraid/MraidView$OnReadyListener;",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$11()Lcom/adsdk/sdk/mraid/MraidView$OnOpenListener;",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$3()V",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$8()V",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$2()Lcom/adsdk/sdk/mraid/MraidView$OnExpandListener;",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$4()Lcom/adsdk/sdk/mraid/MraidView$OnCloseListener;",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$1()V",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$10()V",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$5()V",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$7()V",
        "Lcom/adsdk/sdk/mraid/MraidView$MraidListenerInfo;->access$0()Lcom/adsdk/sdk/mraid/MraidView$OnFailureListener;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$OnFailureListener;": [
        "Lcom/adsdk/sdk/mraid/MraidView$OnFailureListener;->onFailure()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidCommandRegistry;": [
        "Lcom/adsdk/sdk/mraid/MraidCommandRegistry;->createCommand()Lcom/adsdk/sdk/mraid/MraidCommand;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidCommand;": [
        "Lcom/adsdk/sdk/mraid/MraidCommand;->execute()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidDisplayController;": [
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->getDisplayRotation()I",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->createExpansionViewContainer()Landroid/view/ViewGroup;",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->useCustomClose()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->expand()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->setNativeCloseButtonEnabled()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->destroy()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->swapViewWithPlaceholderView()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->resetViewToDefaultState()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->setOrientationLockEnabled()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->getView()Lcom/adsdk/sdk/mraid/MraidView;",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->onOrientationChanged()V",
        "Lcom/adsdk/sdk/mraid/MraidDisplayController;->close()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidProperty;": [
        "Lcom/adsdk/sdk/mraid/MraidProperty;->toString()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/MraidProperty;->toJsonPair()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/MraidProperty;->sanitize()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidBrowserController;": [
        "Lcom/adsdk/sdk/mraid/MraidBrowserController;->getView()Lcom/adsdk/sdk/mraid/MraidView;",
        "Lcom/adsdk/sdk/mraid/MraidBrowserController;->open()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$OnOpenListener;": [
        "Lcom/adsdk/sdk/mraid/MraidView$OnOpenListener;->onOpen()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$PlacementType;": [
        "Lcom/adsdk/sdk/mraid/MraidView$PlacementType;->toString()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$ViewState;": [
        "Lcom/adsdk/sdk/mraid/MraidView$ViewState;->toString()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidCommandUseCustomClose;": [
        "Lcom/adsdk/sdk/mraid/MraidCommandUseCustomClose;->getBooleanFromParamsForKey()Z"
    ],
    "Landroid/webkit/WebViewDatabase;": [
        "Landroid/webkit/WebViewDatabase;->getInstance()Landroid/webkit/WebViewDatabase;"
    ],
    "Lcom/adsdk/sdk/AdListener;": [
        "Lcom/adsdk/sdk/AdListener;->adClosed()V",
        "Lcom/adsdk/sdk/AdListener;->noAdFound()V",
        "Lcom/adsdk/sdk/AdListener;->adClicked()V",
        "Lcom/adsdk/sdk/AdListener;->adLoadSucceeded()V",
        "Lcom/adsdk/sdk/AdListener;->adShown()V"
    ],
    "Lcom/adsdk/sdk/mraid/BaseAdapter;": [
        "Lcom/adsdk/sdk/mraid/BaseAdapter;->getAdapterForType()Lcom/adsdk/sdk/mraid/BaseAdapter;",
        "Lcom/adsdk/sdk/mraid/BaseAdapter;->classStringForAdapterType()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/BaseAdapter;->classForAdapterType()Ljava/lang/Class;",
        "Lcom/adsdk/sdk/mraid/BaseAdapter;->invalidate()V",
        "Lcom/adsdk/sdk/mraid/BaseAdapter;->loadAd()V"
    ],
    "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter$BaseInterstitialAdapterListener;": [
        "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter$BaseInterstitialAdapterListener;->onNativeInterstitialLoaded()V"
    ],
    "Lcom/adsdk/sdk/mraid/MoPubInterstitial;": [
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial;->getActivity()Landroid/app/Activity;",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial;->showNativeInterstitial()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial;->$SWITCH_TABLE$com$adsdk$sdk$mraid$MoPubInterstitial$InterstitialState()[I"
    ],
    "Lcom/adsdk/sdk/mraid/MraidScreenSizeProperty;": [
        "Lcom/adsdk/sdk/mraid/MraidScreenSizeProperty;->createWithSize()Lcom/adsdk/sdk/mraid/MraidScreenSizeProperty;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidStateProperty;": [
        "Lcom/adsdk/sdk/mraid/MraidStateProperty;->createWithViewState()Lcom/adsdk/sdk/mraid/MraidStateProperty;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$OnCloseListener;": [
        "Lcom/adsdk/sdk/mraid/MraidView$OnCloseListener;->onClose()V"
    ],
    "Ljava/lang/IllegalArgumentException;": [
        "Ljava/lang/IllegalArgumentException;->getMessage()Ljava/lang/String;"
    ],
    "Landroid/webkit/URLUtil;": [
        "Landroid/webkit/URLUtil;->isValidUrl()Z"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$OnExpandListener;": [
        "Lcom/adsdk/sdk/mraid/MraidView$OnExpandListener;->onExpand()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidViewableProperty;": [
        "Lcom/adsdk/sdk/mraid/MraidViewableProperty;->createWithViewable()Lcom/adsdk/sdk/mraid/MraidViewableProperty;"
    ],
    "Landroid/graphics/drawable/StateListDrawable;": [
        "Landroid/graphics/drawable/StateListDrawable;->addState()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidView$OnCloseButtonStateChangeListener;": [
        "Lcom/adsdk/sdk/mraid/MraidView$OnCloseButtonStateChangeListener;->onCloseButtonStateChange()V"
    ],
    "Lcom/adsdk/sdk/mraid/MoPubInterstitial$InterstitialState;": [
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$InterstitialState;->ordinal()I",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$InterstitialState;->values()[Lcom/adsdk/sdk/mraid/MoPubInterstitial$InterstitialState;"
    ],
    "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;": [
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->getKeywords()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->setLocationAwareness()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->setAdUnitId()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->setAdListener()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->getLocation()Landroid/location/Location;",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->getLocationAwareness()Lcom/adsdk/sdk/mraid/MoPubView$LocationAwareness;",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->loadFailUrl()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->registerClick()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->setKeywords()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->setLocationPrecision()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->destroy()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->getLocationPrecision()I",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialView;->loadAd()V"
    ],
    "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter;": [
        "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter;->classForAdapterType()Ljava/lang/Class;",
        "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter;->invalidate()V",
        "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter;->classStringForAdapterType()Ljava/lang/String;",
        "Lcom/adsdk/sdk/mraid/BaseInterstitialAdapter;->showInterstitial()V"
    ],
    "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialListener;": [
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialListener;->OnInterstitialFailed()V",
        "Lcom/adsdk/sdk/mraid/MoPubInterstitial$MoPubInterstitialListener;->OnInterstitialLoaded()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidCommandRegistry$MraidCommandFactory;": [
        "Lcom/adsdk/sdk/mraid/MraidCommandRegistry$MraidCommandFactory;->create()Lcom/adsdk/sdk/mraid/MraidCommand;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidActivity;": [
        "Lcom/adsdk/sdk/mraid/MraidActivity;->getIntent()Landroid/content/Intent;"
    ],
    "Lcom/adsdk/sdk/mraid/BaseActivity;": [
        "Lcom/adsdk/sdk/mraid/BaseActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/adsdk/sdk/mraid/BaseActivity;->getWindow()Landroid/view/Window;",
        "Lcom/adsdk/sdk/mraid/BaseActivity;->onDestroy()V",
        "Lcom/adsdk/sdk/mraid/BaseActivity;->showInterstitialCloseButton()V",
        "Lcom/adsdk/sdk/mraid/BaseActivity;->requestWindowFeature()Z",
        "Lcom/adsdk/sdk/mraid/BaseActivity;->getAdView()Landroid/view/View;",
        "Lcom/adsdk/sdk/mraid/BaseActivity;->setContentView()V"
    ],
    "Lcom/adsdk/sdk/mraid/MraidAdapter;": [
        "Lcom/adsdk/sdk/mraid/MraidAdapter;->isInvalidated()Z"
    ],
    "Lcom/adsdk/sdk/mraid/MraidCommandExpand;": [
        "Lcom/adsdk/sdk/mraid/MraidCommandExpand;->getIntFromParamsForKey()I",
        "Lcom/adsdk/sdk/mraid/MraidCommandExpand;->getBooleanFromParamsForKey()Z",
        "Lcom/adsdk/sdk/mraid/MraidCommandExpand;->getStringFromParamsForKey()Ljava/lang/String;"
    ],
    "Lcom/adsdk/sdk/mraid/MraidCommandOpen;": [
        "Lcom/adsdk/sdk/mraid/MraidCommandOpen;->getStringFromParamsForKey()Ljava/lang/String;"
    ],
    "Lcom/blazen/catchgift/android/InsertPlayerIdOperation;": [
        "Lcom/blazen/catchgift/android/InsertPlayerIdOperation;->onPostExecute()V",
        "Lcom/blazen/catchgift/android/InsertPlayerIdOperation;->doInBackground()Ljava/lang/String;"
    ],
    "Ljie/java/android/boxcatcher/BCGame;": [
        "Ljie/java/android/boxcatcher/BCGame;->loadNewAdd()V",
        "Ljie/java/android/boxcatcher/BCGame;->setParameter()V",
        "Ljie/java/android/boxcatcher/BCGame;->dispose()V",
        "Ljie/java/android/boxcatcher/BCGame;->showSmartwall()V",
        "Ljie/java/android/boxcatcher/BCGame;->showAdd()V",
        "Ljie/java/android/boxcatcher/BCGame;->upgradeHp()V",
        "Ljie/java/android/boxcatcher/BCGame;->showMinimob()V",
        "Ljie/java/android/boxcatcher/BCGame;->setDatabaseParameters()V",
        "Ljie/java/android/boxcatcher/BCGame;->getParameter()I",
        "Ljie/java/android/boxcatcher/BCGame;->increaseGameNumber()V",
        "Ljie/java/android/boxcatcher/BCGame;->setPlayingScreen()V",
        "Ljie/java/android/boxcatcher/BCGame;->setScreen()V",
        "Ljie/java/android/boxcatcher/BCGame;->setAchievementAcomplished()V",
        "Ljie/java/android/boxcatcher/BCGame;->setDataSource()V",
        "Ljie/java/android/boxcatcher/BCGame;->getMaterialManager()Ljie/java/android/boxcatcher/MaterialManager;",
        "Ljie/java/android/boxcatcher/BCGame;->getScoresFromDatabase()Ljava/util/List;",
        "Ljie/java/android/boxcatcher/BCGame;->destroyAdd()V",
        "Ljie/java/android/boxcatcher/BCGame;->setMainMenuScreen()V",
        "Ljie/java/android/boxcatcher/BCGame;->setMoney()V"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->printStackTrace()V"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->printStackTrace()V"
    ],
    "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;": [
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->runOnUiThread()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->safeScoreToDatabase()Ljava/lang/Integer;",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->createRequest()Lcom/facebook/Request;",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->requestMyAppFacebookFriendsScores()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->sendRequestDialog()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->showScores()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->getScoresFromDatabase()Ljava/util/List;",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->getResults()Ljava/util/List;",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->startActivity()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->openActiveSession()Lcom/facebook/Session;",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->addHighscore()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->openURL()V",
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;->getWindow()Landroid/view/Window;"
    ],
    "Lcom/blazen/catchgift/android/ActionResolver;": [
        "Lcom/blazen/catchgift/android/ActionResolver;->getmContext()Lcom/blazen/catchgift/android/VeryAngryRobotsActivity;",
        "Lcom/blazen/catchgift/android/ActionResolver;->showScoreloop()V",
        "Lcom/blazen/catchgift/android/ActionResolver;->submitScore()V"
    ],
    "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity$GetFacebookScoresOperation;": [
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity$GetFacebookScoresOperation;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity$LongOperation;": [
        "Lcom/blazen/catchgift/android/VeryAngryRobotsActivity$LongOperation;->execute()Landroid/os/AsyncTask;"
    ],
    "Lcom/facebook/widget/WebDialog$RequestsDialogBuilder;": [
        "Lcom/facebook/widget/WebDialog$RequestsDialogBuilder;->build()Lcom/facebook/widget/WebDialog;",
        "Lcom/facebook/widget/WebDialog$RequestsDialogBuilder;->setOnCompleteListener()Lcom/facebook/widget/WebDialog$BuilderBase;"
    ],
    "Lcom/blazen/general/CameraHelper;": [
        "Lcom/blazen/general/CameraHelper;->bestDensity()F",
        "Lcom/blazen/general/CameraHelper;->sizeToDensity()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/blazen/general/CameraHelper;->createCamera2()Lcom/badlogic/gdx/graphics/OrthographicCamera;",
        "Lcom/blazen/general/CameraHelper;->createCamera()Lcom/badlogic/gdx/graphics/OrthographicCamera;",
        "Lcom/blazen/general/CameraHelper;->viewportSize()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/blazen/general/MathUtils;": [
        "Lcom/blazen/general/MathUtils;->max()I",
        "Lcom/blazen/general/MathUtils;->abs()F",
        "Lcom/blazen/general/MathUtils;->min()I",
        "Lcom/blazen/general/MathUtils;->min()F",
        "Lcom/blazen/general/MathUtils;->max()F"
    ],
    "Lcom/blazen/general/Config;": [
        "Lcom/blazen/general/Config;->instance()Ljava/util/Properties;",
        "Lcom/blazen/general/Config;->asInt()I",
        "Lcom/blazen/general/Config;->asString()Ljava/lang/String;",
        "Lcom/blazen/general/Config;->asFloat()F"
    ],
    "Lcom/blazen/vampire/Assets;": [
        "Lcom/blazen/vampire/Assets;->loadSound()Lcom/badlogic/gdx/audio/Sound;",
        "Lcom/blazen/vampire/Assets;->load()V",
        "Lcom/blazen/vampire/Assets;->loadAndGetTutorialHelp()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/blazen/vampire/Assets;->loadFonts()V",
        "Lcom/blazen/vampire/Assets;->toWidth()F",
        "Lcom/blazen/vampire/Assets;->buttonParamsBasedOn480320()V",
        "Lcom/blazen/vampire/Assets;->createAnimations()V",
        "Lcom/blazen/vampire/Assets;->loadFeedCat()V",
        "Lcom/blazen/vampire/Assets;->loadTextures()V",
        "Lcom/blazen/vampire/Assets;->toHeight()F",
        "Lcom/blazen/vampire/Assets;->create()V",
        "Lcom/blazen/vampire/Assets;->loadSmartwall()V",
        "Lcom/blazen/vampire/Assets;->setKremlinFont()V",
        "Lcom/blazen/vampire/Assets;->loadZul()V",
        "Lcom/blazen/vampire/Assets;->disposeMenuTextures()V",
        "Lcom/blazen/vampire/Assets;->loadMenu()V",
        "Lcom/blazen/vampire/Assets;->playSound()V",
        "Lcom/blazen/vampire/Assets;->loadHumans()V",
        "Lcom/blazen/vampire/Assets;->loadSoundsMenu()V"
    ],
    "Lcom/blazen/general/SimpleButton;": [
        "Lcom/blazen/general/SimpleButton;->inBounds()Z",
        "Lcom/blazen/general/SimpleButton;->wasPressed()Z",
        "Lcom/blazen/general/SimpleButton;->centerHorizontallyOn()V",
        "Lcom/blazen/general/SimpleButton;->draw()V",
        "Lcom/blazen/general/SimpleButton;->bottomOn()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/general/SimpleButton;->update()V",
        "Lcom/blazen/general/SimpleButton;->setHeight()V",
        "Lcom/blazen/general/SimpleButton;->playButtonSound()V",
        "Lcom/blazen/general/SimpleButton;->rightOn()V",
        "Lcom/blazen/general/SimpleButton;->updateDoorButton()V",
        "Lcom/blazen/general/SimpleButton;->leftOn()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/general/SimpleButton;->setWidth()V"
    ],
    "Lcom/blazen/general/Grid;": [
        "Lcom/blazen/general/Grid;->getGridCell()I",
        "Lcom/blazen/general/Grid;->cellX()I",
        "Lcom/blazen/general/Grid;->cellY()I",
        "Lcom/blazen/general/Grid;->add()V",
        "Lcom/blazen/general/Grid;->clear()V",
        "Lcom/blazen/general/Grid;->get()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/blazen/general/Rectangles;": [
        "Lcom/blazen/general/Rectangles;->setRectangle()V"
    ],
    "Lcom/blazen/general/CollisionGeometry;": [
        "Lcom/blazen/general/CollisionGeometry;->intersects()Z"
    ],
    "Lcom/blazen/general/Colliders;": [
        "Lcom/blazen/general/Colliders;->removeMarkedCollisions()V",
        "Lcom/blazen/general/Colliders;->removeOutOfBounds()V",
        "Lcom/blazen/general/Colliders;->collide()V",
        "Lcom/blazen/general/Colliders;->intersects()Z"
    ],
    "Lcom/blazen/general/Pools;": [
        "Lcom/blazen/general/Pools;->freeArrayToPool()V",
        "Lcom/blazen/general/Pools;->makeArrayFromPool()Lcom/badlogic/gdx/utils/Array;"
    ],
    "Lcom/blazen/vampire/mobiles/GameObject;": [
        "Lcom/blazen/vampire/mobiles/GameObject;->getWidth()F",
        "Lcom/blazen/vampire/mobiles/GameObject;->setWidth()Lcom/blazen/vampire/mobiles/GameObject;",
        "Lcom/blazen/vampire/mobiles/GameObject;->geometryIntersects()Z",
        "Lcom/blazen/vampire/mobiles/GameObject;->intersects()Z",
        "Lcom/blazen/vampire/mobiles/GameObject;->getHeight()F",
        "Lcom/blazen/vampire/mobiles/GameObject;->bounds()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/mobiles/GameObject;->setY()Lcom/blazen/vampire/mobiles/GameObject;",
        "Lcom/blazen/vampire/mobiles/GameObject;->setX()Lcom/blazen/vampire/mobiles/GameObject;",
        "Lcom/blazen/vampire/mobiles/GameObject;->update()V",
        "Lcom/blazen/vampire/mobiles/GameObject;->setHeight()Lcom/blazen/vampire/mobiles/GameObject;",
        "Lcom/blazen/vampire/mobiles/GameObject;->boundsIntersect()Z"
    ],
    "Lcom/blazen/general/Colliders$ColliderHandler;": [
        "Lcom/blazen/general/Colliders$ColliderHandler;->onCollision()V"
    ],
    "Lcom/blazen/general/Colliders$SceneryHandler;": [
        "Lcom/blazen/general/Colliders$SceneryHandler;->onCollision()V"
    ],
    "Lcom/blazen/general/Colliders$RemovalHandler;": [
        "Lcom/blazen/general/Colliders$RemovalHandler;->onRemove()V"
    ],
    "Lcom/blazen/general/Particle;": [
        "Lcom/blazen/general/Particle;->update()V",
        "Lcom/blazen/general/Particle;->spawn()V"
    ],
    "Lcom/blazen/general/ParticleManager;": [
        "Lcom/blazen/general/ParticleManager;->add()V",
        "Lcom/blazen/general/ParticleManager;->clear()V",
        "Lcom/blazen/general/ParticleManager;->getParticles()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/general/ParticleManager;->update()V"
    ],
    "Lcom/blazen/vampire/World;": [
        "Lcom/blazen/vampire/World;->populateRoom()V",
        "Lcom/blazen/vampire/World;->getDoorRects()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->getPlayer()Lcom/blazen/vampire/mobiles/Player;",
        "Lcom/blazen/vampire/World;->updatePlayerDead()V",
        "Lcom/blazen/vampire/World;->checkMobileMobileCollisions()V",
        "Lcom/blazen/vampire/World;->createMaze()V",
        "Lcom/blazen/vampire/World;->getRoomBounds()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/World;->getWallRects()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->intersectsWalls()Z",
        "Lcom/blazen/vampire/World;->removeMarkedMobiles()V",
        "Lcom/blazen/vampire/World;->resume()V",
        "Lcom/blazen/vampire/World;->updateResetting()V",
        "Lcom/blazen/vampire/World;->markSceneryCollisions()V",
        "Lcom/blazen/vampire/World;->getLevelScore()F",
        "Lcom/blazen/vampire/World;->getOpenDoors()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->getCloseDoorButtons()Ljava/util/List;",
        "Lcom/blazen/vampire/World;->canSpawnHere()Z",
        "Lcom/blazen/vampire/World;->getRobotShots()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->doShotHitParashooter()V",
        "Lcom/blazen/vampire/World;->getDoors()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->getStateTime()F",
        "Lcom/blazen/vampire/World;->intersectsDoors()Z",
        "Lcom/blazen/vampire/World;->placePlayer()V",
        "Lcom/blazen/vampire/World;->setRandomSeedFromRoom()V",
        "Lcom/blazen/vampire/World;->createCloseDoorButton()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/vampire/World;->placeDoor()V",
        "Lcom/blazen/vampire/World;->getPlayerShots()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->getState()I",
        "Lcom/blazen/vampire/World;->getPoints()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->updateRobots()V",
        "Lcom/blazen/vampire/World;->addPlayerShot()V",
        "Lcom/blazen/vampire/World;->doRobotHitClosedDoor()V",
        "Lcom/blazen/vampire/World;->intersectsRobots()Z",
        "Lcom/blazen/vampire/World;->updateCaptain()V",
        "Lcom/blazen/vampire/World;->getCaptain()Lcom/blazen/vampire/mobiles/Captain;",
        "Lcom/blazen/vampire/World;->getPausedTime()F",
        "Lcom/blazen/vampire/World;->getDoorPosition()I",
        "Lcom/blazen/vampire/World;->doLeftRoom()V",
        "Lcom/blazen/vampire/World;->doCaptainActivated()V",
        "Lcom/blazen/vampire/World;->createRobotShots()V",
        "Lcom/blazen/vampire/World;->updateMobiles()V",
        "Lcom/blazen/vampire/World;->updateEnteredRoom()V",
        "Lcom/blazen/vampire/World;->placeCaptain()V",
        "Lcom/blazen/vampire/World;->getRobots()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->addRobotShot()V",
        "Lcom/blazen/vampire/World;->addWorldListener()V",
        "Lcom/blazen/vampire/World;->getRobotsKilledNumber()I",
        "Lcom/blazen/vampire/World;->doRobotEnter()V",
        "Lcom/blazen/vampire/World;->checkForCollisions()V",
        "Lcom/blazen/vampire/World;->resetRoom()V",
        "Lcom/blazen/vampire/World;->updatePlaying()V",
        "Lcom/blazen/vampire/World;->createRobots()V",
        "Lcom/blazen/vampire/World;->update()V",
        "Lcom/blazen/vampire/World;->isPaused()Z",
        "Lcom/blazen/vampire/World;->reset()V",
        "Lcom/blazen/vampire/World;->getClosedDoors()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/World;->pause()V",
        "Lcom/blazen/vampire/World;->createPlayerShots()V",
        "Lcom/blazen/vampire/World;->setState()V"
    ],
    "Lcom/blazen/vampire/Flyup;": [
        "Lcom/blazen/vampire/Flyup;->update()V",
        "Lcom/blazen/vampire/Flyup;->spawn()V"
    ],
    "Lcom/blazen/vampire/LevelSummingScreen;": [
        "Lcom/blazen/vampire/LevelSummingScreen;->updateRepeatLevelButton()V",
        "Lcom/blazen/vampire/LevelSummingScreen;->createUpgradeButton()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/vampire/LevelSummingScreen;->screenToViewport()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/blazen/vampire/LevelSummingScreen;->createButtons()V",
        "Lcom/blazen/vampire/LevelSummingScreen;->updateNextLevelButton()V"
    ],
    "Lcom/blazen/vampire/VeryAngryRobotsGame;": [
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->setLevelFinishedScreen()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->setLevelSummingScreen()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->fetchURL()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->canShowScores()Z",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->setFeedCatScreen()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->setPlayingScreen()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->showScores()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->submitScore()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->setMainMenuScreen()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->showScoreloop()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->saveScore()V",
        "Lcom/blazen/vampire/VeryAngryRobotsGame;->setScreen()V"
    ],
    "Lcom/blazen/vampire/SoundManager;": [
        "Lcom/blazen/vampire/SoundManager;->scheduleTaunt()V",
        "Lcom/blazen/vampire/SoundManager;->update()V"
    ],
    "Lcom/blazen/vampire/TextInterpolator;": [
        "Lcom/blazen/vampire/TextInterpolator;->$()Lcom/blazen/vampire/TextInterpolator;"
    ],
    "Lcom/blazen/vampire/mobiles/Cloud;": [
        "Lcom/blazen/vampire/mobiles/Cloud;->setW2()V",
        "Lcom/blazen/vampire/mobiles/Cloud;->setH2()V",
        "Lcom/blazen/vampire/mobiles/Cloud;->setX()Lcom/blazen/vampire/mobiles/Cloud;",
        "Lcom/blazen/vampire/mobiles/Cloud;->geometryIntersects()Z",
        "Lcom/blazen/vampire/mobiles/Cloud;->intersects()Z",
        "Lcom/blazen/vampire/mobiles/Cloud;->bounds()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/mobiles/Cloud;->boundsIntersect()Z"
    ],
    "Lcom/blazen/vampire/Settings;": [
        "Lcom/blazen/vampire/Settings;->save()V",
        "Lcom/blazen/vampire/Settings;->load()V"
    ],
    "Lcom/badlogic/gdx/audio/Music;": [
        "Lcom/badlogic/gdx/audio/Music;->getPosition()F",
        "Lcom/badlogic/gdx/audio/Music;->play()V",
        "Lcom/badlogic/gdx/audio/Music;->setPosition()V",
        "Lcom/badlogic/gdx/audio/Music;->stop()V",
        "Lcom/badlogic/gdx/audio/Music;->dispose()V",
        "Lcom/badlogic/gdx/audio/Music;->pause()V",
        "Lcom/badlogic/gdx/audio/Music;->setVolume()V",
        "Lcom/badlogic/gdx/audio/Music;->setLooping()V"
    ],
    "Ljie/java/android/boxcatcher/Characters;": [
        "Ljie/java/android/boxcatcher/Characters;->equals()Z"
    ],
    "Lcom/blazen/vampire/LevelFinishedScreen;": [
        "Lcom/blazen/vampire/LevelFinishedScreen;->updateButtons()V",
        "Lcom/blazen/vampire/LevelFinishedScreen;->createUpgradeButton()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/vampire/LevelFinishedScreen;->startGame()V",
        "Lcom/blazen/vampire/LevelFinishedScreen;->createPlayButton()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/vampire/LevelFinishedScreen;->createShowScoresButton()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/vampire/LevelFinishedScreen;->playButtonSound()V",
        "Lcom/blazen/vampire/LevelFinishedScreen;->screenToViewport()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/blazen/vampire/LevelFinishedScreen;->createButtons()V"
    ],
    "Lcom/blazen/vampire/mobiles/PlayerShot;": [
        "Lcom/blazen/vampire/mobiles/PlayerShot;->fire()V",
        "Lcom/blazen/vampire/mobiles/PlayerShot;->setShotSpeed()V"
    ],
    "Lcom/blazen/vampire/WorldNotifier;": [
        "Lcom/blazen/vampire/WorldNotifier;->onRobotEnter()V",
        "Lcom/blazen/vampire/WorldNotifier;->onExitedRoom()V",
        "Lcom/blazen/vampire/WorldNotifier;->onPlayerFired()V",
        "Lcom/blazen/vampire/WorldNotifier;->addListener()V",
        "Lcom/blazen/vampire/WorldNotifier;->onEnteredRoom()V",
        "Lcom/blazen/vampire/WorldNotifier;->onWorldReset()V",
        "Lcom/blazen/vampire/WorldNotifier;->onCaptainActivated()V",
        "Lcom/blazen/vampire/WorldNotifier;->onBombsNumberChanged()V",
        "Lcom/blazen/vampire/WorldNotifier;->onRobotDestroyed()V",
        "Lcom/blazen/vampire/WorldNotifier;->onRobotFired()V"
    ],
    "Lcom/blazen/vampire/mobiles/RobotShot;": [
        "Lcom/blazen/vampire/mobiles/RobotShot;->setOwner()V",
        "Lcom/blazen/vampire/mobiles/RobotShot;->fire()V",
        "Lcom/blazen/vampire/mobiles/RobotShot;->setShotSpeed()V"
    ],
    "Lcom/blazen/vampire/mobiles/BounceGameObject;": [
        "Lcom/blazen/vampire/mobiles/BounceGameObject;->getRobot()Lcom/blazen/vampire/mobiles/Robot;"
    ],
    "Lcom/blazen/vampire/mobiles/Player;": [
        "Lcom/blazen/vampire/mobiles/Player;->setController()V",
        "Lcom/blazen/vampire/mobiles/Player;->bounds()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/mobiles/Player;->update()V",
        "Lcom/blazen/vampire/mobiles/Player;->setState()V"
    ],
    "Lcom/blazen/vampire/RoomBuilder;": [
        "Lcom/blazen/vampire/RoomBuilder;->createDoors()V",
        "Lcom/blazen/vampire/RoomBuilder;->createVWall()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/RoomBuilder;->coordMinusHalfHeight()F",
        "Lcom/blazen/vampire/RoomBuilder;->createWallsAndDoors()V",
        "Lcom/blazen/vampire/RoomBuilder;->coordPlusHalfHeight()F",
        "Lcom/blazen/vampire/RoomBuilder;->createHWall()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/RoomBuilder;->newRectangle()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/RoomBuilder;->build()V",
        "Lcom/blazen/vampire/RoomBuilder;->getDoors()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/RoomBuilder;->createVDoor()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/RoomBuilder;->getWalls()Lcom/badlogic/gdx/utils/Array;",
        "Lcom/blazen/vampire/RoomBuilder;->createWalls()V",
        "Lcom/blazen/vampire/RoomBuilder;->createHDoor()Lcom/badlogic/gdx/math/Rectangle;"
    ],
    "Lcom/blazen/vampire/mobiles/Robot;": [
        "Lcom/blazen/vampire/mobiles/Robot;->getMovementState()I",
        "Lcom/blazen/vampire/mobiles/Robot;->setRespawnPoint()V",
        "Lcom/blazen/vampire/mobiles/Robot;->setFireCommand()V",
        "Lcom/blazen/vampire/mobiles/Robot;->setState()V",
        "Lcom/blazen/vampire/mobiles/Robot;->moveRobot()V",
        "Lcom/blazen/vampire/mobiles/Robot;->respawn()V",
        "Lcom/blazen/vampire/mobiles/Robot;->canFire()Z",
        "Lcom/blazen/vampire/mobiles/Robot;->setWalls()V",
        "Lcom/blazen/vampire/mobiles/Robot;->bounds()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/mobiles/Robot;->hasLineOfSight()Z",
        "Lcom/blazen/vampire/mobiles/Robot;->setWalkingSpeed()V",
        "Lcom/blazen/vampire/mobiles/Robot;->wouldHitWall()Z",
        "Lcom/blazen/vampire/mobiles/Robot;->setLifePercent()V",
        "Lcom/blazen/vampire/mobiles/Robot;->update()V",
        "Lcom/blazen/vampire/mobiles/Robot;->doesLineHitWall()Z",
        "Lcom/blazen/vampire/mobiles/Robot;->setPlayer()V",
        "Lcom/blazen/vampire/mobiles/Robot;->boundsIntersect()Z",
        "Lcom/blazen/vampire/mobiles/Robot;->canSeePlayer()Z",
        "Lcom/blazen/vampire/mobiles/Robot;->getLifePercent()F"
    ],
    "Lcom/blazen/vampire/mobiles/Captain;": [
        "Lcom/blazen/vampire/mobiles/Captain;->activateAfter()V",
        "Lcom/blazen/vampire/mobiles/Captain;->setPlayer()V",
        "Lcom/blazen/vampire/mobiles/Captain;->update()V",
        "Lcom/blazen/vampire/mobiles/Captain;->updateLurking()V",
        "Lcom/blazen/vampire/mobiles/Captain;->updateChasing()V",
        "Lcom/blazen/vampire/mobiles/Captain;->setState()V"
    ],
    "Lcom/blazen/vampire/mobiles/Door;": [
        "Lcom/blazen/vampire/mobiles/Door;->setState()V",
        "Lcom/blazen/vampire/mobiles/Door;->update()V"
    ],
    "Lcom/blazen/vampire/ScoreListener;": [
        "Lcom/blazen/vampire/ScoreListener;->onLivesChanged()V",
        "Lcom/blazen/vampire/ScoreListener;->onScoreChanged()V"
    ],
    "Lcom/blazen/vampire/MazeGenerator;": [
        "Lcom/blazen/vampire/MazeGenerator;->addWall()V",
        "Lcom/blazen/vampire/MazeGenerator;->subdivideChamber()V",
        "Lcom/blazen/vampire/MazeGenerator;->rebuild()Lcom/blazen/vampire/MazeGenerator;",
        "Lcom/blazen/vampire/MazeGenerator;->addDoor()V",
        "Lcom/blazen/vampire/MazeGenerator;->addVDoor()V",
        "Lcom/blazen/vampire/MazeGenerator;->createMaze()V",
        "Lcom/blazen/vampire/MazeGenerator;->addVWall()V",
        "Lcom/blazen/vampire/MazeGenerator;->addHDoor()V",
        "Lcom/blazen/vampire/MazeGenerator;->addHWall()V"
    ],
    "Lcom/blazen/vampire/AchievementsNotifier;": [
        "Lcom/blazen/vampire/AchievementsNotifier;->addListener()V",
        "Lcom/blazen/vampire/AchievementsNotifier;->onAttained()V"
    ],
    "Lcom/blazen/vampire/StatusManager;": [
        "Lcom/blazen/vampire/StatusManager;->setScore()V",
        "Lcom/blazen/vampire/StatusManager;->setLives()V",
        "Lcom/blazen/vampire/StatusManager;->addAchievementsListener()V",
        "Lcom/blazen/vampire/StatusManager;->update()V",
        "Lcom/blazen/vampire/StatusManager;->addScoreListener()V",
        "Lcom/blazen/vampire/StatusManager;->addScore()V",
        "Lcom/blazen/vampire/StatusManager;->addLives()V",
        "Lcom/blazen/vampire/StatusManager;->achievement()V",
        "Lcom/blazen/vampire/StatusManager;->addScoringEventListener()V"
    ],
    "Lcom/blazen/vampire/ScoreNotifier;": [
        "Lcom/blazen/vampire/ScoreNotifier;->addListener()V",
        "Lcom/blazen/vampire/ScoreNotifier;->onScoreChanged()V",
        "Lcom/blazen/vampire/ScoreNotifier;->onLivesChanged()V"
    ],
    "Lcom/blazen/vampire/ScoringEventNotifier;": [
        "Lcom/blazen/vampire/ScoringEventNotifier;->addListener()V",
        "Lcom/blazen/vampire/ScoringEventNotifier;->onScoringEvent()V"
    ],
    "Lcom/blazen/vampire/MainMenuScreen;": [
        "Lcom/blazen/vampire/MainMenuScreen;->createButtons()V",
        "Lcom/blazen/vampire/MainMenuScreen;->startGame()V",
        "Lcom/blazen/vampire/MainMenuScreen;->updateButtons()V",
        "Lcom/blazen/vampire/MainMenuScreen;->screenToViewport()Lcom/badlogic/gdx/math/Vector3;"
    ],
    "Lcom/blazen/vampire/ScoringEventListener;": [
        "Lcom/blazen/vampire/ScoringEventListener;->onScoringEvent()V"
    ],
    "Lcom/blazen/general/ScoreString;": [
        "Lcom/blazen/general/ScoreString;->setScore()V"
    ],
    "Lcom/blazen/vampire/FeedCat;": [
        "Lcom/blazen/vampire/FeedCat;->verticesRotate()V",
        "Lcom/blazen/vampire/FeedCat;->verticesGoDown()V",
        "Lcom/blazen/vampire/FeedCat;->updatearrow()V",
        "Lcom/blazen/vampire/FeedCat;->createButtons()V",
        "Lcom/blazen/vampire/FeedCat;->setFillers()V",
        "Lcom/blazen/vampire/FeedCat;->setBlocksFalling()V",
        "Lcom/blazen/vampire/FeedCat;->calculateLevelPercentage()F",
        "Lcom/blazen/vampire/FeedCat;->wasButtonPressed()Z",
        "Lcom/blazen/vampire/FeedCat;->screenToViewport()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/blazen/vampire/FeedCat;->setEndLevelFillers()V"
    ],
    "Lcom/blazen/vampire/RectangleObject;": [
        "Lcom/blazen/vampire/RectangleObject;->getRectangle()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/blazen/vampire/RectangleObject;->updateRectangle()V"
    ],
    "Lcom/blazen/vampire/BlockFalling;": [
        "Lcom/blazen/vampire/BlockFalling;->setLevel()V"
    ],
    "Lcom/blazen/vampire/WorldView;": [
        "Lcom/blazen/vampire/WorldView;->drawRobots()V",
        "Lcom/blazen/vampire/WorldView;->cycleCaches()V",
        "Lcom/blazen/vampire/WorldView;->createWallsAndDoors()I",
        "Lcom/blazen/vampire/WorldView;->draw()V",
        "Lcom/blazen/vampire/WorldView;->drawMobiles()V",
        "Lcom/blazen/vampire/WorldView;->updatePanning()V",
        "Lcom/blazen/vampire/WorldView;->updateControls()V",
        "Lcom/blazen/vampire/WorldView;->drawPlayer()V",
        "Lcom/blazen/vampire/WorldView;->update()V",
        "Lcom/blazen/vampire/WorldView;->drawPoint()V",
        "Lcom/blazen/vampire/WorldView;->drawParticles()V",
        "Lcom/blazen/vampire/WorldView;->screenToViewport()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/blazen/vampire/WorldView;->drawRobot()V",
        "Lcom/blazen/vampire/WorldView;->drawButtons()V",
        "Lcom/blazen/vampire/WorldView;->drawClipped()V",
        "Lcom/blazen/vampire/WorldView;->closeDoor()V",
        "Lcom/blazen/vampire/WorldView;->drawPoints()V",
        "Lcom/blazen/vampire/WorldView;->render()V",
        "Lcom/blazen/vampire/WorldView;->drawBackground()V",
        "Lcom/blazen/vampire/WorldView;->drawPlayersShots()V",
        "Lcom/blazen/vampire/WorldView;->drawDoor()V",
        "Lcom/blazen/vampire/WorldView;->updateButtons()V",
        "Lcom/blazen/vampire/WorldView;->drawFlyups()V",
        "Lcom/blazen/vampire/WorldView;->resetCaches()V"
    ],
    "Lcom/blazen/vampire/StatusView;": [
        "Lcom/blazen/vampire/StatusView;->drawScore()V",
        "Lcom/blazen/vampire/StatusView;->drawLives()V",
        "Lcom/blazen/vampire/StatusView;->render()V",
        "Lcom/blazen/vampire/StatusView;->drawStatsAndScore()V",
        "Lcom/blazen/vampire/StatusView;->createUpgradeButton()Lcom/blazen/general/SimpleButton;",
        "Lcom/blazen/vampire/StatusView;->drawPaused()V"
    ],
    "Lcom/blazen/vampire/ScoresScreen;": [
        "Lcom/blazen/vampire/ScoresScreen;->setScore()V"
    ],
    "Lcom/blazen/vampire/World$FireCommand;": [
        "Lcom/blazen/vampire/World$FireCommand;->fire()V"
    ],
    "Lcom/blazen/vampire/AchievementsListener;": [
        "Lcom/blazen/vampire/AchievementsListener;->onAttained()V"
    ],
    "Lcom/blazen/vampire/IShowScores;": [
        "Lcom/blazen/vampire/IShowScores;->showScores()V"
    ],
    "Lcom/blazen/vampire/ISubmitScores;": [
        "Lcom/blazen/vampire/ISubmitScores;->submitScore()V"
    ],
    "Lcom/badlogic/gdx2/Preferences;": [
        "Lcom/badlogic/gdx2/Preferences;->putInteger()V",
        "Lcom/badlogic/gdx2/Preferences;->getInteger()I",
        "Lcom/badlogic/gdx2/Preferences;->flush()V"
    ],
    "Lcom/blazen/vampire/TimeSystem$Renderer;": [
        "Lcom/blazen/vampire/TimeSystem$Renderer;->render()V"
    ],
    "Lcom/blazen/vampire/TimeSystem$Simulation;": [
        "Lcom/blazen/vampire/TimeSystem$Simulation;->simulate()V"
    ],
    "Lcom/blazen/vampire/StatusManager$Achievements;": [
        "Lcom/blazen/vampire/StatusManager$Achievements;->summary()Ljava/lang/String;"
    ],
    "Ljava/io/BufferedWriter;": [
        "Ljava/io/BufferedWriter;->close()V",
        "Ljava/io/BufferedWriter;->write()V",
        "Ljava/io/BufferedWriter;->newLine()V"
    ],
    "Lcom/blazen/vampire/WorldListener;": [
        "Lcom/blazen/vampire/WorldListener;->onWorldReset()V",
        "Lcom/blazen/vampire/WorldListener;->onPlayerFired()V",
        "Lcom/blazen/vampire/WorldListener;->onCaptainActivated()V",
        "Lcom/blazen/vampire/WorldListener;->onRobotDestroyed()V",
        "Lcom/blazen/vampire/WorldListener;->onRobotFired()V",
        "Lcom/blazen/vampire/WorldListener;->onBombsNumberChanged()V",
        "Lcom/blazen/vampire/WorldListener;->onExitedRoom()V",
        "Lcom/blazen/vampire/WorldListener;->onRobotHitClosedDoor()V",
        "Lcom/blazen/vampire/WorldListener;->onEnteredRoom()V",
        "Lcom/blazen/vampire/WorldListener;->onRobotHit()V",
        "Lcom/blazen/vampire/WorldListener;->onRobotEnter()V"
    ],
    "Lcom/blazen/vampire/ScoreBasedDifficultyManager;": [
        "Lcom/blazen/vampire/ScoreBasedDifficultyManager;->updateIfDirty()V"
    ],
    "Lcom/blazen/vampire/WorldView$Presenter;": [
        "Lcom/blazen/vampire/WorldView$Presenter;->setLevelSummingScreen()V",
        "Lcom/blazen/vampire/WorldView$Presenter;->setController()V"
    ],
    "Lcom/blazen/vampire/ParticleAdapter;": [
        "Lcom/blazen/vampire/ParticleAdapter;->update()V"
    ],
    "Lcom/blazen/vampire/FlyupManager;": [
        "Lcom/blazen/vampire/FlyupManager;->update()V"
    ],
    "Lcom/blazen/vampire/mobiles/BaseShot;": [
        "Lcom/blazen/vampire/mobiles/BaseShot;->intersects()Z"
    ],
    "Landroid/net/TrafficStats;": [
        "Landroid/net/TrafficStats;->clearThreadStatsTag()V",
        "Landroid/net/TrafficStats;->incrementOperationCount()V",
        "Landroid/net/TrafficStats;->tagSocket()V",
        "Landroid/net/TrafficStats;->untagSocket()V",
        "Landroid/net/TrafficStats;->setThreadStatsTag()V",
        "Landroid/net/TrafficStats;->getThreadStatsTag()I"
    ],
    "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;": [
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->incrementOperationCount()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->setThreadStatsTag()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->untagSocket()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->clearThreadStatsTag()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->tagSocket()V",
        "Landroid/support/v4/net/TrafficStatsCompat$TrafficStatsCompatImpl;->getThreadStatsTag()I"
    ],
    "Landroid/support/v4/net/ConnectivityManagerCompat$ConnectivityManagerCompatImpl;": [
        "Landroid/support/v4/net/ConnectivityManagerCompat$ConnectivityManagerCompatImpl;->isActiveNetworkMetered()Z"
    ],
    "Landroid/support/v4/util/LogWriter;": [
        "Landroid/support/v4/util/LogWriter;->flushBuilder()V"
    ],
    "Landroid/support/v4/util/LongSparseArray;": [
        "Landroid/support/v4/util/LongSparseArray;->clone()Landroid/support/v4/util/LongSparseArray;",
        "Landroid/support/v4/util/LongSparseArray;->put()V",
        "Landroid/support/v4/util/LongSparseArray;->idealLongArraySize()I",
        "Landroid/support/v4/util/LongSparseArray;->binarySearch()I",
        "Landroid/support/v4/util/LongSparseArray;->gc()V",
        "Landroid/support/v4/util/LongSparseArray;->get()Ljava/lang/Object;",
        "Landroid/support/v4/util/LongSparseArray;->delete()V",
        "Landroid/support/v4/util/LongSparseArray;->idealByteArraySize()I"
    ],
    "[J": [
        "[J->clone()Ljava/lang/Object;"
    ],
    "[Ljava/lang/Object;": [
        "[Ljava/lang/Object;->clone()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/util/LruCache;": [
        "Landroid/support/v4/util/LruCache;->trimToSize()V",
        "Landroid/support/v4/util/LruCache;->sizeOf()I",
        "Landroid/support/v4/util/LruCache;->create()Ljava/lang/Object;",
        "Landroid/support/v4/util/LruCache;->entryRemoved()V",
        "Landroid/support/v4/util/LruCache;->safeSizeOf()I"
    ],
    "Ljava/util/LinkedHashMap;": [
        "Ljava/util/LinkedHashMap;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->entrySet()Ljava/util/Set;",
        "Ljava/util/LinkedHashMap;->put()Ljava/lang/Object;",
        "Ljava/util/LinkedHashMap;->isEmpty()Z",
        "Ljava/util/LinkedHashMap;->remove()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/util/SparseArrayCompat;": [
        "Landroid/support/v4/util/SparseArrayCompat;->idealIntArraySize()I",
        "Landroid/support/v4/util/SparseArrayCompat;->valueAt()Ljava/lang/Object;",
        "Landroid/support/v4/util/SparseArrayCompat;->gc()V",
        "Landroid/support/v4/util/SparseArrayCompat;->remove()V",
        "Landroid/support/v4/util/SparseArrayCompat;->get()Ljava/lang/Object;",
        "Landroid/support/v4/util/SparseArrayCompat;->indexOfKey()I",
        "Landroid/support/v4/util/SparseArrayCompat;->idealByteArraySize()I",
        "Landroid/support/v4/util/SparseArrayCompat;->clear()V",
        "Landroid/support/v4/util/SparseArrayCompat;->put()V",
        "Landroid/support/v4/util/SparseArrayCompat;->removeAt()V",
        "Landroid/support/v4/util/SparseArrayCompat;->size()I",
        "Landroid/support/v4/util/SparseArrayCompat;->binarySearch()I",
        "Landroid/support/v4/util/SparseArrayCompat;->delete()V",
        "Landroid/support/v4/util/SparseArrayCompat;->keyAt()I"
    ],
    "Ljava/io/PrintWriter;": [
        "Ljava/io/PrintWriter;->println()V",
        "Ljava/io/PrintWriter;->print()V"
    ],
    "Landroid/support/v4/util/TimeUtils;": [
        "Landroid/support/v4/util/TimeUtils;->formatDurationLocked()I",
        "Landroid/support/v4/util/TimeUtils;->formatDuration()V",
        "Landroid/support/v4/util/TimeUtils;->accumField()I",
        "Landroid/support/v4/util/TimeUtils;->printField()I"
    ],
    "Landroid/support/v4/app/BackStackRecord;": [
        "Landroid/support/v4/app/BackStackRecord;->replace()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/BackStackRecord;->dump()V",
        "Landroid/support/v4/app/BackStackRecord;->addOp()V",
        "Landroid/support/v4/app/BackStackRecord;->getName()Ljava/lang/String;",
        "Landroid/support/v4/app/BackStackRecord;->bumpBackStackNesting()V",
        "Landroid/support/v4/app/BackStackRecord;->setCustomAnimations()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/BackStackRecord;->popFromBackStack()V",
        "Landroid/support/v4/app/BackStackRecord;->commitInternal()I",
        "Landroid/support/v4/app/BackStackRecord;->doAddOp()V"
    ],
    "Landroid/support/v4/app/FragmentManagerImpl;": [
        "Landroid/support/v4/app/FragmentManagerImpl;->execPendingActions()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchPrepareOptionsMenu()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->saveFragmentBasicState()Landroid/os/Bundle;",
        "Landroid/support/v4/app/FragmentManagerImpl;->performPendingDeferredStart()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->removeFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchLowMemory()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->moveToState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchContextItemSelected()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->loadAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchPause()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchReallyStop()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->getFragment()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->hideFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->freeBackStackIndex()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->detachFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->findFragmentById()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->reverseTransit()I",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchConfigurationChanged()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->transitToStyleIndex()I",
        "Landroid/support/v4/app/FragmentManagerImpl;->addBackStackState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->setBackStackIndex()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchOptionsItemSelected()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->retainNonConfig()Ljava/util/ArrayList;",
        "Landroid/support/v4/app/FragmentManagerImpl;->allocBackStackIndex()I",
        "Landroid/support/v4/app/FragmentManagerImpl;->popBackStackState()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->addFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->findFragmentByTag()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManagerImpl;->checkStateLoss()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchDestroy()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->reportBackStackChanged()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->saveFragmentViewState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeInactive()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->attachActivity()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchCreate()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeOpenCloseAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchCreateOptionsMenu()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchActivityCreated()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->restoreAllState()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchOptionsMenuClosed()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dump()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchResume()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->executePendingTransactions()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->putFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->startPendingDeferredFragments()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->popBackStackImmediate()Z",
        "Landroid/support/v4/app/FragmentManagerImpl;->saveAllState()Landroid/os/Parcelable;",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchStop()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->noteStateNotSaved()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeActive()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->enqueueAction()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->dispatchStart()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->showFragment()V",
        "Landroid/support/v4/app/FragmentManagerImpl;->makeFadeAnimation()Landroid/view/animation/Animation;",
        "Landroid/support/v4/app/FragmentManagerImpl;->attachFragment()V"
    ],
    "Landroid/support/v4/app/ActivityCompatHoneycomb;": [
        "Landroid/support/v4/app/ActivityCompatHoneycomb;->invalidateOptionsMenu()V"
    ],
    "Landroid/support/v4/app/LoaderManagerImpl;": [
        "Landroid/support/v4/app/LoaderManagerImpl;->dump()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->createAndInstallLoader()Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;",
        "Landroid/support/v4/app/LoaderManagerImpl;->hasRunningLoaders()Z",
        "Landroid/support/v4/app/LoaderManagerImpl;->updateActivity()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doStop()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doDestroy()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doReportStart()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doReportNextStart()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doRetain()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->doStart()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->finishRetain()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->installLoader()V",
        "Landroid/support/v4/app/LoaderManagerImpl;->createLoader()Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;"
    ],
    "Landroid/support/v4/app/LoaderManager$LoaderCallbacks;": [
        "Landroid/support/v4/app/LoaderManager$LoaderCallbacks;->onCreateLoader()Landroid/support/v4/content/Loader;"
    ],
    "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;": [
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->retain()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->dump()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->callOnLoadFinished()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->start()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->toString()Ljava/lang/String;",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->destroy()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->stop()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->reportStart()V",
        "Landroid/support/v4/app/LoaderManagerImpl$LoaderInfo;->finishRetain()V"
    ],
    "Landroid/support/v4/util/DebugUtils;": [
        "Landroid/support/v4/util/DebugUtils;->buildShortClassTag()V"
    ],
    "Landroid/support/v4/app/FragmentManager;": [
        "Landroid/support/v4/app/FragmentManager;->executePendingTransactions()Z",
        "Landroid/support/v4/app/FragmentManager;->saveFragmentInstanceState()Landroid/support/v4/app/Fragment$SavedState;",
        "Landroid/support/v4/app/FragmentManager;->getFragment()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManager;->putFragment()V",
        "Landroid/support/v4/app/FragmentManager;->findFragmentByTag()Landroid/support/v4/app/Fragment;",
        "Landroid/support/v4/app/FragmentManager;->beginTransaction()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentManager;->popBackStack()V"
    ],
    "Landroid/support/v4/app/FragmentTransaction;": [
        "Landroid/support/v4/app/FragmentTransaction;->attach()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->remove()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->commitAllowingStateLoss()I",
        "Landroid/support/v4/app/FragmentTransaction;->commit()I",
        "Landroid/support/v4/app/FragmentTransaction;->detach()Landroid/support/v4/app/FragmentTransaction;",
        "Landroid/support/v4/app/FragmentTransaction;->add()Landroid/support/v4/app/FragmentTransaction;"
    ],
    "Landroid/support/v4/app/FragmentPagerAdapter;": [
        "Landroid/support/v4/app/FragmentPagerAdapter;->makeFragmentName()Ljava/lang/String;",
        "Landroid/support/v4/app/FragmentPagerAdapter;->getItemId()J",
        "Landroid/support/v4/app/FragmentPagerAdapter;->getItem()Landroid/support/v4/app/Fragment;"
    ],
    "Landroid/view/animation/ScaleAnimation;": [
        "Landroid/view/animation/ScaleAnimation;->setInterpolator()V",
        "Landroid/view/animation/ScaleAnimation;->setDuration()V"
    ],
    "Landroid/view/animation/AnimationUtils;": [
        "Landroid/view/animation/AnimationUtils;->loadAnimation()Landroid/view/animation/Animation;"
    ],
    "Landroid/support/v4/app/NoSaveStateFrameLayout;": [
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->dispatchFreezeSelfOnly()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->dispatchThawSelfOnly()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->addView()V",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->wrap()Landroid/view/ViewGroup;",
        "Landroid/support/v4/app/NoSaveStateFrameLayout;->setLayoutParams()V"
    ],
    "Landroid/support/v4/app/FragmentManager$OnBackStackChangedListener;": [
        "Landroid/support/v4/app/FragmentManager$OnBackStackChangedListener;->onBackStackChanged()V"
    ],
    "Landroid/support/v4/app/FragmentState;": [
        "Landroid/support/v4/app/FragmentState;->instantiate()Landroid/support/v4/app/Fragment;"
    ],
    "Landroid/support/v4/app/BackStackState;": [
        "Landroid/support/v4/app/BackStackState;->instantiate()Landroid/support/v4/app/BackStackRecord;"
    ],
    "Landroid/util/SparseArray;": [
        "Landroid/util/SparseArray;->size()I",
        "Landroid/util/SparseArray;->clear()V"
    ],
    "Landroid/text/Html;": [
        "Landroid/text/Html;->escapeHtml()Ljava/lang/String;"
    ],
    "Landroid/support/v4/app/TaskStackBuilder;": [
        "Landroid/support/v4/app/TaskStackBuilder;->startActivities()V",
        "Landroid/support/v4/app/TaskStackBuilder;->create()Landroid/support/v4/app/TaskStackBuilder;",
        "Landroid/support/v4/app/TaskStackBuilder;->getPendingIntent()Landroid/app/PendingIntent;",
        "Landroid/support/v4/app/TaskStackBuilder;->editIntentAt()Landroid/content/Intent;"
    ],
    "Landroid/support/v4/app/NavUtils;": [
        "Landroid/support/v4/app/NavUtils;->navigateUpTo()V",
        "Landroid/support/v4/app/NavUtils;->getParentActivityName()Ljava/lang/String;",
        "Landroid/support/v4/app/NavUtils;->getParentActivityIntent()Landroid/content/Intent;"
    ],
    "Landroid/support/v4/app/TaskStackBuilder$TaskStackBuilderImpl;": [
        "Landroid/support/v4/app/TaskStackBuilder$TaskStackBuilderImpl;->getPendingIntent()Landroid/app/PendingIntent;"
    ],
    "Landroid/support/v4/content/ContextCompat;": [
        "Landroid/support/v4/content/ContextCompat;->startActivities()Z"
    ],
    "Landroid/view/Menu;": [
        "Landroid/view/Menu;->hasVisibleItems()Z",
        "Landroid/view/Menu;->findItem()Landroid/view/MenuItem;",
        "Landroid/view/Menu;->clear()V"
    ],
    "Landroid/support/v4/app/ShareCompat;": [
        "Landroid/support/v4/app/ShareCompat;->configureMenuItem()V"
    ],
    "Landroid/support/v4/app/ShareCompat$ShareCompatImpl;": [
        "Landroid/support/v4/app/ShareCompat$ShareCompatImpl;->configureMenuItem()V"
    ],
    "Landroid/support/v4/app/DialogFragment;": [
        "Landroid/support/v4/app/DialogFragment;->getView()Landroid/view/View;",
        "Landroid/support/v4/app/DialogFragment;->onCreateDialog()Landroid/app/Dialog;",
        "Landroid/support/v4/app/DialogFragment;->dismissInternal()V",
        "Landroid/support/v4/app/DialogFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Landroid/support/v4/app/DialogFragment;->getTheme()I",
        "Landroid/support/v4/app/DialogFragment;->getFragmentManager()Landroid/support/v4/app/FragmentManager;"
    ],
    "Landroid/app/Notification$Builder;": [
        "Landroid/app/Notification$Builder;->setWhen()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setTicker()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setOngoing()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentTitle()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setOnlyAlertOnce()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setSound()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setSmallIcon()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setVibrate()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->getNotification()Landroid/app/Notification;",
        "Landroid/app/Notification$Builder;->setAutoCancel()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setDefaults()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setLargeIcon()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setSubText()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setLights()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentText()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setProgress()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setUsesChronometer()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->addAction()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setContentInfo()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setFullScreenIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->build()Landroid/app/Notification;",
        "Landroid/app/Notification$Builder;->setDeleteIntent()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setPriority()Landroid/app/Notification$Builder;",
        "Landroid/app/Notification$Builder;->setNumber()Landroid/app/Notification$Builder;"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->getActionProvider()Landroid/view/ActionProvider;",
        "Landroid/view/MenuItem;->setShowAsAction()V",
        "Landroid/view/MenuItem;->setActionProvider()Landroid/view/MenuItem;",
        "Landroid/view/MenuItem;->setActionView()Landroid/view/MenuItem;"
    ],
    "Landroid/widget/ShareActionProvider;": [
        "Landroid/widget/ShareActionProvider;->setShareHistoryFileName()V",
        "Landroid/widget/ShareActionProvider;->setShareIntent()V"
    ],
    "Landroid/support/v4/app/ListFragment;": [
        "Landroid/support/v4/app/ListFragment;->setListShown()V",
        "Landroid/support/v4/app/ListFragment;->setListAdapter()V",
        "Landroid/support/v4/app/ListFragment;->getActivity()Landroid/support/v4/app/FragmentActivity;",
        "Landroid/support/v4/app/ListFragment;->ensureList()V",
        "Landroid/support/v4/app/ListFragment;->getView()Landroid/view/View;"
    ],
    "Landroid/support/v4/app/NavUtils$NavUtilsImpl;": [
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->shouldUpRecreateTask()Z",
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->getParentActivityIntent()Landroid/content/Intent;",
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->getParentActivityName()Ljava/lang/String;",
        "Landroid/support/v4/app/NavUtils$NavUtilsImpl;->navigateUpTo()V"
    ],
    "Landroid/support/v4/app/FragmentStatePagerAdapter;": [
        "Landroid/support/v4/app/FragmentStatePagerAdapter;->getItem()Landroid/support/v4/app/Fragment;"
    ],
    "Landroid/app/Notification$BigPictureStyle;": [
        "Landroid/app/Notification$BigPictureStyle;->setBigContentTitle()Landroid/app/Notification$BigPictureStyle;",
        "Landroid/app/Notification$BigPictureStyle;->bigPicture()Landroid/app/Notification$BigPictureStyle;",
        "Landroid/app/Notification$BigPictureStyle;->setSummaryText()Landroid/app/Notification$BigPictureStyle;"
    ],
    "Landroid/app/Notification$BigTextStyle;": [
        "Landroid/app/Notification$BigTextStyle;->setSummaryText()Landroid/app/Notification$BigTextStyle;",
        "Landroid/app/Notification$BigTextStyle;->bigText()Landroid/app/Notification$BigTextStyle;",
        "Landroid/app/Notification$BigTextStyle;->setBigContentTitle()Landroid/app/Notification$BigTextStyle;"
    ],
    "Landroid/app/Notification$InboxStyle;": [
        "Landroid/app/Notification$InboxStyle;->setBigContentTitle()Landroid/app/Notification$InboxStyle;",
        "Landroid/app/Notification$InboxStyle;->addLine()Landroid/app/Notification$InboxStyle;",
        "Landroid/app/Notification$InboxStyle;->setSummaryText()Landroid/app/Notification$InboxStyle;"
    ],
    "Landroid/os/Parcelable$Creator;": [
        "Landroid/os/Parcelable$Creator;->createFromParcel()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;": [
        "Landroid/support/v4/view/ViewGroupCompat$ViewGroupCompatImpl;->onRequestSendAccessibilityEvent()Z"
    ],
    "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;": [
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onPopulateAccessibilityEvent()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->sendAccessibilityEvent()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->getAccessibilityNodeProvider()Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->performAccessibilityAction()Z",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onInitializeAccessibilityEvent()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->sendAccessibilityEventUnchecked()V",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->newAccessiblityDelegateDefaultImpl()Ljava/lang/Object;",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->onRequestSendAccessibilityEvent()Z",
        "Landroid/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateImpl;->newAccessiblityDelegateBridge()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/VelocityTrackerCompat$VelocityTrackerVersionImpl;": [
        "Landroid/support/v4/view/VelocityTrackerCompat$VelocityTrackerVersionImpl;->getXVelocity()F",
        "Landroid/support/v4/view/VelocityTrackerCompat$VelocityTrackerVersionImpl;->getYVelocity()F"
    ],
    "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;": [
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->hasTransientState()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->postOnAnimation()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->postInvalidateOnAnimation()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->canScrollHorizontally()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setAccessibilityDelegate()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setOverScrollMode()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->onInitializeAccessibilityEvent()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->onPopulateAccessibilityEvent()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setHasTransientState()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getAccessibilityNodeProvider()Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->canScrollVertically()Z",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->postOnAnimationDelayed()V",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getImportantForAccessibility()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->getOverScrollMode()I",
        "Landroid/support/v4/view/ViewCompat$ViewCompatImpl;->setImportantForAccessibility()V"
    ],
    "Landroid/support/v4/view/PagerAdapter;": [
        "Landroid/support/v4/view/PagerAdapter;->saveState()Landroid/os/Parcelable;",
        "Landroid/support/v4/view/PagerAdapter;->getPageWidth()F",
        "Landroid/support/v4/view/PagerAdapter;->destroyItem()V",
        "Landroid/support/v4/view/PagerAdapter;->instantiateItem()Ljava/lang/Object;",
        "Landroid/support/v4/view/PagerAdapter;->finishUpdate()V",
        "Landroid/support/v4/view/PagerAdapter;->unregisterDataSetObserver()V",
        "Landroid/support/v4/view/PagerAdapter;->startUpdate()V",
        "Landroid/support/v4/view/PagerAdapter;->getCount()I",
        "Landroid/support/v4/view/PagerAdapter;->getPageTitle()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/PagerAdapter;->getItemPosition()I",
        "Landroid/support/v4/view/PagerAdapter;->isViewFromObject()Z",
        "Landroid/support/v4/view/PagerAdapter;->registerDataSetObserver()V",
        "Landroid/support/v4/view/PagerAdapter;->restoreState()V",
        "Landroid/support/v4/view/PagerAdapter;->setPrimaryItem()V"
    ],
    "Landroid/support/v4/view/ViewPager;": [
        "Landroid/support/v4/view/ViewPager;->getWidth()I",
        "Landroid/support/v4/view/ViewPager;->getPaddingLeft()I",
        "Landroid/support/v4/view/ViewPager;->smoothScrollTo()V",
        "Landroid/support/v4/view/ViewPager;->getMeasuredHeight()I",
        "Landroid/support/v4/view/ViewPager;->recomputeScrollPosition()V",
        "Landroid/support/v4/view/ViewPager;->calculatePageOffsets()V",
        "Landroid/support/v4/view/ViewPager;->getPaddingRight()I",
        "Landroid/support/v4/view/ViewPager;->playSoundEffect()V",
        "Landroid/support/v4/view/ViewPager;->requestLayout()V",
        "Landroid/support/v4/view/ViewPager;->setPageMarginDrawable()V",
        "Landroid/support/v4/view/ViewPager;->getScrollX()I",
        "Landroid/support/v4/view/ViewPager;->addViewInLayout()Z",
        "Landroid/support/v4/view/ViewPager;->distanceInfluenceForSnapDuration()F",
        "Landroid/support/v4/view/ViewPager;->isFocusableInTouchMode()Z",
        "Landroid/support/v4/view/ViewPager;->onPageScrolled()V",
        "Landroid/support/v4/view/ViewPager;->infoForCurrentScrollPosition()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->infoForAnyChild()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->generateDefaultLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/support/v4/view/ViewPager;->determineTargetPage()I",
        "Landroid/support/v4/view/ViewPager;->isInTouchMode()Z",
        "Landroid/support/v4/view/ViewPager;->refreshDrawableState()V",
        "Landroid/support/v4/view/ViewPager;->hasFocus()Z",
        "Landroid/support/v4/view/ViewPager;->getHeight()I",
        "Landroid/support/v4/view/ViewPager;->arrowScroll()Z",
        "Landroid/support/v4/view/ViewPager;->setScrollState()V",
        "Landroid/support/v4/view/ViewPager;->generateLayoutParams()Landroid/view/ViewGroup$LayoutParams;",
        "Landroid/support/v4/view/ViewPager;->getAdapter()Landroid/support/v4/view/PagerAdapter;",
        "Landroid/support/v4/view/ViewPager;->setFocusable()V",
        "Landroid/support/v4/view/ViewPager;->setDescendantFocusability()V",
        "Landroid/support/v4/view/ViewPager;->scrollTo()V",
        "Landroid/support/v4/view/ViewPager;->setCurrentItem()V",
        "Landroid/support/v4/view/ViewPager;->executeKeyEvent()Z",
        "Landroid/support/v4/view/ViewPager;->isFocusable()Z",
        "Landroid/support/v4/view/ViewPager;->getChildAt()Landroid/view/View;",
        "Landroid/support/v4/view/ViewPager;->completeScroll()V",
        "Landroid/support/v4/view/ViewPager;->infoForChild()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->onSecondaryPointerUp()V",
        "Landroid/support/v4/view/ViewPager;->removeViewAt()V",
        "Landroid/support/v4/view/ViewPager;->getPaddingTop()I",
        "Landroid/support/v4/view/ViewPager;->getDrawableState()[I",
        "Landroid/support/v4/view/ViewPager;->canScroll()Z",
        "Landroid/support/v4/view/ViewPager;->setMeasuredDimension()V",
        "Landroid/support/v4/view/ViewPager;->setInternalPageChangeListener()Landroid/support/v4/view/ViewPager$OnPageChangeListener;",
        "Landroid/support/v4/view/ViewPager;->getDescendantFocusability()I",
        "Landroid/support/v4/view/ViewPager;->getChildCount()I",
        "Landroid/support/v4/view/ViewPager;->pageLeft()Z",
        "Landroid/support/v4/view/ViewPager;->populate()V",
        "Landroid/support/v4/view/ViewPager;->getPaddingBottom()I",
        "Landroid/support/v4/view/ViewPager;->removeNonDecorViews()V",
        "Landroid/support/v4/view/ViewPager;->performDrag()Z",
        "Landroid/support/v4/view/ViewPager;->getMeasuredWidth()I",
        "Landroid/support/v4/view/ViewPager;->pageScrolled()Z",
        "Landroid/support/v4/view/ViewPager;->getCurrentItem()I",
        "Landroid/support/v4/view/ViewPager;->endDrag()V",
        "Landroid/support/v4/view/ViewPager;->invalidate()V",
        "Landroid/support/v4/view/ViewPager;->checkLayoutParams()Z",
        "Landroid/support/v4/view/ViewPager;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/support/v4/view/ViewPager;->getDefaultSize()I",
        "Landroid/support/v4/view/ViewPager;->findFocus()Landroid/view/View;",
        "Landroid/support/v4/view/ViewPager;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/view/ViewPager;->addNewItem()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->pageRight()Z",
        "Landroid/support/v4/view/ViewPager;->setOnAdapterChangeListener()V",
        "Landroid/support/v4/view/ViewPager;->setScrollingCacheEnabled()V",
        "Landroid/support/v4/view/ViewPager;->getScrollY()I",
        "Landroid/support/v4/view/ViewPager;->setCurrentItemInternal()V",
        "Landroid/support/v4/view/ViewPager;->setWillNotDraw()V",
        "Landroid/support/v4/view/ViewPager;->isGutterDrag()Z",
        "Landroid/support/v4/view/ViewPager;->infoForPosition()Landroid/support/v4/view/ViewPager$ItemInfo;",
        "Landroid/support/v4/view/ViewPager;->getChildRectInPagerCoordinates()Landroid/graphics/Rect;"
    ],
    "Landroid/widget/Scroller;": [
        "Landroid/widget/Scroller;->fling()V",
        "Landroid/widget/Scroller;->getFinalX()I",
        "Landroid/widget/Scroller;->isFinished()Z",
        "Landroid/widget/Scroller;->getCurrVelocity()F",
        "Landroid/widget/Scroller;->getCurrX()I",
        "Landroid/widget/Scroller;->getDuration()I",
        "Landroid/widget/Scroller;->timePassed()I",
        "Landroid/widget/Scroller;->startScroll()V",
        "Landroid/widget/Scroller;->getCurrY()I",
        "Landroid/widget/Scroller;->abortAnimation()V",
        "Landroid/widget/Scroller;->computeScrollOffset()Z"
    ],
    "Landroid/view/VelocityTracker;": [
        "Landroid/view/VelocityTracker;->clear()V",
        "Landroid/view/VelocityTracker;->recycle()V",
        "Landroid/view/VelocityTracker;->computeCurrentVelocity()V",
        "Landroid/view/VelocityTracker;->obtain()Landroid/view/VelocityTracker;",
        "Landroid/view/VelocityTracker;->addMovement()V",
        "Landroid/view/VelocityTracker;->getYVelocity()F",
        "Landroid/view/VelocityTracker;->getXVelocity()F"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->set()V",
        "Landroid/graphics/Rect;->union()V"
    ],
    "Landroid/support/v4/view/MotionEventCompat;": [
        "Landroid/support/v4/view/MotionEventCompat;->getX()F",
        "Landroid/support/v4/view/MotionEventCompat;->getY()F",
        "Landroid/support/v4/view/MotionEventCompat;->findPointerIndex()I",
        "Landroid/support/v4/view/MotionEventCompat;->getActionIndex()I",
        "Landroid/support/v4/view/MotionEventCompat;->getPointerId()I"
    ],
    "Landroid/support/v4/widget/EdgeEffectCompat;": [
        "Landroid/support/v4/widget/EdgeEffectCompat;->onRelease()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->draw()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->finish()V",
        "Landroid/support/v4/widget/EdgeEffectCompat;->isFinished()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->onPull()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat;->setSize()V"
    ],
    "Landroid/support/v4/view/ViewPager$OnPageChangeListener;": [
        "Landroid/support/v4/view/ViewPager$OnPageChangeListener;->onPageSelected()V",
        "Landroid/support/v4/view/ViewPager$OnPageChangeListener;->onPageScrollStateChanged()V",
        "Landroid/support/v4/view/ViewPager$OnPageChangeListener;->onPageScrolled()V"
    ],
    "Landroid/view/FocusFinder;": [
        "Landroid/view/FocusFinder;->getInstance()Landroid/view/FocusFinder;",
        "Landroid/view/FocusFinder;->findNextFocus()Landroid/view/View;"
    ],
    "Landroid/view/SoundEffectConstants;": [
        "Landroid/view/SoundEffectConstants;->getContantForFocusDirection()I"
    ],
    "Landroid/support/v4/view/ViewCompat;": [
        "Landroid/support/v4/view/ViewCompat;->getImportantForAccessibility()I",
        "Landroid/support/v4/view/ViewCompat;->getOverScrollMode()I",
        "Landroid/support/v4/view/ViewCompat;->setImportantForAccessibility()V",
        "Landroid/support/v4/view/ViewCompat;->setAccessibilityDelegate()V",
        "Landroid/support/v4/view/ViewCompat;->postInvalidateOnAnimation()V",
        "Landroid/support/v4/view/ViewCompat;->canScrollHorizontally()Z"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->restoreToCount()V",
        "Landroid/graphics/Canvas;->translate()V",
        "Landroid/graphics/Canvas;->rotate()V",
        "Landroid/graphics/Canvas;->save()I",
        "Landroid/graphics/Canvas;->drawRect()V"
    ],
    "Landroid/support/v4/view/VelocityTrackerCompat;": [
        "Landroid/support/v4/view/VelocityTrackerCompat;->getXVelocity()F"
    ],
    "Landroid/support/v4/view/KeyEventCompat;": [
        "Landroid/support/v4/view/KeyEventCompat;->hasModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat;->hasNoModifiers()Z"
    ],
    "Landroid/view/ViewConfiguration;": [
        "Landroid/view/ViewConfiguration;->getScaledTouchSlop()I",
        "Landroid/view/ViewConfiguration;->get()Landroid/view/ViewConfiguration;",
        "Landroid/view/ViewConfiguration;->getScaledMinimumFlingVelocity()I",
        "Landroid/view/ViewConfiguration;->getScaledMaximumFlingVelocity()I",
        "Landroid/view/ViewConfiguration;->getScaledPagingTouchSlop()I"
    ],
    "Landroid/support/v4/view/ViewConfigurationCompat;": [
        "Landroid/support/v4/view/ViewConfigurationCompat;->getScaledPagingTouchSlop()I"
    ],
    "Landroid/support/v4/view/ViewPager$SavedState;": [
        "Landroid/support/v4/view/ViewPager$SavedState;->getSuperState()Landroid/os/Parcelable;"
    ],
    "Landroid/support/v4/view/ViewPager$OnAdapterChangeListener;": [
        "Landroid/support/v4/view/ViewPager$OnAdapterChangeListener;->onAdapterChanged()V"
    ],
    "Landroid/support/v4/view/PagerTitleStrip;": [
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingTop()I",
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingBottom()I",
        "Landroid/support/v4/view/PagerTitleStrip;->addView()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setNonPrimaryAlpha()V",
        "Landroid/support/v4/view/PagerTitleStrip;->updateAdapter()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getMinHeight()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setSingleLineAllCaps()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getHeight()I",
        "Landroid/support/v4/view/PagerTitleStrip;->updateText()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setMeasuredDimension()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setTextSpacing()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingRight()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setBackgroundColor()V",
        "Landroid/support/v4/view/PagerTitleStrip;->requestLayout()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setBackgroundResource()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setTextSize()V",
        "Landroid/support/v4/view/PagerTitleStrip;->setPadding()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getWidth()I",
        "Landroid/support/v4/view/PagerTitleStrip;->setBackgroundDrawable()V",
        "Landroid/support/v4/view/PagerTitleStrip;->onDraw()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getParent()Landroid/view/ViewParent;",
        "Landroid/support/v4/view/PagerTitleStrip;->updateTextPositions()V",
        "Landroid/support/v4/view/PagerTitleStrip;->getPaddingLeft()I",
        "Landroid/support/v4/view/PagerTitleStrip;->getBackground()Landroid/graphics/drawable/Drawable;"
    ],
    "Landroid/support/v4/view/PagerTitleStrip$PagerTitleStripImpl;": [
        "Landroid/support/v4/view/PagerTitleStrip$PagerTitleStripImpl;->setSingleLineAllCaps()V"
    ],
    "Landroid/view/View$AccessibilityDelegate;": [
        "Landroid/view/View$AccessibilityDelegate;->onInitializeAccessibilityEvent()V",
        "Landroid/view/View$AccessibilityDelegate;->onPopulateAccessibilityEvent()V",
        "Landroid/view/View$AccessibilityDelegate;->sendAccessibilityEvent()V",
        "Landroid/view/View$AccessibilityDelegate;->performAccessibilityAction()Z",
        "Landroid/view/View$AccessibilityDelegate;->onInitializeAccessibilityNodeInfo()V",
        "Landroid/view/View$AccessibilityDelegate;->sendAccessibilityEventUnchecked()V",
        "Landroid/view/View$AccessibilityDelegate;->dispatchPopulateAccessibilityEvent()Z",
        "Landroid/view/View$AccessibilityDelegate;->getAccessibilityNodeProvider()Landroid/view/accessibility/AccessibilityNodeProvider;",
        "Landroid/view/View$AccessibilityDelegate;->onRequestSendAccessibilityEvent()Z"
    ],
    "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;": [
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->metaStateHasNoModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->metaStateHasModifiers()Z",
        "Landroid/support/v4/view/KeyEventCompat$KeyEventVersionImpl;->normalizeMetaState()I"
    ],
    "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;": [
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->setShowAsAction()Z",
        "Landroid/support/v4/view/MenuItemCompat$MenuVersionImpl;->setActionView()Landroid/view/MenuItem;"
    ],
    "Landroid/support/v4/view/MenuCompat$MenuVersionImpl;": [
        "Landroid/support/v4/view/MenuCompat$MenuVersionImpl;->setShowAsAction()Z"
    ],
    "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;": [
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->findPointerIndex()I",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getY()F",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getPointerId()I",
        "Landroid/support/v4/view/MotionEventCompat$MotionEventVersionImpl;->getX()F"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->setColor()V"
    ],
    "Landroid/support/v4/view/PagerTabStrip;": [
        "Landroid/support/v4/view/PagerTabStrip;->getHeight()I",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingBottom()I",
        "Landroid/support/v4/view/PagerTabStrip;->setTabIndicatorColor()V",
        "Landroid/support/v4/view/PagerTabStrip;->getWidth()I",
        "Landroid/support/v4/view/PagerTabStrip;->setPadding()V",
        "Landroid/support/v4/view/PagerTabStrip;->invalidate()V",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingTop()I",
        "Landroid/support/v4/view/PagerTabStrip;->getTextSpacing()I",
        "Landroid/support/v4/view/PagerTabStrip;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/view/PagerTabStrip;->getBackground()Landroid/graphics/drawable/Drawable;",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingLeft()I",
        "Landroid/support/v4/view/PagerTabStrip;->setWillNotDraw()V",
        "Landroid/support/v4/view/PagerTabStrip;->getPaddingRight()I",
        "Landroid/support/v4/view/PagerTabStrip;->setTextSpacing()V"
    ],
    "Landroid/support/v4/view/ViewConfigurationCompat$ViewConfigurationVersionImpl;": [
        "Landroid/support/v4/view/ViewConfigurationCompat$ViewConfigurationVersionImpl;->getScaledPagingTouchSlop()I"
    ],
    "Landroid/database/DataSetObservable;": [
        "Landroid/database/DataSetObservable;->registerObserver()V",
        "Landroid/database/DataSetObservable;->notifyChanged()V",
        "Landroid/database/DataSetObservable;->unregisterObserver()V"
    ],
    "Landroid/animation/ValueAnimator;": [
        "Landroid/animation/ValueAnimator;->getFrameDelay()J"
    ],
    "Landroid/view/accessibility/AccessibilityRecord;": [
        "Landroid/view/accessibility/AccessibilityRecord;->setMaxScrollX()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setAddedCount()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setSource()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getScrollX()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getWindowId()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getFromIndex()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setToIndex()V",
        "Landroid/view/accessibility/AccessibilityRecord;->recycle()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setFullScreen()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getCurrentItemIndex()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setCurrentItemIndex()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getToIndex()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setScrollable()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setContentDescription()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityRecord;->getMaxScrollY()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getAddedCount()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setFromIndex()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setParcelableData()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setItemCount()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setPassword()V",
        "Landroid/view/accessibility/AccessibilityRecord;->isEnabled()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->getText()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityRecord;->setMaxScrollY()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setScrollX()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getParcelableData()Landroid/os/Parcelable;",
        "Landroid/view/accessibility/AccessibilityRecord;->getMaxScrollX()I",
        "Landroid/view/accessibility/AccessibilityRecord;->getScrollY()I",
        "Landroid/view/accessibility/AccessibilityRecord;->setClassName()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setScrollY()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getItemCount()I",
        "Landroid/view/accessibility/AccessibilityRecord;->isChecked()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityRecord;->getRemovedCount()I",
        "Landroid/view/accessibility/AccessibilityRecord;->obtain()Landroid/view/accessibility/AccessibilityRecord;",
        "Landroid/view/accessibility/AccessibilityRecord;->setBeforeText()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setEnabled()V",
        "Landroid/view/accessibility/AccessibilityRecord;->isScrollable()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->setRemovedCount()V",
        "Landroid/view/accessibility/AccessibilityRecord;->setChecked()V",
        "Landroid/view/accessibility/AccessibilityRecord;->getSource()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityRecord;->isPassword()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->isFullScreen()Z",
        "Landroid/view/accessibility/AccessibilityRecord;->getBeforeText()Ljava/lang/CharSequence;"
    ],
    "Landroid/view/accessibility/AccessibilityNodeInfo;": [
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setAccessibilityFocused()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setVisibleToUser()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getBoundsInParent()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setText()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->addAction()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getWindowId()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setLongClickable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isPassword()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setFocusable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isSelected()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setSource()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->obtain()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setParent()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getPackageName()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setPackageName()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setSelected()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->recycle()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setChecked()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setClickable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setClassName()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getChild()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isLongClickable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setBoundsInScreen()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isChecked()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getChildCount()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setMovementGranularities()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isScrollable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isFocused()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isVisibleToUser()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getText()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setCheckable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isAccessibilityFocused()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isClickable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setScrollable()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isEnabled()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->focusSearch()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setEnabled()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isFocusable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getBoundsInScreen()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setBoundsInParent()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getMovementGranularities()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->addChild()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->findAccessibilityNodeInfosByText()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->performAction()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setContentDescription()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setPassword()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getActions()I",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->getParent()Landroid/view/accessibility/AccessibilityNodeInfo;",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->isCheckable()Z",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->setFocused()V",
        "Landroid/view/accessibility/AccessibilityNodeInfo;->findFocus()Landroid/view/accessibility/AccessibilityNodeInfo;"
    ],
    "Landroid/view/accessibility/AccessibilityEvent;": [
        "Landroid/view/accessibility/AccessibilityEvent;->getRecord()Landroid/view/accessibility/AccessibilityRecord;",
        "Landroid/view/accessibility/AccessibilityEvent;->appendRecord()V",
        "Landroid/view/accessibility/AccessibilityEvent;->getRecordCount()I"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;": [
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;->getImpl()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;->getRecordCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;->appendRecord()V",
        "Landroid/support/v4/view/accessibility/AccessibilityEventCompat$AccessibilityEventVersionImpl;->getRecord()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isFullScreen()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setScrollY()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setSource()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setMaxScrollY()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getParcelableData()Landroid/os/Parcelable;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getMaxScrollY()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isPassword()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setChecked()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setBeforeText()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getScrollY()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->recycle()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getItemCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setParcelableData()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setPassword()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setItemCount()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getText()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->obtain()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setFromIndex()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getToIndex()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setContentDescription()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setRemovedCount()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setEnabled()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setAddedCount()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setScrollable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isChecked()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setToIndex()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getWindowId()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getMaxScrollX()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getRemovedCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setScrollX()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getBeforeText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getAddedCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getSource()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getCurrentItemIndex()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setFullScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getFromIndex()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setCurrentItemIndex()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setMaxScrollX()V",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->isScrollable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->getScrollX()I",
        "Landroid/support/v4/view/accessibility/AccessibilityRecordCompat$AccessibilityRecordImpl;->setClassName()V"
    ],
    "Landroid/view/accessibility/AccessibilityManager;": [
        "Landroid/view/accessibility/AccessibilityManager;->getInstalledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityManager;->removeAccessibilityStateChangeListener()Z",
        "Landroid/view/accessibility/AccessibilityManager;->getEnabledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/view/accessibility/AccessibilityManager;->addAccessibilityStateChangeListener()Z",
        "Landroid/view/accessibility/AccessibilityManager;->isTouchExplorationEnabled()Z"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl;->newAccessibilityNodeProviderBridge()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->getEnabledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->isTouchExplorationEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->getInstalledAccessibilityServiceList()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->addAccessibilityStateChangeListener()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityManagerVersionImpl;->removeAccessibilityStateChangeListener()Z"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;": [
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->obtain()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setLongClickable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setSource()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setCheckable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->findAccessibilityNodeInfosByText()Ljava/util/List;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isVisibleToUser()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setPackageName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->findFocus()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setClassName()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isEnabled()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getBoundsInParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getText()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->addAction()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getBoundsInScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getContentDescription()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isChecked()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getChild()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isFocused()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setBoundsInParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setClickable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getParent()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isPassword()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getPackageName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isFocusable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isSelected()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setPassword()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setMovementGranularities()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->addChild()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->recycle()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setVisibleToUser()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setEnabled()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setAccessibilityFocused()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setBoundsInScreen()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isCheckable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getMovementGranularities()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getActions()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setFocused()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getChildCount()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->performAction()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setFocusable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getWindowId()I",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isScrollable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->getClassName()Ljava/lang/CharSequence;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setContentDescription()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isLongClickable()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setScrollable()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isAccessibilityFocused()Z",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->focusSearch()Ljava/lang/Object;",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setChecked()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setText()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setSelected()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->setParent()V",
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl;->isClickable()Z"
    ],
    "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;": [
        "Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;->wrapNonNullInstance()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;"
    ],
    "Landroid/widget/EdgeEffect;": [
        "Landroid/widget/EdgeEffect;->isFinished()Z",
        "Landroid/widget/EdgeEffect;->setSize()V",
        "Landroid/widget/EdgeEffect;->finish()V",
        "Landroid/widget/EdgeEffect;->draw()Z",
        "Landroid/widget/EdgeEffect;->onRelease()V",
        "Landroid/widget/EdgeEffect;->onPull()V",
        "Landroid/widget/EdgeEffect;->onAbsorb()V"
    ],
    "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;": [
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->onAbsorb()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->onRelease()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->draw()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->onPull()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->newEdgeEffect()Ljava/lang/Object;",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->isFinished()Z",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->finish()V",
        "Landroid/support/v4/widget/EdgeEffectCompat$EdgeEffectImpl;->setSize()V"
    ],
    "Landroid/support/v4/widget/CursorAdapter;": [
        "Landroid/support/v4/widget/CursorAdapter;->newView()Landroid/view/View;",
        "Landroid/support/v4/widget/CursorAdapter;->swapCursor()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/CursorAdapter;->notifyDataSetInvalidated()V",
        "Landroid/support/v4/widget/CursorAdapter;->newDropDownView()Landroid/view/View;",
        "Landroid/support/v4/widget/CursorAdapter;->notifyDataSetChanged()V",
        "Landroid/support/v4/widget/CursorAdapter;->bindView()V"
    ],
    "Landroid/widget/FilterQueryProvider;": [
        "Landroid/widget/FilterQueryProvider;->runQuery()Landroid/database/Cursor;"
    ],
    "Landroid/widget/SearchView;": [
        "Landroid/widget/SearchView;->setOnQueryTextListener()V"
    ],
    "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;": [
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->runQueryOnBackgroundThread()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->getCursor()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->convertToString()Ljava/lang/CharSequence;",
        "Landroid/support/v4/widget/CursorFilter$CursorFilterClient;->changeCursor()V"
    ],
    "Landroid/support/v4/widget/SimpleCursorAdapter;": [
        "Landroid/support/v4/widget/SimpleCursorAdapter;->findColumns()V",
        "Landroid/support/v4/widget/SimpleCursorAdapter;->setViewText()V",
        "Landroid/support/v4/widget/SimpleCursorAdapter;->setViewImage()V"
    ],
    "Landroid/support/v4/widget/SimpleCursorAdapter$ViewBinder;": [
        "Landroid/support/v4/widget/SimpleCursorAdapter$ViewBinder;->setViewValue()Z"
    ],
    "Landroid/support/v4/widget/ResourceCursorAdapter;": [
        "Landroid/support/v4/widget/ResourceCursorAdapter;->changeCursor()V",
        "Landroid/support/v4/widget/ResourceCursorAdapter;->swapCursor()Landroid/database/Cursor;",
        "Landroid/support/v4/widget/ResourceCursorAdapter;->convertToString()Ljava/lang/CharSequence;"
    ],
    "Landroid/support/v4/widget/SimpleCursorAdapter$CursorToStringConverter;": [
        "Landroid/support/v4/widget/SimpleCursorAdapter$CursorToStringConverter;->convertToString()Ljava/lang/CharSequence;"
    ],
    "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;": [
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->setOnQueryTextListener()V",
        "Landroid/support/v4/widget/SearchViewCompat$SearchViewCompatImpl;->newSearchView()Landroid/view/View;"
    ],
    "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;": [
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getId()Ljava/lang/String;",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getCanRetrieveWindowContent()Z",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getSettingsActivityName()Ljava/lang/String;",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getDescription()Ljava/lang/String;",
        "Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;->getResolveInfo()Landroid/content/pm/ResolveInfo;"
    ],
    "Landroid/accessibilityservice/AccessibilityServiceInfo;": [
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getResolveInfo()Landroid/content/pm/ResolveInfo;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getSettingsActivityName()Ljava/lang/String;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getId()Ljava/lang/String;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getDescription()Ljava/lang/String;",
        "Landroid/accessibilityservice/AccessibilityServiceInfo;->getCanRetrieveWindowContent()Z"
    ],
    "Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;": [
        "Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;->newArray()[Ljava/lang/Object;",
        "Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;->createFromParcel()Ljava/lang/Object;"
    ],
    "Landroid/support/v4/os/ParcelableCompatCreatorHoneycombMR2Stub;": [
        "Landroid/support/v4/os/ParcelableCompatCreatorHoneycombMR2Stub;->instantiate()Landroid/os/Parcelable$Creator;"
    ],
    "Landroid/support/v4/content/CursorLoader;": [
        "Landroid/support/v4/content/CursorLoader;->getContext()Landroid/content/Context;",
        "Landroid/support/v4/content/CursorLoader;->onStopLoading()V",
        "Landroid/support/v4/content/CursorLoader;->registerContentObserver()V",
        "Landroid/support/v4/content/CursorLoader;->takeContentChanged()Z",
        "Landroid/support/v4/content/CursorLoader;->cancelLoad()Z",
        "Landroid/support/v4/content/CursorLoader;->onCanceled()V",
        "Landroid/support/v4/content/CursorLoader;->forceLoad()V",
        "Landroid/support/v4/content/CursorLoader;->deliverResult()V",
        "Landroid/support/v4/content/CursorLoader;->isReset()Z",
        "Landroid/support/v4/content/CursorLoader;->isStarted()Z",
        "Landroid/support/v4/content/CursorLoader;->loadInBackground()Landroid/database/Cursor;"
    ],
    "Landroid/support/v4/content/AsyncTaskLoader;": [
        "Landroid/support/v4/content/AsyncTaskLoader;->loadInBackground()Ljava/lang/Object;",
        "Landroid/support/v4/content/AsyncTaskLoader;->executePendingTask()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->onCanceled()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->onReset()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->deliverResult()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->dump()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->dispatchOnCancelled()V",
        "Landroid/support/v4/content/AsyncTaskLoader;->isAbandoned()Z",
        "Landroid/support/v4/content/AsyncTaskLoader;->cancelLoad()Z"
    ],
    "Landroid/support/v4/content/ModernAsyncTask;": [
        "Landroid/support/v4/content/ModernAsyncTask;->postResultIfNotInvoked()V",
        "Landroid/support/v4/content/ModernAsyncTask;->isCancelled()Z",
        "Landroid/support/v4/content/ModernAsyncTask;->onPreExecute()V",
        "Landroid/support/v4/content/ModernAsyncTask;->finish()V",
        "Landroid/support/v4/content/ModernAsyncTask;->executeOnExecutor()Landroid/support/v4/content/ModernAsyncTask;",
        "Landroid/support/v4/content/ModernAsyncTask;->postResult()Ljava/lang/Object;",
        "Landroid/support/v4/content/ModernAsyncTask;->onPostExecute()V",
        "Landroid/support/v4/content/ModernAsyncTask;->onCancelled()V"
    ],
    "Landroid/support/v4/content/ModernAsyncTask$InternalHandler;": [
        "Landroid/support/v4/content/ModernAsyncTask$InternalHandler;->obtainMessage()Landroid/os/Message;",
        "Landroid/support/v4/content/ModernAsyncTask$InternalHandler;->getLooper()Landroid/os/Looper;"
    ],
    "Ljava/util/concurrent/atomic/AtomicBoolean;": [
        "Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z"
    ],
    "Ljava/util/concurrent/FutureTask;": [
        "Ljava/util/concurrent/FutureTask;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/FutureTask;->cancel()Z",
        "Ljava/util/concurrent/FutureTask;->isCancelled()Z"
    ],
    "Landroid/support/v4/content/ModernAsyncTask$Status;": [
        "Landroid/support/v4/content/ModernAsyncTask$Status;->ordinal()I"
    ],
    "Landroid/support/v4/content/Loader$OnLoadCompleteListener;": [
        "Landroid/support/v4/content/Loader$OnLoadCompleteListener;->onLoadComplete()V"
    ],
    "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;": [
        "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;->executeOnExecutor()Landroid/support/v4/content/ModernAsyncTask;",
        "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;->access$000()Ljava/util/concurrent/CountDownLatch;",
        "Landroid/support/v4/content/AsyncTaskLoader$LoadTask;->cancel()Z"
    ],
    "Ljava/util/concurrent/CountDownLatch;": [
        "Ljava/util/concurrent/CountDownLatch;->await()V"
    ],
    "Landroid/support/v4/content/ContextCompatJellybean;": [
        "Landroid/support/v4/content/ContextCompatJellybean;->startActivities()V"
    ],
    "Landroid/support/v4/content/ContextCompatHoneycomb;": [
        "Landroid/support/v4/content/ContextCompatHoneycomb;->startActivities()V"
    ],
    "Landroid/content/BroadcastReceiver;": [
        "Landroid/content/BroadcastReceiver;->onReceive()V"
    ],
    "Lcom/badlogic/gdx/audio/Sound;": [
        "Lcom/badlogic/gdx/audio/Sound;->play()J"
    ],
    "Ljie/java/android/boxcatcher/MaterialManager;": [
        "Ljie/java/android/boxcatcher/MaterialManager;->getBitmapFont()Ljie/java/android/boxcatcher/material/BitmapFontData;",
        "Ljie/java/android/boxcatcher/MaterialManager;->dispose()V",
        "Ljie/java/android/boxcatcher/MaterialManager;->load()I"
    ],
    "Ljie/java/android/boxcatcher/material/BitmapFontData;": [
        "Ljie/java/android/boxcatcher/material/BitmapFontData;->load()I",
        "Ljie/java/android/boxcatcher/material/BitmapFontData;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Ljie/java/android/boxcatcher/material/BitmapFontData;->getStyle()Lcom/badlogic/gdx/scenes/scene2d/ui/Label$LabelStyle;",
        "Ljie/java/android/boxcatcher/material/BitmapFontData;->getBitmapFont()Lcom/badlogic/gdx/graphics/g2d/BitmapFont;",
        "Ljie/java/android/boxcatcher/material/BitmapFontData;->dispose()V"
    ],
    "Ljie/java/android/boxcatcher/BCScreen;": [
        "Ljie/java/android/boxcatcher/BCScreen;->render()V",
        "Ljie/java/android/boxcatcher/BCScreen;->touchDown()Z",
        "Ljie/java/android/boxcatcher/BCScreen;->addActor()V",
        "Ljie/java/android/boxcatcher/BCScreen;->dispose()V"
    ],
    "Ljie/java/android/boxcatcher/PlaySoundWrong;": [
        "Ljie/java/android/boxcatcher/PlaySoundWrong;->doInBackground()Ljava/lang/String;"
    ],
    "Ljie/java/android/boxcatcher/PlaySoundBlood;": [
        "Ljie/java/android/boxcatcher/PlaySoundBlood;->doInBackground()Ljava/lang/String;"
    ],
    "Ljie/java/android/boxcatcher/LongOperation;": [
        "Ljie/java/android/boxcatcher/LongOperation;->execute()Landroid/os/AsyncTask;",
        "Ljie/java/android/boxcatcher/LongOperation;->onPostExecute()V",
        "Ljie/java/android/boxcatcher/LongOperation;->doInBackground()Ljava/lang/String;"
    ],
    "Ljie/java/android/boxcatcher/RadarkiLevelChoose;": [
        "Ljie/java/android/boxcatcher/RadarkiLevelChoose;->addActor()V"
    ],
    "Ljie/java/android/boxcatcher/FacebookUtil;": [
        "Ljie/java/android/boxcatcher/FacebookUtil;->post()V"
    ],
    "Lcom/facebook/widget/WebDialog$FeedDialogBuilder;": [
        "Lcom/facebook/widget/WebDialog$FeedDialogBuilder;->build()Lcom/facebook/widget/WebDialog;"
    ],
    "Ljie/java/android/boxcatcher/DataSource;": [
        "Ljie/java/android/boxcatcher/DataSource;->getAchievementsUnlocked()Ljava/util/Map;",
        "Ljie/java/android/boxcatcher/DataSource;->getParameterString()Ljava/lang/String;",
        "Ljie/java/android/boxcatcher/DataSource;->setAchievementAcomplished()V",
        "Ljie/java/android/boxcatcher/DataSource;->setParameter()V",
        "Ljie/java/android/boxcatcher/DataSource;->loadFrames()I",
        "Ljie/java/android/boxcatcher/DataSource;->open()V",
        "Ljie/java/android/boxcatcher/DataSource;->setMoney()V",
        "Ljie/java/android/boxcatcher/DataSource;->close()V",
        "Ljie/java/android/boxcatcher/DataSource;->setHp()V",
        "Ljie/java/android/boxcatcher/DataSource;->setHpAndMoney()V",
        "Ljie/java/android/boxcatcher/DataSource;->loadSetting()I",
        "Ljie/java/android/boxcatcher/DataSource;->getParameter()I",
        "Ljie/java/android/boxcatcher/DataSource;->setEnemiesKilled()V",
        "Ljie/java/android/boxcatcher/DataSource;->loadBoxes()I",
        "Ljie/java/android/boxcatcher/DataSource;->getMoney()Ljava/lang/Integer;",
        "Ljie/java/android/boxcatcher/DataSource;->setWeaponLevelAndMoney()V",
        "Ljie/java/android/boxcatcher/DataSource;->getHpLevel()I"
    ],
    "Lcom/badlogic/gdx2/Game;": [
        "Lcom/badlogic/gdx2/Game;->setScreen()V",
        "Lcom/badlogic/gdx2/Game;->render()V",
        "Lcom/badlogic/gdx2/Game;->dispose()V"
    ],
    "Ljie/java/android/boxcatcher/MySQLiteHelper;": [
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setParameter()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->loadSetting()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getKilledWithAk()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getAchievementsUnlocked()Ljava/util/Map;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getGamesPlayed()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getHpLevel()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getMoney()Ljava/lang/Integer;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getWeaponsUnlocked()Ljava/util/Map;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setSputniksKilled()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->close()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getSputniksKilled()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->loadBoxes()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getEnemiesKilled()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getKilledWithBazooka()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setHpLevel()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getKilledWithLaser()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setHpLevelAndMoney()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->covertBoxRace()Ljie/java/android/boxcatcher/StageData$BoxRace;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getParameterString()Ljava/lang/String;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->covertBoxType()Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setEnemiesKilled()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->saveLevelToDatabase()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->convertBoxShape()Ljie/java/android/boxcatcher/BoxActor$BoxShape;",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setMoney()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setWeaponLevelAndMoney()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->isStageExist()Z",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->onCreate()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->setAchievementAcomplished()V",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->loadFrames()I",
        "Ljie/java/android/boxcatcher/MySQLiteHelper;->getParameter()I"
    ],
    "Ljie/java/android/boxcatcher/BoxContactListener;": [
        "Ljie/java/android/boxcatcher/BoxContactListener;->onEndContact()V",
        "Ljie/java/android/boxcatcher/BoxContactListener;->onBeginContact()V"
    ],
    "Ljie/java/android/boxcatcher/PlaySoundGood;": [
        "Ljie/java/android/boxcatcher/PlaySoundGood;->doInBackground()Ljava/lang/String;"
    ],
    "Ljie/java/android/boxcatcher/demo/BoxData;": [
        "Ljie/java/android/boxcatcher/demo/BoxData;->loadBoxes()V",
        "Ljie/java/android/boxcatcher/demo/BoxData;->loadFrames()V"
    ],
    "Ljie/java/android/boxcatcher/WorldScreenZul$ArrowTypes;": [
        "Ljie/java/android/boxcatcher/WorldScreenZul$ArrowTypes;->equals()Z"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RemoveActorActionBlood;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RemoveActorActionBlood;->setWsz()Lcom/badlogic/gdx/scenes/scene2d/actions/RemoveActorActionBlood;"
    ],
    "Ljie/java/android/boxcatcher/WorldDebugRenderer;": [
        "Ljie/java/android/boxcatcher/WorldDebugRenderer;->dispose()V",
        "Ljie/java/android/boxcatcher/WorldDebugRenderer;->render()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;->setX()Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;->setBa()Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;->setY()Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;->setSmallBa()Lcom/badlogic/gdx/scenes/scene2d/actions/ChangeTextureAction;"
    ],
    "Ljie/java/android/boxcatcher/material/TextureData;": [
        "Ljie/java/android/boxcatcher/material/TextureData;->loadTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Ljie/java/android/boxcatcher/material/TextureData;->dispose()V",
        "Ljie/java/android/boxcatcher/material/TextureData;->loadRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Ljie/java/android/boxcatcher/material/TextureData;->load()I",
        "Ljie/java/android/boxcatcher/material/TextureData;->getTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Ljie/java/android/boxcatcher/material/TextureData;->loadAnimation()Lcom/badlogic/gdx/graphics/g2d/Animation;"
    ],
    "Ljie/java/android/boxcatcher/material/SkinData;": [
        "Ljie/java/android/boxcatcher/material/SkinData;->load()I",
        "Ljie/java/android/boxcatcher/material/SkinData;->dispose()V"
    ],
    "Ljie/java/android/boxcatcher/BoxActor$BoxShape;": [
        "Ljie/java/android/boxcatcher/BoxActor$BoxShape;->ordinal()I",
        "Ljie/java/android/boxcatcher/BoxActor$BoxShape;->values()[Ljie/java/android/boxcatcher/BoxActor$BoxShape;"
    ],
    "Landroid/database/sqlite/SQLiteDatabase;": [
        "Landroid/database/sqlite/SQLiteDatabase;->rawQuery()Landroid/database/Cursor;",
        "Landroid/database/sqlite/SQLiteDatabase;->update()I",
        "Landroid/database/sqlite/SQLiteDatabase;->execSQL()V"
    ],
    "Ljie/java/android/boxcatcher/stagelayer/EndGameLayer;": [
        "Ljie/java/android/boxcatcher/stagelayer/EndGameLayer;->addActor()V"
    ],
    "Ljie/java/android/boxcatcher/stagelayer/ExitLayer;": [
        "Ljie/java/android/boxcatcher/stagelayer/ExitLayer;->addActor()V"
    ],
    "Ljavazoom/jl/decoder/JavaLayerException;": [
        "Ljavazoom/jl/decoder/JavaLayerException;->printStackTrace()V"
    ],
    "Ljavazoom/jl/decoder/Header;": [
        "Ljavazoom/jl/decoder/Header;->mode()I",
        "Ljavazoom/jl/decoder/Header;->checksum_ok()Z",
        "Ljavazoom/jl/decoder/Header;->parseVBR()V",
        "Ljavazoom/jl/decoder/Header;->frequency()I",
        "Ljavazoom/jl/decoder/Header;->bitrate()I",
        "Ljavazoom/jl/decoder/Header;->max_number_of_frames()I",
        "Ljavazoom/jl/decoder/Header;->intensity_stereo_bound()I",
        "Ljavazoom/jl/decoder/Header;->calculate_framesize()I",
        "Ljavazoom/jl/decoder/Header;->version()I",
        "Ljavazoom/jl/decoder/Header;->mode_string()Ljava/lang/String;",
        "Ljavazoom/jl/decoder/Header;->number_of_subbands()I",
        "Ljavazoom/jl/decoder/Header;->sample_frequency()I",
        "Ljavazoom/jl/decoder/Header;->ms_per_frame()F",
        "Ljavazoom/jl/decoder/Header;->version_string()Ljava/lang/String;",
        "Ljavazoom/jl/decoder/Header;->slots()I",
        "Ljavazoom/jl/decoder/Header;->read_header()V",
        "Ljavazoom/jl/decoder/Header;->mode_extension()I",
        "Ljavazoom/jl/decoder/Header;->layer_string()Ljava/lang/String;",
        "Ljavazoom/jl/decoder/Header;->layer()I",
        "Ljavazoom/jl/decoder/Header;->bitrate_string()Ljava/lang/String;",
        "Ljavazoom/jl/decoder/Header;->sample_frequency_string()Ljava/lang/String;",
        "Ljavazoom/jl/decoder/Header;->checksums()Z"
    ],
    "Ljavazoom/jl/decoder/LayerIIDecoder$SubbandLayer2;": [
        "Ljavazoom/jl/decoder/LayerIIDecoder$SubbandLayer2;->read_scalefactor_selection()V"
    ],
    "Ljavazoom/jl/decoder/BitstreamException;": [
        "Ljavazoom/jl/decoder/BitstreamException;->getErrorCode()I",
        "Ljavazoom/jl/decoder/BitstreamException;->getErrorString()Ljava/lang/String;"
    ],
    "Ljavazoom/jl/decoder/Bitstream;": [
        "Ljavazoom/jl/decoder/Bitstream;->isSyncCurrentPosition()Z",
        "Ljavazoom/jl/decoder/Bitstream;->parseID3v2Frames()V",
        "Ljavazoom/jl/decoder/Bitstream;->set_syncword()V",
        "Ljavazoom/jl/decoder/Bitstream;->isSyncMark()Z",
        "Ljavazoom/jl/decoder/Bitstream;->readNextFrame()Ljavazoom/jl/decoder/Header;",
        "Ljavazoom/jl/decoder/Bitstream;->closeFrame()V",
        "Ljavazoom/jl/decoder/Bitstream;->nextFrame()V",
        "Ljavazoom/jl/decoder/Bitstream;->readFully()I",
        "Ljavazoom/jl/decoder/Bitstream;->read_frame_data()I",
        "Ljavazoom/jl/decoder/Bitstream;->readID3v2Header()I",
        "Ljavazoom/jl/decoder/Bitstream;->parse_frame()V",
        "Ljavazoom/jl/decoder/Bitstream;->readBytes()I",
        "Ljavazoom/jl/decoder/Bitstream;->newBitstreamException()Ljavazoom/jl/decoder/BitstreamException;",
        "Ljavazoom/jl/decoder/Bitstream;->syncHeader()I",
        "Ljavazoom/jl/decoder/Bitstream;->unreadFrame()V",
        "Ljavazoom/jl/decoder/Bitstream;->loadID3v2()V",
        "Ljavazoom/jl/decoder/Bitstream;->get_bits()I",
        "Ljavazoom/jl/decoder/Bitstream;->parseText()Ljava/lang/String;"
    ],
    "Ljava/io/PushbackInputStream;": [
        "Ljava/io/PushbackInputStream;->close()V",
        "Ljava/io/PushbackInputStream;->read()I",
        "Ljava/io/PushbackInputStream;->unread()V"
    ],
    "Ljavazoom/jl/decoder/LayerIDecoder;": [
        "Ljavazoom/jl/decoder/LayerIDecoder;->createSubbands()V",
        "Ljavazoom/jl/decoder/LayerIDecoder;->readScaleFactors()V",
        "Ljavazoom/jl/decoder/LayerIDecoder;->readScaleFactorSelection()V",
        "Ljavazoom/jl/decoder/LayerIDecoder;->readSampleData()V",
        "Ljavazoom/jl/decoder/LayerIDecoder;->readAllocation()V",
        "Ljavazoom/jl/decoder/LayerIDecoder;->create()V"
    ],
    "Ljavazoom/jl/decoder/LayerIDecoder$Subband;": [
        "Ljavazoom/jl/decoder/LayerIDecoder$Subband;->read_scalefactor()V",
        "Ljavazoom/jl/decoder/LayerIDecoder$Subband;->put_next_sample()Z",
        "Ljavazoom/jl/decoder/LayerIDecoder$Subband;->read_sampledata()Z",
        "Ljavazoom/jl/decoder/LayerIDecoder$Subband;->read_allocation()V"
    ],
    "Ljavazoom/jl/decoder/SynthesisFilter;": [
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples12()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples2()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples10()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->input_samples()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples14()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples15()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_new_v()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->reset()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples11()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples7()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples3()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples8()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->load_d()[F",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples9()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples5()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->deserializeArray()Ljava/lang/Object;",
        "Ljavazoom/jl/decoder/SynthesisFilter;->splitArray()[[F",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples1()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples13()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->calculate_pcm_samples()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples4()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples6()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->deserialize()Ljava/lang/Object;",
        "Ljavazoom/jl/decoder/SynthesisFilter;->compute_pcm_samples0()V",
        "Ljavazoom/jl/decoder/SynthesisFilter;->subArray()[F"
    ],
    "Ljavazoom/jl/decoder/Crc16;": [
        "Ljavazoom/jl/decoder/Crc16;->checksum()S",
        "Ljavazoom/jl/decoder/Crc16;->add_bits()V"
    ],
    "Ljavazoom/jl/decoder/OutputBuffer;": [
        "Ljavazoom/jl/decoder/OutputBuffer;->append()V",
        "Ljavazoom/jl/decoder/OutputBuffer;->clip()S",
        "Ljavazoom/jl/decoder/OutputBuffer;->reset()I",
        "Ljavazoom/jl/decoder/OutputBuffer;->appendSamples()V"
    ],
    "Ljava/lang/ClassNotFoundException;": [
        "Ljava/lang/ClassNotFoundException;->toString()Ljava/lang/String;"
    ],
    "Ljavazoom/jl/decoder/LayerIIIDecoder;": [
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->huffman_decode()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->do_downmix()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->reorder()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->antialias()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->reorder()[I",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->stereo()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->create_t_43()[F",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->i_stereo_k_values()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->dequantize_sample()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->get_LSF_scale_factors()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->hybrid()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->decode()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->get_scale_factors()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->get_side_info()Z",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->get_LSF_scale_data()V",
        "Ljavazoom/jl/decoder/LayerIIIDecoder;->inv_mdct()V"
    ],
    "Ljavazoom/jl/decoder/BitReserve;": [
        "Ljavazoom/jl/decoder/BitReserve;->rewindNbits()V",
        "Ljavazoom/jl/decoder/BitReserve;->rewindNbytes()V",
        "Ljavazoom/jl/decoder/BitReserve;->hget1bit()I",
        "Ljavazoom/jl/decoder/BitReserve;->hputbuf()V",
        "Ljavazoom/jl/decoder/BitReserve;->hsstell()I",
        "Ljavazoom/jl/decoder/BitReserve;->hgetbits()I"
    ],
    "Ljavazoom/jl/decoder/huffcodetab;": [
        "Ljavazoom/jl/decoder/huffcodetab;->huffman_decoder()I"
    ],
    "Ljavazoom/jl/decoder/MP3Decoder;": [
        "Ljavazoom/jl/decoder/MP3Decoder;->retrieveDecoder()Ljavazoom/jl/decoder/FrameDecoder;",
        "Ljavazoom/jl/decoder/MP3Decoder;->newDecoderException()Ljavazoom/jl/decoder/DecoderException;"
    ],
    "Ljavazoom/jl/decoder/FrameDecoder;": [
        "Ljavazoom/jl/decoder/FrameDecoder;->decodeFrame()V"
    ],
    "Ljavazoom/jl/decoder/LayerIIDecoder;": [
        "Ljavazoom/jl/decoder/LayerIIDecoder;->create()V"
    ],
    "Ljavazoom/jl/decoder/DecoderException;": [
        "Ljavazoom/jl/decoder/DecoderException;->getErrorString()Ljava/lang/String;"
    ]
}