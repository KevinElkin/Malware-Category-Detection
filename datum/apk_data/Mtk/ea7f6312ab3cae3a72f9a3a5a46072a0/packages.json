{
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->startService()Landroid/content/ComponentName;",
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;",
        "Landroid/app/Activity;->getSystemService()Ljava/lang/Object;",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->getApplicationContext()Landroid/content/Context;",
        "Landroid/app/Activity;->setVolumeControlStream()V",
        "Landroid/app/Activity;->startActivity()V",
        "Landroid/app/Activity;->startActivityIfNeeded()Z",
        "Landroid/app/Activity;->onWindowFocusChanged()V",
        "Landroid/app/Activity;->onDestroy()V"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->getDir()Ljava/io/File;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->registerReceiver()Landroid/content/Intent;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->createPackageContext()Landroid/content/Context;",
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;",
        "Ljava/lang/StringBuilder;->setLength()V"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->getFloat()F",
        "Landroid/content/SharedPreferences;->getString()Ljava/lang/String;",
        "Landroid/content/SharedPreferences;->getInt()I",
        "Landroid/content/SharedPreferences;->contains()Z",
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getBoolean()Z",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->getAll()Ljava/util/Map;"
    ],
    "Ld;": [
        "Ld;->a()I",
        "Ld;->a()Lc;",
        "Ld;->a()Lf;",
        "Ld;->a()Lcom/google/ads/Ad;",
        "Ld;->a()Ljava/lang/String;",
        "Ld;->a()V",
        "Ld;->a()Lcom/google/ads/AdSize;",
        "Ld;->a()Lh;",
        "Ld;->a()J",
        "Ld;->a()Lg;",
        "Ld;->a()Z",
        "Ld;->a()Landroid/app/Activity;"
    ],
    "Lcom/google/ads/util/AdUtil;": [
        "Lcom/google/ads/util/AdUtil;->a()Lorg/json/JSONArray;",
        "Lcom/google/ads/util/AdUtil;->a()Ljava/lang/String;",
        "Lcom/google/ads/util/AdUtil;->a()Z",
        "Lcom/google/ads/util/AdUtil;->a()V",
        "Lcom/google/ads/util/AdUtil;->a()Lorg/json/JSONObject;",
        "Lcom/google/ads/util/AdUtil;->a()Landroid/util/DisplayMetrics;",
        "Lcom/google/ads/util/AdUtil;->a()Ljava/util/HashMap;",
        "Lcom/google/ads/util/AdUtil;->a()Lcom/google/ads/util/AdUtil$a;"
    ],
    "Lcom/google/ads/util/a;": [
        "Lcom/google/ads/util/a;->a()Z",
        "Lcom/google/ads/util/a;->a()V"
    ],
    "Lg;": [
        "Lg;->setWebViewClient()V",
        "Lg;->isInEditMode()Z",
        "Lg;->loadDataWithBaseURL()V",
        "Lg;->getParent()Landroid/view/ViewParent;",
        "Lg;->getSettings()Landroid/webkit/WebSettings;",
        "Lg;->getContext()Landroid/content/Context;",
        "Lg;->a()Lcom/google/ads/AdActivity;",
        "Lg;->setMeasuredDimension()V",
        "Lg;->stopLoading()V",
        "Lg;->destroy()V",
        "Lg;->loadUrl()V",
        "Lg;->a()V",
        "Lg;->setBackgroundColor()V",
        "Lg;->setScrollBarStyle()V",
        "Lg;->setVisibility()V"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->putString()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putBoolean()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putFloat()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->clear()Landroid/content/SharedPreferences$Editor;"
    ],
    "Lf;": [
        "Lf;->a()J",
        "Lf;->a()V",
        "Lf;->a()Z",
        "Lf;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/AdListener;": [
        "Lcom/google/ads/AdListener;->onPresentScreen()V",
        "Lcom/google/ads/AdListener;->onLeaveApplication()V",
        "Lcom/google/ads/AdListener;->onDismissScreen()V",
        "Lcom/google/ads/AdListener;->onFailedToReceiveAd()V",
        "Lcom/google/ads/AdListener;->onReceiveAd()V"
    ],
    "Lc;": [
        "Lc;->a()Lcom/google/ads/AdRequest$ErrorCode;",
        "Lc;->a()V",
        "Lc;->execute()Landroid/os/AsyncTask;",
        "Lc;->publishProgress()V",
        "Lc;->cancel()Z",
        "Lc;->a()Ljava/lang/String;"
    ],
    "Ljava/util/LinkedList;": [
        "Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/LinkedList;->isEmpty()Z",
        "Ljava/util/LinkedList;->get()Ljava/lang/Object;",
        "Ljava/util/LinkedList;->size()I",
        "Ljava/util/LinkedList;->clear()V",
        "Ljava/util/LinkedList;->add()Z"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->postDelayed()Z",
        "Landroid/os/Handler;->removeCallbacks()V"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->hasNext()Z",
        "Ljava/util/Iterator;->next()Ljava/lang/Object;"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;",
        "Ljava/lang/Thread;->setDaemon()V"
    ],
    "Lcom/google/ads/AdView;": [
        "Lcom/google/ads/AdView;->setVisibility()V",
        "Lcom/google/ads/AdView;->a()V",
        "Lcom/google/ads/AdView;->bringToFront()V",
        "Lcom/google/ads/AdView;->getResources()Landroid/content/res/Resources;",
        "Lcom/google/ads/AdView;->setGravity()V",
        "Lcom/google/ads/AdView;->addView()V",
        "Lcom/google/ads/AdView;->isInEditMode()Z",
        "Lcom/google/ads/AdView;->a()Z",
        "Lcom/google/ads/AdView;->loadAd()V",
        "Lcom/google/ads/AdView;->isShown()Z",
        "Lcom/google/ads/AdView;->setLayoutParams()V",
        "Lcom/google/ads/AdView;->isRefreshing()Z",
        "Lcom/google/ads/AdView;->getChildCount()I"
    ],
    "La;": [
        "La;->a()V",
        "La;->a()Z"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->getEncodedQuery()Ljava/lang/String;",
        "Landroid/net/Uri;->getScheme()Ljava/lang/String;",
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->getHost()Ljava/lang/String;",
        "Landroid/net/Uri;->getAuthority()Ljava/lang/String;",
        "Landroid/net/Uri;->isHierarchical()Z",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;",
        "Landroid/net/Uri;->getPath()Ljava/lang/String;"
    ],
    "Landroid/webkit/WebViewClient;": [
        "Landroid/webkit/WebViewClient;->shouldOverrideUrlLoading()Z"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;"
    ],
    "Lcom/google/ads/AdActivity;": [
        "Lcom/google/ads/AdActivity;->getVideoView()Landroid/widget/VideoView;",
        "Lcom/google/ads/AdActivity;->isFinishing()Z",
        "Lcom/google/ads/AdActivity;->a()V",
        "Lcom/google/ads/AdActivity;->startActivity()V",
        "Lcom/google/ads/AdActivity;->setRequestedOrientation()V",
        "Lcom/google/ads/AdActivity;->launchAdActivity()V",
        "Lcom/google/ads/AdActivity;->requestWindowFeature()Z",
        "Lcom/google/ads/AdActivity;->setContentView()V",
        "Lcom/google/ads/AdActivity;->getResources()Landroid/content/res/Resources;",
        "Lcom/google/ads/AdActivity;->finish()V",
        "Lcom/google/ads/AdActivity;->showVideo()V",
        "Lcom/google/ads/AdActivity;->getApplicationContext()Landroid/content/Context;",
        "Lcom/google/ads/AdActivity;->getOpeningAdWebView()Lg;",
        "Lcom/google/ads/AdActivity;->getIntent()Landroid/content/Intent;",
        "Lcom/google/ads/AdActivity;->getWindow()Landroid/view/Window;"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->putString()V",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->keySet()Ljava/util/Set;",
        "Landroid/os/Bundle;->getSerializable()Ljava/io/Serializable;",
        "Landroid/os/Bundle;->putSerializable()V"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->elapsedRealtime()J"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->toString()Ljava/lang/String;",
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->longValue()J"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->toUpperCase()Ljava/lang/String;",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->toString()Ljava/lang/String;",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->onMeasure()V",
        "Landroid/webkit/WebView;->setWebViewClient()V",
        "Landroid/webkit/WebView;->setVisibility()V",
        "Landroid/webkit/WebView;->getContext()Landroid/content/Context;",
        "Landroid/webkit/WebView;->loadUrl()V",
        "Landroid/webkit/WebView;->stopLoading()V",
        "Landroid/webkit/WebView;->destroy()V",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V",
        "Landroid/webkit/WebView;->setWillNotDraw()V",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->hasSystemFeature()Z",
        "Landroid/content/pm/PackageManager;->getPackageArchiveInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getReceiverInfo()Landroid/content/pm/ActivityInfo;",
        "Landroid/content/pm/PackageManager;->checkPermission()I"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->booleanValue()Z",
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->toString()Ljava/lang/String;"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setUserAgentString()V",
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->getUserAgentString()Ljava/lang/String;"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->getMode()I"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getValue()V",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;"
    ],
    "Lcom/google/ads/AdSize;": [
        "Lcom/google/ads/AdSize;->toString()Ljava/lang/String;",
        "Lcom/google/ads/AdSize;->getWidth()I",
        "Lcom/google/ads/AdSize;->getHeight()I"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->compare()I",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;",
        "Ljava/lang/Float;->floatToRawIntBits()I",
        "Ljava/lang/Float;->floatToIntBits()I",
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->intBitsToFloat()F",
        "Ljava/lang/Float;->parseFloat()F",
        "Ljava/lang/Float;->toString()Ljava/lang/String;"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->remove()Ljava/lang/Object;",
        "Ljava/util/Map;->entrySet()Ljava/util/Set;",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->swap()V",
        "Ljava/util/Collections;->unmodifiableList()Ljava/util/List;",
        "Ljava/util/Collections;->unmodifiableMap()Ljava/util/Map;",
        "Ljava/util/Collections;->sort()V",
        "Ljava/util/Collections;->reverse()V"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;"
    ],
    "Li;": [
        "Li;->a()V"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->getHeaderField()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->setInstanceFollowRedirects()V",
        "Ljava/net/HttpURLConnection;->getResponseCode()I",
        "Ljava/net/HttpURLConnection;->connect()V",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;"
    ],
    "Lb;": [
        "Lb;->a()Ljava/lang/Void;",
        "Lb;->execute()Landroid/os/AsyncTask;",
        "Lb;->cancel()Z",
        "Lb;->a()V"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;",
        "Ljava/io/BufferedReader;->close()V"
    ],
    "Ljava/util/StringTokenizer;": [
        "Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;",
        "Ljava/util/StringTokenizer;->hasMoreTokens()Z",
        "Ljava/util/StringTokenizer;->hasMoreElements()Z"
    ],
    "Landroid/widget/VideoView;": [
        "Landroid/widget/VideoView;->setVideoPath()V",
        "Landroid/widget/VideoView;->setOnErrorListener()V",
        "Landroid/widget/VideoView;->setOnPreparedListener()V",
        "Landroid/widget/VideoView;->setOnCompletionListener()V",
        "Landroid/widget/VideoView;->setVisibility()V",
        "Landroid/widget/VideoView;->seekTo()V",
        "Landroid/widget/VideoView;->pause()V",
        "Landroid/widget/VideoView;->stopPlayback()V",
        "Landroid/widget/VideoView;->start()V"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->hashCode()I",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->notify()V",
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->notifyAll()V",
        "Ljava/lang/Object;->wait()V"
    ],
    "Lh;": [
        "Lh;->a()V"
    ],
    "Lcom/google/ads/AdRequest;": [
        "Lcom/google/ads/AdRequest;->isTestDevice()Z",
        "Lcom/google/ads/AdRequest;->getRequestMap()Ljava/util/Map;"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->byteValue()B",
        "Ljava/lang/Integer;->numberOfTrailingZeros()I",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->intValue()I"
    ],
    "Lcom/google/ads/util/AdUtil$a;": [
        "Lcom/google/ads/util/AdUtil$a;->ordinal()I"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;"
    ],
    "Lcom/google/ads/InterstitialAd;": [
        "Lcom/google/ads/InterstitialAd;->isReady()Z"
    ],
    "Landroid/util/AttributeSet;": [
        "Landroid/util/AttributeSet;->getAttributeValue()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getAttributeBooleanValue()Z"
    ],
    "Landroid/util/TypedValue;": [
        "Landroid/util/TypedValue;->applyDimension()F"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setBackgroundColor()V",
        "Landroid/widget/TextView;->setGravity()V"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->setGravity()V",
        "Landroid/widget/LinearLayout;->setBackgroundColor()V",
        "Landroid/widget/LinearLayout;->addView()V"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->isEmpty()Z",
        "Ljava/util/Set;->contains()Z",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->size()I",
        "Ljava/util/Set;->add()Z"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getConstructors()[Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->getCanonicalName()Ljava/lang/String;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->desiredAssertionStatus()Z",
        "Ljava/lang/Class;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;"
    ],
    "Landroid/content/BroadcastReceiver;": [
        "Landroid/content/BroadcastReceiver;->onReceive()V"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->setAction()Landroid/content/Intent;",
        "Landroid/content/Intent;->getIntExtra()I",
        "Landroid/content/Intent;->setDataAndType()Landroid/content/Intent;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getBundleExtra()Landroid/os/Bundle;",
        "Landroid/content/Intent;->hasExtra()Z",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;",
        "Landroid/content/Intent;->setData()Landroid/content/Intent;",
        "Landroid/content/Intent;->addCategory()Landroid/content/Intent;"
    ],
    "Lcom/google/ads/InstallReceiver;": [
        "Lcom/google/ads/InstallReceiver;->forwardIntent()V",
        "Lcom/google/ads/InstallReceiver;->a()Ljava/lang/String;"
    ],
    "Lcom/google/ads/AdRequest$Gender;": [
        "Lcom/google/ads/AdRequest$Gender;->toString()Ljava/lang/String;"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setFlags()V",
        "Landroid/view/Window;->clearFlags()V"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->setOnClickListener()V",
        "Landroid/widget/ImageButton;->setImageResource()V",
        "Landroid/widget/ImageButton;->setBackgroundDrawable()V",
        "Landroid/widget/ImageButton;->setPadding()V"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->removeAllViews()V",
        "Landroid/widget/RelativeLayout;->addView()V"
    ],
    "Le;": [
        "Le;->a()Ljava/util/HashMap;",
        "Le;->a()Ljava/lang/String;",
        "Le;->a()Landroid/os/Bundle;"
    ],
    "Landroid/content/ActivityNotFoundException;": [
        "Landroid/content/ActivityNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getHeight()I",
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getOrientation()I"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getAccuracy()F",
        "Landroid/location/Location;->getTime()J"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->digest()[B"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->put()Lorg/json/JSONArray;"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->doFinal()[B",
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;",
        "Ljavax/crypto/Cipher;->getIV()[B"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->nanoTime()J",
        "Ljava/lang/System;->load()V",
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->getProperty()Ljava/lang/String;",
        "Ljava/lang/System;->identityHashCode()I",
        "Ljava/lang/System;->arraycopy()V"
    ],
    "Lcom/google/ads/util/b;": [
        "Lcom/google/ads/util/b;->a()Ljava/lang/String;"
    ],
    "Ljava/net/URLDecoder;": [
        "Ljava/net/URLDecoder;->decode()Ljava/lang/String;"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->getSubtypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->getType()I",
        "Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;",
        "Landroid/net/NetworkInfo;->isAvailable()Z"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->removeAll()Z",
        "Ljava/util/List;->remove()Z",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->indexOf()I",
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->getRingerMode()I",
        "Landroid/media/AudioManager;->isSpeakerphoneOn()Z",
        "Landroid/media/AudioManager;->isMusicActive()Z",
        "Landroid/media/AudioManager;->getMode()I"
    ],
    "Landroid/content/IntentFilter;": [
        "Landroid/content/IntentFilter;->addAction()V"
    ],
    "Lcom/google/ads/util/b$b;": [
        "Lcom/google/ads/util/b$b;->a()Z"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->isLoggable()Z",
        "Landroid/util/Log;->a()I"
    ],
    "Lcom/scoreninja/adapter/RequestSigner;": [
        "Lcom/scoreninja/adapter/RequestSigner;->getNewHmacSha1()Ljavax/crypto/Mac;",
        "Lcom/scoreninja/adapter/RequestSigner;->getSignature()Ljava/lang/String;"
    ],
    "Lcom/scoreninja/adapter/ScoreNinjaAdapter;": [
        "Lcom/scoreninja/adapter/ScoreNinjaAdapter;->isInstalled()Z",
        "Lcom/scoreninja/adapter/ScoreNinjaAdapter;->onActivityResult()V",
        "Lcom/scoreninja/adapter/ScoreNinjaAdapter;->show()V",
        "Lcom/scoreninja/adapter/ScoreNinjaAdapter;->neverAskAgain()Z"
    ],
    "Lcom/scoreninja/adapter/ScoreNinjaInstallAlert;": [
        "Lcom/scoreninja/adapter/ScoreNinjaInstallAlert;->setNegativeButton()Landroid/app/AlertDialog$Builder;",
        "Lcom/scoreninja/adapter/ScoreNinjaInstallAlert;->setNeutralButton()Landroid/app/AlertDialog$Builder;",
        "Lcom/scoreninja/adapter/ScoreNinjaInstallAlert;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Lcom/scoreninja/adapter/ScoreNinjaInstallAlert;->show()Landroid/app/AlertDialog;",
        "Lcom/scoreninja/adapter/ScoreNinjaInstallAlert;->setMessage()Landroid/app/AlertDialog$Builder;"
    ],
    "Ljavax/crypto/Mac;": [
        "Ljavax/crypto/Mac;->update()V",
        "Ljavax/crypto/Mac;->getInstance()Ljavax/crypto/Mac;",
        "Ljavax/crypto/Mac;->doFinal()[B"
    ],
    "Lcom/tani/game/shootersecond02/MainAct;": [
        "Lcom/tani/game/shootersecond02/MainAct;->showAd()V",
        "Lcom/tani/game/shootersecond02/MainAct;->finish()V",
        "Lcom/tani/game/shootersecond02/MainAct;->requestWindowFeature()Z",
        "Lcom/tani/game/shootersecond02/MainAct;->hideAd()V",
        "Lcom/tani/game/shootersecond02/MainAct;->getWindow()Landroid/view/Window;",
        "Lcom/tani/game/shootersecond02/MainAct;->getSystemService()Ljava/lang/Object;",
        "Lcom/tani/game/shootersecond02/MainAct;->startActivity()V",
        "Lcom/tani/game/shootersecond02/MainAct;->addContentView()V",
        "Lcom/tani/game/shootersecond02/MainAct;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/tani/game/shootersecond02/MainAct;->runOnUiThread()V",
        "Lcom/tani/game/shootersecond02/MainAct;->setupAds()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidApplication;": [
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getSystemService()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->requestWindowFeature()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->createLayoutParams()Landroid/widget/FrameLayout$LayoutParams;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->onCreate()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getWindowManager()Landroid/view/WindowManager;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->createWakeLock()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->isFinishing()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->setContentView()V",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getAudio()Lcom/badlogic/gdx/Audio;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getGraphics()Lcom/badlogic/gdx/Graphics;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getInput()Lcom/badlogic/gdx/Input;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getFiles()Lcom/badlogic/gdx/Files;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->getWindow()Landroid/view/Window;",
        "Lcom/badlogic/gdx/backends/android/AndroidApplication;->onActivityResult()V"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->setFocusable()V",
        "Landroid/view/View;->requestFocus()Z",
        "Landroid/view/View;->setFocusableInTouchMode()V",
        "Landroid/view/View;->setOnKeyListener()V",
        "Landroid/view/View;->requestFocusFromTouch()Z",
        "Landroid/view/View;->getWindowToken()Landroid/os/IBinder;",
        "Landroid/view/View;->setKeepScreenOn()V",
        "Landroid/view/View;->setOnTouchListener()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->println()V"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->getParentFile()Ljava/io/File;",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->isFile()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->toString()Ljava/lang/String;",
        "Ljava/io/File;->getPath()Ljava/lang/String;"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/iw;": [
        "Lcom/tani/game/shootersecond02/iwhw/iw;->a()Z",
        "Lcom/tani/game/shootersecond02/iwhw/iw;->start()V",
        "Lcom/tani/game/shootersecond02/iwhw/iw;->a()J",
        "Lcom/tani/game/shootersecond02/iwhw/iw;->a()V"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->remove()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->isEmpty()Z",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->addAll()Z",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->set()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->toString()Ljava/lang/String;",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;",
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->contains()Z"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/plp;": [
        "Lcom/tani/game/shootersecond02/iwhw/plp;->a()V"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/ykd;": [
        "Lcom/tani/game/shootersecond02/iwhw/ykd;->a()V",
        "Lcom/tani/game/shootersecond02/iwhw/ykd;->a()Z",
        "Lcom/tani/game/shootersecond02/iwhw/ykd;->a()Ljava/lang/String;"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/e;": [
        "Lcom/tani/game/shootersecond02/iwhw/e;->start()V",
        "Lcom/tani/game/shootersecond02/iwhw/e;->a()V"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/bf;": [
        "Lcom/tani/game/shootersecond02/iwhw/bf;->a()Z"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->printStackTrace()V",
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextBoolean()Z",
        "Ljava/util/Random;->nextFloat()F",
        "Ljava/util/Random;->nextInt()I"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/ujl;": [
        "Lcom/tani/game/shootersecond02/iwhw/ujl;->a()Z"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/lang/ClassLoader;": [
        "Ljava/lang/ClassLoader;->getSystemClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/ClassLoader;->getParent()Ljava/lang/ClassLoader;"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->prepare()V",
        "Landroid/os/Looper;->loop()V"
    ],
    "Ldalvik/system/DexClassLoader;": [
        "Ldalvik/system/DexClassLoader;->loadClass()Ljava/lang/Class;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->setAccessible()V"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/aec;": [
        "Lcom/tani/game/shootersecond02/iwhw/aec;->a()V",
        "Lcom/tani/game/shootersecond02/iwhw/aec;->a()Ljava/lang/String;",
        "Lcom/tani/game/shootersecond02/iwhw/aec;->a()B",
        "Lcom/tani/game/shootersecond02/iwhw/aec;->a()[B"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->list()[Ljava/lang/String;",
        "Landroid/content/res/AssetManager;->openFd()Landroid/content/res/AssetFileDescriptor;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->available()I",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->read()I"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readChar()C",
        "Ljava/io/DataInputStream;->readBoolean()Z",
        "Ljava/io/DataInputStream;->readFully()V",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->skipBytes()I",
        "Ljava/io/DataInputStream;->read()I",
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readLine()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readShort()S",
        "Ljava/io/DataInputStream;->readByte()B",
        "Ljava/io/DataInputStream;->close()V",
        "Ljava/io/DataInputStream;->readUnsignedByte()I",
        "Ljava/io/DataInputStream;->readFloat()F"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->parseByte()B"
    ],
    "Ljavax/crypto/KeyGenerator;": [
        "Ljavax/crypto/KeyGenerator;->generateKey()Ljavax/crypto/SecretKey;",
        "Ljavax/crypto/KeyGenerator;->getInstance()Ljavax/crypto/KeyGenerator;"
    ],
    "Ljava/security/SecureRandom;": [
        "Ljava/security/SecureRandom;->setSeed()V",
        "Ljava/security/SecureRandom;->getInstance()Ljava/security/SecureRandom;"
    ],
    "Ljavax/crypto/SecretKey;": [
        "Ljavax/crypto/SecretKey;->getEncoded()[B"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/of;": [
        "Lcom/tani/game/shootersecond02/iwhw/of;->a()I",
        "Lcom/tani/game/shootersecond02/iwhw/of;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->addHeader()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V",
        "Lorg/apache/http/client/methods/HttpPost;->setParams()V"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onCreate()V",
        "Landroid/app/Service;->onDestroy()V",
        "Landroid/app/Service;->onStart()V"
    ],
    "Lcom/tani/game/shootersecond02/iwhw/xi;": [
        "Lcom/tani/game/shootersecond02/iwhw/xi;->stopSelf()V"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->flush()V",
        "Ljava/io/OutputStream;->write()V",
        "Ljava/io/OutputStream;->close()V"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;"
    ],
    "Lcom/tani/game/shootersecond02/sprite/AnimatedSprite;": [
        "Lcom/tani/game/shootersecond02/sprite/AnimatedSprite;->setRegion()V"
    ],
    "Lcom/tani/game/shootersecond02/sprite/AnimatedSprite$AnimatedListener;": [
        "Lcom/tani/game/shootersecond02/sprite/AnimatedSprite$AnimatedListener;->onCompleted()V",
        "Lcom/tani/game/shootersecond02/sprite/AnimatedSprite$AnimatedListener;->onFrameChanged()V"
    ],
    "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;": [
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getScaleY()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->setPosition()V",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getScaleX()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->setColor()V",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->setScale()V",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->draw()V",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getWidth()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getBoundingRectangle()Lcom/badlogic/gdx/math/Rectangle;",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getHeight()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getOriginY()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getX()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->setOrigin()V",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getOriginX()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getY()F",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->setRotation()V",
        "Lcom/tani/game/shootersecond02/sprite/BaseTweenSprite;->getRotation()F"
    ],
    "Lcom/badlogic/gdx/graphics/Color;": [
        "Lcom/badlogic/gdx/graphics/Color;->set()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/Color;->set()V",
        "Lcom/badlogic/gdx/graphics/Color;->toFloatBits()F",
        "Lcom/badlogic/gdx/graphics/Color;->rgba8888()I",
        "Lcom/badlogic/gdx/graphics/Color;->clamp()V",
        "Lcom/badlogic/gdx/graphics/Color;->toIntBits()I"
    ],
    "Lcom/badlogic/gdx/Graphics;": [
        "Lcom/badlogic/gdx/Graphics;->getHeight()I",
        "Lcom/badlogic/gdx/Graphics;->getGL20()Lcom/badlogic/gdx/graphics/GL20;",
        "Lcom/badlogic/gdx/Graphics;->getFramesPerSecond()I",
        "Lcom/badlogic/gdx/Graphics;->getGL10()Lcom/badlogic/gdx/graphics/GL10;",
        "Lcom/badlogic/gdx/Graphics;->getDeltaTime()F",
        "Lcom/badlogic/gdx/Graphics;->getWidth()I",
        "Lcom/badlogic/gdx/Graphics;->isGL20Available()Z"
    ],
    "Lcom/badlogic/gdx/Files;": [
        "Lcom/badlogic/gdx/Files;->getExternalStoragePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx/Files;->classpath()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/Files;->internal()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/Files;->getFileHandle()Lcom/badlogic/gdx/files/FileHandle;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->newSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->findRegion()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->readValue()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->readTuple()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->addRegion()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->findRegions()Ljava/util/List;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas;->createSprite()Lcom/badlogic/gdx/graphics/g2d/Sprite;"
    ],
    "Lcom/badlogic/gdx/Audio;": [
        "Lcom/badlogic/gdx/Audio;->newSound()Lcom/badlogic/gdx/audio/Sound;"
    ],
    "Lcom/tani/game/shootersecond02/screen/GameScreen;": [
        "Lcom/tani/game/shootersecond02/screen/GameScreen;->setScreen()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;": [
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->renderMesh()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setTransformMatrix()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setBlendFunction()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->getTransformMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->createShader()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->isBlendingEnabled()Z",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->getProjectionMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->end()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->begin()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteBatch;->setProjectionMatrix()V"
    ],
    "Lcom/tani/game/shootersecond02/object/GameBoard;": [
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getAllFallingBubbles()Ljava/util/List;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getRandomBubble()Lcom/tani/game/shootersecond02/object/Bubble$BubbleKind;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->fallCheck()V",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getNeighbors()Ljava/util/List;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getBubbleKind()Lcom/tani/game/shootersecond02/object/Bubble$BubbleKind;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getBubbleRegion()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->render()V",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->checkBubbleCollison()Z",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->update()V",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->genNextBubble()Lcom/tani/game/shootersecond02/object/Bubble;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getSameKindNeighbors()Ljava/util/List;",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->touchEvent()V",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->checkDeadlineReached()Z",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->isLevelCompleted()Z",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->getSameKindNeighbors()V",
        "Lcom/tani/game/shootersecond02/object/GameBoard;->checkSpriteCollision()Z"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->drawMultiLine()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->draw()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->drawWrapped()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getWrappedBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getGlyph()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->indexOf()I",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->isFlipped()Z",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->computeVisibleGlyphs()I",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getMultiLineBounds()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;->getCapHeight()F"
    ],
    "Lcom/tani/game/base/Screen;": [
        "Lcom/tani/game/base/Screen;->render()V",
        "Lcom/tani/game/base/Screen;->keyUp()Z",
        "Lcom/tani/game/base/Screen;->tick()V",
        "Lcom/tani/game/base/Screen;->dispose()V",
        "Lcom/tani/game/base/Screen;->touchUp()Z",
        "Lcom/tani/game/base/Screen;->keyDown()Z",
        "Lcom/tani/game/base/Screen;->touchDown()Z"
    ],
    "Lcom/badlogic/gdx/audio/Sound;": [
        "Lcom/badlogic/gdx/audio/Sound;->play()V"
    ],
    "Laurelienribon/tweenengine/Tween;": [
        "Laurelienribon/tweenengine/Tween;->checkForEndOfDelay()Z",
        "Laurelienribon/tweenengine/Tween;->reset()V",
        "Laurelienribon/tweenengine/Tween;->setPoolEnabled()V",
        "Laurelienribon/tweenengine/Tween;->callStartCallbacks()V",
        "Laurelienribon/tweenengine/Tween;->updateTarget()V",
        "Laurelienribon/tweenengine/Tween;->update()V",
        "Laurelienribon/tweenengine/Tween;->getTarget()Laurelienribon/tweenengine/Tweenable;",
        "Laurelienribon/tweenengine/Tween;->kill()V",
        "Laurelienribon/tweenengine/Tween;->start()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->target()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->callDelayEndedCallbacks()V",
        "Laurelienribon/tweenengine/Tween;->repeat()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->addCallback()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->delay()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->getDelay()I",
        "Laurelienribon/tweenengine/Tween;->checkForRepetition()Z",
        "Laurelienribon/tweenengine/Tween;->callCompleteCallbacks()V",
        "Laurelienribon/tweenengine/Tween;->shouldRepeat()Z",
        "Laurelienribon/tweenengine/Tween;->to()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->checkForEndOfTween()Z",
        "Laurelienribon/tweenengine/Tween;->callKillCallbacks()V",
        "Laurelienribon/tweenengine/Tween;->callPoolCallbacks()V",
        "Laurelienribon/tweenengine/Tween;->getDuration()I",
        "Laurelienribon/tweenengine/Tween;->reverse()Laurelienribon/tweenengine/Tween;",
        "Laurelienribon/tweenengine/Tween;->__build()V",
        "Laurelienribon/tweenengine/Tween;->callIterationCompleteCallbacks()V",
        "Laurelienribon/tweenengine/Tween;->isFinished()Z",
        "Laurelienribon/tweenengine/Tween;->getTweenType()I",
        "Laurelienribon/tweenengine/Tween;->checkForValidity()Z"
    ],
    "Laurelienribon/tweenengine/TweenManager;": [
        "Laurelienribon/tweenengine/TweenManager;->add()Laurelienribon/tweenengine/TweenManager;",
        "Laurelienribon/tweenengine/TweenManager;->kill()V",
        "Laurelienribon/tweenengine/TweenManager;->update()V"
    ],
    "Lcom/tani/game/shootersecond02/screen/LoadingScreen;": [
        "Lcom/tani/game/shootersecond02/screen/LoadingScreen;->setScreen()V"
    ],
    "Lcom/tani/game/shootersecond02/screen/MenuScreen;": [
        "Lcom/tani/game/shootersecond02/screen/MenuScreen;->setScreen()V",
        "Lcom/tani/game/shootersecond02/screen/MenuScreen;->checkNetwork()Z",
        "Lcom/tani/game/shootersecond02/screen/MenuScreen;->leaveScreen()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/Sprite;": [
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setRegion()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getHeight()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getOriginY()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setPosition()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->set()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setRotation()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->rotate90()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getVertices()[F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setOrigin()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->rotate()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->setSize()V",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getX()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getY()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getWidth()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getOriginX()F",
        "Lcom/badlogic/gdx/graphics/g2d/Sprite;->getBoundingRectangle()Lcom/badlogic/gdx/math/Rectangle;"
    ],
    "Lcom/tani/game/base/utils/OverlapTester;": [
        "Lcom/tani/game/base/utils/OverlapTester;->pointInRectangle()Z"
    ],
    "Lcom/tani/game/base/BaseGameApplication;": [
        "Lcom/tani/game/base/BaseGameApplication;->setScreen()V",
        "Lcom/tani/game/base/BaseGameApplication;->create()V"
    ],
    "Lcom/tani/game/shootersecond02/app/JungleShooterApplication;": [
        "Lcom/tani/game/shootersecond02/app/JungleShooterApplication;->setScreen()V"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;"
    ],
    "Lcom/tani/game/shootersecond02/data/DataLoader;": [
        "Lcom/tani/game/shootersecond02/data/DataLoader;->loadLevel()V",
        "Lcom/tani/game/shootersecond02/data/DataLoader;->getLevel()[I"
    ],
    "Lcom/tani/game/shootersecond02/object/Launcher;": [
        "Lcom/tani/game/shootersecond02/object/Launcher;->setAngle()V",
        "Lcom/tani/game/shootersecond02/object/Launcher;->getAngle()F",
        "Lcom/tani/game/shootersecond02/object/Launcher;->draw()V"
    ],
    "Lcom/tani/game/shootersecond02/object/Bubble;": [
        "Lcom/tani/game/shootersecond02/object/Bubble;->draw()V",
        "Lcom/tani/game/shootersecond02/object/Bubble;->calcGridPosition()V",
        "Lcom/tani/game/shootersecond02/object/Bubble;->calculateMovingParam()V",
        "Lcom/tani/game/shootersecond02/object/Bubble;->updatePositionByGrid()V",
        "Lcom/tani/game/shootersecond02/object/Bubble;->move()V",
        "Lcom/tani/game/shootersecond02/object/Bubble;->updatePosition()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->sqrt()D",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->toDegrees()D",
        "Ljava/lang/Math;->signum()D",
        "Ljava/lang/Math;->atan2()D",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->sin()D",
        "Ljava/lang/Math;->tan()D",
        "Ljava/lang/Math;->acos()D",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->round()I",
        "Ljava/lang/Math;->log()D",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->ceil()D",
        "Ljava/lang/Math;->toRadians()D",
        "Ljava/lang/Math;->max()J",
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->min()F",
        "Ljava/lang/Math;->cos()D"
    ],
    "Lcom/badlogic/gdx/math/Vector3;": [
        "Lcom/badlogic/gdx/math/Vector3;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/math/Vector3;->dst()F",
        "Lcom/badlogic/gdx/math/Vector3;->nor()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->add()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->mul()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->dot()F",
        "Lcom/badlogic/gdx/math/Vector3;->prj()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->tmp2()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->dst2()F",
        "Lcom/badlogic/gdx/math/Vector3;->cpy()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->set()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->crs()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->tmp()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->len()F",
        "Lcom/badlogic/gdx/math/Vector3;->sub()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Vector3;->div()Lcom/badlogic/gdx/math/Vector3;"
    ],
    "Lcom/badlogic/gdx/Input;": [
        "Lcom/badlogic/gdx/Input;->setInputProcessor()V",
        "Lcom/badlogic/gdx/Input;->getRoll()F",
        "Lcom/badlogic/gdx/Input;->getAccelerometerY()F",
        "Lcom/badlogic/gdx/Input;->getAccelerometerX()F",
        "Lcom/badlogic/gdx/Input;->getPitch()F",
        "Lcom/badlogic/gdx/Input;->getTextInput()V",
        "Lcom/badlogic/gdx/Input;->getAzimuth()F",
        "Lcom/badlogic/gdx/Input;->getAccelerometerZ()F",
        "Lcom/badlogic/gdx/Input;->isPeripheralAvailable()Z"
    ],
    "Lcom/badlogic/gdx/graphics/GLCommon;": [
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDepthMask()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glBindTexture()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glTexSubImage2D()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glReadPixels()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glClear()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glTexImage2D()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glEnable()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDeleteTextures()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glGenTextures()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glActiveTexture()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glTexParameterf()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glBlendFunc()V",
        "Lcom/badlogic/gdx/graphics/GLCommon;->glDisable()V"
    ],
    "Lcom/badlogic/gdx/graphics/OrthographicCamera;": [
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->unproject()V",
        "Lcom/badlogic/gdx/graphics/OrthographicCamera;->update()V"
    ],
    "Lcom/badlogic/gdx/math/Matrix4;": [
        "Lcom/badlogic/gdx/math/Matrix4;->setToOrtho2D()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToOrtho()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->mul()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->set()V",
        "Lcom/badlogic/gdx/math/Matrix4;->prj()V",
        "Lcom/badlogic/gdx/math/Matrix4;->setToTranslation()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToProjection()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->mul()V",
        "Lcom/badlogic/gdx/math/Matrix4;->setToRotation()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->set()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->setToLookAt()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->idt()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/math/Matrix4;->inv()Z"
    ],
    "Lcom/badlogic/gdx/InputProcessor;": [
        "Lcom/badlogic/gdx/InputProcessor;->keyUp()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchUp()Z",
        "Lcom/badlogic/gdx/InputProcessor;->keyTyped()Z",
        "Lcom/badlogic/gdx/InputProcessor;->scrolled()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchDown()Z",
        "Lcom/badlogic/gdx/InputProcessor;->keyDown()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchMoved()Z",
        "Lcom/badlogic/gdx/InputProcessor;->touchDragged()Z"
    ],
    "Lcom/badlogic/gdx/Screen;": [
        "Lcom/badlogic/gdx/Screen;->show()V",
        "Lcom/badlogic/gdx/Screen;->render()V",
        "Lcom/badlogic/gdx/Screen;->resize()V",
        "Lcom/badlogic/gdx/Screen;->pause()V",
        "Lcom/badlogic/gdx/Screen;->resume()V",
        "Lcom/badlogic/gdx/Screen;->hide()V"
    ],
    "Lcom/badlogic/gdx/math/Matrix3;": [
        "Lcom/badlogic/gdx/math/Matrix3;->set()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->setToScaling()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->mul()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->det()F",
        "Lcom/badlogic/gdx/math/Matrix3;->getValues()[F",
        "Lcom/badlogic/gdx/math/Matrix3;->idt()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->setToTranslation()Lcom/badlogic/gdx/math/Matrix3;",
        "Lcom/badlogic/gdx/math/Matrix3;->setToRotation()Lcom/badlogic/gdx/math/Matrix3;"
    ],
    "Lcom/badlogic/gdx/math/Quaternion;": [
        "Lcom/badlogic/gdx/math/Quaternion;->setFromAxes()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->set()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->equals()Z",
        "Lcom/badlogic/gdx/math/Quaternion;->setEulerAngles()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->nor()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->setFromMatrix()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->conjugate()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->len2()F",
        "Lcom/badlogic/gdx/math/Quaternion;->setFromAxis()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->mulLeft()Lcom/badlogic/gdx/math/Quaternion;",
        "Lcom/badlogic/gdx/math/Quaternion;->dot()F",
        "Lcom/badlogic/gdx/math/Quaternion;->mul()Lcom/badlogic/gdx/math/Quaternion;"
    ],
    "Lcom/badlogic/gdx/math/MathUtils;": [
        "Lcom/badlogic/gdx/math/MathUtils;->sinDeg()F",
        "Lcom/badlogic/gdx/math/MathUtils;->ceil()I",
        "Lcom/badlogic/gdx/math/MathUtils;->sin()F",
        "Lcom/badlogic/gdx/math/MathUtils;->cos()F",
        "Lcom/badlogic/gdx/math/MathUtils;->cosDeg()F",
        "Lcom/badlogic/gdx/math/MathUtils;->random()F",
        "Lcom/badlogic/gdx/math/MathUtils;->nextPowerOfTwo()I",
        "Lcom/badlogic/gdx/math/MathUtils;->random()I",
        "Lcom/badlogic/gdx/math/MathUtils;->isPowerOfTwo()Z"
    ],
    "Lcom/badlogic/gdx/math/CatmullRomSpline;": [
        "Lcom/badlogic/gdx/math/CatmullRomSpline;->getTangents()Ljava/util/List;"
    ],
    "Lcom/badlogic/gdx/math/collision/BoundingBox;": [
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->max()F",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->getCorners()[Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->inf()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->updateCorners()V",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->clr()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->ext()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->min()F",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->set()Lcom/badlogic/gdx/math/collision/BoundingBox;",
        "Lcom/badlogic/gdx/math/collision/BoundingBox;->isValid()Z"
    ],
    "Lcom/badlogic/gdx/math/Plane;": [
        "Lcom/badlogic/gdx/math/Plane;->getNormal()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/math/Plane;->set()V",
        "Lcom/badlogic/gdx/math/Plane;->getD()F",
        "Lcom/badlogic/gdx/math/Plane;->testPoint()Lcom/badlogic/gdx/math/Plane$PlaneSide;",
        "Lcom/badlogic/gdx/math/Plane;->distance()F"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->doubleToLongBits()J",
        "Ljava/lang/Double;->longBitsToDouble()D"
    ],
    "Lcom/badlogic/gdx/math/EarClippingTriangulator;": [
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computeSpannedAreaSign()I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->removeCollinearNeighborEarsAfterRemovingEarTip()V",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->classifyVertices()[I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isCollinear()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computeNextIndex()I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isTriangleConvex()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->computePreviousIndex()I",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isAnyVertexInTriangle()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->isEarTip()Z",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->cutEarTip()V",
        "Lcom/badlogic/gdx/math/EarClippingTriangulator;->areVerticesClockwise()Z"
    ],
    "Lcom/badlogic/gdx/math/Intersector;": [
        "Lcom/badlogic/gdx/math/Intersector;->intersectRayTriangle()Z",
        "Lcom/badlogic/gdx/math/Intersector;->det()F",
        "Lcom/badlogic/gdx/math/Intersector;->intersectRayPlane()Z"
    ],
    "Lcom/badlogic/gdx/math/Rectangle;": [
        "Lcom/badlogic/gdx/math/Rectangle;->getY()F",
        "Lcom/badlogic/gdx/math/Rectangle;->getWidth()F",
        "Lcom/badlogic/gdx/math/Rectangle;->getHeight()F",
        "Lcom/badlogic/gdx/math/Rectangle;->getX()F"
    ],
    "Lcom/badlogic/gdx/math/Vector2;": [
        "Lcom/badlogic/gdx/math/Vector2;->nor()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->tmp()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->mul()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->len()F",
        "Lcom/badlogic/gdx/math/Vector2;->dst()F",
        "Lcom/badlogic/gdx/math/Vector2;->add()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->sub()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/math/Vector2;->set()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/math/WindowedMean;": [
        "Lcom/badlogic/gdx/math/WindowedMean;->hasEnoughData()Z",
        "Lcom/badlogic/gdx/math/WindowedMean;->addValue()V",
        "Lcom/badlogic/gdx/math/WindowedMean;->getMean()F"
    ],
    "Lcom/badlogic/gdx/utils/PooledLinkedList;": [
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->iter()V",
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->add()V",
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->clear()V",
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->next()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/PooledLinkedList;->remove()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Action;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->isDone()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->callActionCompletedListener()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->setTarget()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->copy()Lcom/badlogic/gdx/scenes/scene2d/Action;",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->finish()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Action;->reset()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Group;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getGroups()Ljava/util/List;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->touchDown()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->toChildCoordinates()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->findActor()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->updateTransform()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->touchDragged()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->focus()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->removeActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->addActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->act()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->removeActorRecursive()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->toLocalCoordinates()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->touchUp()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->getActors()Ljava/util/List;",
        "Lcom/badlogic/gdx/scenes/scene2d/Group;->clear()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/OnActionCompleted;": [
        "Lcom/badlogic/gdx/scenes/scene2d/OnActionCompleted;->completed()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Stage;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->setViewport()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->graphToString()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Stage;->toStageCoordinates()V"
    ],
    "Lcom/badlogic/gdx/graphics/Camera;": [
        "Lcom/badlogic/gdx/graphics/Camera;->unproject()V",
        "Lcom/badlogic/gdx/graphics/Camera;->project()V",
        "Lcom/badlogic/gdx/graphics/Camera;->update()V",
        "Lcom/badlogic/gdx/graphics/Camera;->getPickRay()Lcom/badlogic/gdx/math/collision/Ray;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Interpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Interpolator;->copy()Lcom/badlogic/gdx/scenes/scene2d/Interpolator;",
        "Lcom/badlogic/gdx/scenes/scene2d/Interpolator;->getInterpolation()F",
        "Lcom/badlogic/gdx/scenes/scene2d/Interpolator;->finished()V"
    ],
    "Lcom/badlogic/gdx/graphics/Texture;": [
        "Lcom/badlogic/gdx/graphics/Texture;->clearAllTextures()V",
        "Lcom/badlogic/gdx/graphics/Texture;->invalidateAllTextures()V",
        "Lcom/badlogic/gdx/graphics/Texture;->reload()V",
        "Lcom/badlogic/gdx/graphics/Texture;->setFilter()V",
        "Lcom/badlogic/gdx/graphics/Texture;->addManagedTexture()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/Texture;->setWrap()V",
        "Lcom/badlogic/gdx/graphics/Texture;->bind()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/Texture;->createGLHandle()I",
        "Lcom/badlogic/gdx/graphics/Texture;->uploadImageData()V",
        "Lcom/badlogic/gdx/graphics/Texture;->dispose()V",
        "Lcom/badlogic/gdx/graphics/Texture;->getTextureObjectHandle()I",
        "Lcom/badlogic/gdx/graphics/Texture;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/Texture;->getTextureFilter()I"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/Actor;": [
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->toLocalCoordinates()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->touchDown()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->markToRemove()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->touchDragged()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->isMarkedToRemove()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->hit()Lcom/badlogic/gdx/scenes/scene2d/Actor;",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->touchUp()Z",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->draw()V",
        "Lcom/badlogic/gdx/scenes/scene2d/Actor;->act()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap;": [
        "Lcom/badlogic/gdx/utils/ObjectMap;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/ObjectMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/ObjectMap;->containsKey()Z",
        "Lcom/badlogic/gdx/utils/ObjectMap;->push()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->entries()Lcom/badlogic/gdx/utils/ObjectMap$Entries;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/ObjectMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->resize()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->clear()V",
        "Lcom/badlogic/gdx/utils/ObjectMap;->values()Lcom/badlogic/gdx/utils/ObjectMap$Values;",
        "Lcom/badlogic/gdx/utils/ObjectMap;->getStash()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/Application;": [
        "Lcom/badlogic/gdx/Application;->log()V",
        "Lcom/badlogic/gdx/Application;->getFiles()Lcom/badlogic/gdx/Files;",
        "Lcom/badlogic/gdx/Application;->postRunnable()V",
        "Lcom/badlogic/gdx/Application;->getInput()Lcom/badlogic/gdx/Input;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/BoundGroup;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/BoundGroup;->addActor()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actors/BoundGroup;->removeActor()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/LinearGroup;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/LinearGroup;->getActors()Ljava/util/List;",
        "Lcom/badlogic/gdx/scenes/scene2d/actors/LinearGroup;->layout()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->split()[[Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionHeight()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionWidth()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setRegion()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setU()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setV2()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionX()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->flip()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setU2()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getRegionY()I",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->setV()V",
        "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;->getTexture()Lcom/badlogic/gdx/graphics/Texture;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/FastImage;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/FastImage;->updateSprite()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/Button$ClickListener;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/Button$ClickListener;->clicked()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/Label;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/Label;->setMultiLineText()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actors/Label;->setText()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actors/Label;->setWrappedText()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setMultiLineText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setWrappedText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setPosition()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setText()Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->getColor()Lcom/badlogic/gdx/graphics/Color;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->getFont()Lcom/badlogic/gdx/graphics/g2d/BitmapFont;",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addGlyph()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->reset()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFontCache;->addToCache()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/Label$VAlignment;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/Label$VAlignment;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actors/Label$WrapType;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actors/Label$WrapType;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;->set()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ActionResetingPool;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ActionResetingPool;->free()V",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ActionResetingPool;->obtain()Lcom/badlogic/gdx/scenes/scene2d/Action;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/CompositeAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/CompositeAction;->finish()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/Delay;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Delay;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/Delay;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Delay;->callActionCompletedListener()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleTo;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleTo;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleTo;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleTo;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/ScaleTo;->createInterpolatedAlpha()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;->finish()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeIn;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeIn;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/FadeIn;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeIn;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeIn;->createInterpolatedAlpha()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/Forever;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Forever;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/Forever;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/TemporalAction;": [
        "Lcom/badlogic/gdx/scenes/scene2d/TemporalAction;->finish()V",
        "Lcom/badlogic/gdx/scenes/scene2d/TemporalAction;->reset()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveTo;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveTo;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/MoveTo;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveTo;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveTo;->createInterpolatedAlpha()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/Remove;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Remove;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/Remove;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateBy;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateBy;->createInterpolatedAlpha()F",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateBy;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/RotateBy;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateBy;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;"
    ],
    "Lcom/badlogic/gdx/utils/Pool;": [
        "Lcom/badlogic/gdx/utils/Pool;->newObject()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Pool;->obtain()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Pool;->free()V"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveBy;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveBy;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveBy;->createInterpolatedAlpha()F",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/MoveBy;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/MoveBy;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeTo;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeTo;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/FadeTo;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeTo;->createInterpolatedAlpha()F",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeTo;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeOut;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeOut;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeOut;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/FadeOut;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/FadeOut;->createInterpolatedAlpha()F"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateTo;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateTo;->setInterpolator()Lcom/badlogic/gdx/scenes/scene2d/AnimationAction;",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateTo;->createInterpolatedAlpha()F",
        "Lcom/badlogic/gdx/scenes/scene2d/actions/RotateTo;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/RotateTo;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/actions/Repeat;": [
        "Lcom/badlogic/gdx/scenes/scene2d/actions/Repeat;->$()Lcom/badlogic/gdx/scenes/scene2d/actions/Repeat;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/interpolators/DecelerateInterpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/interpolators/DecelerateInterpolator;->$()Lcom/badlogic/gdx/scenes/scene2d/interpolators/DecelerateInterpolator;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/interpolators/AccelerateDecelerateInterpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/interpolators/AccelerateDecelerateInterpolator;->$()Lcom/badlogic/gdx/scenes/scene2d/interpolators/AccelerateDecelerateInterpolator;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/interpolators/OvershootInterpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/interpolators/OvershootInterpolator;->$()Lcom/badlogic/gdx/scenes/scene2d/interpolators/OvershootInterpolator;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/interpolators/LinearInterpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/interpolators/LinearInterpolator;->$()Lcom/badlogic/gdx/scenes/scene2d/interpolators/LinearInterpolator;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/interpolators/AnticipateInterpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/interpolators/AnticipateInterpolator;->$()Lcom/badlogic/gdx/scenes/scene2d/interpolators/AnticipateInterpolator;"
    ],
    "Lcom/badlogic/gdx/scenes/scene2d/interpolators/AccelerateInterpolator;": [
        "Lcom/badlogic/gdx/scenes/scene2d/interpolators/AccelerateInterpolator;->$()Lcom/badlogic/gdx/scenes/scene2d/interpolators/AccelerateInterpolator;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Transform;": [
        "Lcom/badlogic/gdx/physics/box2d/Transform;->setRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->setPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->mul()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Transform;->getPosition()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Contact;": [
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniSetEnabled()V",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->getWorldManifold()Lcom/badlogic/gdx/physics/box2d/WorldManifold;",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniIsEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetWorldManifold()I",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniIsTouching()Z",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFixtureA()J",
        "Lcom/badlogic/gdx/physics/box2d/Contact;->jniGetFixtureB()J"
    ],
    "Lcom/badlogic/gdx/utils/LongMap;": [
        "Lcom/badlogic/gdx/utils/LongMap;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/LongMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/LongMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/LongMap;->remove()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->entries()Lcom/badlogic/gdx/utils/LongMap$Entries;",
        "Lcom/badlogic/gdx/utils/LongMap;->push()V",
        "Lcom/badlogic/gdx/utils/LongMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/LongMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->values()Lcom/badlogic/gdx/utils/LongMap$Values;",
        "Lcom/badlogic/gdx/utils/LongMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/LongMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/LongMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/LongMap;->resize()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Fixture;": [
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetShape()J",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniIsSensor()Z",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetFriction()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getType()Lcom/badlogic/gdx/physics/box2d/Shape$Type;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetFriction()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getShape()Lcom/badlogic/gdx/physics/box2d/Shape;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->getFilterData()Lcom/badlogic/gdx/physics/box2d/Filter;",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetFilterData()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetRestitution()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetRestitution()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniTestPoint()Z",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetDensity()F",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetSensor()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniSetDensity()V",
        "Lcom/badlogic/gdx/physics/box2d/Fixture;->jniGetFilterData()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Shape;": [
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetRadius()F",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniSetRadius()V",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Shape;->jniDispose()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Joint;": [
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetAnchorB()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetReactionForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetBodyB()J",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniIsActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getType()Lcom/badlogic/gdx/physics/box2d/JointDef$JointType;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetAnchorA()V",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetBodyA()J",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getBodyB()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->jniGetReactionTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getAnchorB()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getBodyA()Lcom/badlogic/gdx/physics/box2d/Body;",
        "Lcom/badlogic/gdx/physics/box2d/Joint;->getAnchorA()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Body;": [
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalVector()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetType()I",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocityFromWorldPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLocalPoint()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocityFromLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngularVelocity()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniResetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniCreateFixture()J",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getTransform()Lcom/badlogic/gdx/physics/box2d/Transform;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngularDamping()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getType()Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetMassData()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsFixedRotation()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetFixedRotation()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAngularDamping()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearDamping()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetInertia()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyForce()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAngularVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetAwake()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getJointList()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetActive()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetTransform()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniDestroyFixture()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLocalCenter()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetType()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetSleepingAllowed()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsBullet()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->isAwake()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetMass()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldPoint()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsSleepingAllowed()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->isActive()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetLinearVelocity()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyAngularImpulse()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getLocalVector()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetBullet()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniIsAwake()Z",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyLinearImpulse()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->getFixtureList()Ljava/util/ArrayList;",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetWorldVector()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniGetAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniApplyTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/Body;->jniSetLinearDamping()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;": [
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawSolidPolygon()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawSolidCircle()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawContact()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawSegment()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->renderBodies()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawShape()V",
        "Lcom/badlogic/gdx/physics/box2d/Box2DDebugRenderer;->drawJoint()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetGroundAnchorB()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->getGroundAnchorA()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetLength2()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->getGroundAnchorB()Lcom/badlogic/gdx/math/Vector2;",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetLength1()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetGroundAnchorA()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PulleyJoint;->jniGetRatio()F"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;": [
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->end()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->vertex()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->begin()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->color()V",
        "Lcom/badlogic/gdx/graphics/glutils/ImmediateModeRenderer;->allocateBuffer()Ljava/nio/FloatBuffer;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/CircleShape;": [
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->jniGetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->jniSetPosition()V",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->getRadius()F",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->newCircleShape()J",
        "Lcom/badlogic/gdx/physics/box2d/CircleShape;->getPosition()Lcom/badlogic/gdx/math/Vector2;"
    ],
    "Lcom/badlogic/gdx/physics/box2d/PolygonShape;": [
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniGetVertexCount()I",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->newPolygonShape()J",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSetAsEdge()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->getVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniGetVertex()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSetAsBox()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->jniSet()V",
        "Lcom/badlogic/gdx/physics/box2d/PolygonShape;->getVertexCount()I"
    ],
    "Lcom/badlogic/gdx/physics/box2d/World;": [
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetAutoClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetBodyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetJointcount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->createProperJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetProxyCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDestroyJoint()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetContactList()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getBodies()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateMouseJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateBody()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetAutoClearForces()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetContiousPhysics()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniStep()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniQueryAABB()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateFrictionJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->getContactCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->getContactList()Ljava/util/List;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateRevoluteJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniIsLocked()Z",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetWarmStarting()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreatePulleyJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateGearJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDispose()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->getJoints()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniRayCast()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->newWorld()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateLineJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateWeldJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniClearForces()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniGetContactCount()I",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniSetGravity()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreatePrismaticJoint()J",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniDestroyBody()V",
        "Lcom/badlogic/gdx/physics/box2d/World;->jniCreateDistanceJoint()J"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactListener;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->endContact()V",
        "Lcom/badlogic/gdx/physics/box2d/ContactListener;->beginContact()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/ContactFilter;": [
        "Lcom/badlogic/gdx/physics/box2d/ContactFilter;->shouldCollide()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/QueryCallback;": [
        "Lcom/badlogic/gdx/physics/box2d/QueryCallback;->reportFixture()Z"
    ],
    "Lcom/badlogic/gdx/physics/box2d/RayCastCallback;": [
        "Lcom/badlogic/gdx/physics/box2d/RayCastCallback;->reportRayFixture()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;": [
        "Lcom/badlogic/gdx/physics/box2d/BodyDef$BodyType;->getValue()I"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetJointAngle()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetMotorTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniSetMaxMotorTorque()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetJointSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/RevoluteJoint;->jniGetUpperLimit()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetMaxMotorForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetJointTranslation()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/PrismaticJoint;->jniGetJointSpeed()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetDampingRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetFrequency()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetTarget()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetFrequency()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetTarget()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniGetMaxForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/MouseJoint;->jniSetMaxForce()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniGetMaxForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniGetMaxTorque()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniSetMaxForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/FrictionJoint;->jniSetMaxTorque()V"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;->jniSetRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/GearJoint;->jniGetRatio()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetFrequency()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetDampingRatio()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetLength()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetDampingRatio()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniSetFrequency()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/DistanceJoint;->jniGetLength()F"
    ],
    "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;": [
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetLowerLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetUpperLimit()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniSetMaxMotorForce()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniSetMotorSpeed()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetMotorSpeed()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetJointTranslation()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniIsLimitEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetMaxMotorForce()F",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniEnableLimit()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniEnableMotor()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniSetLimits()V",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniIsMotorEnabled()Z",
        "Lcom/badlogic/gdx/physics/box2d/joints/LineJoint;->jniGetJointSpeed()F"
    ],
    "Lcom/badlogic/gdx/audio/io/VorbisDecoder;": [
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->getRate()I",
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->getNumChannels()I",
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->readSamples()I",
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->skipSamples()I",
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->getLength()F",
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->openFile()J",
        "Lcom/badlogic/gdx/audio/io/VorbisDecoder;->closeFile()V"
    ],
    "Ljava/nio/ShortBuffer;": [
        "Ljava/nio/ShortBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->put()Ljava/nio/ShortBuffer;",
        "Ljava/nio/ShortBuffer;->position()I",
        "Ljava/nio/ShortBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/ShortBuffer;->get()S",
        "Ljava/nio/ShortBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/ShortBuffer;->limit()I",
        "Ljava/nio/ShortBuffer;->get()Ljava/nio/ShortBuffer;",
        "Ljava/nio/ShortBuffer;->capacity()I",
        "Ljava/nio/ShortBuffer;->position()Ljava/nio/Buffer;"
    ],
    "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;": [
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->readSamples()I",
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->openFile()J",
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->getRate()I",
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->closeFile()V",
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->getLength()F",
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->skipSamples()I",
        "Lcom/badlogic/gdx/audio/io/Mpg123Decoder;->getNumChannels()I"
    ],
    "Lcom/badlogic/gdx/audio/analysis/NativeFFT;": [
        "Lcom/badlogic/gdx/audio/analysis/NativeFFT;->createFFT()J",
        "Lcom/badlogic/gdx/audio/analysis/NativeFFT;->destroyFFT()V",
        "Lcom/badlogic/gdx/audio/analysis/NativeFFT;->nativeSpectrum()V"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->get()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->array()[B",
        "Ljava/nio/ByteBuffer;->asDoubleBuffer()Ljava/nio/DoubleBuffer;",
        "Ljava/nio/ByteBuffer;->asCharBuffer()Ljava/nio/CharBuffer;",
        "Ljava/nio/ByteBuffer;->capacity()I",
        "Ljava/nio/ByteBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->asFloatBuffer()Ljava/nio/FloatBuffer;",
        "Ljava/nio/ByteBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->get()B",
        "Ljava/nio/ByteBuffer;->rewind()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/ByteBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->position()I",
        "Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->allocate()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->put()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->allocateDirect()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->asLongBuffer()Ljava/nio/LongBuffer;",
        "Ljava/nio/ByteBuffer;->arrayOffset()I",
        "Ljava/nio/ByteBuffer;->limit()I",
        "Ljava/nio/ByteBuffer;->asShortBuffer()Ljava/nio/ShortBuffer;",
        "Ljava/nio/ByteBuffer;->asIntBuffer()Ljava/nio/IntBuffer;"
    ],
    "Ljava/nio/ByteOrder;": [
        "Ljava/nio/ByteOrder;->nativeOrder()Ljava/nio/ByteOrder;"
    ],
    "Lcom/badlogic/gdx/audio/analysis/FourierTransform;": [
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->hamming()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->setBand()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->calcAvg()F",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->freqToIndex()I",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->inverse()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->setComplex()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->scaleBand()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->indexToFreq()F",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->getBandWidth()F",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->noAverages()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->allocateArrays()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->forward()V",
        "Lcom/badlogic/gdx/audio/analysis/FourierTransform;->getBand()F"
    ],
    "Lcom/badlogic/gdx/audio/analysis/KissFFT;": [
        "Lcom/badlogic/gdx/audio/analysis/KissFFT;->getImagPart()V",
        "Lcom/badlogic/gdx/audio/analysis/KissFFT;->destroy()V",
        "Lcom/badlogic/gdx/audio/analysis/KissFFT;->create()J",
        "Lcom/badlogic/gdx/audio/analysis/KissFFT;->getRealPart()V",
        "Lcom/badlogic/gdx/audio/analysis/KissFFT;->spectrum()V"
    ],
    "Lcom/badlogic/gdx/audio/analysis/FFT;": [
        "Lcom/badlogic/gdx/audio/analysis/FFT;->fillSpectrum()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->buildTrigTables()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->sin()F",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->buildReverseTable()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->setComplex()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->fft()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->bitReverseComplex()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->cos()F",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->doWindow()V",
        "Lcom/badlogic/gdx/audio/analysis/FFT;->bitReverseSamples()V"
    ],
    "Lcom/badlogic/gdx/audio/analysis/DFT;": [
        "Lcom/badlogic/gdx/audio/analysis/DFT;->fillSpectrum()V",
        "Lcom/badlogic/gdx/audio/analysis/DFT;->cos()F",
        "Lcom/badlogic/gdx/audio/analysis/DFT;->sin()F",
        "Lcom/badlogic/gdx/audio/analysis/DFT;->doWindow()V",
        "Lcom/badlogic/gdx/audio/analysis/DFT;->buildTrigTables()V"
    ],
    "Lcom/badlogic/gdx/math/Frustum;": [
        "Lcom/badlogic/gdx/math/Frustum;->update()V"
    ],
    "Lcom/badlogic/gdx/utils/BufferUtils;": [
        "Lcom/badlogic/gdx/utils/BufferUtils;->copyJni()V",
        "Lcom/badlogic/gdx/utils/BufferUtils;->elementsToBytes()I",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newByteBuffer()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->newIntBuffer()Ljava/nio/IntBuffer;",
        "Lcom/badlogic/gdx/utils/BufferUtils;->copy()V",
        "Lcom/badlogic/gdx/utils/BufferUtils;->bytesToElements()I",
        "Lcom/badlogic/gdx/utils/BufferUtils;->positionInBytes()I"
    ],
    "Lcom/badlogic/gdx/graphics/Pixmap;": [
        "Lcom/badlogic/gdx/graphics/Pixmap;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->drawPixmap()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getGLInternalFormat()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getBlending()Lcom/badlogic/gdx/graphics/Pixmap$Blending;",
        "Lcom/badlogic/gdx/graphics/Pixmap;->setColor()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getFormat()Lcom/badlogic/gdx/graphics/Pixmap$Format;",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getGLType()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->fill()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getGLFormat()I",
        "Lcom/badlogic/gdx/graphics/Pixmap;->getPixels()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/Pixmap;->dispose()V",
        "Lcom/badlogic/gdx/graphics/Pixmap;->setBlending()V"
    ],
    "Lcom/badlogic/gdx/graphics/TextureData;": [
        "Lcom/badlogic/gdx/graphics/TextureData;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/TextureData;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/TextureData;->load()V"
    ],
    "Ljava/nio/IntBuffer;": [
        "Ljava/nio/IntBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->limit()I",
        "Ljava/nio/IntBuffer;->position()I",
        "Ljava/nio/IntBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/IntBuffer;->capacity()I",
        "Ljava/nio/IntBuffer;->limit()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->toString()Ljava/lang/String;",
        "Ljava/nio/IntBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->get()I",
        "Ljava/nio/IntBuffer;->put()Ljava/nio/IntBuffer;"
    ],
    "Lcom/badlogic/gdx/graphics/GL10;": [
        "Lcom/badlogic/gdx/graphics/GL10;->glColorPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glClientActiveTexture()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glMatrixMode()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glEnable()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glEnableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDepthMask()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDrawElements()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glViewport()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDrawArrays()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDisable()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glDisableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glMaterialfv()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glVertexPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glNormalPointer()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glLoadMatrixf()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glBlendFunc()V",
        "Lcom/badlogic/gdx/graphics/GL10;->glTexCoordPointer()V"
    ],
    "Lcom/badlogic/gdx/graphics/PerspectiveCamera;": [
        "Lcom/badlogic/gdx/graphics/PerspectiveCamera;->update()V"
    ],
    "Lcom/badlogic/gdx/graphics/TextureDict;": [
        "Lcom/badlogic/gdx/graphics/TextureDict;->loadTexture()Lcom/badlogic/gdx/graphics/TextureRef;",
        "Lcom/badlogic/gdx/graphics/TextureDict;->removeTexture()V"
    ],
    "Lcom/badlogic/gdx/graphics/Mesh;": [
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertexAttributes()Lcom/badlogic/gdx/graphics/VertexAttributes;",
        "Lcom/badlogic/gdx/graphics/Mesh;->getNumIndices()I",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertexAttribute()Lcom/badlogic/gdx/graphics/VertexAttribute;",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVerticesBuffer()Ljava/nio/FloatBuffer;",
        "Lcom/badlogic/gdx/graphics/Mesh;->bind()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->render()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->unbind()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->dispose()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->clearAllMeshes()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->setIndices()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->invalidateAllMeshes()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->addManagedMesh()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->setAutoBind()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getVertexSize()I",
        "Lcom/badlogic/gdx/graphics/Mesh;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/Mesh;->getIndicesBuffer()Ljava/nio/ShortBuffer;",
        "Lcom/badlogic/gdx/graphics/Mesh;->setVertices()V",
        "Lcom/badlogic/gdx/graphics/Mesh;->getNumVertices()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;": [
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;->unbind()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;->bind()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;->invalidate()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObject;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/IndexData;": [
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->invalidate()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->unbind()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->setIndices()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->getNumMaxIndices()I",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->getNumIndices()I",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->bind()V",
        "Lcom/badlogic/gdx/graphics/glutils/IndexData;->getBuffer()Ljava/nio/ShortBuffer;"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/VertexData;": [
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->setVertices()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getBuffer()Ljava/nio/FloatBuffer;",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->unbind()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getNumMaxVertices()I",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getNumVertices()I",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->getAttributes()Lcom/badlogic/gdx/graphics/VertexAttributes;",
        "Lcom/badlogic/gdx/graphics/glutils/VertexData;->bind()V"
    ],
    "Ljava/nio/FloatBuffer;": [
        "Ljava/nio/FloatBuffer;->put()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->compact()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->position()I",
        "Ljava/nio/FloatBuffer;->limit()I",
        "Ljava/nio/FloatBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/FloatBuffer;->clear()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->get()F",
        "Ljava/nio/FloatBuffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/FloatBuffer;->get()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->limit()Ljava/nio/Buffer;"
    ],
    "Lcom/badlogic/gdx/graphics/VertexAttributes;": [
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->size()I",
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->get()Lcom/badlogic/gdx/graphics/VertexAttribute;",
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->calculateOffsets()I",
        "Lcom/badlogic/gdx/graphics/VertexAttributes;->checkValidity()V"
    ],
    "Lcom/badlogic/gdx/graphics/GL11;": [
        "Lcom/badlogic/gdx/graphics/GL11;->glBindBuffer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glVertexPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glGenBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glBufferSubData()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDrawArrays()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glColorPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glClientActiveTexture()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDrawElements()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glTexCoordPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glNormalPointer()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDeleteBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glDisableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glEnableClientState()V",
        "Lcom/badlogic/gdx/graphics/GL11;->glBufferData()V"
    ],
    "Lcom/badlogic/gdx/graphics/GL20;": [
        "Lcom/badlogic/gdx/graphics/GL20;->glBufferSubData()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform4fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform4i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDisable()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBlendFunc()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDrawElements()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteShader()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glShaderSource()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetShaderiv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteBuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform1i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindRenderbuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindBuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteRenderbuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetAttribLocation()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glDisableVertexAttribArray()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenRenderbuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform3i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDrawArrays()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCheckFramebufferStatus()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glBufferData()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindTexture()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCreateShader()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform1f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGenFramebuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetUniformLocation()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform1fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glBindFramebuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetShaderInfoLog()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteFramebuffers()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCompileShader()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDeleteProgram()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glAttachShader()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform2f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glRenderbufferStorage()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glVertexAttribPointer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetProgramiv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glFramebufferRenderbuffer()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform3fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform2i()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glGetProgramInfoLog()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform4f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glEnableVertexAttribArray()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glVertexAttrib4f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glDepthMask()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glLinkProgram()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glEnable()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform2fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUseProgram()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniform3f()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glViewport()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniformMatrix3fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glUniformMatrix4fv()V",
        "Lcom/badlogic/gdx/graphics/GL20;->glCreateProgram()I",
        "Lcom/badlogic/gdx/graphics/GL20;->glFramebufferTexture2D()V"
    ],
    "Lcom/badlogic/gdx/graphics/Pixmap$Format;": [
        "Lcom/badlogic/gdx/graphics/Pixmap$Format;->valueOf()Lcom/badlogic/gdx/graphics/Pixmap$Format;",
        "Lcom/badlogic/gdx/graphics/Pixmap$Format;->fromGdx2DPixmapFormat()Lcom/badlogic/gdx/graphics/Pixmap$Format;",
        "Lcom/badlogic/gdx/graphics/Pixmap$Format;->toGdx2DPixmapFormat()I"
    ],
    "Lcom/badlogic/gdx/files/FileHandle;": [
        "Lcom/badlogic/gdx/files/FileHandle;->read()Ljava/io/InputStream;",
        "Lcom/badlogic/gdx/files/FileHandle;->file()Ljava/io/File;",
        "Lcom/badlogic/gdx/files/FileHandle;->exists()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->list()[Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->write()Ljava/io/OutputStream;",
        "Lcom/badlogic/gdx/files/FileHandle;->copyTo()V",
        "Lcom/badlogic/gdx/files/FileHandle;->parent()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->delete()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->readString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/files/FileHandle;->isDirectory()Z",
        "Lcom/badlogic/gdx/files/FileHandle;->child()Lcom/badlogic/gdx/files/FileHandle;",
        "Lcom/badlogic/gdx/files/FileHandle;->deleteDirectory()Z"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;": [
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getFormat()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getGLType()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getPixel()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->setPixel()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->fillCircle()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getHeight()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getWidth()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getPixels()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawPixmap()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->load()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawLine()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getGLInternalFormat()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawCircle()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->drawRect()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->free()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->clear()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->setBlend()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->fillRect()V",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->newPixmap()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->getGLFormat()I",
        "Lcom/badlogic/gdx/graphics/g2d/Gdx2DPixmap;->dispose()V"
    ],
    "Lcom/badlogic/gdx/graphics/TextureRef;": [
        "Lcom/badlogic/gdx/graphics/TextureRef;->dispose()V",
        "Lcom/badlogic/gdx/graphics/TextureRef;->addRef()V",
        "Lcom/badlogic/gdx/graphics/TextureRef;->bind()V"
    ],
    "Lcom/badlogic/gdx/graphics/Texture$TextureFilter;": [
        "Lcom/badlogic/gdx/graphics/Texture$TextureFilter;->isMipMap()Z",
        "Lcom/badlogic/gdx/graphics/Texture$TextureFilter;->valueOf()Lcom/badlogic/gdx/graphics/Texture$TextureFilter;"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap$Values;": [
        "Lcom/badlogic/gdx/utils/ObjectMap$Values;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/ObjectMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;": [
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setVertexAttribute()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->ensureBufferCapacity()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->end()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->clearAllShaderPrograms()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->checkManaged()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->isCompiled()Z",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->fetchUniformLocation()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->compileShaders()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->addManagedShader()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->dispose()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->begin()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->disableVertexAttribute()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->loadShader()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->invalidateAllShaderPrograms()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setUniformMatrix()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->enableVertexAttribute()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->getLog()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->setUniformi()V",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->linkProgram()I",
        "Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;->fetchAttributeLocation()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData;": [
        "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObject;": [
        "Lcom/badlogic/gdx/graphics/glutils/IndexBufferObject;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData;": [
        "Lcom/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData;->createBufferObject()I"
    ],
    "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;": [
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->invalidateAllFrameBuffers()V",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->build()V",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->clearAllFrameBuffers()V",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->getManagedStatus()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/glutils/FrameBuffer;->addManagedFrameBuffer()V"
    ],
    "Ljava/util/PriorityQueue;": [
        "Ljava/util/PriorityQueue;->size()I",
        "Ljava/util/PriorityQueue;->add()Z",
        "Ljava/util/PriorityQueue;->poll()Ljava/lang/Object;"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->clear()V",
        "Ljava/util/HashSet;->remove()Z",
        "Ljava/util/HashSet;->contains()Z",
        "Ljava/util/HashSet;->size()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;": [
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;->getTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;->flip()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B",
        "Ljava/io/ByteArrayOutputStream;->write()V"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->length()I",
        "Ljava/lang/CharSequence;->charAt()C"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;": [
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;->setKerning()V",
        "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;->getKerning()I"
    ],
    "Lcom/badlogic/gdx/utils/Array;": [
        "Lcom/badlogic/gdx/utils/Array;->pop()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->addAll()V",
        "Lcom/badlogic/gdx/utils/Array;->peek()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->add()V",
        "Lcom/badlogic/gdx/utils/Array;->removeIndex()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->get()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->resize()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/Array;->clear()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->readBoolean()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->isContinuous()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->addParticles()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->activateParticle()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->isComplete()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setFlip()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setMinParticleCount()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setContinuous()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setMaxParticleCount()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->getImagePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->start()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setSprite()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->readString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->addParticle()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->allowCompletion()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->readInt()I",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setImagePath()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->restart()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->setPosition()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter;->updateParticle()Z"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;->loadTexture()Lcom/badlogic/gdx/graphics/Texture;",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;->loadEmitterImages()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEffect;->loadEmitters()V"
    ],
    "Ljava/io/Writer;": [
        "Ljava/io/Writer;->close()V",
        "Ljava/io/Writer;->flush()V",
        "Ljava/io/Writer;->write()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->newLowValue()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$RangedNumericValue;->setAlwaysActive()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->isRelative()Z",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->newLowValue()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->newHighValue()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->getScale()F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->setAlwaysActive()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$ScaledNumericValue;->load()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;->getColor()[F",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$GradientColorValue;->load()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;->save()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;->load()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShapeValue;->setAlwaysActive()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setColor()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setTexture()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->flip()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setOrigin()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setScale()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setRotation()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->translate()V",
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$Particle;->setBounds()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShape;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnShape;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnEllipseSide;": [
        "Lcom/badlogic/gdx/graphics/g2d/ParticleEmitter$SpawnEllipseSide;->ordinal()I"
    ],
    "Ljava/util/BitSet;": [
        "Ljava/util/BitSet;->nextClearBit()I",
        "Ljava/util/BitSet;->clear()V",
        "Ljava/util/BitSet;->nextSetBit()I",
        "Ljava/util/BitSet;->set()V",
        "Ljava/util/BitSet;->length()I"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;": [
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->getTransformMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->end()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->add()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->begin()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->endCache()I",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->beginCache()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->getProjectionMatrix()Lcom/badlogic/gdx/math/Matrix4;",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->dispose()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->draw()V",
        "Lcom/badlogic/gdx/graphics/g2d/SpriteCache;->createDefaultShader()Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;"
    ],
    "Ljava/nio/Buffer;": [
        "Ljava/nio/Buffer;->position()I",
        "Ljava/nio/Buffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->flip()Ljava/nio/Buffer;",
        "Ljava/nio/Buffer;->limit()Ljava/nio/Buffer;"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;": [
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->removePath()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->removeExtension()Ljava/lang/String;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->getRegion()Lcom/badlogic/gdx/graphics/g2d/TextureAtlas$AtlasRegion;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileAtlas;->getRelativeFileHandle()Lcom/badlogic/gdx/files/FileHandle;"
    ],
    "Lcom/badlogic/gdx/utils/IntMap;": [
        "Lcom/badlogic/gdx/utils/IntMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/IntMap;->entries()Lcom/badlogic/gdx/utils/IntMap$Entries;",
        "Lcom/badlogic/gdx/utils/IntMap;->getStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/IntMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IntMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/IntMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/IntMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/IntMap;->resize()V",
        "Lcom/badlogic/gdx/utils/IntMap;->push()V",
        "Lcom/badlogic/gdx/utils/IntMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/IntMap;->get()Ljava/lang/Object;"
    ],
    "Ljavax/xml/parsers/SAXParserFactory;": [
        "Ljavax/xml/parsers/SAXParserFactory;->newSAXParser()Ljavax/xml/parsers/SAXParser;",
        "Ljavax/xml/parsers/SAXParserFactory;->newInstance()Ljavax/xml/parsers/SAXParserFactory;"
    ],
    "Ljavax/xml/parsers/SAXParser;": [
        "Ljavax/xml/parsers/SAXParser;->parse()V"
    ],
    "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;": [
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->createFromCSV()Lcom/badlogic/gdx/utils/IntArray;",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getLayerWidthInBlocks()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->getLayerHeightInBlocks()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->addBlock()I",
        "Lcom/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer;->render()V"
    ],
    "Lcom/badlogic/gdx/utils/IntArray;": [
        "Lcom/badlogic/gdx/utils/IntArray;->addAll()V",
        "Lcom/badlogic/gdx/utils/IntArray;->add()V",
        "Lcom/badlogic/gdx/utils/IntArray;->shrink()V",
        "Lcom/badlogic/gdx/utils/IntArray;->contains()Z",
        "Lcom/badlogic/gdx/utils/IntArray;->resize()[I",
        "Lcom/badlogic/gdx/utils/IntArray;->removeIndex()I"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Material;": [
        "Lcom/badlogic/gdx/graphics/g3d/Material;->setTmpArray()V",
        "Lcom/badlogic/gdx/graphics/g3d/Material;->set()V"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->writeFloat()V",
        "Ljava/io/DataOutputStream;->writeShort()V",
        "Ljava/io/DataOutputStream;->writeUTF()V",
        "Ljava/io/DataOutputStream;->writeChar()V",
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->writeBoolean()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Animation;": [
        "Lcom/badlogic/gdx/graphics/g3d/Animation;->getNumFrames()I",
        "Lcom/badlogic/gdx/graphics/g3d/Animation;->getLength()F"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Animator;": [
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->interpolate()V",
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->setAnimation()V",
        "Lcom/badlogic/gdx/graphics/g3d/Animator;->setInterpolationFrames()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;": [
        "Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;->ordinal()I"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;": [
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;->removeRef()I",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;->addRef()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;": [
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->setNumTaggedJoints()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->getCurrentWrapMode()Lcom/badlogic/gdx/graphics/g3d/Animator$WrapMode;",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->setKeyframeDimensions()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->update()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->hasAnimation()Z",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->getInterpolatedKeyframe()Lcom/badlogic/gdx/graphics/g3d/keyframed/Keyframe;",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->interpolateJoints()V",
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimator;->setAnimation()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;->setAnimation()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;->update()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator;->getSkeleton()Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->getMesh()Lcom/badlogic/gdx/graphics/Mesh;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->getVertices()[F",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->getIndices()[S",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Renderer;->setSkeleton()V"
    ],
    "[F": [
        "[F->clone()Ljava/lang/Object;"
    ],
    "[S": [
        "[S->clone()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel;": [
        "Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel;->getAnimation()Lcom/badlogic/gdx/graphics/g3d/keyframed/KeyframeAnimation;"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->normalize()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->multiply()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->set()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->slerp()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->rotate()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->computeW()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->invert()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Quaternion;->dot()F"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;->loadObj()Lcom/badlogic/gdx/graphics/Mesh;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;->loadObjFromString()Lcom/badlogic/gdx/graphics/Mesh;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/obj/ObjLoader;->getIndex()I"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->tokenize()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->parseFloat()F",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->buildFrameSkeleton()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader;->parseInt()I"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->parseShort()S"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;->write()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Joints;->read()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateVerticesN()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calcNor()Lcom/badlogic/gdx/math/Vector3;",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->read()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->createVertexArray()[F",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateVerticesJni()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateVertices()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->write()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->calculateNormalsBind()V",
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Mesh;->getIndices()[S"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Jni;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Jni;->calculateVertices()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5AnimationInfo;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5AnimationInfo;->reset()V"
    ],
    "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animation;": [
        "Lcom/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animation;->interpolate()V"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap;": [
        "Lcom/badlogic/gdx/utils/IdentityMap;->hash3()I",
        "Lcom/badlogic/gdx/utils/IdentityMap;->hash2()I",
        "Lcom/badlogic/gdx/utils/IdentityMap;->putStash()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->removeStash()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IdentityMap;->containsKeyStash()Z",
        "Lcom/badlogic/gdx/utils/IdentityMap;->push()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->put()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/IdentityMap;->resize()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->putResize()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->removeStashIndex()V",
        "Lcom/badlogic/gdx/utils/IdentityMap;->getStash()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap$Entries;": [
        "Lcom/badlogic/gdx/utils/IdentityMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap$Keys;": [
        "Lcom/badlogic/gdx/utils/IdentityMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IdentityMap$Values;": [
        "Lcom/badlogic/gdx/utils/IdentityMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/Sort;": [
        "Lcom/badlogic/gdx/utils/Sort;->sort()V",
        "Lcom/badlogic/gdx/utils/Sort;->instance()Lcom/badlogic/gdx/utils/Sort;"
    ],
    "Lcom/badlogic/gdx/utils/ScreenUtils;": [
        "Lcom/badlogic/gdx/utils/ScreenUtils;->getFrameBufferTexture()Lcom/badlogic/gdx/graphics/g2d/TextureRegion;",
        "Lcom/badlogic/gdx/utils/ScreenUtils;->getFrameBufferPixels()[B"
    ],
    "Lcom/badlogic/gdx/utils/Base64Coder;": [
        "Lcom/badlogic/gdx/utils/Base64Coder;->encode()[C",
        "Lcom/badlogic/gdx/utils/Base64Coder;->encodeLines()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/Base64Coder;->decode()[B"
    ],
    "Ljava/lang/Comparable;": [
        "Ljava/lang/Comparable;->compareTo()I"
    ],
    "Lcom/badlogic/gdx/utils/ComparableTimSort;": [
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->binarySort()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeForceCollapse()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->doSort()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->gallopRight()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeLo()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeAt()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->countRunAndMakeAscending()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->gallopLeft()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->minRunLength()I",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeCollapse()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->ensureCapacity()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->reverseRange()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->rangeCheck()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->sort()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->pushRun()V",
        "Lcom/badlogic/gdx/utils/ComparableTimSort;->mergeHi()V"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap$Entries;": [
        "Lcom/badlogic/gdx/utils/ObjectMap$Entries;->reset()V",
        "Lcom/badlogic/gdx/utils/ObjectMap$Entries;->iterator()Ljava/util/Iterator;"
    ],
    "Lcom/badlogic/gdx/utils/ObjectMap$Keys;": [
        "Lcom/badlogic/gdx/utils/ObjectMap$Keys;->reset()V"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "Ljava/lang/Runnable;": [
        "Ljava/lang/Runnable;->run()V"
    ],
    "Lcom/badlogic/gdx/utils/PauseableThread;": [
        "Lcom/badlogic/gdx/utils/PauseableThread;->onResume()V"
    ],
    "Ljava/util/Comparator;": [
        "Ljava/util/Comparator;->compare()I"
    ],
    "Lcom/badlogic/gdx/utils/TimSort;": [
        "Lcom/badlogic/gdx/utils/TimSort;->gallopLeft()I",
        "Lcom/badlogic/gdx/utils/TimSort;->gallopRight()I",
        "Lcom/badlogic/gdx/utils/TimSort;->rangeCheck()V",
        "Lcom/badlogic/gdx/utils/TimSort;->binarySort()V",
        "Lcom/badlogic/gdx/utils/TimSort;->minRunLength()I",
        "Lcom/badlogic/gdx/utils/TimSort;->ensureCapacity()[Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeForceCollapse()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeCollapse()V",
        "Lcom/badlogic/gdx/utils/TimSort;->sort()V",
        "Lcom/badlogic/gdx/utils/TimSort;->pushRun()V",
        "Lcom/badlogic/gdx/utils/TimSort;->countRunAndMakeAscending()I",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeLo()V",
        "Lcom/badlogic/gdx/utils/TimSort;->reverseRange()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeAt()V",
        "Lcom/badlogic/gdx/utils/TimSort;->mergeHi()V",
        "Lcom/badlogic/gdx/utils/TimSort;->doSort()V"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->sort()V",
        "Ljava/util/Arrays;->toString()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/utils/GdxNativesLoader;": [
        "Lcom/badlogic/gdx/utils/GdxNativesLoader;->extractLibrary()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/GdxNativesLoader;->loadLibrary()Z",
        "Lcom/badlogic/gdx/utils/GdxNativesLoader;->crc()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/GdxNativesLoader;->load()V"
    ],
    "Ljava/util/zip/CRC32;": [
        "Ljava/util/zip/CRC32;->update()V",
        "Ljava/util/zip/CRC32;->getValue()J"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->close()V",
        "Ljava/io/FileOutputStream;->write()V"
    ],
    "Lcom/badlogic/gdx/utils/LongArray;": [
        "Lcom/badlogic/gdx/utils/LongArray;->removeIndex()J",
        "Lcom/badlogic/gdx/utils/LongArray;->resize()[J",
        "Lcom/badlogic/gdx/utils/LongArray;->addAll()V"
    ],
    "Ljava/util/concurrent/atomic/AtomicReferenceArray;": [
        "Ljava/util/concurrent/atomic/AtomicReferenceArray;->length()I",
        "Ljava/util/concurrent/atomic/AtomicReferenceArray;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/atomic/AtomicReferenceArray;->set()V"
    ],
    "Ljava/util/concurrent/atomic/AtomicInteger;": [
        "Ljava/util/concurrent/atomic/AtomicInteger;->get()I",
        "Ljava/util/concurrent/atomic/AtomicInteger;->set()V"
    ],
    "Lcom/badlogic/gdx/utils/AtomicQueue;": [
        "Lcom/badlogic/gdx/utils/AtomicQueue;->poll()Ljava/lang/Object;",
        "Lcom/badlogic/gdx/utils/AtomicQueue;->next()I",
        "Lcom/badlogic/gdx/utils/AtomicQueue;->put()Z"
    ],
    "Lcom/badlogic/gdx/utils/LittleEndianInputStream;": [
        "Lcom/badlogic/gdx/utils/LittleEndianInputStream;->readInt()I",
        "Lcom/badlogic/gdx/utils/LittleEndianInputStream;->readLong()J"
    ],
    "Lcom/badlogic/gdx/utils/IntMap$Entries;": [
        "Lcom/badlogic/gdx/utils/IntMap$Entries;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/IntMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IntMap$Keys;": [
        "Lcom/badlogic/gdx/utils/IntMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/IntMap$Values;": [
        "Lcom/badlogic/gdx/utils/IntMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/FloatArray;": [
        "Lcom/badlogic/gdx/utils/FloatArray;->resize()[F",
        "Lcom/badlogic/gdx/utils/FloatArray;->removeIndex()F",
        "Lcom/badlogic/gdx/utils/FloatArray;->addAll()V"
    ],
    "Lcom/badlogic/gdx/utils/Xml$Element;": [
        "Lcom/badlogic/gdx/utils/Xml$Element;->addChild()V",
        "Lcom/badlogic/gdx/utils/Xml$Element;->setText()V",
        "Lcom/badlogic/gdx/utils/Xml$Element;->setAttribute()V",
        "Lcom/badlogic/gdx/utils/Xml$Element;->getName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/Xml$Element;->getText()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/utils/Xml;": [
        "Lcom/badlogic/gdx/utils/Xml;->parse()Lcom/badlogic/gdx/utils/Xml$Element;",
        "Lcom/badlogic/gdx/utils/Xml;->close()V",
        "Lcom/badlogic/gdx/utils/Xml;->entity()Ljava/lang/String;",
        "Lcom/badlogic/gdx/utils/Xml;->text()V",
        "Lcom/badlogic/gdx/utils/Xml;->open()V",
        "Lcom/badlogic/gdx/utils/Xml;->attribute()V"
    ],
    "Ljava/io/Reader;": [
        "Ljava/io/Reader;->read()I"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Entries;": [
        "Lcom/badlogic/gdx/utils/LongMap$Entries;->iterator()Ljava/util/Iterator;",
        "Lcom/badlogic/gdx/utils/LongMap$Entries;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Keys;": [
        "Lcom/badlogic/gdx/utils/LongMap$Keys;->reset()V"
    ],
    "Lcom/badlogic/gdx/utils/LongMap$Values;": [
        "Lcom/badlogic/gdx/utils/LongMap$Values;->reset()V"
    ],
    "Lcom/badlogic/gdx/Files$FileType;": [
        "Lcom/badlogic/gdx/Files$FileType;->ordinal()I"
    ],
    "Ljava/io/InputStreamReader;": [
        "Ljava/io/InputStreamReader;->close()V",
        "Ljava/io/InputStreamReader;->read()I"
    ],
    "Ljavax/microedition/khronos/opengles/GL11;": [
        "Ljavax/microedition/khronos/opengles/GL11;->glGenBuffers()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glDeleteBuffers()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glClipPlanef()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glColorPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetPointerv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexEnvi()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glPointParameterfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glDrawElements()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetClipPlanef()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetFloatv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glVertexPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetTexEnviv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glIsTexture()Z",
        "Ljavax/microedition/khronos/opengles/GL11;->glPointSizePointerOES()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameteri()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glPointParameterf()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetTexParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetMaterialfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexEnviv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glIsBuffer()Z",
        "Ljavax/microedition/khronos/opengles/GL11;->glClipPlanex()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBufferSubData()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glNormalPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glIsEnabled()Z",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameterfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetBooleanv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetLightfv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetBufferParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBindBuffer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBufferData()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexCoordPointer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glColor4ub()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glGetTexParameterfv()V"
    ],
    "Ljavax/microedition/khronos/opengles/GL10;": [
        "Ljavax/microedition/khronos/opengles/GL10;->glEnable()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glViewport()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthRangex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearDepthx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glAlphaFuncx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glNormal3f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFlush()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGenTextures()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultMatrixx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCullFace()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPolygonOffset()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColor4f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPointSize()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glScalef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearDepthf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetString()Ljava/lang/String;",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glBindTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glOrthof()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColorPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColor4x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glSampleCoverage()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glRotatef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetIntegerv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glStencilMask()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadMatrixf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPopMatrix()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetError()I",
        "Ljavax/microedition/khronos/opengles/GL10;->glDrawArrays()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPushMatrix()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClear()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFinish()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultMatrixf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCopyTexSubImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glShadeModel()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glEnableClientState()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultiTexCoord4x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glScalex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLineWidthx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFrustumf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadIdentity()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glVertexPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadMatrixx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCompressedTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glRotatex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTranslatex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFrontFace()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthRangef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLogicOp()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMatrixMode()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColorMask()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glOrthox()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDrawElements()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLineWidth()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDisable()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glHint()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMultiTexCoord4f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCompressedTexSubImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glAlphaFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFogxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTranslatef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexParameterx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glNormalPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glSampleCoveragex()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glScissor()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDeleteTextures()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearStencil()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearColorx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glActiveTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexParameterf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearColor()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClientActiveTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glFrustumx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glStencilOp()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glReadPixels()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDisableClientState()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMaterialfv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glBlendFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glStencilFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPolygonOffsetx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCopyTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexCoordPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDepthMask()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexSubImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPixelStorei()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glNormal3x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLightModelxv()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPointSizex()V"
    ],
    "Landroid/media/SoundPool;": [
        "Landroid/media/SoundPool;->unload()Z",
        "Landroid/media/SoundPool;->stop()V",
        "Landroid/media/SoundPool;->release()V",
        "Landroid/media/SoundPool;->load()I",
        "Landroid/media/SoundPool;->play()I"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidSound;": [
        "Lcom/badlogic/gdx/backends/android/AndroidSound;->play()V"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->getPointerId()I",
        "Landroid/view/MotionEvent;->getPointerCount()I",
        "Landroid/view/MotionEvent;->getY()F",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->getX()F"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidInput;": [
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->isTouched()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->updateOrientation()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->getFreePointerIndex()I",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->lookUpPointerIndex()I",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->registerSensorListeners()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->unregisterSensorListeners()V",
        "Lcom/badlogic/gdx/backends/android/AndroidInput;->processEvents()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidMultiTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidMultiTouchHandler;->postTouchEvent()V",
        "Lcom/badlogic/gdx/backends/android/AndroidMultiTouchHandler;->supportsMultitouch()Z"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->getSensorList()Ljava/util/List;",
        "Landroid/hardware/SensorManager;->getRotationMatrix()Z",
        "Landroid/hardware/SensorManager;->getDefaultSensor()Landroid/hardware/Sensor;",
        "Landroid/hardware/SensorManager;->registerListener()Z",
        "Landroid/hardware/SensorManager;->unregisterListener()V",
        "Landroid/hardware/SensorManager;->getOrientation()[F"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidLocklessMultiTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidLocklessMultiTouchHandler;->postTouchEvent()V",
        "Lcom/badlogic/gdx/backends/android/AndroidLocklessMultiTouchHandler;->supportsMultitouch()Z"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->cancel()V",
        "Landroid/os/Vibrator;->vibrate()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidLocklessInput;": [
        "Lcom/badlogic/gdx/backends/android/AndroidLocklessInput;->updateOrientation()V",
        "Lcom/badlogic/gdx/backends/android/AndroidLocklessInput;->isTouched()Z"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getKeyCode()I",
        "Landroid/view/KeyEvent;->getUnicodeChar()I",
        "Landroid/view/KeyEvent;->getAction()I"
    ],
    "Landroid/hardware/Sensor;": [
        "Landroid/hardware/Sensor;->getType()I"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidLocklessTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidLocklessTouchHandler;->onTouch()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidGraphics;": [
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->updatePpi()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->pause()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->logConfig()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getAttrib()I",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->setupGL()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->clearManagedCaches()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->checkGL20()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getView()Landroid/view/View;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->getEglConfigChooser()Landroid/opengl/GLSurfaceView$EGLConfigChooser;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->destroy()V",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->createGLSurfaceView()Landroid/view/View;",
        "Lcom/badlogic/gdx/backends/android/AndroidGraphics;->resume()V"
    ],
    "Landroid/view/inputmethod/InputMethodManager;": [
        "Landroid/view/inputmethod/InputMethodManager;->showSoftInput()Z",
        "Landroid/view/inputmethod/InputMethodManager;->hideSoftInputFromWindow()Z"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidMusic;": [
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->isPlaying()Z",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->pause()V",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->play()V",
        "Lcom/badlogic/gdx/backends/android/AndroidMusic;->dispose()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;": [
        "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;->type()Lcom/badlogic/gdx/Files$FileType;",
        "Lcom/badlogic/gdx/backends/android/AndroidFileHandle;->path()Ljava/lang/String;"
    ],
    "Landroid/content/res/AssetFileDescriptor;": [
        "Landroid/content/res/AssetFileDescriptor;->getStartOffset()J",
        "Landroid/content/res/AssetFileDescriptor;->close()V",
        "Landroid/content/res/AssetFileDescriptor;->getLength()J",
        "Landroid/content/res/AssetFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->isLooping()Z",
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->getCurrentPosition()I",
        "Landroid/media/MediaPlayer;->setVolume()V",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->stop()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->isPlaying()Z"
    ],
    "Ljavax/microedition/khronos/egl/EGLContext;": [
        "Ljavax/microedition/khronos/egl/EGLContext;->getEGL()Ljavax/microedition/khronos/egl/EGL;"
    ],
    "Ljavax/microedition/khronos/egl/EGL10;": [
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetDisplay()Ljavax/microedition/khronos/egl/EGLDisplay;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglWaitNative()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglWaitGL()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetCurrentContext()Ljavax/microedition/khronos/egl/EGLContext;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreateWindowSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetCurrentSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigs()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglQueryString()Ljava/lang/String;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglChooseConfig()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglDestroySurface()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglSwapBuffers()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglTerminate()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetError()I",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCopyBuffers()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglMakeCurrent()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglInitialize()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreatePixmapSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreatePbufferSurface()Ljavax/microedition/khronos/egl/EGLSurface;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglQuerySurface()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglDestroyContext()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglCreateContext()Ljavax/microedition/khronos/egl/EGLContext;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetCurrentDisplay()Ljavax/microedition/khronos/egl/EGLDisplay;",
        "Ljavax/microedition/khronos/egl/EGL10;->eglQueryContext()Z",
        "Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigAttrib()Z"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setRenderer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setMeasuredDimension()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setEGLContextFactory()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceView20;->setEGLConfigChooser()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->onResume()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setEGLConfigChooser()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setMeasuredDimension()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->setRenderer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake;->onPause()V"
    ],
    "Landroid/opengl/GLSurfaceView;": [
        "Landroid/opengl/GLSurfaceView;->onDetachedFromWindow()V",
        "Landroid/opengl/GLSurfaceView;->setRenderer()V",
        "Landroid/opengl/GLSurfaceView;->onPause()V",
        "Landroid/opengl/GLSurfaceView;->setEGLConfigChooser()V",
        "Landroid/opengl/GLSurfaceView;->onResume()V"
    ],
    "Lcom/badlogic/gdx/ApplicationListener;": [
        "Lcom/badlogic/gdx/ApplicationListener;->resume()V",
        "Lcom/badlogic/gdx/ApplicationListener;->create()V",
        "Lcom/badlogic/gdx/ApplicationListener;->render()V",
        "Lcom/badlogic/gdx/ApplicationListener;->pause()V",
        "Lcom/badlogic/gdx/ApplicationListener;->resize()V",
        "Lcom/badlogic/gdx/ApplicationListener;->dispose()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidAudio;": [
        "Lcom/badlogic/gdx/backends/android/AndroidAudio;->resume()V",
        "Lcom/badlogic/gdx/backends/android/AndroidAudio;->pause()V",
        "Lcom/badlogic/gdx/backends/android/AndroidAudio;->dispose()V"
    ],
    "Ljava/util/Map$Entry;": [
        "Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;",
        "Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidPreferences;": [
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putString()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putFloat()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putLong()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putBoolean()V",
        "Lcom/badlogic/gdx/backends/android/AndroidPreferences;->putInteger()V"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->freeMemory()J",
        "Ljava/lang/Runtime;->totalMemory()J",
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;"
    ],
    "Landroid/os/Debug;": [
        "Landroid/os/Debug;->getNativeHeapAllocatedSize()J"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->acquire()V",
        "Landroid/os/PowerManager$WakeLock;->release()V"
    ],
    "Ljava/lang/IllegalStateException;": [
        "Ljava/lang/IllegalStateException;->printStackTrace()V"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->printStackTrace()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidTouchHandler;->onTouch()V"
    ],
    "Landroid/media/AudioRecord;": [
        "Landroid/media/AudioRecord;->getMinBufferSize()I",
        "Landroid/media/AudioRecord;->stop()V",
        "Landroid/media/AudioRecord;->read()I",
        "Landroid/media/AudioRecord;->startRecording()V",
        "Landroid/media/AudioRecord;->release()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidLocklessSingleTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidLocklessSingleTouchHandler;->postTouchEvent()V"
    ],
    "Lcom/badlogic/gdx/backends/android/AndroidSingleTouchHandler;": [
        "Lcom/badlogic/gdx/backends/android/AndroidSingleTouchHandler;->postTouchEvent()V"
    ],
    "Landroid/opengl/GLU;": [
        "Landroid/opengl/GLU;->gluPerspective()V",
        "Landroid/opengl/GLU;->gluUnProject()I",
        "Landroid/opengl/GLU;->gluOrtho2D()V",
        "Landroid/opengl/GLU;->gluProject()I",
        "Landroid/opengl/GLU;->gluLookAt()V",
        "Landroid/opengl/GLU;->gluErrorString()Ljava/lang/String;"
    ],
    "Landroid/media/AudioTrack;": [
        "Landroid/media/AudioTrack;->write()I",
        "Landroid/media/AudioTrack;->getMinBufferSize()I",
        "Landroid/media/AudioTrack;->play()V",
        "Landroid/media/AudioTrack;->stop()V",
        "Landroid/media/AudioTrack;->release()V"
    ],
    "Landroid/view/SurfaceHolder;": [
        "Landroid/view/SurfaceHolder;->addCallback()V",
        "Landroid/view/SurfaceHolder;->setType()V",
        "Landroid/view/SurfaceHolder;->setFormat()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/ResolutionStrategy;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/ResolutionStrategy;->calcMeasures()Lcom/badlogic/gdx/backends/android/surfaceview/ResolutionStrategy$MeasuredDimension;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;->setEGLConfigChooser()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;->getHolder()Landroid/view/SurfaceHolder;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView;->checkRenderThreadState()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->setRenderMode()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->onWindowResize()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->start()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->queueEvent()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->onPause()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->getRenderMode()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->onResume()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->requestRender()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->surfaceCreated()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->surfaceDestroyed()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread;->requestExitAndWait()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLException;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLException;->getErrorString()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->logLine()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->arg()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->returns()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->flush()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->checkError()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->log()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->end()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->getHex()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->getErrorString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/EGLLogWrapper;->begin()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureTarget()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->begin()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getHintTarget()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->doArrayElement()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getShadeModel()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->toByteBuffer()Ljava/nio/ByteBuffer;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->endLogIndices()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFogPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFogParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvParamName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->end()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFactor()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightModelParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIntegerStateFormat()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->startLogIndices()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getMaterialParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getMatrixMode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIntegerStateName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getCap()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getBeginMode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->arg()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightModelPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getHex()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getPointerTypeName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->flush()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getClearBufferMask()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvTarget()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightParamCount()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->argPointer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getFaceName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->logLine()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIntegerStateSize()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getLightPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->toString()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->toCharIndices()[C",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->log()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureEnvPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->formattedAppend()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTexturePName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->doElement()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getTextureParamName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getMaterialPName()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getClientState()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->bindArrays()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getHintMode()Ljava/lang/String;",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->returns()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->unbindArrays()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->checkError()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper;->getIndexType()Ljava/lang/String;"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->sizeof()I",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->bindByteBuffer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->unbindByteBuffer()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLLogWrapper$PointerInfo;->getStride()I"
    ],
    "Ljava/nio/CharBuffer;": [
        "Ljava/nio/CharBuffer;->get()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/CharBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/CharBuffer;->limit()I",
        "Ljava/nio/CharBuffer;->get()C",
        "Ljava/nio/CharBuffer;->put()Ljava/nio/CharBuffer;",
        "Ljava/nio/CharBuffer;->position()I"
    ],
    "Ljavax/microedition/khronos/opengles/GL11Ext;": [
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexxvOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexivOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexfOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexxOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexsOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexfvOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexiOES()V",
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexsvOES()V"
    ],
    "Ljavax/microedition/khronos/opengles/GL10Ext;": [
        "Ljavax/microedition/khronos/opengles/GL10Ext;->glQueryMatrixxOES()I"
    ],
    "Ljava/nio/DoubleBuffer;": [
        "Ljava/nio/DoubleBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/DoubleBuffer;->put()Ljava/nio/DoubleBuffer;",
        "Ljava/nio/DoubleBuffer;->get()D",
        "Ljava/nio/DoubleBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/DoubleBuffer;->position()I",
        "Ljava/nio/DoubleBuffer;->limit()I"
    ],
    "Ljava/nio/LongBuffer;": [
        "Ljava/nio/LongBuffer;->order()Ljava/nio/ByteOrder;",
        "Ljava/nio/LongBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/LongBuffer;->put()Ljava/nio/LongBuffer;",
        "Ljava/nio/LongBuffer;->position()I",
        "Ljava/nio/LongBuffer;->get()J",
        "Ljava/nio/LongBuffer;->limit()I"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLErrorWrapper;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLErrorWrapper;->checkThread()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLErrorWrapper;->checkError()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->onPause()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->requestRender()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->requestExitAndWait()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->surfaceCreated()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->queueEvent()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->surfaceDestroyed()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->onResume()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->setRenderMode()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->start()V",
        "Lcom/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewCupcake$GLThread;->onWindowResize()V"
    ],
    "Lcom/badlogic/gdx/backends/android/surfaceview/DefaultGLSurfaceView;": [
        "Lcom/badlogic/gdx/backends/android/surfaceview/DefaultGLSurfaceView;->setMeasuredDimension()V"
    ],
    "Ljava/net/Socket;": [
        "Ljava/net/Socket;->setTcpNoDelay()V",
        "Ljava/net/Socket;->setSoTimeout()V",
        "Ljava/net/Socket;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->getHostName()Ljava/lang/String;",
        "Ljava/net/InetAddress;->getLocalHost()Ljava/net/InetAddress;",
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;",
        "Ljava/net/InetAddress;->getAllByName()[Ljava/net/InetAddress;"
    ],
    "Ljava/net/ServerSocket;": [
        "Ljava/net/ServerSocket;->accept()Ljava/net/Socket;"
    ],
    "Laurelienribon/tweenengine/TweenGroup;": [
        "Laurelienribon/tweenengine/TweenGroup;->computeDuration()I"
    ],
    "Laurelienribon/tweenengine/utils/Pool;": [
        "Laurelienribon/tweenengine/utils/Pool;->clear()V",
        "Laurelienribon/tweenengine/utils/Pool;->free()V",
        "Laurelienribon/tweenengine/utils/Pool;->size()I",
        "Laurelienribon/tweenengine/utils/Pool;->getNew()Ljava/lang/Object;",
        "Laurelienribon/tweenengine/utils/Pool;->get()Ljava/lang/Object;"
    ],
    "Laurelienribon/tweenengine/callbacks/CompleteCallback;": [
        "Laurelienribon/tweenengine/callbacks/CompleteCallback;->onComplete()V"
    ],
    "Laurelienribon/tweenengine/callbacks/DelayEndedCallback;": [
        "Laurelienribon/tweenengine/callbacks/DelayEndedCallback;->onDelayEnded()V"
    ],
    "Laurelienribon/tweenengine/callbacks/IterationCompleteCallback;": [
        "Laurelienribon/tweenengine/callbacks/IterationCompleteCallback;->onIterationComplete()V"
    ],
    "Laurelienribon/tweenengine/callbacks/KillCallback;": [
        "Laurelienribon/tweenengine/callbacks/KillCallback;->onKill()V"
    ],
    "Laurelienribon/tweenengine/callbacks/PoolCallback;": [
        "Laurelienribon/tweenengine/callbacks/PoolCallback;->onPool()V"
    ],
    "Laurelienribon/tweenengine/callbacks/StartCallback;": [
        "Laurelienribon/tweenengine/callbacks/StartCallback;->onStart()V"
    ],
    "Laurelienribon/tweenengine/Tweenable;": [
        "Laurelienribon/tweenengine/Tweenable;->getTweenValues()I",
        "Laurelienribon/tweenengine/Tweenable;->onTweenUpdated()V"
    ],
    "Laurelienribon/tweenengine/TweenEquation;": [
        "Laurelienribon/tweenengine/TweenEquation;->compute()F"
    ]
}