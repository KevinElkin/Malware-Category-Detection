{
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->getConstructors()[Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->getMethod()Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->desiredAssertionStatus()Z",
        "Ljava/lang/Class;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/Class;->getDeclaredMethod()Ljava/lang/reflect/Method;"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/AABB;": [
        "Lorg/jbox2d/collision/AABB;->isValid()Z"
    ],
    "Lorg/jbox2d/common/Vec2;": [
        "Lorg/jbox2d/common/Vec2;->clone()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->add()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->setZero()V",
        "Lorg/jbox2d/common/Vec2;->negateToOut()V",
        "Lorg/jbox2d/common/Vec2;->set()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->addLocal()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->isValid()Z",
        "Lorg/jbox2d/common/Vec2;->cross()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->negate()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->dot()F",
        "Lorg/jbox2d/common/Vec2;->crossToOut()V",
        "Lorg/jbox2d/common/Vec2;->normalize()F",
        "Lorg/jbox2d/common/Vec2;->mul()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->absLocal()V",
        "Lorg/jbox2d/common/Vec2;->lengthSquared()F",
        "Lorg/jbox2d/common/Vec2;->minToOut()V",
        "Lorg/jbox2d/common/Vec2;->normalizeAndFix()F",
        "Lorg/jbox2d/common/Vec2;->negateLocal()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->subLocal()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->mulLocal()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->set()V",
        "Lorg/jbox2d/common/Vec2;->cross()F",
        "Lorg/jbox2d/common/Vec2;->sub()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Vec2;->maxToOut()V",
        "Lorg/jbox2d/common/Vec2;->length()F"
    ],
    "Lorg/jbox2d/collision/Proxy;": [
        "Lorg/jbox2d/collision/Proxy;->setNext()V",
        "Lorg/jbox2d/collision/Proxy;->isValid()Z",
        "Lorg/jbox2d/collision/Proxy;->getNext()I"
    ],
    "Lorg/jbox2d/collision/SortKeyFunc;": [
        "Lorg/jbox2d/collision/SortKeyFunc;->apply()F"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->byteValue()B",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->floatValue()F",
        "Ljava/lang/Integer;->parseInt()I",
        "Ljava/lang/Integer;->intValue()I"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->printf()Ljava/io/PrintStream;",
        "Ljava/io/PrintStream;->println()V"
    ],
    "Lorg/jbox2d/collision/BroadPhase;": [
        "Lorg/jbox2d/collision/BroadPhase;->commit()V",
        "Lorg/jbox2d/collision/BroadPhase;->incrementOverlapCount()V",
        "Lorg/jbox2d/collision/BroadPhase;->inRange()Z",
        "Lorg/jbox2d/collision/BroadPhase;->incrementTimeStamp()V",
        "Lorg/jbox2d/collision/BroadPhase;->testOverlap()Z",
        "Lorg/jbox2d/collision/BroadPhase;->computeBounds()V",
        "Lorg/jbox2d/collision/BroadPhase;->destroyProxy()V",
        "Lorg/jbox2d/collision/BroadPhase;->query()V",
        "Lorg/jbox2d/collision/BroadPhase;->querySegment()I",
        "Lorg/jbox2d/collision/BroadPhase;->binarySearch()I",
        "Lorg/jbox2d/collision/BroadPhase;->addProxyResult()V",
        "Lorg/jbox2d/collision/BroadPhase;->validate()V",
        "Lorg/jbox2d/collision/BroadPhase;->moveProxy()V",
        "Lorg/jbox2d/collision/BroadPhase;->query()[Ljava/lang/Object;",
        "Lorg/jbox2d/collision/BroadPhase;->createProxy()I"
    ],
    "Lorg/jbox2d/collision/Bound;": [
        "Lorg/jbox2d/collision/Bound;->swap()V",
        "Lorg/jbox2d/collision/Bound;->isLower()Z",
        "Lorg/jbox2d/collision/Bound;->isUpper()Z"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->length()I",
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;"
    ],
    "Lorg/jbox2d/collision/PairManager;": [
        "Lorg/jbox2d/collision/PairManager;->removePair()Ljava/lang/Object;",
        "Lorg/jbox2d/collision/PairManager;->commit()V",
        "Lorg/jbox2d/collision/PairManager;->removeBufferedPair()V",
        "Lorg/jbox2d/collision/PairManager;->find()Lorg/jbox2d/collision/Pair;",
        "Lorg/jbox2d/collision/PairManager;->equals()Z",
        "Lorg/jbox2d/collision/PairManager;->addPair()Lorg/jbox2d/collision/Pair;",
        "Lorg/jbox2d/collision/PairManager;->addBufferedPair()V",
        "Lorg/jbox2d/collision/PairManager;->hash()I"
    ],
    "Lorg/jbox2d/pooling/arrays/IntegerArray;": [
        "Lorg/jbox2d/pooling/arrays/IntegerArray;->get()[Ljava/lang/Object;",
        "Lorg/jbox2d/pooling/arrays/IntegerArray;->getInitializedArray()[Ljava/lang/Integer;"
    ],
    "Ljava/lang/System;": [
        "Ljava/lang/System;->arraycopy()V",
        "Ljava/lang/System;->loadLibrary()V",
        "Ljava/lang/System;->currentTimeMillis()J"
    ],
    "Lorg/jbox2d/common/MathUtils;": [
        "Lorg/jbox2d/common/MathUtils;->clamp()F",
        "Lorg/jbox2d/common/MathUtils;->invSqrt()F",
        "Lorg/jbox2d/common/MathUtils;->pow()F",
        "Lorg/jbox2d/common/MathUtils;->sin()F",
        "Lorg/jbox2d/common/MathUtils;->floor()I",
        "Lorg/jbox2d/common/MathUtils;->max()F",
        "Lorg/jbox2d/common/MathUtils;->sqrt()F",
        "Lorg/jbox2d/common/MathUtils;->max()I",
        "Lorg/jbox2d/common/MathUtils;->abs()F",
        "Lorg/jbox2d/common/MathUtils;->isPowerOfTwo()Z",
        "Lorg/jbox2d/common/MathUtils;->cos()F",
        "Lorg/jbox2d/common/MathUtils;->min()F"
    ],
    "Lorg/jbox2d/pooling/TLBoundValues;": [
        "Lorg/jbox2d/pooling/TLBoundValues;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/ContactID$Features;": [
        "Lorg/jbox2d/collision/ContactID$Features;->set()V",
        "Lorg/jbox2d/collision/ContactID$Features;->isEqual()Z"
    ],
    "Lorg/jbox2d/collision/BufferedPair;": [
        "Lorg/jbox2d/collision/BufferedPair;->minor()Z",
        "Lorg/jbox2d/collision/BufferedPair;->compareTo()I",
        "Lorg/jbox2d/collision/BufferedPair;->equals()Z"
    ],
    "Lorg/jbox2d/collision/Pair;": [
        "Lorg/jbox2d/collision/Pair;->clearBuffered()V",
        "Lorg/jbox2d/collision/Pair;->isBuffered()Z",
        "Lorg/jbox2d/collision/Pair;->setRemoved()V",
        "Lorg/jbox2d/collision/Pair;->setBuffered()V",
        "Lorg/jbox2d/collision/Pair;->setFinal()V",
        "Lorg/jbox2d/collision/Pair;->isRemoved()Z",
        "Lorg/jbox2d/collision/Pair;->isFinal()Z",
        "Lorg/jbox2d/collision/Pair;->compareTo()I",
        "Lorg/jbox2d/collision/Pair;->clearRemoved()V"
    ],
    "Lorg/jbox2d/collision/MassData;": [
        "Lorg/jbox2d/collision/MassData;->clone()Lorg/jbox2d/collision/MassData;"
    ],
    "Lorg/jbox2d/pooling/TLXForm;": [
        "Lorg/jbox2d/pooling/TLXForm;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/TLVec2;": [
        "Lorg/jbox2d/pooling/TLVec2;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/shapes/Shape;": [
        "Lorg/jbox2d/collision/shapes/Shape;->createProxy()V",
        "Lorg/jbox2d/collision/shapes/Shape;->computeSubmergedArea()F",
        "Lorg/jbox2d/collision/shapes/Shape;->destructor()V",
        "Lorg/jbox2d/collision/shapes/Shape;->getBody()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/collision/shapes/Shape;->testSegment()Lorg/jbox2d/collision/SegmentCollide;",
        "Lorg/jbox2d/collision/shapes/Shape;->destroyProxy()V",
        "Lorg/jbox2d/collision/shapes/Shape;->destroy()V",
        "Lorg/jbox2d/collision/shapes/Shape;->getDensity()F",
        "Lorg/jbox2d/collision/shapes/Shape;->getNext()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/collision/shapes/Shape;->create()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/collision/shapes/Shape;->getFilterData()Lorg/jbox2d/collision/FilterData;",
        "Lorg/jbox2d/collision/shapes/Shape;->updateSweepRadius()V",
        "Lorg/jbox2d/collision/shapes/Shape;->getType()Lorg/jbox2d/collision/shapes/ShapeType;",
        "Lorg/jbox2d/collision/shapes/Shape;->refilterProxy()V",
        "Lorg/jbox2d/collision/shapes/Shape;->synchronize()Z",
        "Lorg/jbox2d/collision/shapes/Shape;->computeMass()V",
        "Lorg/jbox2d/collision/shapes/Shape;->computeAABB()V",
        "Lorg/jbox2d/collision/shapes/Shape;->computeSweptAABB()V",
        "Lorg/jbox2d/collision/shapes/Shape;->getSweepRadius()F",
        "Lorg/jbox2d/collision/shapes/Shape;->isSensor()Z"
    ],
    "Lorg/jbox2d/common/Sweep;": [
        "Lorg/jbox2d/common/Sweep;->getXForm()V",
        "Lorg/jbox2d/common/Sweep;->advance()V"
    ],
    "Lorg/jbox2d/pooling/SingletonPool;": [
        "Lorg/jbox2d/pooling/SingletonPool;->getCollideCircle()Lorg/jbox2d/collision/shapes/CollideCircle;",
        "Lorg/jbox2d/pooling/SingletonPool;->getCollidePoly()Lorg/jbox2d/collision/shapes/CollidePoly;",
        "Lorg/jbox2d/pooling/SingletonPool;->getDistance()Lorg/jbox2d/collision/Distance;"
    ],
    "Lorg/jbox2d/collision/Distance;": [
        "Lorg/jbox2d/collision/Distance;->DistancePC()F",
        "Lorg/jbox2d/collision/Distance;->distance()F",
        "Lorg/jbox2d/collision/Distance;->DistanceCC()F",
        "Lorg/jbox2d/collision/Distance;->DistancePolygonPoint()F",
        "Lorg/jbox2d/collision/Distance;->DistanceEdgeCircle()F",
        "Lorg/jbox2d/collision/Distance;->ProcessThree()I",
        "Lorg/jbox2d/collision/Distance;->DistanceCirclePoint()F",
        "Lorg/jbox2d/collision/Distance;->InPoints()Z",
        "Lorg/jbox2d/collision/Distance;->ProcessTwo()I",
        "Lorg/jbox2d/collision/Distance;->DistanceGeneric()F"
    ],
    "Lorg/jbox2d/collision/shapes/CircleShape;": [
        "Lorg/jbox2d/collision/shapes/CircleShape;->getMemberLocalPosition()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/CircleShape;->getBody()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/collision/shapes/CircleShape;->getRadius()F",
        "Lorg/jbox2d/collision/shapes/CircleShape;->getUserData()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/common/XForm;": [
        "Lorg/jbox2d/common/XForm;->mulTransToOut()V",
        "Lorg/jbox2d/common/XForm;->mul()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/XForm;->set()Lorg/jbox2d/common/XForm;",
        "Lorg/jbox2d/common/XForm;->setIdentity()V",
        "Lorg/jbox2d/common/XForm;->mulTrans()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/XForm;->mulToOut()V"
    ],
    "Lorg/jbox2d/collision/shapes/PointShape;": [
        "Lorg/jbox2d/collision/shapes/PointShape;->getMemberLocalPosition()Lorg/jbox2d/common/Vec2;"
    ],
    "Lorg/jbox2d/collision/shapes/EdgeShape;": [
        "Lorg/jbox2d/collision/shapes/EdgeShape;->setNextEdge()V",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getCorner2Vector()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getDirectionVector()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getCorner1Vector()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->createProxy()V",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->corner1IsConvex()Z",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->updateSweepRadius()V",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getNormalVector()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->corner2IsConvex()Z",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->setPrevEdge()V",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getLength()F",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getCoreVertex2()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getCoreVertex1()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getVertex1()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/EdgeShape;->getVertex2()Lorg/jbox2d/common/Vec2;"
    ],
    "Lorg/jbox2d/collision/SupportsGenericDistance;": [
        "Lorg/jbox2d/collision/SupportsGenericDistance;->support()V",
        "Lorg/jbox2d/collision/SupportsGenericDistance;->getFirstVertexToOut()V"
    ],
    "Lorg/jbox2d/collision/ContactID;": [
        "Lorg/jbox2d/collision/ContactID;->isEqual()Z",
        "Lorg/jbox2d/collision/ContactID;->set()V",
        "Lorg/jbox2d/collision/ContactID;->zero()V"
    ],
    "Ljava/lang/Enum;": [
        "Ljava/lang/Enum;->valueOf()Ljava/lang/Enum;"
    ],
    "[Lorg/jbox2d/collision/SegmentCollide;": [
        "[Lorg/jbox2d/collision/SegmentCollide;->clone()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/PairCallback;": [
        "Lorg/jbox2d/collision/PairCallback;->pairRemoved()V",
        "Lorg/jbox2d/collision/PairCallback;->pairAdded()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/common/Mat22;": [
        "Lorg/jbox2d/common/Mat22;->mulTransToOut()V",
        "Lorg/jbox2d/common/Mat22;->absLocal()V",
        "Lorg/jbox2d/common/Mat22;->createScaleTransform()V",
        "Lorg/jbox2d/common/Mat22;->invertToOut()V",
        "Lorg/jbox2d/common/Mat22;->solveToOut()V",
        "Lorg/jbox2d/common/Mat22;->invert()Lorg/jbox2d/common/Mat22;",
        "Lorg/jbox2d/common/Mat22;->set()Lorg/jbox2d/common/Mat22;",
        "Lorg/jbox2d/common/Mat22;->abs()Lorg/jbox2d/common/Mat22;",
        "Lorg/jbox2d/common/Mat22;->setIdentity()V",
        "Lorg/jbox2d/common/Mat22;->mulLocal()Lorg/jbox2d/common/Mat22;",
        "Lorg/jbox2d/common/Mat22;->invertLocal()Lorg/jbox2d/common/Mat22;",
        "Lorg/jbox2d/common/Mat22;->mulTrans()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Mat22;->mulToOut()V",
        "Lorg/jbox2d/common/Mat22;->set()V",
        "Lorg/jbox2d/common/Mat22;->mul()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Mat22;->addLocal()Lorg/jbox2d/common/Mat22;",
        "Lorg/jbox2d/common/Mat22;->solve()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/common/Mat22;->clone()Lorg/jbox2d/common/Mat22;"
    ],
    "Lorg/jbox2d/collision/OBB;": [
        "Lorg/jbox2d/collision/OBB;->clone()Lorg/jbox2d/collision/OBB;"
    ],
    "Lorg/jbox2d/collision/ManifoldPoint;": [
        "Lorg/jbox2d/collision/ManifoldPoint;->set()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->sqrt()D",
        "Ljava/lang/Math;->toDegrees()D",
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->max()F",
        "Ljava/lang/Math;->atan2()D",
        "Ljava/lang/Math;->round()I",
        "Ljava/lang/Math;->pow()D",
        "Ljava/lang/Math;->tan()D",
        "Ljava/lang/Math;->sin()D",
        "Ljava/lang/Math;->max()I",
        "Ljava/lang/Math;->acos()D",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->ceil()D",
        "Ljava/lang/Math;->floor()D",
        "Ljava/lang/Math;->abs()F",
        "Ljava/lang/Math;->min()F",
        "Ljava/lang/Math;->asin()D",
        "Ljava/lang/Math;->cos()D"
    ],
    "Lorg/jbox2d/collision/shapes/PolygonDef;": [
        "Lorg/jbox2d/collision/shapes/PolygonDef;->getVertexCount()I",
        "Lorg/jbox2d/collision/shapes/PolygonDef;->convexify()V",
        "Lorg/jbox2d/collision/shapes/PolygonDef;->setAsBox()V",
        "Lorg/jbox2d/collision/shapes/PolygonDef;->convexHull()I",
        "Lorg/jbox2d/collision/shapes/PolygonDef;->centrify()V",
        "Lorg/jbox2d/collision/shapes/PolygonDef;->addVertex()V"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->toArray()[Ljava/lang/Object;",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->add()Z"
    ],
    "Lorg/jbox2d/collision/shapes/PolygonShape;": [
        "Lorg/jbox2d/collision/shapes/PolygonShape;->computeCentroid()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->computeOBB()V",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->computeMass()V",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->getCentroid()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->getOBB()Lorg/jbox2d/collision/OBB;",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->getCoreVertices()[Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->getVertexCount()I",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->getVertices()[Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->getNormals()[Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/collision/shapes/PolygonShape;->computeAABB()V"
    ],
    "Lorg/jbox2d/pooling/TLMat22;": [
        "Lorg/jbox2d/pooling/TLMat22;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/TLMassData;": [
        "Lorg/jbox2d/pooling/TLMassData;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/TLAABB;": [
        "Lorg/jbox2d/pooling/TLAABB;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/dynamics/Body;": [
        "Lorg/jbox2d/dynamics/Body;->destroyShape()V",
        "Lorg/jbox2d/dynamics/Body;->getAngularVelocity()F",
        "Lorg/jbox2d/dynamics/Body;->getWorldDirection()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->setUserData()V",
        "Lorg/jbox2d/dynamics/Body;->isSleeping()Z",
        "Lorg/jbox2d/dynamics/Body;->getTouchingDynamicBodyIsland_impl()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->getJointList()Lorg/jbox2d/dynamics/joints/JointEdge;",
        "Lorg/jbox2d/dynamics/Body;->getWorldDirectionToOut()V",
        "Lorg/jbox2d/dynamics/Body;->getPosition()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getLocalPointToOut()V",
        "Lorg/jbox2d/dynamics/Body;->getConnectedDynamicBodyIsland_impl()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->getConnectedDynamicBodyIsland()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->getTouchingBodyIsland_impl()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->isBullet()Z",
        "Lorg/jbox2d/dynamics/Body;->applyTorque()V",
        "Lorg/jbox2d/dynamics/Body;->getConnectedBodies()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->getBodiesInContact()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->setXForm()Z",
        "Lorg/jbox2d/dynamics/Body;->getWorld()Lorg/jbox2d/dynamics/World;",
        "Lorg/jbox2d/dynamics/Body;->isStatic()Z",
        "Lorg/jbox2d/dynamics/Body;->isConnected()Z",
        "Lorg/jbox2d/dynamics/Body;->setLinearVelocity()V",
        "Lorg/jbox2d/dynamics/Body;->connectEdges()F",
        "Lorg/jbox2d/dynamics/Body;->wakeUp()V",
        "Lorg/jbox2d/dynamics/Body;->applyForce()V",
        "Lorg/jbox2d/dynamics/Body;->getLocalVector()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getLinearVelocityFromLocalPoint()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getNext()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/Body;->getLinearVelocityFromWorldPoint()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getConnectedBodyIsland_impl()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/Body;->getLocalVectorToOut()V",
        "Lorg/jbox2d/dynamics/Body;->getXForm()Lorg/jbox2d/common/XForm;",
        "Lorg/jbox2d/dynamics/Body;->getShapeList()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/dynamics/Body;->isFrozen()Z",
        "Lorg/jbox2d/dynamics/Body;->getInertia()F",
        "Lorg/jbox2d/dynamics/Body;->getContactList()Lorg/jbox2d/dynamics/contacts/ContactEdge;",
        "Lorg/jbox2d/dynamics/Body;->getWorldLocation()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getMass()F",
        "Lorg/jbox2d/dynamics/Body;->setMassFromShapes()V",
        "Lorg/jbox2d/dynamics/Body;->getWorldLocationToOut()V",
        "Lorg/jbox2d/dynamics/Body;->getMemberWorldCenter()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getUserData()Ljava/lang/Object;",
        "Lorg/jbox2d/dynamics/Body;->getMemberXForm()Lorg/jbox2d/common/XForm;",
        "Lorg/jbox2d/dynamics/Body;->isDynamic()Z",
        "Lorg/jbox2d/dynamics/Body;->getLocalPoint()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->getWorldVector()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->createShape()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/dynamics/Body;->getLinearVelocity()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->applyImpulse()V",
        "Lorg/jbox2d/dynamics/Body;->synchronizeTransform()V",
        "Lorg/jbox2d/dynamics/Body;->getAngle()F",
        "Lorg/jbox2d/dynamics/Body;->setBullet()V",
        "Lorg/jbox2d/dynamics/Body;->getLinearVelocityFromLocalPointToOut()V",
        "Lorg/jbox2d/dynamics/Body;->getMemberLocalCenter()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/Body;->advance()V",
        "Lorg/jbox2d/dynamics/Body;->synchronizeShapes()Z"
    ],
    "Lorg/jbox2d/dynamics/contacts/Contact;": [
        "Lorg/jbox2d/dynamics/contacts/Contact;->destroy()V",
        "Lorg/jbox2d/dynamics/contacts/Contact;->createContact()Lorg/jbox2d/dynamics/contacts/Contact;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->update()V",
        "Lorg/jbox2d/dynamics/contacts/Contact;->getManifoldCount()I",
        "Lorg/jbox2d/dynamics/contacts/Contact;->getShape2()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->isSolid()Z",
        "Lorg/jbox2d/dynamics/contacts/Contact;->getNext()Lorg/jbox2d/dynamics/contacts/Contact;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->addType()V",
        "Lorg/jbox2d/dynamics/contacts/Contact;->getManifolds()Ljava/util/List;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->getContactRegister()Lorg/jbox2d/dynamics/contacts/ContactRegister;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->getShape1()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;",
        "Lorg/jbox2d/dynamics/contacts/Contact;->evaluate()V"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->addAll()Z",
        "Ljava/util/Set;->contains()Z",
        "Ljava/util/Set;->size()I",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->add()Z",
        "Ljava/util/Set;->toArray()[Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/FilterData;": [
        "Lorg/jbox2d/collision/FilterData;->set()V"
    ],
    "Lorg/jbox2d/collision/shapes/CollidePoly;": [
        "Lorg/jbox2d/collision/shapes/CollidePoly;->collidePolygonAndPoint()V",
        "Lorg/jbox2d/collision/shapes/CollidePoly;->findIncidentEdge()V",
        "Lorg/jbox2d/collision/shapes/CollidePoly;->clipSegmentToLine()I",
        "Lorg/jbox2d/collision/shapes/CollidePoly;->edgeSeparation()F",
        "Lorg/jbox2d/collision/shapes/CollidePoly;->collidePolygons()V",
        "Lorg/jbox2d/collision/shapes/CollidePoly;->collidePolyAndEdge()V",
        "Lorg/jbox2d/collision/shapes/CollidePoly;->findMaxSeparation()Lorg/jbox2d/collision/shapes/MaxSeparation;"
    ],
    "[Lorg/jbox2d/collision/shapes/ShapeType;": [
        "[Lorg/jbox2d/collision/shapes/ShapeType;->clone()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/SingletonPool$Pool;": [
        "Lorg/jbox2d/pooling/SingletonPool$Pool;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/arrays/Vec2Array;": [
        "Lorg/jbox2d/pooling/arrays/Vec2Array;->get()[Ljava/lang/Object;",
        "Lorg/jbox2d/pooling/arrays/Vec2Array;->getInitializedArray()[Lorg/jbox2d/common/Vec2;"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;",
        "Ljava/lang/Boolean;->booleanValue()Z"
    ],
    "Lorg/jbox2d/pooling/arrays/BooleanArray;": [
        "Lorg/jbox2d/pooling/arrays/BooleanArray;->get()[Ljava/lang/Object;",
        "Lorg/jbox2d/pooling/arrays/BooleanArray;->getInitializedArray()[Ljava/lang/Boolean;"
    ],
    "Lorg/jbox2d/pooling/arrays/DynamicTLArray$TLHashMap;": [
        "Lorg/jbox2d/pooling/arrays/DynamicTLArray$TLHashMap;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;",
        "Ljava/util/HashMap;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/arrays/DynamicTLArray;": [
        "Lorg/jbox2d/pooling/arrays/DynamicTLArray;->getInitializedArray()[Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/stacks/ContactSolverStack;": [
        "Lorg/jbox2d/pooling/stacks/ContactSolverStack;->newObjectInstance()Lorg/jbox2d/dynamics/contacts/ContactSolver;",
        "Lorg/jbox2d/pooling/stacks/ContactSolverStack;->recycle()V",
        "Lorg/jbox2d/pooling/stacks/ContactSolverStack;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/stacks/IslandStack;": [
        "Lorg/jbox2d/pooling/stacks/IslandStack;->get()Ljava/lang/Object;",
        "Lorg/jbox2d/pooling/stacks/IslandStack;->recycle()V",
        "Lorg/jbox2d/pooling/stacks/IslandStack;->newObjectInstance()Lorg/jbox2d/dynamics/Island;"
    ],
    "Lorg/jbox2d/pooling/stacks/TimeStepStack;": [
        "Lorg/jbox2d/pooling/stacks/TimeStepStack;->recycle()V",
        "Lorg/jbox2d/pooling/stacks/TimeStepStack;->get()Ljava/lang/Object;",
        "Lorg/jbox2d/pooling/stacks/TimeStepStack;->newObjectInstance()Lorg/jbox2d/dynamics/TimeStep;"
    ],
    "Lorg/jbox2d/pooling/TLStack;": [
        "Lorg/jbox2d/pooling/TLStack;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Stack;": [
        "Ljava/util/Stack;->pop()Ljava/lang/Object;",
        "Ljava/util/Stack;->isEmpty()Z",
        "Ljava/util/Stack;->push()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/pooling/stacks/DynamicTLStack;": [
        "Lorg/jbox2d/pooling/stacks/DynamicTLStack;->newObjectInstance()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/dynamics/World;": [
        "Lorg/jbox2d/dynamics/World;->raycastSortKeyFunc()F",
        "Lorg/jbox2d/dynamics/World;->drawJoint()V",
        "Lorg/jbox2d/dynamics/World;->postStep()V",
        "Lorg/jbox2d/dynamics/World;->solveTOI()V",
        "Lorg/jbox2d/dynamics/World;->raycast()I",
        "Lorg/jbox2d/dynamics/World;->createBody()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/World;->raycastOne()Lorg/jbox2d/collision/shapes/Shape;",
        "Lorg/jbox2d/dynamics/World;->drawShape()V",
        "Lorg/jbox2d/dynamics/World;->getJointList()Lorg/jbox2d/dynamics/joints/Joint;",
        "Lorg/jbox2d/dynamics/World;->setDrawDebugData()V",
        "Lorg/jbox2d/dynamics/World;->solve()V",
        "Lorg/jbox2d/dynamics/World;->destroyBody()V",
        "Lorg/jbox2d/dynamics/World;->step()V",
        "Lorg/jbox2d/dynamics/World;->getBodyList()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/World;->createController()Lorg/jbox2d/dynamics/controllers/Controller;",
        "Lorg/jbox2d/dynamics/World;->getGroundBody()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/World;->destroyJoint()V",
        "Lorg/jbox2d/dynamics/World;->getGravity()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/World;->createJoint()Lorg/jbox2d/dynamics/joints/Joint;",
        "Lorg/jbox2d/dynamics/World;->drawDebugData()V",
        "Lorg/jbox2d/dynamics/World;->setContactListener()V"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->toString()Ljava/lang/String;",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->size()I"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->hasNext()Z",
        "Ljava/util/Iterator;->next()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/dynamics/Steppable;": [
        "Lorg/jbox2d/dynamics/Steppable;->step()V"
    ],
    "Lorg/jbox2d/dynamics/ContactFilter;": [
        "Lorg/jbox2d/dynamics/ContactFilter;->rayCollide()Z",
        "Lorg/jbox2d/dynamics/ContactFilter;->shouldCollide()Z"
    ],
    "Lorg/jbox2d/dynamics/controllers/ControllerDef;": [
        "Lorg/jbox2d/dynamics/controllers/ControllerDef;->create()Lorg/jbox2d/dynamics/controllers/Controller;"
    ],
    "Lorg/jbox2d/dynamics/joints/Joint;": [
        "Lorg/jbox2d/dynamics/joints/Joint;->getType()Lorg/jbox2d/dynamics/joints/JointType;",
        "Lorg/jbox2d/dynamics/joints/Joint;->getBody2()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/joints/Joint;->getBody1()Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/joints/Joint;->solvePositionConstraints()Z",
        "Lorg/jbox2d/dynamics/joints/Joint;->create()Lorg/jbox2d/dynamics/joints/Joint;",
        "Lorg/jbox2d/dynamics/joints/Joint;->solveVelocityConstraints()V",
        "Lorg/jbox2d/dynamics/joints/Joint;->getNext()Lorg/jbox2d/dynamics/joints/Joint;",
        "Lorg/jbox2d/dynamics/joints/Joint;->getAnchor1()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/joints/Joint;->destructor()V",
        "Lorg/jbox2d/dynamics/joints/Joint;->destroy()V",
        "Lorg/jbox2d/dynamics/joints/Joint;->getAnchor2()Lorg/jbox2d/common/Vec2;"
    ],
    "Lorg/jbox2d/dynamics/DestructionListener;": [
        "Lorg/jbox2d/dynamics/DestructionListener;->sayGoodbye()V"
    ],
    "Lorg/jbox2d/dynamics/controllers/Controller;": [
        "Lorg/jbox2d/dynamics/controllers/Controller;->getNext()Lorg/jbox2d/dynamics/controllers/Controller;",
        "Lorg/jbox2d/dynamics/controllers/Controller;->draw()V",
        "Lorg/jbox2d/dynamics/controllers/Controller;->removeBody()V",
        "Lorg/jbox2d/dynamics/controllers/Controller;->step()V"
    ],
    "Lorg/jbox2d/dynamics/DebugDraw;": [
        "Lorg/jbox2d/dynamics/DebugDraw;->drawSegment()V",
        "Lorg/jbox2d/dynamics/DebugDraw;->drawSolidPolygon()V",
        "Lorg/jbox2d/dynamics/DebugDraw;->drawSolidCircle()V",
        "Lorg/jbox2d/dynamics/DebugDraw;->drawPoint()V",
        "Lorg/jbox2d/dynamics/DebugDraw;->drawCircle()V",
        "Lorg/jbox2d/dynamics/DebugDraw;->drawXForm()V",
        "Lorg/jbox2d/dynamics/DebugDraw;->getFlags()I",
        "Lorg/jbox2d/dynamics/DebugDraw;->drawPolygon()V"
    ],
    "Lorg/jbox2d/dynamics/joints/PulleyJoint;": [
        "Lorg/jbox2d/dynamics/joints/PulleyJoint;->getGroundAnchor2()Lorg/jbox2d/common/Vec2;",
        "Lorg/jbox2d/dynamics/joints/PulleyJoint;->getGroundAnchor1()Lorg/jbox2d/common/Vec2;"
    ],
    "Lorg/jbox2d/dynamics/joints/ConstantVolumeJoint;": [
        "Lorg/jbox2d/dynamics/joints/ConstantVolumeJoint;->constrainEdges()Z",
        "Lorg/jbox2d/dynamics/joints/ConstantVolumeJoint;->getBodies()[Lorg/jbox2d/dynamics/Body;",
        "Lorg/jbox2d/dynamics/joints/ConstantVolumeJoint;->getArea()F"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->notifyAll()V",
        "Ljava/lang/Object;->equals()Z",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;"
    ],
    "Lorg/jbox2d/dynamics/Island;": [
        "Lorg/jbox2d/dynamics/Island;->solve()V",
        "Lorg/jbox2d/dynamics/Island;->clear()V",
        "Lorg/jbox2d/dynamics/Island;->add()V",
        "Lorg/jbox2d/dynamics/Island;->solveTOI()V",
        "Lorg/jbox2d/dynamics/Island;->report()V"
    ],
    "Lorg/jbox2d/dynamics/BoundaryListener;": [
        "Lorg/jbox2d/dynamics/BoundaryListener;->violation()V"
    ],
    "Lorg/jbox2d/collision/TOI;": [
        "Lorg/jbox2d/collision/TOI;->timeOfImpact()F"
    ],
    "Lorg/jbox2d/pooling/TLTimeStep;": [
        "Lorg/jbox2d/pooling/TLTimeStep;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/dynamics/ContactManager;": [
        "Lorg/jbox2d/dynamics/ContactManager;->destroy()V",
        "Lorg/jbox2d/dynamics/ContactManager;->collide()V"
    ],
    "Lorg/jbox2d/dynamics/BodyGroup;": [
        "Lorg/jbox2d/dynamics/BodyGroup;->getBodiesDeep()Ljava/util/Set;",
        "Lorg/jbox2d/dynamics/BodyGroup;->getWorld()Lorg/jbox2d/dynamics/World;"
    ],
    "Lorg/jbox2d/dynamics/ContactListener;": [
        "Lorg/jbox2d/dynamics/ContactListener;->persist()V",
        "Lorg/jbox2d/dynamics/ContactListener;->add()V",
        "Lorg/jbox2d/dynamics/ContactListener;->remove()V",
        "Lorg/jbox2d/dynamics/ContactListener;->result()V"
    ],
    "Lorg/jbox2d/dynamics/contacts/ContactSolver;": [
        "Lorg/jbox2d/dynamics/contacts/ContactSolver;->solvePositionConstraints()Z",
        "Lorg/jbox2d/dynamics/contacts/ContactSolver;->finalizeVelocityConstraints()V",
        "Lorg/jbox2d/dynamics/contacts/ContactSolver;->solveVelocityConstraints()V"
    ],
    "Lorg/jbox2d/pooling/TLContactPoint;": [
        "Lorg/jbox2d/pooling/TLContactPoint;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/shapes/EdgeChainDef;": [
        "Lorg/jbox2d/collision/shapes/EdgeChainDef;->getVertexCount()I",
        "Lorg/jbox2d/collision/shapes/EdgeChainDef;->setIsLoop()V",
        "Lorg/jbox2d/collision/shapes/EdgeChainDef;->addVertex()V",
        "Lorg/jbox2d/collision/shapes/EdgeChainDef;->isLoop()Z",
        "Lorg/jbox2d/collision/shapes/EdgeChainDef;->getVertices()Ljava/util/List;"
    ],
    "Lorg/jbox2d/dynamics/DefaultContactFilter;": [
        "Lorg/jbox2d/dynamics/DefaultContactFilter;->shouldCollide()Z"
    ],
    "[Lorg/jbox2d/dynamics/BoundaryResponse;": [
        "[Lorg/jbox2d/dynamics/BoundaryResponse;->clone()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/common/IViewportTransform;": [
        "Lorg/jbox2d/common/IViewportTransform;->setCamera()V",
        "Lorg/jbox2d/common/IViewportTransform;->getScreenToWorld()V",
        "Lorg/jbox2d/common/IViewportTransform;->getWorldToScreen()V"
    ],
    "Lorg/jbox2d/collision/Manifold;": [
        "Lorg/jbox2d/collision/Manifold;->set()Lorg/jbox2d/collision/Manifold;"
    ],
    "Lorg/jbox2d/dynamics/contacts/ContactConstraintPoint;": [
        "Lorg/jbox2d/dynamics/contacts/ContactConstraintPoint;->set()V"
    ],
    "Lorg/jbox2d/dynamics/contacts/PointAndCircleContact;": [
        "Lorg/jbox2d/dynamics/contacts/PointAndCircleContact;->clone()Lorg/jbox2d/dynamics/contacts/PointAndCircleContact;",
        "Lorg/jbox2d/dynamics/contacts/PointAndCircleContact;->destructor()V"
    ],
    "Lorg/jbox2d/pooling/TLManifold;": [
        "Lorg/jbox2d/pooling/TLManifold;->get()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/collision/shapes/CollideCircle;": [
        "Lorg/jbox2d/collision/shapes/CollideCircle;->collidePolygonAndCircle()V",
        "Lorg/jbox2d/collision/shapes/CollideCircle;->collideCircles()V",
        "Lorg/jbox2d/collision/shapes/CollideCircle;->collidePointAndCircle()V",
        "Lorg/jbox2d/collision/shapes/CollideCircle;->collideEdgeAndCircle()V"
    ],
    "Lorg/jbox2d/dynamics/contacts/NullContact;": [
        "Lorg/jbox2d/dynamics/contacts/NullContact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;"
    ],
    "Lorg/jbox2d/dynamics/contacts/EdgeAndCircleContact;": [
        "Lorg/jbox2d/dynamics/contacts/EdgeAndCircleContact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;",
        "Lorg/jbox2d/dynamics/contacts/EdgeAndCircleContact;->destructor()V"
    ],
    "Lorg/jbox2d/dynamics/contacts/PointAndPolyContact;": [
        "Lorg/jbox2d/dynamics/contacts/PointAndPolyContact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;"
    ],
    "Lorg/jbox2d/dynamics/contacts/ContactEdge;": [
        "Lorg/jbox2d/dynamics/contacts/ContactEdge;->set()V"
    ],
    "Lorg/jbox2d/dynamics/contacts/PolyAndCircleContact;": [
        "Lorg/jbox2d/dynamics/contacts/PolyAndCircleContact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;"
    ],
    "Lorg/jbox2d/dynamics/contacts/PolyContact;": [
        "Lorg/jbox2d/dynamics/contacts/PolyContact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;"
    ],
    "Lorg/jbox2d/dynamics/contacts/CircleContact;": [
        "Lorg/jbox2d/dynamics/contacts/CircleContact;->destructor()V",
        "Lorg/jbox2d/dynamics/contacts/CircleContact;->clone()Lorg/jbox2d/dynamics/contacts/CircleContact;"
    ],
    "Lorg/jbox2d/dynamics/contacts/PolyAndEdgeContact;": [
        "Lorg/jbox2d/dynamics/contacts/PolyAndEdgeContact;->destructor()V",
        "Lorg/jbox2d/dynamics/contacts/PolyAndEdgeContact;->clone()Lorg/jbox2d/dynamics/contacts/Contact;"
    ],
    "Lorg/jbox2d/dynamics/contacts/ContactCreateFcn;": [
        "Lorg/jbox2d/dynamics/contacts/ContactCreateFcn;->create()Lorg/jbox2d/dynamics/contacts/Contact;"
    ],
    "Lorg/jbox2d/dynamics/controllers/TensorDampingControllerDef;": [
        "Lorg/jbox2d/dynamics/controllers/TensorDampingControllerDef;->setAxisAligned()V",
        "Lorg/jbox2d/dynamics/controllers/TensorDampingControllerDef;->create()Lorg/jbox2d/dynamics/controllers/TensorDampingController;"
    ],
    "Lorg/jbox2d/dynamics/joints/Jacobian;": [
        "Lorg/jbox2d/dynamics/joints/Jacobian;->setZero()V",
        "Lorg/jbox2d/dynamics/joints/Jacobian;->set()V",
        "Lorg/jbox2d/dynamics/joints/Jacobian;->compute()F"
    ],
    "[Lorg/jbox2d/dynamics/joints/JointType;": [
        "[Lorg/jbox2d/dynamics/joints/JointType;->clone()Ljava/lang/Object;"
    ],
    "[Lorg/jbox2d/dynamics/joints/LimitState;": [
        "[Lorg/jbox2d/dynamics/joints/LimitState;->clone()Ljava/lang/Object;"
    ],
    "Lorg/jbox2d/dynamics/joints/RevoluteJoint;": [
        "Lorg/jbox2d/dynamics/joints/RevoluteJoint;->getJointAngle()F"
    ],
    "Lorg/jbox2d/dynamics/joints/PrismaticJoint;": [
        "Lorg/jbox2d/dynamics/joints/PrismaticJoint;->getJointTranslation()F"
    ],
    "Lorg/jbox2d/common/Vec3;": [
        "Lorg/jbox2d/common/Vec3;->setZero()V",
        "Lorg/jbox2d/common/Vec3;->clone()Lorg/jbox2d/common/Vec3;",
        "Lorg/jbox2d/common/Vec3;->dot()F",
        "Lorg/jbox2d/common/Vec3;->crossToOut()V"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->floatToIntBits()I",
        "Ljava/lang/Float;->intBitsToFloat()F",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;",
        "Ljava/lang/Float;->floatToRawIntBits()I"
    ],
    "Ljava/util/Locale;": [
        "Ljava/util/Locale;->getLanguage()Ljava/lang/String;",
        "Ljava/util/Locale;->getCountry()Ljava/lang/String;",
        "Ljava/util/Locale;->getDefault()Ljava/util/Locale;",
        "Ljava/util/Locale;->setDefault()V"
    ],
    "Lcom/hg/panzerpanic/Main;": [
        "Lcom/hg/panzerpanic/Main;->setContentView()V",
        "Lcom/hg/panzerpanic/Main;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Lcom/hg/panzerpanic/Main;->finish()V",
        "Lcom/hg/panzerpanic/Main;->loadOptions()V",
        "Lcom/hg/panzerpanic/Main;->getBaseContext()Landroid/content/Context;",
        "Lcom/hg/panzerpanic/Main;->runOnUiThread()V",
        "Lcom/hg/panzerpanic/Main;->setSingleton()V",
        "Lcom/hg/panzerpanic/Main;->getResources()Landroid/content/res/Resources;",
        "Lcom/hg/panzerpanic/Main;->buttonFeedback()V",
        "Lcom/hg/panzerpanic/Main;->getSystemService()Ljava/lang/Object;",
        "Lcom/hg/panzerpanic/Main;->getLayoutInflater()Landroid/view/LayoutInflater;",
        "Lcom/hg/panzerpanic/Main;->saveOptions()V",
        "Lcom/hg/panzerpanic/Main;->startGame()V",
        "Lcom/hg/panzerpanic/Main;->getAssets()Landroid/content/res/AssetManager;",
        "Lcom/hg/panzerpanic/Main;->setVolumeControlStream()V",
        "Lcom/hg/panzerpanic/Main;->findViewById()Landroid/view/View;",
        "Lcom/hg/panzerpanic/Main;->setLanguage()V"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/content/Context;->getSharedPreferences()Landroid/content/SharedPreferences;",
        "Landroid/content/Context;->getDir()Ljava/io/File;",
        "Landroid/content/Context;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/content/Context;->getCacheDir()Ljava/io/File;",
        "Landroid/content/Context;->getApplicationContext()Landroid/content/Context;",
        "Landroid/content/Context;->getResources()Landroid/content/res/Resources;",
        "Landroid/content/Context;->getPackageName()Ljava/lang/String;",
        "Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/content/Context;->checkCallingOrSelfPermission()I",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;",
        "Landroid/content/Context;->startActivity()V",
        "Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/content/Context;->getMainLooper()Landroid/os/Looper;"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->getDimension()F",
        "Landroid/content/res/Resources;->getDrawable()Landroid/graphics/drawable/Drawable;",
        "Landroid/content/res/Resources;->getInteger()I",
        "Landroid/content/res/Resources;->getString()Ljava/lang/String;",
        "Landroid/content/res/Resources;->updateConfiguration()V",
        "Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;",
        "Landroid/content/res/Resources;->getDimensionPixelOffset()I"
    ],
    "Landroid/view/LayoutInflater;": [
        "Landroid/view/LayoutInflater;->inflate()Landroid/view/View;"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->getTag()Ljava/lang/Object;",
        "Landroid/view/View;->setOnClickListener()V",
        "Landroid/view/View;->setBackgroundColor()V",
        "Landroid/view/View;->performHapticFeedback()Z",
        "Landroid/view/View;->setTag()V",
        "Landroid/view/View;->isClickable()Z",
        "Landroid/view/View;->getRootView()Landroid/view/View;",
        "Landroid/view/View;->getVisibility()I",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->startAnimation()V",
        "Landroid/view/View;->bringToFront()V",
        "Landroid/view/View;->setPressed()V",
        "Landroid/view/View;->findViewById()Landroid/view/View;",
        "Landroid/view/View;->setBackgroundDrawable()V",
        "Landroid/view/View;->setVisibility()V",
        "Landroid/view/View;->getId()I",
        "Landroid/view/View;->getParent()Landroid/view/ViewParent;"
    ],
    "Landroid/content/SharedPreferences;": [
        "Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences;->getLong()J",
        "Landroid/content/SharedPreferences;->getInt()I"
    ],
    "Lcom/hg/panzerpanic/util/Sound;": [
        "Lcom/hg/panzerpanic/util/Sound;->playSound()V",
        "Lcom/hg/panzerpanic/util/Sound;->stopSound()V",
        "Lcom/hg/panzerpanic/util/Sound;->loadSounds()V",
        "Lcom/hg/panzerpanic/util/Sound;->getSound()Lcom/hg/panzerpanic/util/Sound;",
        "Lcom/hg/panzerpanic/util/Sound;->pauseSounds()V"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->onDestroy()V"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setOnItemClickListener()V",
        "Landroid/widget/ListView;->setAdapter()V"
    ],
    "Landroid/app/KeyguardManager;": [
        "Landroid/app/KeyguardManager;->newKeyguardLock()Landroid/app/KeyguardManager$KeyguardLock;"
    ],
    "Landroid/os/Process;": [
        "Landroid/os/Process;->killProcess()V",
        "Landroid/os/Process;->myPid()I"
    ],
    "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;": [
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->draw()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->onTankDestroyed()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->isIngame()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->update()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->touchesBegan()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->leaveState()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->loadTextures()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->getGamemode()Lcom/hg/panzerpanic/game/gamemodes/Gamemode;",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->touchesMoved()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->onTankSpawned()V",
        "Lcom/hg/panzerpanic/game/gamemodes/Gamemode;->touchesEnded()V"
    ],
    "Landroid/app/KeyguardManager$KeyguardLock;": [
        "Landroid/app/KeyguardManager$KeyguardLock;->disableKeyguard()V",
        "Landroid/app/KeyguardManager$KeyguardLock;->reenableKeyguard()V"
    ],
    "Lcom/hg/panzerpanic/gfx/GLSurface;": [
        "Lcom/hg/panzerpanic/gfx/GLSurface;->onResume()V",
        "Lcom/hg/panzerpanic/gfx/GLSurface;->setId()V",
        "Lcom/hg/panzerpanic/gfx/GLSurface;->onPause()V",
        "Lcom/hg/panzerpanic/gfx/GLSurface;->setRenderer()V",
        "Lcom/hg/panzerpanic/gfx/GLSurface;->setKeepScreenOn()V",
        "Lcom/hg/panzerpanic/gfx/GLSurface;->setEGLConfigChooser()V",
        "Lcom/hg/panzerpanic/gfx/GLSurface;->getHeight()I"
    ],
    "Lcom/hg/panzerpanic/game/GameThread;": [
        "Lcom/hg/panzerpanic/game/GameThread;->touchDragged()V",
        "Lcom/hg/panzerpanic/game/GameThread;->clear()V",
        "Lcom/hg/panzerpanic/game/GameThread;->setGamemode()V",
        "Lcom/hg/panzerpanic/game/GameThread;->destroySingletons()V",
        "Lcom/hg/panzerpanic/game/GameThread;->onSystemResume()V",
        "Lcom/hg/panzerpanic/game/GameThread;->start()V",
        "Lcom/hg/panzerpanic/game/GameThread;->onPaint()V",
        "Lcom/hg/panzerpanic/game/GameThread;->touchPressed()V",
        "Lcom/hg/panzerpanic/game/GameThread;->onSystemPause()V",
        "Lcom/hg/panzerpanic/game/GameThread;->saveHighscore()Z",
        "Lcom/hg/panzerpanic/game/GameThread;->touchReleased()V",
        "Lcom/hg/panzerpanic/game/GameThread;->create()Lcom/hg/panzerpanic/game/GameThread;"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->printStackTrace()V",
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;"
    ],
    "Landroid/content/SharedPreferences$Editor;": [
        "Landroid/content/SharedPreferences$Editor;->putLong()Landroid/content/SharedPreferences$Editor;",
        "Landroid/content/SharedPreferences$Editor;->commit()Z",
        "Landroid/content/SharedPreferences$Editor;->putInt()Landroid/content/SharedPreferences$Editor;"
    ],
    "Lcom/admob/android/ads/AdManager;": [
        "Lcom/admob/android/ads/AdManager;->getPublisherId()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->clientError()V",
        "Lcom/admob/android/ads/AdManager;->setBirthday()V",
        "Lcom/admob/android/ads/AdManager;->getUserId()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->getTestAction()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->setPublisherId()V",
        "Lcom/admob/android/ads/AdManager;->getApplicationVersion()I",
        "Lcom/admob/android/ads/AdManager;->a()Z",
        "Lcom/admob/android/ads/AdManager;->getOrientation()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->a()V",
        "Lcom/admob/android/ads/AdManager;->getScreenWidth()I",
        "Lcom/admob/android/ads/AdManager;->getPostalCode()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->isTestDevice()Z",
        "Lcom/admob/android/ads/AdManager;->getBirthday()Ljava/util/GregorianCalendar;",
        "Lcom/admob/android/ads/AdManager;->getApplicationPackageName()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->a()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdManager;->getCoordinates()Landroid/location/Location;"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->close()V",
        "Ljava/io/DataInputStream;->readLine()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->available()I",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->read()I"
    ],
    "Lcom/admob/android/ads/AdView;": [
        "Lcom/admob/android/ads/AdView;->getChildCount()I",
        "Lcom/admob/android/ads/AdView;->setGoneWithoutAd()V",
        "Lcom/admob/android/ads/AdView;->setSecondaryTextColor()V",
        "Lcom/admob/android/ads/AdView;->getSecondaryTextColor()I",
        "Lcom/admob/android/ads/AdView;->setLongClickable()V",
        "Lcom/admob/android/ads/AdView;->a()Ljava/lang/String;",
        "Lcom/admob/android/ads/AdView;->a()V",
        "Lcom/admob/android/ads/AdView;->performClick()Z",
        "Lcom/admob/android/ads/AdView;->setAdListener()V",
        "Lcom/admob/android/ads/AdView;->getMeasuredWidth()I",
        "Lcom/admob/android/ads/AdView;->getContext()Landroid/content/Context;",
        "Lcom/admob/android/ads/AdView;->setPrimaryTextColor()V",
        "Lcom/admob/android/ads/AdView;->getMeasuredHeight()I",
        "Lcom/admob/android/ads/AdView;->getBackgroundColor()I",
        "Lcom/admob/android/ads/AdView;->setMeasuredDimension()V",
        "Lcom/admob/android/ads/AdView;->setKeywords()V",
        "Lcom/admob/android/ads/AdView;->setClickable()V",
        "Lcom/admob/android/ads/AdView;->getHeight()I",
        "Lcom/admob/android/ads/AdView;->setGravity()V",
        "Lcom/admob/android/ads/AdView;->addView()V",
        "Lcom/admob/android/ads/AdView;->getWidth()I",
        "Lcom/admob/android/ads/AdView;->setVisibility()V",
        "Lcom/admob/android/ads/AdView;->setRequestInterval()V",
        "Lcom/admob/android/ads/AdView;->getVisibility()I",
        "Lcom/admob/android/ads/AdView;->getPrimaryTextColor()I",
        "Lcom/admob/android/ads/AdView;->invalidate()V",
        "Lcom/admob/android/ads/AdView;->getChildAt()Landroid/view/View;",
        "Lcom/admob/android/ads/AdView;->a()Lcom/admob/android/ads/d$a;",
        "Lcom/admob/android/ads/AdView;->startAnimation()V",
        "Lcom/admob/android/ads/AdView;->a()Z",
        "Lcom/admob/android/ads/AdView;->setDescendantFocusability()V",
        "Lcom/admob/android/ads/AdView;->setBackgroundColor()V",
        "Lcom/admob/android/ads/AdView;->setTextColor()V"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->format()Ljava/lang/String;",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->substring()Ljava/lang/String;",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->toString()Ljava/lang/String;",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->hashCode()I",
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->equalsIgnoreCase()Z",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->endsWith()Z"
    ],
    "Lcom/admob/android/ads/SimpleAdListener;": [
        "Lcom/admob/android/ads/SimpleAdListener;->onReceiveAd()V",
        "Lcom/admob/android/ads/SimpleAdListener;->onReceiveRefreshedAd()V",
        "Lcom/admob/android/ads/SimpleAdListener;->onFailedToReceiveRefreshedAd()V",
        "Lcom/admob/android/ads/SimpleAdListener;->onFailedToReceiveAd()V"
    ],
    "Ljava/util/concurrent/locks/Lock;": [
        "Ljava/util/concurrent/locks/Lock;->lock()V",
        "Ljava/util/concurrent/locks/Lock;->unlock()V",
        "Ljava/util/concurrent/locks/Lock;->newCondition()Ljava/util/concurrent/locks/Condition;"
    ],
    "Ljava/util/concurrent/locks/Condition;": [
        "Ljava/util/concurrent/locks/Condition;->await()V",
        "Ljava/util/concurrent/locks/Condition;->signal()V"
    ],
    "Lcom/hg/panzerpanic/game/RenderThread;": [
        "Lcom/hg/panzerpanic/game/RenderThread;->clear()V",
        "Lcom/hg/panzerpanic/game/RenderThread;->drawMsPF()V",
        "Lcom/hg/panzerpanic/game/RenderThread;->setSingleton()V",
        "Lcom/hg/panzerpanic/game/RenderThread;->getGL()Ljavax/microedition/khronos/opengles/GL10;"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->getFontSpacing()F",
        "Landroid/graphics/Paint;->descent()F",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->setStrokeWidth()V",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->setARGB()V",
        "Landroid/graphics/Paint;->measureText()F",
        "Landroid/graphics/Paint;->setAntiAlias()V",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->ascent()F"
    ],
    "Ljavax/microedition/khronos/egl/EGL10;": [
        "Ljavax/microedition/khronos/egl/EGL10;->eglChooseConfig()Z"
    ],
    "Lcom/hg/panzerpanic/game/FrameSync;": [
        "Lcom/hg/panzerpanic/game/FrameSync;->queryFrame()V",
        "Lcom/hg/panzerpanic/game/FrameSync;->putFrame()V",
        "Lcom/hg/panzerpanic/game/FrameSync;->getFrame()V"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->isLoggable()Z",
        "Landroid/util/Log;->a()I"
    ],
    "Ljavax/microedition/khronos/opengles/GL10;": [
        "Ljavax/microedition/khronos/opengles/GL10;->glTexParameterf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glEnable()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glCompressedTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClearColor()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glRotatef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClientActiveTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvx()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glMatrixMode()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPopMatrix()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGetError()I",
        "Ljavax/microedition/khronos/opengles/GL10;->glDisableClientState()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDeleteTextures()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDrawArrays()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glGenTextures()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glBlendFunc()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glPushMatrix()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glClear()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexEnvf()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDrawElements()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexImage2D()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColor4f()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glDisable()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glHint()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glScalef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTexCoordPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glShadeModel()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glEnableClientState()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glTranslatef()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glBindTexture()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glLoadIdentity()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glVertexPointer()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glOrthof()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glColor4x()V",
        "Ljavax/microedition/khronos/opengles/GL10;->glActiveTexture()V"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->writeInt()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B",
        "Ljava/io/ByteArrayOutputStream;->write()V"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->close()V",
        "Ljava/io/FileOutputStream;->write()V"
    ],
    "Lcom/hg/panzerpanic/game/powerups/Powerup;": [
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->onDraw()I",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->getLineIcon()Lcom/hg/panzerpanic/gfx/util/Texture2D;",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->registerType()V",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->getType()I",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->getBackgroundIcon()Lcom/hg/panzerpanic/gfx/util/Texture2D;",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->makeAvailable()V",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->onCreate()V",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->createPowerup()Lcom/hg/panzerpanic/game/powerups/Powerup;",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->onUpdate()V",
        "Lcom/hg/panzerpanic/game/powerups/Powerup;->onDestroy()V"
    ],
    "Lcom/hg/panzerpanic/gfx/util/TextureManager;": [
        "Lcom/hg/panzerpanic/gfx/util/TextureManager;->removeTexture()V",
        "Lcom/hg/panzerpanic/gfx/util/TextureManager;->getTexture()Lcom/hg/panzerpanic/gfx/util/Texture2D;",
        "Lcom/hg/panzerpanic/gfx/util/TextureManager;->rebindTextures()V",
        "Lcom/hg/panzerpanic/gfx/util/TextureManager;->reloadTextures()V",
        "Lcom/hg/panzerpanic/gfx/util/TextureManager;->getTextures()[Lcom/hg/panzerpanic/gfx/util/Texture2D;",
        "Lcom/hg/panzerpanic/gfx/util/TextureManager;->removeAllTextures()V"
    ],
    "Lcom/hg/panzerpanic/gfx/util/Texture2D;": [
        "Lcom/hg/panzerpanic/gfx/util/Texture2D;->draw()V",
        "Lcom/hg/panzerpanic/gfx/util/Texture2D;->setAntiAliasTexParameters()V",
        "Lcom/hg/panzerpanic/gfx/util/Texture2D;->doDraw()V",
        "Lcom/hg/panzerpanic/gfx/util/Texture2D;->generateHardwareBuffers()V",
        "Lcom/hg/panzerpanic/gfx/util/Texture2D;->loadTexture()Lcom/hg/panzerpanic/gfx/util/Texture2D;",
        "Lcom/hg/panzerpanic/gfx/util/Texture2D;->setTexParameters()V"
    ],
    "Lcom/hg/panzerpanic/util/KeyHandler;": [
        "Lcom/hg/panzerpanic/util/KeyHandler;->onTouchMove()V",
        "Lcom/hg/panzerpanic/util/KeyHandler;->onRun()V",
        "Lcom/hg/panzerpanic/util/KeyHandler;->onTouchStart()V",
        "Lcom/hg/panzerpanic/util/KeyHandler;->onTouchCanceled()V",
        "Lcom/hg/panzerpanic/util/KeyHandler;->onTouchReleased()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->start()V",
        "Ljava/lang/Thread;->sleep()V"
    ],
    "Lcom/hg/panzerpanic/game/object/Projectile;": [
        "Lcom/hg/panzerpanic/game/object/Projectile;->applyTransformWithScale()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->isVisible()Z",
        "Lcom/hg/panzerpanic/game/object/Projectile;->revertRenderPipeline()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->explode()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->setSize()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->configRenderPipeline()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->setPosition()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->update()V",
        "Lcom/hg/panzerpanic/game/object/Projectile;->drawBullet()V"
    ],
    "Lcom/hg/panzerpanic/game/object/Battlefield;": [
        "Lcom/hg/panzerpanic/game/object/Battlefield;->draw()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->explosion()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->clear()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->now()F",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->setSingleton()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->getBattlefield()Lcom/hg/panzerpanic/game/object/Battlefield;",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->drawBlotchCanvas()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->touchesEnded()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->spawnWave()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->touchesBegan()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->touchesMoved()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->removeTank()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->removeBox()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->world()Lorg/jbox2d/dynamics/World;",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->spawnTank()Lcom/hg/panzerpanic/game/object/Tank;",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->update()V",
        "Lcom/hg/panzerpanic/game/object/Battlefield;->reset()V"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->elementAt()Ljava/lang/Object;",
        "Ljava/util/Vector;->removeElementAt()V",
        "Ljava/util/Vector;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Vector;->add()Z",
        "Ljava/util/Vector;->get()Ljava/lang/Object;",
        "Ljava/util/Vector;->addElement()V",
        "Ljava/util/Vector;->clear()V",
        "Ljava/util/Vector;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Vector;->remove()Z",
        "Ljava/util/Vector;->removeElement()Z",
        "Ljava/util/Vector;->removeAllElements()V",
        "Ljava/util/Vector;->size()I",
        "Ljava/util/Vector;->toArray()[Ljava/lang/Object;"
    ],
    "Lcom/hg/panzerpanic/game/object/classes/Physical;": [
        "Lcom/hg/panzerpanic/game/object/classes/Physical;->indicatorVisible()Z",
        "Lcom/hg/panzerpanic/game/object/classes/Physical;->update()V",
        "Lcom/hg/panzerpanic/game/object/classes/Physical;->setAngle()V"
    ],
    "Ljava/nio/ByteBuffer;": [
        "Ljava/nio/ByteBuffer;->order()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->asFloatBuffer()Ljava/nio/FloatBuffer;",
        "Ljava/nio/ByteBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/ByteBuffer;->allocateDirect()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->put()Ljava/nio/ByteBuffer;",
        "Ljava/nio/ByteBuffer;->asCharBuffer()Ljava/nio/CharBuffer;",
        "Ljava/nio/ByteBuffer;->capacity()I"
    ],
    "Ljava/nio/ByteOrder;": [
        "Ljava/nio/ByteOrder;->nativeOrder()Ljava/nio/ByteOrder;"
    ],
    "Ljava/nio/FloatBuffer;": [
        "Ljava/nio/FloatBuffer;->put()Ljava/nio/FloatBuffer;",
        "Ljava/nio/FloatBuffer;->capacity()I",
        "Ljava/nio/FloatBuffer;->position()Ljava/nio/Buffer;"
    ],
    "Lcom/hg/panzerpanic/game/object/Tank;": [
        "Lcom/hg/panzerpanic/game/object/Tank;->setID()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->canFire()Z",
        "Lcom/hg/panzerpanic/game/object/Tank;->configRenderPipeline()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->getWidth()F",
        "Lcom/hg/panzerpanic/game/object/Tank;->drawPainted()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->setSize()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->setPosition()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->drawTurret()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->setAngle()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->pick()Z",
        "Lcom/hg/panzerpanic/game/object/Tank;->drawTracks()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->drawVignette()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->update()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->revertRenderPipeline()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->getSpeed()F",
        "Lcom/hg/panzerpanic/game/object/Tank;->updateThreat()I",
        "Lcom/hg/panzerpanic/game/object/Tank;->think()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->applyTransform()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->isVisible()Z",
        "Lcom/hg/panzerpanic/game/object/Tank;->delete()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->getHeight()F",
        "Lcom/hg/panzerpanic/game/object/Tank;->setTurbo()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->drawChassis()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->explode()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->repair()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->drawBody()V",
        "Lcom/hg/panzerpanic/game/object/Tank;->fire()V"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextInt()I"
    ],
    "Lcom/hg/panzerpanic/game/object/Army;": [
        "Lcom/hg/panzerpanic/game/object/Army;->update()V",
        "Lcom/hg/panzerpanic/game/object/Army;->createTank()V",
        "Lcom/hg/panzerpanic/game/object/Army;->createTanks()V",
        "Lcom/hg/panzerpanic/game/object/Army;->moveHUDPosition()V",
        "Lcom/hg/panzerpanic/game/object/Army;->updateHUDPosition()Z",
        "Lcom/hg/panzerpanic/game/object/Army;->drawPowerups()V",
        "Lcom/hg/panzerpanic/game/object/Army;->fillInk()V",
        "Lcom/hg/panzerpanic/game/object/Army;->drawHud()V",
        "Lcom/hg/panzerpanic/game/object/Army;->drawInkCartridgeContents()V",
        "Lcom/hg/panzerpanic/game/object/Army;->removePowerup()V",
        "Lcom/hg/panzerpanic/game/object/Army;->addPowerup()V",
        "Lcom/hg/panzerpanic/game/object/Army;->deleteTanks()V",
        "Lcom/hg/panzerpanic/game/object/Army;->dontShowHUDPosition()V"
    ],
    "Lcom/hg/panzerpanic/game/object/Blotch;": [
        "Lcom/hg/panzerpanic/game/object/Blotch;->setSize()V",
        "Lcom/hg/panzerpanic/game/object/Blotch;->isDry()Z",
        "Lcom/hg/panzerpanic/game/object/Blotch;->setScale()V",
        "Lcom/hg/panzerpanic/game/object/Blotch;->draw()V",
        "Lcom/hg/panzerpanic/game/object/Blotch;->configRenderPipeline()V",
        "Lcom/hg/panzerpanic/game/object/Blotch;->applyTransform()V",
        "Lcom/hg/panzerpanic/game/object/Blotch;->applyTransformWithScale()V",
        "Lcom/hg/panzerpanic/game/object/Blotch;->revertRenderPipeline()V"
    ],
    "Lcom/hg/panzerpanic/game/object/Debris;": [
        "Lcom/hg/panzerpanic/game/object/Debris;->applyTransformWithOffset()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->setPosition()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->_clone()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->applyTransform()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->update()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->drawPaper()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->setSize()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->drawVignette()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->delete()V",
        "Lcom/hg/panzerpanic/game/object/Debris;->isVisible()Z",
        "Lcom/hg/panzerpanic/game/object/Debris;->copy()Lcom/hg/panzerpanic/game/object/Debris;",
        "Lcom/hg/panzerpanic/game/object/Debris;->setAngle()V"
    ],
    "Lcom/hg/panzerpanic/game/object/PowerupBox;": [
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->applyTransformWithOffset()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->explode()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->applyTransform()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->draw()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->update()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->drawVignette()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->setSize()V",
        "Lcom/hg/panzerpanic/game/object/PowerupBox;->delete()V"
    ],
    "Lcom/hg/panzerpanic/game/object/Smoke;": [
        "Lcom/hg/panzerpanic/game/object/Smoke;->setSize()V",
        "Lcom/hg/panzerpanic/game/object/Smoke;->isVisible()Z",
        "Lcom/hg/panzerpanic/game/object/Smoke;->draw()V",
        "Lcom/hg/panzerpanic/game/object/Smoke;->applyTransform()V",
        "Lcom/hg/panzerpanic/game/object/Smoke;->update()V"
    ],
    "Lcom/hg/panzerpanic/util/Util;": [
        "Lcom/hg/panzerpanic/util/Util;->getVecAngle()F",
        "Lcom/hg/panzerpanic/util/Util;->lerp()F"
    ],
    "Lorg/jbox2d/dynamics/controllers/TensorDampingController;": [
        "Lorg/jbox2d/dynamics/controllers/TensorDampingController;->addBody()V"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->keySet()Ljava/util/Set;",
        "Ljava/util/Hashtable;->put()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->remove()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->get()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->size()I",
        "Ljava/util/Hashtable;->clear()V"
    ],
    "Ljavax/xml/parsers/SAXParserFactory;": [
        "Ljavax/xml/parsers/SAXParserFactory;->newSAXParser()Ljavax/xml/parsers/SAXParser;",
        "Ljavax/xml/parsers/SAXParserFactory;->newInstance()Ljavax/xml/parsers/SAXParserFactory;"
    ],
    "Ljavax/xml/parsers/SAXParser;": [
        "Ljavax/xml/parsers/SAXParser;->parse()V"
    ],
    "Lorg/xml/sax/Attributes;": [
        "Lorg/xml/sax/Attributes;->getValue()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->setAccessible()V"
    ],
    "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;": [
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->onInitGamemode()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->enterState()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->drawIndicator()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->movePauseButton()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->drawPlayAgainDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->onInitRound()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->onSwitchArmy()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->movePlayAgainDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->drawScoreDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->close()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->loadTextures()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->moveScoreDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->centerScoreDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->drawPauseButton()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->updatePauseButton()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->updateScoreDisplay()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->updatePopupPosition()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->onPlayerVerified()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->onCloseGame()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->updatePlayAgainDisplay()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->drawPopupBackground()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->selectNextTank()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeVersus;->leaveState()V"
    ],
    "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;": [
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->drawPopupBackground()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->loadTextures()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->close()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->updateScoreDisplay()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->drawPauseButton()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->selectNextTank()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->leaveState()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->moveScoreDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->drawIndicator()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->drawPlayAgainDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->enterState()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->checkTankFocus()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->drawScoreDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->onInitRound()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->onInitGamemode()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->movePauseButton()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->updatePopupPosition()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->movePlayAgainDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->updatePlayAgainDisplay()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->centerScoreDisplay()V",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->updatePauseButton()Z",
        "Lcom/hg/panzerpanic/game/gamemodes/GamemodeArcade;->onCloseGame()V"
    ],
    "Landroid/view/animation/DecelerateInterpolator;": [
        "Landroid/view/animation/DecelerateInterpolator;->getInterpolation()F"
    ],
    "Landroid/view/animation/AccelerateInterpolator;": [
        "Landroid/view/animation/AccelerateInterpolator;->getInterpolation()F"
    ],
    "Landroid/view/MotionEvent;": [
        "Landroid/view/MotionEvent;->getEventTime()J",
        "Landroid/view/MotionEvent;->getX()F",
        "Landroid/view/MotionEvent;->getAction()I",
        "Landroid/view/MotionEvent;->getY()F"
    ],
    "Ljava/nio/IntBuffer;": [
        "Ljava/nio/IntBuffer;->put()Ljava/nio/IntBuffer;",
        "Ljava/nio/IntBuffer;->position()Ljava/nio/Buffer;",
        "Ljava/nio/IntBuffer;->allocate()Ljava/nio/IntBuffer;"
    ],
    "Lcom/hg/panzerpanic/gfx/util/LabelMaker;": [
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->endAdding()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->shutdown()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->endDrawing()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->beginDrawing()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->draw()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->checkState()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->getWidth()F",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->beginAdding()V",
        "Lcom/hg/panzerpanic/gfx/util/LabelMaker;->add()I"
    ],
    "Lcom/hg/panzerpanic/gfx/util/NumericSprite;": [
        "Lcom/hg/panzerpanic/gfx/util/NumericSprite;->format()Ljava/lang/String;",
        "Lcom/hg/panzerpanic/gfx/util/NumericSprite;->roundUpPower2()I"
    ],
    "Lcom/hg/panzerpanic/gfx/util/PVRTexture;": [
        "Lcom/hg/panzerpanic/gfx/util/PVRTexture;->createGLTexture()V",
        "Lcom/hg/panzerpanic/gfx/util/PVRTexture;->loadFromResource()Lcom/hg/panzerpanic/gfx/util/PVRTexture;",
        "Lcom/hg/panzerpanic/gfx/util/PVRTexture;->getName()I",
        "Lcom/hg/panzerpanic/gfx/util/PVRTexture;->unpackPVRData()V"
    ],
    "Ljavax/microedition/khronos/opengles/GL11;": [
        "Ljavax/microedition/khronos/opengles/GL11;->glGenBuffers()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBindBuffer()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glTexParameteriv()V",
        "Ljavax/microedition/khronos/opengles/GL11;->glBufferData()V"
    ],
    "Landroid/graphics/drawable/Drawable;": [
        "Landroid/graphics/drawable/Drawable;->getMinimumWidth()I",
        "Landroid/graphics/drawable/Drawable;->draw()V",
        "Landroid/graphics/drawable/Drawable;->getMinimumHeight()I",
        "Landroid/graphics/drawable/Drawable;->getPadding()Z",
        "Landroid/graphics/drawable/Drawable;->setAlpha()V",
        "Landroid/graphics/drawable/Drawable;->setBounds()V"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->clipPath()Z",
        "Landroid/graphics/Canvas;->setDrawFilter()V",
        "Landroid/graphics/Canvas;->drawText()V",
        "Landroid/graphics/Canvas;->clipRect()Z",
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->drawPath()V",
        "Landroid/graphics/Canvas;->drawRect()V"
    ],
    "Lcom/hg/panzerpanic/gfx/util/Grid;": [
        "Lcom/hg/panzerpanic/gfx/util/Grid;->set()V"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->recycle()V",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;",
        "Landroid/graphics/Bitmap;->eraseColor()V",
        "Landroid/graphics/Bitmap;->getHeight()I"
    ],
    "Ljavax/microedition/khronos/opengles/GL11Ext;": [
        "Ljavax/microedition/khronos/opengles/GL11Ext;->glDrawTexiOES()V"
    ],
    "Landroid/opengl/GLUtils;": [
        "Landroid/opengl/GLUtils;->texImage2D()V"
    ],
    "Ljava/nio/CharBuffer;": [
        "Ljava/nio/CharBuffer;->put()Ljava/nio/CharBuffer;"
    ],
    "Lcom/hg/panzerpanic/gfx/util/PVRTexHeader;": [
        "Lcom/hg/panzerpanic/gfx/util/PVRTexHeader;->swapInt()I"
    ],
    "Landroid/widget/RelativeLayout;": [
        "Landroid/widget/RelativeLayout;->onDetachedFromWindow()V",
        "Landroid/widget/RelativeLayout;->setVisibility()V",
        "Landroid/widget/RelativeLayout;->setBackgroundColor()V",
        "Landroid/widget/RelativeLayout;->addView()V",
        "Landroid/widget/RelativeLayout;->onDraw()V",
        "Landroid/widget/RelativeLayout;->onKeyUp()Z",
        "Landroid/widget/RelativeLayout;->onAttachedToWindow()V",
        "Landroid/widget/RelativeLayout;->setGravity()V",
        "Landroid/widget/RelativeLayout;->setPressed()V",
        "Landroid/widget/RelativeLayout;->onTrackballEvent()Z",
        "Landroid/widget/RelativeLayout;->setEnabled()V",
        "Landroid/widget/RelativeLayout;->onKeyDown()Z",
        "Landroid/widget/RelativeLayout;->onMeasure()V",
        "Landroid/widget/RelativeLayout;->getVisibility()I"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->create()Landroid/media/MediaPlayer;",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->isPlaying()Z"
    ],
    "Lcom/hg/panzerpanic/views/MainMenuView;": [
        "Lcom/hg/panzerpanic/views/MainMenuView;->getChildCount()I",
        "Lcom/hg/panzerpanic/views/MainMenuView;->findViewById()Landroid/view/View;",
        "Lcom/hg/panzerpanic/views/MainMenuView;->getChildAt()Landroid/view/View;"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setImageResource()V",
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->setScaleType()V"
    ],
    "Landroid/widget/ImageButton;": [
        "Landroid/widget/ImageButton;->setImageResource()V"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;",
        "Landroid/app/AlertDialog$Builder;->setCancelable()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;"
    ],
    "Lcom/hg/panzerpanic/views/AskSoundView;": [
        "Lcom/hg/panzerpanic/views/AskSoundView;->getChildCount()I",
        "Lcom/hg/panzerpanic/views/AskSoundView;->getChildAt()Landroid/view/View;"
    ],
    "Lcom/hg/panzerpanic/views/SplashView;": [
        "Lcom/hg/panzerpanic/views/SplashView;->onCreate()V"
    ],
    "Lcom/hg/panzerpanic/views/SplashView$Loader;": [
        "Lcom/hg/panzerpanic/views/SplashView$Loader;->start()V"
    ],
    "Lcom/hg/panzerpanic/views/HelpMenuView;": [
        "Lcom/hg/panzerpanic/views/HelpMenuView;->getChildAt()Landroid/view/View;",
        "Lcom/hg/panzerpanic/views/HelpMenuView;->onClick()V",
        "Lcom/hg/panzerpanic/views/HelpMenuView;->getChildCount()I"
    ],
    "Lcom/hg/teamworkA14/qigyjl/t;": [
        "Lcom/hg/teamworkA14/qigyjl/t;->a()Z"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->mkdirs()Z",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->mkdir()Z",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->listFiles()[Ljava/io/File;",
        "Ljava/io/File;->isFile()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->toString()Ljava/lang/String;"
    ],
    "Lcom/hg/teamworkA14/qigyjl/ok;": [
        "Lcom/hg/teamworkA14/qigyjl/ok;->a()Ljava/lang/String;",
        "Lcom/hg/teamworkA14/qigyjl/ok;->a()V"
    ],
    "Lcom/hg/teamworkA14/qigyjl/lvy;": [
        "Lcom/hg/teamworkA14/qigyjl/lvy;->a()V",
        "Lcom/hg/teamworkA14/qigyjl/lvy;->a()Z",
        "Lcom/hg/teamworkA14/qigyjl/lvy;->a()Ljava/lang/String;"
    ],
    "Lorg/apache/http/params/HttpConnectionParams;": [
        "Lorg/apache/http/params/HttpConnectionParams;->setSoTimeout()V",
        "Lorg/apache/http/params/HttpConnectionParams;->setConnectionTimeout()V"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->addHeader()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/util/EntityUtils;": [
        "Lorg/apache/http/util/EntityUtils;->toString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/methods/HttpPost;": [
        "Lorg/apache/http/client/methods/HttpPost;->setEntity()V",
        "Lorg/apache/http/client/methods/HttpPost;->setParams()V"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->toString()Ljava/lang/String;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->openStream()Ljava/io/InputStream;"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->flush()V",
        "Ljava/io/OutputStream;->write()V",
        "Ljava/io/OutputStream;->close()V"
    ],
    "Lcom/hg/teamworkA14/qigyjl/l;": [
        "Lcom/hg/teamworkA14/qigyjl/l;->a()Z"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;",
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onCreate()V",
        "Landroid/app/Service;->onDestroy()V",
        "Landroid/app/Service;->onStart()V"
    ],
    "Lcom/hg/teamworkA14/qigyjl/cn;": [
        "Lcom/hg/teamworkA14/qigyjl/cn;->a()J",
        "Lcom/hg/teamworkA14/qigyjl/cn;->a()V",
        "Lcom/hg/teamworkA14/qigyjl/cn;->start()V",
        "Lcom/hg/teamworkA14/qigyjl/cn;->a()I",
        "Lcom/hg/teamworkA14/qigyjl/cn;->a()Z"
    ],
    "Lcom/hg/teamworkA14/qigyjl/jj;": [
        "Lcom/hg/teamworkA14/qigyjl/jj;->stopSelf()V"
    ],
    "Lcom/hg/teamworkA14/qigyjl/en;": [
        "Lcom/hg/teamworkA14/qigyjl/en;->a()V"
    ],
    "Lcom/hg/teamworkA14/qigyjl/nv;": [
        "Lcom/hg/teamworkA14/qigyjl/nv;->a()Ljava/lang/String;",
        "Lcom/hg/teamworkA14/qigyjl/nv;->start()V"
    ],
    "Ljava/lang/ClassLoader;": [
        "Ljava/lang/ClassLoader;->getSystemClassLoader()Ljava/lang/ClassLoader;",
        "Ljava/lang/ClassLoader;->getParent()Ljava/lang/ClassLoader;"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->resolveActivity()Landroid/content/pm/ResolveInfo;",
        "Landroid/content/pm/PackageManager;->queryIntentActivities()Ljava/util/List;",
        "Landroid/content/pm/PackageManager;->getPackageArchiveInfo()Landroid/content/pm/PackageInfo;",
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;",
        "Landroid/content/pm/PackageManager;->getPackageInfo()Landroid/content/pm/PackageInfo;"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->prepare()V",
        "Landroid/os/Looper;->loop()V"
    ],
    "Ldalvik/system/DexClassLoader;": [
        "Ldalvik/system/DexClassLoader;->loadClass()Ljava/lang/Class;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->onSaveInstanceState()Landroid/os/Parcelable;",
        "Landroid/webkit/WebView;->onWindowVisibilityChanged()V",
        "Landroid/webkit/WebView;->onFocusChanged()V",
        "Landroid/webkit/WebView;->onKeyDown()Z",
        "Landroid/webkit/WebView;->getSettings()Landroid/webkit/WebSettings;"
    ],
    "Landroid/webkit/WebSettings;": [
        "Landroid/webkit/WebSettings;->setJavaScriptEnabled()V",
        "Landroid/webkit/WebSettings;->getUserAgentString()Ljava/lang/String;",
        "Landroid/webkit/WebSettings;->setSaveFormData()V",
        "Landroid/webkit/WebSettings;->setLoadsImagesAutomatically()V",
        "Landroid/webkit/WebSettings;->setUserAgentString()V",
        "Landroid/webkit/WebSettings;->setSavePassword()V",
        "Landroid/webkit/WebSettings;->setPluginsEnabled()V",
        "Landroid/webkit/WebSettings;->setJavaScriptCanOpenWindowsAutomatically()V"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;",
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->getSubtypeName()Ljava/lang/String;",
        "Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;",
        "Landroid/net/NetworkInfo;->getType()I"
    ],
    "Lcom/hg/teamworkA14/qigyjl/h;": [
        "Lcom/hg/teamworkA14/qigyjl/h;->a()V",
        "Lcom/hg/teamworkA14/qigyjl/h;->a()[B",
        "Lcom/hg/teamworkA14/qigyjl/h;->a()Ljava/lang/String;",
        "Lcom/hg/teamworkA14/qigyjl/h;->a()I",
        "Lcom/hg/teamworkA14/qigyjl/h;->a()B"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->doFinal()[B",
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->parseByte()B"
    ],
    "Ljavax/crypto/KeyGenerator;": [
        "Ljavax/crypto/KeyGenerator;->generateKey()Ljavax/crypto/SecretKey;",
        "Ljavax/crypto/KeyGenerator;->getInstance()Ljavax/crypto/KeyGenerator;"
    ],
    "Ljava/security/SecureRandom;": [
        "Ljava/security/SecureRandom;->setSeed()V",
        "Ljava/security/SecureRandom;->getInstance()Ljava/security/SecureRandom;"
    ],
    "Ljavax/crypto/SecretKey;": [
        "Ljavax/crypto/SecretKey;->getEncoded()[B"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;",
        "Landroid/view/WindowManager;->removeView()V"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getMetrics()V",
        "Landroid/view/Display;->getWidth()I",
        "Landroid/view/Display;->getOrientation()I"
    ],
    "Ljava/text/SimpleDateFormat;": [
        "Ljava/text/SimpleDateFormat;->format()Ljava/lang/String;"
    ],
    "Ljava/security/MessageDigest;": [
        "Ljava/security/MessageDigest;->getInstance()Ljava/security/MessageDigest;",
        "Ljava/security/MessageDigest;->update()V",
        "Ljava/security/MessageDigest;->digest()[B"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->putStringArray()V",
        "Landroid/os/Bundle;->putLongArray()V",
        "Landroid/os/Bundle;->putInt()V",
        "Landroid/os/Bundle;->getBoolean()Z",
        "Landroid/os/Bundle;->putDoubleArray()V",
        "Landroid/os/Bundle;->putString()V",
        "Landroid/os/Bundle;->getString()Ljava/lang/String;",
        "Landroid/os/Bundle;->putBooleanArray()V",
        "Landroid/os/Bundle;->putLong()V",
        "Landroid/os/Bundle;->putBoolean()V",
        "Landroid/os/Bundle;->putBundle()V",
        "Landroid/os/Bundle;->putIntArray()V",
        "Landroid/os/Bundle;->putDouble()V"
    ],
    "Ljava/util/GregorianCalendar;": [
        "Ljava/util/GregorianCalendar;->get()I",
        "Ljava/util/GregorianCalendar;->set()V"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getLatitude()D"
    ],
    "Landroid/location/Criteria;": [
        "Landroid/location/Criteria;->setCostAllowed()V",
        "Landroid/location/Criteria;->setAccuracy()V"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;",
        "Landroid/location/LocationManager;->requestLocationUpdates()V"
    ],
    "Lcom/admob/android/ads/u;": [
        "Lcom/admob/android/ads/u;->a()V",
        "Lcom/admob/android/ads/u;->a()Lcom/admob/android/ads/d;",
        "Lcom/admob/android/ads/u;->a()Ljava/lang/String;"
    ],
    "Landroid/provider/Settings$Secure;": [
        "Landroid/provider/Settings$Secure;->getString()Ljava/lang/String;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->equals()Z",
        "Ljava/util/Arrays;->sort()V",
        "Ljava/util/Arrays;->binarySearch()I"
    ],
    "[Ljava/lang/String;": [
        "[Ljava/lang/String;->clone()Ljava/lang/Object;"
    ],
    "Landroid/view/animation/Transformation;": [
        "Landroid/view/animation/Transformation;->getMatrix()Landroid/graphics/Matrix;",
        "Landroid/view/animation/Transformation;->setTransformationType()V"
    ],
    "Landroid/graphics/Matrix;": [
        "Landroid/graphics/Matrix;->setSkew()V",
        "Landroid/graphics/Matrix;->postTranslate()Z",
        "Landroid/graphics/Matrix;->setValues()V",
        "Landroid/graphics/Matrix;->preTranslate()Z"
    ],
    "Landroid/graphics/Color;": [
        "Landroid/graphics/Color;->alpha()I",
        "Landroid/graphics/Color;->argb()I",
        "Landroid/graphics/Color;->red()I",
        "Landroid/graphics/Color;->blue()I",
        "Landroid/graphics/Color;->rgb()I",
        "Landroid/graphics/Color;->green()I"
    ],
    "Lorg/json/JSONObject;": [
        "Lorg/json/JSONObject;->optJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->optDouble()D",
        "Lorg/json/JSONObject;->length()I",
        "Lorg/json/JSONObject;->keys()Ljava/util/Iterator;",
        "Lorg/json/JSONObject;->optString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->opt()Ljava/lang/Object;",
        "Lorg/json/JSONObject;->put()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->getString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->optJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->toString()Ljava/lang/String;",
        "Lorg/json/JSONObject;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONObject;->optBoolean()Z",
        "Lorg/json/JSONObject;->getJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONObject;->has()Z",
        "Lorg/json/JSONObject;->optInt()I"
    ],
    "Lorg/json/JSONArray;": [
        "Lorg/json/JSONArray;->getInt()I",
        "Lorg/json/JSONArray;->getJSONArray()Lorg/json/JSONArray;",
        "Lorg/json/JSONArray;->getString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->length()I",
        "Lorg/json/JSONArray;->toString()Ljava/lang/String;",
        "Lorg/json/JSONArray;->getDouble()D",
        "Lorg/json/JSONArray;->getJSONObject()Lorg/json/JSONObject;",
        "Lorg/json/JSONArray;->get()Ljava/lang/Object;"
    ],
    "Lcom/admob/android/ads/d;": [
        "Lcom/admob/android/ads/d;->a()V",
        "Lcom/admob/android/ads/d;->a()Lcom/admob/android/ads/n;",
        "Lcom/admob/android/ads/d;->a()Landroid/graphics/PointF;",
        "Lcom/admob/android/ads/d;->toString()Ljava/lang/String;",
        "Lcom/admob/android/ads/d;->a()Landroid/view/View;",
        "Lcom/admob/android/ads/d;->a()Landroid/os/Bundle;",
        "Lcom/admob/android/ads/d;->a()Landroid/graphics/Matrix;",
        "Lcom/admob/android/ads/d;->a()Z",
        "Lcom/admob/android/ads/d;->a()D",
        "Lcom/admob/android/ads/d;->a()I",
        "Lcom/admob/android/ads/d;->a()Landroid/graphics/Rect;",
        "Lcom/admob/android/ads/d;->a()[F",
        "Lcom/admob/android/ads/d;->a()Landroid/graphics/RectF;",
        "Lcom/admob/android/ads/d;->a()Lcom/admob/android/ads/l;",
        "Lcom/admob/android/ads/d;->a()Lcom/admob/android/ads/d;",
        "Lcom/admob/android/ads/d;->a()F",
        "Lcom/admob/android/ads/d;->a()Landroid/view/animation/Interpolator;",
        "Lcom/admob/android/ads/d;->a()Lcom/admob/android/ads/m;",
        "Lcom/admob/android/ads/d;->a()Landroid/view/animation/AnimationSet;",
        "Lcom/admob/android/ads/d;->a()J",
        "Lcom/admob/android/ads/d;->a()Lcom/admob/android/ads/k;",
        "Lcom/admob/android/ads/d;->a()Landroid/view/animation/Animation;",
        "Lcom/admob/android/ads/d;->a()Lcom/admob/android/ads/b;",
        "Lcom/admob/android/ads/d;->a()[Ljava/lang/String;"
    ],
    "Landroid/graphics/RectF;": [
        "Landroid/graphics/RectF;->height()F",
        "Landroid/graphics/RectF;->width()F"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->width()I",
        "Landroid/graphics/Rect;->contains()Z",
        "Landroid/graphics/Rect;->height()I"
    ],
    "Landroid/graphics/drawable/GradientDrawable;": [
        "Landroid/graphics/drawable/GradientDrawable;->draw()V",
        "Landroid/graphics/drawable/GradientDrawable;->setBounds()V"
    ],
    "Lcom/admob/android/ads/g;": [
        "Lcom/admob/android/ads/g;->setPressed()V",
        "Lcom/admob/android/ads/g;->setId()V",
        "Lcom/admob/android/ads/g;->a()F",
        "Lcom/admob/android/ads/g;->addView()V",
        "Lcom/admob/android/ads/g;->isFocused()Z",
        "Lcom/admob/android/ads/g;->a()Lcom/admob/android/ads/d;",
        "Lcom/admob/android/ads/g;->getHeight()I",
        "Lcom/admob/android/ads/g;->getParent()Landroid/view/ViewParent;",
        "Lcom/admob/android/ads/g;->a()Ljava/util/Vector;",
        "Lcom/admob/android/ads/g;->isPressed()Z",
        "Lcom/admob/android/ads/g;->a()Lorg/json/JSONObject;",
        "Lcom/admob/android/ads/g;->getChildCount()I",
        "Lcom/admob/android/ads/g;->a()Z",
        "Lcom/admob/android/ads/g;->setClickable()V",
        "Lcom/admob/android/ads/g;->indexOfChild()I",
        "Lcom/admob/android/ads/g;->getChildAt()Landroid/view/View;",
        "Lcom/admob/android/ads/g;->a()V",
        "Lcom/admob/android/ads/g;->a()J",
        "Lcom/admob/android/ads/g;->setGravity()V",
        "Lcom/admob/android/ads/g;->setLayoutParams()V",
        "Lcom/admob/android/ads/g;->setBackgroundDrawable()V",
        "Lcom/admob/android/ads/g;->setVisibility()V",
        "Lcom/admob/android/ads/g;->post()Z",
        "Lcom/admob/android/ads/g;->getWidth()I",
        "Lcom/admob/android/ads/g;->getContext()Landroid/content/Context;",
        "Lcom/admob/android/ads/g;->bringChildToFront()V",
        "Lcom/admob/android/ads/g;->invalidate()V",
        "Lcom/admob/android/ads/g;->hasFocus()Z",
        "Lcom/admob/android/ads/g;->getResources()Landroid/content/res/Resources;",
        "Lcom/admob/android/ads/g;->setFocusable()V",
        "Lcom/admob/android/ads/g;->postDelayed()Z"
    ],
    "Landroid/view/animation/Animation;": [
        "Landroid/view/animation/Animation;->setInterpolator()V",
        "Landroid/view/animation/Animation;->setRepeatMode()V",
        "Landroid/view/animation/Animation;->startNow()V",
        "Landroid/view/animation/Animation;->scaleCurrentDuration()V",
        "Landroid/view/animation/Animation;->getDuration()J",
        "Landroid/view/animation/Animation;->setStartOffset()V",
        "Landroid/view/animation/Animation;->setFillBefore()V",
        "Landroid/view/animation/Animation;->setRepeatCount()V",
        "Landroid/view/animation/Animation;->setFillAfter()V",
        "Landroid/view/animation/Animation;->setDuration()V"
    ],
    "Lcom/admob/android/ads/f;": [
        "Lcom/admob/android/ads/f;->a()Lcom/admob/android/ads/f;",
        "Lcom/admob/android/ads/f;->a()Landroid/graphics/PointF;"
    ],
    "Landroid/view/animation/AnimationSet;": [
        "Landroid/view/animation/AnimationSet;->addAnimation()V"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->doubleValue()D"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->longValue()J"
    ],
    "Lcom/admob/android/ads/d$a;": [
        "Lcom/admob/android/ads/d$a;->a()V"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->create()Landroid/graphics/Typeface;"
    ],
    "Lcom/admob/android/ads/q;": [
        "Lcom/admob/android/ads/q;->getTextSize()F",
        "Lcom/admob/android/ads/q;->setGravity()V",
        "Lcom/admob/android/ads/q;->setTextColor()V",
        "Lcom/admob/android/ads/q;->setText()V",
        "Lcom/admob/android/ads/q;->getTypeface()Landroid/graphics/Typeface;",
        "Lcom/admob/android/ads/q;->getPaint()Landroid/text/TextPaint;",
        "Lcom/admob/android/ads/q;->setTextSize()V",
        "Lcom/admob/android/ads/q;->getText()Ljava/lang/CharSequence;",
        "Lcom/admob/android/ads/q;->setLines()V",
        "Lcom/admob/android/ads/q;->getMeasuredWidth()I",
        "Lcom/admob/android/ads/q;->setTypeface()V",
        "Lcom/admob/android/ads/q;->setBackgroundColor()V"
    ],
    "Landroid/widget/RelativeLayout$LayoutParams;": [
        "Landroid/widget/RelativeLayout$LayoutParams;->setMargins()V",
        "Landroid/widget/RelativeLayout$LayoutParams;->addRule()V"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->toString()Ljava/lang/String;",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->addFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->getData()Landroid/net/Uri;",
        "Landroid/content/Intent;->getStringExtra()Ljava/lang/String;",
        "Landroid/content/Intent;->putExtras()Landroid/content/Intent;"
    ],
    "Ljava/net/URLEncoder;": [
        "Ljava/net/URLEncoder;->encode()Ljava/lang/String;"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/Path;": [
        "Landroid/graphics/Path;->addRoundRect()V"
    ],
    "Ljava/util/HashSet;": [
        "Ljava/util/HashSet;->iterator()Ljava/util/Iterator;",
        "Ljava/util/HashSet;->add()Z",
        "Ljava/util/HashSet;->clear()V",
        "Ljava/util/HashSet;->remove()Z",
        "Ljava/util/HashSet;->size()I"
    ],
    "Lcom/admob/android/ads/r;": [
        "Lcom/admob/android/ads/r;->a()V",
        "Lcom/admob/android/ads/r;->a()[B",
        "Lcom/admob/android/ads/r;->a()Ljava/lang/String;",
        "Lcom/admob/android/ads/r;->a()Z",
        "Lcom/admob/android/ads/r;->a()Ljava/net/URL;"
    ],
    "Lcom/admob/android/ads/e;": [
        "Lcom/admob/android/ads/e;->a()Lcom/admob/android/ads/r;"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->post()Z",
        "Landroid/os/Handler;->postDelayed()Z"
    ],
    "Lcom/admob/android/ads/view/AdMobWebView;": [
        "Lcom/admob/android/ads/view/AdMobWebView;->getContext()Landroid/content/Context;",
        "Lcom/admob/android/ads/view/AdMobWebView;->setWebViewClient()V",
        "Lcom/admob/android/ads/view/AdMobWebView;->a()V",
        "Lcom/admob/android/ads/view/AdMobWebView;->loadUrl()V",
        "Lcom/admob/android/ads/view/AdMobWebView;->setId()V",
        "Lcom/admob/android/ads/view/AdMobWebView;->setBackgroundColor()V",
        "Lcom/admob/android/ads/view/AdMobWebView;->getSettings()Landroid/webkit/WebSettings;"
    ],
    "Lcom/admob/android/ads/d$f;": [
        "Lcom/admob/android/ads/d$f;->ordinal()I"
    ],
    "Lcom/admob/android/ads/d$b;": [
        "Lcom/admob/android/ads/d$b;->a()V"
    ],
    "Ljava/lang/ref/WeakReference;": [
        "Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->setText()V",
        "Landroid/widget/TextView;->onMeasure()V",
        "Landroid/widget/TextView;->setGravity()V",
        "Landroid/widget/TextView;->setPadding()V",
        "Landroid/widget/TextView;->setTextColor()V",
        "Landroid/widget/TextView;->setTextSize()V",
        "Landroid/widget/TextView;->setBackgroundColor()V"
    ],
    "Landroid/text/TextPaint;": [
        "Landroid/text/TextPaint;->setTextSize()V",
        "Landroid/text/TextPaint;->setTypeface()Landroid/graphics/Typeface;",
        "Landroid/text/TextPaint;->measureText()F"
    ],
    "Ljava/lang/CharSequence;": [
        "Ljava/lang/CharSequence;->length()I"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->getHeaderField()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setReadTimeout()V",
        "Ljava/net/HttpURLConnection;->setRequestMethod()V",
        "Ljava/net/HttpURLConnection;->setFollowRedirects()V",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->setConnectTimeout()V",
        "Ljava/net/HttpURLConnection;->disconnect()V",
        "Ljava/net/HttpURLConnection;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/HttpURLConnection;->addRequestProperty()V",
        "Ljava/net/HttpURLConnection;->setDoOutput()V",
        "Ljava/net/HttpURLConnection;->getResponseCode()I",
        "Ljava/net/HttpURLConnection;->getURL()Ljava/net/URL;",
        "Ljava/net/HttpURLConnection;->connect()V",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;"
    ],
    "Lcom/admob/android/ads/h;": [
        "Lcom/admob/android/ads/h;->a()V"
    ],
    "Lcom/admob/android/ads/i;": [
        "Lcom/admob/android/ads/i;->a()Ljava/lang/String;",
        "Lcom/admob/android/ads/i;->a()Z",
        "Lcom/admob/android/ads/i;->a()V"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->keySet()Ljava/util/Set;",
        "Ljava/util/Map;->get()Ljava/lang/Object;"
    ],
    "Ljava/io/BufferedWriter;": [
        "Ljava/io/BufferedWriter;->close()V",
        "Ljava/io/BufferedWriter;->write()V"
    ],
    "Ljava/io/BufferedInputStream;": [
        "Ljava/io/BufferedInputStream;->read()I"
    ],
    "Ljava/util/concurrent/Executors;": [
        "Ljava/util/concurrent/Executors;->newCachedThreadPool()Ljava/util/concurrent/ExecutorService;"
    ],
    "Ljava/util/concurrent/Executor;": [
        "Ljava/util/concurrent/Executor;->execute()V"
    ],
    "Landroid/graphics/Camera;": [
        "Landroid/graphics/Camera;->restore()V",
        "Landroid/graphics/Camera;->translate()V",
        "Landroid/graphics/Camera;->rotateX()V",
        "Landroid/graphics/Camera;->save()V",
        "Landroid/graphics/Camera;->rotateZ()V",
        "Landroid/graphics/Camera;->rotateY()V",
        "Landroid/graphics/Camera;->getMatrix()V"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getEventTime()J",
        "Landroid/view/KeyEvent;->getAction()I"
    ],
    "Lcom/admob/android/ads/s;": [
        "Lcom/admob/android/ads/s;->a()Lorg/json/JSONObject;",
        "Lcom/admob/android/ads/s;->a()Ljava/lang/String;"
    ],
    "Landroid/view/ViewGroup;": [
        "Landroid/view/ViewGroup;->getChildAt()Landroid/view/View;",
        "Landroid/view/ViewGroup;->getChildCount()I"
    ],
    "Landroid/os/SystemClock;": [
        "Landroid/os/SystemClock;->uptimeMillis()J"
    ],
    "Landroid/view/animation/ScaleAnimation;": [
        "Landroid/view/animation/ScaleAnimation;->applyTransformation()V",
        "Landroid/view/animation/ScaleAnimation;->setDuration()V",
        "Landroid/view/animation/ScaleAnimation;->setStartOffset()V",
        "Landroid/view/animation/ScaleAnimation;->setAnimationListener()V"
    ],
    "Landroid/widget/ProgressBar;": [
        "Landroid/widget/ProgressBar;->setLayoutParams()V",
        "Landroid/widget/ProgressBar;->setId()V",
        "Landroid/widget/ProgressBar;->setVisibility()V",
        "Landroid/widget/ProgressBar;->setIndeterminate()V"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->sort()V"
    ],
    "Landroid/util/AttributeSet;": [
        "Landroid/util/AttributeSet;->getAttributeIntValue()I",
        "Landroid/util/AttributeSet;->getAttributeValue()Ljava/lang/String;",
        "Landroid/util/AttributeSet;->getAttributeBooleanValue()Z",
        "Landroid/util/AttributeSet;->getAttributeUnsignedIntValue()I"
    ],
    "Lcom/admob/android/ads/t;": [
        "Lcom/admob/android/ads/t;->a()V"
    ],
    "Lcom/admob/android/ads/a;": [
        "Lcom/admob/android/ads/a;->start()V"
    ],
    "Lcom/admob/android/ads/AdListener;": [
        "Lcom/admob/android/ads/AdListener;->onReceiveRefreshedAd()V",
        "Lcom/admob/android/ads/AdListener;->onReceiveAd()V"
    ],
    "Landroid/view/animation/AlphaAnimation;": [
        "Landroid/view/animation/AlphaAnimation;->applyTransformation()V",
        "Landroid/view/animation/AlphaAnimation;->setDuration()V",
        "Landroid/view/animation/AlphaAnimation;->startNow()V",
        "Landroid/view/animation/AlphaAnimation;->setFillAfter()V",
        "Landroid/view/animation/AlphaAnimation;->setInterpolator()V"
    ],
    "Lcom/admob/android/ads/j;": [
        "Lcom/admob/android/ads/j;->setAnimationListener()V",
        "Lcom/admob/android/ads/j;->setFillAfter()V",
        "Lcom/admob/android/ads/j;->setDuration()V",
        "Lcom/admob/android/ads/j;->setInterpolator()V"
    ],
    "Landroid/view/View$MeasureSpec;": [
        "Landroid/view/View$MeasureSpec;->getSize()I",
        "Landroid/view/View$MeasureSpec;->getMode()I"
    ],
    "Landroid/view/animation/TranslateAnimation;": [
        "Landroid/view/animation/TranslateAnimation;->applyTransformation()V"
    ],
    "Lcom/admob/android/ads/o;": [
        "Lcom/admob/android/ads/o;->a()Ljava/io/File;",
        "Lcom/admob/android/ads/o;->a()V",
        "Lcom/admob/android/ads/o;->a()Ljava/lang/String;",
        "Lcom/admob/android/ads/o;->a()Z"
    ],
    "Lcom/admob/android/ads/b$a;": [
        "Lcom/admob/android/ads/b$a;->a()V"
    ],
    "Landroid/view/animation/Interpolator;": [
        "Landroid/view/animation/Interpolator;->getInterpolation()F"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->load()V"
    ],
    "Lcom/admob/android/ads/analytics/InstallReceiver;": [
        "Lcom/admob/android/ads/analytics/InstallReceiver;->a()Ljava/lang/String;"
    ]
}