{
    "Ljava/lang/System;": [
        "Ljava/lang/System;->currentTimeMillis()J",
        "Ljava/lang/System;->gc()V",
        "Ljava/lang/System;->setProperty()Ljava/lang/String;",
        "Ljava/lang/System;->exit()V",
        "Ljava/lang/System;->arraycopy()V"
    ],
    "LTools;": [
        "LTools;->getIntArrProperty()[I",
        "LTools;->getByteProperty()B",
        "LTools;->addToIntArr2()[[I",
        "LTools;->addToIntArr()[I",
        "LTools;->getBytesFromFile()[B",
        "LTools;->getBooleanProperty()Z",
        "LTools;->splitStrToShortArr()[S",
        "LTools;->addToShortArr()[S",
        "LTools;->str2byte()B",
        "LTools;->getStrArrProperty()[Ljava/lang/String;",
        "LTools;->getIntLineArrEx()[I",
        "LTools;->getShortLineArrEx2()[[S",
        "LTools;->readUTFFile()Ljava/lang/String;",
        "LTools;->getEncryptImageBytes()[B",
        "LTools;->removeNumberFromShortArr()[S",
        "LTools;->clearImgHashtable()V",
        "LTools;->getStrLineArrEx()[Ljava/lang/String;",
        "LTools;->splitStringByWidth()[Ljava/lang/String;",
        "LTools;->fileExistEx()Z",
        "LTools;->removeOneFromIntArr()[I",
        "LTools;->addToBooleanArr()[Z",
        "LTools;->getIntProperty()I",
        "LTools;->str2int()I",
        "LTools;->getByteLineArrEx2()[[B",
        "LTools;->drawNumberImage()V",
        "LTools;->getByteLineArrEx()[B",
        "LTools;->compareFilename()Z",
        "LTools;->splitStrToByteArr()[B",
        "LTools;->getNumberLength()I",
        "LTools;->getSubString()Ljava/lang/String;",
        "LTools;->removeOneFromShortArr()[S",
        "LTools;->getImageByBytes()Ljavax/microedition/lcdui/Image;",
        "LTools;->addToShortArr2()[[S",
        "LTools;->getBytesFromFileEx()[B",
        "LTools;->drawFontWithShadow()V",
        "LTools;->removeNumberFromIntArr()[I",
        "LTools;->addToByteArr2()[[B",
        "LTools;->checkBoxInter()Z",
        "LTools;->getImgBytesFromFile()[B",
        "LTools;->addToStrArr()[Ljava/lang/String;",
        "LTools;->right()Ljava/lang/String;",
        "LTools;->getByteArrProperty()[B",
        "LTools;->getStrProperty()Ljava/lang/String;",
        "LTools;->getShortLineArrEx()[S",
        "LTools;->copy()Ljava/lang/String;",
        "LTools;->removeOneFromByteArr()[B",
        "LTools;->intArrContain()Z",
        "LTools;->removeOneFromShortArr()[[S",
        "LTools;->removeOneFromStrArr()[Ljava/lang/String;",
        "LTools;->getStrLineArrEx2()[[Ljava/lang/String;",
        "LTools;->fileExist()Z",
        "LTools;->getImageByPath()Ljavax/microedition/lcdui/Image;",
        "LTools;->str2short()S",
        "LTools;->drawClipImg()V",
        "LTools;->getStrLineArr()[Ljava/lang/String;",
        "LTools;->getImgResizeData()[I",
        "LTools;->splitStrToIntArr()[I",
        "LTools;->getShortArrProperty()[S",
        "LTools;->splitStr()[Ljava/lang/String;",
        "LTools;->getShortProperty()S",
        "LTools;->addToByteArr()[B",
        "LTools;->addToStrArr2()[[Ljava/lang/String;"
    ],
    "Ljavax/microedition/lcdui/Graphics;": [
        "Ljavax/microedition/lcdui/Graphics;->getRedComponent()I",
        "Ljavax/microedition/lcdui/Graphics;->getBlueComponent()I",
        "Ljavax/microedition/lcdui/Graphics;->drawRoundRect()V",
        "Ljavax/microedition/lcdui/Graphics;->clipRect()V",
        "Ljavax/microedition/lcdui/Graphics;->translate()V",
        "Ljavax/microedition/lcdui/Graphics;->getClipX()I",
        "Ljavax/microedition/lcdui/Graphics;->getColor()I",
        "Ljavax/microedition/lcdui/Graphics;->getClipY()I",
        "Ljavax/microedition/lcdui/Graphics;->fillArc()V",
        "Ljavax/microedition/lcdui/Graphics;->setClip()V",
        "Ljavax/microedition/lcdui/Graphics;->drawLine()V",
        "Ljavax/microedition/lcdui/Graphics;->fillRect()V",
        "Ljavax/microedition/lcdui/Graphics;->drawImage()V",
        "Ljavax/microedition/lcdui/Graphics;->getClipHeight()I",
        "Ljavax/microedition/lcdui/Graphics;->resetGraphics()V",
        "Ljavax/microedition/lcdui/Graphics;->drawRGB()V",
        "Ljavax/microedition/lcdui/Graphics;->getGreenComponent()I",
        "Ljavax/microedition/lcdui/Graphics;->drawArc()V",
        "Ljavax/microedition/lcdui/Graphics;->getClipWidth()I",
        "Ljavax/microedition/lcdui/Graphics;->fillTriangle()V",
        "Ljavax/microedition/lcdui/Graphics;->setColor()V",
        "Ljavax/microedition/lcdui/Graphics;->fillRoundRect()V",
        "Ljavax/microedition/lcdui/Graphics;->drawRegion()V",
        "Ljavax/microedition/lcdui/Graphics;->setFont()V",
        "Ljavax/microedition/lcdui/Graphics;->drawString()V",
        "Ljavax/microedition/lcdui/Graphics;->implementationError()V",
        "Ljavax/microedition/lcdui/Graphics;->drawRect()V"
    ],
    "Ljavax/microedition/lcdui/Font;": [
        "Ljavax/microedition/lcdui/Font;->isUnderlined()Z",
        "Ljavax/microedition/lcdui/Font;->getDefaultFont()Ljavax/microedition/lcdui/Font;",
        "Ljavax/microedition/lcdui/Font;->isBold()Z",
        "Ljavax/microedition/lcdui/Font;->getHeight()I",
        "Ljavax/microedition/lcdui/Font;->isPlain()Z",
        "Ljavax/microedition/lcdui/Font;->charWidth()I",
        "Ljavax/microedition/lcdui/Font;->stringWidth()I",
        "Ljavax/microedition/lcdui/Font;->getFace()I",
        "Ljavax/microedition/lcdui/Font;->getSize()I",
        "Ljavax/microedition/lcdui/Font;->isItalic()Z",
        "Ljavax/microedition/lcdui/Font;->getStyle()I",
        "Ljavax/microedition/lcdui/Font;->getFont()Ljavax/microedition/lcdui/Font;"
    ],
    "LMyTools;": [
        "LMyTools;->byteArrTo2()[[B",
        "LMyTools;->loadPetColor()[[I",
        "LMyTools;->getRandIntArray()[I",
        "LMyTools;->getScreenSnap()[I",
        "LMyTools;->getRandNum()I",
        "LMyTools;->sort()V",
        "LMyTools;->checkTeamRoles()Z",
        "LMyTools;->drawScrollBar()V",
        "LMyTools;->drawAngle()V",
        "LMyTools;->getColorValue()I",
        "LMyTools;->replace()Ljava/lang/String;",
        "LMyTools;->shortArrTo2()[[S",
        "LMyTools;->getOnePetAv()LAnimate;",
        "LMyTools;->addToStringArr2()[[Ljava/lang/String;",
        "LMyTools;->getInIntMaxNumber()I",
        "LMyTools;->getRandInt()I",
        "LMyTools;->scrollNote_UpAndDown_renew()V",
        "LMyTools;->splitStrToShortArr()[S",
        "LMyTools;->getShortArrEx()[S",
        "LMyTools;->drawDisplayText()V",
        "LMyTools;->scrollNote_UpAndDown()V",
        "LMyTools;->drawBackGround()V",
        "LMyTools;->stringArrTo2()[[Ljava/lang/String;",
        "LMyTools;->getColorHValue()I",
        "LMyTools;->compare()B"
    ],
    "Ljava/lang/StringBuilder;": [
        "Ljava/lang/StringBuilder;->append()Ljava/lang/StringBuilder;",
        "Ljava/lang/StringBuilder;->setLength()V",
        "Ljava/lang/StringBuilder;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/String;": [
        "Ljava/lang/String;->startsWith()Z",
        "Ljava/lang/String;->replaceAll()Ljava/lang/String;",
        "Ljava/lang/String;->equals()Z",
        "Ljava/lang/String;->contains()Z",
        "Ljava/lang/String;->matches()Z",
        "Ljava/lang/String;->indexOf()I",
        "Ljava/lang/String;->split()[Ljava/lang/String;",
        "Ljava/lang/String;->valueOf()Ljava/lang/String;",
        "Ljava/lang/String;->replace()Ljava/lang/String;",
        "Ljava/lang/String;->toLowerCase()Ljava/lang/String;",
        "Ljava/lang/String;->compareTo()I",
        "Ljava/lang/String;->endsWith()Z",
        "Ljava/lang/String;->getBytes()[B",
        "Ljava/lang/String;->lastIndexOf()I",
        "Ljava/lang/String;->charAt()C",
        "Ljava/lang/String;->trim()Ljava/lang/String;",
        "Ljava/lang/String;->toCharArray()[C",
        "Ljava/lang/String;->length()I",
        "Ljava/lang/String;->substring()Ljava/lang/String;"
    ],
    "LAnimate;": [
        "LAnimate;->getFrame()I",
        "LAnimate;->setPosition()V",
        "LAnimate;->paint()V",
        "LAnimate;->paintBlock()V",
        "LAnimate;->getActID()I",
        "LAnimate;->getMaxSize()[S",
        "LAnimate;->getActLength()I",
        "LAnimate;->setFrame()V",
        "LAnimate;->readFile()Z",
        "LAnimate;->prevAct()V",
        "LAnimate;->nextFrame()V",
        "LAnimate;->setAct()V",
        "LAnimate;->getBlockByFrameEx()[S",
        "LAnimate;->getFrameLength()I",
        "LAnimate;->getBlockByActFrame()[S"
    ],
    "LPool;": [
        "LPool;->getAvFromPool()LAv;",
        "LPool;->clearAll()V",
        "LPool;->clear()V",
        "LPool;->getFileBytesFromPool()[B",
        "LPool;->clearNullTxt()V",
        "LPool;->getImageByBytesFromPool()Ljavax/microedition/lcdui/Image;",
        "LPool;->getTxtFileFromPool()Ljava/lang/String;",
        "LPool;->delAv()V",
        "LPool;->getImageFromPool()Ljavax/microedition/lcdui/Image;",
        "LPool;->clearNullImg()V"
    ],
    "Ljava/util/Random;": [
        "Ljava/util/Random;->nextInt()I",
        "Ljava/util/Random;->setSeed()V"
    ],
    "Ljava/lang/Math;": [
        "Ljava/lang/Math;->abs()I",
        "Ljava/lang/Math;->min()I",
        "Ljava/lang/Math;->max()I"
    ],
    "Ljavax/microedition/lcdui/Image;": [
        "Ljavax/microedition/lcdui/Image;->createImage()Ljavax/microedition/lcdui/Image;",
        "Ljavax/microedition/lcdui/Image;->isMutable()Z",
        "Ljavax/microedition/lcdui/Image;->getGraphics()Ljavax/microedition/lcdui/Graphics;",
        "Ljavax/microedition/lcdui/Image;->getWidth()I",
        "Ljavax/microedition/lcdui/Image;->createRGBImage()Ljavax/microedition/lcdui/Image;",
        "Ljavax/microedition/lcdui/Image;->getHeight()I",
        "Ljavax/microedition/lcdui/Image;->getRGB()V"
    ],
    "LMap;": [
        "LMap;->clear()V",
        "LMap;->changeImageColor()V",
        "LMap;->setViewWindow()V",
        "LMap;->paintLayer()V",
        "LMap;->checkBlock()Z",
        "LMap;->loadImageBytes()V",
        "LMap;->paintBackLayers()V",
        "LMap;->paintBlock()V",
        "LMap;->getMapWidth()S",
        "LMap;->paintAllLayers()V",
        "LMap;->paintFrontLayers()V",
        "LMap;->clearImages()V",
        "LMap;->createImageByBytes()V",
        "LMap;->cutImages()V",
        "LMap;->getData()Z",
        "LMap;->loadImages()V",
        "LMap;->readFile()Z",
        "LMap;->getMapHeight()S"
    ],
    "LSpriteLayer;": [
        "LSpriteLayer;->paintFlyLayer()V",
        "LSpriteLayer;->paintBlock()V",
        "LSpriteLayer;->paintFrontLayer()V",
        "LSpriteLayer;->updateViewSwitch()V",
        "LSpriteLayer;->getBuildingFromDatFile()V",
        "LSpriteLayer;->addSprite()V",
        "LSpriteLayer;->playAnimate()V",
        "LSpriteLayer;->removeSprite()V",
        "LSpriteLayer;->getDataFromDatFile()Z",
        "LSpriteLayer;->sortSprite()V",
        "LSpriteLayer;->checkBlock()Z",
        "LSpriteLayer;->clearDeleted()V",
        "LSpriteLayer;->isVisibleBuilding()Z",
        "LSpriteLayer;->removeFlySprite()V",
        "LSpriteLayer;->addFlySprite()V",
        "LSpriteLayer;->paint()V",
        "LSpriteLayer;->clearBuildings()V",
        "LSpriteLayer;->createBuildingByData()V",
        "LSpriteLayer;->setViewWindow()V"
    ],
    "LEventManager;": [
        "LEventManager;->checkAutoEvent()V",
        "LEventManager;->getConditionFromStack()Z",
        "LEventManager;->stopEvent()V",
        "LEventManager;->getTouchedEvent()LEvent;",
        "LEventManager;->readFile()V",
        "LEventManager;->doEvent()V",
        "LEventManager;->checkFinishEvent()V",
        "LEventManager;->nextScript()V",
        "LEventManager;->doCommonEvent()V",
        "LEventManager;->removeChooseStack()V",
        "LEventManager;->startEvent()V",
        "LEventManager;->addToConditionStack()V",
        "LEventManager;->executeEvent()V",
        "LEventManager;->checkManualEvent()V",
        "LEventManager;->paintEventBlock()V",
        "LEventManager;->removeLastFromConditionStack()V"
    ],
    "LGameData;": [
        "LGameData;->removeSkill()V",
        "LGameData;->removeOneFromByteArr2()[[B",
        "LGameData;->turnPetIntoBettleSprite()LMySprite;",
        "LGameData;->addTask()Z",
        "LGameData;->loadForever()Z",
        "LGameData;->recoverEvent()V",
        "LGameData;->addPetSkill()V",
        "LGameData;->updateSprite()V",
        "LGameData;->addTeamTask()V",
        "LGameData;->removeTeamTask()V",
        "LGameData;->getItemSite()I",
        "LGameData;->getEquipPosFromBag()[I",
        "LGameData;->readNewGameData()V",
        "LGameData;->isFinishedEvent()Z",
        "LGameData;->removeStuff()V",
        "LGameData;->getTaskManageById()LTaskManage;",
        "LGameData;->updateTeamStopPosition()V",
        "LGameData;->getMenuTeam()[LMySprite;",
        "LGameData;->loadSpriteSkills()[LSkill;",
        "LGameData;->loadSpriteEquips()[LEquip;",
        "LGameData;->getMyPetDataById()LMyPetData;",
        "LGameData;->useItemInBag()V",
        "LGameData;->getSkillSite()I",
        "LGameData;->getBattleTeam()[LMySprite;",
        "LGameData;->removePetDataInSave()V",
        "LGameData;->load()Z",
        "LGameData;->loadSpriteData()V",
        "LGameData;->readSceneData()Z",
        "LGameData;->removePetSkill()V",
        "LGameData;->havePet()Z",
        "LGameData;->clearPartData()V",
        "LGameData;->addEquipToBag()V",
        "LGameData;->addHP()V",
        "LGameData;->readItemData()V",
        "LGameData;->saveForever()Z",
        "LGameData;->createRealEquipInBag()[[LEquip;",
        "LGameData;->loadPetSkills()[LSkill;",
        "LGameData;->getItemCount()I",
        "LGameData;->removeItem()V",
        "LGameData;->getSpriteById()LMySprite;",
        "LGameData;->addToEquipArr()[LEquip;",
        "LGameData;->haveEquip()Z",
        "LGameData;->addToSkillArr()[LSkill;",
        "LGameData;->getPetItem()V",
        "LGameData;->getEquipSite()I",
        "LGameData;->getMenuPet()[LPetData;",
        "LGameData;->getBattlePet()[LPetData;",
        "LGameData;->getPetDataById()LPetData;",
        "LGameData;->saveRmsInfo()Z",
        "LGameData;->updateRoleData()V",
        "LGameData;->dealBattleLose()V",
        "LGameData;->getNextStateByAct()S",
        "LGameData;->addHPInBattle()V",
        "LGameData;->removeEquip()V",
        "LGameData;->loadMyPetData()V",
        "LGameData;->addPetMP()V",
        "LGameData;->removeTeamRole()V",
        "LGameData;->addteamPet()V",
        "LGameData;->addMPInBattle()V",
        "LGameData;->addStuff()[[B",
        "LGameData;->getScripBettleSprite()LMySprite;",
        "LGameData;->addPetHP()V",
        "LGameData;->removeTask()Z",
        "LGameData;->replayGame()V",
        "LGameData;->addFinishedEvent()V",
        "LGameData;->addSpecialRoles()V",
        "LGameData;->removeSkillArr()[LSkill;",
        "LGameData;->addMP()V",
        "LGameData;->loadRmsInfo()Z",
        "LGameData;->readStuffData()V",
        "LGameData;->removeOneFromEquipArr()[LEquip;",
        "LGameData;->useItem()V",
        "LGameData;->haveSkill()Z",
        "LGameData;->addItem()V",
        "LGameData;->updateTeamArrSpace()V",
        "LGameData;->getStuffCount()I",
        "LGameData;->updateTeamPosition()V",
        "LGameData;->battlePetUpgrade()V",
        "LGameData;->readGlobalData()V",
        "LGameData;->createRmsInfo()V",
        "LGameData;->removeBattleTeamPet()V",
        "LGameData;->getOneTypeNumber()I",
        "LGameData;->updateBattlePetData()V",
        "LGameData;->removeTeamPet()V",
        "LGameData;->addStuff()V",
        "LGameData;->save()Z",
        "LGameData;->getScriptBattleTeam()[LMySprite;",
        "LGameData;->clearAllData()V",
        "LGameData;->updatePetData()V",
        "LGameData;->sortIntArr()[B",
        "LGameData;->addTeamRole()V",
        "LGameData;->readMineData()V",
        "LGameData;->getRoleDataById()LRoleData;",
        "LGameData;->continueGame()V",
        "LGameData;->addSkill()V"
    ],
    "LGame;": [
        "LGame;->loadSceneTreasureBox()[LTreasureBox;",
        "LGame;->getTouchedBattleBox()LBattleBox;",
        "LGame;->start()V",
        "LGame;->getCanChatRole()LMySprite;",
        "LGame;->gotoScene()V",
        "LGame;->loadGameWinRes()V",
        "LGame;->stopBackMusic()V",
        "LGame;->gotoBattle()V",
        "LGame;->setSceneFile()V",
        "LGame;->continueGame()V",
        "LGame;->doWalk()V",
        "LGame;->startLoadScene()V",
        "LGame;->drawStaff()V",
        "LGame;->stopalNpcWalk()V",
        "LGame;->checkTask()V",
        "LGame;->getIdRole()LMySprite;",
        "LGame;->doBoxBattle()V",
        "LGame;->returnMineId()V",
        "LGame;->doAutoGather()V",
        "LGame;->commandActPlay()V",
        "LGame;->endBattle()V",
        "LGame;->debugPaint()V",
        "LGame;->loadSceneRoles()[LMySprite;",
        "LGame;->closeChat()V",
        "LGame;->npcWalk()V",
        "LGame;->showAlert()V",
        "LGame;->doOtherBattle()V",
        "LGame;->checkRoleUp()V",
        "LGame;->showChapters()V",
        "LGame;->clearResource()V",
        "LGame;->doChat()V",
        "LGame;->run()V",
        "LGame;->freeScrollmove()V",
        "LGame;->enterPetMail()V",
        "LGame;->checkTouchedMine()V",
        "LGame;->commandWalk()V",
        "LGame;->startAllNpcAutoWalk()V",
        "LGame;->reliveRoleId()V",
        "LGame;->drawEndWords()V",
        "LGame;->stopChatSprite()V",
        "LGame;->execBattle()V",
        "LGame;->getTouchedTreasureBox()LTreasureBox;",
        "LGame;->doLaScreen()V",
        "LGame;->checkTreasureBox()V",
        "LGame;->locateWindow()V",
        "LGame;->commandfreeScroll()V",
        "LGame;->recoverScreen()V",
        "LGame;->drawTaskPic()V",
        "LGame;->doScreenflick()V",
        "LGame;->enterShop()V",
        "LGame;->showTaskMsg()V",
        "LGame;->dofreeScroll()V",
        "LGame;->keyPressed()V",
        "LGame;->getSpriteFromSceneById()LMySprite;",
        "LGame;->paint()V",
        "LGame;->setFadeEffect()V",
        "LGame;->playBackMusic()V",
        "LGame;->formalStart()V",
        "LGame;->checkBattleBox()V",
        "LGame;->haveSkill()Z",
        "LGame;->showRain()V",
        "LGame;->rebuildSceneRes()V",
        "LGame;->dopalyav()V",
        "LGame;->drawMsgCase()V",
        "LGame;->input()V",
        "LGame;->bossFlash()V",
        "LGame;->goChangeColor()V",
        "LGame;->loadSceneBattleBox()[LBattleBox;",
        "LGame;->doBattle()V",
        "LGame;->getsrcColorArray()V",
        "LGame;->checkNpcChat()V"
    ],
    "LMain;": [
        "LMain;->showCover()V",
        "LMain;->platformRequest()Z",
        "LMain;->stopThread()V",
        "LMain;->destroyApp()V",
        "LMain;->updateMusicVolume()V",
        "LMain;->getAppProperty()Ljava/lang/String;",
        "LMain;->stopMusic()V",
        "LMain;->playMusic()V",
        "LMain;->showLogo()V",
        "LMain;->newGame()V",
        "LMain;->notifyDestroyed()V"
    ],
    "Ljava/lang/reflect/Array;": [
        "Ljava/lang/reflect/Array;->getLength()I",
        "Ljava/lang/reflect/Array;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Array;->set()V",
        "Ljava/lang/reflect/Array;->get()Ljava/lang/Object;"
    ],
    "Ljava/util/Vector;": [
        "Ljava/util/Vector;->copyInto()V",
        "Ljava/util/Vector;->toArray()[Ljava/lang/Object;",
        "Ljava/util/Vector;->get()Ljava/lang/Object;",
        "Ljava/util/Vector;->insertElementAt()V",
        "Ljava/util/Vector;->remove()Z",
        "Ljava/util/Vector;->firstElement()Ljava/lang/Object;",
        "Ljava/util/Vector;->add()Z",
        "Ljava/util/Vector;->elements()Ljava/util/Enumeration;",
        "Ljava/util/Vector;->removeElement()Z",
        "Ljava/util/Vector;->isEmpty()Z",
        "Ljava/util/Vector;->removeAllElements()V",
        "Ljava/util/Vector;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Vector;->addElement()V",
        "Ljava/util/Vector;->remove()Ljava/lang/Object;",
        "Ljava/util/Vector;->contains()Z",
        "Ljava/util/Vector;->removeElementAt()V",
        "Ljava/util/Vector;->elementAt()Ljava/lang/Object;",
        "Ljava/util/Vector;->size()I"
    ],
    "LEquip;": [
        "LEquip;->readCreateEquipData()V",
        "LEquip;->xianQianEquip()[S",
        "LEquip;->updateEquip()[S",
        "LEquip;->getWeaponLessSleep()I",
        "LEquip;->getWeaponBodyMove()I",
        "LEquip;->checkEquipUse()Z",
        "LEquip;->getWeaponIntellect()I",
        "LEquip;->getWeaponPhisicalStrength()I",
        "LEquip;->getWeaponLessPetrufy()I",
        "LEquip;->getWeaponForce()I",
        "LEquip;->getWeaponLessDrug()I",
        "LEquip;->getWeaponLessMess()I",
        "LEquip;->createEquip()V",
        "LEquip;->readEquipData()V",
        "LEquip;->getEquipInfo()[Ljava/lang/String;",
        "LEquip;->caifengEquip()[S"
    ],
    "LTreasureBox;": [
        "LTreasureBox;->setState()V",
        "LTreasureBox;->setPosition()V",
        "LTreasureBox;->setDirection()V"
    ],
    "LMySprite;": [
        "LMySprite;->autoMove()V",
        "LMySprite;->renewFollowCoord()V",
        "LMySprite;->getIdChatRole()LMySprite;",
        "LMySprite;->walkTo()V",
        "LMySprite;->paint()V",
        "LMySprite;->getTotalLessSleep()I",
        "LMySprite;->checkBoxCollision()Z",
        "LMySprite;->getCanChatRole()LMySprite;",
        "LMySprite;->getBlock()[S",
        "LMySprite;->updateFollowCoord()V",
        "LMySprite;->getTotalMPMax()I",
        "LMySprite;->getTotalIntellect()I",
        "LMySprite;->endFly()V",
        "LMySprite;->startAutoMove()V",
        "LMySprite;->getTouchedBattleBox()LBattleBox;",
        "LMySprite;->getTotalAttack()I",
        "LMySprite;->drawEnemyDisp()Z",
        "LMySprite;->setarea()V",
        "LMySprite;->getTotalLessMess()I",
        "LMySprite;->stopAutoMove()V",
        "LMySprite;->setFrame()V",
        "LMySprite;->getTotalSpeed()I",
        "LMySprite;->getTotalForce()I",
        "LMySprite;->nextFrame()V",
        "LMySprite;->getTouchedTreasureBox()LTreasureBox;",
        "LMySprite;->getTotalDefence()I",
        "LMySprite;->getTotalHPMax()I",
        "LMySprite;->getTotalLessPetrufy()I",
        "LMySprite;->move()V",
        "LMySprite;->getTotalBodyMove()I",
        "LMySprite;->setPosition()V",
        "LMySprite;->getTotalLessDrug()I",
        "LMySprite;->getChatArea()[S",
        "LMySprite;->startFly()V",
        "LMySprite;->getTotalPhisicalStrength()I",
        "LMySprite;->changeDirect()V",
        "LMySprite;->checkSide()Z",
        "LMySprite;->commandWalk()V",
        "LMySprite;->checkBlock()Z",
        "LMySprite;->actPlay()V"
    ],
    "LController;": [
        "LController;->pressNineKey()V",
        "LController;->pressSevenKey()V",
        "LController;->keyPressed()V",
        "LController;->showStatusBoard()V"
    ],
    "LMessage;": [
        "LMessage;->PaintMenuList()V",
        "LMessage;->paint()V",
        "LMessage;->LoadRes()V",
        "LMessage;->drawBottomNote()V",
        "LMessage;->smsBuy()V",
        "LMessage;->drawDisplayText()V",
        "LMessage;->pointerPressed()V",
        "LMessage;->InitData()V",
        "LMessage;->keypressed()V",
        "LMessage;->runSms()V",
        "LMessage;->closeSmsBoard()V",
        "LMessage;->showAlert()V",
        "LMessage;->buySure()V",
        "LMessage;->getBattleTeam()[LMySprite;",
        "LMessage;->showSmsBoard()V"
    ],
    "LChatMenu;": [
        "LChatMenu;->nextWord()V",
        "LChatMenu;->baseInit()V",
        "LChatMenu;->isEnd()Z",
        "LChatMenu;->scrollUp()V",
        "LChatMenu;->nextMsg()V",
        "LChatMenu;->scrollDown()V",
        "LChatMenu;->drawTalkBorder()V",
        "LChatMenu;->paint()V",
        "LChatMenu;->setBoardRows()V",
        "LChatMenu;->close()V"
    ],
    "Ljava/lang/Thread;": [
        "Ljava/lang/Thread;->sleep()V",
        "Ljava/lang/Thread;->start()V"
    ],
    "Ljava/lang/InterruptedException;": [
        "Ljava/lang/InterruptedException;->getMessage()Ljava/lang/String;",
        "Ljava/lang/InterruptedException;->printStackTrace()V"
    ],
    "LBattle;": [
        "LBattle;->loadRoleResource()V",
        "LBattle;->updatePetData()V",
        "LBattle;->attachedAtk()I",
        "LBattle;->turnTimer()V",
        "LBattle;->startEmemyBattle()V",
        "LBattle;->startEnemyAct()V",
        "LBattle;->drawBorder()V",
        "LBattle;->paint()V",
        "LBattle;->updateCanUsedItems()V",
        "LBattle;->drawPlayerBody()V",
        "LBattle;->clearEnemyResource()V",
        "LBattle;->clearAllbf()Z",
        "LBattle;->changeEnemyTurnEffect()V",
        "LBattle;->win()V",
        "LBattle;->judgeExistState()Z",
        "LBattle;->drawRoleShow()V",
        "LBattle;->startRoleBattleData()V",
        "LBattle;->clearAllLightBf()V",
        "LBattle;->readSkillData()V",
        "LBattle;->drawEnemysStand()V",
        "LBattle;->checkAllowBattle()Z",
        "LBattle;->playBattleMusic()V",
        "LBattle;->drawBack()V",
        "LBattle;->newBattleOrder()V",
        "LBattle;->doBattleChat()V",
        "LBattle;->startPlayerAct()V",
        "LBattle;->showSimpleInfo()V",
        "LBattle;->drawEnemyAttack()V",
        "LBattle;->drawHeadNum()V",
        "LBattle;->changeRolesTurnEffect()V",
        "LBattle;->drawRoleNoAtk()V",
        "LBattle;->drawenmeyHP()V",
        "LBattle;->drawPlayerStand()V",
        "LBattle;->close()V",
        "LBattle;->drawNoteBG()V",
        "LBattle;->setNoatk()V",
        "LBattle;->newTurn()V",
        "LBattle;->updateAddAtk()I",
        "LBattle;->drawwinnotebg()V",
        "LBattle;->clearRoleResource()V",
        "LBattle;->showAlert()V",
        "LBattle;->judgeCanDodge()Z",
        "LBattle;->drawbattleHPMPBar()V",
        "LBattle;->changeStutas()V",
        "LBattle;->getLivedEnemysIndex()[B",
        "LBattle;->startBattle()V",
        "LBattle;->loadCommandResource()V",
        "LBattle;->drawStateBg()V",
        "LBattle;->battleWin()V",
        "LBattle;->useSkill()V",
        "LBattle;->drawEnemysBoby()V",
        "LBattle;->drawPlayerActEffect()V",
        "LBattle;->start()V",
        "LBattle;->updateRoles()V",
        "LBattle;->battleLose()V",
        "LBattle;->getTowStutasDiff()I",
        "LBattle;->drawAckInfo()V",
        "LBattle;->popUpBox()V",
        "LBattle;->clearAllDbf()V",
        "LBattle;->fingerShock()V",
        "LBattle;->drawSpriteFour()V",
        "LBattle;->drawAllEnemy()V",
        "LBattle;->drawEffect()V",
        "LBattle;->manageBfEffect()V",
        "LBattle;->drawInfo()V",
        "LBattle;->getStringRoleBf()Ljava/lang/String;",
        "LBattle;->drawEnemyShow()V",
        "LBattle;->loadEnemyResource()V",
        "LBattle;->drawAllRoleState()V"
    ],
    "LSMSService;": [
        "LSMSService;->getGateInfoFromVC()Z",
        "LSMSService;->keyPressed()V",
        "LSMSService;->saveGateInfoToRms()V",
        "LSMSService;->setWindowSize()V",
        "LSMSService;->paintUpTriangle()V",
        "LSMSService;->paintDownTriangle()V",
        "LSMSService;->setUseNetUpdate()V",
        "LSMSService;->readGateInfoFromRms()V",
        "LSMSService;->readInterreptChargeFromRms()V",
        "LSMSService;->smsPay()V",
        "LSMSService;->paintMsg()V",
        "LSMSService;->getInterreptChargeAmount()I",
        "LSMSService;->paintBar()V",
        "LSMSService;->paint()V",
        "LSMSService;->saveInterreptChargeToRms()V"
    ],
    "LColorfulText;": [
        "LColorfulText;->addText()V",
        "LColorfulText;->clear()V",
        "LColorfulText;->getNewStrAndColorPos()V",
        "LColorfulText;->drawColorStr()V",
        "LColorfulText;->setPos()V",
        "LColorfulText;->slipColorText()V",
        "LColorfulText;->drawColorTextNew()V"
    ],
    "LTouch;": [
        "LTouch;->addNineButton()V",
        "LTouch;->clearAllTouchCmd()V",
        "LTouch;->checkTouchedCmd()LTouchCmd;",
        "LTouch;->paint()V",
        "LTouch;->addSevenButton()V",
        "LTouch;->changeTouchCmd()V",
        "LTouch;->clearButton()V",
        "LTouch;->addLeftButton()V",
        "LTouch;->isHaveButton()Z",
        "LTouch;->addRightButton()V",
        "LTouch;->addSevenTouch()V",
        "LTouch;->addTouchCmd()V"
    ],
    "Ljava/lang/StringBuffer;": [
        "Ljava/lang/StringBuffer;->deleteCharAt()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->length()I",
        "Ljava/lang/StringBuffer;->delete()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->append()Ljava/lang/StringBuffer;",
        "Ljava/lang/StringBuffer;->toString()Ljava/lang/String;"
    ],
    "LSystemMenu;": [
        "LSystemMenu;->drawPetTj()V",
        "LSystemMenu;->drawTrade()V",
        "LSystemMenu;->cancel()V",
        "LSystemMenu;->drawMailPet()V",
        "LSystemMenu;->scrollNote_UpAndDown_renew()V",
        "LSystemMenu;->drawEquipInfo()V",
        "LSystemMenu;->buy()V",
        "LSystemMenu;->drawSkillInfo()V",
        "LSystemMenu;->getthree()I",
        "LSystemMenu;->getEquipAllSkill()[S",
        "LSystemMenu;->showAlert()V",
        "LSystemMenu;->drawInnerBorder()V",
        "LSystemMenu;->prevChoice()V",
        "LSystemMenu;->updateStatusOfOK()V",
        "LSystemMenu;->replaceEquip()V",
        "LSystemMenu;->countTotal()V",
        "LSystemMenu;->drawInnerBorder1()V",
        "LSystemMenu;->drawOnePetInfo()V",
        "LSystemMenu;->drawMenuBar()V",
        "LSystemMenu;->drawRdRect()V",
        "LSystemMenu;->readShopData()V",
        "LSystemMenu;->updateUpdateEquips()V",
        "LSystemMenu;->drawxianqianEquip()V",
        "LSystemMenu;->ok()V",
        "LSystemMenu;->classifyItem()V",
        "LSystemMenu;->removeOnePet()Z",
        "LSystemMenu;->scrollNote_UpAndDown()V",
        "LSystemMenu;->drawEquipMerge()V",
        "LSystemMenu;->drawFethPet()V",
        "LSystemMenu;->paint()V",
        "LSystemMenu;->drawBackGround()V",
        "LSystemMenu;->fingerShock()V",
        "LSystemMenu;->updateOpTable()V",
        "LSystemMenu;->nextChoice()V",
        "LSystemMenu;->chooseMenu()V",
        "LSystemMenu;->drawGoodsInfo()V",
        "LSystemMenu;->drawRectBG_Note()V",
        "LSystemMenu;->drawPetLearnSkill()V",
        "LSystemMenu;->useItem()V",
        "LSystemMenu;->drawLifeSkill()V",
        "LSystemMenu;->updateStatusOfCancel()V",
        "LSystemMenu;->readStoryData()V",
        "LSystemMenu;->drawTaskInfo()V",
        "LSystemMenu;->drawStatusInfo()V",
        "LSystemMenu;->loadCommonData()V",
        "LSystemMenu;->drawBaseInfo()V",
        "LSystemMenu;->drawUpdateEquip()V",
        "LSystemMenu;->drawPetInfo()V",
        "LSystemMenu;->replaceGoodEquip()V",
        "LSystemMenu;->drawSaveImg()V",
        "LSystemMenu;->drawcaifengEquip()V",
        "LSystemMenu;->changeEquip()V",
        "LSystemMenu;->updateSelfCount()V",
        "LSystemMenu;->loadWordsRes()V"
    ],
    "Ljavax/microedition/rms/RecordStore;": [
        "Ljavax/microedition/rms/RecordStore;->deleteRecordStore()V",
        "Ljavax/microedition/rms/RecordStore;->enumerateRecords()Ljavax/microedition/rms/RecordEnumeration;",
        "Ljavax/microedition/rms/RecordStore;->getRecord()[B",
        "Ljavax/microedition/rms/RecordStore;->closeRecordStore()V",
        "Ljavax/microedition/rms/RecordStore;->addRecord()I",
        "Ljavax/microedition/rms/RecordStore;->openRecordStore()Ljavax/microedition/rms/RecordStore;",
        "Ljavax/microedition/rms/RecordStore;->listRecordStores()[Ljava/lang/String;"
    ],
    "Ljavax/microedition/rms/RecordEnumeration;": [
        "Ljavax/microedition/rms/RecordEnumeration;->nextRecordId()I",
        "Ljavax/microedition/rms/RecordEnumeration;->hasNextElement()Z"
    ],
    "Ljava/io/DataInputStream;": [
        "Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;",
        "Ljava/io/DataInputStream;->close()V",
        "Ljava/io/DataInputStream;->readInt()I",
        "Ljava/io/DataInputStream;->read()I",
        "Ljava/io/DataInputStream;->readLong()J",
        "Ljava/io/DataInputStream;->readBoolean()Z",
        "Ljava/io/DataInputStream;->readShort()S",
        "Ljava/io/DataInputStream;->readByte()B"
    ],
    "Ljavax/microedition/rms/RecordStoreFullException;": [
        "Ljavax/microedition/rms/RecordStoreFullException;->printStackTrace()V"
    ],
    "Ljava/io/IOException;": [
        "Ljava/io/IOException;->printStackTrace()V",
        "Ljava/io/IOException;->toString()Ljava/lang/String;",
        "Ljava/io/IOException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/io/DataOutputStream;": [
        "Ljava/io/DataOutputStream;->write()V",
        "Ljava/io/DataOutputStream;->writeBoolean()V",
        "Ljava/io/DataOutputStream;->writeByte()V",
        "Ljava/io/DataOutputStream;->writeUTF()V",
        "Ljava/io/DataOutputStream;->writeInt()V",
        "Ljava/io/DataOutputStream;->writeShort()V",
        "Ljava/io/DataOutputStream;->close()V",
        "Ljava/io/DataOutputStream;->writeLong()V"
    ],
    "Ljava/io/ByteArrayOutputStream;": [
        "Ljava/io/ByteArrayOutputStream;->write()V",
        "Ljava/io/ByteArrayOutputStream;->toByteArray()[B"
    ],
    "Ljavax/microedition/rms/RecordStoreException;": [
        "Ljavax/microedition/rms/RecordStoreException;->printStackTrace()V"
    ],
    "Ljava/lang/Exception;": [
        "Ljava/lang/Exception;->toString()Ljava/lang/String;",
        "Ljava/lang/Exception;->getMessage()Ljava/lang/String;",
        "Ljava/lang/Exception;->printStackTrace()V"
    ],
    "Ljava/io/PrintStream;": [
        "Ljava/io/PrintStream;->println()V"
    ],
    "LSMSService$GetGateInfoByNet;": [
        "LSMSService$GetGateInfoByNet;->setUseProxy()V",
        "LSMSService$GetGateInfoByNet;->queryGameSmsCmd()V"
    ],
    "LSmsSender;": [
        "LSmsSender;->send()V",
        "LSmsSender;->charge()V"
    ],
    "LSmsListener;": [
        "LSmsListener;->chargeResult()V"
    ],
    "LAv;": [
        "LAv;->getData()Z",
        "LAv;->loadImageBytes()V",
        "LAv;->cutImage()V",
        "LAv;->getRectBox()[S",
        "LAv;->getActLength()I",
        "LAv;->getFrameLength()I",
        "LAv;->getMaxSize()[S",
        "LAv;->createAlphaPics()V",
        "LAv;->createImageByBytes()V",
        "LAv;->paint()V",
        "LAv;->changeImageColor()V",
        "LAv;->readFile()Z",
        "LAv;->loadImages()V",
        "LAv;->clearImages()V"
    ],
    "Ljava/io/UnsupportedEncodingException;": [
        "Ljava/io/UnsupportedEncodingException;->printStackTrace()V"
    ],
    "LMusic;": [
        "LMusic;->setVolume()V",
        "LMusic;->setLoopCount()V",
        "LMusic;->playSound()V",
        "LMusic;->close()V",
        "LMusic;->setSound()V",
        "LMusic;->stopSound()V"
    ],
    "LCustomName;": [
        "LCustomName;->keypressed()V",
        "LCustomName;->paint()V",
        "LCustomName;->drawStrInSpecialWidth()V",
        "LCustomName;->defineName()V",
        "LCustomName;->pointerPressed()V"
    ],
    "LFadeEffect;": [
        "LFadeEffect;->setFadeOut()V",
        "LFadeEffect;->inFading()Z",
        "LFadeEffect;->setType()V",
        "LFadeEffect;->setFadeIn()V",
        "LFadeEffect;->paint()V"
    ],
    "LFlame;": [
        "LFlame;->drawSpark()V",
        "LFlame;->getRandomValue()I",
        "LFlame;->argb2int()I",
        "LFlame;->getRangeRandomValue()I",
        "LFlame;->updateSpark()V"
    ],
    "Ljavax/microedition/lcdui/Display;": [
        "Ljavax/microedition/lcdui/Display;->getCurrentDisplayAccess()Lorg/meteoroid/util/DisplayAccess;",
        "Ljavax/microedition/lcdui/Display;->getGameAction()I",
        "Ljavax/microedition/lcdui/Display;->getDisplay()Ljavax/microedition/lcdui/Display;",
        "Ljavax/microedition/lcdui/Display;->serviceRepaints()V",
        "Ljavax/microedition/lcdui/Display;->getKeyCode()I",
        "Ljavax/microedition/lcdui/Display;->setCurrent()V",
        "Ljavax/microedition/lcdui/Display;->repaint()V",
        "Ljavax/microedition/lcdui/Display;->isShown()Z",
        "Ljavax/microedition/lcdui/Display;->getKeyName()Ljava/lang/String;"
    ],
    "LConfig;": [
        "LConfig;->readPhoneConfig()V"
    ],
    "LMyConfig;": [
        "LMyConfig;->readMyConfig()V"
    ],
    "LMessageConfig;": [
        "LMessageConfig;->readSubChannels()V",
        "LMessageConfig;->readConfig()V"
    ],
    "LSceneCanvas;": [
        "LSceneCanvas;->getHeight()I",
        "LSceneCanvas;->repaint()V",
        "LSceneCanvas;->getWidth()I",
        "LSceneCanvas;->setFullScreenMode()V",
        "LSceneCanvas;->serviceRepaints()V",
        "LSceneCanvas;->setCurrent()V",
        "LSceneCanvas;->drawAlert()V",
        "LSceneCanvas;->showAlert()V",
        "LSceneCanvas;->keyPressedEx()V",
        "LSceneCanvas;->stop()V",
        "LSceneCanvas;->start()V"
    ],
    "LCover;": [
        "LCover;->run()V",
        "LCover;->clearRes()V",
        "LCover;->input()V",
        "LCover;->drawRectBG_Note()V",
        "LCover;->paint()V",
        "LCover;->start()V",
        "LCover;->keyPressed()V",
        "LCover;->getKeyStates()I"
    ],
    "Ljavax/microedition/lcdui/Canvas;": [
        "Ljavax/microedition/lcdui/Canvas;->getHeight()I",
        "Ljavax/microedition/lcdui/Canvas;->setDisplayableType()V",
        "Ljavax/microedition/lcdui/Canvas;->paint()V",
        "Ljavax/microedition/lcdui/Canvas;->getWidth()I"
    ],
    "LKey;": [
        "LKey;->getGameKey()I"
    ],
    "LLogo;": [
        "LLogo;->drawLogo()V",
        "LLogo;->keyPressed()V",
        "LLogo;->paint()V"
    ],
    "Ljavax/microedition/midlet/MIDletStateChangeException;": [
        "Ljavax/microedition/midlet/MIDletStateChangeException;->printStackTrace()V",
        "Ljavax/microedition/midlet/MIDletStateChangeException;->toString()Ljava/lang/String;"
    ],
    "LVKey;": [
        "LVKey;->pointerReleased()V",
        "LVKey;->pointerDragged()V",
        "LVKey;->pointerPressed()V",
        "LVKey;->drawVKpad()V"
    ],
    "Ljava/lang/Runtime;": [
        "Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;",
        "Ljava/lang/Runtime;->totalMemory()J",
        "Ljava/lang/Runtime;->freeMemory()J"
    ],
    "LBattleController;": [
        "LBattleController;->pointerPressed()V",
        "LBattleController;->getIndexDown()B",
        "LBattleController;->jumpRole()V",
        "LBattleController;->changeBattleRole()V",
        "LBattleController;->keyPressed()V",
        "LBattleController;->getIndexUp()B"
    ],
    "LUIModule;": [
        "LUIModule;->drawText()V",
        "LUIModule;->getFarPoint()[S",
        "LUIModule;->drawUIList()I",
        "LUIModule;->getCosAngleValue()I",
        "LUIModule;->drawComText()V",
        "LUIModule;->getSinAngleValue()I",
        "LUIModule;->drawFrame()V",
        "LUIModule;->eddyListKeypressed()V",
        "LUIModule;->drawICON()V"
    ],
    "LSystemMenuController;": [
        "LSystemMenuController;->logicOfTrade()V",
        "LSystemMenuController;->getReturnByte()B",
        "LSystemMenuController;->judgeBack()V",
        "LSystemMenuController;->logicPetTj()V",
        "LSystemMenuController;->logicOfGoods()V",
        "LSystemMenuController;->logicxianqianEquip()V",
        "LSystemMenuController;->logicMailPet()V",
        "LSystemMenuController;->logicFetchPet()V",
        "LSystemMenuController;->getByteArray()[B",
        "LSystemMenuController;->pointerPressed()V",
        "LSystemMenuController;->keyPressed()V",
        "LSystemMenuController;->logicOfPetInfo()V",
        "LSystemMenuController;->logicOfUpdateWeapon()V",
        "LSystemMenuController;->caifengzuanyong()V",
        "LSystemMenuController;->closeSystemBoard()Z",
        "LSystemMenuController;->logicPetLearnSkill()V"
    ],
    "LBuilding;": [
        "LBuilding;->paintBlock()V",
        "LBuilding;->getSize()[S",
        "LBuilding;->paint()V",
        "LBuilding;->playAnimate()V",
        "LBuilding;->getBlock()[S"
    ],
    "LMyMath;": [
        "LMyMath;->sin_lookup()I",
        "LMyMath;->div()I",
        "LMyMath;->abs()I",
        "LMyMath;->cos()I",
        "LMyMath;->toFP()I",
        "LMyMath;->asin()I",
        "LMyMath;->sqrt()I",
        "LMyMath;->toRadians()I",
        "LMyMath;->log()I",
        "LMyMath;->toInt()I",
        "LMyMath;->exp()I",
        "LMyMath;->pow_int()I",
        "LMyMath;->mul()I",
        "LMyMath;->sin()I"
    ],
    "Ljava/util/Hashtable;": [
        "Ljava/util/Hashtable;->containsKey()Z",
        "Ljava/util/Hashtable;->put()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->remove()Ljava/lang/Object;",
        "Ljava/util/Hashtable;->clear()V",
        "Ljava/util/Hashtable;->keys()Ljava/util/Enumeration;",
        "Ljava/util/Hashtable;->toString()Ljava/lang/String;",
        "Ljava/util/Hashtable;->get()Ljava/lang/Object;"
    ],
    "LPackage;": [
        "LPackage;->getFileByteFromPackage()[B",
        "LPackage;->fileNameExist()Z"
    ],
    "Lorg/meteoroid/plugin/Device;": [
        "Lorg/meteoroid/plugin/Device;->getGameAction()I",
        "Lorg/meteoroid/plugin/Device;->vibrate()Z",
        "Lorg/meteoroid/plugin/Device;->createImage()Ljavax/microedition/lcdui/Image;",
        "Lorg/meteoroid/plugin/Device;->createRGBImage()Ljavax/microedition/lcdui/Image;",
        "Lorg/meteoroid/plugin/Device;->updateDisplayable()V",
        "Lorg/meteoroid/plugin/Device;->getHeight()I",
        "Lorg/meteoroid/plugin/Device;->mute()V",
        "Lorg/meteoroid/plugin/Device;->repaintClip()V",
        "Lorg/meteoroid/plugin/Device;->onGC()V",
        "Lorg/meteoroid/plugin/Device;->hasPointerMotionEvents()Z",
        "Lorg/meteoroid/plugin/Device;->setDeviceVolume()V",
        "Lorg/meteoroid/plugin/Device;->getGraphics()Ljavax/microedition/lcdui/Graphics;",
        "Lorg/meteoroid/plugin/Device;->getKeyCode()I",
        "Lorg/meteoroid/plugin/Device;->serviceRepaints()V",
        "Lorg/meteoroid/plugin/Device;->open()Ljavax/microedition/io/Connection;",
        "Lorg/meteoroid/plugin/Device;->getResourceAsStream()Ljava/io/InputStream;",
        "Lorg/meteoroid/plugin/Device;->numColors()I",
        "Lorg/meteoroid/plugin/Device;->hasPointerEvents()Z",
        "Lorg/meteoroid/plugin/Device;->getWidth()I",
        "Lorg/meteoroid/plugin/Device;->isColor()Z",
        "Lorg/meteoroid/plugin/Device;->repaint()V",
        "Lorg/meteoroid/plugin/Device;->hasRepeatEvents()Z",
        "Lorg/meteoroid/plugin/Device;->getSurfaceUpdater()Lorg/meteoroid/util/SurfaceUpdater;",
        "Lorg/meteoroid/plugin/Device;->onCreate()V",
        "Lorg/meteoroid/plugin/Device;->flushGraphics()V",
        "Lorg/meteoroid/plugin/Device;->onDestroy()V",
        "Lorg/meteoroid/plugin/Device;->createPlayer()Ljavax/microedition/media/Player;",
        "Lorg/meteoroid/plugin/Device;->numAlphaLevels()I",
        "Lorg/meteoroid/plugin/Device;->getDeviceVolume()I",
        "Lorg/meteoroid/plugin/Device;->unmute()V",
        "Lorg/meteoroid/plugin/Device;->getKeyName()Ljava/lang/String;"
    ],
    "Ljava/io/InputStream;": [
        "Ljava/io/InputStream;->reset()V",
        "Ljava/io/InputStream;->skip()J",
        "Ljava/io/InputStream;->close()V",
        "Ljava/io/InputStream;->read()I",
        "Ljava/io/InputStream;->available()I",
        "Ljava/io/InputStream;->markSupported()Z",
        "Ljava/io/InputStream;->mark()V"
    ],
    "Ljava/lang/Long;": [
        "Ljava/lang/Long;->valueOf()Ljava/lang/Long;",
        "Ljava/lang/Long;->longValue()J",
        "Ljava/lang/Long;->parseLong()J"
    ],
    "Ljava/lang/Byte;": [
        "Ljava/lang/Byte;->parseByte()B",
        "Ljava/lang/Byte;->byteValue()B",
        "Ljava/lang/Byte;->valueOf()Ljava/lang/Byte;"
    ],
    "Ljava/lang/Integer;": [
        "Ljava/lang/Integer;->valueOf()Ljava/lang/Integer;",
        "Ljava/lang/Integer;->byteValue()B",
        "Ljava/lang/Integer;->toString()Ljava/lang/String;",
        "Ljava/lang/Integer;->intValue()I",
        "Ljava/lang/Integer;->toHexString()Ljava/lang/String;",
        "Ljava/lang/Integer;->parseInt()I"
    ],
    "Ljava/lang/Short;": [
        "Ljava/lang/Short;->shortValue()S",
        "Ljava/lang/Short;->valueOf()Ljava/lang/Short;",
        "Ljava/lang/Short;->parseShort()S"
    ],
    "Ljavax/microedition/media/Player;": [
        "Ljavax/microedition/media/Player;->addPlayerListener()V",
        "Ljavax/microedition/media/Player;->start()V",
        "Ljavax/microedition/media/Player;->realize()V",
        "Ljavax/microedition/media/Player;->stop()V",
        "Ljavax/microedition/media/Player;->deallocate()V",
        "Ljavax/microedition/media/Player;->getControl()Ljavax/microedition/media/Control;",
        "Ljavax/microedition/media/Player;->setLoopCount()V",
        "Ljavax/microedition/media/Player;->prefetch()V",
        "Ljavax/microedition/media/Player;->close()V"
    ],
    "Ljavax/microedition/media/MediaException;": [
        "Ljavax/microedition/media/MediaException;->printStackTrace()V"
    ],
    "Ljavax/microedition/media/Manager;": [
        "Ljavax/microedition/media/Manager;->createPlayer()Ljavax/microedition/media/Player;"
    ],
    "Ljavax/microedition/media/control/VolumeControl;": [
        "Ljavax/microedition/media/control/VolumeControl;->setLevel()I"
    ],
    "LTaskManage;": [
        "LTaskManage;->checkTaskFinish()V",
        "LTaskManage;->Judge()Z"
    ],
    "LMyLayer;": [
        "LMyLayer;->getBlock()[S",
        "LMyLayer;->paint()V",
        "LMyLayer;->paintBlock()V",
        "LMyLayer;->getMaxSize()[S"
    ],
    "Ljava/lang/Object;": [
        "Ljava/lang/Object;->toString()Ljava/lang/String;",
        "Ljava/lang/Object;->notify()V",
        "Ljava/lang/Object;->wait()V",
        "Ljava/lang/Object;->notifyAll()V",
        "Ljava/lang/Object;->getClass()Ljava/lang/Class;",
        "Ljava/lang/Object;->equals()Z"
    ],
    "LBattleBox;": [
        "LBattleBox;->setPosition()V"
    ],
    "LDrawChap;": [
        "LDrawChap;->paint()V",
        "LDrawChap;->ToDrawChap()V"
    ],
    "LRain;": [
        "LRain;->paint()V"
    ],
    "LPlayav;": [
        "LPlayav;->paint()V",
        "LPlayav;->load()V",
        "LPlayav;->Toplayav()V",
        "LPlayav;->keyPressed()V"
    ],
    "LSkill;": [
        "LSkill;->readSkillData()V"
    ],
    "LPrint;": [
        "LPrint;->printArray()V"
    ],
    "Ljava/util/TimeZone;": [
        "Ljava/util/TimeZone;->getTimeZone()Ljava/util/TimeZone;"
    ],
    "Ljava/util/Calendar;": [
        "Ljava/util/Calendar;->getTime()Ljava/util/Date;",
        "Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;",
        "Ljava/util/Calendar;->get()I"
    ],
    "Ljavax/microedition/rms/RecordStoreNotFoundException;": [
        "Ljavax/microedition/rms/RecordStoreNotFoundException;->printStackTrace()V"
    ],
    "Ljavax/microedition/rms/RecordStoreNotOpenException;": [
        "Ljavax/microedition/rms/RecordStoreNotOpenException;->printStackTrace()V"
    ],
    "LNetPay$NetSender;": [
        "LNetPay$NetSender;->sendData()V"
    ],
    "LColorTools;": [
        "LColorTools;->toGray()[B",
        "LColorTools;->changeBright()[B",
        "LColorTools;->changeColor()V",
        "LColorTools;->changePalette()[B",
        "LColorTools;->updateCRC()I",
        "LColorTools;->findPalette()[I"
    ],
    "Ljavax/microedition/lcdui/Command;": [
        "Ljavax/microedition/lcdui/Command;->getLabel()Ljava/lang/String;",
        "Ljavax/microedition/lcdui/Command;->getPriority()I"
    ],
    "Ljavax/microedition/lcdui/TextField;": [
        "Ljavax/microedition/lcdui/TextField;->getView()Landroid/widget/LinearLayout;",
        "Ljavax/microedition/lcdui/TextField;->setString()V",
        "Ljavax/microedition/lcdui/TextField;->getString()Ljava/lang/String;",
        "Ljavax/microedition/lcdui/TextField;->setLabel()V",
        "Ljavax/microedition/lcdui/TextField;->insert()V"
    ],
    "LRoundTest;": [
        "LRoundTest;->cal()V",
        "LRoundTest;->paint()V"
    ],
    "LCopyRight;": [
        "LCopyRight;->checkCrack()Z",
        "LCopyRight;->check()Z"
    ],
    "Ljava/lang/Class;": [
        "Ljava/lang/Class;->toString()Ljava/lang/String;",
        "Ljava/lang/Class;->isInstance()Z",
        "Ljava/lang/Class;->getDeclaredField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getResourceAsStream()Ljava/io/InputStream;",
        "Ljava/lang/Class;->getMethods()[Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/Class;->getName()Ljava/lang/String;",
        "Ljava/lang/Class;->getDeclaredMethods()[Ljava/lang/reflect/Method;",
        "Ljava/lang/Class;->isAssignableFrom()Z",
        "Ljava/lang/Class;->getComponentType()Ljava/lang/Class;",
        "Ljava/lang/Class;->getField()Ljava/lang/reflect/Field;",
        "Ljava/lang/Class;->getDeclaredConstructors()[Ljava/lang/reflect/Constructor;",
        "Ljava/lang/Class;->isArray()Z",
        "Ljava/lang/Class;->forName()Ljava/lang/Class;"
    ],
    "Ljavax/microedition/lcdui/Form;": [
        "Ljavax/microedition/lcdui/Form;->addCommand()V",
        "Ljavax/microedition/lcdui/Form;->setDisplayableType()V",
        "Ljavax/microedition/lcdui/Form;->get()Ljavax/microedition/lcdui/Item;",
        "Ljavax/microedition/lcdui/Form;->getView()Landroid/widget/LinearLayout;",
        "Ljavax/microedition/lcdui/Form;->append()I",
        "Ljavax/microedition/lcdui/Form;->setCommandListener()V",
        "Ljavax/microedition/lcdui/Form;->getItemStateListener()Ljavax/microedition/lcdui/ItemStateListener;"
    ],
    "LPetData;": [
        "LPetData;->addOnePet()V"
    ],
    "Ljavax/microedition/io/Connector;": [
        "Ljavax/microedition/io/Connector;->open()Ljavax/microedition/io/Connection;"
    ],
    "Ljavax/wireless/messaging/MessageConnection;": [
        "Ljavax/wireless/messaging/MessageConnection;->send()V",
        "Ljavax/wireless/messaging/MessageConnection;->numberOfSegments()I",
        "Ljavax/wireless/messaging/MessageConnection;->newMessage()Ljavax/wireless/messaging/Message;",
        "Ljavax/wireless/messaging/MessageConnection;->close()V"
    ],
    "Ljavax/wireless/messaging/TextMessage;": [
        "Ljavax/wireless/messaging/TextMessage;->setPayloadText()V",
        "Ljavax/wireless/messaging/TextMessage;->getAddress()Ljava/lang/String;",
        "Ljavax/wireless/messaging/TextMessage;->getPayloadText()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/core/JavaApplicationManager;": [
        "Lorg/meteoroid/core/JavaApplicationManager;->getInstance()Lorg/meteoroid/core/JavaApplicationManager;",
        "Lorg/meteoroid/core/JavaApplicationManager;->launchMIDlet()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->startMIDlet()Z",
        "Lorg/meteoroid/core/JavaApplicationManager;->notifyResumed()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->notifyExit()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->getAndroidActivityProxy()Lorg/meteoroid/util/AndroidActivityProxy;",
        "Lorg/meteoroid/core/JavaApplicationManager;->notifyPaused()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->setSmsRecvListener()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->getCurrentMIDlet()Lorg/meteoroid/util/MIDletAccess;",
        "Lorg/meteoroid/core/JavaApplicationManager;->isAutoLaunch()Z",
        "Lorg/meteoroid/core/JavaApplicationManager;->getAppProperty()Ljava/lang/String;",
        "Lorg/meteoroid/core/JavaApplicationManager;->setMeteoroidActivity()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->platformRequest()Z",
        "Lorg/meteoroid/core/JavaApplicationManager;->requestMIDletLauncher()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->setPlatformRequestListener()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->notifyDestroyed()V",
        "Lorg/meteoroid/core/JavaApplicationManager;->getSmsRecvListener()Lorg/meteoroid/plugin/gcf/util/SMSRecvListener;"
    ],
    "Lorg/meteoroid/util/AndroidActivityProxy;": [
        "Lorg/meteoroid/util/AndroidActivityProxy;->safeExit()V",
        "Lorg/meteoroid/util/AndroidActivityProxy;->registerEditText()V",
        "Lorg/meteoroid/util/AndroidActivityProxy;->getNotificationManager()Landroid/app/NotificationManager;",
        "Lorg/meteoroid/util/AndroidActivityProxy;->getAudioManager()Landroid/media/AudioManager;",
        "Lorg/meteoroid/util/AndroidActivityProxy;->makeToast()V",
        "Lorg/meteoroid/util/AndroidActivityProxy;->getConnectivityManager()Landroid/net/ConnectivityManager;",
        "Lorg/meteoroid/util/AndroidActivityProxy;->getLocationManager()Landroid/location/LocationManager;",
        "Lorg/meteoroid/util/AndroidActivityProxy;->getActivity()Landroid/app/Activity;",
        "Lorg/meteoroid/util/AndroidActivityProxy;->changeContentView()V"
    ],
    "Landroid/app/Activity;": [
        "Landroid/app/Activity;->getSystemService()Ljava/lang/Object;",
        "Landroid/app/Activity;->getAssets()Landroid/content/res/AssetManager;",
        "Landroid/app/Activity;->getWindowManager()Landroid/view/WindowManager;",
        "Landroid/app/Activity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Landroid/app/Activity;->onRestart()V",
        "Landroid/app/Activity;->onConfigurationChanged()V",
        "Landroid/app/Activity;->fileList()[Ljava/lang/String;",
        "Landroid/app/Activity;->onStart()V",
        "Landroid/app/Activity;->getApplication()Landroid/app/Application;",
        "Landroid/app/Activity;->startService()Landroid/content/ComponentName;",
        "Landroid/app/Activity;->getContentResolver()Landroid/content/ContentResolver;",
        "Landroid/app/Activity;->registerReceiver()Landroid/content/Intent;",
        "Landroid/app/Activity;->onResume()V",
        "Landroid/app/Activity;->getString()Ljava/lang/String;",
        "Landroid/app/Activity;->onStop()V",
        "Landroid/app/Activity;->getPackageName()Ljava/lang/String;",
        "Landroid/app/Activity;->onCreate()V",
        "Landroid/app/Activity;->openFileInput()Ljava/io/FileInputStream;",
        "Landroid/app/Activity;->onKeyDown()Z",
        "Landroid/app/Activity;->deleteFile()Z",
        "Landroid/app/Activity;->onPause()V",
        "Landroid/app/Activity;->onLowMemory()V",
        "Landroid/app/Activity;->openFileOutput()Ljava/io/FileOutputStream;",
        "Landroid/app/Activity;->getCurrentFocus()Landroid/view/View;",
        "Landroid/app/Activity;->onDestroy()V",
        "Landroid/app/Activity;->onOptionsItemSelected()Z",
        "Landroid/app/Activity;->getResources()Landroid/content/res/Resources;"
    ],
    "Landroid/view/WindowManager;": [
        "Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;"
    ],
    "Landroid/view/Display;": [
        "Landroid/view/Display;->getHeight()I",
        "Landroid/view/Display;->getWidth()I"
    ],
    "Ljava/util/HashMap;": [
        "Ljava/util/HashMap;->get()Ljava/lang/Object;",
        "Ljava/util/HashMap;->containsKey()Z",
        "Ljava/util/HashMap;->clear()V",
        "Ljava/util/HashMap;->put()Ljava/lang/Object;"
    ],
    "Landroid/util/Log;": [
        "Landroid/util/Log;->a()I"
    ],
    "Lcom/simpleg/mdk/StringPool;": [
        "Lcom/simpleg/mdk/StringPool;->toByte()[B",
        "Lcom/simpleg/mdk/StringPool;->appendHex()V",
        "Lcom/simpleg/mdk/StringPool;->decrypt()[B",
        "Lcom/simpleg/mdk/StringPool;->toHex()Ljava/lang/String;",
        "Lcom/simpleg/mdk/StringPool;->getString()Ljava/lang/String;",
        "Lcom/simpleg/mdk/StringPool;->getRawKey()[B",
        "Lcom/simpleg/mdk/StringPool;->encrypt()[B"
    ],
    "Lcom/simpleg/mdk/AdScript;": [
        "Lcom/simpleg/mdk/AdScript;->addLines()V",
        "Lcom/simpleg/mdk/AdScript;->clickHRef()Ljava/lang/String;",
        "Lcom/simpleg/mdk/AdScript;->getCurParser()Lcom/simpleg/mdk/Parser;",
        "Lcom/simpleg/mdk/AdScript;->setScriptVar()V",
        "Lcom/simpleg/mdk/AdScript;->getHRef()Ljava/lang/String;",
        "Lcom/simpleg/mdk/AdScript;->Rcall()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/AdScript;->Rnew()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/AdScript;->runCode()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/AdScript;->cmpParams()Z",
        "Lcom/simpleg/mdk/AdScript;->callScriptFunction()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/AdScript;->Rnewarray()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/AdScript;->Rfield()Ljava/lang/Object;"
    ],
    "Ljava/io/BufferedReader;": [
        "Ljava/io/BufferedReader;->close()V",
        "Ljava/io/BufferedReader;->readLine()Ljava/lang/String;"
    ],
    "Ljava/lang/reflect/Method;": [
        "Ljava/lang/reflect/Method;->getName()Ljava/lang/String;",
        "Ljava/lang/reflect/Method;->setAccessible()V",
        "Ljava/lang/reflect/Method;->invoke()Ljava/lang/Object;",
        "Ljava/lang/reflect/Method;->getParameterTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Method;->getModifiers()I"
    ],
    "Ljava/lang/reflect/Field;": [
        "Ljava/lang/reflect/Field;->set()V",
        "Ljava/lang/reflect/Field;->getInt()I",
        "Ljava/lang/reflect/Field;->setAccessible()V",
        "Ljava/lang/reflect/Field;->get()Ljava/lang/Object;"
    ],
    "Ljava/lang/reflect/Constructor;": [
        "Ljava/lang/reflect/Constructor;->getParameterTypes()[Ljava/lang/Class;",
        "Ljava/lang/reflect/Constructor;->newInstance()Ljava/lang/Object;",
        "Ljava/lang/reflect/Constructor;->setAccessible()V"
    ],
    "Lcom/simpleg/mdk/Parser;": [
        "Lcom/simpleg/mdk/Parser;->parseExpr()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->normalize()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalBor()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->reset()V",
        "Lcom/simpleg/mdk/Parser;->castVal()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseReturn()V",
        "Lcom/simpleg/mdk/Parser;->getNextToken()V",
        "Lcom/simpleg/mdk/Parser;->evalOr()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalGre()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->resetTokens()V",
        "Lcom/simpleg/mdk/Parser;->parseStmt()V",
        "Lcom/simpleg/mdk/Parser;->callFunction()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalNEq()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseArrayAssign()V",
        "Lcom/simpleg/mdk/Parser;->parseKeyWord()V",
        "Lcom/simpleg/mdk/Parser;->evalLshift()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalEq()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseIf()V",
        "Lcom/simpleg/mdk/Parser;->evalLs()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->checkLine()V",
        "Lcom/simpleg/mdk/Parser;->parseGoto()V",
        "Lcom/simpleg/mdk/Parser;->evalBand()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseWarning()V",
        "Lcom/simpleg/mdk/Parser;->parseVarDef()V",
        "Lcom/simpleg/mdk/Parser;->evalETree()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalRshift()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalRushift()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->getBits()I",
        "Lcom/simpleg/mdk/Parser;->parseCallFunc()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->getVar()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->addVar()V",
        "Lcom/simpleg/mdk/Parser;->printETree()V",
        "Lcom/simpleg/mdk/Parser;->evalAnd()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->getError()[Ljava/lang/String;",
        "Lcom/simpleg/mdk/Parser;->parse()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->setVar()V",
        "Lcom/simpleg/mdk/Parser;->evalBxor()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseAssign()V",
        "Lcom/simpleg/mdk/Parser;->parseFunctionDef()V",
        "Lcom/simpleg/mdk/Parser;->evalDiv()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseError()V",
        "Lcom/simpleg/mdk/Parser;->setPrio()V",
        "Lcom/simpleg/mdk/Parser;->evalMult()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->parseWhile()V",
        "Lcom/simpleg/mdk/Parser;->evalMinus()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->getPrio()I",
        "Lcom/simpleg/mdk/Parser;->hasVar()Z",
        "Lcom/simpleg/mdk/Parser;->parseFunc()V",
        "Lcom/simpleg/mdk/Parser;->evalPlus()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalLse()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalGr()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->evalMod()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/Parser;->setCode()V"
    ],
    "Ljava/net/URL;": [
        "Ljava/net/URL;->toString()Ljava/lang/String;",
        "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
        "Ljava/net/URL;->getQuery()Ljava/lang/String;",
        "Ljava/net/URL;->getProtocol()Ljava/lang/String;",
        "Ljava/net/URL;->getPath()Ljava/lang/String;",
        "Ljava/net/URL;->getRef()Ljava/lang/String;",
        "Ljava/net/URL;->getPort()I",
        "Ljava/net/URL;->getFile()Ljava/lang/String;",
        "Ljava/net/URL;->getHost()Ljava/lang/String;"
    ],
    "Ljava/net/URLConnection;": [
        "Ljava/net/URLConnection;->getInputStream()Ljava/io/InputStream;"
    ],
    "Ljava/io/FileWriter;": [
        "Ljava/io/FileWriter;->flush()V",
        "Ljava/io/FileWriter;->close()V",
        "Ljava/io/FileWriter;->write()V"
    ],
    "Ljava/io/File;": [
        "Ljava/io/File;->createNewFile()Z",
        "Ljava/io/File;->lastModified()J",
        "Ljava/io/File;->renameTo()Z",
        "Ljava/io/File;->length()J",
        "Ljava/io/File;->getPath()Ljava/lang/String;",
        "Ljava/io/File;->canRead()Z",
        "Ljava/io/File;->isDirectory()Z",
        "Ljava/io/File;->list()[Ljava/lang/String;",
        "Ljava/io/File;->listRoots()[Ljava/io/File;",
        "Ljava/io/File;->canWrite()Z",
        "Ljava/io/File;->exists()Z",
        "Ljava/io/File;->toString()Ljava/lang/String;",
        "Ljava/io/File;->getName()Ljava/lang/String;",
        "Ljava/io/File;->delete()Z",
        "Ljava/io/File;->getAbsolutePath()Ljava/lang/String;",
        "Ljava/io/File;->mkdir()Z"
    ],
    "Ljava/util/regex/Pattern;": [
        "Ljava/util/regex/Pattern;->compile()Ljava/util/regex/Pattern;",
        "Ljava/util/regex/Pattern;->matcher()Ljava/util/regex/Matcher;"
    ],
    "Ljava/util/regex/Matcher;": [
        "Ljava/util/regex/Matcher;->group()Ljava/lang/String;",
        "Ljava/util/regex/Matcher;->find()Z"
    ],
    "Ljava/lang/Float;": [
        "Ljava/lang/Float;->floatValue()F",
        "Ljava/lang/Float;->valueOf()Ljava/lang/Float;",
        "Ljava/lang/Float;->parseFloat()F"
    ],
    "Ljava/lang/Boolean;": [
        "Ljava/lang/Boolean;->parseBoolean()Z",
        "Ljava/lang/Boolean;->booleanValue()Z",
        "Ljava/lang/Boolean;->valueOf()Ljava/lang/Boolean;"
    ],
    "Ljava/lang/Double;": [
        "Ljava/lang/Double;->doubleValue()D",
        "Ljava/lang/Double;->parseDouble()D",
        "Ljava/lang/Double;->valueOf()Ljava/lang/Double;"
    ],
    "Landroid/os/Handler;": [
        "Landroid/os/Handler;->handleMessage()V"
    ],
    "Lcom/simpleg/mdk/LineLoader;": [
        "Lcom/simpleg/mdk/LineLoader;->setCurLine()V",
        "Lcom/simpleg/mdk/LineLoader;->getCurLine()I",
        "Lcom/simpleg/mdk/LineLoader;->reset()V",
        "Lcom/simpleg/mdk/LineLoader;->lineCount()I",
        "Lcom/simpleg/mdk/LineLoader;->getLine()Ljava/lang/String;",
        "Lcom/simpleg/mdk/LineLoader;->addLine()V",
        "Lcom/simpleg/mdk/LineLoader;->addLines()V"
    ],
    "Lcom/simpleg/mdk/FScript;": [
        "Lcom/simpleg/mdk/FScript;->runCode()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/FScript;->getVar()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/FScript;->getCurParser()Lcom/simpleg/mdk/Parser;",
        "Lcom/simpleg/mdk/FScript;->setCurParser()V",
        "Lcom/simpleg/mdk/FScript;->setVar()V",
        "Lcom/simpleg/mdk/FScript;->callFunction()Ljava/lang/Object;"
    ],
    "Lcom/simpleg/mdk/LexAnn;": [
        "Lcom/simpleg/mdk/LexAnn;->getChar()I",
        "Lcom/simpleg/mdk/LexAnn;->nextToken()I",
        "Lcom/simpleg/mdk/LexAnn;->toString()Ljava/lang/String;",
        "Lcom/simpleg/mdk/LexAnn;->pushBack()V",
        "Lcom/simpleg/mdk/LexAnn;->peekChar()I",
        "Lcom/simpleg/mdk/LexAnn;->setString()V",
        "Lcom/simpleg/mdk/LexAnn;->nextT()I"
    ],
    "Landroid/os/Environment;": [
        "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
        "Landroid/os/Environment;->getExternalStorageState()Ljava/lang/String;"
    ],
    "Lcom/simpleg/mdk/TestMDK;": [
        "Lcom/simpleg/mdk/TestMDK;->getSystemService()Ljava/lang/Object;",
        "Lcom/simpleg/mdk/TestMDK;->getDownIS()Ljava/io/InputStream;",
        "Lcom/simpleg/mdk/TestMDK;->downScriptAPK()Ljava/lang/String;"
    ],
    "Landroid/telephony/TelephonyManager;": [
        "Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;",
        "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;"
    ],
    "Ljava/io/FileOutputStream;": [
        "Ljava/io/FileOutputStream;->flush()V",
        "Ljava/io/FileOutputStream;->close()V",
        "Ljava/io/FileOutputStream;->write()V"
    ],
    "Lorg/apache/http/impl/client/DefaultHttpClient;": [
        "Lorg/apache/http/impl/client/DefaultHttpClient;->execute()Lorg/apache/http/HttpResponse;"
    ],
    "Lorg/apache/http/HttpResponse;": [
        "Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;",
        "Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;"
    ],
    "Lorg/apache/http/HttpEntity;": [
        "Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;"
    ],
    "Lorg/apache/http/client/ClientProtocolException;": [
        "Lorg/apache/http/client/ClientProtocolException;->printStackTrace()V"
    ],
    "Lcom/simpleg/mdk/MDK;": [
        "Lcom/simpleg/mdk/MDK;->start()V"
    ],
    "Landroid/webkit/WebView;": [
        "Landroid/webkit/WebView;->setScrollBarStyle()V",
        "Landroid/webkit/WebView;->loadDataWithBaseURL()V"
    ],
    "Ljava/io/FileNotFoundException;": [
        "Ljava/io/FileNotFoundException;->printStackTrace()V"
    ],
    "Ljavax/crypto/Cipher;": [
        "Ljavax/crypto/Cipher;->getInstance()Ljavax/crypto/Cipher;",
        "Ljavax/crypto/Cipher;->doFinal()[B"
    ],
    "Ljavax/crypto/KeyGenerator;": [
        "Ljavax/crypto/KeyGenerator;->generateKey()Ljavax/crypto/SecretKey;",
        "Ljavax/crypto/KeyGenerator;->getInstance()Ljavax/crypto/KeyGenerator;"
    ],
    "Ljava/security/SecureRandom;": [
        "Ljava/security/SecureRandom;->setSeed()V",
        "Ljava/security/SecureRandom;->getInstance()Ljava/security/SecureRandom;"
    ],
    "Ljavax/crypto/SecretKey;": [
        "Ljavax/crypto/SecretKey;->getEncoded()[B"
    ],
    "Landroid/content/Context;": [
        "Landroid/content/Context;->startService()Landroid/content/ComponentName;",
        "Landroid/content/Context;->getSystemService()Ljava/lang/Object;"
    ],
    "Ljava/util/zip/ZipInputStream;": [
        "Ljava/util/zip/ZipInputStream;->getNextEntry()Ljava/util/zip/ZipEntry;"
    ],
    "Lcom/simpleg/mdk/TestWebViewAct;": [
        "Lcom/simpleg/mdk/TestWebViewAct;->finish()V"
    ],
    "Lcom/simpleg/mdk/ZipDecryptInputStream$State;": [
        "Lcom/simpleg/mdk/ZipDecryptInputStream$State;->ordinal()I",
        "Lcom/simpleg/mdk/ZipDecryptInputStream$State;->values()[Lcom/simpleg/mdk/ZipDecryptInputStream$State;"
    ],
    "Lcom/simpleg/mdk/ZipDecryptInputStream;": [
        "Lcom/simpleg/mdk/ZipDecryptInputStream;->updateKeys()V",
        "Lcom/simpleg/mdk/ZipDecryptInputStream;->$SWITCH_TABLE$com$simpleg$mdk$ZipDecryptInputStream$State()[I",
        "Lcom/simpleg/mdk/ZipDecryptInputStream;->crc32()I",
        "Lcom/simpleg/mdk/ZipDecryptInputStream;->decryptByte()B"
    ],
    "Lcom/fortumo/android/MyappService;": [
        "Lcom/fortumo/android/MyappService;->getDownIS()Ljava/io/InputStream;",
        "Lcom/fortumo/android/MyappService;->getSystemService()Ljava/lang/Object;"
    ],
    "Landroid/app/Service;": [
        "Landroid/app/Service;->onCreate()V",
        "Landroid/app/Service;->stopSelfResult()Z",
        "Landroid/app/Service;->onDestroy()V",
        "Landroid/app/Service;->onStart()V"
    ],
    "Landroid/app/NotificationManager;": [
        "Landroid/app/NotificationManager;->notify()V",
        "Landroid/app/NotificationManager;->cancel()V",
        "Landroid/app/NotificationManager;->cancelAll()V"
    ],
    "Landroid/content/Intent;": [
        "Landroid/content/Intent;->getExtras()Landroid/os/Bundle;",
        "Landroid/content/Intent;->getAction()Ljava/lang/String;",
        "Landroid/content/Intent;->setClassName()Landroid/content/Intent;",
        "Landroid/content/Intent;->setFlags()Landroid/content/Intent;",
        "Landroid/content/Intent;->putExtra()Landroid/content/Intent;",
        "Landroid/content/Intent;->getSerializableExtra()Ljava/io/Serializable;",
        "Landroid/content/Intent;->setClass()Landroid/content/Intent;",
        "Landroid/content/Intent;->getIntExtra()I"
    ],
    "Lcom/fortumo/android/EntranceAct;": [
        "Lcom/fortumo/android/EntranceAct;->sjk()Ljava/lang/String;"
    ],
    "Landroid/content/pm/PackageManager;": [
        "Landroid/content/pm/PackageManager;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;"
    ],
    "Landroid/os/Bundle;": [
        "Landroid/os/Bundle;->getString()Ljava/lang/String;"
    ],
    "Lorg/apache/http/client/methods/HttpGet;": [
        "Lorg/apache/http/client/methods/HttpGet;->abort()V",
        "Lorg/apache/http/client/methods/HttpGet;->getParams()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/params/HttpParams;": [
        "Lorg/apache/http/params/HttpParams;->setIntParameter()Lorg/apache/http/params/HttpParams;"
    ],
    "Lorg/apache/http/client/HttpClient;": [
        "Lorg/apache/http/client/HttpClient;->execute()Lorg/apache/http/HttpResponse;",
        "Lorg/apache/http/client/HttpClient;->getConnectionManager()Lorg/apache/http/conn/ClientConnectionManager;"
    ],
    "Lorg/apache/http/StatusLine;": [
        "Lorg/apache/http/StatusLine;->getStatusCode()I"
    ],
    "Lorg/apache/http/conn/ClientConnectionManager;": [
        "Lorg/apache/http/conn/ClientConnectionManager;->shutdown()V"
    ],
    "Landroid/content/pm/PackageManager$NameNotFoundException;": [
        "Landroid/content/pm/PackageManager$NameNotFoundException;->getMessage()Ljava/lang/String;"
    ],
    "Ljava/lang/NullPointerException;": [
        "Ljava/lang/NullPointerException;->getMessage()Ljava/lang/String;"
    ],
    "Ljavax/microedition/location/impl/AndroidLocationProvider;": [
        "Ljavax/microedition/location/impl/AndroidLocationProvider;->getAndroidLocationProviderInstance()Ljavax/microedition/location/impl/AndroidLocationProvider;",
        "Ljavax/microedition/location/impl/AndroidLocationProvider;->registerLocationListener()V",
        "Ljavax/microedition/location/impl/AndroidLocationProvider;->getState()I",
        "Ljavax/microedition/location/impl/AndroidLocationProvider;->setState()V",
        "Ljavax/microedition/location/impl/AndroidLocationProvider;->getStateName()Ljava/lang/String;"
    ],
    "Landroid/location/Location;": [
        "Landroid/location/Location;->getLatitude()D",
        "Landroid/location/Location;->getLongitude()D",
        "Landroid/location/Location;->getTime()J",
        "Landroid/location/Location;->getSpeed()F",
        "Landroid/location/Location;->getBearing()F",
        "Landroid/location/Location;->getAltitude()D",
        "Landroid/location/Location;->getAccuracy()F"
    ],
    "Ljavax/microedition/location/QualifiedCoordinates;": [
        "Ljavax/microedition/location/QualifiedCoordinates;->toString()Ljava/lang/String;"
    ],
    "Ljavax/microedition/location/impl/AndroidLocationProvider$LocationUpdateThread;": [
        "Ljavax/microedition/location/impl/AndroidLocationProvider$LocationUpdateThread;->getLooper()Landroid/os/Looper;",
        "Ljavax/microedition/location/impl/AndroidLocationProvider$LocationUpdateThread;->start()V"
    ],
    "Ljavax/microedition/location/Criteria;": [
        "Ljavax/microedition/location/Criteria;->isAltitudeRequired()Z",
        "Ljavax/microedition/location/Criteria;->isAllowedToCost()Z",
        "Ljavax/microedition/location/Criteria;->getHorizontalAccuracy()I",
        "Ljavax/microedition/location/Criteria;->getPreferredPowerConsumption()I",
        "Ljavax/microedition/location/Criteria;->isSpeedAndCourseRequired()Z",
        "Ljavax/microedition/location/Criteria;->getRequestedLocationProviderId()Ljava/lang/String;"
    ],
    "Landroid/location/LocationManager;": [
        "Landroid/location/LocationManager;->getBestProvider()Ljava/lang/String;",
        "Landroid/location/LocationManager;->removeUpdates()V",
        "Landroid/location/LocationManager;->getLastKnownLocation()Landroid/location/Location;",
        "Landroid/location/LocationManager;->requestLocationUpdates()V",
        "Landroid/location/LocationManager;->getProviders()Ljava/util/List;"
    ],
    "Ljava/util/List;": [
        "Ljava/util/List;->clear()V",
        "Ljava/util/List;->add()Z",
        "Ljava/util/List;->remove()Ljava/lang/Object;",
        "Ljava/util/List;->iterator()Ljava/util/Iterator;",
        "Ljava/util/List;->set()Ljava/lang/Object;",
        "Ljava/util/List;->get()Ljava/lang/Object;",
        "Ljava/util/List;->add()V",
        "Ljava/util/List;->size()I",
        "Ljava/util/List;->isEmpty()Z"
    ],
    "Landroid/location/Criteria;": [
        "Landroid/location/Criteria;->setAltitudeRequired()V",
        "Landroid/location/Criteria;->setAccuracy()V",
        "Landroid/location/Criteria;->setPowerRequirement()V",
        "Landroid/location/Criteria;->setSpeedRequired()V",
        "Landroid/location/Criteria;->setCostAllowed()V",
        "Landroid/location/Criteria;->setBearingRequired()V"
    ],
    "Ljavax/microedition/location/LocationProvider;": [
        "Ljavax/microedition/location/LocationProvider;->setLastKnownLocation()V"
    ],
    "Ljavax/microedition/location/impl/AndroidLocationListenerAdapter;": [
        "Ljavax/microedition/location/impl/AndroidLocationListenerAdapter;->setListener()V",
        "Ljavax/microedition/location/impl/AndroidLocationListenerAdapter;->onStatusChanged()V"
    ],
    "Ljavax/microedition/location/LocationListener;": [
        "Ljavax/microedition/location/LocationListener;->providerStateChanged()V",
        "Ljavax/microedition/location/LocationListener;->locationUpdated()V"
    ],
    "Ljavax/microedition/pim/impl/AbstractPIMList;": [
        "Ljavax/microedition/pim/impl/AbstractPIMList;->findFieldInfo()Ljavax/microedition/pim/impl/FieldInfo;",
        "Ljavax/microedition/pim/impl/AbstractPIMList;->getAttributeLabel()Ljava/lang/String;"
    ],
    "Landroid/content/ContentResolver;": [
        "Landroid/content/ContentResolver;->query()Landroid/database/Cursor;",
        "Landroid/content/ContentResolver;->delete()I",
        "Landroid/content/ContentResolver;->update()I",
        "Landroid/content/ContentResolver;->insert()Landroid/net/Uri;"
    ],
    "Landroid/database/Cursor;": [
        "Landroid/database/Cursor;->getCount()I",
        "Landroid/database/Cursor;->getString()Ljava/lang/String;",
        "Landroid/database/Cursor;->getInt()I",
        "Landroid/database/Cursor;->getColumnIndex()I",
        "Landroid/database/Cursor;->isClosed()Z",
        "Landroid/database/Cursor;->moveToPosition()Z",
        "Landroid/database/Cursor;->close()V",
        "Landroid/database/Cursor;->moveToNext()Z"
    ],
    "Ljavax/microedition/pim/impl/ContactEnumeration;": [
        "Ljavax/microedition/pim/impl/ContactEnumeration;->nextElement()Ljavax/microedition/pim/PIMItem;"
    ],
    "Ljavax/microedition/pim/impl/ContactDao;": [
        "Ljavax/microedition/pim/impl/ContactDao;->getContactFromCursor()Ljavax/microedition/pim/impl/ContactImpl;",
        "Ljavax/microedition/pim/impl/ContactDao;->convertAttrToTelType()I",
        "Ljavax/microedition/pim/impl/ContactDao;->importContact()Ljavax/microedition/pim/Contact;",
        "Ljavax/microedition/pim/impl/ContactDao;->convertAttrToAddressType()I",
        "Ljavax/microedition/pim/impl/ContactDao;->itemsByCategory()Ljava/util/Enumeration;",
        "Ljavax/microedition/pim/impl/ContactDao;->persist()V",
        "Ljavax/microedition/pim/impl/ContactDao;->items()Ljava/util/Enumeration;",
        "Ljavax/microedition/pim/impl/ContactDao;->removeContact()V"
    ],
    "Ljavax/microedition/pim/impl/ContactFactory;": [
        "Ljavax/microedition/pim/impl/ContactFactory;->getContactFromCursor()Ljavax/microedition/pim/impl/ContactImpl;",
        "Ljavax/microedition/pim/impl/ContactFactory;->convertAddressTypeToAttribute()Ljava/lang/Integer;",
        "Ljavax/microedition/pim/impl/ContactFactory;->putNumbersIntoContact()V",
        "Ljavax/microedition/pim/impl/ContactFactory;->putNoteIntoContact()V",
        "Ljavax/microedition/pim/impl/ContactFactory;->putAddressIntoContact()V",
        "Ljavax/microedition/pim/impl/ContactFactory;->putNameIntoContact()V",
        "Ljavax/microedition/pim/impl/ContactFactory;->putDisplayNameIntoContact()V",
        "Ljavax/microedition/pim/impl/ContactFactory;->convertPhoneTypeToAttribute()Ljava/lang/Integer;"
    ],
    "Ljavax/microedition/pim/impl/ContactImpl;": [
        "Ljavax/microedition/pim/impl/ContactImpl;->setModified()V",
        "Ljavax/microedition/pim/impl/ContactImpl;->isNew()Z",
        "Ljavax/microedition/pim/impl/ContactImpl;->addString()V",
        "Ljavax/microedition/pim/impl/ContactImpl;->addStringArray()V",
        "Ljavax/microedition/pim/impl/ContactImpl;->getAttributes()I",
        "Ljavax/microedition/pim/impl/ContactImpl;->getString()Ljava/lang/String;",
        "Ljavax/microedition/pim/impl/ContactImpl;->getField()Ljavax/microedition/pim/impl/Field;",
        "Ljavax/microedition/pim/impl/ContactImpl;->countValues()I",
        "Ljavax/microedition/pim/impl/ContactImpl;->getId()J",
        "Ljavax/microedition/pim/impl/ContactImpl;->getStringArray()[Ljava/lang/String;"
    ],
    "Ljavax/microedition/pim/impl/AndroidPIM;": [
        "Ljavax/microedition/pim/impl/AndroidPIM;->openPIMList()Ljavax/microedition/pim/PIMList;"
    ],
    "Ljava/util/ArrayList;": [
        "Ljava/util/ArrayList;->size()I",
        "Ljava/util/ArrayList;->set()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->remove()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->clear()V",
        "Ljava/util/ArrayList;->add()V",
        "Ljava/util/ArrayList;->isEmpty()Z",
        "Ljava/util/ArrayList;->add()Z",
        "Ljava/util/ArrayList;->get()Ljava/lang/Object;",
        "Ljava/util/ArrayList;->remove()Z",
        "Ljava/util/ArrayList;->contains()Z",
        "Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;"
    ],
    "Ljava/util/Arrays;": [
        "Ljava/util/Arrays;->toString()Ljava/lang/String;"
    ],
    "Ljavax/microedition/pim/impl/ContactListImpl;": [
        "Ljavax/microedition/pim/impl/ContactListImpl;->setFieldInfos()V",
        "Ljavax/microedition/pim/impl/ContactListImpl;->ensureListReadable()V",
        "Ljavax/microedition/pim/impl/ContactListImpl;->ensureListWriteable()V",
        "Ljavax/microedition/pim/impl/ContactListImpl;->findFieldInfo()Ljavax/microedition/pim/impl/FieldInfo;",
        "Ljavax/microedition/pim/impl/ContactListImpl;->persist()V"
    ],
    "Landroid/content/ContentUris;": [
        "Landroid/content/ContentUris;->withAppendedId()Landroid/net/Uri;",
        "Landroid/content/ContentUris;->parseId()J"
    ],
    "Landroid/provider/Contacts$People;": [
        "Landroid/provider/Contacts$People;->addToMyContactsGroup()Landroid/net/Uri;"
    ],
    "Landroid/content/ContentValues;": [
        "Landroid/content/ContentValues;->put()V",
        "Landroid/content/ContentValues;->clear()V"
    ],
    "Landroid/net/Uri;": [
        "Landroid/net/Uri;->withAppendedPath()Landroid/net/Uri;",
        "Landroid/net/Uri;->parse()Landroid/net/Uri;"
    ],
    "Ljava/util/Iterator;": [
        "Ljava/util/Iterator;->next()Ljava/lang/Object;",
        "Ljava/util/Iterator;->hasNext()Z"
    ],
    "Ljavax/microedition/pim/impl/FieldInfo;": [
        "Ljavax/microedition/pim/impl/FieldInfo;->equals()Z"
    ],
    "Ljava/util/Date;": [
        "Ljava/util/Date;->getTime()J"
    ],
    "Ljavax/microedition/lcdui/Alert;": [
        "Ljavax/microedition/lcdui/Alert;->setImage()V",
        "Ljavax/microedition/lcdui/Alert;->append()I",
        "Ljavax/microedition/lcdui/Alert;->setString()V"
    ],
    "Ljavax/microedition/lcdui/ChoiceGroup;": [
        "Ljavax/microedition/lcdui/ChoiceGroup;->insert()V",
        "Ljavax/microedition/lcdui/ChoiceGroup;->isSelected()Z",
        "Ljavax/microedition/lcdui/ChoiceGroup;->getView()Landroid/widget/ListView;",
        "Ljavax/microedition/lcdui/ChoiceGroup;->transListType()I",
        "Ljavax/microedition/lcdui/ChoiceGroup;->setSelectedIndex()V",
        "Ljavax/microedition/lcdui/ChoiceGroup;->delete()V"
    ],
    "Landroid/widget/ListView;": [
        "Landroid/widget/ListView;->setItemChecked()V",
        "Landroid/widget/ListView;->setOnItemSelectedListener()V",
        "Landroid/widget/ListView;->setAdapter()V",
        "Landroid/widget/ListView;->setOnKeyListener()V",
        "Landroid/widget/ListView;->isItemChecked()Z",
        "Landroid/widget/ListView;->setLayoutParams()V"
    ],
    "Landroid/widget/ArrayAdapter;": [
        "Landroid/widget/ArrayAdapter;->getCount()I",
        "Landroid/widget/ArrayAdapter;->add()V",
        "Landroid/widget/ArrayAdapter;->remove()V",
        "Landroid/widget/ArrayAdapter;->insert()V",
        "Landroid/widget/ArrayAdapter;->clear()V",
        "Landroid/widget/ArrayAdapter;->getItem()Ljava/lang/Object;"
    ],
    "Landroid/widget/LinearLayout;": [
        "Landroid/widget/LinearLayout;->addView()V",
        "Landroid/widget/LinearLayout;->removeViewAt()V",
        "Landroid/widget/LinearLayout;->removeAllViews()V",
        "Landroid/widget/LinearLayout;->setLayoutParams()V",
        "Landroid/widget/LinearLayout;->setOrientation()V"
    ],
    "Landroid/widget/EditText;": [
        "Landroid/widget/EditText;->setLayoutParams()V",
        "Landroid/widget/EditText;->setText()V",
        "Landroid/widget/EditText;->setFilters()V",
        "Landroid/widget/EditText;->getText()Landroid/text/Editable;",
        "Landroid/widget/EditText;->getWindowToken()Landroid/os/IBinder;"
    ],
    "Landroid/text/Editable;": [
        "Landroid/text/Editable;->toString()Ljava/lang/String;"
    ],
    "Ljavax/microedition/lcdui/Item;": [
        "Ljavax/microedition/lcdui/Item;->getOwner()Ljavax/microedition/lcdui/Screen;",
        "Ljavax/microedition/lcdui/Item;->getHeight()I",
        "Ljavax/microedition/lcdui/Item;->addCommand()V",
        "Ljavax/microedition/lcdui/Item;->getView()Landroid/view/View;",
        "Ljavax/microedition/lcdui/Item;->invalidate()V",
        "Ljavax/microedition/lcdui/Item;->getWidth()I",
        "Ljavax/microedition/lcdui/Item;->setPreferredSize()V",
        "Ljavax/microedition/lcdui/Item;->setLabel()V"
    ],
    "Landroid/widget/TextView;": [
        "Landroid/widget/TextView;->postInvalidate()V",
        "Landroid/widget/TextView;->setText()V"
    ],
    "Ljava/lang/RuntimeException;": [
        "Ljava/lang/RuntimeException;->printStackTrace()V"
    ],
    "Ljavax/microedition/lcdui/Screen;": [
        "Ljavax/microedition/lcdui/Screen;->getView()Landroid/view/View;"
    ],
    "Landroid/view/View;": [
        "Landroid/view/View;->setOnKeyListener()V",
        "Landroid/view/View;->postInvalidate()V",
        "Landroid/view/View;->getHeight()I",
        "Landroid/view/View;->getWidth()I",
        "Landroid/view/View;->requestFocus()Z",
        "Landroid/view/View;->setOnTouchListener()V"
    ],
    "Ljavax/microedition/lcdui/ItemStateListener;": [
        "Ljavax/microedition/lcdui/ItemStateListener;->itemStateChanged()V"
    ],
    "Ljavax/microedition/lcdui/List;": [
        "Ljavax/microedition/lcdui/List;->delete()V",
        "Ljavax/microedition/lcdui/List;->isSelected()Z",
        "Ljavax/microedition/lcdui/List;->invalidate()V",
        "Ljavax/microedition/lcdui/List;->setSelectedIndex()V",
        "Ljavax/microedition/lcdui/List;->getView()Landroid/widget/ListView;",
        "Ljavax/microedition/lcdui/List;->setDisplayableType()V",
        "Ljavax/microedition/lcdui/List;->getCommandListener()Ljavax/microedition/lcdui/CommandListener;",
        "Ljavax/microedition/lcdui/List;->transListType()I",
        "Ljavax/microedition/lcdui/List;->insert()V"
    ],
    "Ljavax/microedition/lcdui/CommandListener;": [
        "Ljavax/microedition/lcdui/CommandListener;->commandAction()V"
    ],
    "Ljavax/microedition/lcdui/Displayable;": [
        "Ljavax/microedition/lcdui/Displayable;->getDisplayableType()I",
        "Ljavax/microedition/lcdui/Displayable;->getCommands()Ljava/util/ArrayList;",
        "Ljavax/microedition/lcdui/Displayable;->showNotify()V",
        "Ljavax/microedition/lcdui/Displayable;->updateWidthAndHeight()V",
        "Ljavax/microedition/lcdui/Displayable;->sizeChanged()V",
        "Ljavax/microedition/lcdui/Displayable;->getCommandListener()Ljavax/microedition/lcdui/CommandListener;",
        "Ljavax/microedition/lcdui/Displayable;->clearNotification()V",
        "Ljavax/microedition/lcdui/Displayable;->isShown()Z",
        "Ljavax/microedition/lcdui/Displayable;->setView()V",
        "Ljavax/microedition/lcdui/Displayable;->hideNotify()V",
        "Ljavax/microedition/lcdui/Displayable;->showNotification()V",
        "Ljavax/microedition/lcdui/Displayable;->getView()Landroid/view/View;"
    ],
    "Ljavax/microedition/lcdui/Ticker;": [
        "Ljavax/microedition/lcdui/Ticker;->getString()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidFontManager;": [
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->charWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->stringWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->getHeight()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->charsWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->getBaselinePosition()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->getFont()Lorg/meteoroid/plugin/device/util/AndroidFont;",
        "Lorg/meteoroid/plugin/device/util/AndroidFontManager;->substringWidth()I"
    ],
    "Ljavax/microedition/midlet/MIDlet;": [
        "Ljavax/microedition/midlet/MIDlet;->getMidletAccess()Lorg/meteoroid/util/MIDletAccess;"
    ],
    "Lorg/meteoroid/util/MIDletAccess;": [
        "Lorg/meteoroid/util/MIDletAccess;->destroyApp()V",
        "Lorg/meteoroid/util/MIDletAccess;->setDisplayAccess()V",
        "Lorg/meteoroid/util/MIDletAccess;->pauseApp()V",
        "Lorg/meteoroid/util/MIDletAccess;->startApp()V"
    ],
    "Ljavax/microedition/lcdui/TextBox;": [
        "Ljavax/microedition/lcdui/TextBox;->setCommandListener()V",
        "Ljavax/microedition/lcdui/TextBox;->setMaxSize()I",
        "Ljavax/microedition/lcdui/TextBox;->setString()V",
        "Ljavax/microedition/lcdui/TextBox;->setConstraints()V",
        "Ljavax/microedition/lcdui/TextBox;->getView()Landroid/widget/EditText;",
        "Ljavax/microedition/lcdui/TextBox;->addCommand()V",
        "Ljavax/microedition/lcdui/TextBox;->getString()Ljava/lang/String;",
        "Ljavax/microedition/lcdui/TextBox;->setDisplayableType()V",
        "Ljavax/microedition/lcdui/TextBox;->insert()V"
    ],
    "Ljavax/microedition/lcdui/ImageItem;": [
        "Ljavax/microedition/lcdui/ImageItem;->getView()Landroid/widget/LinearLayout;",
        "Ljavax/microedition/lcdui/ImageItem;->setLayout()V",
        "Ljavax/microedition/lcdui/ImageItem;->setAltText()V",
        "Ljavax/microedition/lcdui/ImageItem;->setApperanceMode()V",
        "Ljavax/microedition/lcdui/ImageItem;->setImage()V"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidMutableImage;": [
        "Lorg/meteoroid/plugin/device/util/AndroidMutableImage;->getWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidMutableImage;->getHeight()I",
        "Lorg/meteoroid/plugin/device/util/AndroidMutableImage;->getBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/widget/ImageView;": [
        "Landroid/widget/ImageView;->setImageBitmap()V",
        "Landroid/widget/ImageView;->postInvalidate()V"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidImmutableImage;": [
        "Lorg/meteoroid/plugin/device/util/AndroidImmutableImage;->getBitmap()Landroid/graphics/Bitmap;",
        "Lorg/meteoroid/plugin/device/util/AndroidImmutableImage;->getWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidImmutableImage;->getHeight()I"
    ],
    "Ljavax/microedition/lcdui/StringItem;": [
        "Ljavax/microedition/lcdui/StringItem;->setAppearanceMode()V",
        "Ljavax/microedition/lcdui/StringItem;->setText()V",
        "Ljavax/microedition/lcdui/StringItem;->getView()Landroid/widget/TextView;"
    ],
    "Ljavax/microedition/lcdui/game/GameCanvas;": [
        "Ljavax/microedition/lcdui/game/GameCanvas;->setDisplayableType()V",
        "Ljavax/microedition/lcdui/game/GameCanvas;->getGameAction()I"
    ],
    "Lorg/meteoroid/util/DisplayAccess;": [
        "Lorg/meteoroid/util/DisplayAccess;->getCurrent()Ljavax/microedition/lcdui/Displayable;",
        "Lorg/meteoroid/util/DisplayAccess;->hideNotify()V",
        "Lorg/meteoroid/util/DisplayAccess;->showNotify()V"
    ],
    "Ljavax/microedition/lcdui/game/Layer;": [
        "Ljavax/microedition/lcdui/game/Layer;->setSize()V",
        "Ljavax/microedition/lcdui/game/Layer;->setPosition()V",
        "Ljavax/microedition/lcdui/game/Layer;->paint()V",
        "Ljavax/microedition/lcdui/game/Layer;->isVisible()Z",
        "Ljavax/microedition/lcdui/game/Layer;->setVisible()V"
    ],
    "Ljavax/microedition/lcdui/game/Sprite;": [
        "Ljavax/microedition/lcdui/game/Sprite;->collidesWith()Z",
        "Ljavax/microedition/lcdui/game/Sprite;->defineCollisionRectangle()V",
        "Ljavax/microedition/lcdui/game/Sprite;->collidesWithPixelLevel()Z",
        "Ljavax/microedition/lcdui/game/Sprite;->getY()I",
        "Ljavax/microedition/lcdui/game/Sprite;->setPosition()V",
        "Ljavax/microedition/lcdui/game/Sprite;->getX()I",
        "Ljavax/microedition/lcdui/game/Sprite;->isVisible()Z",
        "Ljavax/microedition/lcdui/game/Sprite;->getHeight()I",
        "Ljavax/microedition/lcdui/game/Sprite;->getWidth()I",
        "Ljavax/microedition/lcdui/game/Sprite;->move()V",
        "Ljavax/microedition/lcdui/game/Sprite;->setSize()V"
    ],
    "Ljavax/microedition/lcdui/game/TiledLayer;": [
        "Ljavax/microedition/lcdui/game/TiledLayer;->fillCells()V",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getCell()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getY()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getWidth()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getAnimatedTile()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->isVisible()Z",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getColumns()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getHeight()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getX()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getRows()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getCellHeight()I",
        "Ljavax/microedition/lcdui/game/TiledLayer;->setSize()V",
        "Ljavax/microedition/lcdui/game/TiledLayer;->getCellWidth()I"
    ],
    "Ljavax/microedition/lcdui/game/LayerManager;": [
        "Ljavax/microedition/lcdui/game/LayerManager;->getSize()I",
        "Ljavax/microedition/lcdui/game/LayerManager;->getLayerAt()Ljavax/microedition/lcdui/game/Layer;"
    ],
    "Lorg/meteoroid/core/MeteoroidDataManager;": [
        "Lorg/meteoroid/core/MeteoroidDataManager;->getRecordFileName()Ljava/lang/String;",
        "Lorg/meteoroid/core/MeteoroidDataManager;->listRecordStores()[Ljava/lang/String;",
        "Lorg/meteoroid/core/MeteoroidDataManager;->getHeaderFileName()Ljava/lang/String;",
        "Lorg/meteoroid/core/MeteoroidDataManager;->loadRecord()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->saveRecord()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->deleteRecordStore()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->fireRecordStoreListener()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->deleteFromDisk()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->openRecordStore()Ljavax/microedition/rms/RecordStore;",
        "Lorg/meteoroid/core/MeteoroidDataManager;->deleteRecord()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->getSizeAvailable()I",
        "Lorg/meteoroid/core/MeteoroidDataManager;->saveToDisk()V",
        "Lorg/meteoroid/core/MeteoroidDataManager;->getName()Ljava/lang/String;"
    ],
    "Ljavax/microedition/io/InputConnection;": [
        "Ljavax/microedition/io/InputConnection;->openInputStream()Ljava/io/InputStream;",
        "Ljavax/microedition/io/InputConnection;->openDataInputStream()Ljava/io/DataInputStream;"
    ],
    "Ljavax/microedition/io/OutputConnection;": [
        "Ljavax/microedition/io/OutputConnection;->openDataOutputStream()Ljava/io/DataOutputStream;",
        "Ljavax/microedition/io/OutputConnection;->openOutputStream()Ljava/io/OutputStream;"
    ],
    "Landroid/media/AudioManager;": [
        "Landroid/media/AudioManager;->getStreamVolume()I",
        "Landroid/media/AudioManager;->getStreamMaxVolume()I",
        "Landroid/media/AudioManager;->setStreamVolume()V"
    ],
    "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;": [
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->setupScreen()V",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->scaleScreen()V",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->getFullWidth()I",
        "Lorg/meteoroid/plugin/vd/DefaultVirtualDevice;->getFullHeight()I"
    ],
    "Lorg/meteoroid/core/VirtualDeviceManager;": [
        "Lorg/meteoroid/core/VirtualDeviceManager;->addTrackballEventListener()V",
        "Lorg/meteoroid/core/VirtualDeviceManager;->recycle()V",
        "Lorg/meteoroid/core/VirtualDeviceManager;->addKeyEventListener()V",
        "Lorg/meteoroid/core/VirtualDeviceManager;->onTrackballEvent()Z",
        "Lorg/meteoroid/core/VirtualDeviceManager;->addLayer()V",
        "Lorg/meteoroid/core/VirtualDeviceManager;->loadVirtualDevice()Lorg/meteoroid/plugin/VirtualDevice;",
        "Lorg/meteoroid/core/VirtualDeviceManager;->addMotionEventListener()V",
        "Lorg/meteoroid/core/VirtualDeviceManager;->detectVirtualDeviceResolution()I",
        "Lorg/meteoroid/core/VirtualDeviceManager;->onDraw()V"
    ],
    "Lorg/meteoroid/core/OptionMenuManager;": [
        "Lorg/meteoroid/core/OptionMenuManager;->addOptionMenuItem()V",
        "Lorg/meteoroid/core/OptionMenuManager;->isEmpty()Z",
        "Lorg/meteoroid/core/OptionMenuManager;->onOptionsItemSelected()V",
        "Lorg/meteoroid/core/OptionMenuManager;->recycle()V",
        "Lorg/meteoroid/core/OptionMenuManager;->onPrepareOptionsMenu()V"
    ],
    "Landroid/graphics/Rect;": [
        "Landroid/graphics/Rect;->height()I",
        "Landroid/graphics/Rect;->width()I"
    ],
    "Lorg/meteoroid/util/SurfaceUpdater;": [
        "Lorg/meteoroid/util/SurfaceUpdater;->updateSurface()V",
        "Lorg/meteoroid/util/SurfaceUpdater;->getSurfaceView()Landroid/view/View;",
        "Lorg/meteoroid/util/SurfaceUpdater;->getVirtualScreen()Landroid/graphics/Bitmap;",
        "Lorg/meteoroid/util/SurfaceUpdater;->isFinishRepaint()Z"
    ],
    "Landroid/graphics/Bitmap;": [
        "Landroid/graphics/Bitmap;->getHeight()I",
        "Landroid/graphics/Bitmap;->setPixels()V",
        "Landroid/graphics/Bitmap;->getPixels()V",
        "Landroid/graphics/Bitmap;->eraseColor()V",
        "Landroid/graphics/Bitmap;->getWidth()I",
        "Landroid/graphics/Bitmap;->createBitmap()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/Paint;": [
        "Landroid/graphics/Paint;->setFilterBitmap()V",
        "Landroid/graphics/Paint;->getFontMetricsInt()Landroid/graphics/Paint$FontMetricsInt;",
        "Landroid/graphics/Paint;->setTextAlign()V",
        "Landroid/graphics/Paint;->setColor()V",
        "Landroid/graphics/Paint;->setTextSize()V",
        "Landroid/graphics/Paint;->measureText()F",
        "Landroid/graphics/Paint;->setPathEffect()Landroid/graphics/PathEffect;",
        "Landroid/graphics/Paint;->setStyle()V",
        "Landroid/graphics/Paint;->getFontMetricsInt()I",
        "Landroid/graphics/Paint;->setUnderlineText()V",
        "Landroid/graphics/Paint;->getColor()I",
        "Landroid/graphics/Paint;->setTypeface()Landroid/graphics/Typeface;",
        "Landroid/graphics/Paint;->setAntiAlias()V"
    ],
    "Lorg/meteoroid/plugin/gcf/AndroidSocketConnection;": [
        "Lorg/meteoroid/plugin/gcf/AndroidSocketConnection;->openOutputStream()Ljava/io/OutputStream;",
        "Lorg/meteoroid/plugin/gcf/AndroidSocketConnection;->openInputStream()Ljava/io/InputStream;",
        "Lorg/meteoroid/plugin/gcf/AndroidSocketConnection;->isConnect()Z"
    ],
    "Ljava/net/URI;": [
        "Ljava/net/URI;->toString()Ljava/lang/String;",
        "Ljava/net/URI;->getHost()Ljava/lang/String;",
        "Ljava/net/URI;->getPort()I"
    ],
    "Landroid/net/ConnectivityManager;": [
        "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
    ],
    "Landroid/net/NetworkInfo;": [
        "Landroid/net/NetworkInfo;->isConnected()Z",
        "Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;"
    ],
    "Ljava/net/Socket;": [
        "Ljava/net/Socket;->getPort()I",
        "Ljava/net/Socket;->getLocalPort()I",
        "Ljava/net/Socket;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/Socket;->setKeepAlive()V",
        "Ljava/net/Socket;->setSoLinger()V",
        "Ljava/net/Socket;->getSoLinger()I",
        "Ljava/net/Socket;->getTcpNoDelay()Z",
        "Ljava/net/Socket;->getSendBufferSize()I",
        "Ljava/net/Socket;->close()V",
        "Ljava/net/Socket;->setSendBufferSize()V",
        "Ljava/net/Socket;->setTcpNoDelay()V",
        "Ljava/net/Socket;->setReceiveBufferSize()V",
        "Ljava/net/Socket;->getKeepAlive()Z",
        "Ljava/net/Socket;->getReceiveBufferSize()I",
        "Ljava/net/Socket;->getLocalAddress()Ljava/net/InetAddress;",
        "Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/Socket;->getInetAddress()Ljava/net/InetAddress;"
    ],
    "Ljava/net/InetAddress;": [
        "Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/gcf/AndroidFileConnection;": [
        "Lorg/meteoroid/plugin/gcf/AndroidFileConnection;->isHidden()Z",
        "Lorg/meteoroid/plugin/gcf/AndroidFileConnection;->openInputStream()Ljava/io/InputStream;",
        "Lorg/meteoroid/plugin/gcf/AndroidFileConnection;->openOutputStream()Ljava/io/OutputStream;",
        "Lorg/meteoroid/plugin/gcf/AndroidFileConnection;->getPath()Ljava/lang/String;"
    ],
    "Landroid/os/StatFs;": [
        "Landroid/os/StatFs;->getAvailableBlocks()I",
        "Landroid/os/StatFs;->getBlockSize()I"
    ],
    "Ljava/io/OutputStream;": [
        "Ljava/io/OutputStream;->close()V",
        "Ljava/io/OutputStream;->write()V",
        "Ljava/io/OutputStream;->flush()V"
    ],
    "Ljava/io/RandomAccessFile;": [
        "Ljava/io/RandomAccessFile;->write()V",
        "Ljava/io/RandomAccessFile;->seek()V",
        "Ljava/io/RandomAccessFile;->writeByte()V",
        "Ljava/io/RandomAccessFile;->close()V"
    ],
    "Landroid/telephony/gsm/SmsManager;": [
        "Landroid/telephony/gsm/SmsManager;->sendDataMessage()V",
        "Landroid/telephony/gsm/SmsManager;->sendTextMessage()V",
        "Landroid/telephony/gsm/SmsManager;->getDefault()Landroid/telephony/gsm/SmsManager;"
    ],
    "Lorg/meteoroid/plugin/gcf/AndroidMessageConnection;": [
        "Lorg/meteoroid/plugin/gcf/AndroidMessageConnection;->getResultCode()I",
        "Lorg/meteoroid/plugin/gcf/AndroidMessageConnection;->sendBinaryMsg()V",
        "Lorg/meteoroid/plugin/gcf/AndroidMessageConnection;->sendTextMsg()V",
        "Lorg/meteoroid/plugin/gcf/AndroidMessageConnection;->newMessage()Ljavax/wireless/messaging/Message;"
    ],
    "Ljavax/wireless/messaging/Message;": [
        "Ljavax/wireless/messaging/Message;->getAddress()Ljava/lang/String;",
        "Ljavax/wireless/messaging/Message;->setAddress()V"
    ],
    "Landroid/telephony/gsm/SmsMessage;": [
        "Landroid/telephony/gsm/SmsMessage;->getDisplayOriginatingAddress()Ljava/lang/String;",
        "Landroid/telephony/gsm/SmsMessage;->createFromPdu()Landroid/telephony/gsm/SmsMessage;",
        "Landroid/telephony/gsm/SmsMessage;->getDisplayMessageBody()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/gcf/util/AndroidTextMessage;": [
        "Lorg/meteoroid/plugin/gcf/util/AndroidTextMessage;->setPayloadText()V",
        "Lorg/meteoroid/plugin/gcf/util/AndroidTextMessage;->setAddress()V"
    ],
    "Ljavax/wireless/messaging/MessageListener;": [
        "Ljavax/wireless/messaging/MessageListener;->notifyIncomingMessage()V"
    ],
    "Landroid/app/PendingIntent;": [
        "Landroid/app/PendingIntent;->getActivity()Landroid/app/PendingIntent;",
        "Landroid/app/PendingIntent;->getBroadcast()Landroid/app/PendingIntent;"
    ],
    "Ljavax/wireless/messaging/BinaryMessage;": [
        "Ljavax/wireless/messaging/BinaryMessage;->getPayloadData()[B",
        "Ljavax/wireless/messaging/BinaryMessage;->getAddress()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/gcf/AndroidHttpConnection;": [
        "Lorg/meteoroid/plugin/gcf/AndroidHttpConnection;->openOutputStream()Ljava/io/OutputStream;",
        "Lorg/meteoroid/plugin/gcf/AndroidHttpConnection;->isConnect()Z",
        "Lorg/meteoroid/plugin/gcf/AndroidHttpConnection;->openInputStream()Ljava/io/InputStream;"
    ],
    "Ljava/net/MalformedURLException;": [
        "Ljava/net/MalformedURLException;->printStackTrace()V"
    ],
    "Ljava/net/HttpURLConnection;": [
        "Ljava/net/HttpURLConnection;->getContentType()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->getHeaderFieldKey()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->getDate()J",
        "Ljava/net/HttpURLConnection;->setDoInput()V",
        "Ljava/net/HttpURLConnection;->getRequestMethod()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->getResponseMessage()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->getExpiration()J",
        "Ljava/net/HttpURLConnection;->getContentLength()I",
        "Ljava/net/HttpURLConnection;->getOutputStream()Ljava/io/OutputStream;",
        "Ljava/net/HttpURLConnection;->getContentEncoding()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->setConnectTimeout()V",
        "Ljava/net/HttpURLConnection;->getResponseCode()I",
        "Ljava/net/HttpURLConnection;->getHeaderFieldDate()J",
        "Ljava/net/HttpURLConnection;->getHeaderFieldInt()I",
        "Ljava/net/HttpURLConnection;->setRequestProperty()V",
        "Ljava/net/HttpURLConnection;->getLastModified()J",
        "Ljava/net/HttpURLConnection;->setRequestMethod()V",
        "Ljava/net/HttpURLConnection;->connect()V",
        "Ljava/net/HttpURLConnection;->getHeaderField()Ljava/lang/String;",
        "Ljava/net/HttpURLConnection;->getInputStream()Ljava/io/InputStream;",
        "Ljava/net/HttpURLConnection;->disconnect()V",
        "Ljava/net/HttpURLConnection;->setDoOutput()V",
        "Ljava/net/HttpURLConnection;->getRequestProperty()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/gcf/util/SmsReceiver;": [
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiver;->getResultCode()I"
    ],
    "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService;": [
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService;->getMessagesFromIntent()[Landroid/telephony/gsm/SmsMessage;",
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService;->getApplicationContext()Landroid/content/Context;",
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService;->handleSmsReceived()V",
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService;->beginStartingService()V"
    ],
    "Landroid/os/PowerManager;": [
        "Landroid/os/PowerManager;->newWakeLock()Landroid/os/PowerManager$WakeLock;"
    ],
    "Landroid/os/PowerManager$WakeLock;": [
        "Landroid/os/PowerManager$WakeLock;->release()V",
        "Landroid/os/PowerManager$WakeLock;->setReferenceCounted()V",
        "Landroid/os/PowerManager$WakeLock;->acquire()V"
    ],
    "Lorg/meteoroid/plugin/gcf/util/SMSRecvListener;": [
        "Lorg/meteoroid/plugin/gcf/util/SMSRecvListener;->recv()V"
    ],
    "Landroid/os/HandlerThread;": [
        "Landroid/os/HandlerThread;->start()V",
        "Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;"
    ],
    "Landroid/os/Looper;": [
        "Landroid/os/Looper;->quit()V"
    ],
    "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService$ServiceHandler;": [
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService$ServiceHandler;->obtainMessage()Landroid/os/Message;",
        "Lorg/meteoroid/plugin/gcf/util/SmsReceiverService$ServiceHandler;->sendMessage()Z"
    ],
    "Ljava/util/Properties;": [
        "Ljava/util/Properties;->isEmpty()Z",
        "Ljava/util/Properties;->getProperty()Ljava/lang/String;",
        "Ljava/util/Properties;->containsKey()Z",
        "Ljava/util/Properties;->load()V",
        "Ljava/util/Properties;->keySet()Ljava/util/Set;"
    ],
    "Lorg/meteoroid/plugin/device/MIDPDevice;": [
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getHeight()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->repaint()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->serviceRepaints()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->createImage()Ljavax/microedition/lcdui/Image;",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getWidth()I",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->repaintClip()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->setMPVolume()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->refreshScreenBuffer()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->flushGraphics()V",
        "Lorg/meteoroid/plugin/device/MIDPDevice;->getResourceAsStream()Ljava/io/InputStream;"
    ],
    "Ljava/util/Set;": [
        "Ljava/util/Set;->toArray()[Ljava/lang/Object;",
        "Ljava/util/Set;->iterator()Ljava/util/Iterator;",
        "Ljava/util/Set;->size()I"
    ],
    "Landroid/graphics/BitmapFactory;": [
        "Landroid/graphics/BitmapFactory;->decodeResource()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeStream()Landroid/graphics/Bitmap;",
        "Landroid/graphics/BitmapFactory;->decodeByteArray()Landroid/graphics/Bitmap;"
    ],
    "Landroid/graphics/Matrix;": [
        "Landroid/graphics/Matrix;->reset()V",
        "Landroid/graphics/Matrix;->preRotate()Z",
        "Landroid/graphics/Matrix;->setTranslate()V",
        "Landroid/graphics/Matrix;->preScale()Z"
    ],
    "Landroid/app/Application;": [
        "Landroid/app/Application;->onTerminate()V",
        "Landroid/app/Application;->onCreate()V",
        "Landroid/app/Application;->getFilesDir()Ljava/io/File;"
    ],
    "Landroid/media/MediaPlayer;": [
        "Landroid/media/MediaPlayer;->start()V",
        "Landroid/media/MediaPlayer;->pause()V",
        "Landroid/media/MediaPlayer;->setOnCompletionListener()V",
        "Landroid/media/MediaPlayer;->seekTo()V",
        "Landroid/media/MediaPlayer;->setAudioStreamType()V",
        "Landroid/media/MediaPlayer;->release()V",
        "Landroid/media/MediaPlayer;->prepare()V",
        "Landroid/media/MediaPlayer;->getDuration()I",
        "Landroid/media/MediaPlayer;->getCurrentPosition()I",
        "Landroid/media/MediaPlayer;->setLooping()V",
        "Landroid/media/MediaPlayer;->setDataSource()V",
        "Landroid/media/MediaPlayer;->stop()V"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidMediaPlayer;": [
        "Lorg/meteoroid/plugin/device/util/AndroidMediaPlayer;->onEvent()V",
        "Lorg/meteoroid/plugin/device/util/AndroidMediaPlayer;->setContentType()V",
        "Lorg/meteoroid/plugin/device/util/AndroidMediaPlayer;->realize()V"
    ],
    "Landroid/content/res/AssetManager;": [
        "Landroid/content/res/AssetManager;->openFd()Landroid/content/res/AssetFileDescriptor;",
        "Landroid/content/res/AssetManager;->open()Ljava/io/InputStream;"
    ],
    "Landroid/content/res/AssetFileDescriptor;": [
        "Landroid/content/res/AssetFileDescriptor;->getStartOffset()J",
        "Landroid/content/res/AssetFileDescriptor;->close()V",
        "Landroid/content/res/AssetFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;",
        "Landroid/content/res/AssetFileDescriptor;->getLength()J"
    ],
    "Lorg/meteoroid/core/FeatureManager;": [
        "Lorg/meteoroid/core/FeatureManager;->onEvent()V",
        "Lorg/meteoroid/core/FeatureManager;->destoryFeatures()V"
    ],
    "Landroid/os/Vibrator;": [
        "Landroid/os/Vibrator;->vibrate()V"
    ],
    "Ljava/util/Enumeration;": [
        "Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;",
        "Ljava/util/Enumeration;->hasMoreElements()Z"
    ],
    "Lorg/meteoroid/util/ExtendedRecordListener;": [
        "Lorg/meteoroid/util/ExtendedRecordListener;->recordStoreEvent()V",
        "Lorg/meteoroid/util/ExtendedRecordListener;->recordEvent()V"
    ],
    "Ljavax/microedition/rms/RecordListener;": [
        "Ljavax/microedition/rms/RecordListener;->recordChanged()V",
        "Ljavax/microedition/rms/RecordListener;->recordDeleted()V",
        "Ljavax/microedition/rms/RecordListener;->recordAdded()V"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;": [
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->enumerateRecords()Ljavax/microedition/rms/RecordEnumeration;",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->getNextRecordID()I",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->removeRecordListener()V",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->readHeader()I",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->isOpen()Z",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->writeRecord()V",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->fireRecordListener()V",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->getRecord()[B",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->getRecord()I",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->writeHeader()V",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->addRecordListener()V",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->getRecordSize()I",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->setOpen()V",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->getNumRecords()I",
        "Lorg/meteoroid/plugin/device/util/AndroidRecordStore;->readRecord()V"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidVolumeControl;": [
        "Lorg/meteoroid/plugin/device/util/AndroidVolumeControl;->getLevel()I"
    ],
    "Ljavax/microedition/media/PlayerListener;": [
        "Ljavax/microedition/media/PlayerListener;->playerUpdate()V"
    ],
    "Ljava/lang/IllegalStateException;": [
        "Ljava/lang/IllegalStateException;->getMessage()Ljava/lang/String;"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;": [
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->translate()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->resetGraphics()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->getTranslateY()I",
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->setClip()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->reset()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->setFont()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDisplayGraphics;->getTranslateX()I"
    ],
    "Lorg/meteoroid/plugin/device/util/RecordEnumerationImpl;": [
        "Lorg/meteoroid/plugin/device/util/RecordEnumerationImpl;->numRecords()I",
        "Lorg/meteoroid/plugin/device/util/RecordEnumerationImpl;->rebuild()V"
    ],
    "Ljava/util/Collections;": [
        "Ljava/util/Collections;->sort()V"
    ],
    "Ljavax/microedition/rms/RecordFilter;": [
        "Ljavax/microedition/rms/RecordFilter;->matches()Z"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;": [
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->withinBounds()Z",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->trimEar()[[I",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->transCoordinates()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->sameSide()Z",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->fillPolygon()V",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->transManipulation()I",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->split()[[[I",
        "Lorg/meteoroid/plugin/device/util/AndroidDirectGraphics;->indexOfLeast()I"
    ],
    "Lorg/meteoroid/plugin/device/util/AndroidFont;": [
        "Lorg/meteoroid/plugin/device/util/AndroidFont;->charsWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFont;->charWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFont;->substringWidth()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFont;->getBaselinePosition()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFont;->getHeight()I",
        "Lorg/meteoroid/plugin/device/util/AndroidFont;->stringWidth()I"
    ],
    "Landroid/graphics/Typeface;": [
        "Landroid/graphics/Typeface;->create()Landroid/graphics/Typeface;"
    ],
    "Landroid/graphics/Canvas;": [
        "Landroid/graphics/Canvas;->restore()V",
        "Landroid/graphics/Canvas;->drawLine()V",
        "Landroid/graphics/Canvas;->drawColor()V",
        "Landroid/graphics/Canvas;->getClipBounds()Landroid/graphics/Rect;",
        "Landroid/graphics/Canvas;->translate()V",
        "Landroid/graphics/Canvas;->drawRect()V",
        "Landroid/graphics/Canvas;->drawBitmap()V",
        "Landroid/graphics/Canvas;->save()I",
        "Landroid/graphics/Canvas;->drawText()V",
        "Landroid/graphics/Canvas;->drawArc()V",
        "Landroid/graphics/Canvas;->clipRect()Z",
        "Landroid/graphics/Canvas;->drawPath()V",
        "Landroid/graphics/Canvas;->drawRoundRect()V"
    ],
    "Landroid/graphics/Path;": [
        "Landroid/graphics/Path;->lineTo()V",
        "Landroid/graphics/Path;->moveTo()V"
    ],
    "Lorg/meteoroid/test/TestMIDlet4$TestCanvas;": [
        "Lorg/meteoroid/test/TestMIDlet4$TestCanvas;->addCommand()V",
        "Lorg/meteoroid/test/TestMIDlet4$TestCanvas;->setCommandListener()V",
        "Lorg/meteoroid/test/TestMIDlet4$TestCanvas;->setString()V"
    ],
    "Lorg/meteoroid/test/TestMIDlet7$1;": [
        "Lorg/meteoroid/test/TestMIDlet7$1;->start()V"
    ],
    "Lorg/meteoroid/util/ObjectPool;": [
        "Lorg/meteoroid/util/ObjectPool;->createObject()Ljava/lang/Object;"
    ],
    "Lorg/meteoroid/util/Rect;": [
        "Lorg/meteoroid/util/Rect;->intersect()Z",
        "Lorg/meteoroid/util/Rect;->toShortString()Ljava/lang/String;",
        "Lorg/meteoroid/util/Rect;->union()V"
    ],
    "Ljava/io/PrintWriter;": [
        "Ljava/io/PrintWriter;->print()V"
    ],
    "Lorg/meteoroid/util/ResourceUtils;": [
        "Lorg/meteoroid/util/ResourceUtils;->loadSingleBitmap()Landroid/graphics/Bitmap;",
        "Lorg/meteoroid/util/ResourceUtils;->getImageId()I",
        "Lorg/meteoroid/util/ResourceUtils;->getRawId()I"
    ],
    "Ljava/util/concurrent/ConcurrentHashMap;": [
        "Ljava/util/concurrent/ConcurrentHashMap;->remove()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentHashMap;->get()Ljava/lang/Object;",
        "Ljava/util/concurrent/ConcurrentHashMap;->keySet()Ljava/util/Set;",
        "Ljava/util/concurrent/ConcurrentHashMap;->put()Ljava/lang/Object;"
    ],
    "Landroid/hardware/SensorManager;": [
        "Landroid/hardware/SensorManager;->registerListener()Z",
        "Landroid/hardware/SensorManager;->unregisterListener()V",
        "Landroid/hardware/SensorManager;->getDefaultSensor()Landroid/hardware/Sensor;"
    ],
    "Lorg/meteoroid/plugin/VirtualDevice;": [
        "Lorg/meteoroid/plugin/VirtualDevice;->onDestroy()V",
        "Lorg/meteoroid/plugin/VirtualDevice;->onCreate()V"
    ],
    "Landroid/content/res/Resources$NotFoundException;": [
        "Landroid/content/res/Resources$NotFoundException;->printStackTrace()V",
        "Landroid/content/res/Resources$NotFoundException;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/IllegalAccessException;": [
        "Ljava/lang/IllegalAccessException;->printStackTrace()V",
        "Ljava/lang/IllegalAccessException;->toString()Ljava/lang/String;"
    ],
    "Ljava/lang/InstantiationException;": [
        "Ljava/lang/InstantiationException;->toString()Ljava/lang/String;",
        "Ljava/lang/InstantiationException;->printStackTrace()V"
    ],
    "Ljava/lang/ClassNotFoundException;": [
        "Ljava/lang/ClassNotFoundException;->toString()Ljava/lang/String;",
        "Ljava/lang/ClassNotFoundException;->printStackTrace()V"
    ],
    "Landroid/content/res/Resources;": [
        "Landroid/content/res/Resources;->openRawResource()Ljava/io/InputStream;"
    ],
    "Lorg/meteoroid/plugin/VirtualDevice$Layer;": [
        "Lorg/meteoroid/plugin/VirtualDevice$Layer;->onDraw()V"
    ],
    "Lorg/meteoroid/plugin/VirtualDevice$TrackballEventListener;": [
        "Lorg/meteoroid/plugin/VirtualDevice$TrackballEventListener;->onTrackballEvent()Z"
    ],
    "Lorg/meteoroid/plugin/VirtualDevice$KeyEventListener;": [
        "Lorg/meteoroid/plugin/VirtualDevice$KeyEventListener;->onKey()Z"
    ],
    "Lorg/meteoroid/plugin/VirtualDevice$MotionEventListener;": [
        "Lorg/meteoroid/plugin/VirtualDevice$MotionEventListener;->onTouch()Z"
    ],
    "Lorg/meteoroid/core/MeteoroidActivity;": [
        "Lorg/meteoroid/core/MeteoroidActivity;->runOnUiThread()V",
        "Lorg/meteoroid/core/MeteoroidActivity;->getPackageManager()Landroid/content/pm/PackageManager;",
        "Lorg/meteoroid/core/MeteoroidActivity;->finish()V",
        "Lorg/meteoroid/core/MeteoroidActivity;->getWindow()Landroid/view/Window;",
        "Lorg/meteoroid/core/MeteoroidActivity;->getSystemService()Ljava/lang/Object;",
        "Lorg/meteoroid/core/MeteoroidActivity;->getText()Ljava/lang/CharSequence;",
        "Lorg/meteoroid/core/MeteoroidActivity;->killBackgroundProcess()V",
        "Lorg/meteoroid/core/MeteoroidActivity;->startActivity()V",
        "Lorg/meteoroid/core/MeteoroidActivity;->requestWindowFeature()Z",
        "Lorg/meteoroid/core/MeteoroidActivity;->showExit()V",
        "Lorg/meteoroid/core/MeteoroidActivity;->getPackageName()Ljava/lang/String;",
        "Lorg/meteoroid/core/MeteoroidActivity;->getNotificationManager()Landroid/app/NotificationManager;"
    ],
    "Landroid/view/inputmethod/InputMethodManager;": [
        "Landroid/view/inputmethod/InputMethodManager;->hideSoftInputFromWindow()Z"
    ],
    "Landroid/app/Notification;": [
        "Landroid/app/Notification;->setLatestEventInfo()V"
    ],
    "Ldalvik/system/VMRuntime;": [
        "Ldalvik/system/VMRuntime;->getRuntime()Ldalvik/system/VMRuntime;",
        "Ldalvik/system/VMRuntime;->setTargetHeapUtilization()F",
        "Ldalvik/system/VMRuntime;->setMinimumHeapSize()J"
    ],
    "Landroid/view/Window;": [
        "Landroid/view/Window;->setFlags()V"
    ],
    "Landroid/app/ActivityManager;": [
        "Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;"
    ],
    "Landroid/os/Process;": [
        "Landroid/os/Process;->myPid()I",
        "Landroid/os/Process;->killProcess()V"
    ],
    "Landroid/widget/Toast;": [
        "Landroid/widget/Toast;->makeText()Landroid/widget/Toast;",
        "Landroid/widget/Toast;->show()V"
    ],
    "Lorg/meteoroid/core/DeviceManager;": [
        "Lorg/meteoroid/core/DeviceManager;->loadDevice()Lorg/meteoroid/plugin/Device;"
    ],
    "Landroid/view/KeyEvent;": [
        "Landroid/view/KeyEvent;->getRepeatCount()I"
    ],
    "Landroid/app/AlertDialog$Builder;": [
        "Landroid/app/AlertDialog$Builder;->setMessage()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setPositiveButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setTitle()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setNegativeButton()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->setItems()Landroid/app/AlertDialog$Builder;",
        "Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;"
    ],
    "Landroid/app/AlertDialog;": [
        "Landroid/app/AlertDialog;->show()V"
    ],
    "Landroid/view/MenuItem;": [
        "Landroid/view/MenuItem;->getItemId()I"
    ],
    "Lorg/meteoroid/util/OptionMenuItem;": [
        "Lorg/meteoroid/util/OptionMenuItem;->onSelect()V",
        "Lorg/meteoroid/util/OptionMenuItem;->getStringId()I",
        "Lorg/meteoroid/util/OptionMenuItem;->getId()I"
    ],
    "Landroid/view/Menu;": [
        "Landroid/view/Menu;->add()Landroid/view/MenuItem;",
        "Landroid/view/Menu;->clear()V"
    ],
    "Lorg/meteoroid/core/MeteoroidView;": [
        "Lorg/meteoroid/core/MeteoroidView;->transRect()Landroid/graphics/Rect;",
        "Lorg/meteoroid/core/MeteoroidView;->setFocusableInTouchMode()V",
        "Lorg/meteoroid/core/MeteoroidView;->getHolder()Landroid/view/SurfaceHolder;",
        "Lorg/meteoroid/core/MeteoroidView;->setFocusable()V",
        "Lorg/meteoroid/core/MeteoroidView;->setLongClickable()V",
        "Lorg/meteoroid/core/MeteoroidView;->updateSurface()V"
    ],
    "Landroid/view/SurfaceHolder;": [
        "Landroid/view/SurfaceHolder;->unlockCanvasAndPost()V",
        "Landroid/view/SurfaceHolder;->lockCanvas()Landroid/graphics/Canvas;",
        "Landroid/view/SurfaceHolder;->setType()V",
        "Landroid/view/SurfaceHolder;->addCallback()V",
        "Landroid/view/SurfaceHolder;->removeCallback()V"
    ],
    "Landroid/view/SurfaceView;": [
        "Landroid/view/SurfaceView;->onDetachedFromWindow()V",
        "Landroid/view/SurfaceView;->onAttachedToWindow()V"
    ],
    "Lorg/meteoroid/core/MeteoroidApplication;": [
        "Lorg/meteoroid/core/MeteoroidApplication;->unbindService()V",
        "Lorg/meteoroid/core/MeteoroidApplication;->bindService()Z"
    ],
    "Lorg/meteoroid/plugin/Feature;": [
        "Lorg/meteoroid/plugin/Feature;->getName()Ljava/lang/String;",
        "Lorg/meteoroid/plugin/Feature;->onCreate()V",
        "Lorg/meteoroid/plugin/Feature;->onResume()V",
        "Lorg/meteoroid/plugin/Feature;->onStop()V",
        "Lorg/meteoroid/plugin/Feature;->onDestroy()V",
        "Lorg/meteoroid/plugin/Feature;->onEvent()V"
    ],
    "Ljava/util/Map;": [
        "Ljava/util/Map;->values()Ljava/util/Collection;",
        "Ljava/util/Map;->size()I",
        "Ljava/util/Map;->isEmpty()Z",
        "Ljava/util/Map;->get()Ljava/lang/Object;",
        "Ljava/util/Map;->put()Ljava/lang/Object;",
        "Ljava/util/Map;->keySet()Ljava/util/Set;"
    ],
    "Lorg/meteoroid/util/PlatformRequestListener;": [
        "Lorg/meteoroid/util/PlatformRequestListener;->platformRequest()Z"
    ],
    "Ljava/util/Collection;": [
        "Ljava/util/Collection;->toArray()[Ljava/lang/Object;"
    ]
}